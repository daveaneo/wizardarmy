{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name_",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol_",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_imageBaseURI",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "initiater",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "wizardId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "Initiated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "verifier",
          "type": "address"
        }
      ],
      "name": "NewBattler",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "battler",
          "type": "address"
        }
      ],
      "name": "NewVerifier",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "initiater",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "wizardId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newLevel",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "Rebirth",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "battler",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contractSettings",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "mintCost",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "initiationCost",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "maxSupply",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "protectionTimeExtension",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "ecosystemTokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "phaseDuration",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "totalPhases",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "rebirthFee",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "imageBaseURI",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "crush",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "imageURI",
          "type": "string"
        }
      ],
      "name": "formatTokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "getIsDeserted",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "getPhaseOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_wizardId",
          "type": "uint256"
        }
      ],
      "name": "getStatsGivenId",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "level",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "hp",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "magicalPower",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "magicalDefense",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "speed",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "wins",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "losses",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "battles",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tokensClaimed",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "goodness",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "badness",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "initiationTimestamp",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "protectedUntilTimestamp",
              "type": "uint256"
            },
            {
              "internalType": "enum Wizards.ELEMENT",
              "name": "element",
              "type": "uint8"
            }
          ],
          "internalType": "struct Wizards.Stats",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "initiate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_wizardId",
          "type": "uint256"
        }
      ],
      "name": "isActive",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_imageBaseURI",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_phaseDuration",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_protectionTimeExtension",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_mintCost",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_initiationCost",
          "type": "uint256"
        }
      ],
      "name": "modifyContractSettings",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "rebirth",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_attackerId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_defenderId",
          "type": "uint256"
        },
        {
          "internalType": "enum Wizards.OUTCOME",
          "name": "outcome",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "_tokensWon",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_tokensWaged",
          "type": "uint256"
        }
      ],
      "name": "reportBattle",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "tokenIdToStats",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "level",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "hp",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "magicalPower",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "magicalDefense",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "speed",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "wins",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "losses",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "battles",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "tokensClaimed",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "goodness",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "badness",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "initiationTimestamp",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "protectedUntilTimestamp",
          "type": "uint256"
        },
        {
          "internalType": "enum Wizards.ELEMENT",
          "name": "element",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_battler",
          "type": "address"
        }
      ],
      "name": "updateBattler",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_verifier",
          "type": "address"
        }
      ],
      "name": "updateVerifier",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "verifier",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_timeReward",
          "type": "uint256"
        }
      ],
      "name": "verifyDuty",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "12": "contracts/interfaces/IERC165.sol",
    "16": "contracts/interfaces/IERC721.sol",
    "17": "contracts/interfaces/IERC721Enumerable.sol",
    "18": "contracts/interfaces/IERC721Metadata.sol",
    "21": "contracts/libraries/Strings.sol",
    "22": "contracts/wizards.sol",
    "3": "contracts/helpers/Context.sol",
    "4": "contracts/helpers/ERC165.sol",
    "6": "contracts/helpers/ERC721.sol",
    "7": "contracts/helpers/ERC721Enumerable.sol",
    "8": "contracts/helpers/Ownable.sol"
  },
  "ast": {
    "absolutePath": "contracts/wizards.sol",
    "exportedSymbols": {
      "Address": [
        6030
      ],
      "Context": [
        4261
      ],
      "ERC165": [
        5689
      ],
      "ERC721": [
        5634
      ],
      "ERC721Enumerable": [
        4612
      ],
      "IERC165": [
        4273
      ],
      "IERC721": [
        3106
      ],
      "IERC721Enumerable": [
        5665
      ],
      "IERC721Metadata": [
        5716
      ],
      "IERC721Receiver": [
        5734
      ],
      "Ownable": [
        2877
      ],
      "Strings": [
        4815
      ],
      "Wizards": [
        4199
      ]
    },
    "id": 4200,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3108,
        "literals": [
          "solidity",
          "0.8",
          ".15"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:22"
      },
      {
        "absolutePath": "contracts/helpers/Ownable.sol",
        "file": "./helpers/Ownable.sol",
        "id": 3109,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4200,
        "sourceUnit": 2878,
        "src": "94:31:22",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/helpers/ERC721Enumerable.sol",
        "file": "./helpers/ERC721Enumerable.sol",
        "id": 3110,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4200,
        "sourceUnit": 4613,
        "src": "127:40:22",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/libraries/Strings.sol",
        "file": "./libraries/Strings.sol",
        "id": 3111,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4200,
        "sourceUnit": 4816,
        "src": "169:33:22",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 3112,
              "name": "ERC721Enumerable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4612,
              "src": "379:16:22"
            },
            "id": 3113,
            "nodeType": "InheritanceSpecifier",
            "src": "379:16:22"
          },
          {
            "baseName": {
              "id": 3114,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2877,
              "src": "397:7:22"
            },
            "id": 3115,
            "nodeType": "InheritanceSpecifier",
            "src": "397:7:22"
          }
        ],
        "canonicalName": "Wizards",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 4199,
        "linearizedBaseContracts": [
          4199,
          2877,
          4612,
          5665,
          5634,
          5716,
          3106,
          5689,
          4273,
          4261
        ],
        "name": "Wizards",
        "nameLocation": "368:7:22",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "c87bfc7f",
            "id": 3120,
            "mutability": "mutable",
            "name": "tokenIdToStats",
            "nameLocation": "527:14:22",
            "nodeType": "VariableDeclaration",
            "scope": 4199,
            "src": "493:48:22",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stats_$3165_storage_$",
              "typeString": "mapping(uint256 => struct Wizards.Stats)"
            },
            "typeName": {
              "id": 3119,
              "keyType": {
                "id": 3116,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "502:7:22",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "493:26:22",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stats_$3165_storage_$",
                "typeString": "mapping(uint256 => struct Wizards.Stats)"
              },
              "valueType": {
                "id": 3118,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 3117,
                  "name": "Stats",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3165,
                  "src": "513:5:22"
                },
                "referencedDeclaration": 3165,
                "src": "513:5:22",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Stats_$3165_storage_ptr",
                  "typeString": "struct Wizards.Stats"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "bc0b0d88",
            "id": 3122,
            "mutability": "mutable",
            "name": "battler",
            "nameLocation": "563:7:22",
            "nodeType": "VariableDeclaration",
            "scope": 4199,
            "src": "548:22:22",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 3121,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "548:7:22",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 3123,
              "nodeType": "StructuredDocumentation",
              "src": "572:36:22",
              "text": "contract address to update stats"
            },
            "functionSelector": "2b7ac3f3",
            "id": 3125,
            "mutability": "mutable",
            "name": "verifier",
            "nameLocation": "629:8:22",
            "nodeType": "VariableDeclaration",
            "scope": 4199,
            "src": "614:23:22",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 3124,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "614:7:22",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "Wizards.ELEMENT",
            "id": 3130,
            "members": [
              {
                "id": 3126,
                "name": "FIRE",
                "nameLocation": "697:4:22",
                "nodeType": "EnumValue",
                "src": "697:4:22"
              },
              {
                "id": 3127,
                "name": "WIND",
                "nameLocation": "703:4:22",
                "nodeType": "EnumValue",
                "src": "703:4:22"
              },
              {
                "id": 3128,
                "name": "WATER",
                "nameLocation": "709:5:22",
                "nodeType": "EnumValue",
                "src": "709:5:22"
              },
              {
                "id": 3129,
                "name": "EARTH",
                "nameLocation": "716:5:22",
                "nodeType": "EnumValue",
                "src": "716:5:22"
              }
            ],
            "name": "ELEMENT",
            "nameLocation": "688:7:22",
            "nodeType": "EnumDefinition",
            "src": "683:39:22"
          },
          {
            "canonicalName": "Wizards.OUTCOME",
            "id": 3135,
            "members": [
              {
                "id": 3131,
                "name": "LOSS",
                "nameLocation": "742:4:22",
                "nodeType": "EnumValue",
                "src": "742:4:22"
              },
              {
                "id": 3132,
                "name": "WIN",
                "nameLocation": "748:3:22",
                "nodeType": "EnumValue",
                "src": "748:3:22"
              },
              {
                "id": 3133,
                "name": "TIE",
                "nameLocation": "753:3:22",
                "nodeType": "EnumValue",
                "src": "753:3:22"
              },
              {
                "id": 3134,
                "name": "CAPTURE",
                "nameLocation": "758:7:22",
                "nodeType": "EnumValue",
                "src": "758:7:22"
              }
            ],
            "name": "OUTCOME",
            "nameLocation": "733:7:22",
            "nodeType": "EnumDefinition",
            "src": "728:38:22"
          },
          {
            "canonicalName": "Wizards.Stats",
            "id": 3165,
            "members": [
              {
                "constant": false,
                "id": 3137,
                "mutability": "mutable",
                "name": "level",
                "nameLocation": "884:5:22",
                "nodeType": "VariableDeclaration",
                "scope": 3165,
                "src": "876:13:22",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 3136,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "876:7:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 3139,
                "mutability": "mutable",
                "name": "hp",
                "nameLocation": "908:2:22",
                "nodeType": "VariableDeclaration",
                "scope": 3165,
                "src": "900:10:22",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 3138,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "900:7:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 3141,
                "mutability": "mutable",
                "name": "magicalPower",
                "nameLocation": "929:12:22",
                "nodeType": "VariableDeclaration",
                "scope": 3165,
                "src": "921:20:22",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 3140,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "921:7:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 3143,
                "mutability": "mutable",
                "name": "magicalDefense",
                "nameLocation": "960:14:22",
                "nodeType": "VariableDeclaration",
                "scope": 3165,
                "src": "952:22:22",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 3142,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "952:7:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 3145,
                "mutability": "mutable",
                "name": "speed",
                "nameLocation": "993:5:22",
                "nodeType": "VariableDeclaration",
                "scope": 3165,
                "src": "985:13:22",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 3144,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "985:7:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 3147,
                "mutability": "mutable",
                "name": "wins",
                "nameLocation": "1017:4:22",
                "nodeType": "VariableDeclaration",
                "scope": 3165,
                "src": "1009:12:22",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 3146,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1009:7:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 3149,
                "mutability": "mutable",
                "name": "losses",
                "nameLocation": "1040:6:22",
                "nodeType": "VariableDeclaration",
                "scope": 3165,
                "src": "1032:14:22",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 3148,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1032:7:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 3151,
                "mutability": "mutable",
                "name": "battles",
                "nameLocation": "1065:7:22",
                "nodeType": "VariableDeclaration",
                "scope": 3165,
                "src": "1057:15:22",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 3150,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1057:7:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 3153,
                "mutability": "mutable",
                "name": "tokensClaimed",
                "nameLocation": "1091:13:22",
                "nodeType": "VariableDeclaration",
                "scope": 3165,
                "src": "1083:21:22",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 3152,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1083:7:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 3155,
                "mutability": "mutable",
                "name": "goodness",
                "nameLocation": "1123:8:22",
                "nodeType": "VariableDeclaration",
                "scope": 3165,
                "src": "1115:16:22",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 3154,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1115:7:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 3157,
                "mutability": "mutable",
                "name": "badness",
                "nameLocation": "1150:7:22",
                "nodeType": "VariableDeclaration",
                "scope": 3165,
                "src": "1142:15:22",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 3156,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1142:7:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 3159,
                "mutability": "mutable",
                "name": "initiationTimestamp",
                "nameLocation": "1176:19:22",
                "nodeType": "VariableDeclaration",
                "scope": 3165,
                "src": "1168:27:22",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 3158,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1168:7:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 3161,
                "mutability": "mutable",
                "name": "protectedUntilTimestamp",
                "nameLocation": "1234:23:22",
                "nodeType": "VariableDeclaration",
                "scope": 3165,
                "src": "1226:31:22",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 3160,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1226:7:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 3164,
                "mutability": "mutable",
                "name": "element",
                "nameLocation": "1320:7:22",
                "nodeType": "VariableDeclaration",
                "scope": 3165,
                "src": "1312:15:22",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_ELEMENT_$3130",
                  "typeString": "enum Wizards.ELEMENT"
                },
                "typeName": {
                  "id": 3163,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 3162,
                    "name": "ELEMENT",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 3130,
                    "src": "1312:7:22"
                  },
                  "referencedDeclaration": 3130,
                  "src": "1312:7:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_ELEMENT_$3130",
                    "typeString": "enum Wizards.ELEMENT"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Stats",
            "nameLocation": "829:5:22",
            "nodeType": "StructDefinition",
            "scope": 4199,
            "src": "822:513:22",
            "visibility": "public"
          },
          {
            "canonicalName": "Wizards.ContractSettings",
            "id": 3184,
            "members": [
              {
                "constant": false,
                "id": 3167,
                "mutability": "mutable",
                "name": "mintCost",
                "nameLocation": "1401:8:22",
                "nodeType": "VariableDeclaration",
                "scope": 3184,
                "src": "1393:16:22",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 3166,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1393:7:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 3169,
                "mutability": "mutable",
                "name": "initiationCost",
                "nameLocation": "1428:14:22",
                "nodeType": "VariableDeclaration",
                "scope": 3184,
                "src": "1420:22:22",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 3168,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1420:7:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 3171,
                "mutability": "mutable",
                "name": "maxSupply",
                "nameLocation": "1461:9:22",
                "nodeType": "VariableDeclaration",
                "scope": 3184,
                "src": "1453:17:22",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 3170,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1453:7:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 3173,
                "mutability": "mutable",
                "name": "protectionTimeExtension",
                "nameLocation": "1489:23:22",
                "nodeType": "VariableDeclaration",
                "scope": 3184,
                "src": "1481:31:22",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 3172,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1481:7:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 3175,
                "mutability": "mutable",
                "name": "ecosystemTokenAddress",
                "nameLocation": "1531:21:22",
                "nodeType": "VariableDeclaration",
                "scope": 3184,
                "src": "1523:29:22",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 3174,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1523:7:22",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 3177,
                "mutability": "mutable",
                "name": "phaseDuration",
                "nameLocation": "1571:13:22",
                "nodeType": "VariableDeclaration",
                "scope": 3184,
                "src": "1563:21:22",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 3176,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1563:7:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 3179,
                "mutability": "mutable",
                "name": "totalPhases",
                "nameLocation": "1603:11:22",
                "nodeType": "VariableDeclaration",
                "scope": 3184,
                "src": "1595:19:22",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 3178,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1595:7:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 3181,
                "mutability": "mutable",
                "name": "rebirthFee",
                "nameLocation": "1633:10:22",
                "nodeType": "VariableDeclaration",
                "scope": 3184,
                "src": "1625:18:22",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 3180,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1625:7:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 3183,
                "mutability": "mutable",
                "name": "imageBaseURI",
                "nameLocation": "1661:12:22",
                "nodeType": "VariableDeclaration",
                "scope": 3184,
                "src": "1654:19:22",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 3182,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "1654:6:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "ContractSettings",
            "nameLocation": "1350:16:22",
            "nodeType": "StructDefinition",
            "scope": 4199,
            "src": "1343:338:22",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "db2a0a55",
            "id": 3187,
            "mutability": "mutable",
            "name": "contractSettings",
            "nameLocation": "1713:16:22",
            "nodeType": "VariableDeclaration",
            "scope": 4199,
            "src": "1689:40:22",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_ContractSettings_$3184_storage",
              "typeString": "struct Wizards.ContractSettings"
            },
            "typeName": {
              "id": 3186,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 3185,
                "name": "ContractSettings",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 3184,
                "src": "1689:16:22"
              },
              "referencedDeclaration": 3184,
              "src": "1689:16:22",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_ContractSettings_$3184_storage_ptr",
                "typeString": "struct Wizards.ContractSettings"
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "eventSelector": "a1fd6a6669acb930bae242943bb9fa08ddcba665c707261e9730ee0305fb85e5",
            "id": 3191,
            "name": "NewVerifier",
            "nameLocation": "1801:11:22",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 3190,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3189,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "battler",
                  "nameLocation": "1821:7:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 3191,
                  "src": "1813:15:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3188,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1813:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1812:17:22"
            },
            "src": "1795:35:22"
          },
          {
            "anonymous": false,
            "eventSelector": "a6996d36756222f1028b4a1a97cbfa625158cf8e69ac5dcf367de3bd730d34a4",
            "id": 3195,
            "name": "NewBattler",
            "nameLocation": "1842:10:22",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 3194,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3193,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "verifier",
                  "nameLocation": "1861:8:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 3195,
                  "src": "1853:16:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3192,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1853:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1852:18:22"
            },
            "src": "1836:35:22"
          },
          {
            "anonymous": false,
            "eventSelector": "1782b66bbe30900ee88feab2f2cd676d136386cc51cdf73f6cae8b1da253ddf7",
            "id": 3203,
            "name": "Initiated",
            "nameLocation": "1883:9:22",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 3202,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3197,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "initiater",
                  "nameLocation": "1901:9:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 3203,
                  "src": "1893:17:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3196,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1893:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3199,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "wizardId",
                  "nameLocation": "1928:8:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 3203,
                  "src": "1912:24:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3198,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1912:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3201,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "timestamp",
                  "nameLocation": "1946:9:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 3203,
                  "src": "1938:17:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3200,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1938:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1892:64:22"
            },
            "src": "1877:80:22"
          },
          {
            "anonymous": false,
            "eventSelector": "b77df37c5c38b010d57710ffa0bf2bbcbdda02f986c30d708810f5c6b3409631",
            "id": 3213,
            "name": "Rebirth",
            "nameLocation": "1969:7:22",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 3212,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3205,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "initiater",
                  "nameLocation": "1985:9:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 3213,
                  "src": "1977:17:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3204,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1977:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3207,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "wizardId",
                  "nameLocation": "2012:8:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 3213,
                  "src": "1996:24:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3206,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1996:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3209,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "newLevel",
                  "nameLocation": "2030:8:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 3213,
                  "src": "2022:16:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3208,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2022:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3211,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "timestamp",
                  "nameLocation": "2048:9:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 3213,
                  "src": "2040:17:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3210,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2040:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1976:82:22"
            },
            "src": "1963:96:22"
          },
          {
            "body": {
              "id": 3228,
              "nodeType": "Block",
              "src": "2210:93:22",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3226,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 3220,
                          "name": "tokenIdToStats",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3120,
                          "src": "2228:14:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stats_$3165_storage_$",
                            "typeString": "mapping(uint256 => struct Wizards.Stats storage ref)"
                          }
                        },
                        "id": 3222,
                        "indexExpression": {
                          "id": 3221,
                          "name": "_wizardId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3215,
                          "src": "2243:9:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2228:25:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stats_$3165_storage",
                          "typeString": "struct Wizards.Stats storage ref"
                        }
                      },
                      "id": 3223,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "protectedUntilTimestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3161,
                      "src": "2228:49:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "expression": {
                        "id": 3224,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "2280:5:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 3225,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "2280:15:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2228:67:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 3219,
                  "id": 3227,
                  "nodeType": "Return",
                  "src": "2221:74:22"
                }
              ]
            },
            "functionSelector": "82afd23b",
            "id": 3229,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isActive",
            "nameLocation": "2156:8:22",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3216,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3215,
                  "mutability": "mutable",
                  "name": "_wizardId",
                  "nameLocation": "2173:9:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 3229,
                  "src": "2165:17:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3214,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2165:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2164:19:22"
            },
            "returnParameters": {
              "id": 3219,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3218,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3229,
                  "src": "2204:4:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3217,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2204:4:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2203:6:22"
            },
            "scope": 4199,
            "src": "2147:156:22",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3302,
              "nodeType": "Block",
              "src": "2920:577:22",
              "statements": [
                {
                  "assignments": [
                    3238
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3238,
                      "mutability": "mutable",
                      "name": "myPhase",
                      "nameLocation": "2939:7:22",
                      "nodeType": "VariableDeclaration",
                      "scope": 3302,
                      "src": "2931:15:22",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3237,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2931:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3244,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3243,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 3240,
                          "name": "_wizardId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3231,
                          "src": "2960:9:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 3239,
                        "name": "getPhaseOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3777,
                        "src": "2949:10:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256) view returns (uint256)"
                        }
                      },
                      "id": 3241,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2949:21:22",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 3242,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2973:1:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "2949:25:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2931:43:22"
                },
                {
                  "assignments": [
                    3247
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3247,
                      "mutability": "mutable",
                      "name": "myStats",
                      "nameLocation": "3032:7:22",
                      "nodeType": "VariableDeclaration",
                      "scope": 3302,
                      "src": "3019:20:22",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stats_$3165_memory_ptr",
                        "typeString": "struct Wizards.Stats"
                      },
                      "typeName": {
                        "id": 3246,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 3245,
                          "name": "Stats",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3165,
                          "src": "3019:5:22"
                        },
                        "referencedDeclaration": 3165,
                        "src": "3019:5:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stats_$3165_storage_ptr",
                          "typeString": "struct Wizards.Stats"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3251,
                  "initialValue": {
                    "baseExpression": {
                      "id": 3248,
                      "name": "tokenIdToStats",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3120,
                      "src": "3042:14:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stats_$3165_storage_$",
                        "typeString": "mapping(uint256 => struct Wizards.Stats storage ref)"
                      }
                    },
                    "id": 3250,
                    "indexExpression": {
                      "id": 3249,
                      "name": "_wizardId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3231,
                      "src": "3057:9:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3042:25:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Stats_$3165_storage",
                      "typeString": "struct Wizards.Stats storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3019:48:22"
                },
                {
                  "expression": {
                    "id": 3262,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 3252,
                        "name": "myStats",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3247,
                        "src": "3078:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stats_$3165_memory_ptr",
                          "typeString": "struct Wizards.Stats memory"
                        }
                      },
                      "id": 3254,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "hp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3139,
                      "src": "3078:10:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 3261,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3258,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 3255,
                            "name": "myStats",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3247,
                            "src": "3091:7:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Stats_$3165_memory_ptr",
                              "typeString": "struct Wizards.Stats memory"
                            }
                          },
                          "id": 3256,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "hp",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3139,
                          "src": "3091:10:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "id": 3257,
                          "name": "myPhase",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3238,
                          "src": "3104:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3091:20:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "/",
                      "rightExpression": {
                        "expression": {
                          "id": 3259,
                          "name": "contractSettings",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3187,
                          "src": "3114:16:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ContractSettings_$3184_storage",
                            "typeString": "struct Wizards.ContractSettings storage ref"
                          }
                        },
                        "id": 3260,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "totalPhases",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3179,
                        "src": "3114:28:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "3091:51:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3078:64:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3263,
                  "nodeType": "ExpressionStatement",
                  "src": "3078:64:22"
                },
                {
                  "expression": {
                    "id": 3274,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 3264,
                        "name": "myStats",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3247,
                        "src": "3153:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stats_$3165_memory_ptr",
                          "typeString": "struct Wizards.Stats memory"
                        }
                      },
                      "id": 3266,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "magicalPower",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3141,
                      "src": "3153:20:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 3273,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3270,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 3267,
                            "name": "myStats",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3247,
                            "src": "3176:7:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Stats_$3165_memory_ptr",
                              "typeString": "struct Wizards.Stats memory"
                            }
                          },
                          "id": 3268,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "magicalPower",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3141,
                          "src": "3176:20:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "id": 3269,
                          "name": "myPhase",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3238,
                          "src": "3199:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3176:30:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "/",
                      "rightExpression": {
                        "expression": {
                          "id": 3271,
                          "name": "contractSettings",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3187,
                          "src": "3209:16:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ContractSettings_$3184_storage",
                            "typeString": "struct Wizards.ContractSettings storage ref"
                          }
                        },
                        "id": 3272,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "totalPhases",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3179,
                        "src": "3209:28:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "3176:61:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3153:84:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3275,
                  "nodeType": "ExpressionStatement",
                  "src": "3153:84:22"
                },
                {
                  "expression": {
                    "id": 3286,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 3276,
                        "name": "myStats",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3247,
                        "src": "3248:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stats_$3165_memory_ptr",
                          "typeString": "struct Wizards.Stats memory"
                        }
                      },
                      "id": 3278,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "magicalDefense",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3143,
                      "src": "3248:22:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 3285,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3282,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 3279,
                            "name": "myStats",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3247,
                            "src": "3273:7:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Stats_$3165_memory_ptr",
                              "typeString": "struct Wizards.Stats memory"
                            }
                          },
                          "id": 3280,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "magicalDefense",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3143,
                          "src": "3273:22:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "id": 3281,
                          "name": "myPhase",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3238,
                          "src": "3298:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3273:32:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "/",
                      "rightExpression": {
                        "expression": {
                          "id": 3283,
                          "name": "contractSettings",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3187,
                          "src": "3308:16:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ContractSettings_$3184_storage",
                            "typeString": "struct Wizards.ContractSettings storage ref"
                          }
                        },
                        "id": 3284,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "totalPhases",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3179,
                        "src": "3308:28:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "3273:63:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3248:88:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3287,
                  "nodeType": "ExpressionStatement",
                  "src": "3248:88:22"
                },
                {
                  "expression": {
                    "id": 3298,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 3288,
                        "name": "myStats",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3247,
                        "src": "3347:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stats_$3165_memory_ptr",
                          "typeString": "struct Wizards.Stats memory"
                        }
                      },
                      "id": 3290,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "speed",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3145,
                      "src": "3347:13:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 3297,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3294,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 3291,
                            "name": "myStats",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3247,
                            "src": "3363:7:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Stats_$3165_memory_ptr",
                              "typeString": "struct Wizards.Stats memory"
                            }
                          },
                          "id": 3292,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "speed",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3145,
                          "src": "3363:13:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "id": 3293,
                          "name": "myPhase",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3238,
                          "src": "3379:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3363:23:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "/",
                      "rightExpression": {
                        "expression": {
                          "id": 3295,
                          "name": "contractSettings",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3187,
                          "src": "3389:16:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ContractSettings_$3184_storage",
                            "typeString": "struct Wizards.ContractSettings storage ref"
                          }
                        },
                        "id": 3296,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "totalPhases",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3179,
                        "src": "3389:28:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "3363:54:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3347:70:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3299,
                  "nodeType": "ExpressionStatement",
                  "src": "3347:70:22"
                },
                {
                  "expression": {
                    "id": 3300,
                    "name": "myStats",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3247,
                    "src": "3482:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Stats_$3165_memory_ptr",
                      "typeString": "struct Wizards.Stats memory"
                    }
                  },
                  "functionReturnParameters": 3236,
                  "id": 3301,
                  "nodeType": "Return",
                  "src": "3475:14:22"
                }
              ]
            },
            "functionSelector": "8cb22518",
            "id": 3303,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getStatsGivenId",
            "nameLocation": "2849:15:22",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3232,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3231,
                  "mutability": "mutable",
                  "name": "_wizardId",
                  "nameLocation": "2873:9:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 3303,
                  "src": "2865:17:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3230,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2865:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2864:19:22"
            },
            "returnParameters": {
              "id": 3236,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3235,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3303,
                  "src": "2906:12:22",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Stats_$3165_memory_ptr",
                    "typeString": "struct Wizards.Stats"
                  },
                  "typeName": {
                    "id": 3234,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 3233,
                      "name": "Stats",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3165,
                      "src": "2906:5:22"
                    },
                    "referencedDeclaration": 3165,
                    "src": "2906:5:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Stats_$3165_storage_ptr",
                      "typeString": "struct Wizards.Stats"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2905:14:22"
            },
            "scope": 4199,
            "src": "2840:657:22",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3374,
              "nodeType": "Block",
              "src": "3732:553:22",
              "statements": [
                {
                  "expression": {
                    "id": 3322,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 3318,
                        "name": "contractSettings",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3187,
                        "src": "3743:16:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ContractSettings_$3184_storage",
                          "typeString": "struct Wizards.ContractSettings storage ref"
                        }
                      },
                      "id": 3320,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "maxSupply",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3171,
                      "src": "3743:26:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "3130303030",
                      "id": 3321,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3772:5:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10000_by_1",
                        "typeString": "int_const 10000"
                      },
                      "value": "10000"
                    },
                    "src": "3743:34:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3323,
                  "nodeType": "ExpressionStatement",
                  "src": "3743:34:22"
                },
                {
                  "expression": {
                    "id": 3328,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 3324,
                        "name": "contractSettings",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3187,
                        "src": "3788:16:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ContractSettings_$3184_storage",
                          "typeString": "struct Wizards.ContractSettings storage ref"
                        }
                      },
                      "id": 3326,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "initiationCost",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3169,
                      "src": "3788:31:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 3327,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3822:1:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "3788:35:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3329,
                  "nodeType": "ExpressionStatement",
                  "src": "3788:35:22"
                },
                {
                  "expression": {
                    "id": 3334,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 3330,
                        "name": "contractSettings",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3187,
                        "src": "3834:16:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ContractSettings_$3184_storage",
                          "typeString": "struct Wizards.ContractSettings storage ref"
                        }
                      },
                      "id": 3332,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "mintCost",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3167,
                      "src": "3834:25:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "35",
                      "id": 3333,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3862:1:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_5_by_1",
                        "typeString": "int_const 5"
                      },
                      "value": "5"
                    },
                    "src": "3834:29:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3335,
                  "nodeType": "ExpressionStatement",
                  "src": "3834:29:22"
                },
                {
                  "expression": {
                    "id": 3340,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 3336,
                        "name": "contractSettings",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3187,
                        "src": "3902:16:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ContractSettings_$3184_storage",
                          "typeString": "struct Wizards.ContractSettings storage ref"
                        }
                      },
                      "id": 3338,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "protectionTimeExtension",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3173,
                      "src": "3902:40:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 3339,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3945:6:22",
                      "subdenomination": "days",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_86400_by_1",
                        "typeString": "int_const 86400"
                      },
                      "value": "1"
                    },
                    "src": "3902:49:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3341,
                  "nodeType": "ExpressionStatement",
                  "src": "3902:49:22"
                },
                {
                  "expression": {
                    "id": 3346,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 3342,
                        "name": "contractSettings",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3187,
                        "src": "3990:16:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ContractSettings_$3184_storage",
                          "typeString": "struct Wizards.ContractSettings storage ref"
                        }
                      },
                      "id": 3344,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "ecosystemTokenAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3175,
                      "src": "3990:38:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3345,
                      "name": "_address",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3309,
                      "src": "4031:8:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3990:49:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3347,
                  "nodeType": "ExpressionStatement",
                  "src": "3990:49:22"
                },
                {
                  "expression": {
                    "id": 3354,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 3348,
                        "name": "contractSettings",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3187,
                        "src": "4078:16:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ContractSettings_$3184_storage",
                          "typeString": "struct Wizards.ContractSettings storage ref"
                        }
                      },
                      "id": 3350,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "phaseDuration",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3177,
                      "src": "4078:30:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_rational_3600_by_1",
                        "typeString": "int_const 3600"
                      },
                      "id": 3353,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "leftExpression": {
                        "hexValue": "3630",
                        "id": 3351,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4111:2:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_60_by_1",
                          "typeString": "int_const 60"
                        },
                        "value": "60"
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "hexValue": "3630",
                        "id": 3352,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4114:2:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_60_by_1",
                          "typeString": "int_const 60"
                        },
                        "value": "60"
                      },
                      "src": "4111:5:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_3600_by_1",
                        "typeString": "int_const 3600"
                      }
                    },
                    "src": "4078:38:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3355,
                  "nodeType": "ExpressionStatement",
                  "src": "4078:38:22"
                },
                {
                  "expression": {
                    "id": 3360,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 3356,
                        "name": "contractSettings",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3187,
                        "src": "4137:16:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ContractSettings_$3184_storage",
                          "typeString": "struct Wizards.ContractSettings storage ref"
                        }
                      },
                      "id": 3358,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "imageBaseURI",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3183,
                      "src": "4137:29:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3359,
                      "name": "_imageBaseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3311,
                      "src": "4169:13:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "4137:45:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 3361,
                  "nodeType": "ExpressionStatement",
                  "src": "4137:45:22"
                },
                {
                  "expression": {
                    "id": 3366,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 3362,
                        "name": "contractSettings",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3187,
                        "src": "4203:16:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ContractSettings_$3184_storage",
                          "typeString": "struct Wizards.ContractSettings storage ref"
                        }
                      },
                      "id": 3364,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "totalPhases",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3179,
                      "src": "4203:28:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "38",
                      "id": 3365,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4234:1:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_8_by_1",
                        "typeString": "int_const 8"
                      },
                      "value": "8"
                    },
                    "src": "4203:32:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3367,
                  "nodeType": "ExpressionStatement",
                  "src": "4203:32:22"
                },
                {
                  "expression": {
                    "id": 3372,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 3368,
                        "name": "contractSettings",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3187,
                        "src": "4246:16:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ContractSettings_$3184_storage",
                          "typeString": "struct Wizards.ContractSettings storage ref"
                        }
                      },
                      "id": 3370,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "rebirthFee",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3181,
                      "src": "4246:27:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "35",
                      "id": 3371,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4276:1:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_5_by_1",
                        "typeString": "int_const 5"
                      },
                      "value": "5"
                    },
                    "src": "4246:31:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3373,
                  "nodeType": "ExpressionStatement",
                  "src": "4246:31:22"
                }
              ]
            },
            "id": 3375,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 3314,
                    "name": "name_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3305,
                    "src": "3716:5:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 3315,
                    "name": "symbol_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3307,
                    "src": "3723:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 3316,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 3313,
                  "name": "ERC721",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 5634,
                  "src": "3709:6:22"
                },
                "nodeType": "ModifierInvocation",
                "src": "3709:22:22"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3312,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3305,
                  "mutability": "mutable",
                  "name": "name_",
                  "nameLocation": "3632:5:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 3375,
                  "src": "3618:19:22",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3304,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3618:6:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3307,
                  "mutability": "mutable",
                  "name": "symbol_",
                  "nameLocation": "3653:7:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 3375,
                  "src": "3639:21:22",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3306,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3639:6:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3309,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "3670:8:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 3375,
                  "src": "3662:16:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3308,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3662:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3311,
                  "mutability": "mutable",
                  "name": "_imageBaseURI",
                  "nameLocation": "3694:13:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 3375,
                  "src": "3680:27:22",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3310,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3680:6:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3617:91:22"
            },
            "returnParameters": {
              "id": 3317,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3732:0:22"
            },
            "scope": 4199,
            "src": "3606:679:22",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3501,
              "nodeType": "Block",
              "src": "4318:961:22",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3383,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 3379,
                            "name": "totalSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4363,
                            "src": "4337:11:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 3380,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4337:13:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "expression": {
                            "id": 3381,
                            "name": "contractSettings",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3187,
                            "src": "4353:16:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ContractSettings_$3184_storage",
                              "typeString": "struct Wizards.ContractSettings storage ref"
                            }
                          },
                          "id": 3382,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "maxSupply",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3171,
                          "src": "4353:26:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4337:42:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6174206d617820737570706c792e",
                        "id": 3384,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4381:16:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b9376e2f2e87a49b7ae10260ddb6302ef29cf19694dabac7460cf68c4d37bf71",
                          "typeString": "literal_string \"at max supply.\""
                        },
                        "value": "at max supply."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b9376e2f2e87a49b7ae10260ddb6302ef29cf19694dabac7460cf68c4d37bf71",
                          "typeString": "literal_string \"at max supply.\""
                        }
                      ],
                      "id": 3378,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4329:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3385,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4329:69:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3386,
                  "nodeType": "ExpressionStatement",
                  "src": "4329:69:22"
                },
                {
                  "assignments": [
                    3388
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3388,
                      "mutability": "mutable",
                      "name": "pseudoRandNum",
                      "nameLocation": "4524:13:22",
                      "nodeType": "VariableDeclaration",
                      "scope": 3501,
                      "src": "4516:21:22",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3387,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4516:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3403,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 3394,
                                  "name": "totalSupply",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4363,
                                  "src": "4575:11:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                    "typeString": "function () view returns (uint256)"
                                  }
                                },
                                "id": 3395,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4575:13:22",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "expression": {
                                  "id": 3396,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "4590:3:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 3397,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "4590:10:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "expression": {
                                  "id": 3398,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "4602:5:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 3399,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "4602:15:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 3392,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "4558:3:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 3393,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "src": "4558:16:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 3400,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4558:60:22",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 3391,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "4548:9:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 3401,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4548:71:22",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 3390,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "4540:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint256_$",
                        "typeString": "type(uint256)"
                      },
                      "typeName": {
                        "id": 3389,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4540:7:22",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 3402,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4540:80:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4516:104:22"
                },
                {
                  "assignments": [
                    3405
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3405,
                      "mutability": "mutable",
                      "name": "hp",
                      "nameLocation": "4753:2:22",
                      "nodeType": "VariableDeclaration",
                      "scope": 3501,
                      "src": "4745:10:22",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3404,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4745:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3411,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3410,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "hexValue": "3235",
                      "id": 3406,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4758:2:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_25_by_1",
                        "typeString": "int_const 25"
                      },
                      "value": "25"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 3409,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 3407,
                        "name": "pseudoRandNum",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3388,
                        "src": "4763:13:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "%",
                      "rightExpression": {
                        "hexValue": "3236",
                        "id": 3408,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4779:2:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_26_by_1",
                          "typeString": "int_const 26"
                        },
                        "value": "26"
                      },
                      "src": "4763:18:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4758:23:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4745:36:22"
                },
                {
                  "assignments": [
                    3413
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3413,
                      "mutability": "mutable",
                      "name": "magicalPower",
                      "nameLocation": "4800:12:22",
                      "nodeType": "VariableDeclaration",
                      "scope": 3501,
                      "src": "4792:20:22",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3412,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4792:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3422,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3421,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "hexValue": "3235",
                      "id": 3414,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4815:2:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_25_by_1",
                        "typeString": "int_const 25"
                      },
                      "value": "25"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 3420,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 3417,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 3415,
                              "name": "pseudoRandNum",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3388,
                              "src": "4821:13:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "hexValue": "313030",
                              "id": 3416,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4835:3:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_100_by_1",
                                "typeString": "int_const 100"
                              },
                              "value": "100"
                            },
                            "src": "4821:17:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 3418,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "4820:19:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "%",
                      "rightExpression": {
                        "hexValue": "3236",
                        "id": 3419,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4842:2:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_26_by_1",
                          "typeString": "int_const 26"
                        },
                        "value": "26"
                      },
                      "src": "4820:24:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4815:29:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4792:52:22"
                },
                {
                  "assignments": [
                    3424
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3424,
                      "mutability": "mutable",
                      "name": "magicalDefense",
                      "nameLocation": "4863:14:22",
                      "nodeType": "VariableDeclaration",
                      "scope": 3501,
                      "src": "4855:22:22",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3423,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4855:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3435,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3434,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "hexValue": "3130",
                      "id": 3425,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4880:2:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10_by_1",
                        "typeString": "int_const 10"
                      },
                      "value": "10"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 3433,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 3430,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 3428,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 3426,
                                "name": "pseudoRandNum",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3388,
                                "src": "4886:13:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "/",
                              "rightExpression": {
                                "hexValue": "3130",
                                "id": 3427,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4900:2:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                },
                                "value": "10"
                              },
                              "src": "4886:16:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "hexValue": "34",
                              "id": 3429,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4903:1:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_4_by_1",
                                "typeString": "int_const 4"
                              },
                              "value": "4"
                            },
                            "src": "4886:18:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 3431,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "4885:20:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "%",
                      "rightExpression": {
                        "hexValue": "3130",
                        "id": 3432,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4908:2:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      },
                      "src": "4885:25:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4880:30:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4855:55:22"
                },
                {
                  "assignments": [
                    3437
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3437,
                      "mutability": "mutable",
                      "name": "speed",
                      "nameLocation": "4929:5:22",
                      "nodeType": "VariableDeclaration",
                      "scope": 3501,
                      "src": "4921:13:22",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3436,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4921:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3448,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3447,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "hexValue": "3130",
                      "id": 3438,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4937:2:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10_by_1",
                        "typeString": "int_const 10"
                      },
                      "value": "10"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 3446,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 3443,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 3441,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 3439,
                                "name": "pseudoRandNum",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3388,
                                "src": "4943:13:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "/",
                              "rightExpression": {
                                "hexValue": "3130",
                                "id": 3440,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4957:2:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                },
                                "value": "10"
                              },
                              "src": "4943:16:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "hexValue": "35",
                              "id": 3442,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4960:1:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_5_by_1",
                                "typeString": "int_const 5"
                              },
                              "value": "5"
                            },
                            "src": "4943:18:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 3444,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "4942:20:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "%",
                      "rightExpression": {
                        "hexValue": "3130",
                        "id": 3445,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4965:2:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      },
                      "src": "4942:25:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4937:30:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4921:46:22"
                },
                {
                  "assignments": [
                    3451
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3451,
                      "mutability": "mutable",
                      "name": "element",
                      "nameLocation": "4986:7:22",
                      "nodeType": "VariableDeclaration",
                      "scope": 3501,
                      "src": "4978:15:22",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ELEMENT_$3130",
                        "typeString": "enum Wizards.ELEMENT"
                      },
                      "typeName": {
                        "id": 3450,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 3449,
                          "name": "ELEMENT",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3130,
                          "src": "4978:7:22"
                        },
                        "referencedDeclaration": 3130,
                        "src": "4978:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_ELEMENT_$3130",
                          "typeString": "enum Wizards.ELEMENT"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3462,
                  "initialValue": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3460,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 3457,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 3455,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 3453,
                                  "name": "pseudoRandNum",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3388,
                                  "src": "5005:13:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "/",
                                "rightExpression": {
                                  "hexValue": "3130",
                                  "id": 3454,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "5019:2:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_10_by_1",
                                    "typeString": "int_const 10"
                                  },
                                  "value": "10"
                                },
                                "src": "5005:16:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "hexValue": "36",
                                "id": 3456,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5022:1:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_6_by_1",
                                  "typeString": "int_const 6"
                                },
                                "value": "6"
                              },
                              "src": "5005:18:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 3458,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "5004:20:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "%",
                        "rightExpression": {
                          "hexValue": "34",
                          "id": 3459,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5027:1:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_4_by_1",
                            "typeString": "int_const 4"
                          },
                          "value": "4"
                        },
                        "src": "5004:24:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3452,
                      "name": "ELEMENT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3130,
                      "src": "4996:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_enum$_ELEMENT_$3130_$",
                        "typeString": "type(enum Wizards.ELEMENT)"
                      }
                    },
                    "id": 3461,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4996:33:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ELEMENT_$3130",
                      "typeString": "enum Wizards.ELEMENT"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4978:51:22"
                },
                {
                  "assignments": [
                    3465
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3465,
                      "mutability": "mutable",
                      "name": "myStats",
                      "nameLocation": "5055:7:22",
                      "nodeType": "VariableDeclaration",
                      "scope": 3501,
                      "src": "5042:20:22",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stats_$3165_memory_ptr",
                        "typeString": "struct Wizards.Stats"
                      },
                      "typeName": {
                        "id": 3464,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 3463,
                          "name": "Stats",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3165,
                          "src": "5042:5:22"
                        },
                        "referencedDeclaration": 3165,
                        "src": "5042:5:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stats_$3165_storage_ptr",
                          "typeString": "struct Wizards.Stats"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3482,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 3467,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5072:1:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "id": 3468,
                        "name": "hp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3405,
                        "src": "5075:2:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 3469,
                        "name": "magicalPower",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3413,
                        "src": "5079:12:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 3470,
                        "name": "magicalDefense",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3424,
                        "src": "5093:14:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 3471,
                        "name": "speed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3437,
                        "src": "5109:5:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 3472,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5116:1:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 3473,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5119:1:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 3474,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5122:1:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 3475,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5125:1:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 3476,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5128:1:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 3477,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5131:1:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 3478,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5134:1:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 3479,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5137:1:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "id": 3480,
                        "name": "element",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3451,
                        "src": "5140:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_ELEMENT_$3130",
                          "typeString": "enum Wizards.ELEMENT"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_enum$_ELEMENT_$3130",
                          "typeString": "enum Wizards.ELEMENT"
                        }
                      ],
                      "id": 3466,
                      "name": "Stats",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3165,
                      "src": "5066:5:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_Stats_$3165_storage_ptr_$",
                        "typeString": "type(struct Wizards.Stats storage pointer)"
                      }
                    },
                    "id": 3481,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5066:82:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Stats_$3165_memory_ptr",
                      "typeString": "struct Wizards.Stats memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5042:106:22"
                },
                {
                  "expression": {
                    "id": 3490,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 3483,
                        "name": "tokenIdToStats",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3120,
                        "src": "5159:14:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stats_$3165_storage_$",
                          "typeString": "mapping(uint256 => struct Wizards.Stats storage ref)"
                        }
                      },
                      "id": 3488,
                      "indexExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3487,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 3484,
                            "name": "totalSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4363,
                            "src": "5174:11:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 3485,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5174:13:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 3486,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5188:1:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "5174:15:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5159:31:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stats_$3165_storage",
                        "typeString": "struct Wizards.Stats storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3489,
                      "name": "myStats",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3465,
                      "src": "5193:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stats_$3165_memory_ptr",
                        "typeString": "struct Wizards.Stats memory"
                      }
                    },
                    "src": "5159:41:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Stats_$3165_storage",
                      "typeString": "struct Wizards.Stats storage ref"
                    }
                  },
                  "id": 3491,
                  "nodeType": "ExpressionStatement",
                  "src": "5159:41:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 3493,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5221:3:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3494,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5221:10:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3498,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 3495,
                            "name": "totalSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4363,
                            "src": "5233:11:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 3496,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5233:13:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 3497,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5247:1:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "5233:15:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3492,
                      "name": "_safeMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5328,
                        5357
                      ],
                      "referencedDeclaration": 5328,
                      "src": "5211:9:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 3499,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5211:39:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3500,
                  "nodeType": "ExpressionStatement",
                  "src": "5211:39:22"
                }
              ]
            },
            "functionSelector": "1249c58b",
            "id": 3502,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nameLocation": "4302:4:22",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3376,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4306:2:22"
            },
            "returnParameters": {
              "id": 3377,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4318:0:22"
            },
            "scope": 4199,
            "src": "4293:986:22",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3560,
              "nodeType": "Block",
              "src": "5399:535:22",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3514,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 3510,
                              "name": "_tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3505,
                              "src": "5426:8:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 3509,
                            "name": "ownerOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4962,
                            "src": "5418:7:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view returns (address)"
                            }
                          },
                          "id": 3511,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5418:17:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 3512,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "5439:3:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3513,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "5439:10:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "5418:31:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6d757374206265206f776e6572",
                        "id": 3515,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5451:15:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_329724c8ccd7e703e1f2cc0c38cc0d3100472efaee284ff0bec684d9dbf7d749",
                          "typeString": "literal_string \"must be owner\""
                        },
                        "value": "must be owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_329724c8ccd7e703e1f2cc0c38cc0d3100472efaee284ff0bec684d9dbf7d749",
                          "typeString": "literal_string \"must be owner\""
                        }
                      ],
                      "id": 3508,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5410:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3516,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5410:57:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3517,
                  "nodeType": "ExpressionStatement",
                  "src": "5410:57:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3524,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 3519,
                              "name": "tokenIdToStats",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3120,
                              "src": "5486:14:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stats_$3165_storage_$",
                                "typeString": "mapping(uint256 => struct Wizards.Stats storage ref)"
                              }
                            },
                            "id": 3521,
                            "indexExpression": {
                              "id": 3520,
                              "name": "_tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3505,
                              "src": "5501:8:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5486:24:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Stats_$3165_storage",
                              "typeString": "struct Wizards.Stats storage ref"
                            }
                          },
                          "id": 3522,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "initiationTimestamp",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3159,
                          "src": "5486:44:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 3523,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5534:1:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "5486:49:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "616c726561647920696e69746961746564",
                        "id": 3525,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5537:19:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_aba6732aa701fc3487277b08d194b76888f3be8f65b21a53e76e1dbc7e32f01e",
                          "typeString": "literal_string \"already initiated\""
                        },
                        "value": "already initiated"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_aba6732aa701fc3487277b08d194b76888f3be8f65b21a53e76e1dbc7e32f01e",
                          "typeString": "literal_string \"already initiated\""
                        }
                      ],
                      "id": 3518,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5478:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3526,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5478:79:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3527,
                  "nodeType": "ExpressionStatement",
                  "src": "5478:79:22"
                },
                {
                  "assignments": [
                    3530
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3530,
                      "mutability": "mutable",
                      "name": "myStats",
                      "nameLocation": "5667:7:22",
                      "nodeType": "VariableDeclaration",
                      "scope": 3560,
                      "src": "5653:21:22",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stats_$3165_storage_ptr",
                        "typeString": "struct Wizards.Stats"
                      },
                      "typeName": {
                        "id": 3529,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 3528,
                          "name": "Stats",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3165,
                          "src": "5653:5:22"
                        },
                        "referencedDeclaration": 3165,
                        "src": "5653:5:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stats_$3165_storage_ptr",
                          "typeString": "struct Wizards.Stats"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3534,
                  "initialValue": {
                    "baseExpression": {
                      "id": 3531,
                      "name": "tokenIdToStats",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3120,
                      "src": "5677:14:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stats_$3165_storage_$",
                        "typeString": "mapping(uint256 => struct Wizards.Stats storage ref)"
                      }
                    },
                    "id": 3533,
                    "indexExpression": {
                      "id": 3532,
                      "name": "_tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3505,
                      "src": "5692:8:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5677:24:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Stats_$3165_storage",
                      "typeString": "struct Wizards.Stats storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5653:48:22"
                },
                {
                  "expression": {
                    "id": 3540,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 3535,
                        "name": "myStats",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3530,
                        "src": "5712:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stats_$3165_storage_ptr",
                          "typeString": "struct Wizards.Stats storage pointer"
                        }
                      },
                      "id": 3537,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "initiationTimestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3159,
                      "src": "5712:27:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 3538,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "5742:5:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 3539,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "5742:15:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5712:45:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3541,
                  "nodeType": "ExpressionStatement",
                  "src": "5712:45:22"
                },
                {
                  "expression": {
                    "id": 3550,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 3542,
                        "name": "myStats",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3530,
                        "src": "5768:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stats_$3165_storage_ptr",
                          "typeString": "struct Wizards.Stats storage pointer"
                        }
                      },
                      "id": 3544,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "protectedUntilTimestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3161,
                      "src": "5768:31:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 3549,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 3545,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "5802:5:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 3546,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "5802:15:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "expression": {
                          "id": 3547,
                          "name": "contractSettings",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3187,
                          "src": "5820:16:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ContractSettings_$3184_storage",
                            "typeString": "struct Wizards.ContractSettings storage ref"
                          }
                        },
                        "id": 3548,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "protectionTimeExtension",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3173,
                        "src": "5820:40:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "5802:58:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5768:92:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3551,
                  "nodeType": "ExpressionStatement",
                  "src": "5768:92:22"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 3553,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5888:3:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3554,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5888:10:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3555,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3505,
                        "src": "5900:8:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 3556,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "5910:5:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 3557,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "5910:15:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3552,
                      "name": "Initiated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3203,
                      "src": "5878:9:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 3558,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5878:48:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3559,
                  "nodeType": "EmitStatement",
                  "src": "5873:53:22"
                }
              ]
            },
            "documentation": {
              "id": 3503,
              "nodeType": "StructuredDocumentation",
              "src": "5289:59:22",
              "text": " @dev Moves NFT from inactive to active"
            },
            "functionSelector": "7901ea78",
            "id": 3561,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "initiate",
            "nameLocation": "5363:8:22",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3506,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3505,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "5380:8:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 3561,
                  "src": "5372:16:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3504,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5372:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5371:18:22"
            },
            "returnParameters": {
              "id": 3507,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5399:0:22"
            },
            "scope": 4199,
            "src": "5354:580:22",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3672,
              "nodeType": "Block",
              "src": "5994:1191:22",
              "statements": [
                {
                  "assignments": [
                    3568
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3568,
                      "mutability": "mutable",
                      "name": "myStats",
                      "nameLocation": "6493:7:22",
                      "nodeType": "VariableDeclaration",
                      "scope": 3672,
                      "src": "6479:21:22",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stats_$3165_storage_ptr",
                        "typeString": "struct Wizards.Stats"
                      },
                      "typeName": {
                        "id": 3567,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 3566,
                          "name": "Stats",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3165,
                          "src": "6479:5:22"
                        },
                        "referencedDeclaration": 3165,
                        "src": "6479:5:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stats_$3165_storage_ptr",
                          "typeString": "struct Wizards.Stats"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3572,
                  "initialValue": {
                    "baseExpression": {
                      "id": 3569,
                      "name": "tokenIdToStats",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3120,
                      "src": "6503:14:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stats_$3165_storage_$",
                        "typeString": "mapping(uint256 => struct Wizards.Stats storage ref)"
                      }
                    },
                    "id": 3571,
                    "indexExpression": {
                      "id": 3570,
                      "name": "_tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3563,
                      "src": "6518:8:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6503:24:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Stats_$3165_storage",
                      "typeString": "struct Wizards.Stats storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6479:48:22"
                },
                {
                  "assignments": [
                    3574
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3574,
                      "mutability": "mutable",
                      "name": "pseudoRandNum",
                      "nameLocation": "6546:13:22",
                      "nodeType": "VariableDeclaration",
                      "scope": 3672,
                      "src": "6538:21:22",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3573,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6538:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3591,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 3580,
                                  "name": "totalSupply",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4363,
                                  "src": "6597:11:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                    "typeString": "function () view returns (uint256)"
                                  }
                                },
                                "id": 3581,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6597:13:22",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "expression": {
                                  "id": 3582,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "6612:3:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 3583,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "6612:10:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "expression": {
                                  "id": 3584,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "6624:5:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 3585,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "6624:15:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "expression": {
                                  "id": 3586,
                                  "name": "myStats",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3568,
                                  "src": "6641:7:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Stats_$3165_storage_ptr",
                                    "typeString": "struct Wizards.Stats storage pointer"
                                  }
                                },
                                "id": 3587,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "level",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3137,
                                "src": "6641:13:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 3578,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "6580:3:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 3579,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "src": "6580:16:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 3588,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6580:75:22",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 3577,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "6570:9:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 3589,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6570:86:22",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 3576,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "6562:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint256_$",
                        "typeString": "type(uint256)"
                      },
                      "typeName": {
                        "id": 3575,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6562:7:22",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 3590,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6562:95:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6538:119:22"
                },
                {
                  "expression": {
                    "id": 3597,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 3592,
                        "name": "myStats",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3568,
                        "src": "6670:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stats_$3165_storage_ptr",
                          "typeString": "struct Wizards.Stats storage pointer"
                        }
                      },
                      "id": 3594,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "initiationTimestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3159,
                      "src": "6670:27:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 3595,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "6700:5:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 3596,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "6700:15:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6670:45:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3598,
                  "nodeType": "ExpressionStatement",
                  "src": "6670:45:22"
                },
                {
                  "expression": {
                    "id": 3604,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 3599,
                        "name": "myStats",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3568,
                        "src": "6726:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stats_$3165_storage_ptr",
                          "typeString": "struct Wizards.Stats storage pointer"
                        }
                      },
                      "id": 3601,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "protectedUntilTimestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3161,
                      "src": "6726:31:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "expression": {
                        "id": 3602,
                        "name": "contractSettings",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3187,
                        "src": "6761:16:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ContractSettings_$3184_storage",
                          "typeString": "struct Wizards.ContractSettings storage ref"
                        }
                      },
                      "id": 3603,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "protectionTimeExtension",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3173,
                      "src": "6761:40:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6726:75:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3605,
                  "nodeType": "ExpressionStatement",
                  "src": "6726:75:22"
                },
                {
                  "expression": {
                    "id": 3610,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 3606,
                        "name": "myStats",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3568,
                        "src": "6812:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stats_$3165_storage_ptr",
                          "typeString": "struct Wizards.Stats storage pointer"
                        }
                      },
                      "id": 3608,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "level",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3137,
                      "src": "6812:13:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 3609,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6829:1:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "6812:18:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3611,
                  "nodeType": "ExpressionStatement",
                  "src": "6812:18:22"
                },
                {
                  "expression": {
                    "id": 3620,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 3612,
                        "name": "myStats",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3568,
                        "src": "6843:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stats_$3165_storage_ptr",
                          "typeString": "struct Wizards.Stats storage pointer"
                        }
                      },
                      "id": 3614,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "hp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3139,
                      "src": "6843:10:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 3619,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3617,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 3615,
                          "name": "pseudoRandNum",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3574,
                          "src": "6857:13:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "%",
                        "rightExpression": {
                          "hexValue": "3136",
                          "id": 3616,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6873:2:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_16_by_1",
                            "typeString": "int_const 16"
                          },
                          "value": "16"
                        },
                        "src": "6857:18:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "hexValue": "3130",
                        "id": 3618,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6878:2:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      },
                      "src": "6857:23:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6843:37:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3621,
                  "nodeType": "ExpressionStatement",
                  "src": "6843:37:22"
                },
                {
                  "expression": {
                    "id": 3634,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 3622,
                        "name": "myStats",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3568,
                        "src": "6891:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stats_$3165_storage_ptr",
                          "typeString": "struct Wizards.Stats storage pointer"
                        }
                      },
                      "id": 3624,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "magicalPower",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3141,
                      "src": "6891:20:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 3633,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3631,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3629,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 3625,
                            "name": "pseudoRandNum",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3574,
                            "src": "6915:13:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_rational_100_by_1",
                              "typeString": "int_const 100"
                            },
                            "id": 3628,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "3130",
                              "id": 3626,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6929:2:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "**",
                            "rightExpression": {
                              "hexValue": "32",
                              "id": 3627,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6933:1:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            },
                            "src": "6929:5:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100_by_1",
                              "typeString": "int_const 100"
                            }
                          },
                          "src": "6915:19:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "%",
                        "rightExpression": {
                          "hexValue": "3136",
                          "id": 3630,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6937:2:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_16_by_1",
                            "typeString": "int_const 16"
                          },
                          "value": "16"
                        },
                        "src": "6915:24:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "hexValue": "3130",
                        "id": 3632,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6942:2:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      },
                      "src": "6915:29:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6891:53:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3635,
                  "nodeType": "ExpressionStatement",
                  "src": "6891:53:22"
                },
                {
                  "expression": {
                    "id": 3648,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 3636,
                        "name": "myStats",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3568,
                        "src": "6955:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stats_$3165_storage_ptr",
                          "typeString": "struct Wizards.Stats storage pointer"
                        }
                      },
                      "id": 3638,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "magicalDefense",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3143,
                      "src": "6955:22:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 3647,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3645,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3643,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 3639,
                            "name": "pseudoRandNum",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3574,
                            "src": "6981:13:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_rational_10000_by_1",
                              "typeString": "int_const 10000"
                            },
                            "id": 3642,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "3130",
                              "id": 3640,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6995:2:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "**",
                            "rightExpression": {
                              "hexValue": "34",
                              "id": 3641,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6999:1:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_4_by_1",
                                "typeString": "int_const 4"
                              },
                              "value": "4"
                            },
                            "src": "6995:5:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10000_by_1",
                              "typeString": "int_const 10000"
                            }
                          },
                          "src": "6981:19:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "%",
                        "rightExpression": {
                          "hexValue": "3136",
                          "id": 3644,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7003:2:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_16_by_1",
                            "typeString": "int_const 16"
                          },
                          "value": "16"
                        },
                        "src": "6981:24:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "hexValue": "3130",
                        "id": 3646,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7008:2:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      },
                      "src": "6981:29:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6955:55:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3649,
                  "nodeType": "ExpressionStatement",
                  "src": "6955:55:22"
                },
                {
                  "expression": {
                    "id": 3660,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 3650,
                        "name": "myStats",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3568,
                        "src": "7021:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stats_$3165_storage_ptr",
                          "typeString": "struct Wizards.Stats storage pointer"
                        }
                      },
                      "id": 3652,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "speed",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3145,
                      "src": "7021:13:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 3659,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3657,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 3653,
                          "name": "pseudoRandNum",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3574,
                          "src": "7038:13:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_rational_1000000_by_1",
                            "typeString": "int_const 1000000"
                          },
                          "id": 3656,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "3130",
                            "id": 3654,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7052:2:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "**",
                          "rightExpression": {
                            "hexValue": "36",
                            "id": 3655,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7056:1:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_6_by_1",
                              "typeString": "int_const 6"
                            },
                            "value": "6"
                          },
                          "src": "7052:5:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000_by_1",
                            "typeString": "int_const 1000000"
                          }
                        },
                        "src": "7038:19:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "%",
                      "rightExpression": {
                        "hexValue": "3130",
                        "id": 3658,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7060:2:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      },
                      "src": "7038:24:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7021:41:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3661,
                  "nodeType": "ExpressionStatement",
                  "src": "7021:41:22"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 3663,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "7090:3:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3664,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7090:10:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3665,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3563,
                        "src": "7102:8:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 3666,
                          "name": "myStats",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3568,
                          "src": "7112:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Stats_$3165_storage_ptr",
                            "typeString": "struct Wizards.Stats storage pointer"
                          }
                        },
                        "id": 3667,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "level",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3137,
                        "src": "7112:13:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 3668,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "7127:5:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 3669,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "7127:15:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3662,
                      "name": "Rebirth",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3213,
                      "src": "7082:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256,uint256)"
                      }
                    },
                    "id": 3670,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7082:61:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3671,
                  "nodeType": "EmitStatement",
                  "src": "7077:66:22"
                }
              ]
            },
            "functionSelector": "e8a77d17",
            "id": 3673,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "rebirth",
            "nameLocation": "5951:7:22",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3564,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3563,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "5967:8:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 3673,
                  "src": "5959:16:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3562,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5959:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5958:18:22"
            },
            "returnParameters": {
              "id": 3565,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5994:0:22"
            },
            "scope": 4199,
            "src": "5942:1243:22",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3736,
              "nodeType": "Block",
              "src": "7348:766:22",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_OUTCOME_$3135",
                      "typeString": "enum Wizards.OUTCOME"
                    },
                    "id": 3692,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3689,
                      "name": "outcome",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3680,
                      "src": "7362:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_OUTCOME_$3135",
                        "typeString": "enum Wizards.OUTCOME"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 3690,
                        "name": "OUTCOME",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3135,
                        "src": "7373:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_OUTCOME_$3135_$",
                          "typeString": "type(enum Wizards.OUTCOME)"
                        }
                      },
                      "id": 3691,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "WIN",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3132,
                      "src": "7373:11:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_OUTCOME_$3135",
                        "typeString": "enum Wizards.OUTCOME"
                      }
                    },
                    "src": "7362:22:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_enum$_OUTCOME_$3135",
                        "typeString": "enum Wizards.OUTCOME"
                      },
                      "id": 3711,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 3708,
                        "name": "outcome",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3680,
                        "src": "7523:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_OUTCOME_$3135",
                          "typeString": "enum Wizards.OUTCOME"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "id": 3709,
                          "name": "OUTCOME",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3135,
                          "src": "7534:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_OUTCOME_$3135_$",
                            "typeString": "type(enum Wizards.OUTCOME)"
                          }
                        },
                        "id": 3710,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "LOSS",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3131,
                        "src": "7534:12:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_OUTCOME_$3135",
                          "typeString": "enum Wizards.OUTCOME"
                        }
                      },
                      "src": "7523:23:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 3727,
                    "nodeType": "IfStatement",
                    "src": "7520:145:22",
                    "trueBody": {
                      "id": 3726,
                      "nodeType": "Block",
                      "src": "7547:118:22",
                      "statements": [
                        {
                          "expression": {
                            "id": 3717,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "expression": {
                                "baseExpression": {
                                  "id": 3712,
                                  "name": "tokenIdToStats",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3120,
                                  "src": "7562:14:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stats_$3165_storage_$",
                                    "typeString": "mapping(uint256 => struct Wizards.Stats storage ref)"
                                  }
                                },
                                "id": 3714,
                                "indexExpression": {
                                  "id": 3713,
                                  "name": "_attackerId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3675,
                                  "src": "7577:11:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "7562:27:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Stats_$3165_storage",
                                  "typeString": "struct Wizards.Stats storage ref"
                                }
                              },
                              "id": 3715,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "memberName": "losses",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3149,
                              "src": "7562:34:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "+=",
                            "rightHandSide": {
                              "hexValue": "31",
                              "id": 3716,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7600:1:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "7562:39:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 3718,
                          "nodeType": "ExpressionStatement",
                          "src": "7562:39:22"
                        },
                        {
                          "expression": {
                            "id": 3724,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "expression": {
                                "baseExpression": {
                                  "id": 3719,
                                  "name": "tokenIdToStats",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3120,
                                  "src": "7616:14:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stats_$3165_storage_$",
                                    "typeString": "mapping(uint256 => struct Wizards.Stats storage ref)"
                                  }
                                },
                                "id": 3721,
                                "indexExpression": {
                                  "id": 3720,
                                  "name": "_defenderId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3677,
                                  "src": "7631:11:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "7616:27:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Stats_$3165_storage",
                                  "typeString": "struct Wizards.Stats storage ref"
                                }
                              },
                              "id": 3722,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "memberName": "wins",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3147,
                              "src": "7616:32:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "+=",
                            "rightHandSide": {
                              "hexValue": "31",
                              "id": 3723,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7652:1:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "7616:37:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 3725,
                          "nodeType": "ExpressionStatement",
                          "src": "7616:37:22"
                        }
                      ]
                    }
                  },
                  "id": 3728,
                  "nodeType": "IfStatement",
                  "src": "7359:306:22",
                  "trueBody": {
                    "id": 3707,
                    "nodeType": "Block",
                    "src": "7385:120:22",
                    "statements": [
                      {
                        "expression": {
                          "id": 3698,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 3693,
                                "name": "tokenIdToStats",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3120,
                                "src": "7400:14:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stats_$3165_storage_$",
                                  "typeString": "mapping(uint256 => struct Wizards.Stats storage ref)"
                                }
                              },
                              "id": 3695,
                              "indexExpression": {
                                "id": 3694,
                                "name": "_attackerId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3675,
                                "src": "7415:11:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "7400:27:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Stats_$3165_storage",
                                "typeString": "struct Wizards.Stats storage ref"
                              }
                            },
                            "id": 3696,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "wins",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3147,
                            "src": "7400:32:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "hexValue": "31",
                            "id": 3697,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7436:1:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "7400:37:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3699,
                        "nodeType": "ExpressionStatement",
                        "src": "7400:37:22"
                      },
                      {
                        "expression": {
                          "id": 3705,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 3700,
                                "name": "tokenIdToStats",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3120,
                                "src": "7452:14:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stats_$3165_storage_$",
                                  "typeString": "mapping(uint256 => struct Wizards.Stats storage ref)"
                                }
                              },
                              "id": 3702,
                              "indexExpression": {
                                "id": 3701,
                                "name": "_defenderId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3677,
                                "src": "7467:11:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "7452:27:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Stats_$3165_storage",
                                "typeString": "struct Wizards.Stats storage ref"
                              }
                            },
                            "id": 3703,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "losses",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3149,
                            "src": "7452:34:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "hexValue": "31",
                            "id": 3704,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7490:1:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "7452:39:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3706,
                        "nodeType": "ExpressionStatement",
                        "src": "7452:39:22"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 3734,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 3729,
                          "name": "tokenIdToStats",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3120,
                          "src": "7677:14:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stats_$3165_storage_$",
                            "typeString": "mapping(uint256 => struct Wizards.Stats storage ref)"
                          }
                        },
                        "id": 3731,
                        "indexExpression": {
                          "id": 3730,
                          "name": "_attackerId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3675,
                          "src": "7692:11:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7677:27:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stats_$3165_storage",
                          "typeString": "struct Wizards.Stats storage ref"
                        }
                      },
                      "id": 3732,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "tokensClaimed",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3153,
                      "src": "7677:41:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 3733,
                      "name": "_tokensWon",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3682,
                      "src": "7722:10:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7677:55:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3735,
                  "nodeType": "ExpressionStatement",
                  "src": "7677:55:22"
                }
              ]
            },
            "functionSelector": "8140bd0b",
            "id": 3737,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3687,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3686,
                  "name": "onlyBattler",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4138,
                  "src": "7336:11:22"
                },
                "nodeType": "ModifierInvocation",
                "src": "7336:11:22"
              }
            ],
            "name": "reportBattle",
            "nameLocation": "7204:12:22",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3685,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3675,
                  "mutability": "mutable",
                  "name": "_attackerId",
                  "nameLocation": "7225:11:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 3737,
                  "src": "7217:19:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3674,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7217:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3677,
                  "mutability": "mutable",
                  "name": "_defenderId",
                  "nameLocation": "7246:11:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 3737,
                  "src": "7238:19:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3676,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7238:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3680,
                  "mutability": "mutable",
                  "name": "outcome",
                  "nameLocation": "7267:7:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 3737,
                  "src": "7259:15:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_OUTCOME_$3135",
                    "typeString": "enum Wizards.OUTCOME"
                  },
                  "typeName": {
                    "id": 3679,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 3678,
                      "name": "OUTCOME",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3135,
                      "src": "7259:7:22"
                    },
                    "referencedDeclaration": 3135,
                    "src": "7259:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_OUTCOME_$3135",
                      "typeString": "enum Wizards.OUTCOME"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3682,
                  "mutability": "mutable",
                  "name": "_tokensWon",
                  "nameLocation": "7284:10:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 3737,
                  "src": "7276:18:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3681,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7276:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3684,
                  "mutability": "mutable",
                  "name": "_tokensWaged",
                  "nameLocation": "7313:12:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 3737,
                  "src": "7305:20:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3683,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7305:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7216:110:22"
            },
            "returnParameters": {
              "id": 3688,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7348:0:22"
            },
            "scope": 4199,
            "src": "7195:919:22",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3776,
              "nodeType": "Block",
              "src": "8240:297:22",
              "statements": [
                {
                  "assignments": [
                    3746
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3746,
                      "mutability": "mutable",
                      "name": "phase",
                      "nameLocation": "8259:5:22",
                      "nodeType": "VariableDeclaration",
                      "scope": 3776,
                      "src": "8251:13:22",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3745,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8251:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3773,
                  "initialValue": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 3759,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3757,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 3753,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 3747,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "8279:5:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 3748,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "8279:15:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 3749,
                                    "name": "tokenIdToStats",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3120,
                                    "src": "8297:14:22",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stats_$3165_storage_$",
                                      "typeString": "mapping(uint256 => struct Wizards.Stats storage ref)"
                                    }
                                  },
                                  "id": 3751,
                                  "indexExpression": {
                                    "id": 3750,
                                    "name": "_tokenId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3740,
                                    "src": "8312:8:22",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "8297:24:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Stats_$3165_storage",
                                    "typeString": "struct Wizards.Stats storage ref"
                                  }
                                },
                                "id": 3752,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "initiationTimestamp",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3159,
                                "src": "8297:44:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "8279:62:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 3754,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "8278:64:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "expression": {
                            "id": 3755,
                            "name": "contractSettings",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3187,
                            "src": "8345:16:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ContractSettings_$3184_storage",
                              "typeString": "struct Wizards.ContractSettings storage ref"
                            }
                          },
                          "id": 3756,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "phaseDuration",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3177,
                          "src": "8345:30:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8278:97:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "hexValue": "37",
                        "id": 3758,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8389:1:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_7_by_1",
                          "typeString": "int_const 7"
                        },
                        "value": "7"
                      },
                      "src": "8278:112:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 3771,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 3767,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 3761,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "8398:5:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 3762,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "8398:15:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 3763,
                                  "name": "tokenIdToStats",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3120,
                                  "src": "8416:14:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stats_$3165_storage_$",
                                    "typeString": "mapping(uint256 => struct Wizards.Stats storage ref)"
                                  }
                                },
                                "id": 3765,
                                "indexExpression": {
                                  "id": 3764,
                                  "name": "_tokenId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3740,
                                  "src": "8431:8:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "8416:24:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Stats_$3165_storage",
                                  "typeString": "struct Wizards.Stats storage ref"
                                }
                              },
                              "id": 3766,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "initiationTimestamp",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3159,
                              "src": "8416:44:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "8398:62:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 3768,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "8397:64:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "/",
                      "rightExpression": {
                        "expression": {
                          "id": 3769,
                          "name": "contractSettings",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3187,
                          "src": "8464:16:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ContractSettings_$3184_storage",
                            "typeString": "struct Wizards.ContractSettings storage ref"
                          }
                        },
                        "id": 3770,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "phaseDuration",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3177,
                        "src": "8464:30:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "8397:97:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 3772,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "8278:216:22",
                    "trueExpression": {
                      "hexValue": "37",
                      "id": 3760,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8393:1:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_7_by_1",
                        "typeString": "int_const 7"
                      },
                      "value": "7"
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8251:243:22"
                },
                {
                  "expression": {
                    "id": 3774,
                    "name": "phase",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3746,
                    "src": "8524:5:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 3744,
                  "id": 3775,
                  "nodeType": "Return",
                  "src": "8517:12:22"
                }
              ]
            },
            "documentation": {
              "id": 3738,
              "nodeType": "StructuredDocumentation",
              "src": "8124:43:22",
              "text": " @dev Gets phase of NFT"
            },
            "functionSelector": "05106353",
            "id": 3777,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPhaseOf",
            "nameLocation": "8182:10:22",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3741,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3740,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "8201:8:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 3777,
                  "src": "8193:16:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3739,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8193:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8192:18:22"
            },
            "returnParameters": {
              "id": 3744,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3743,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3777,
                  "src": "8231:7:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3742,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8231:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8230:9:22"
            },
            "scope": 4199,
            "src": "8173:364:22",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3785,
              "nodeType": "Block",
              "src": "8685:10:22",
              "statements": []
            },
            "documentation": {
              "id": 3778,
              "nodeType": "StructuredDocumentation",
              "src": "8545:72:22",
              "text": " @dev check if NFT is deserted--negligent in duties."
            },
            "functionSelector": "0a363d08",
            "id": 3786,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getIsDeserted",
            "nameLocation": "8632:13:22",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3781,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3780,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "8654:8:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 3786,
                  "src": "8646:16:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3779,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8646:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8645:18:22"
            },
            "returnParameters": {
              "id": 3784,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3783,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3786,
                  "src": "8679:4:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3782,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "8679:4:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8678:6:22"
            },
            "scope": 4199,
            "src": "8623:72:22",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3819,
              "nodeType": "Block",
              "src": "8855:369:22",
              "statements": [
                {
                  "expression": {
                    "id": 3817,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 3796,
                          "name": "tokenIdToStats",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3120,
                          "src": "8904:14:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stats_$3165_storage_$",
                            "typeString": "mapping(uint256 => struct Wizards.Stats storage ref)"
                          }
                        },
                        "id": 3798,
                        "indexExpression": {
                          "id": 3797,
                          "name": "_tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3789,
                          "src": "8919:8:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8904:24:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stats_$3165_storage",
                          "typeString": "struct Wizards.Stats storage ref"
                        }
                      },
                      "id": 3799,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "protectedUntilTimestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3161,
                      "src": "8904:48:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 3816,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 3800,
                        "name": "_timeReward",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3791,
                        "src": "8955:11:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "components": [
                          {
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 3807,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 3801,
                                    "name": "tokenIdToStats",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3120,
                                    "src": "8970:14:22",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stats_$3165_storage_$",
                                      "typeString": "mapping(uint256 => struct Wizards.Stats storage ref)"
                                    }
                                  },
                                  "id": 3803,
                                  "indexExpression": {
                                    "id": 3802,
                                    "name": "_tokenId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3789,
                                    "src": "8985:8:22",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "8970:24:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Stats_$3165_storage",
                                    "typeString": "struct Wizards.Stats storage ref"
                                  }
                                },
                                "id": 3804,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "protectedUntilTimestamp",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3161,
                                "src": "8970:48:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<",
                              "rightExpression": {
                                "expression": {
                                  "id": 3805,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "9021:5:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 3806,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "9021:15:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "8970:66:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "falseExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 3810,
                                  "name": "tokenIdToStats",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3120,
                                  "src": "9075:14:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stats_$3165_storage_$",
                                    "typeString": "mapping(uint256 => struct Wizards.Stats storage ref)"
                                  }
                                },
                                "id": 3812,
                                "indexExpression": {
                                  "id": 3811,
                                  "name": "_tokenId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3789,
                                  "src": "9090:8:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "9075:24:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Stats_$3165_storage",
                                  "typeString": "struct Wizards.Stats storage ref"
                                }
                              },
                              "id": 3813,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "protectedUntilTimestamp",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3161,
                              "src": "9075:48:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 3814,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "Conditional",
                            "src": "8970:153:22",
                            "trueExpression": {
                              "expression": {
                                "id": 3808,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "9057:5:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 3809,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "9057:15:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 3815,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "8969:155:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "8955:169:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8904:220:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3818,
                  "nodeType": "ExpressionStatement",
                  "src": "8904:220:22"
                }
              ]
            },
            "documentation": {
              "id": 3787,
              "nodeType": "StructuredDocumentation",
              "src": "8703:65:22",
              "text": " @dev Verify duties of NFT. Not duty specific"
            },
            "functionSelector": "8ad4d6a5",
            "id": 3820,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3794,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3793,
                  "name": "onlyVerifier",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4111,
                  "src": "8842:12:22"
                },
                "nodeType": "ModifierInvocation",
                "src": "8842:12:22"
              }
            ],
            "name": "verifyDuty",
            "nameLocation": "8783:10:22",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3792,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3789,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "8802:8:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 3820,
                  "src": "8794:16:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3788,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8794:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3791,
                  "mutability": "mutable",
                  "name": "_timeReward",
                  "nameLocation": "8820:11:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 3820,
                  "src": "8812:19:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3790,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8812:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8793:39:22"
            },
            "returnParameters": {
              "id": 3795,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8855:0:22"
            },
            "scope": 4199,
            "src": "8774:450:22",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3828,
              "nodeType": "Block",
              "src": "9382:8:22",
              "statements": []
            },
            "documentation": {
              "id": 3821,
              "nodeType": "StructuredDocumentation",
              "src": "9236:87:22",
              "text": " @dev uninitiate an NFT that is negligent in duties. Reward crusher"
            },
            "functionSelector": "437454b9",
            "id": 3829,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3826,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3825,
                  "name": "onlyHolder",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4126,
                  "src": "9362:10:22"
                },
                "nodeType": "ModifierInvocation",
                "src": "9362:10:22"
              }
            ],
            "name": "crush",
            "nameLocation": "9338:5:22",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3824,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3823,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "9352:8:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 3829,
                  "src": "9344:16:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3822,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9344:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9343:18:22"
            },
            "returnParameters": {
              "id": 3827,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9382:0:22"
            },
            "scope": 4199,
            "src": "9329:61:22",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              5024
            ],
            "body": {
              "id": 3910,
              "nodeType": "Block",
              "src": "9489:907:22",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 3839,
                            "name": "_tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3831,
                            "src": "9516:8:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 3838,
                          "name": "_exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5272,
                          "src": "9508:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 3840,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9508:17:22",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732314d657461646174613a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e",
                        "id": 3841,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9527:49:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb",
                          "typeString": "literal_string \"ERC721Metadata: URI query for nonexistent token\""
                        },
                        "value": "ERC721Metadata: URI query for nonexistent token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb",
                          "typeString": "literal_string \"ERC721Metadata: URI query for nonexistent token\""
                        }
                      ],
                      "id": 3837,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9500:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3842,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9500:77:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3843,
                  "nodeType": "ExpressionStatement",
                  "src": "9500:77:22"
                },
                {
                  "assignments": [
                    3845
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3845,
                      "mutability": "mutable",
                      "name": "linkExtension",
                      "nameLocation": "9635:13:22",
                      "nodeType": "VariableDeclaration",
                      "scope": 3910,
                      "src": "9621:27:22",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 3844,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "9621:6:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3846,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9621:27:22"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3852,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 3847,
                          "name": "tokenIdToStats",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3120,
                          "src": "9662:14:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stats_$3165_storage_$",
                            "typeString": "mapping(uint256 => struct Wizards.Stats storage ref)"
                          }
                        },
                        "id": 3849,
                        "indexExpression": {
                          "id": 3848,
                          "name": "_tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3831,
                          "src": "9677:8:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "9662:24:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stats_$3165_storage",
                          "typeString": "struct Wizards.Stats storage ref"
                        }
                      },
                      "id": 3850,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initiationTimestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3159,
                      "src": "9662:44:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 3851,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9708:1:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "9662:47:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 3890,
                    "nodeType": "Block",
                    "src": "9825:398:22",
                    "statements": [
                      {
                        "expression": {
                          "id": 3888,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 3858,
                            "name": "linkExtension",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3845,
                            "src": "9878:13:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "condition": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 3873,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 3871,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "components": [
                                        {
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 3867,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "expression": {
                                              "id": 3861,
                                              "name": "block",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": -4,
                                              "src": "9959:5:22",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_magic_block",
                                                "typeString": "block"
                                              }
                                            },
                                            "id": 3862,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "timestamp",
                                            "nodeType": "MemberAccess",
                                            "src": "9959:15:22",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "-",
                                          "rightExpression": {
                                            "expression": {
                                              "baseExpression": {
                                                "id": 3863,
                                                "name": "tokenIdToStats",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 3120,
                                                "src": "9977:14:22",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stats_$3165_storage_$",
                                                  "typeString": "mapping(uint256 => struct Wizards.Stats storage ref)"
                                                }
                                              },
                                              "id": 3865,
                                              "indexExpression": {
                                                "id": 3864,
                                                "name": "_tokenId",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 3831,
                                                "src": "9992:8:22",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "nodeType": "IndexAccess",
                                              "src": "9977:24:22",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_Stats_$3165_storage",
                                                "typeString": "struct Wizards.Stats storage ref"
                                              }
                                            },
                                            "id": 3866,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "initiationTimestamp",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 3159,
                                            "src": "9977:44:22",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "src": "9959:62:22",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "id": 3868,
                                      "isConstant": false,
                                      "isInlineArray": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "TupleExpression",
                                      "src": "9958:64:22",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "/",
                                    "rightExpression": {
                                      "expression": {
                                        "id": 3869,
                                        "name": "contractSettings",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 3187,
                                        "src": "10025:16:22",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_ContractSettings_$3184_storage",
                                          "typeString": "struct Wizards.ContractSettings storage ref"
                                        }
                                      },
                                      "id": 3870,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "phaseDuration",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 3177,
                                      "src": "10025:30:22",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "9958:97:22",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": ">",
                                  "rightExpression": {
                                    "hexValue": "37",
                                    "id": 3872,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "10081:1:22",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_7_by_1",
                                      "typeString": "int_const 7"
                                    },
                                    "value": "7"
                                  },
                                  "src": "9958:124:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "falseExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 3885,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "components": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 3881,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "expression": {
                                            "id": 3875,
                                            "name": "block",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": -4,
                                            "src": "10090:5:22",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_magic_block",
                                              "typeString": "block"
                                            }
                                          },
                                          "id": 3876,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "timestamp",
                                          "nodeType": "MemberAccess",
                                          "src": "10090:15:22",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "-",
                                        "rightExpression": {
                                          "expression": {
                                            "baseExpression": {
                                              "id": 3877,
                                              "name": "tokenIdToStats",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 3120,
                                              "src": "10108:14:22",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stats_$3165_storage_$",
                                                "typeString": "mapping(uint256 => struct Wizards.Stats storage ref)"
                                              }
                                            },
                                            "id": 3879,
                                            "indexExpression": {
                                              "id": 3878,
                                              "name": "_tokenId",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 3831,
                                              "src": "10123:8:22",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "10108:24:22",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_Stats_$3165_storage",
                                              "typeString": "struct Wizards.Stats storage ref"
                                            }
                                          },
                                          "id": 3880,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "initiationTimestamp",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 3159,
                                          "src": "10108:44:22",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "10090:62:22",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "id": 3882,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "10089:64:22",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "/",
                                  "rightExpression": {
                                    "expression": {
                                      "id": 3883,
                                      "name": "contractSettings",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3187,
                                      "src": "10156:16:22",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_ContractSettings_$3184_storage",
                                        "typeString": "struct Wizards.ContractSettings storage ref"
                                      }
                                    },
                                    "id": 3884,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "phaseDuration",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 3177,
                                    "src": "10156:30:22",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "10089:97:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 3886,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "Conditional",
                                "src": "9958:228:22",
                                "trueExpression": {
                                  "hexValue": "37",
                                  "id": 3874,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "10085:1:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_7_by_1",
                                    "typeString": "int_const 7"
                                  },
                                  "value": "7"
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 3859,
                                "name": "Strings",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4815,
                                "src": "9917:7:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_Strings_$4815_$",
                                  "typeString": "type(library Strings)"
                                }
                              },
                              "id": 3860,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "toString",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 4697,
                              "src": "9917:16:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
                                "typeString": "function (uint256) pure returns (string memory)"
                              }
                            },
                            "id": 3887,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9917:294:22",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "src": "9878:333:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "id": 3889,
                        "nodeType": "ExpressionStatement",
                        "src": "9878:333:22"
                      }
                    ]
                  },
                  "id": 3891,
                  "nodeType": "IfStatement",
                  "src": "9659:564:22",
                  "trueBody": {
                    "id": 3857,
                    "nodeType": "Block",
                    "src": "9710:101:22",
                    "statements": [
                      {
                        "expression": {
                          "id": 3855,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 3853,
                            "name": "linkExtension",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3845,
                            "src": "9740:13:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "30",
                            "id": 3854,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9756:3:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
                              "typeString": "literal_string \"0\""
                            },
                            "value": "0"
                          },
                          "src": "9740:19:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "id": 3856,
                        "nodeType": "ExpressionStatement",
                        "src": "9740:19:22"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    3893
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3893,
                      "mutability": "mutable",
                      "name": "imageURI",
                      "nameLocation": "10247:8:22",
                      "nodeType": "VariableDeclaration",
                      "scope": 3910,
                      "src": "10233:22:22",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 3892,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "10233:6:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3904,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 3898,
                              "name": "contractSettings",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3187,
                              "src": "10282:16:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ContractSettings_$3184_storage",
                                "typeString": "struct Wizards.ContractSettings storage ref"
                              }
                            },
                            "id": 3899,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "imageBaseURI",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3183,
                            "src": "10282:29:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          {
                            "id": 3900,
                            "name": "linkExtension",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3845,
                            "src": "10313:13:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "hexValue": "2e6a7067",
                            "id": 3901,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10328:6:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_e04f9502147a2cf66ff934022e4abc2cf0f6693a703f3836dea748b12d7c8f7c",
                              "typeString": "literal_string \".jpg\""
                            },
                            "value": ".jpg"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_e04f9502147a2cf66ff934022e4abc2cf0f6693a703f3836dea748b12d7c8f7c",
                              "typeString": "literal_string \".jpg\""
                            }
                          ],
                          "expression": {
                            "id": 3896,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "10265:3:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 3897,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "10265:16:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 3902,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10265:70:22",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 3895,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "10258:6:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                        "typeString": "type(string storage pointer)"
                      },
                      "typeName": {
                        "id": 3894,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "10258:6:22",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 3903,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10258:78:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10233:103:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3906,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3831,
                        "src": "10369:8:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 3907,
                        "name": "imageURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3893,
                        "src": "10379:8:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 3905,
                      "name": "formatTokenURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4050,
                      "src": "10354:14:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_string_memory_ptr_$returns$_t_string_memory_ptr_$",
                        "typeString": "function (uint256,string memory) view returns (string memory)"
                      }
                    },
                    "id": 3908,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10354:34:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 3836,
                  "id": 3909,
                  "nodeType": "Return",
                  "src": "10347:41:22"
                }
              ]
            },
            "functionSelector": "c87b56dd",
            "id": 3911,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenURI",
            "nameLocation": "9409:8:22",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 3833,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "9456:8:22"
            },
            "parameters": {
              "id": 3832,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3831,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "9426:8:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 3911,
                  "src": "9418:16:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3830,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9418:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9417:18:22"
            },
            "returnParameters": {
              "id": 3836,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3835,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3911,
                  "src": "9474:13:22",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3834,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "9474:6:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9473:15:22"
            },
            "scope": 4199,
            "src": "9400:996:22",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4049,
              "nodeType": "Block",
              "src": "10506:3135:22",
              "statements": [
                {
                  "assignments": [
                    3922
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3922,
                      "mutability": "mutable",
                      "name": "myStats",
                      "nameLocation": "10585:7:22",
                      "nodeType": "VariableDeclaration",
                      "scope": 4049,
                      "src": "10572:20:22",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stats_$3165_memory_ptr",
                        "typeString": "struct Wizards.Stats"
                      },
                      "typeName": {
                        "id": 3921,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 3920,
                          "name": "Stats",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3165,
                          "src": "10572:5:22"
                        },
                        "referencedDeclaration": 3165,
                        "src": "10572:5:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stats_$3165_storage_ptr",
                          "typeString": "struct Wizards.Stats"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3926,
                  "initialValue": {
                    "baseExpression": {
                      "id": 3923,
                      "name": "tokenIdToStats",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3120,
                      "src": "10595:14:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Stats_$3165_storage_$",
                        "typeString": "mapping(uint256 => struct Wizards.Stats storage ref)"
                      }
                    },
                    "id": 3925,
                    "indexExpression": {
                      "id": 3924,
                      "name": "_tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3913,
                      "src": "10610:8:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "10595:24:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Stats_$3165_storage",
                      "typeString": "struct Wizards.Stats storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10572:47:22"
                },
                {
                  "assignments": [
                    3928
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3928,
                      "mutability": "mutable",
                      "name": "json_str",
                      "nameLocation": "10646:8:22",
                      "nodeType": "VariableDeclaration",
                      "scope": 4049,
                      "src": "10632:22:22",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 3927,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "10632:6:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3948,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "7b226465736372697074696f6e223a202257697a61726441726d7922",
                            "id": 3933,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10695:30:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_b18a2b7321c22087aba615da3e3f195fcc69796097ff91fd03e947bbd5cebf96",
                              "typeString": "literal_string \"{\"description\": \"WizardArmy\"\""
                            },
                            "value": "{\"description\": \"WizardArmy\""
                          },
                          {
                            "hexValue": "2c202265787465726e616c5f75726c223a202268747470733a2f2f77697a61726461726d794e46542e636f6d20286f7220736f6d657468696e67206c696b6520746869732922",
                            "id": 3934,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10740:72:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_56cec513b18e61aeaaea7666bfcf8bcafdcfbaf234bdb322e8a6993d7705c349",
                              "typeString": "literal_string \", \"external_url\": \"https://wizardarmyNFT.com (or something like this)\"\""
                            },
                            "value": ", \"external_url\": \"https://wizardarmyNFT.com (or something like this)\""
                          },
                          {
                            "hexValue": "2c2022696d616765223a2022",
                            "id": 3935,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10827:14:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_7c62051a58edfc6131002bd06977b03b7b1f8898ad7e4a5bdbd3296f68da3856",
                              "typeString": "literal_string \", \"image\": \"\""
                            },
                            "value": ", \"image\": \""
                          },
                          {
                            "id": 3936,
                            "name": "imageURI",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3915,
                            "src": "10857:8:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "hexValue": "22",
                            "id": 3937,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10867:3:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0",
                              "typeString": "literal_string \"\"\""
                            },
                            "value": "\""
                          },
                          {
                            "hexValue": "2c20226e616d65223a202257697a61726422",
                            "id": 3938,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10885:20:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_8e0a029db884b544306938101b84b300021c53689feb21eda6448eb88c8fb16f",
                              "typeString": "literal_string \", \"name\": \"Wizard\"\""
                            },
                            "value": ", \"name\": \"Wizard\""
                          },
                          {
                            "hexValue": "2c202261747472696275746573223a205b7b22646973706c61795f74797065223a20226e756d626572222c202274726169745f74797065223a20226c6576656c222c202276616c7565223a20",
                            "id": 3939,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10947:78:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_13f3f27476270c86ac50ba4ee7dc696bc870dcfcaf1cfbe77bb56289df724c22",
                              "typeString": "literal_string \", \"attributes\": [{\"display_type\": \"number\", \"trait_type\": \"level\", \"value\": \""
                            },
                            "value": ", \"attributes\": [{\"display_type\": \"number\", \"trait_type\": \"level\", \"value\": "
                          },
                          {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 3942,
                                  "name": "myStats",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3922,
                                  "src": "11057:7:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Stats_$3165_memory_ptr",
                                    "typeString": "struct Wizards.Stats memory"
                                  }
                                },
                                "id": 3943,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "level",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3137,
                                "src": "11057:13:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 3940,
                                "name": "Strings",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4815,
                                "src": "11040:7:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_Strings_$4815_$",
                                  "typeString": "type(library Strings)"
                                }
                              },
                              "id": 3941,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "toString",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 4697,
                              "src": "11040:16:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
                                "typeString": "function (uint256) pure returns (string memory)"
                              }
                            },
                            "id": 3944,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11040:31:22",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "hexValue": "207d",
                            "id": 3945,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11073:4:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_a44a2403c24e5dffe1c19627ee12ef440d23e932d2166fed14da273727f2ceb3",
                              "typeString": "literal_string \" }\""
                            },
                            "value": " }"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_b18a2b7321c22087aba615da3e3f195fcc69796097ff91fd03e947bbd5cebf96",
                              "typeString": "literal_string \"{\"description\": \"WizardArmy\"\""
                            },
                            {
                              "typeIdentifier": "t_stringliteral_56cec513b18e61aeaaea7666bfcf8bcafdcfbaf234bdb322e8a6993d7705c349",
                              "typeString": "literal_string \", \"external_url\": \"https://wizardarmyNFT.com (or something like this)\"\""
                            },
                            {
                              "typeIdentifier": "t_stringliteral_7c62051a58edfc6131002bd06977b03b7b1f8898ad7e4a5bdbd3296f68da3856",
                              "typeString": "literal_string \", \"image\": \"\""
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0",
                              "typeString": "literal_string \"\"\""
                            },
                            {
                              "typeIdentifier": "t_stringliteral_8e0a029db884b544306938101b84b300021c53689feb21eda6448eb88c8fb16f",
                              "typeString": "literal_string \", \"name\": \"Wizard\"\""
                            },
                            {
                              "typeIdentifier": "t_stringliteral_13f3f27476270c86ac50ba4ee7dc696bc870dcfcaf1cfbe77bb56289df724c22",
                              "typeString": "literal_string \", \"attributes\": [{\"display_type\": \"number\", \"trait_type\": \"level\", \"value\": \""
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_a44a2403c24e5dffe1c19627ee12ef440d23e932d2166fed14da273727f2ceb3",
                              "typeString": "literal_string \" }\""
                            }
                          ],
                          "expression": {
                            "id": 3931,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "10664:3:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 3932,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "10664:16:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 3946,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10664:424:22",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 3930,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "10657:6:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                        "typeString": "type(string storage pointer)"
                      },
                      "typeName": {
                        "id": 3929,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "10657:6:22",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 3947,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10657:432:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10632:457:22"
                },
                {
                  "expression": {
                    "id": 3978,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3949,
                      "name": "json_str",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3928,
                      "src": "11154:8:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 3954,
                              "name": "json_str",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3928,
                              "src": "11189:8:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "hexValue": "2c207b22646973706c61795f74797065223a20226e756d626572222c202274726169745f74797065223a20226870222c202276616c7565223a20",
                              "id": 3955,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11212:60:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_819c43831efb37a70547fe6f31349de1c410c2f192813b77f023bd6dd70d4312",
                                "typeString": "literal_string \", {\"display_type\": \"number\", \"trait_type\": \"hp\", \"value\": \""
                              },
                              "value": ", {\"display_type\": \"number\", \"trait_type\": \"hp\", \"value\": "
                            },
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 3958,
                                    "name": "myStats",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3922,
                                    "src": "11304:7:22",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Stats_$3165_memory_ptr",
                                      "typeString": "struct Wizards.Stats memory"
                                    }
                                  },
                                  "id": 3959,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "hp",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3139,
                                  "src": "11304:10:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 3956,
                                  "name": "Strings",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4815,
                                  "src": "11287:7:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_Strings_$4815_$",
                                    "typeString": "type(library Strings)"
                                  }
                                },
                                "id": 3957,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "toString",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 4697,
                                "src": "11287:16:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
                                  "typeString": "function (uint256) pure returns (string memory)"
                                }
                              },
                              "id": 3960,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11287:28:22",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "hexValue": "207d",
                              "id": 3961,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11319:4:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_a44a2403c24e5dffe1c19627ee12ef440d23e932d2166fed14da273727f2ceb3",
                                "typeString": "literal_string \" }\""
                              },
                              "value": " }"
                            },
                            {
                              "hexValue": "2c207b22646973706c61795f74797065223a20226e756d626572222c202274726169745f74797065223a20226d61676963616c20706f776572222c202276616c7565223a20",
                              "id": 3962,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11338:71:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_97193623455fe275ad92aa0f33726e2a992cb7d89b6495f9e242fedaa8498295",
                                "typeString": "literal_string \", {\"display_type\": \"number\", \"trait_type\": \"magical power\", \"value\": \""
                              },
                              "value": ", {\"display_type\": \"number\", \"trait_type\": \"magical power\", \"value\": "
                            },
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 3965,
                                    "name": "myStats",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3922,
                                    "src": "11441:7:22",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Stats_$3165_memory_ptr",
                                      "typeString": "struct Wizards.Stats memory"
                                    }
                                  },
                                  "id": 3966,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "magicalPower",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3141,
                                  "src": "11441:20:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 3963,
                                  "name": "Strings",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4815,
                                  "src": "11424:7:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_Strings_$4815_$",
                                    "typeString": "type(library Strings)"
                                  }
                                },
                                "id": 3964,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "toString",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 4697,
                                "src": "11424:16:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
                                  "typeString": "function (uint256) pure returns (string memory)"
                                }
                              },
                              "id": 3967,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11424:38:22",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "hexValue": "207d",
                              "id": 3968,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11466:4:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_a44a2403c24e5dffe1c19627ee12ef440d23e932d2166fed14da273727f2ceb3",
                                "typeString": "literal_string \" }\""
                              },
                              "value": " }"
                            },
                            {
                              "hexValue": "2c207b22646973706c61795f74797065223a20226e756d626572222c202274726169745f74797065223a20226d61676963616c20646566656e7365222c202276616c7565223a20",
                              "id": 3969,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11489:73:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_6049f537a723dea01896f09ec0f39e241d88c7170f3768c52b7a47b9061ed6fd",
                                "typeString": "literal_string \", {\"display_type\": \"number\", \"trait_type\": \"magical defense\", \"value\": \""
                              },
                              "value": ", {\"display_type\": \"number\", \"trait_type\": \"magical defense\", \"value\": "
                            },
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 3972,
                                    "name": "myStats",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3922,
                                    "src": "11594:7:22",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Stats_$3165_memory_ptr",
                                      "typeString": "struct Wizards.Stats memory"
                                    }
                                  },
                                  "id": 3973,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "magicalDefense",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3143,
                                  "src": "11594:22:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 3970,
                                  "name": "Strings",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4815,
                                  "src": "11577:7:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_Strings_$4815_$",
                                    "typeString": "type(library Strings)"
                                  }
                                },
                                "id": 3971,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "toString",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 4697,
                                "src": "11577:16:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
                                  "typeString": "function (uint256) pure returns (string memory)"
                                }
                              },
                              "id": 3974,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11577:40:22",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "hexValue": "207d",
                              "id": 3975,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11621:4:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_a44a2403c24e5dffe1c19627ee12ef440d23e932d2166fed14da273727f2ceb3",
                                "typeString": "literal_string \" }\""
                              },
                              "value": " }"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_819c43831efb37a70547fe6f31349de1c410c2f192813b77f023bd6dd70d4312",
                                "typeString": "literal_string \", {\"display_type\": \"number\", \"trait_type\": \"hp\", \"value\": \""
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_a44a2403c24e5dffe1c19627ee12ef440d23e932d2166fed14da273727f2ceb3",
                                "typeString": "literal_string \" }\""
                              },
                              {
                                "typeIdentifier": "t_stringliteral_97193623455fe275ad92aa0f33726e2a992cb7d89b6495f9e242fedaa8498295",
                                "typeString": "literal_string \", {\"display_type\": \"number\", \"trait_type\": \"magical power\", \"value\": \""
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_a44a2403c24e5dffe1c19627ee12ef440d23e932d2166fed14da273727f2ceb3",
                                "typeString": "literal_string \" }\""
                              },
                              {
                                "typeIdentifier": "t_stringliteral_6049f537a723dea01896f09ec0f39e241d88c7170f3768c52b7a47b9061ed6fd",
                                "typeString": "literal_string \", {\"display_type\": \"number\", \"trait_type\": \"magical defense\", \"value\": \""
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_a44a2403c24e5dffe1c19627ee12ef440d23e932d2166fed14da273727f2ceb3",
                                "typeString": "literal_string \" }\""
                              }
                            ],
                            "expression": {
                              "id": 3952,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "11172:3:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 3953,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "encodePacked",
                            "nodeType": "MemberAccess",
                            "src": "11172:16:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 3976,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11172:464:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 3951,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "11165:6:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                          "typeString": "type(string storage pointer)"
                        },
                        "typeName": {
                          "id": 3950,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "11165:6:22",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 3977,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11165:472:22",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "11154:483:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 3979,
                  "nodeType": "ExpressionStatement",
                  "src": "11154:483:22"
                },
                {
                  "expression": {
                    "id": 4002,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3980,
                      "name": "json_str",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3928,
                      "src": "11702:8:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 3985,
                              "name": "json_str",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3928,
                              "src": "11737:8:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "hexValue": "2c207b22646973706c61795f74797065223a20226e756d626572222c202274726169745f74797065223a20227370656564222c202276616c7565223a20",
                              "id": 3986,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11760:63:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_f53557b321aa1c3359d8852820c76cfe4c1d00dd05224c8e931c33f1eb2b067c",
                                "typeString": "literal_string \", {\"display_type\": \"number\", \"trait_type\": \"speed\", \"value\": \""
                              },
                              "value": ", {\"display_type\": \"number\", \"trait_type\": \"speed\", \"value\": "
                            },
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 3989,
                                    "name": "myStats",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3922,
                                    "src": "11855:7:22",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Stats_$3165_memory_ptr",
                                      "typeString": "struct Wizards.Stats memory"
                                    }
                                  },
                                  "id": 3990,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "speed",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3145,
                                  "src": "11855:13:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 3987,
                                  "name": "Strings",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4815,
                                  "src": "11838:7:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_Strings_$4815_$",
                                    "typeString": "type(library Strings)"
                                  }
                                },
                                "id": 3988,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "toString",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 4697,
                                "src": "11838:16:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
                                  "typeString": "function (uint256) pure returns (string memory)"
                                }
                              },
                              "id": 3991,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11838:31:22",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "hexValue": "207d",
                              "id": 3992,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11873:4:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_a44a2403c24e5dffe1c19627ee12ef440d23e932d2166fed14da273727f2ceb3",
                                "typeString": "literal_string \" }\""
                              },
                              "value": " }"
                            },
                            {
                              "hexValue": "2c207b22646973706c61795f74797065223a20226e756d626572222c202274726169745f74797065223a202277696e73222c202276616c7565223a20",
                              "id": 3993,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11892:62:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_80a088bec8daa0f98c8dccd759a9de5643f02f75aa61e1de9d483dedbd57078d",
                                "typeString": "literal_string \", {\"display_type\": \"number\", \"trait_type\": \"wins\", \"value\": \""
                              },
                              "value": ", {\"display_type\": \"number\", \"trait_type\": \"wins\", \"value\": "
                            },
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 3996,
                                    "name": "myStats",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3922,
                                    "src": "11986:7:22",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Stats_$3165_memory_ptr",
                                      "typeString": "struct Wizards.Stats memory"
                                    }
                                  },
                                  "id": 3997,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "wins",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3147,
                                  "src": "11986:12:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 3994,
                                  "name": "Strings",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4815,
                                  "src": "11969:7:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_Strings_$4815_$",
                                    "typeString": "type(library Strings)"
                                  }
                                },
                                "id": 3995,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "toString",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 4697,
                                "src": "11969:16:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
                                  "typeString": "function (uint256) pure returns (string memory)"
                                }
                              },
                              "id": 3998,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11969:30:22",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "hexValue": "207d",
                              "id": 3999,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12003:4:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_a44a2403c24e5dffe1c19627ee12ef440d23e932d2166fed14da273727f2ceb3",
                                "typeString": "literal_string \" }\""
                              },
                              "value": " }"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_f53557b321aa1c3359d8852820c76cfe4c1d00dd05224c8e931c33f1eb2b067c",
                                "typeString": "literal_string \", {\"display_type\": \"number\", \"trait_type\": \"speed\", \"value\": \""
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_a44a2403c24e5dffe1c19627ee12ef440d23e932d2166fed14da273727f2ceb3",
                                "typeString": "literal_string \" }\""
                              },
                              {
                                "typeIdentifier": "t_stringliteral_80a088bec8daa0f98c8dccd759a9de5643f02f75aa61e1de9d483dedbd57078d",
                                "typeString": "literal_string \", {\"display_type\": \"number\", \"trait_type\": \"wins\", \"value\": \""
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_a44a2403c24e5dffe1c19627ee12ef440d23e932d2166fed14da273727f2ceb3",
                                "typeString": "literal_string \" }\""
                              }
                            ],
                            "expression": {
                              "id": 3983,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "11720:3:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 3984,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "encodePacked",
                            "nodeType": "MemberAccess",
                            "src": "11720:16:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 4000,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11720:298:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 3982,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "11713:6:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                          "typeString": "type(string storage pointer)"
                        },
                        "typeName": {
                          "id": 3981,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "11713:6:22",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 4001,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11713:306:22",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "11702:317:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 4003,
                  "nodeType": "ExpressionStatement",
                  "src": "11702:317:22"
                },
                {
                  "expression": {
                    "id": 4033,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4004,
                      "name": "json_str",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3928,
                      "src": "12086:8:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 4009,
                              "name": "json_str",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3928,
                              "src": "12121:8:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "hexValue": "2c207b22646973706c61795f74797065223a20226e756d626572222c202274726169745f74797065223a20226c6f73736573222c202276616c7565223a20",
                              "id": 4010,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12144:64:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_5c50eb65f452f18e6c650c1113b93c61cc9fe33731967658504ac15cd6d4988a",
                                "typeString": "literal_string \", {\"display_type\": \"number\", \"trait_type\": \"losses\", \"value\": \""
                              },
                              "value": ", {\"display_type\": \"number\", \"trait_type\": \"losses\", \"value\": "
                            },
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 4013,
                                    "name": "myStats",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3922,
                                    "src": "12240:7:22",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Stats_$3165_memory_ptr",
                                      "typeString": "struct Wizards.Stats memory"
                                    }
                                  },
                                  "id": 4014,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "losses",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3149,
                                  "src": "12240:14:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 4011,
                                  "name": "Strings",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4815,
                                  "src": "12223:7:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_Strings_$4815_$",
                                    "typeString": "type(library Strings)"
                                  }
                                },
                                "id": 4012,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "toString",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 4697,
                                "src": "12223:16:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
                                  "typeString": "function (uint256) pure returns (string memory)"
                                }
                              },
                              "id": 4015,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "12223:32:22",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "hexValue": "207d",
                              "id": 4016,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12259:4:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_a44a2403c24e5dffe1c19627ee12ef440d23e932d2166fed14da273727f2ceb3",
                                "typeString": "literal_string \" }\""
                              },
                              "value": " }"
                            },
                            {
                              "hexValue": "2c207b22646973706c61795f74797065223a20226e756d626572222c202274726169745f74797065223a2022626174746c6573222c202276616c7565223a20",
                              "id": 4017,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12278:65:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_af70327dbe90d33ff37b976db5f325f4b949059dd59b9bec0a08fc171c4c1dc6",
                                "typeString": "literal_string \", {\"display_type\": \"number\", \"trait_type\": \"battles\", \"value\": \""
                              },
                              "value": ", {\"display_type\": \"number\", \"trait_type\": \"battles\", \"value\": "
                            },
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 4020,
                                    "name": "myStats",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3922,
                                    "src": "12375:7:22",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Stats_$3165_memory_ptr",
                                      "typeString": "struct Wizards.Stats memory"
                                    }
                                  },
                                  "id": 4021,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "battles",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3151,
                                  "src": "12375:15:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 4018,
                                  "name": "Strings",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4815,
                                  "src": "12358:7:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_Strings_$4815_$",
                                    "typeString": "type(library Strings)"
                                  }
                                },
                                "id": 4019,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "toString",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 4697,
                                "src": "12358:16:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
                                  "typeString": "function (uint256) pure returns (string memory)"
                                }
                              },
                              "id": 4022,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "12358:33:22",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "hexValue": "207d",
                              "id": 4023,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12395:4:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_a44a2403c24e5dffe1c19627ee12ef440d23e932d2166fed14da273727f2ceb3",
                                "typeString": "literal_string \" }\""
                              },
                              "value": " }"
                            },
                            {
                              "hexValue": "2c207b22646973706c61795f74797065223a20226e756d626572222c202274726169745f74797065223a2022746f6b656e73436c61696d6564222c202276616c7565223a20",
                              "id": 4024,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12418:71:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_aba86b4bc1765b4e1c9eab081acd462829700c420d01ba3c2492253cb6f18d04",
                                "typeString": "literal_string \", {\"display_type\": \"number\", \"trait_type\": \"tokensClaimed\", \"value\": \""
                              },
                              "value": ", {\"display_type\": \"number\", \"trait_type\": \"tokensClaimed\", \"value\": "
                            },
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 4027,
                                    "name": "myStats",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3922,
                                    "src": "12521:7:22",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Stats_$3165_memory_ptr",
                                      "typeString": "struct Wizards.Stats memory"
                                    }
                                  },
                                  "id": 4028,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "tokensClaimed",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3153,
                                  "src": "12521:21:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 4025,
                                  "name": "Strings",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4815,
                                  "src": "12504:7:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_Strings_$4815_$",
                                    "typeString": "type(library Strings)"
                                  }
                                },
                                "id": 4026,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "toString",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 4697,
                                "src": "12504:16:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
                                  "typeString": "function (uint256) pure returns (string memory)"
                                }
                              },
                              "id": 4029,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "12504:39:22",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "hexValue": "207d",
                              "id": 4030,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12547:4:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_a44a2403c24e5dffe1c19627ee12ef440d23e932d2166fed14da273727f2ceb3",
                                "typeString": "literal_string \" }\""
                              },
                              "value": " }"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_5c50eb65f452f18e6c650c1113b93c61cc9fe33731967658504ac15cd6d4988a",
                                "typeString": "literal_string \", {\"display_type\": \"number\", \"trait_type\": \"losses\", \"value\": \""
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_a44a2403c24e5dffe1c19627ee12ef440d23e932d2166fed14da273727f2ceb3",
                                "typeString": "literal_string \" }\""
                              },
                              {
                                "typeIdentifier": "t_stringliteral_af70327dbe90d33ff37b976db5f325f4b949059dd59b9bec0a08fc171c4c1dc6",
                                "typeString": "literal_string \", {\"display_type\": \"number\", \"trait_type\": \"battles\", \"value\": \""
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_a44a2403c24e5dffe1c19627ee12ef440d23e932d2166fed14da273727f2ceb3",
                                "typeString": "literal_string \" }\""
                              },
                              {
                                "typeIdentifier": "t_stringliteral_aba86b4bc1765b4e1c9eab081acd462829700c420d01ba3c2492253cb6f18d04",
                                "typeString": "literal_string \", {\"display_type\": \"number\", \"trait_type\": \"tokensClaimed\", \"value\": \""
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_a44a2403c24e5dffe1c19627ee12ef440d23e932d2166fed14da273727f2ceb3",
                                "typeString": "literal_string \" }\""
                              }
                            ],
                            "expression": {
                              "id": 4007,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "12104:3:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 4008,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "encodePacked",
                            "nodeType": "MemberAccess",
                            "src": "12104:16:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 4031,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12104:458:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 4006,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "12097:6:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                          "typeString": "type(string storage pointer)"
                        },
                        "typeName": {
                          "id": 4005,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "12097:6:22",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 4032,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12097:466:22",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "12086:477:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 4034,
                  "nodeType": "ExpressionStatement",
                  "src": "12086:477:22"
                },
                {
                  "expression": {
                    "id": 4045,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4035,
                      "name": "json_str",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3928,
                      "src": "12599:8:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 4040,
                              "name": "json_str",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3928,
                              "src": "12634:8:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "hexValue": "5d",
                              "id": 4041,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12644:3:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_b36bcf9cc1d9e7f60b1f757ebd8b4694b17fc592b16065d243c43b09fde00b29",
                                "typeString": "literal_string \"]\""
                              },
                              "value": "]"
                            },
                            {
                              "hexValue": "7d",
                              "id": 4042,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12648:3:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_8e2ffa389f3a6ded42d759b3377ac0d928e6a268d143bcc9517093d10c843bff",
                                "typeString": "literal_string \"}\""
                              },
                              "value": "}"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_b36bcf9cc1d9e7f60b1f757ebd8b4694b17fc592b16065d243c43b09fde00b29",
                                "typeString": "literal_string \"]\""
                              },
                              {
                                "typeIdentifier": "t_stringliteral_8e2ffa389f3a6ded42d759b3377ac0d928e6a268d143bcc9517093d10c843bff",
                                "typeString": "literal_string \"}\""
                              }
                            ],
                            "expression": {
                              "id": 4038,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "12617:3:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 4039,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "encodePacked",
                            "nodeType": "MemberAccess",
                            "src": "12617:16:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 4043,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12617:35:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 4037,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "12610:6:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                          "typeString": "type(string storage pointer)"
                        },
                        "typeName": {
                          "id": 4036,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "12610:6:22",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 4044,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12610:43:22",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "12599:54:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 4046,
                  "nodeType": "ExpressionStatement",
                  "src": "12599:54:22"
                },
                {
                  "expression": {
                    "id": 4047,
                    "name": "json_str",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3928,
                    "src": "13625:8:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 3919,
                  "id": 4048,
                  "nodeType": "Return",
                  "src": "13618:15:22"
                }
              ]
            },
            "functionSelector": "0419e314",
            "id": 4050,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "formatTokenURI",
            "nameLocation": "10413:14:22",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3916,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3913,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "10436:8:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 4050,
                  "src": "10428:16:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3912,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10428:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3915,
                  "mutability": "mutable",
                  "name": "imageURI",
                  "nameLocation": "10460:8:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 4050,
                  "src": "10446:22:22",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3914,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "10446:6:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10427:42:22"
            },
            "returnParameters": {
              "id": 3919,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3918,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4050,
                  "src": "10491:13:22",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3917,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "10491:6:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10490:15:22"
            },
            "scope": 4199,
            "src": "10404:3237:22",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4095,
              "nodeType": "Block",
              "src": "14503:322:22",
              "statements": [
                {
                  "expression": {
                    "id": 4069,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 4065,
                        "name": "contractSettings",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3187,
                        "src": "14514:16:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ContractSettings_$3184_storage",
                          "typeString": "struct Wizards.ContractSettings storage ref"
                        }
                      },
                      "id": 4067,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "imageBaseURI",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3183,
                      "src": "14514:29:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 4068,
                      "name": "_imageBaseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4052,
                      "src": "14546:13:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "14514:45:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 4070,
                  "nodeType": "ExpressionStatement",
                  "src": "14514:45:22"
                },
                {
                  "expression": {
                    "id": 4075,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 4071,
                        "name": "contractSettings",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3187,
                        "src": "14570:16:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ContractSettings_$3184_storage",
                          "typeString": "struct Wizards.ContractSettings storage ref"
                        }
                      },
                      "id": 4073,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "phaseDuration",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3177,
                      "src": "14570:30:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 4074,
                      "name": "_phaseDuration",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4054,
                      "src": "14603:14:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "14570:47:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4076,
                  "nodeType": "ExpressionStatement",
                  "src": "14570:47:22"
                },
                {
                  "expression": {
                    "id": 4081,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 4077,
                        "name": "contractSettings",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3187,
                        "src": "14628:16:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ContractSettings_$3184_storage",
                          "typeString": "struct Wizards.ContractSettings storage ref"
                        }
                      },
                      "id": 4079,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "protectionTimeExtension",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3173,
                      "src": "14628:40:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 4080,
                      "name": "_protectionTimeExtension",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4056,
                      "src": "14671:24:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "14628:67:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4082,
                  "nodeType": "ExpressionStatement",
                  "src": "14628:67:22"
                },
                {
                  "expression": {
                    "id": 4087,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 4083,
                        "name": "contractSettings",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3187,
                        "src": "14706:16:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ContractSettings_$3184_storage",
                          "typeString": "struct Wizards.ContractSettings storage ref"
                        }
                      },
                      "id": 4085,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "mintCost",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3167,
                      "src": "14706:25:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 4086,
                      "name": "_mintCost",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4058,
                      "src": "14734:9:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "14706:37:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4088,
                  "nodeType": "ExpressionStatement",
                  "src": "14706:37:22"
                },
                {
                  "expression": {
                    "id": 4093,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 4089,
                        "name": "contractSettings",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3187,
                        "src": "14754:16:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ContractSettings_$3184_storage",
                          "typeString": "struct Wizards.ContractSettings storage ref"
                        }
                      },
                      "id": 4091,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "initiationCost",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3169,
                      "src": "14754:31:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 4092,
                      "name": "_initiationCost",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4060,
                      "src": "14788:15:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "14754:49:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4094,
                  "nodeType": "ExpressionStatement",
                  "src": "14754:49:22"
                }
              ]
            },
            "functionSelector": "3b6029ca",
            "id": 4096,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 4063,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 4062,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2820,
                  "src": "14493:9:22"
                },
                "nodeType": "ModifierInvocation",
                "src": "14493:9:22"
              }
            ],
            "name": "modifyContractSettings",
            "nameLocation": "14309:22:22",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4061,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4052,
                  "mutability": "mutable",
                  "name": "_imageBaseURI",
                  "nameLocation": "14346:13:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 4096,
                  "src": "14332:27:22",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 4051,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "14332:6:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4054,
                  "mutability": "mutable",
                  "name": "_phaseDuration",
                  "nameLocation": "14369:14:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 4096,
                  "src": "14361:22:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4053,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14361:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4056,
                  "mutability": "mutable",
                  "name": "_protectionTimeExtension",
                  "nameLocation": "14393:24:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 4096,
                  "src": "14385:32:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4055,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14385:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4058,
                  "mutability": "mutable",
                  "name": "_mintCost",
                  "nameLocation": "14427:9:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 4096,
                  "src": "14419:17:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4057,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14419:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4060,
                  "mutability": "mutable",
                  "name": "_initiationCost",
                  "nameLocation": "14467:15:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 4096,
                  "src": "14459:23:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4059,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14459:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14331:152:22"
            },
            "returnParameters": {
              "id": 4064,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14503:0:22"
            },
            "scope": 4199,
            "src": "14300:525:22",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4110,
              "nodeType": "Block",
              "src": "14958:141:22",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4105,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 4099,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "14977:3:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 4100,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "14977:10:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 4103,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "14999:4:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Wizards_$4199",
                                "typeString": "contract Wizards"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Wizards_$4199",
                                "typeString": "contract Wizards"
                              }
                            ],
                            "id": 4102,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "14991:7:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 4101,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "14991:7:22",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 4104,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14991:13:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "14977:27:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6f6e6c79207665726966696572",
                        "id": 4106,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15006:15:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_72dd04045e172910387cf44c66079f2dde3a7ce2f4b7496498c2f0a54a40e273",
                          "typeString": "literal_string \"only verifier\""
                        },
                        "value": "only verifier"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_72dd04045e172910387cf44c66079f2dde3a7ce2f4b7496498c2f0a54a40e273",
                          "typeString": "literal_string \"only verifier\""
                        }
                      ],
                      "id": 4098,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "14969:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4107,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14969:53:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4108,
                  "nodeType": "ExpressionStatement",
                  "src": "14969:53:22"
                },
                {
                  "id": 4109,
                  "nodeType": "PlaceholderStatement",
                  "src": "15090:1:22"
                }
              ]
            },
            "id": 4111,
            "name": "onlyVerifier",
            "nameLocation": "14943:12:22",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 4097,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14955:2:22"
            },
            "src": "14934:165:22",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 4125,
              "nodeType": "Block",
              "src": "15129:141:22",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4120,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 4114,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "15148:3:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 4115,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "15148:10:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 4118,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "15170:4:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Wizards_$4199",
                                "typeString": "contract Wizards"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Wizards_$4199",
                                "typeString": "contract Wizards"
                              }
                            ],
                            "id": 4117,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "15162:7:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 4116,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "15162:7:22",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 4119,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15162:13:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "15148:27:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6f6e6c79207665726966696572",
                        "id": 4121,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15177:15:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_72dd04045e172910387cf44c66079f2dde3a7ce2f4b7496498c2f0a54a40e273",
                          "typeString": "literal_string \"only verifier\""
                        },
                        "value": "only verifier"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_72dd04045e172910387cf44c66079f2dde3a7ce2f4b7496498c2f0a54a40e273",
                          "typeString": "literal_string \"only verifier\""
                        }
                      ],
                      "id": 4113,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "15140:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4122,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15140:53:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4123,
                  "nodeType": "ExpressionStatement",
                  "src": "15140:53:22"
                },
                {
                  "id": 4124,
                  "nodeType": "PlaceholderStatement",
                  "src": "15261:1:22"
                }
              ]
            },
            "id": 4126,
            "name": "onlyHolder",
            "nameLocation": "15116:10:22",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 4112,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15126:2:22"
            },
            "src": "15107:163:22",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 4137,
              "nodeType": "Block",
              "src": "15301:138:22",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4132,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 4129,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "15334:3:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 4130,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "15334:10:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 4131,
                          "name": "battler",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3122,
                          "src": "15348:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "15334:21:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c7920626174746c65722063616e2063616c6c20746869732066756e6374696f6e2e",
                        "id": 4133,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15370:38:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_56ff8ffdb167c6e4821e18539cfde4c2cc0b9f2804a9f17e8a6b5f6db560e8ca",
                          "typeString": "literal_string \"Only battler can call this function.\""
                        },
                        "value": "Only battler can call this function."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_56ff8ffdb167c6e4821e18539cfde4c2cc0b9f2804a9f17e8a6b5f6db560e8ca",
                          "typeString": "literal_string \"Only battler can call this function.\""
                        }
                      ],
                      "id": 4128,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "15312:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4134,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15312:107:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4135,
                  "nodeType": "ExpressionStatement",
                  "src": "15312:107:22"
                },
                {
                  "id": 4136,
                  "nodeType": "PlaceholderStatement",
                  "src": "15430:1:22"
                }
              ]
            },
            "id": 4138,
            "name": "onlyBattler",
            "nameLocation": "15287:11:22",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 4127,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15298:2:22"
            },
            "src": "15278:161:22",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 4167,
              "nodeType": "Block",
              "src": "15604:166:22",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 4155,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 4151,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 4146,
                            "name": "_battler",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4140,
                            "src": "15623:8:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 4149,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "15643:1:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 4148,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "15635:7:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 4147,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "15635:7:22",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 4150,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "15635:10:22",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "15623:22:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 4154,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 4152,
                            "name": "_battler",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4140,
                            "src": "15649:8:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "id": 4153,
                            "name": "battler",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3122,
                            "src": "15661:7:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "15649:19:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "15623:45:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c6964206f70657261746f722061646472657373",
                        "id": 4156,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15670:26:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4dfc925ad282fa3ebf2e423380a364fb3cc6b16fd5d3528e40188c1998428c75",
                          "typeString": "literal_string \"Invalid operator address\""
                        },
                        "value": "Invalid operator address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4dfc925ad282fa3ebf2e423380a364fb3cc6b16fd5d3528e40188c1998428c75",
                          "typeString": "literal_string \"Invalid operator address\""
                        }
                      ],
                      "id": 4145,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "15615:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4157,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15615:82:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4158,
                  "nodeType": "ExpressionStatement",
                  "src": "15615:82:22"
                },
                {
                  "expression": {
                    "id": 4161,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4159,
                      "name": "battler",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3122,
                      "src": "15708:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 4160,
                      "name": "_battler",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4140,
                      "src": "15718:8:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "15708:18:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 4162,
                  "nodeType": "ExpressionStatement",
                  "src": "15708:18:22"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 4164,
                        "name": "_battler",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4140,
                        "src": "15753:8:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 4163,
                      "name": "NewBattler",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3195,
                      "src": "15742:10:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 4165,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15742:20:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4166,
                  "nodeType": "EmitStatement",
                  "src": "15737:25:22"
                }
              ]
            },
            "functionSelector": "e52e3249",
            "id": 4168,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 4143,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 4142,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2820,
                  "src": "15594:9:22"
                },
                "nodeType": "ModifierInvocation",
                "src": "15594:9:22"
              }
            ],
            "name": "updateBattler",
            "nameLocation": "15553:13:22",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4141,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4140,
                  "mutability": "mutable",
                  "name": "_battler",
                  "nameLocation": "15575:8:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 4168,
                  "src": "15567:16:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4139,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15567:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15566:18:22"
            },
            "returnParameters": {
              "id": 4144,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15604:0:22"
            },
            "scope": 4199,
            "src": "15544:226:22",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4197,
              "nodeType": "Block",
              "src": "15840:173:22",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 4185,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 4181,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 4176,
                            "name": "_verifier",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4170,
                            "src": "15859:9:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 4179,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "15880:1:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 4178,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "15872:7:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 4177,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "15872:7:22",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 4180,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "15872:10:22",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "15859:23:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 4184,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 4182,
                            "name": "_verifier",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4170,
                            "src": "15886:9:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "id": 4183,
                            "name": "verifier",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3125,
                            "src": "15899:8:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "15886:21:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "15859:48:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c6964206f70657261746f722061646472657373",
                        "id": 4186,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15909:26:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4dfc925ad282fa3ebf2e423380a364fb3cc6b16fd5d3528e40188c1998428c75",
                          "typeString": "literal_string \"Invalid operator address\""
                        },
                        "value": "Invalid operator address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4dfc925ad282fa3ebf2e423380a364fb3cc6b16fd5d3528e40188c1998428c75",
                          "typeString": "literal_string \"Invalid operator address\""
                        }
                      ],
                      "id": 4175,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "15851:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4187,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15851:85:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4188,
                  "nodeType": "ExpressionStatement",
                  "src": "15851:85:22"
                },
                {
                  "expression": {
                    "id": 4191,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4189,
                      "name": "verifier",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3125,
                      "src": "15947:8:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 4190,
                      "name": "_verifier",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4170,
                      "src": "15958:9:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "15947:20:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 4192,
                  "nodeType": "ExpressionStatement",
                  "src": "15947:20:22"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 4194,
                        "name": "_verifier",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4170,
                        "src": "15995:9:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 4193,
                      "name": "NewVerifier",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3191,
                      "src": "15983:11:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 4195,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15983:22:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4196,
                  "nodeType": "EmitStatement",
                  "src": "15978:27:22"
                }
              ]
            },
            "functionSelector": "97fc007c",
            "id": 4198,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 4173,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 4172,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2820,
                  "src": "15830:9:22"
                },
                "nodeType": "ModifierInvocation",
                "src": "15830:9:22"
              }
            ],
            "name": "updateVerifier",
            "nameLocation": "15787:14:22",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4171,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4170,
                  "mutability": "mutable",
                  "name": "_verifier",
                  "nameLocation": "15810:9:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 4198,
                  "src": "15802:17:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4169,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15802:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15801:19:22"
            },
            "returnParameters": {
              "id": 4174,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15840:0:22"
            },
            "scope": 4199,
            "src": "15778:235:22",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 4200,
        "src": "359:15659:22",
        "usedErrors": []
      }
    ],
    "src": "33:15985:22"
  },
  "bytecode": "",
  "bytecodeSha1": "ec6d5da1fe3e3f434c54d54e04eb68c725229579",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.15+commit.e14f2714"
  },
  "contractName": "Wizards",
  "coverageMap": {
    "branches": {
      "12": {},
      "16": {},
      "17": {},
      "18": {},
      "21": {
        "Strings.toString": {
          "162": [
            563,
            573,
            false
          ]
        }
      },
      "22": {
        "Wizards.getPhaseOf": {
          "129": [
            8278,
            8390,
            true
          ]
        },
        "Wizards.initiate": {
          "131": [
            5418,
            5449,
            true
          ],
          "132": [
            5486,
            5535,
            true
          ]
        },
        "Wizards.mint": {
          "130": [
            4337,
            4379,
            true
          ]
        },
        "Wizards.reportBattle": {
          "133": [
            7362,
            7384,
            false
          ],
          "134": [
            7523,
            7546,
            false
          ]
        },
        "Wizards.tokenURI": {
          "137": [
            9662,
            9709,
            false
          ],
          "138": [
            9958,
            10082,
            true
          ]
        },
        "Wizards.updateBattler": {
          "139": [
            15623,
            15645,
            false
          ],
          "140": [
            15649,
            15668,
            true
          ]
        },
        "Wizards.updateVerifier": {
          "135": [
            15859,
            15882,
            false
          ],
          "136": [
            15886,
            15907,
            true
          ]
        }
      },
      "3": {},
      "4": {},
      "6": {
        "ERC721._checkOnERC721Received": {
          "152": [
            12657,
            12675,
            false
          ]
        },
        "ERC721._mint": {
          "153": [
            9536,
            9552,
            true
          ]
        },
        "ERC721._safeMint": {
          "151": [
            8980,
            9034,
            true
          ]
        },
        "ERC721._safeTransfer": {
          "150": [
            7054,
            7102,
            true
          ]
        },
        "ERC721._transfer": {
          "148": [
            10896,
            10927,
            true
          ],
          "149": [
            10992,
            11008,
            true
          ]
        },
        "ERC721.approve": {
          "141": [
            3746,
            3757,
            true
          ],
          "142": [
            3830,
            3851,
            true
          ],
          "143": [
            3855,
            3892,
            true
          ]
        },
        "ERC721.balanceOf": {
          "145": [
            2049,
            2068,
            true
          ]
        },
        "ERC721.safeTransferFrom": {
          "147": [
            5815,
            5856,
            true
          ]
        },
        "ERC721.setApprovalForAll": {
          "146": [
            4480,
            4504,
            true
          ]
        },
        "ERC721.transferFrom": {
          "144": [
            5169,
            5210,
            true
          ]
        }
      },
      "7": {
        "ERC721Enumerable._beforeTokenTransfer": {
          "156": [
            2870,
            2888,
            false
          ],
          "157": [
            2967,
            2977,
            false
          ],
          "158": [
            3067,
            3083,
            false
          ],
          "159": [
            3167,
            3177,
            false
          ]
        },
        "ERC721Enumerable._removeTokenFromOwnerEnumeration": {
          "160": [
            5249,
            5277,
            false
          ]
        },
        "ERC721Enumerable.tokenByIndex": {
          "155": [
            1921,
            1959,
            true
          ]
        },
        "ERC721Enumerable.tokenOfOwnerByIndex": {
          "154": [
            1421,
            1452,
            true
          ]
        }
      },
      "8": {
        "Ownable.transferOwnership": {
          "161": [
            1990,
            2012,
            true
          ]
        }
      }
    },
    "statements": {
      "12": {},
      "16": {},
      "17": {},
      "18": {},
      "21": {
        "Strings.toString": {
          "79": [
            590,
            600
          ],
          "80": [
            711,
            719
          ],
          "81": [
            734,
            744
          ],
          "82": [
            850,
            861
          ],
          "83": [
            876,
            932
          ],
          "84": [
            947,
            958
          ]
        }
      },
      "22": {
        "Wizards.formatTokenURI": {
          "5": [
            11154,
            11637
          ],
          "6": [
            11702,
            12019
          ],
          "7": [
            12086,
            12563
          ],
          "8": [
            12599,
            12653
          ]
        },
        "Wizards.getStatsGivenId": {
          "47": [
            3078,
            3142
          ],
          "48": [
            3153,
            3237
          ],
          "49": [
            3248,
            3336
          ],
          "50": [
            3347,
            3417
          ]
        },
        "Wizards.initiate": {
          "36": [
            5410,
            5467
          ],
          "37": [
            5478,
            5557
          ],
          "38": [
            5712,
            5757
          ],
          "39": [
            5768,
            5860
          ],
          "40": [
            5873,
            5926
          ]
        },
        "Wizards.isActive": {
          "1": [
            2221,
            2295
          ]
        },
        "Wizards.mint": {
          "17": [
            4329,
            4398
          ],
          "18": [
            5159,
            5200
          ],
          "19": [
            5211,
            5250
          ]
        },
        "Wizards.modifyContractSettings": {
          "24": [
            14514,
            14559
          ],
          "25": [
            14570,
            14617
          ],
          "26": [
            14628,
            14695
          ],
          "27": [
            14706,
            14743
          ],
          "28": [
            14754,
            14803
          ]
        },
        "Wizards.rebirth": {
          "67": [
            6670,
            6715
          ],
          "68": [
            6726,
            6801
          ],
          "69": [
            6812,
            6830
          ],
          "70": [
            6843,
            6880
          ],
          "71": [
            6891,
            6944
          ],
          "72": [
            6955,
            7010
          ],
          "73": [
            7021,
            7062
          ],
          "74": [
            7077,
            7143
          ]
        },
        "Wizards.reportBattle": {
          "41": [
            7400,
            7437
          ],
          "42": [
            7452,
            7491
          ],
          "43": [
            7562,
            7601
          ],
          "44": [
            7616,
            7653
          ],
          "45": [
            7677,
            7732
          ]
        },
        "Wizards.tokenURI": {
          "60": [
            9500,
            9577
          ],
          "61": [
            9740,
            9759
          ],
          "62": [
            9878,
            10211
          ],
          "63": [
            10347,
            10388
          ]
        },
        "Wizards.updateBattler": {
          "64": [
            15615,
            15697
          ],
          "65": [
            15708,
            15726
          ],
          "66": [
            15737,
            15762
          ]
        },
        "Wizards.updateVerifier": {
          "52": [
            15851,
            15936
          ],
          "53": [
            15947,
            15967
          ],
          "54": [
            15978,
            16005
          ]
        },
        "Wizards.verifyDuty": {
          "46": [
            8904,
            9124
          ]
        }
      },
      "3": {
        "Context._msgSender": {
          "14": [
            672,
            689
          ]
        }
      },
      "4": {
        "ERC165.supportsInterface": {
          "78": [
            901,
            948
          ]
        }
      },
      "6": {
        "ERC721._approve": {
          "85": [
            11535,
            11564
          ],
          "86": [
            11575,
            11626
          ]
        },
        "ERC721._checkOnERC721Received": {
          "110": [
            12700,
            12760
          ],
          "111": [
            12527,
            12589
          ],
          "112": [
            12972,
            12983
          ]
        },
        "ERC721._exists": {
          "10": [
            7560,
            7597
          ]
        },
        "ERC721._isApprovedOrOwner": {
          "88": [
            7882,
            7955
          ],
          "89": [
            8016,
            8112
          ]
        },
        "ERC721._mint": {
          "113": [
            9528,
            9589
          ],
          "114": [
            9600,
            9658
          ],
          "115": [
            9671,
            9716
          ],
          "116": [
            9729,
            9747
          ],
          "117": [
            9758,
            9779
          ],
          "118": [
            9792,
            9830
          ]
        },
        "ERC721._safeMint": {
          "87": [
            8538,
            8564
          ],
          "102": [
            8929,
            8947
          ],
          "103": [
            8958,
            9112
          ]
        },
        "ERC721._safeTransfer": {
          "100": [
            7007,
            7035
          ],
          "101": [
            7046,
            7157
          ]
        },
        "ERC721._transfer": {
          "90": [
            10888,
            10973
          ],
          "91": [
            10984,
            11049
          ],
          "92": [
            11062,
            11101
          ],
          "93": [
            11166,
            11195
          ],
          "94": [
            11208,
            11228
          ],
          "95": [
            11239,
            11257
          ],
          "96": [
            11268,
            11289
          ],
          "97": [
            11302,
            11334
          ]
        },
        "ERC721.approve": {
          "13": [
            3738,
            3795
          ],
          "15": [
            3808,
            3976
          ],
          "16": [
            3989,
            4010
          ]
        },
        "ERC721.balanceOf": {
          "33": [
            2041,
            2115
          ],
          "34": [
            2126,
            2149
          ]
        },
        "ERC721.getApproved": {
          "11": [
            4180,
            4253
          ],
          "12": [
            4266,
            4297
          ]
        },
        "ERC721.isApprovedForAll": {
          "3": [
            4857,
            4899
          ]
        },
        "ERC721.name": {
          "9": [
            2605,
            2617
          ]
        },
        "ERC721.ownerOf": {
          "32": [
            2354,
            2427
          ]
        },
        "ERC721.safeTransferFrom": {
          "29": [
            5522,
            5561
          ],
          "58": [
            5807,
            5910
          ],
          "59": [
            5921,
            5960
          ]
        },
        "ERC721.setApprovalForAll": {
          "55": [
            4472,
            4534
          ],
          "56": [
            4547,
            4600
          ],
          "57": [
            4611,
            4664
          ]
        },
        "ERC721.supportsInterface": {
          "77": [
            1699,
            1877
          ]
        },
        "ERC721.symbol": {
          "51": [
            2776,
            2790
          ]
        },
        "ERC721.transferFrom": {
          "20": [
            5161,
            5264
          ],
          "21": [
            5277,
            5305
          ]
        }
      },
      "7": {
        "ERC721Enumerable._addTokenToAllTokensEnumeration": {
          "105": [
            4053,
            4097
          ],
          "106": [
            4108,
            4132
          ]
        },
        "ERC721Enumerable._addTokenToOwnerEnumeration": {
          "127": [
            3687,
            3721
          ],
          "128": [
            3732,
            3767
          ]
        },
        "ERC721Enumerable._beforeTokenTransfer": {
          "104": [
            2905,
            2945
          ],
          "107": [
            2994,
            3041
          ],
          "108": [
            3100,
            3145
          ],
          "109": [
            3194,
            3234
          ]
        },
        "ERC721Enumerable._removeTokenFromAllTokensEnumeration": {
          "123": [
            6793,
            6829
          ],
          "124": [
            6898,
            6939
          ],
          "125": [
            7063,
            7094
          ],
          "126": [
            7105,
            7121
          ]
        },
        "ERC721Enumerable._removeTokenFromOwnerEnumeration": {
          "119": [
            5367,
            5411
          ],
          "120": [
            5484,
            5527
          ],
          "121": [
            5662,
            5695
          ],
          "122": [
            5706,
            5747
          ]
        },
        "ERC721Enumerable.supportsInterface": {
          "4": [
            1107,
            1204
          ]
        },
        "ERC721Enumerable.tokenByIndex": {
          "30": [
            1913,
            2008
          ],
          "31": [
            2019,
            2043
          ]
        },
        "ERC721Enumerable.tokenOfOwnerByIndex": {
          "22": [
            1413,
            1500
          ],
          "23": [
            1511,
            1544
          ]
        },
        "ERC721Enumerable.totalSupply": {
          "0": [
            1709,
            1733
          ]
        }
      },
      "8": {
        "Ownable._setOwner": {
          "98": [
            2193,
            2210
          ],
          "99": [
            2221,
            2266
          ]
        },
        "Ownable.owner": {
          "2": [
            1067,
            1080
          ]
        },
        "Ownable.renounceOwnership": {
          "35": [
            1717,
            1738
          ]
        },
        "Ownable.transferOwnership": {
          "75": [
            1982,
            2055
          ],
          "76": [
            2066,
            2085
          ]
        }
      }
    }
  },
  "dependencies": [
    "Context",
    "ERC165",
    "ERC721",
    "ERC721Enumerable",
    "IERC165",
    "IERC721",
    "IERC721Enumerable",
    "IERC721Metadata",
    "Ownable",
    "Strings"
  ],
  "deployedBytecode": "",
  "deployedSourceMap": "359:15659:22:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;988:224:7;;;;;;;;;;-1:-1:-1;988:224:7;;;;;:::i;:::-;;:::i;:::-;;;565:14:23;;558:22;540:41;;528:2;513:18;988:224:7;;;;;;;;10404:3237:22;;;;;;;;;;-1:-1:-1;10404:3237:22;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;8173:364::-;;;;;;;;;;-1:-1:-1;8173:364:22;;;;;:::i;:::-;;:::i;:::-;;;3087:25:23;;;3075:2;3060:18;8173:364:22;2941:177:23;2525:100:6;;;;;;;;;;;;;:::i;4084:221::-;;;;;;;;;;-1:-1:-1;4084:221:6;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;3287:32:23;;;3269:51;;3257:2;3242:18;4084:221:6;3123:203:23;3607:411:6;;;;;;;;;;-1:-1:-1;3607:411:6;;;;;:::i;:::-;;:::i;:::-;;8623:72:22;;;;;;;;;;-1:-1:-1;8623:72:22;;;;;:::i;:::-;-1:-1:-1;8679:4:22;;8623:72;4293:986;;;;;;;;;;;;;:::i;1628:113:7:-;;;;;;;;;;-1:-1:-1;1716:10:7;:17;1628:113;;4974:339:6;;;;;;;;;;-1:-1:-1;4974:339:6;;;;;:::i;:::-;;:::i;614:23:22:-;;;;;;;;;;-1:-1:-1;614:23:22;;;;-1:-1:-1;;;;;614:23:22;;;1296:256:7;;;;;;;;;;-1:-1:-1;1296:256:7;;;;;:::i;:::-;;:::i;14300:525:22:-;;;;;;;;;;-1:-1:-1;14300:525:22;;;;;:::i;:::-;;:::i;5384:185:6:-;;;;;;;;;;-1:-1:-1;5384:185:6;;;;;:::i;:::-;;:::i;9329:61:22:-;;;;;;;;;;-1:-1:-1;9329:61:22;;;;;:::i;:::-;;:::i;1818:233:7:-;;;;;;;;;;-1:-1:-1;1818:233:7;;;;;:::i;:::-;;:::i;2219:239:6:-;;;;;;;;;;-1:-1:-1;2219:239:6;;;;;:::i;:::-;;:::i;1949:208::-;;;;;;;;;;-1:-1:-1;1949:208:6;;;;;:::i;:::-;;:::i;1652:94:8:-;;;;;;;;;;;;;:::i;5354:580:22:-;;;;;;;;;;-1:-1:-1;5354:580:22;;;;;:::i;:::-;;:::i;7195:919::-;;;;;;;;;;-1:-1:-1;7195:919:22;;;;;:::i;:::-;;:::i;2147:156::-;;;;;;;;;;-1:-1:-1;2147:156:22;;;;;:::i;:::-;2204:4;2228:25;;;:14;:25;;;;;:49;;;2280:15;-1:-1:-1;2228:67:22;2147:156;8774:450;;;;;;;;;;-1:-1:-1;8774:450:22;;;;;:::i;:::-;;:::i;2840:657::-;;;;;;;;;;-1:-1:-1;2840:657:22;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1001:87:8:-;;;;;;;;;;-1:-1:-1;1074:6:8;;-1:-1:-1;;;;;1074:6:8;1001:87;;2694:104:6;;;;;;;;;;;;;:::i;15778:235:22:-;;;;;;;;;;-1:-1:-1;15778:235:22;;;;;:::i;:::-;;:::i;4377:295:6:-;;;;;;;;;;-1:-1:-1;4377:295:6;;;;;:::i;:::-;;:::i;5640:328::-;;;;;;;;;;-1:-1:-1;5640:328:6;;;;;:::i;:::-;;:::i;548:22:22:-;;;;;;;;;;-1:-1:-1;548:22:22;;;;-1:-1:-1;;;;;548:22:22;;;9400:996;;;;;;;;;;-1:-1:-1;9400:996:22;;;;;:::i;:::-;;:::i;493:48::-;;;;;;;;;;-1:-1:-1;493:48:22;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;1689:40::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;15544:226::-;;;;;;;;;;-1:-1:-1;15544:226:22;;;;;:::i;:::-;;:::i;5942:1243::-;;;;;;:::i;:::-;;:::i;4743:164:6:-;;;;;;;;;;-1:-1:-1;4743:164:6;;;;;:::i;:::-;-1:-1:-1;;;;;4864:25:6;;;4840:4;4864:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;4743:164;1901:192:8;;;;;;;;;;-1:-1:-1;1901:192:8;;;;;:::i;:::-;;:::i;988:224:7:-;1090:4;-1:-1:-1;;;;;;1114:50:7;;-1:-1:-1;;;1114:50:7;;:90;;;1168:36;1192:11;1168:23;:36::i;:::-;1107:97;988:224;-1:-1:-1;;988:224:7:o;10404:3237:22:-;10491:13;10572:20;10595:14;:24;10610:8;10595:24;;;;;;;;;;;10572:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;10632:22;10857:8;11040:31;11057:7;:13;;;11040:16;:31::i;:::-;10664:424;;;;;;;;;:::i;:::-;;;;;;;;;;;;;10632:457;;11189:8;11287:28;11304:7;:10;;;11287:16;:28::i;:::-;11424:38;11441:7;:20;;;11424:16;:38::i;:::-;11577:40;11594:7;:22;;;11577:16;:40::i;:::-;11172:464;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;11154:483;;11737:8;11838:31;11855:7;:13;;;11838:16;:31::i;:::-;11969:30;11986:7;:12;;;11969:16;:30::i;:::-;11720:298;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;11702:317;;12121:8;12223:32;12240:7;:14;;;12223:16;:32::i;:::-;12358:33;12375:7;:15;;;12358:16;:33::i;:::-;12504:39;12521:7;:21;;;12504:16;:39::i;:::-;12104:458;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;12086:477;;12634:8;12617:35;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;12617:35:22;;;;;;;10404:3237;-1:-1:-1;;;;;10404:3237:22:o;8173:364::-;8345:30;;8231:7;8297:24;;;:14;:24;;;;;;;:44;;8231:7;;;;8389:1;;8345:30;8279:62;;:15;:62;:::i;:::-;8278:97;;;;:::i;:::-;:112;:216;;8464:30;;8416:24;;;;:14;:24;;;;;;;;:44;;8398:62;;:15;:62;:::i;:::-;8397:97;;;;:::i;:::-;8278:216;;;8393:1;8278:216;8251:243;8173:364;-1:-1:-1;;;8173:364:22:o;2525:100:6:-;2579:13;2612:5;2605:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2525:100;:::o;4084:221::-;4160:7;7567:16;;;:7;:16;;;;;;-1:-1:-1;;;;;7567:16:6;4180:73;;;;-1:-1:-1;;;4180:73:6;;20150:2:23;4180:73:6;;;20132:21:23;20189:2;20169:18;;;20162:30;20228:34;20208:18;;;20201:62;-1:-1:-1;;;20279:18:23;;;20272:42;20331:19;;4180:73:6;;;;;;;;;-1:-1:-1;4273:24:6;;;;:15;:24;;;;;;-1:-1:-1;;;;;4273:24:6;;4084:221::o;3607:411::-;3688:13;3704:23;3719:7;3704:14;:23::i;:::-;3688:39;;3752:5;-1:-1:-1;;;;;3746:11:6;:2;-1:-1:-1;;;;;3746:11:6;;3738:57;;;;-1:-1:-1;;;3738:57:6;;20563:2:23;3738:57:6;;;20545:21:23;20602:2;20582:18;;;20575:30;20641:34;20621:18;;;20614:62;-1:-1:-1;;;20692:18:23;;;20685:31;20733:19;;3738:57:6;20361:397:23;3738:57:6;679:10:3;-1:-1:-1;;;;;3830:21:6;;;;:62;;-1:-1:-1;3855:37:6;3872:5;679:10:3;4743:164:6;:::i;3855:37::-;3808:168;;;;-1:-1:-1;;;3808:168:6;;20965:2:23;3808:168:6;;;20947:21:23;21004:2;20984:18;;;20977:30;21043:34;21023:18;;;21016:62;21114:26;21094:18;;;21087:54;21158:19;;3808:168:6;20763:420:23;3808:168:6;3989:21;3998:2;4002:7;3989:8;:21::i;:::-;3677:341;3607:411;;:::o;4293:986:22:-;4353:26;;1716:10:7;:17;4337:42:22;4329:69;;;;-1:-1:-1;;;4329:69:22;;21390:2:23;4329:69:22;;;21372:21:23;21429:2;21409:18;;;21402:30;-1:-1:-1;;;21448:18:23;;;21441:44;21502:18;;4329:69:22;21188:338:23;4329:69:22;4516:21;4575:13;1716:10:7;:17;;1628:113;4575:13:22;4558:60;;;;;;21716:19:23;;;;-1:-1:-1;;4590:10:22;21773:2:23;21769:15;21765:53;21751:12;;;21744:75;4602:15:22;21835:12:23;;;21828:28;21872:12;;4558:60:22;;;-1:-1:-1;;4558:60:22;;;;;;;;;4548:71;;4558:60;4548:71;;;;;-1:-1:-1;4540:80:22;4763:18;4779:2;4548:71;4763:18;:::i;:::-;4758:23;;:2;:23;:::i;:::-;4745:36;-1:-1:-1;4792:20:22;4842:2;4821:17;4835:3;4821:13;:17;:::i;:::-;4820:24;;;;:::i;:::-;4815:29;;:2;:29;:::i;:::-;4792:52;-1:-1:-1;4855:22:22;4908:2;4886:16;4908:2;4886:13;:16;:::i;:::-;:18;;4903:1;4886:18;:::i;:::-;4885:25;;;;:::i;:::-;4880:30;;:2;:30;:::i;:::-;4855:55;-1:-1:-1;4921:13:22;4965:2;4943:16;4965:2;4943:13;:16;:::i;:::-;:18;;4960:1;4943:18;:::i;:::-;4942:25;;;;:::i;:::-;4937:30;;:2;:30;:::i;:::-;4921:46;-1:-1:-1;4978:15:22;5027:1;5005:16;5019:2;5005:13;:16;:::i;:::-;:18;;5022:1;5005:18;:::i;:::-;5004:24;;;;:::i;:::-;4996:33;;;;;;;;:::i;:::-;4978:51;;5042:20;5066:82;;;;;;;;5072:1;5066:82;;;;5075:2;5066:82;;;;5079:12;5066:82;;;;5093:14;5066:82;;;;5109:5;5066:82;;;;5116:1;5066:82;;;;5119:1;5066:82;;;;5122:1;5066:82;;;;5125:1;5066:82;;;;5128:1;5066:82;;;;5131:1;5066:82;;;;5134:1;5066:82;;;;5137:1;5066:82;;;;5140:7;5066:82;;;;;;;;:::i;:::-;;;5042:106;-1:-1:-1;5042:106:22;5159:14;:31;5174:13;1716:10:7;:17;;1628:113;5174:13:22;:15;;5188:1;5174:15;:::i;:::-;5159:31;;;;;;;;;;;:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;5211:39;5221:10;5233:13;1716:10:7;:17;;1628:113;5233:13:22;:15;;5247:1;5233:15;:::i;:::-;5211:9;:39::i;:::-;4318:961;;;;;;;4293:986::o;4974:339:6:-;5169:41;679:10:3;5202:7:6;5169:18;:41::i;:::-;5161:103;;;;-1:-1:-1;;;5161:103:6;;;;;;;:::i;:::-;5277:28;5287:4;5293:2;5297:7;5277:9;:28::i;1296:256:7:-;1393:7;1429:23;1446:5;1429:16;:23::i;:::-;1421:5;:31;1413:87;;;;-1:-1:-1;;;1413:87:7;;22938:2:23;1413:87:7;;;22920:21:23;22977:2;22957:18;;;22950:30;23016:34;22996:18;;;22989:62;-1:-1:-1;;;23067:18:23;;;23060:41;23118:19;;1413:87:7;22736:407:23;1413:87:7;-1:-1:-1;;;;;;1518:19:7;;;;;;;;:12;:19;;;;;;;;:26;;;;;;;;;1296:256::o;14300:525:22:-;1074:6:8;;-1:-1:-1;;;;;1074:6:8;679:10:3;1221:23:8;1213:68;;;;-1:-1:-1;;;1213:68:8;;;;;;;:::i;:::-;14514:29:22;:45:::1;14546:13:::0;14514:29;:45:::1;:::i;:::-;-1:-1:-1::0;14570:30:22;:47;;;;14628:40;:67;;;;14570:16:::1;14706:37:::0;14754:31;:49;-1:-1:-1;14300:525:22:o;5384:185:6:-;5522:39;5539:4;5545:2;5549:7;5522:39;;;;;;;;;;;;:16;:39::i;9329:61:22:-;15170:4;15148:10;:27;15140:53;;;;-1:-1:-1;;;15140:53:22;;25915:2:23;15140:53:22;;;25897:21:23;25954:2;25934:18;;;25927:30;-1:-1:-1;;;25973:18:23;;;25966:43;26026:18;;15140:53:22;25713:337:23;15140:53:22;9329:61;:::o;1818:233:7:-;1893:7;1929:30;1716:10;:17;;1628:113;1929:30;1921:5;:38;1913:95;;;;-1:-1:-1;;;1913:95:7;;26257:2:23;1913:95:7;;;26239:21:23;26296:2;26276:18;;;26269:30;26335:34;26315:18;;;26308:62;-1:-1:-1;;;26386:18:23;;;26379:42;26438:19;;1913:95:7;26055:408:23;1913:95:7;2026:10;2037:5;2026:17;;;;;;;;:::i;:::-;;;;;;;;;2019:24;;1818:233;;;:::o;2219:239:6:-;2291:7;2327:16;;;:7;:16;;;;;;-1:-1:-1;;;;;2327:16:6;;2354:73;;;;-1:-1:-1;;;2354:73:6;;26802:2:23;2354:73:6;;;26784:21:23;26841:2;26821:18;;;26814:30;26880:34;26860:18;;;26853:62;-1:-1:-1;;;26931:18:23;;;26924:39;26980:19;;2354:73:6;26600:405:23;1949:208:6;2021:7;-1:-1:-1;;;;;2049:19:6;;2041:74;;;;-1:-1:-1;;;2041:74:6;;27212:2:23;2041:74:6;;;27194:21:23;27251:2;27231:18;;;27224:30;27290:34;27270:18;;;27263:62;-1:-1:-1;;;27341:18:23;;;27334:40;27391:19;;2041:74:6;27010:406:23;2041:74:6;-1:-1:-1;;;;;;2133:16:6;;;;;:9;:16;;;;;;;1949:208::o;1652:94:8:-;1074:6;;-1:-1:-1;;;;;1074:6:8;679:10:3;1221:23:8;1213:68;;;;-1:-1:-1;;;1213:68:8;;;;;;;:::i;:::-;1717:21:::1;1735:1;1717:9;:21::i;:::-;1652:94::o:0;5354:580:22:-;5439:10;5418:17;5426:8;5418:7;:17::i;:::-;-1:-1:-1;;;;;5418:31:22;;5410:57;;;;-1:-1:-1;;;5410:57:22;;27623:2:23;5410:57:22;;;27605:21:23;27662:2;27642:18;;;27635:30;-1:-1:-1;;;27681:18:23;;;27674:43;27734:18;;5410:57:22;27421:337:23;5410:57:22;5486:24;;;;:14;:24;;;;;;;;:44;;:49;5478:79;;;;-1:-1:-1;;;5478:79:22;;27965:2:23;5478:79:22;;;27947:21:23;28004:2;27984:18;;;27977:30;-1:-1:-1;;;28023:18:23;;;28016:47;28080:18;;5478:79:22;27763:341:23;5478:79:22;5653:21;5677:24;;;:14;:24;;;;;;;;5742:15;5712:27;;;:45;;;5820:40;;5677:24;;5802:58;;5820:40;5802:58;:::i;:::-;5768:31;;;:92;5878:48;;;5888:10;28283:51:23;;5910:15:22;28365:2:23;28350:18;;28343:34;5900:8:22;;5878:48;;28256:18:23;5878:48:22;;;;;;;5399:535;5354:580;:::o;7195:919::-;15348:7;;-1:-1:-1;;;;;15348:7:22;15334:10;:21;15312:107;;;;-1:-1:-1;;;15312:107:22;;28590:2:23;15312:107:22;;;28572:21:23;28629:2;28609:18;;;28602:30;28668:34;28648:18;;;28641:62;-1:-1:-1;;;28719:18:23;;;28712:34;28763:19;;15312:107:22;28388:400:23;15312:107:22;7373:11:::1;7362:7;:22;;;;;;;;:::i;:::-;::::0;7359:306:::1;;7400:27;::::0;;;:14:::1;:27;::::0;;;;:32:::1;;:37:::0;;7436:1:::1;::::0;7400:27;:37:::1;::::0;7436:1;;7400:37:::1;:::i;:::-;::::0;;;-1:-1:-1;;7452:27:22::1;::::0;;;:14:::1;:27;::::0;;;;:34:::1;;:39:::0;;7490:1:::1;::::0;7452:27;:39:::1;::::0;7490:1;;7452:39:::1;:::i;:::-;::::0;;;-1:-1:-1;7359:306:22::1;::::0;-1:-1:-1;7359:306:22::1;;7534:12;7523:7;:23;;;;;;;;:::i;:::-;::::0;7520:145:::1;;7562:27;::::0;;;:14:::1;:27;::::0;;;;:34:::1;;:39:::0;;7600:1:::1;::::0;7562:27;:39:::1;::::0;7600:1;;7562:39:::1;:::i;:::-;::::0;;;-1:-1:-1;;7616:27:22::1;::::0;;;:14:::1;:27;::::0;;;;:32:::1;;:37:::0;;7652:1:::1;::::0;7616:27;:37:::1;::::0;7652:1;;7616:37:::1;:::i;:::-;::::0;;;-1:-1:-1;;7520:145:22::1;7677:27;::::0;;;:14:::1;:27;::::0;;;;:41:::1;;:55:::0;;7722:10;;7677:27;:55:::1;::::0;7722:10;;7677:55:::1;:::i;:::-;::::0;;;-1:-1:-1;;;;;;;7195:919:22:o;8774:450::-;14999:4;14977:10;:27;14969:53;;;;-1:-1:-1;;;14969:53:22;;25915:2:23;14969:53:22;;;25897:21:23;25954:2;25934:18;;;25927:30;-1:-1:-1;;;25973:18:23;;;25966:43;26026:18;;14969:53:22;25713:337:23;14969:53:22;8970:24:::1;::::0;;;:14:::1;:24;::::0;;;;:48:::1;;::::0;9021:15:::1;-1:-1:-1::0;8970:153:22::1;;9075:24;::::0;;;:14:::1;:24;::::0;;;;:48:::1;;::::0;8970:153:::1;;;9057:15;8970:153;8955:169;::::0;:11;:169:::1;:::i;:::-;8904:24;::::0;;;:14:::1;:24;::::0;;;;;:48:::1;;:220:::0;;;;-1:-1:-1;8774:450:22:o;2840:657::-;2906:12;;:::i;:::-;2931:15;2949:21;2960:9;2949:10;:21::i;:::-;:25;;2973:1;2949:25;:::i;:::-;2931:43;;3019:20;3042:14;:25;3057:9;3042:25;;;;;;;;;;;3019:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;-1:-1:-1;3114:28:22;;3091:10;;;;3019:48;;-1:-1:-1;3114:28:22;3091:20;;3104:7;;3091:20;:::i;:::-;:51;;;;:::i;:::-;3078:10;;;:64;3209:28;;3176:20;;;;:30;;3199:7;;3176:30;:::i;:::-;:61;;;;:::i;:::-;3153:20;;;:84;3308:28;;3273:22;;;;:32;;3298:7;;3273:32;:::i;:::-;:63;;;;:::i;:::-;3248:22;;;:88;3389:28;;3363:13;;;;:23;;3379:7;;3363:23;:::i;:::-;:54;;;;:::i;:::-;3347:13;;;:70;:7;2840:657;-1:-1:-1;;;2840:657:22:o;2694:104:6:-;2750:13;2783:7;2776:14;;;;;:::i;15778:235:22:-;1074:6:8;;-1:-1:-1;;;;;1074:6:8;679:10:3;1221:23:8;1213:68;;;;-1:-1:-1;;;1213:68:8;;;;;;;:::i;:::-;-1:-1:-1;;;;;15859:23:22;::::1;::::0;;::::1;::::0;:48:::1;;-1:-1:-1::0;15899:8:22::1;::::0;-1:-1:-1;;;;;15886:21:22;;::::1;15899:8:::0;::::1;15886:21;;15859:48;15851:85;;;::::0;-1:-1:-1;;;15851:85:22;;28995:2:23;15851:85:22::1;::::0;::::1;28977:21:23::0;29034:2;29014:18;;;29007:30;-1:-1:-1;;;29053:18:23;;;29046:54;29117:18;;15851:85:22::1;28793:348:23::0;15851:85:22::1;15947:8;:20:::0;;-1:-1:-1;;;;;;15947:20:22::1;-1:-1:-1::0;;;;;15947:20:22;::::1;::::0;;::::1;::::0;;;15983:22:::1;::::0;3269:51:23;;;15983:22:22::1;::::0;3257:2:23;3242:18;15983:22:22::1;;;;;;;;15778:235:::0;:::o;4377:295:6:-;679:10:3;-1:-1:-1;;;;;4480:24:6;;;4472:62;;;;-1:-1:-1;;;4472:62:6;;29348:2:23;4472:62:6;;;29330:21:23;29387:2;29367:18;;;29360:30;29426:27;29406:18;;;29399:55;29471:18;;4472:62:6;29146:349:23;4472:62:6;679:10:3;4547:32:6;;;;:18;:32;;;;;;;;-1:-1:-1;;;;;4547:42:6;;;;;;;;;;;;:53;;-1:-1:-1;;4547:53:6;;;;;;;;;;4616:48;;540:41:23;;;4547:42:6;;679:10:3;4616:48:6;;513:18:23;4616:48:6;;;;;;;4377:295;;:::o;5640:328::-;5815:41;679:10:3;5848:7:6;5815:18;:41::i;:::-;5807:103;;;;-1:-1:-1;;;5807:103:6;;;;;;;:::i;:::-;5921:39;5935:4;5941:2;5945:7;5954:5;5921:13;:39::i;:::-;5640:328;;;;:::o;9400:996:22:-;7543:4:6;7567:16;;;:7;:16;;;;;;9474:13:22;;-1:-1:-1;;;;;7567:16:6;9500:77:22;;;;-1:-1:-1;;;9500:77:22;;29702:2:23;9500:77:22;;;29684:21:23;29741:2;29721:18;;;29714:30;29780:34;29760:18;;;29753:62;-1:-1:-1;;;29831:18:23;;;29824:45;29886:19;;9500:77:22;29500:411:23;9500:77:22;9662:24;;;;:14;:24;;;;;;;:44;;9621:27;;9662:47;9659:564;;-1:-1:-1;9740:19:22;;;;;;;;;;;;-1:-1:-1;;;9740:19:22;;;;9659:564;;;10025:30;;9977:24;;;;:14;:24;;;;;;;;:44;;9917:294;;10081:1;;9959:62;;:15;:62;:::i;:::-;9958:97;;;;:::i;:::-;:124;:228;;10156:30;;10108:24;;;;:14;:24;;;;;;;;:44;;10090:62;;:15;:62;:::i;:::-;10089:97;;;;:::i;:::-;9917:16;:294::i;9958:228::-;10085:1;9917:16;:294::i;:::-;9878:333;;9659:564;10265:70;;10233:22;;10265:70;;10282:29;;10313:13;;10265:70;;;:::i;:::-;;;;;;;;;;;;;10233:103;;10354:34;10369:8;10379;10354:14;:34::i;:::-;10347:41;9400:996;-1:-1:-1;;;;9400:996:22:o;1689:40::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1689:40:22;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;15544:226::-;1074:6:8;;-1:-1:-1;;;;;1074:6:8;679:10:3;1221:23:8;1213:68;;;;-1:-1:-1;;;1213:68:8;;;;;;;:::i;:::-;-1:-1:-1;;;;;15623:22:22;::::1;::::0;;::::1;::::0;:45:::1;;-1:-1:-1::0;15661:7:22::1;::::0;-1:-1:-1;;;;;15649:19:22;;::::1;15661:7:::0;::::1;15649:19;;15623:45;15615:82;;;::::0;-1:-1:-1;;;15615:82:22;;28995:2:23;15615:82:22::1;::::0;::::1;28977:21:23::0;29034:2;29014:18;;;29007:30;-1:-1:-1;;;29053:18:23;;;29046:54;29117:18;;15615:82:22::1;28793:348:23::0;15615:82:22::1;15708:7;:18:::0;;-1:-1:-1;;;;;;15708:18:22::1;-1:-1:-1::0;;;;;15708:18:22;::::1;::::0;;::::1;::::0;;;15742:20:::1;::::0;3269:51:23;;;15742:20:22::1;::::0;3257:2:23;3242:18;15742:20:22::1;3123:203:23::0;5942:1243:22;6479:21;6503:24;;;:14;:24;;;;;;6597:13;1716:10:7;:17;;1628:113;6597:13:22;6641;;6580:75;;;;;;31307:19:23;;;;-1:-1:-1;;6612:10:22;31364:2:23;31360:15;31356:53;31342:12;;;31335:75;6624:15:22;31426:12:23;;;31419:28;31463:12;;;31456:28;31500:13;;6580:75:22;;;-1:-1:-1;;6580:75:22;;;;;;;;;6570:86;;6580:75;6570:86;;;;6700:15;6670:27;;;:45;6761:40;;6726:31;;;:75;;6570:86;;-1:-1:-1;6761:40:22;;6562:95;;6726:75;;6761:40;;6726:75;:::i;:::-;;;;-1:-1:-1;;6812:18:22;;6829:1;;6812:7;;:13;;:18;;6829:1;;6812:18;:::i;:::-;;;;-1:-1:-1;6857:18:22;;-1:-1:-1;6873:2:22;6857:13;:18;:::i;:::-;:23;;6878:2;6857:23;:::i;:::-;6843:7;:10;;;:37;;;;;;;:::i;:::-;;;;-1:-1:-1;6937:2:22;;-1:-1:-1;6915:19:22;6929:5;6915:13;:19;:::i;:::-;:24;;;;:::i;:::-;:29;;6942:2;6915:29;:::i;:::-;6891:7;:20;;;:53;;;;;;;:::i;:::-;;;;-1:-1:-1;7003:2:22;;-1:-1:-1;6981:19:22;6995:5;6981:13;:19;:::i;:::-;:24;;;;:::i;:::-;:29;;7008:2;6981:29;:::i;:::-;6955:7;:22;;;:55;;;;;;;:::i;:::-;;;;-1:-1:-1;7060:2:22;;-1:-1:-1;7038:19:22;7052:5;7038:13;:19;:::i;:::-;:24;;;;:::i;:::-;7021:7;:13;;;:41;;;;;;;:::i;:::-;;;;-1:-1:-1;;7112:13:22;;7082:61;;;7090:10;31726:51:23;;31808:2;31793:18;;31786:34;;;;7127:15:22;31836:18:23;;;31829:34;7102:8:22;;7082:61;;31714:2:23;31699:18;7082:61:22;;;;;;;5994:1191;;5942:1243;:::o;1901:192:8:-;1074:6;;-1:-1:-1;;;;;1074:6:8;679:10:3;1221:23:8;1213:68;;;;-1:-1:-1;;;1213:68:8;;;;;;;:::i;:::-;-1:-1:-1;;;;;1990:22:8;::::1;1982:73;;;::::0;-1:-1:-1;;;1982:73:8;;32076:2:23;1982:73:8::1;::::0;::::1;32058:21:23::0;32115:2;32095:18;;;32088:30;32154:34;32134:18;;;32127:62;-1:-1:-1;;;32205:18:23;;;32198:36;32251:19;;1982:73:8::1;31874:402:23::0;1982:73:8::1;2066:19;2076:8;2066:9;:19::i;1580:305:6:-:0;1682:4;-1:-1:-1;;;;;;1719:40:6;;-1:-1:-1;;;1719:40:6;;:105;;-1:-1:-1;;;;;;;1776:48:6;;-1:-1:-1;;;1776:48:6;1719:105;:158;;;-1:-1:-1;;;;;;;;;;908:40:4;;;1841:36:6;799:157:4;286:723:21;342:13;563:5;572:1;563:10;559:53;;-1:-1:-1;;590:10:21;;;;;;;;;;;;-1:-1:-1;;;590:10:21;;;;;286:723::o;559:53::-;637:5;622:12;678:78;685:9;;678:78;;711:8;;;;:::i;:::-;;-1:-1:-1;734:10:21;;-1:-1:-1;742:2:21;734:10;;:::i;:::-;;;678:78;;;766:19;798:6;788:17;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;788:17:21;;766:39;;816:154;823:10;;816:154;;850:11;860:1;850:11;;:::i;:::-;;-1:-1:-1;919:10:21;927:2;919:5;:10;:::i;:::-;906:24;;:2;:24;:::i;:::-;893:39;;876:6;883;876:14;;;;;;;;:::i;:::-;;;;:56;-1:-1:-1;;;;;876:56:21;;;;;;;;-1:-1:-1;947:11:21;956:2;947:11;;:::i;:::-;;;816:154;;11460:174:6;11535:24;;;;:15;:24;;;;;:29;;-1:-1:-1;;;;;;11535:29:6;-1:-1:-1;;;;;11535:29:6;;;;;;;;:24;;11589:23;11535:24;11589:14;:23::i;:::-;-1:-1:-1;;;;;11580:46:6;;;;;;;;;;;11460:174;;:::o;8462:110::-;8538:26;8548:2;8552:7;8538:26;;;;;;;;;;;;:9;:26::i;:::-;8462:110;;:::o;7772:348::-;7865:4;7567:16;;;:7;:16;;;;;;-1:-1:-1;;;;;7567:16:6;7882:73;;;;-1:-1:-1;;;7882:73:6;;32623:2:23;7882:73:6;;;32605:21:23;32662:2;32642:18;;;32635:30;32701:34;32681:18;;;32674:62;-1:-1:-1;;;32752:18:23;;;32745:42;32804:19;;7882:73:6;32421:408:23;7882:73:6;7966:13;7982:23;7997:7;7982:14;:23::i;:::-;7966:39;;8035:5;-1:-1:-1;;;;;8024:16:6;:7;-1:-1:-1;;;;;8024:16:6;;:51;;;;8068:7;-1:-1:-1;;;;;8044:31:6;:20;8056:7;8044:11;:20::i;:::-;-1:-1:-1;;;;;8044:31:6;;8024:51;:87;;;-1:-1:-1;;;;;;4864:25:6;;;4840:4;4864:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;8079:32;4743:164;10764:578;10923:4;-1:-1:-1;;;;;10896:31:6;:23;10911:7;10896:14;:23::i;:::-;-1:-1:-1;;;;;10896:31:6;;10888:85;;;;-1:-1:-1;;;10888:85:6;;33036:2:23;10888:85:6;;;33018:21:23;33075:2;33055:18;;;33048:30;33114:34;33094:18;;;33087:62;-1:-1:-1;;;33165:18:23;;;33158:39;33214:19;;10888:85:6;32834:405:23;10888:85:6;-1:-1:-1;;;;;10992:16:6;;10984:65;;;;-1:-1:-1;;;10984:65:6;;33446:2:23;10984:65:6;;;33428:21:23;33485:2;33465:18;;;33458:30;33524:34;33504:18;;;33497:62;-1:-1:-1;;;33575:18:23;;;33568:34;33619:19;;10984:65:6;33244:400:23;10984:65:6;11062:39;11083:4;11089:2;11093:7;11062:20;:39::i;:::-;11166:29;11183:1;11187:7;11166:8;:29::i;:::-;-1:-1:-1;;;;;11208:15:6;;;;;;:9;:15;;;;;:20;;11227:1;;11208:15;:20;;11227:1;;11208:20;:::i;:::-;;;;-1:-1:-1;;;;;;;11239:13:6;;;;;;:9;:13;;;;;:18;;11256:1;;11239:13;:18;;11256:1;;11239:18;:::i;:::-;;;;-1:-1:-1;;11268:16:6;;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;11268:21:6;-1:-1:-1;;;;;11268:21:6;;;;;;;;;11307:27;;11268:16;;11307:27;;;;;;;10764:578;;;:::o;2101:173:8:-;2176:6;;;-1:-1:-1;;;;;2193:17:8;;;-1:-1:-1;;;;;;2193:17:8;;;;;;;2226:40;;2176:6;;;2193:17;2176:6;;2226:40;;2157:16;;2226:40;2146:128;2101:173;:::o;6850:315:6:-;7007:28;7017:4;7023:2;7027:7;7007:9;:28::i;:::-;7054:48;7077:4;7083:2;7087:7;7096:5;7054:22;:48::i;:::-;7046:111;;;;-1:-1:-1;;;7046:111:6;;;;;;;:::i;8799:321::-;8929:18;8935:2;8939:7;8929:5;:18::i;:::-;8980:54;9011:1;9015:2;9019:7;9028:5;8980:22;:54::i;:::-;8958:154;;;;-1:-1:-1;;;8958:154:6;;;;;;;:::i;2664:589:7:-;-1:-1:-1;;;;;2870:18:7;;2866:187;;2905:40;2937:7;4080:10;:17;;4053:24;;;;:15;:24;;;;;:44;;;4108:24;;;;;;;;;;;;3976:164;2905:40;2866:187;;;2975:2;-1:-1:-1;;;;;2967:10:7;:4;-1:-1:-1;;;;;2967:10:7;;2963:90;;2994:47;3027:4;3033:7;2994:32;:47::i;:::-;-1:-1:-1;;;;;3067:16:7;;3063:183;;3100:45;3137:7;3100:36;:45::i;3063:183::-;3173:4;-1:-1:-1;;;;;3167:10:7;:2;-1:-1:-1;;;;;3167:10:7;;3163:83;;3194:40;3222:2;3226:7;3194:27;:40::i;12199:803:6:-;12354:4;-1:-1:-1;;;;;12375:13:6;;1064:20:20;1112:8;12371:624:6;;12411:72;;-1:-1:-1;;;12411:72:6;;-1:-1:-1;;;;;12411:36:6;;;;;:72;;679:10:3;;12462:4:6;;12468:7;;12477:5;;12411:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12411:72:6;;;;;;;;-1:-1:-1;;12411:72:6;;;;;;;;;;;;:::i;:::-;;;12407:533;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12657:6;:13;12674:1;12657:18;12653:272;;12700:60;;-1:-1:-1;;;12700:60:6;;;;;;;:::i;12653:272::-;12875:6;12869:13;12860:6;12856:2;12852:15;12845:38;12407:533;-1:-1:-1;;;;;;12534:55:6;-1:-1:-1;;;12534:55:6;;-1:-1:-1;12527:62:6;;12371:624;-1:-1:-1;12979:4:6;12199:803;;;;;;:::o;9456:382::-;-1:-1:-1;;;;;9536:16:6;;9528:61;;;;-1:-1:-1;;;9528:61:6;;35029:2:23;9528:61:6;;;35011:21:23;;;35048:18;;;35041:30;35107:34;35087:18;;;35080:62;35159:18;;9528:61:6;34827:356:23;9528:61:6;7543:4;7567:16;;;:7;:16;;;;;;-1:-1:-1;;;;;7567:16:6;:30;9600:58;;;;-1:-1:-1;;;9600:58:6;;35390:2:23;9600:58:6;;;35372:21:23;35429:2;35409:18;;;35402:30;35468;35448:18;;;35441:58;35516:18;;9600:58:6;35188:352:23;9600:58:6;9671:45;9700:1;9704:2;9708:7;9671:20;:45::i;:::-;-1:-1:-1;;;;;9729:13:6;;;;;;:9;:13;;;;;:18;;9746:1;;9729:13;:18;;9746:1;;9729:18;:::i;:::-;;;;-1:-1:-1;;9758:16:6;;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;9758:21:6;-1:-1:-1;;;;;9758:21:6;;;;;;;;9797:33;;9758:16;;;9797:33;;9758:16;;9797:33;9456:382;;:::o;4767:988:7:-;5033:22;5083:1;5058:22;5075:4;5058:16;:22::i;:::-;:26;;;;:::i;:::-;5095:18;5116:26;;;:17;:26;;;;;;5033:51;;-1:-1:-1;5249:28:7;;;5245:328;;-1:-1:-1;;;;;5316:18:7;;5294:19;5316:18;;;:12;:18;;;;;;;;:34;;;;;;;;;5367:30;;;;;;:44;;;5484:30;;:17;:30;;;;;:43;;;5245:328;-1:-1:-1;5669:26:7;;;;:17;:26;;;;;;;;5662:33;;;-1:-1:-1;;;;;5713:18:7;;;;;:12;:18;;;;;:34;;;;;;;5706:41;4767:988::o;6050:1079::-;6328:10;:17;6303:22;;6328:21;;6348:1;;6328:21;:::i;:::-;6360:18;6381:24;;;:15;:24;;;;;;6754:10;:26;;6303:46;;-1:-1:-1;6381:24:7;;6303:46;;6754:26;;;;;;:::i;:::-;;;;;;;;;6732:48;;6818:11;6793:10;6804;6793:22;;;;;;;;:::i;:::-;;;;;;;;;;;;:36;;;;6898:28;;;:15;:28;;;;;;;:41;;;7070:24;;;;;7063:31;7105:10;:16;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;6121:1008;;;6050:1079;:::o;3554:221::-;3639:14;3656:20;3673:2;3656:16;:20::i;:::-;-1:-1:-1;;;;;3687:16:7;;;;;;;:12;:16;;;;;;;;:24;;;;;;;;:34;;;3732:26;;;:17;:26;;;;;;:35;;;;-1:-1:-1;3554:221:7:o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::o;14:131:23:-;-1:-1:-1;;;;;;88:32:23;;78:43;;68:71;;135:1;132;125:12;150:245;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;592:127::-;653:10;648:3;644:20;641:1;634:31;684:4;681:1;674:15;708:4;705:1;698:15;724:632;789:5;819:18;860:2;852:6;849:14;846:40;;;866:18;;:::i;:::-;941:2;935:9;909:2;995:15;;-1:-1:-1;;991:24:23;;;1017:2;987:33;983:42;971:55;;;1041:18;;;1061:22;;;1038:46;1035:72;;;1087:18;;:::i;:::-;1127:10;1123:2;1116:22;1156:6;1147:15;;1186:6;1178;1171:22;1226:3;1217:6;1212:3;1208:16;1205:25;1202:45;;;1243:1;1240;1233:12;1202:45;1293:6;1288:3;1281:4;1273:6;1269:17;1256:44;1348:1;1341:4;1332:6;1324;1320:19;1316:30;1309:41;;;;724:632;;;;;:::o;1361:222::-;1404:5;1457:3;1450:4;1442:6;1438:17;1434:27;1424:55;;1475:1;1472;1465:12;1424:55;1497:80;1573:3;1564:6;1551:20;1544:4;1536:6;1532:17;1497:80;:::i;1588:390::-;1666:6;1674;1727:2;1715:9;1706:7;1702:23;1698:32;1695:52;;;1743:1;1740;1733:12;1695:52;1779:9;1766:23;1756:33;;1840:2;1829:9;1825:18;1812:32;1867:18;1859:6;1856:30;1853:50;;;1899:1;1896;1889:12;1853:50;1922;1964:7;1955:6;1944:9;1940:22;1922:50;:::i;:::-;1912:60;;;1588:390;;;;;:::o;1983:258::-;2055:1;2065:113;2079:6;2076:1;2073:13;2065:113;;;2155:11;;;2149:18;2136:11;;;2129:39;2101:2;2094:10;2065:113;;;2196:6;2193:1;2190:13;2187:48;;;-1:-1:-1;;2231:1:23;2213:16;;2206:27;1983:258::o;2246:269::-;2299:3;2337:5;2331:12;2364:6;2359:3;2352:19;2380:63;2436:6;2429:4;2424:3;2420:14;2413:4;2406:5;2402:16;2380:63;:::i;:::-;2497:2;2476:15;-1:-1:-1;;2472:29:23;2463:39;;;;2504:4;2459:50;;2246:269;-1:-1:-1;;2246:269:23:o;2520:231::-;2669:2;2658:9;2651:21;2632:4;2689:56;2741:2;2730:9;2726:18;2718:6;2689:56;:::i;2756:180::-;2815:6;2868:2;2856:9;2847:7;2843:23;2839:32;2836:52;;;2884:1;2881;2874:12;2836:52;-1:-1:-1;2907:23:23;;2756:180;-1:-1:-1;2756:180:23:o;3331:173::-;3399:20;;-1:-1:-1;;;;;3448:31:23;;3438:42;;3428:70;;3494:1;3491;3484:12;3428:70;3331:173;;;:::o;3509:254::-;3577:6;3585;3638:2;3626:9;3617:7;3613:23;3609:32;3606:52;;;3654:1;3651;3644:12;3606:52;3677:29;3696:9;3677:29;:::i;:::-;3667:39;3753:2;3738:18;;;;3725:32;;-1:-1:-1;;;3509:254:23:o;3768:328::-;3845:6;3853;3861;3914:2;3902:9;3893:7;3889:23;3885:32;3882:52;;;3930:1;3927;3920:12;3882:52;3953:29;3972:9;3953:29;:::i;:::-;3943:39;;4001:38;4035:2;4024:9;4020:18;4001:38;:::i;:::-;3991:48;;4086:2;4075:9;4071:18;4058:32;4048:42;;3768:328;;;;;:::o;4101:596::-;4206:6;4214;4222;4230;4238;4291:3;4279:9;4270:7;4266:23;4262:33;4259:53;;;4308:1;4305;4298:12;4259:53;4348:9;4335:23;4381:18;4373:6;4370:30;4367:50;;;4413:1;4410;4403:12;4367:50;4436;4478:7;4469:6;4458:9;4454:22;4436:50;:::i;:::-;4426:60;4533:2;4518:18;;4505:32;;-1:-1:-1;4584:2:23;4569:18;;4556:32;;4635:2;4620:18;;4607:32;;-1:-1:-1;4686:3:23;4671:19;4658:33;;-1:-1:-1;4101:596:23;-1:-1:-1;;;;4101:596:23:o;4702:186::-;4761:6;4814:2;4802:9;4793:7;4789:23;4785:32;4782:52;;;4830:1;4827;4820:12;4782:52;4853:29;4872:9;4853:29;:::i;4893:542::-;5000:6;5008;5016;5024;5032;5085:3;5073:9;5064:7;5060:23;5056:33;5053:53;;;5102:1;5099;5092:12;5053:53;5138:9;5125:23;5115:33;;5195:2;5184:9;5180:18;5167:32;5157:42;;5249:2;5238:9;5234:18;5221:32;5282:1;5275:5;5272:12;5262:40;;5298:1;5295;5288:12;5262:40;4893:542;;;;-1:-1:-1;5321:5:23;;5373:2;5358:18;;5345:32;;-1:-1:-1;5424:3:23;5409:19;5396:33;;4893:542;-1:-1:-1;;4893:542:23:o;5440:248::-;5508:6;5516;5569:2;5557:9;5548:7;5544:23;5540:32;5537:52;;;5585:1;5582;5575:12;5537:52;-1:-1:-1;;5608:23:23;;;5678:2;5663:18;;;5650:32;;-1:-1:-1;5440:248:23:o;5693:127::-;5754:10;5749:3;5745:20;5742:1;5735:31;5785:4;5782:1;5775:15;5809:4;5806:1;5799:15;5825:235;5904:1;5897:5;5894:12;5884:143;;5949:10;5944:3;5940:20;5937:1;5930:31;5984:4;5981:1;5974:15;6012:4;6009:1;6002:15;5884:143;6036:18;;5825:235::o;6065:1234::-;6203:4;6245:3;6234:9;6230:19;6222:27;;6282:6;6276:13;6265:9;6258:32;6346:4;6338:6;6334:17;6328:24;6321:4;6310:9;6306:20;6299:54;6409:4;6401:6;6397:17;6391:24;6384:4;6373:9;6369:20;6362:54;6472:4;6464:6;6460:17;6454:24;6447:4;6436:9;6432:20;6425:54;6535:4;6527:6;6523:17;6517:24;6510:4;6499:9;6495:20;6488:54;6598:4;6590:6;6586:17;6580:24;6573:4;6562:9;6558:20;6551:54;6661:4;6653:6;6649:17;6643:24;6636:4;6625:9;6621:20;6614:54;6724:4;6716:6;6712:17;6706:24;6699:4;6688:9;6684:20;6677:54;6750:6;6810:2;6802:6;6798:15;6792:22;6787:2;6776:9;6772:18;6765:50;;6834:6;6894:2;6886:6;6882:15;6876:22;6871:2;6860:9;6856:18;6849:50;;6918:6;6978:2;6970:6;6966:15;6960:22;6955:2;6944:9;6940:18;6933:50;;7002:6;7062:2;7054:6;7050:15;7044:22;7039:2;7028:9;7024:18;7017:50;;7086:6;7146:2;7138:6;7134:15;7128:22;7123:2;7112:9;7108:18;7101:50;;7170:6;7223:2;7215:6;7211:15;7205:22;7236:57;7289:2;7278:9;7274:18;7260:12;7236:57;:::i;:::-;;;6065:1234;;;;:::o;7304:347::-;7369:6;7377;7430:2;7418:9;7409:7;7405:23;7401:32;7398:52;;;7446:1;7443;7436:12;7398:52;7469:29;7488:9;7469:29;:::i;:::-;7459:39;;7548:2;7537:9;7533:18;7520:32;7595:5;7588:13;7581:21;7574:5;7571:32;7561:60;;7617:1;7614;7607:12;7561:60;7640:5;7630:15;;;7304:347;;;;;:::o;7656:667::-;7751:6;7759;7767;7775;7828:3;7816:9;7807:7;7803:23;7799:33;7796:53;;;7845:1;7842;7835:12;7796:53;7868:29;7887:9;7868:29;:::i;:::-;7858:39;;7916:38;7950:2;7939:9;7935:18;7916:38;:::i;:::-;7906:48;;8001:2;7990:9;7986:18;7973:32;7963:42;;8056:2;8045:9;8041:18;8028:32;8083:18;8075:6;8072:30;8069:50;;;8115:1;8112;8105:12;8069:50;8138:22;;8191:4;8183:13;;8179:27;-1:-1:-1;8169:55:23;;8220:1;8217;8210:12;8169:55;8243:74;8309:7;8304:2;8291:16;8286:2;8282;8278:11;8243:74;:::i;:::-;8233:84;;;7656:667;;;;;;;:::o;8328:1146::-;8798:4;8840:3;8829:9;8825:19;8817:27;;8871:6;8860:9;8853:25;8914:6;8909:2;8898:9;8894:18;8887:34;8957:6;8952:2;8941:9;8937:18;8930:34;9000:6;8995:2;8984:9;8980:18;8973:34;9044:6;9038:3;9027:9;9023:19;9016:35;9088:6;9082:3;9071:9;9067:19;9060:35;9132:6;9126:3;9115:9;9111:19;9104:35;9176:6;9170:3;9159:9;9155:19;9148:35;9220:6;9214:3;9203:9;9199:19;9192:35;9264:6;9258:3;9247:9;9243:19;9236:35;9308:7;9302:3;9291:9;9287:19;9280:36;9353:7;9347:3;9336:9;9332:19;9325:36;9398:7;9392:3;9381:9;9377:19;9370:36;9415:53;9463:3;9452:9;9448:19;9439:7;9415:53;:::i;:::-;8328:1146;;;;;;;;;;;;;;;;;:::o;9479:852::-;9815:4;9844:3;9874:6;9863:9;9856:25;9917:6;9912:2;9901:9;9897:18;9890:34;9960:6;9955:2;9944:9;9940:18;9933:34;10003:6;9998:2;9987:9;9983:18;9976:34;10076:1;10072;10067:3;10063:11;10059:19;10051:6;10047:32;10041:3;10030:9;10026:19;10019:61;10117:6;10111:3;10100:9;10096:19;10089:35;10161:6;10155:3;10144:9;10140:19;10133:35;10205:6;10199:3;10188:9;10184:19;10177:35;10249:2;10243:3;10232:9;10228:19;10221:31;10269:56;10321:2;10310:9;10306:18;10298:6;10269:56;:::i;:::-;10261:64;9479:852;-1:-1:-1;;;;;;;;;;;;9479:852:23:o;10336:260::-;10404:6;10412;10465:2;10453:9;10444:7;10440:23;10436:32;10433:52;;;10481:1;10478;10471:12;10433:52;10504:29;10523:9;10504:29;:::i;:::-;10494:39;;10552:38;10586:2;10575:9;10571:18;10552:38;:::i;:::-;10542:48;;10336:260;;;;;:::o;10601:185::-;10643:3;10681:5;10675:12;10696:52;10741:6;10736:3;10729:4;10722:5;10718:16;10696:52;:::i;:::-;10764:16;;;;;10601:185;-1:-1:-1;;10601:185:23:o;10911:1883::-;11827:66;11815:79;;11924:66;11919:2;11910:12;;11903:88;12021:34;12016:2;12007:12;;12000:56;-1:-1:-1;;;12081:2:23;12072:12;;12065:46;-1:-1:-1;;;12136:2:23;12127:12;;12120:58;12201:13;;-1:-1:-1;;12223:61:23;12201:13;12271:3;12262:13;;12257:2;12245:15;;12223:61;:::i;:::-;-1:-1:-1;;;12343:3:23;12303:16;;;12335:12;;;12328:34;-1:-1:-1;;;12386:3:23;12378:12;;12371:70;12471:66;12465:3;12457:12;;12450:88;12568:66;12562:3;12554:12;;12547:88;-1:-1:-1;;;12659:3:23;12651:12;;12644:58;12718:70;12748:39;12782:3;12774:12;;12766:6;12748:39;:::i;:::-;-1:-1:-1;;;10856:17:23;;10898:1;10889:11;;10791:115;12718:70;12711:77;10911:1883;-1:-1:-1;;;;;10911:1883:23:o;12799:2085::-;13680:3;13718:6;13712:13;13734:53;13780:6;13775:3;13768:4;13760:6;13756:17;13734:53;:::i;:::-;13818:6;13813:3;13809:16;13796:29;;13844:66;13933:2;13926:5;13919:17;13970:66;13963:4;13956:5;13952:16;13945:92;14068:6;14062:13;14084:66;14141:8;14136:2;14129:5;14125:14;14118:4;14110:6;14106:17;14084:66;:::i;:::-;-1:-1:-1;;;14236:2:23;14169:20;;;;14228:11;;;14221:23;;;14268:2;14260:11;;14253:23;;;14305:66;14300:2;14292:11;;14285:87;-1:-1:-1;;;14396:3:23;14388:12;;14381:44;14450:13;;14472:64;14450:13;14521:3;14513:12;;14506:4;14494:17;;14472:64;:::i;:::-;14596:3;14555:17;;14588:12;;;14581:24;14629:3;14621:12;;14614:24;14668:66;14662:3;14654:12;;14647:88;-1:-1:-1;;;14759:3:23;14751:12;;14744:48;14808:70;14838:39;14872:3;14864:12;;14856:6;14838:39;:::i;14808:70::-;14801:77;12799:2085;-1:-1:-1;;;;;;;12799:2085:23:o;14889:1537::-;15520:3;15558:6;15552:13;15574:53;15620:6;15615:3;15608:4;15600:6;15596:17;15574:53;:::i;:::-;15658:6;15653:3;15649:16;15636:29;;15684:66;15773:2;15766:5;15759:17;15810:66;15803:4;15796:5;15792:16;15785:92;15908:6;15902:13;15924:66;15981:8;15976:2;15969:5;15965:14;15958:4;15950:6;15946:17;15924:66;:::i;:::-;16020:8;16013:5;16009:20;15999:30;;;-1:-1:-1;;;16081:2:23;16076;16072;16068:11;16061:23;16113:2;16108;16104;16100:11;16093:23;16145:66;16140:2;16136;16132:11;16125:87;16243:6;16237:13;16221:29;;16259:64;16314:8;16308:3;16304:2;16300:12;16293:4;16285:6;16281:17;16259:64;:::i;:::-;16383:3;16342:17;;;;16375:12;;;16368:24;16416:3;16408:12;;14889:1537;-1:-1:-1;;;;;14889:1537:23:o;16431:2028::-;17312:3;17350:6;17344:13;17366:53;17412:6;17407:3;17400:4;17392:6;17388:17;17366:53;:::i;:::-;17450:6;17445:3;17441:16;17428:29;;17476:66;17565:2;17558:5;17551:17;17602:66;17595:4;17588:5;17584:16;17577:92;17700:6;17694:13;17716:66;17773:8;17768:2;17761:5;17757:14;17750:4;17742:6;17738:17;17716:66;:::i;:::-;17812:8;17805:5;17801:20;17791:30;;;-1:-1:-1;;;17873:2:23;17868;17864;17860:11;17853:23;17905:2;17900;17896;17892:11;17885:23;17937:66;17932:2;17928;17924:11;17917:87;18035:6;18029:13;18051:64;18106:8;18100:3;18096:2;18092:12;18085:4;18077:6;18073:17;18051:64;:::i;:::-;18175:3;18134:17;;18167:12;;;18160:24;18208:3;18200:12;;18193:24;18247:66;18241:3;18233:12;;18226:88;-1:-1:-1;;;18338:3:23;18330:12;;18323:44;18383:70;18413:39;18447:3;18439:12;;18431:6;18413:39;:::i;18464:575::-;18797:3;18835:6;18829:13;18851:53;18897:6;18892:3;18885:4;18877:6;18873:17;18851:53;:::i;:::-;-1:-1:-1;;;18926:16:23;;18951:18;;;-1:-1:-1;;;;18996:1:23;18985:13;;18978:26;19031:1;19020:13;;18464:575;-1:-1:-1;18464:575:23:o;19044:127::-;19105:10;19100:3;19096:20;19093:1;19086:31;19136:4;19133:1;19126:15;19160:4;19157:1;19150:15;19176:125;19216:4;19244:1;19241;19238:8;19235:34;;;19249:18;;:::i;:::-;-1:-1:-1;19286:9:23;;19176:125::o;19306:127::-;19367:10;19362:3;19358:20;19355:1;19348:31;19398:4;19395:1;19388:15;19422:4;19419:1;19412:15;19438:120;19478:1;19504;19494:35;;19509:18;;:::i;:::-;-1:-1:-1;19543:9:23;;19438:120::o;19563:380::-;19642:1;19638:12;;;;19685;;;19706:61;;19760:4;19752:6;19748:17;19738:27;;19706:61;19813:2;19805:6;19802:14;19782:18;19779:38;19776:161;;19859:10;19854:3;19850:20;19847:1;19840:31;19894:4;19891:1;19884:15;19922:4;19919:1;19912:15;19776:161;;19563:380;;;:::o;21895:112::-;21927:1;21953;21943:35;;21958:18;;:::i;:::-;-1:-1:-1;21992:9:23;;21895:112::o;22012:128::-;22052:3;22083:1;22079:6;22076:1;22073:13;22070:39;;;22089:18;;:::i;:::-;-1:-1:-1;22125:9:23;;22012:128::o;22145:168::-;22185:7;22251:1;22247;22243:6;22239:14;22236:1;22233:21;22228:1;22221:9;22214:17;22210:45;22207:71;;;22258:18;;:::i;:::-;-1:-1:-1;22298:9:23;;22145:168::o;22318:413::-;22520:2;22502:21;;;22559:2;22539:18;;;22532:30;22598:34;22593:2;22578:18;;22571:62;-1:-1:-1;;;22664:2:23;22649:18;;22642:47;22721:3;22706:19;;22318:413::o;23148:356::-;23350:2;23332:21;;;23369:18;;;23362:30;23428:34;23423:2;23408:18;;23401:62;23495:2;23480:18;;23148:356::o;23635:545::-;23737:2;23732:3;23729:11;23726:448;;;23773:1;23798:5;23794:2;23787:17;23843:4;23839:2;23829:19;23913:2;23901:10;23897:19;23894:1;23890:27;23884:4;23880:38;23949:4;23937:10;23934:20;23931:47;;;-1:-1:-1;23972:4:23;23931:47;24027:2;24022:3;24018:12;24015:1;24011:20;24005:4;24001:31;23991:41;;24082:82;24100:2;24093:5;24090:13;24082:82;;;24145:17;;;24126:1;24115:13;24082:82;;;24086:3;;;23635:545;;;:::o;24356:1352::-;24482:3;24476:10;24509:18;24501:6;24498:30;24495:56;;;24531:18;;:::i;:::-;24560:97;24650:6;24610:38;24642:4;24636:11;24610:38;:::i;:::-;24604:4;24560:97;:::i;:::-;24712:4;;24776:2;24765:14;;24793:1;24788:663;;;;25495:1;25512:6;25509:89;;;-1:-1:-1;25564:19:23;;;25558:26;25509:89;-1:-1:-1;;24313:1:23;24309:11;;;24305:24;24301:29;24291:40;24337:1;24333:11;;;24288:57;25611:81;;24758:944;;24788:663;23582:1;23575:14;;;23619:4;23606:18;;-1:-1:-1;;24824:20:23;;;24942:236;24956:7;24953:1;24950:14;24942:236;;;25045:19;;;25039:26;25024:42;;25137:27;;;;25105:1;25093:14;;;;24972:19;;24942:236;;;24946:3;25206:6;25197:7;25194:19;25191:201;;;25267:19;;;25261:26;-1:-1:-1;;25350:1:23;25346:14;;;25362:3;25342:24;25338:37;25334:42;25319:58;25304:74;;25191:201;-1:-1:-1;;;;;25438:1:23;25422:14;;;25418:22;25405:36;;-1:-1:-1;24356:1352:23:o;26468:127::-;26529:10;26524:3;26520:20;26517:1;26510:31;26560:4;26557:1;26550:15;26584:4;26581:1;26574:15;29916:1173;30193:3;30222:1;30255:6;30249:13;30285:36;30311:9;30285:36;:::i;:::-;30340:1;30357:18;;;30384:133;;;;30531:1;30526:356;;;;30350:532;;30384:133;-1:-1:-1;;30417:24:23;;30405:37;;30490:14;;30483:22;30471:35;;30462:45;;;-1:-1:-1;30384:133:23;;30526:356;30557:6;30554:1;30547:17;30587:4;30632:2;30629:1;30619:16;30657:1;30671:165;30685:6;30682:1;30679:13;30671:165;;;30763:14;;30750:11;;;30743:35;30806:16;;;;30700:10;;30671:165;;;30675:3;;;30865:6;30860:3;30856:16;30849:23;;30350:532;;;;;30913:6;30907:13;30929:55;30975:8;30970:3;30963:4;30955:6;30951:17;30929:55;:::i;:::-;-1:-1:-1;;;31006:18:23;;31033:21;;;31081:1;31070:13;;29916:1173;-1:-1:-1;;;;29916:1173:23:o;32281:135::-;32320:3;32341:17;;;32338:43;;32361:18;;:::i;:::-;-1:-1:-1;32408:1:23;32397:13;;32281:135::o;33649:414::-;33851:2;33833:21;;;33890:2;33870:18;;;33863:30;33929:34;33924:2;33909:18;;33902:62;-1:-1:-1;;;33995:2:23;33980:18;;33973:48;34053:3;34038:19;;33649:414::o;34068:500::-;-1:-1:-1;;;;;34337:15:23;;;34319:34;;34389:15;;34384:2;34369:18;;34362:43;34436:2;34421:18;;34414:34;;;34484:3;34479:2;34464:18;;34457:31;;;34262:4;;34505:57;;34542:19;;34534:6;34505:57;:::i;:::-;34497:65;34068:500;-1:-1:-1;;;;;;34068:500:23:o;34573:249::-;34642:6;34695:2;34683:9;34674:7;34670:23;34666:32;34663:52;;;34711:1;34708;34701:12;34663:52;34743:9;34737:16;34762:30;34786:5;34762:30;:::i;35545:127::-;35606:10;35601:3;35597:20;35594:1;35587:31;35637:4;35634:1;35627:15;35661:4;35658:1;35651:15",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "approve(address,uint256)": {
        "details": "See {IERC721-approve}."
      },
      "balanceOf(address)": {
        "details": "See {IERC721-balanceOf}."
      },
      "crush(uint256)": {
        "details": "uninitiate an NFT that is negligent in duties. Reward crusher"
      },
      "getApproved(uint256)": {
        "details": "See {IERC721-getApproved}."
      },
      "getIsDeserted(uint256)": {
        "details": "check if NFT is deserted--negligent in duties."
      },
      "getPhaseOf(uint256)": {
        "details": "Gets phase of NFT"
      },
      "initiate(uint256)": {
        "details": "Moves NFT from inactive to active"
      },
      "isApprovedForAll(address,address)": {
        "details": "See {IERC721-isApprovedForAll}."
      },
      "name()": {
        "details": "See {IERC721Metadata-name}."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "ownerOf(uint256)": {
        "details": "See {IERC721-ownerOf}."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "See {IERC721-safeTransferFrom}."
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "See {IERC721-safeTransferFrom}."
      },
      "setApprovalForAll(address,bool)": {
        "details": "See {IERC721-setApprovalForAll}."
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}."
      },
      "symbol()": {
        "details": "See {IERC721Metadata-symbol}."
      },
      "tokenByIndex(uint256)": {
        "details": "See {IERC721Enumerable-tokenByIndex}."
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "See {IERC721Enumerable-tokenOfOwnerByIndex}."
      },
      "totalSupply()": {
        "details": "See {IERC721Enumerable-totalSupply}."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC721-transferFrom}."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "verifier()": {
        "notice": "contract address to update stats"
      },
      "verifyDuty(uint256,uint256)": {
        "details": "Verify duties of NFT. Not duty specific"
      }
    },
    "version": 1
  },
  "offset": [
    359,
    16018
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x21A JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x123 JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0xAB JUMPI DUP1 PUSH4 0xDB2A0A55 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xDB2A0A55 EQ PUSH2 0x6D6 JUMPI DUP1 PUSH4 0xE52E3249 EQ PUSH2 0x700 JUMPI DUP1 PUSH4 0xE8A77D17 EQ PUSH2 0x720 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x733 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x77C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x5B0 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x5D0 JUMPI DUP1 PUSH4 0xBC0B0D88 EQ PUSH2 0x5F0 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x610 JUMPI DUP1 PUSH4 0xC87BFC7F EQ PUSH2 0x630 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8AD4D6A5 GT PUSH2 0xF2 JUMPI DUP1 PUSH4 0x8AD4D6A5 EQ PUSH2 0x510 JUMPI DUP1 PUSH4 0x8CB22518 EQ PUSH2 0x530 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x55D JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x57B JUMPI DUP1 PUSH4 0x97FC007C EQ PUSH2 0x590 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x489 JUMPI DUP1 PUSH4 0x7901EA78 EQ PUSH2 0x49E JUMPI DUP1 PUSH4 0x8140BD0B EQ PUSH2 0x4BE JUMPI DUP1 PUSH4 0x82AFD23B EQ PUSH2 0x4DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0x1A6 JUMPI DUP1 PUSH4 0x42842E0E GT PUSH2 0x175 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x3E9 JUMPI DUP1 PUSH4 0x437454B9 EQ PUSH2 0x409 JUMPI DUP1 PUSH4 0x4F6CCCE7 EQ PUSH2 0x429 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x449 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x469 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD EQ PUSH2 0x369 JUMPI DUP1 PUSH4 0x2B7AC3F3 EQ PUSH2 0x389 JUMPI DUP1 PUSH4 0x2F745C59 EQ PUSH2 0x3A9 JUMPI DUP1 PUSH4 0x3B6029CA EQ PUSH2 0x3C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x81812FC GT PUSH2 0x1ED JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x2C4 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x2FC JUMPI DUP1 PUSH4 0xA363D08 EQ PUSH2 0x31E JUMPI DUP1 PUSH4 0x1249C58B EQ PUSH2 0x33F JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x354 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x21F JUMPI DUP1 PUSH4 0x419E314 EQ PUSH2 0x254 JUMPI DUP1 PUSH4 0x5106353 EQ PUSH2 0x281 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x2AF JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x22B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23F PUSH2 0x23A CALLDATASIZE PUSH1 0x4 PUSH2 0x2902 JUMP JUMPDEST PUSH2 0x79C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x260 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x274 PUSH2 0x26F CALLDATASIZE PUSH1 0x4 PUSH2 0x29CB JUMP JUMPDEST PUSH2 0x7C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24B SWAP2 SWAP1 PUSH2 0x2A6A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A1 PUSH2 0x29C CALLDATASIZE PUSH1 0x4 PUSH2 0x2A7D JUMP JUMPDEST PUSH2 0x9DA JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x24B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x274 PUSH2 0xA49 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E4 PUSH2 0x2DF CALLDATASIZE PUSH1 0x4 PUSH2 0x2A7D JUMP JUMPDEST PUSH2 0xADB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x24B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x308 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x31C PUSH2 0x317 CALLDATASIZE PUSH1 0x4 PUSH2 0x2AB2 JUMP JUMPDEST PUSH2 0xB75 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x32A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23F PUSH2 0x339 CALLDATASIZE PUSH1 0x4 PUSH2 0x2A7D JUMP JUMPDEST POP PUSH1 0x0 SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x34B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x31C PUSH2 0xC8A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x360 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x8 SLOAD PUSH2 0x2A1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x375 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x31C PUSH2 0x384 CALLDATASIZE PUSH1 0x4 PUSH2 0x2ADC JUMP JUMPDEST PUSH2 0xF78 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x395 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xD SLOAD PUSH2 0x2E4 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A1 PUSH2 0x3C4 CALLDATASIZE PUSH1 0x4 PUSH2 0x2AB2 JUMP JUMPDEST PUSH2 0xFA9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x31C PUSH2 0x3E4 CALLDATASIZE PUSH1 0x4 PUSH2 0x2B18 JUMP JUMPDEST PUSH2 0x103F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x31C PUSH2 0x404 CALLDATASIZE PUSH1 0x4 PUSH2 0x2ADC JUMP JUMPDEST PUSH2 0x108B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x415 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x31C PUSH2 0x424 CALLDATASIZE PUSH1 0x4 PUSH2 0x2A7D JUMP JUMPDEST PUSH2 0x10A6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x435 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A1 PUSH2 0x444 CALLDATASIZE PUSH1 0x4 PUSH2 0x2A7D JUMP JUMPDEST PUSH2 0x10E8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x455 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E4 PUSH2 0x464 CALLDATASIZE PUSH1 0x4 PUSH2 0x2A7D JUMP JUMPDEST PUSH2 0x117B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x475 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A1 PUSH2 0x484 CALLDATASIZE PUSH1 0x4 PUSH2 0x2B75 JUMP JUMPDEST PUSH2 0x11F2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x495 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x31C PUSH2 0x1279 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x31C PUSH2 0x4B9 CALLDATASIZE PUSH1 0x4 PUSH2 0x2A7D JUMP JUMPDEST PUSH2 0x12AF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x31C PUSH2 0x4D9 CALLDATASIZE PUSH1 0x4 PUSH2 0x2B90 JUMP JUMPDEST PUSH2 0x13BD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23F PUSH2 0x4F9 CALLDATASIZE PUSH1 0x4 PUSH2 0x2A7D JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0xC ADD SLOAD TIMESTAMP LT SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x51C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x31C PUSH2 0x52B CALLDATASIZE PUSH1 0x4 PUSH2 0x2BDD JUMP JUMPDEST PUSH2 0x1525 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x53C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x550 PUSH2 0x54B CALLDATASIZE PUSH1 0x4 PUSH2 0x2A7D JUMP JUMPDEST PUSH2 0x15B8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24B SWAP2 SWAP1 PUSH2 0x2C37 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x569 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2E4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x587 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x274 PUSH2 0x1746 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x59C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x31C PUSH2 0x5AB CALLDATASIZE PUSH1 0x4 PUSH2 0x2B75 JUMP JUMPDEST PUSH2 0x1755 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x31C PUSH2 0x5CB CALLDATASIZE PUSH1 0x4 PUSH2 0x2CE1 JUMP JUMPDEST PUSH2 0x1841 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x31C PUSH2 0x5EB CALLDATASIZE PUSH1 0x4 PUSH2 0x2D1D JUMP JUMPDEST PUSH2 0x1905 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xC SLOAD PUSH2 0x2E4 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x61C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x274 PUSH2 0x62B CALLDATASIZE PUSH1 0x4 PUSH2 0x2A7D JUMP JUMPDEST PUSH2 0x193D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x63C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6BC PUSH2 0x64B CALLDATASIZE PUSH1 0x4 PUSH2 0x2A7D JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 DUP6 ADD SLOAD PUSH1 0x5 DUP7 ADD SLOAD PUSH1 0x6 DUP8 ADD SLOAD PUSH1 0x7 DUP9 ADD SLOAD PUSH1 0x8 DUP10 ADD SLOAD PUSH1 0x9 DUP11 ADD SLOAD PUSH1 0xA DUP12 ADD SLOAD SWAP12 DUP12 ADD SLOAD PUSH1 0xC DUP13 ADD SLOAD PUSH1 0xD SWAP1 SWAP13 ADD SLOAD SWAP11 SWAP13 SWAP10 SWAP12 SWAP9 SWAP11 SWAP8 SWAP10 SWAP7 SWAP9 SWAP6 SWAP8 SWAP5 SWAP7 SWAP4 SWAP6 SWAP3 SWAP5 SWAP2 SWAP4 SWAP3 SWAP1 SWAP2 PUSH1 0xFF AND DUP15 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24B SWAP15 SWAP14 SWAP13 SWAP12 SWAP11 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2D99 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6EB PUSH2 0x1A9D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24B SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2E13 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x70C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x31C PUSH2 0x71B CALLDATASIZE PUSH1 0x4 PUSH2 0x2B75 JUMP JUMPDEST PUSH2 0x1B60 JUMP JUMPDEST PUSH2 0x31C PUSH2 0x72E CALLDATASIZE PUSH1 0x4 PUSH2 0x2A7D JUMP JUMPDEST PUSH2 0x1C45 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x73F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23F PUSH2 0x74E CALLDATASIZE PUSH1 0x4 PUSH2 0x2E70 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x788 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x31C PUSH2 0x797 CALLDATASIZE PUSH1 0x4 PUSH2 0x2B75 JUMP JUMPDEST PUSH2 0x1E0B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x780E9D63 PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x7C1 JUMPI POP PUSH2 0x7C1 DUP3 PUSH2 0x1EA3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0xB PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH2 0x1C0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x7 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x8 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x9 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xA DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xB DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xC DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xD DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x890 JUMPI PUSH2 0x890 PUSH2 0x2BFF JUMP JUMPDEST PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x8A1 JUMPI PUSH2 0x8A1 PUSH2 0x2BFF JUMP JUMPDEST DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 DUP4 PUSH2 0x8B7 DUP4 PUSH1 0x0 ADD MLOAD PUSH2 0x1EF3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x8C8 SWAP3 SWAP2 SWAP1 PUSH2 0x2EBF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP DUP1 PUSH2 0x8E7 DUP4 PUSH1 0x20 ADD MLOAD PUSH2 0x1EF3 JUMP JUMPDEST PUSH2 0x8F4 DUP5 PUSH1 0x40 ADD MLOAD PUSH2 0x1EF3 JUMP JUMPDEST PUSH2 0x901 DUP6 PUSH1 0x60 ADD MLOAD PUSH2 0x1EF3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x914 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3019 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP DUP1 PUSH2 0x933 DUP4 PUSH1 0x80 ADD MLOAD PUSH2 0x1EF3 JUMP JUMPDEST PUSH2 0x940 DUP5 PUSH1 0xA0 ADD MLOAD PUSH2 0x1EF3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x952 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x314B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP DUP1 PUSH2 0x971 DUP4 PUSH1 0xC0 ADD MLOAD PUSH2 0x1EF3 JUMP JUMPDEST PUSH2 0x97E DUP5 PUSH1 0xE0 ADD MLOAD PUSH2 0x1EF3 JUMP JUMPDEST PUSH2 0x98C DUP6 PUSH2 0x100 ADD MLOAD PUSH2 0x1EF3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x99F SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3228 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP DUP1 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x9C1 SWAP2 SWAP1 PUSH2 0x333E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB PUSH1 0x1F NOT ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x13 SLOAD PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 ADD SLOAD SWAP1 SWAP2 DUP3 SWAP2 PUSH1 0x7 SWAP2 SWAP1 PUSH2 0xA01 SWAP1 TIMESTAMP PUSH2 0x3383 JUMP JUMPDEST PUSH2 0xA0B SWAP2 SWAP1 PUSH2 0x33B0 JUMP JUMPDEST GT PUSH2 0xA3F JUMPI PUSH1 0x13 SLOAD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH2 0xA30 SWAP1 TIMESTAMP PUSH2 0x3383 JUMP JUMPDEST PUSH2 0xA3A SWAP2 SWAP1 PUSH2 0x33B0 JUMP JUMPDEST PUSH2 0xA42 JUMP JUMPDEST PUSH1 0x7 JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0xA58 SWAP1 PUSH2 0x33C4 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xA84 SWAP1 PUSH2 0x33C4 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xAD1 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xAA6 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xAD1 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xAB4 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xB59 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76656420717565727920666F72206E6F6E6578 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x34B9BA32B73A103A37B5B2B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB80 DUP3 PUSH2 0x117B JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0xBED JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB50 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ DUP1 PUSH2 0xC09 JUMPI POP PUSH2 0xC09 DUP2 CALLER PUSH2 0x74E JUMP JUMPDEST PUSH2 0xC7B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F74206F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E6572206E6F7220617070726F76656420666F7220616C6C0000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB50 JUMP JUMPDEST PUSH2 0xC85 DUP4 DUP4 PUSH2 0x1FF4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x10 SLOAD PUSH1 0x8 SLOAD LT PUSH2 0xCCE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x30BA1036B0BC1039BAB838363C97 PUSH1 0x91 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB50 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCD9 PUSH1 0x8 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT CALLER PUSH1 0x60 SHL AND SWAP1 DUP3 ADD MSTORE TIMESTAMP PUSH1 0x54 DUP3 ADD MSTORE PUSH1 0x74 ADD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0xD2C PUSH1 0x1A DUP4 PUSH2 0x33FE JUMP JUMPDEST PUSH2 0xD37 SWAP1 PUSH1 0x19 PUSH2 0x3412 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1A PUSH2 0xD48 PUSH1 0x64 DUP6 PUSH2 0x33B0 JUMP JUMPDEST PUSH2 0xD52 SWAP2 SWAP1 PUSH2 0x33FE JUMP JUMPDEST PUSH2 0xD5D SWAP1 PUSH1 0x19 PUSH2 0x3412 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0xA PUSH2 0xD6D DUP2 DUP7 PUSH2 0x33B0 JUMP JUMPDEST PUSH2 0xD78 SWAP1 PUSH1 0x4 PUSH2 0x342A JUMP JUMPDEST PUSH2 0xD82 SWAP2 SWAP1 PUSH2 0x33FE JUMP JUMPDEST PUSH2 0xD8D SWAP1 PUSH1 0xA PUSH2 0x3412 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0xA PUSH2 0xD9D DUP2 DUP8 PUSH2 0x33B0 JUMP JUMPDEST PUSH2 0xDA8 SWAP1 PUSH1 0x5 PUSH2 0x342A JUMP JUMPDEST PUSH2 0xDB2 SWAP2 SWAP1 PUSH2 0x33FE JUMP JUMPDEST PUSH2 0xDBD SWAP1 PUSH1 0xA PUSH2 0x3412 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x4 PUSH2 0xDCE PUSH1 0xA DUP9 PUSH2 0x33B0 JUMP JUMPDEST PUSH2 0xDD9 SWAP1 PUSH1 0x6 PUSH2 0x342A JUMP JUMPDEST PUSH2 0xDE3 SWAP2 SWAP1 PUSH2 0x33FE JUMP JUMPDEST PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xDF4 JUMPI PUSH2 0xDF4 PUSH2 0x2BFF JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH2 0x1C0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xE6D JUMPI PUSH2 0xE6D PUSH2 0x2BFF JUMP JUMPDEST SWAP1 MSTORE SWAP1 POP DUP1 PUSH1 0xB PUSH1 0x0 PUSH2 0xE7F PUSH1 0x8 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xE8A SWAP1 PUSH1 0x1 PUSH2 0x3412 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD SSTORE PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD SSTORE PUSH1 0xE0 DUP3 ADD MLOAD DUP2 PUSH1 0x7 ADD SSTORE PUSH2 0x100 DUP3 ADD MLOAD DUP2 PUSH1 0x8 ADD SSTORE PUSH2 0x120 DUP3 ADD MLOAD DUP2 PUSH1 0x9 ADD SSTORE PUSH2 0x140 DUP3 ADD MLOAD DUP2 PUSH1 0xA ADD SSTORE PUSH2 0x160 DUP3 ADD MLOAD DUP2 PUSH1 0xB ADD SSTORE PUSH2 0x180 DUP3 ADD MLOAD DUP2 PUSH1 0xC ADD SSTORE PUSH2 0x1A0 DUP3 ADD MLOAD DUP2 PUSH1 0xD ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xF4A JUMPI PUSH2 0xF4A PUSH2 0x2BFF JUMP JUMPDEST MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH2 0xF6F CALLER PUSH2 0xF5F PUSH1 0x8 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xF6A SWAP1 PUSH1 0x1 PUSH2 0x3412 JUMP JUMPDEST PUSH2 0x2062 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xF82 CALLER DUP3 PUSH2 0x2080 JUMP JUMPDEST PUSH2 0xF9E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB50 SWAP1 PUSH2 0x3449 JUMP JUMPDEST PUSH2 0xC85 DUP4 DUP4 DUP4 PUSH2 0x2173 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFB4 DUP4 PUSH2 0x11F2 JUMP JUMPDEST DUP3 LT PUSH2 0x1016 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243373231456E756D657261626C653A206F776E657220696E646578206F75 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x74206F6620626F756E6473 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB50 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1069 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB50 SWAP1 PUSH2 0x349A JUMP JUMPDEST PUSH1 0x16 PUSH2 0x1075 DUP7 DUP3 PUSH2 0x351D JUMP JUMPDEST POP PUSH1 0x13 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x11 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0xE SSTORE PUSH1 0xF SSTORE POP JUMP JUMPDEST PUSH2 0xC85 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1905 JUMP JUMPDEST ADDRESS CALLER SUB PUSH2 0x10E5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x37B7363C903B32B934B334B2B9 PUSH1 0x99 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB50 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10F3 PUSH1 0x8 SLOAD SWAP1 JUMP JUMPDEST DUP3 LT PUSH2 0x1156 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243373231456E756D657261626C653A20676C6F62616C20696E646578206F PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x7574206F6620626F756E6473 PUSH1 0xA0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB50 JUMP JUMPDEST PUSH1 0x8 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1169 JUMPI PUSH2 0x1169 PUSH2 0x35DD JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x7C1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206F776E657220717565727920666F72206E6F6E6578697374 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x32B73A103A37B5B2B7 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB50 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x125D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A2062616C616E636520717565727920666F7220746865207A65 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x726F2061646472657373 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB50 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x12A3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB50 SWAP1 PUSH2 0x349A JUMP JUMPDEST PUSH2 0x12AD PUSH1 0x0 PUSH2 0x231E JUMP JUMPDEST JUMP JUMPDEST CALLER PUSH2 0x12B9 DUP3 PUSH2 0x117B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x12FF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x36BAB9BA1031329037BBB732B9 PUSH1 0x99 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB50 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD ISZERO PUSH2 0x1353 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x185B1C9958591E481A5B9A5D1A585D1959 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB50 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 TIMESTAMP SWAP2 DUP2 ADD DUP3 SWAP1 SSTORE PUSH1 0x11 SLOAD SWAP1 SWAP2 PUSH2 0x137A SWAP2 SWAP1 PUSH2 0x3412 JUMP JUMPDEST PUSH1 0xC DUP3 ADD SSTORE PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE TIMESTAMP PUSH1 0x20 DUP3 ADD MSTORE DUP4 SWAP2 PUSH32 0x1782B66BBE30900EE88FEAB2F2CD676D136386CC51CDF73F6CAE8B1DA253DDF7 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1423 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920626174746C65722063616E2063616C6C20746869732066756E6374 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x34B7B717 PUSH1 0xE1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB50 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1437 JUMPI PUSH2 0x1437 PUSH2 0x2BFF JUMP JUMPDEST SUB PUSH2 0x1490 JUMPI PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x5 ADD DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x145E SWAP1 DUP5 SWAP1 PUSH2 0x3412 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x6 ADD DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x1485 SWAP1 DUP5 SWAP1 PUSH2 0x3412 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x14F8 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x14A4 JUMPI PUSH2 0x14A4 PUSH2 0x2BFF JUMP JUMPDEST SUB PUSH2 0x14F8 JUMPI PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x6 ADD DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x14CB SWAP1 DUP5 SWAP1 PUSH2 0x3412 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x5 ADD DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x14F2 SWAP1 DUP5 SWAP1 PUSH2 0x3412 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x8 ADD DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x1519 SWAP1 DUP5 SWAP1 PUSH2 0x3412 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP POP POP POP JUMP JUMPDEST ADDRESS CALLER SUB PUSH2 0x1564 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x37B7363C903B32B934B334B2B9 PUSH1 0x99 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB50 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0xC ADD SLOAD TIMESTAMP GT PUSH2 0x1593 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0xC ADD SLOAD PUSH2 0x1595 JUMP JUMPDEST TIMESTAMP JUMPDEST PUSH2 0x159F SWAP1 DUP3 PUSH2 0x3412 JUMP JUMPDEST PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 SWAP3 KECCAK256 PUSH1 0xC ADD SWAP2 SWAP1 SWAP2 SSTORE POP JUMP JUMPDEST PUSH2 0x15C0 PUSH2 0x286D JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15CB DUP4 PUSH2 0x9DA JUMP JUMPDEST PUSH2 0x15D6 SWAP1 PUSH1 0x1 PUSH2 0x3412 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0xB PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH2 0x1C0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x7 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x8 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x9 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xA DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xB DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xC DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xD DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x169F JUMPI PUSH2 0x169F PUSH2 0x2BFF JUMP JUMPDEST PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x16B0 JUMPI PUSH2 0x16B0 PUSH2 0x2BFF JUMP JUMPDEST SWAP1 MSTORE POP PUSH1 0x14 SLOAD PUSH1 0x20 DUP3 ADD MLOAD SWAP2 SWAP3 POP SWAP1 PUSH2 0x16CA SWAP1 DUP5 SWAP1 PUSH2 0x342A JUMP JUMPDEST PUSH2 0x16D4 SWAP2 SWAP1 PUSH2 0x33B0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x14 SLOAD PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x16EC SWAP1 DUP5 SWAP1 PUSH2 0x342A JUMP JUMPDEST PUSH2 0x16F6 SWAP2 SWAP1 PUSH2 0x33B0 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x14 SLOAD PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x170E SWAP1 DUP5 SWAP1 PUSH2 0x342A JUMP JUMPDEST PUSH2 0x1718 SWAP2 SWAP1 PUSH2 0x33B0 JUMP JUMPDEST PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x14 SLOAD PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x1730 SWAP1 DUP5 SWAP1 PUSH2 0x342A JUMP JUMPDEST PUSH2 0x173A SWAP2 SWAP1 PUSH2 0x33B0 JUMP JUMPDEST PUSH1 0x80 DUP3 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0xA58 SWAP1 PUSH2 0x33C4 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x177F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB50 SWAP1 PUSH2 0x349A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x17A5 JUMPI POP PUSH1 0xD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND SWAP2 AND EQ ISZERO JUMPDEST PUSH2 0x17EC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x496E76616C6964206F70657261746F722061646472657373 PUSH1 0x40 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB50 JUMP JUMPDEST PUSH1 0xD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0xA1FD6A6669ACB930BAE242943BB9FA08DDCBA665C707261E9730EE0305FB85E5 SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SUB PUSH2 0x1899 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB50 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD SWAP1 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x190F CALLER DUP4 PUSH2 0x2080 JUMP JUMPDEST PUSH2 0x192B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB50 SWAP1 PUSH2 0x3449 JUMP JUMPDEST PUSH2 0x1937 DUP5 DUP5 DUP5 DUP5 PUSH2 0x2370 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x60 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x19BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732314D657461646174613A2055524920717565727920666F72206E6F PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x3732BC34B9BA32B73A103A37B5B2B7 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB50 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 ADD SLOAD PUSH1 0x60 SWAP2 SUB PUSH2 0x19F4 JUMPI POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x3 PUSH1 0xFC SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x1A63 JUMP JUMPDEST PUSH1 0x13 SLOAD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH2 0x1A60 SWAP2 PUSH1 0x7 SWAP2 PUSH2 0x1A1B SWAP1 TIMESTAMP PUSH2 0x3383 JUMP JUMPDEST PUSH2 0x1A25 SWAP2 SWAP1 PUSH2 0x33B0 JUMP JUMPDEST GT PUSH2 0x1A59 JUMPI PUSH1 0x13 SLOAD PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH2 0x1A4A SWAP1 TIMESTAMP PUSH2 0x3383 JUMP JUMPDEST PUSH2 0x1A54 SWAP2 SWAP1 PUSH2 0x33B0 JUMP JUMPDEST PUSH2 0x1EF3 JUMP JUMPDEST PUSH1 0x7 PUSH2 0x1EF3 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x0 SWAP1 PUSH2 0x1A7A SWAP1 PUSH1 0x16 SWAP1 DUP5 SWAP1 PUSH1 0x20 ADD PUSH2 0x35F3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP PUSH2 0x1A95 DUP5 DUP3 PUSH2 0x7C7 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0xE DUP1 SLOAD PUSH1 0xF SLOAD PUSH1 0x10 SLOAD PUSH1 0x11 SLOAD PUSH1 0x12 SLOAD PUSH1 0x13 SLOAD PUSH1 0x14 SLOAD PUSH1 0x15 SLOAD PUSH1 0x16 DUP1 SLOAD SWAP9 SWAP10 SWAP8 SWAP9 SWAP7 SWAP8 SWAP6 SWAP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP6 AND SWAP6 SWAP4 SWAP5 SWAP3 SWAP4 SWAP2 SWAP3 PUSH2 0x1ADD SWAP1 PUSH2 0x33C4 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1B09 SWAP1 PUSH2 0x33C4 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1B56 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1B2B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1B56 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1B39 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP10 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1B8A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB50 SWAP1 PUSH2 0x349A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x1BB0 JUMPI POP PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND SWAP2 AND EQ ISZERO JUMPDEST PUSH2 0x1BF7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x496E76616C6964206F70657261746F722061646472657373 PUSH1 0x40 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB50 JUMP JUMPDEST PUSH1 0xC DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0xA6996D36756222F1028B4A1A97CBFA625158CF8E69AC5DCF367DE3BD730D34A4 SWAP1 PUSH1 0x20 ADD PUSH2 0x1836 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0x1C5D PUSH1 0x8 SLOAD SWAP1 JUMP JUMPDEST DUP3 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT CALLER PUSH1 0x60 SHL AND SWAP1 DUP4 ADD MSTORE TIMESTAMP PUSH1 0x54 DUP4 ADD MSTORE PUSH1 0x74 DUP3 ADD MSTORE PUSH1 0x94 ADD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD KECCAK256 TIMESTAMP PUSH1 0xB DUP5 ADD SSTORE PUSH1 0x11 SLOAD PUSH1 0xC DUP5 ADD DUP1 SLOAD SWAP3 SWAP4 POP SWAP1 SWAP2 PUSH1 0x0 SWAP1 PUSH2 0x1CCA SWAP1 DUP5 SWAP1 PUSH2 0x3412 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP DUP2 SLOAD PUSH1 0x1 SWAP1 DUP4 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x1CE4 SWAP1 DUP5 SWAP1 PUSH2 0x3412 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x1CF5 SWAP1 POP PUSH1 0x10 DUP3 PUSH2 0x33FE JUMP JUMPDEST PUSH2 0x1D00 SWAP1 PUSH1 0xA PUSH2 0x3412 JUMP JUMPDEST DUP3 PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1D13 SWAP2 SWAP1 PUSH2 0x3412 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH1 0x10 SWAP1 POP PUSH2 0x1D26 PUSH1 0x64 DUP4 PUSH2 0x33B0 JUMP JUMPDEST PUSH2 0x1D30 SWAP2 SWAP1 PUSH2 0x33FE JUMP JUMPDEST PUSH2 0x1D3B SWAP1 PUSH1 0xA PUSH2 0x3412 JUMP JUMPDEST DUP3 PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1D4E SWAP2 SWAP1 PUSH2 0x3412 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH1 0x10 SWAP1 POP PUSH2 0x1D62 PUSH2 0x2710 DUP4 PUSH2 0x33B0 JUMP JUMPDEST PUSH2 0x1D6C SWAP2 SWAP1 PUSH2 0x33FE JUMP JUMPDEST PUSH2 0x1D77 SWAP1 PUSH1 0xA PUSH2 0x3412 JUMP JUMPDEST DUP3 PUSH1 0x3 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1D8A SWAP2 SWAP1 PUSH2 0x3412 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH1 0xA SWAP1 POP PUSH2 0x1D9F PUSH3 0xF4240 DUP4 PUSH2 0x33B0 JUMP JUMPDEST PUSH2 0x1DA9 SWAP2 SWAP1 PUSH2 0x33FE JUMP JUMPDEST DUP3 PUSH1 0x4 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1DBC SWAP2 SWAP1 PUSH2 0x3412 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP DUP2 SLOAD PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE TIMESTAMP SWAP1 DUP3 ADD MSTORE DUP4 SWAP1 PUSH32 0xB77DF37C5C38B010D57710FFA0BF2BBCBDDA02F986C30D708810F5C6B3409631 SWAP1 PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1E35 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB50 SWAP1 PUSH2 0x349A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1E9A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB50 JUMP JUMPDEST PUSH2 0x10E5 DUP2 PUSH2 0x231E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x1ED4 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x7C1 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ PUSH2 0x7C1 JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH1 0x0 SUB PUSH2 0x1F1A JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x3 PUSH1 0xFC SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x0 JUMPDEST DUP2 ISZERO PUSH2 0x1F44 JUMPI DUP1 PUSH2 0x1F2E DUP2 PUSH2 0x3689 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F3D SWAP1 POP PUSH1 0xA DUP4 PUSH2 0x33B0 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F1E JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1F5F JUMPI PUSH2 0x1F5F PUSH2 0x291F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1F89 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST DUP5 ISZERO PUSH2 0x1A95 JUMPI PUSH2 0x1F9E PUSH1 0x1 DUP4 PUSH2 0x3383 JUMP JUMPDEST SWAP2 POP PUSH2 0x1FAB PUSH1 0xA DUP7 PUSH2 0x33FE JUMP JUMPDEST PUSH2 0x1FB6 SWAP1 PUSH1 0x30 PUSH2 0x3412 JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1FCB JUMPI PUSH2 0x1FCB PUSH2 0x35DD JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH2 0x1FED PUSH1 0xA DUP7 PUSH2 0x33B0 JUMP JUMPDEST SWAP5 POP PUSH2 0x1F8D JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH2 0x2029 DUP3 PUSH2 0x117B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH2 0x207C DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x23A3 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x20F9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206F70657261746F7220717565727920666F72206E6F6E6578 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x34B9BA32B73A103A37B5B2B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB50 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2104 DUP4 PUSH2 0x117B JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x213F JUMPI POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2134 DUP5 PUSH2 0xADB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST DUP1 PUSH2 0x1A95 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP9 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x1A95 JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2186 DUP3 PUSH2 0x117B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x21EE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E73666572206F6620746F6B656E20746861742069 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x39903737BA1037BBB7 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB50 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x2250 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB50 JUMP JUMPDEST PUSH2 0x225B DUP4 DUP4 DUP4 PUSH2 0x23D6 JUMP JUMPDEST PUSH2 0x2266 PUSH1 0x0 DUP3 PUSH2 0x1FF4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x228F SWAP1 DUP5 SWAP1 PUSH2 0x3383 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x22BD SWAP1 DUP5 SWAP1 PUSH2 0x3412 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP5 SWAP4 SWAP2 DUP8 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 POP POP POP JUMP JUMPDEST PUSH1 0xA DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x237B DUP5 DUP5 DUP5 PUSH2 0x2173 JUMP JUMPDEST PUSH2 0x2387 DUP5 DUP5 DUP5 DUP5 PUSH2 0x248E JUMP JUMPDEST PUSH2 0x1937 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB50 SWAP1 PUSH2 0x36A2 JUMP JUMPDEST PUSH2 0x23AD DUP4 DUP4 PUSH2 0x258F JUMP JUMPDEST PUSH2 0x23BA PUSH1 0x0 DUP5 DUP5 DUP5 PUSH2 0x248E JUMP JUMPDEST PUSH2 0xC85 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB50 SWAP1 PUSH2 0x36A2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x2431 JUMPI PUSH2 0x242C DUP2 PUSH1 0x8 DUP1 SLOAD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP3 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD DUP4 SSTORE SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xF3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE3 ADD SSTORE JUMP JUMPDEST PUSH2 0x2454 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x2454 JUMPI PUSH2 0x2454 DUP4 DUP3 PUSH2 0x26DD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x246B JUMPI PUSH2 0xC85 DUP2 PUSH2 0x277A JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xC85 JUMPI PUSH2 0xC85 DUP3 DUP3 PUSH2 0x2829 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x2584 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0x24D2 SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x36F4 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x250D JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x250A SWAP2 DUP2 ADD SWAP1 PUSH2 0x3731 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x256A JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x253B JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2540 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0x2562 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB50 SWAP1 PUSH2 0x36A2 JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP PUSH2 0x1A95 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x25E5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206D696E7420746F20746865207A65726F2061646472657373 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB50 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x264A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB50 JUMP JUMPDEST PUSH2 0x2656 PUSH1 0x0 DUP4 DUP4 PUSH2 0x23D6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x267F SWAP1 DUP5 SWAP1 PUSH2 0x3412 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD DUP4 SWAP3 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 DUP3 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH2 0x26EA DUP5 PUSH2 0x11F2 JUMP JUMPDEST PUSH2 0x26F4 SWAP2 SWAP1 PUSH2 0x3383 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP1 DUP3 EQ PUSH2 0x2747 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 SLOAD DUP5 DUP5 MSTORE DUP2 DUP5 KECCAK256 DUP2 SWAP1 SSTORE DUP4 MSTORE PUSH1 0x7 SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP2 SWAP1 SSTORE JUMPDEST POP PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP5 SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND DUP4 MSTORE PUSH1 0x6 DUP2 MSTORE DUP4 DUP4 KECCAK256 SWAP2 DUP4 MSTORE MSTORE SWAP1 DUP2 KECCAK256 SSTORE JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x278C SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x3383 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x8 DUP1 SLOAD SWAP4 SWAP5 POP SWAP1 SWAP3 DUP5 SWAP1 DUP2 LT PUSH2 0x27B4 JUMPI PUSH2 0x27B4 PUSH2 0x35DD JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 PUSH1 0x8 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x27D5 JUMPI PUSH2 0x27D5 PUSH2 0x35DD JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SWAP3 SWAP1 SWAP3 SSTORE DUP3 DUP2 MSTORE PUSH1 0x9 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP5 SWAP1 SSTORE DUP6 DUP3 MSTORE DUP2 KECCAK256 SSTORE PUSH1 0x8 DUP1 SLOAD DUP1 PUSH2 0x280D JUMPI PUSH2 0x280D PUSH2 0x374E JUMP JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2834 DUP4 PUSH2 0x11F2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 SWAP1 SSTORE SWAP4 DUP3 MSTORE PUSH1 0x7 SWAP1 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x1C0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x28E7 JUMPI PUSH2 0x28E7 PUSH2 0x2BFF JUMP JUMPDEST SWAP1 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x10E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2914 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xA42 DUP2 PUSH2 0x28EC JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP5 GT ISZERO PUSH2 0x2950 JUMPI PUSH2 0x2950 PUSH2 0x291F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP6 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x2978 JUMPI PUSH2 0x2978 PUSH2 0x291F JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP1 SWAP4 POP DUP6 DUP2 MSTORE DUP7 DUP7 DUP7 ADD GT ISZERO PUSH2 0x2991 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 DUP6 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP8 DUP4 ADD ADD MSTORE POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x29BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA42 DUP4 DUP4 CALLDATALOAD PUSH1 0x20 DUP6 ADD PUSH2 0x2935 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x29DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x29FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2A08 DUP6 DUP3 DUP7 ADD PUSH2 0x29AB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2A2D JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2A15 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1937 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x2A56 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x2A12 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0xA42 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2A3E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2A8F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2AAD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2AC5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2ACE DUP4 PUSH2 0x2A96 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2AF1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2AFA DUP5 PUSH2 0x2A96 JUMP JUMPDEST SWAP3 POP PUSH2 0x2B08 PUSH1 0x20 DUP6 ADD PUSH2 0x2A96 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x2B30 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2B47 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2B53 DUP9 DUP3 DUP10 ADD PUSH2 0x29AB JUMP JUMPDEST SWAP9 PUSH1 0x20 DUP9 ADD CALLDATALOAD SWAP9 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP8 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP8 POP PUSH1 0x80 ADD CALLDATALOAD SWAP6 POP SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2B87 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA42 DUP3 PUSH2 0x2A96 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x2BA8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH1 0x4 DUP2 LT PUSH2 0x2BC5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP5 SWAP8 SWAP4 SWAP7 POP SWAP4 SWAP5 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP5 POP PUSH1 0x80 ADD CALLDATALOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2BF0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x4 DUP2 LT PUSH2 0x2C33 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C0 DUP3 ADD SWAP1 POP DUP3 MLOAD DUP3 MSTORE PUSH1 0x20 DUP4 ADD MLOAD PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP4 ADD MLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP4 ADD MLOAD PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP4 ADD MLOAD PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xC0 DUP4 ADD MLOAD PUSH1 0xC0 DUP4 ADD MSTORE PUSH1 0xE0 DUP4 ADD MLOAD PUSH1 0xE0 DUP4 ADD MSTORE PUSH2 0x100 DUP1 DUP5 ADD MLOAD DUP2 DUP5 ADD MSTORE POP PUSH2 0x120 DUP1 DUP5 ADD MLOAD DUP2 DUP5 ADD MSTORE POP PUSH2 0x140 DUP1 DUP5 ADD MLOAD DUP2 DUP5 ADD MSTORE POP PUSH2 0x160 DUP1 DUP5 ADD MLOAD DUP2 DUP5 ADD MSTORE POP PUSH2 0x180 DUP1 DUP5 ADD MLOAD DUP2 DUP5 ADD MSTORE POP PUSH2 0x1A0 DUP1 DUP5 ADD MLOAD PUSH2 0x2CD9 DUP3 DUP6 ADD DUP3 PUSH2 0x2C15 JUMP JUMPDEST POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2CF4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2CFD DUP4 PUSH2 0x2A96 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x2D12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2D33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2D3C DUP6 PUSH2 0x2A96 JUMP JUMPDEST SWAP4 POP PUSH2 0x2D4A PUSH1 0x20 DUP7 ADD PUSH2 0x2A96 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2D6D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 ADD PUSH1 0x1F DUP2 ADD DUP8 SGT PUSH2 0x2D7E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2D8D DUP8 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x2935 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C0 DUP3 ADD SWAP1 POP DUP16 DUP3 MSTORE DUP15 PUSH1 0x20 DUP4 ADD MSTORE DUP14 PUSH1 0x40 DUP4 ADD MSTORE DUP13 PUSH1 0x60 DUP4 ADD MSTORE DUP12 PUSH1 0x80 DUP4 ADD MSTORE DUP11 PUSH1 0xA0 DUP4 ADD MSTORE DUP10 PUSH1 0xC0 DUP4 ADD MSTORE DUP9 PUSH1 0xE0 DUP4 ADD MSTORE DUP8 PUSH2 0x100 DUP4 ADD MSTORE DUP7 PUSH2 0x120 DUP4 ADD MSTORE DUP6 PUSH2 0x140 DUP4 ADD MSTORE DUP5 PUSH2 0x160 DUP4 ADD MSTORE DUP4 PUSH2 0x180 DUP4 ADD MSTORE PUSH2 0x2E00 PUSH2 0x1A0 DUP4 ADD DUP5 PUSH2 0x2C15 JUMP JUMPDEST SWAP16 SWAP15 POP POP POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x120 DUP12 DUP4 MSTORE DUP11 PUSH1 0x20 DUP5 ADD MSTORE DUP10 PUSH1 0x40 DUP5 ADD MSTORE DUP9 PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x80 DUP5 ADD MSTORE DUP7 PUSH1 0xA0 DUP5 ADD MSTORE DUP6 PUSH1 0xC0 DUP5 ADD MSTORE DUP5 PUSH1 0xE0 DUP5 ADD MSTORE DUP1 PUSH2 0x100 DUP5 ADD MSTORE PUSH2 0x2E60 DUP2 DUP5 ADD DUP6 PUSH2 0x2A3E JUMP JUMPDEST SWAP13 SWAP12 POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2E83 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2E8C DUP4 PUSH2 0x2A96 JUMP JUMPDEST SWAP2 POP PUSH2 0x2E9A PUSH1 0x20 DUP5 ADD PUSH2 0x2A96 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD PUSH2 0x2EB5 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2A12 JUMP JUMPDEST SWAP3 SWAP1 SWAP3 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x7B226465736372697074696F6E223A202257697A61726441726D792200000000 DUP2 MSTORE PUSH32 0x2C202265787465726E616C5F75726C223A202268747470733A2F2F77697A6172 PUSH1 0x1C DUP3 ADD MSTORE PUSH32 0x6461726D794E46542E636F6D20286F7220736F6D657468696E67206C696B6520 PUSH1 0x3C DUP3 ADD MSTORE PUSH6 0x3A3434B99491 PUSH1 0xD1 SHL PUSH1 0x5C DUP3 ADD MSTORE PUSH12 0x16101134B6B0B3B2911D1011 PUSH1 0xA1 SHL PUSH1 0x62 DUP3 ADD MSTORE DUP3 MLOAD PUSH1 0x0 SWAP1 PUSH2 0x2F68 DUP2 PUSH1 0x6E DUP6 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x2A12 JUMP JUMPDEST PUSH1 0x11 PUSH1 0xF9 SHL PUSH1 0x6E SWAP2 DUP5 ADD SWAP2 DUP3 ADD MSTORE PUSH18 0x1610113730B6B2911D10112BB4BD30B93211 PUSH1 0x71 SHL PUSH1 0x6F DUP3 ADD MSTORE PUSH32 0x2C202261747472696275746573223A205B7B22646973706C61795F7479706522 PUSH1 0x81 DUP3 ADD MSTORE PUSH32 0x3A20226E756D626572222C202274726169745F74797065223A20226C6576656C PUSH1 0xA1 DUP3 ADD MSTORE PUSH12 0x111610113B30B63AB2911D1 PUSH1 0xA5 SHL PUSH1 0xC1 DUP3 ADD MSTORE PUSH2 0x3010 PUSH2 0x3002 PUSH1 0xCD DUP4 ADD DUP7 PUSH2 0x2EA3 JUMP JUMPDEST PUSH2 0x207D PUSH1 0xF0 SHL DUP2 MSTORE PUSH1 0x2 ADD SWAP1 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP6 MLOAD PUSH2 0x302B DUP2 DUP5 PUSH1 0x20 DUP11 ADD PUSH2 0x2A12 JUMP JUMPDEST DUP1 DUP4 ADD SWAP1 POP PUSH32 0x2C207B22646973706C61795F74797065223A20226E756D626572222C20227472 DUP1 DUP3 MSTORE PUSH32 0x6169745F74797065223A20226870222C202276616C7565223A20000000000000 PUSH1 0x20 DUP4 ADD MSTORE DUP7 MLOAD PUSH2 0x308D DUP2 PUSH1 0x3A DUP6 ADD PUSH1 0x20 DUP12 ADD PUSH2 0x2A12 JUMP JUMPDEST PUSH2 0x207D PUSH1 0xF0 SHL PUSH1 0x3A SWAP4 SWAP1 SWAP2 ADD SWAP3 DUP4 ADD DUP2 SWAP1 MSTORE PUSH1 0x3C DUP4 ADD DUP3 SWAP1 MSTORE PUSH32 0x6169745F74797065223A20226D61676963616C20706F776572222C202276616C PUSH1 0x5C DUP5 ADD MSTORE PUSH5 0x3AB2911D1 PUSH1 0xDD SHL PUSH1 0x7C DUP5 ADD MSTORE DUP7 MLOAD PUSH2 0x30ED DUP2 PUSH1 0x81 DUP7 ADD PUSH1 0x20 DUP12 ADD PUSH2 0x2A12 JUMP JUMPDEST PUSH1 0x81 SWAP4 ADD SWAP3 DUP4 ADD MSTORE PUSH1 0x83 DUP3 ADD MSTORE PUSH32 0x6169745F74797065223A20226D61676963616C20646566656E7365222C202276 PUSH1 0xA3 DUP3 ADD MSTORE PUSH7 0x30B63AB2911D1 PUSH1 0xCD SHL PUSH1 0xC3 DUP3 ADD MSTORE PUSH2 0x3140 PUSH2 0x3002 PUSH1 0xCA DUP4 ADD DUP7 PUSH2 0x2EA3 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP5 MLOAD PUSH2 0x315D DUP2 DUP5 PUSH1 0x20 DUP10 ADD PUSH2 0x2A12 JUMP JUMPDEST DUP1 DUP4 ADD SWAP1 POP PUSH32 0x2C207B22646973706C61795F74797065223A20226E756D626572222C20227472 DUP1 DUP3 MSTORE PUSH32 0x6169745F74797065223A20227370656564222C202276616C7565223A20000000 PUSH1 0x20 DUP4 ADD MSTORE DUP6 MLOAD PUSH2 0x31BF DUP2 PUSH1 0x3D DUP6 ADD PUSH1 0x20 DUP11 ADD PUSH2 0x2A12 JUMP JUMPDEST DUP1 DUP4 ADD SWAP3 POP POP PUSH2 0x207D PUSH1 0xF0 SHL DUP1 PUSH1 0x3D DUP5 ADD MSTORE DUP2 PUSH1 0x3F DUP5 ADD MSTORE PUSH32 0x6169745F74797065223A202277696E73222C202276616C7565223A2000000000 PUSH1 0x5F DUP5 ADD MSTORE DUP6 MLOAD SWAP2 POP PUSH2 0x3212 DUP3 PUSH1 0x7B DUP6 ADD PUSH1 0x20 DUP10 ADD PUSH2 0x2A12 JUMP JUMPDEST PUSH1 0x7B SWAP3 SWAP1 SWAP2 ADD SWAP2 DUP3 ADD MSTORE PUSH1 0x7D ADD SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP6 MLOAD PUSH2 0x323A DUP2 DUP5 PUSH1 0x20 DUP11 ADD PUSH2 0x2A12 JUMP JUMPDEST DUP1 DUP4 ADD SWAP1 POP PUSH32 0x2C207B22646973706C61795F74797065223A20226E756D626572222C20227472 DUP1 DUP3 MSTORE PUSH32 0x6169745F74797065223A20226C6F73736573222C202276616C7565223A200000 PUSH1 0x20 DUP4 ADD MSTORE DUP7 MLOAD PUSH2 0x329C DUP2 PUSH1 0x3E DUP6 ADD PUSH1 0x20 DUP12 ADD PUSH2 0x2A12 JUMP JUMPDEST DUP1 DUP4 ADD SWAP3 POP POP PUSH2 0x207D PUSH1 0xF0 SHL DUP1 PUSH1 0x3E DUP5 ADD MSTORE DUP2 PUSH1 0x40 DUP5 ADD MSTORE PUSH32 0x6169745F74797065223A2022626174746C6573222C202276616C7565223A2000 PUSH1 0x60 DUP5 ADD MSTORE DUP7 MLOAD PUSH2 0x32ED DUP2 PUSH1 0x7F DUP7 ADD PUSH1 0x20 DUP12 ADD PUSH2 0x2A12 JUMP JUMPDEST PUSH1 0x7F SWAP4 ADD SWAP3 DUP4 ADD MSTORE PUSH1 0x81 DUP3 ADD MSTORE PUSH32 0x6169745F74797065223A2022746F6B656E73436C61696D6564222C202276616C PUSH1 0xA1 DUP3 ADD MSTORE PUSH5 0x3AB2911D1 PUSH1 0xDD SHL PUSH1 0xC1 DUP3 ADD MSTORE PUSH2 0x3140 PUSH2 0x3002 PUSH1 0xC6 DUP4 ADD DUP7 PUSH2 0x2EA3 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x3350 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x2A12 JUMP JUMPDEST PUSH1 0x5D PUSH1 0xF8 SHL SWAP3 ADD SWAP2 DUP3 MSTORE POP PUSH1 0x7D PUSH1 0xF8 SHL PUSH1 0x1 DUP3 ADD MSTORE PUSH1 0x2 ADD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x3395 JUMPI PUSH2 0x3395 PUSH2 0x336D JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x33BF JUMPI PUSH2 0x33BF PUSH2 0x339A JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x33D8 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x33F8 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x340D JUMPI PUSH2 0x340D PUSH2 0x339A JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x3425 JUMPI PUSH2 0x3425 PUSH2 0x336D JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x3444 JUMPI PUSH2 0x3444 PUSH2 0x336D JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x31 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722063616C6C6572206973206E6F74206F PUSH1 0x40 DUP3 ADD MSTORE PUSH17 0x1DDB995C881B9BDC88185C1C1C9BDD9959 PUSH1 0x7A SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0xC85 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x34F6 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3515 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x3502 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3537 JUMPI PUSH2 0x3537 PUSH2 0x291F JUMP JUMPDEST PUSH2 0x354B DUP2 PUSH2 0x3545 DUP5 SLOAD PUSH2 0x33C4 JUMP JUMPDEST DUP5 PUSH2 0x34CF JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x3580 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x3568 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x3515 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x35AF JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x3590 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x35CD JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP5 SLOAD PUSH2 0x3601 DUP2 PUSH2 0x33C4 JUMP JUMPDEST PUSH1 0x1 DUP3 DUP2 AND DUP1 ISZERO PUSH2 0x3619 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x362E JUMPI PUSH2 0x365D JUMP JUMPDEST PUSH1 0xFF NOT DUP5 AND DUP8 MSTORE DUP3 ISZERO ISZERO DUP4 MUL DUP8 ADD SWAP5 POP PUSH2 0x365D JUMP JUMPDEST DUP9 PUSH1 0x0 MSTORE PUSH1 0x20 DUP1 PUSH1 0x0 KECCAK256 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x3654 JUMPI DUP2 SLOAD DUP11 DUP3 ADD MSTORE SWAP1 DUP5 ADD SWAP1 DUP3 ADD PUSH2 0x363B JUMP JUMPDEST POP POP POP DUP3 DUP8 ADD SWAP5 POP JUMPDEST POP POP POP POP DUP4 MLOAD PUSH2 0x3671 DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0x2A12 JUMP JUMPDEST PUSH4 0x2E6A7067 PUSH1 0xE0 SHL SWAP2 ADD SWAP1 DUP2 MSTORE PUSH1 0x4 ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x369B JUMPI PUSH2 0x369B PUSH2 0x336D JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x32 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x40 DUP3 ADD MSTORE PUSH18 0x31B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x71 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x3727 SWAP1 DUP4 ADD DUP5 PUSH2 0x2A3E JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3743 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xA42 DUP2 PUSH2 0x28EC JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x28 0xC0 0x2A 0xFC PUSH3 0x6E5AEF PC PUSH24 0x37B7ADF4D764F1497D58389293C0C29F7DC6B5B0921E6473 PUSH16 0x6C634300080F00330000000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        359,
        16018
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "5": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "CALLDATASIZE",
      "path": "22"
    },
    "8": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "LT",
      "path": "22"
    },
    "9": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x21A"
    },
    "12": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "13": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "CALLDATALOAD",
      "path": "22"
    },
    "16": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "SHR",
      "path": "22"
    },
    "19": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "DUP1",
      "path": "22"
    },
    "20": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x715018A6"
    },
    "25": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "GT",
      "path": "22"
    },
    "26": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x123"
    },
    "29": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "30": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "DUP1",
      "path": "22"
    },
    "31": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xA22CB465"
    },
    "36": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "GT",
      "path": "22"
    },
    "37": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xAB"
    },
    "40": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "41": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "DUP1",
      "path": "22"
    },
    "42": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xDB2A0A55"
    },
    "47": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "GT",
      "path": "22"
    },
    "48": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x6F"
    },
    "51": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "52": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "DUP1",
      "path": "22"
    },
    "53": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xDB2A0A55"
    },
    "58": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "EQ",
      "path": "22"
    },
    "59": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x6D6"
    },
    "62": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "63": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "DUP1",
      "path": "22"
    },
    "64": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xE52E3249"
    },
    "69": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "EQ",
      "path": "22"
    },
    "70": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x700"
    },
    "73": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "74": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "DUP1",
      "path": "22"
    },
    "75": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xE8A77D17"
    },
    "80": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "EQ",
      "path": "22"
    },
    "81": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x720"
    },
    "84": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "85": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "DUP1",
      "path": "22"
    },
    "86": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xE985E9C5"
    },
    "91": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "EQ",
      "path": "22"
    },
    "92": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x733"
    },
    "95": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "96": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "DUP1",
      "path": "22"
    },
    "97": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xF2FDE38B"
    },
    "102": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "EQ",
      "path": "22"
    },
    "103": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x77C"
    },
    "106": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "107": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "109": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "DUP1",
      "path": "22"
    },
    "110": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "REVERT",
      "path": "22"
    },
    "111": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "112": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "DUP1",
      "path": "22"
    },
    "113": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xA22CB465"
    },
    "118": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "EQ",
      "path": "22"
    },
    "119": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x5B0"
    },
    "122": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "123": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "DUP1",
      "path": "22"
    },
    "124": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xB88D4FDE"
    },
    "129": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "EQ",
      "path": "22"
    },
    "130": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x5D0"
    },
    "133": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "134": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "DUP1",
      "path": "22"
    },
    "135": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xBC0B0D88"
    },
    "140": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "EQ",
      "path": "22"
    },
    "141": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x5F0"
    },
    "144": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "145": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "DUP1",
      "path": "22"
    },
    "146": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xC87B56DD"
    },
    "151": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "EQ",
      "path": "22"
    },
    "152": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x610"
    },
    "155": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "156": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "DUP1",
      "path": "22"
    },
    "157": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xC87BFC7F"
    },
    "162": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "EQ",
      "path": "22"
    },
    "163": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x630"
    },
    "166": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "167": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "169": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "DUP1",
      "path": "22"
    },
    "170": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "REVERT",
      "path": "22"
    },
    "171": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "172": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "DUP1",
      "path": "22"
    },
    "173": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x8AD4D6A5"
    },
    "178": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "GT",
      "path": "22"
    },
    "179": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xF2"
    },
    "182": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "183": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "DUP1",
      "path": "22"
    },
    "184": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x8AD4D6A5"
    },
    "189": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "EQ",
      "path": "22"
    },
    "190": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x510"
    },
    "193": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "194": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "DUP1",
      "path": "22"
    },
    "195": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x8CB22518"
    },
    "200": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "EQ",
      "path": "22"
    },
    "201": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x530"
    },
    "204": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "205": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "DUP1",
      "path": "22"
    },
    "206": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x8DA5CB5B"
    },
    "211": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "EQ",
      "path": "22"
    },
    "212": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x55D"
    },
    "215": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "216": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "DUP1",
      "path": "22"
    },
    "217": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x95D89B41"
    },
    "222": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "EQ",
      "path": "22"
    },
    "223": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x57B"
    },
    "226": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "227": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "DUP1",
      "path": "22"
    },
    "228": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x97FC007C"
    },
    "233": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "EQ",
      "path": "22"
    },
    "234": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x590"
    },
    "237": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "238": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "240": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "DUP1",
      "path": "22"
    },
    "241": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "REVERT",
      "path": "22"
    },
    "242": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "243": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "DUP1",
      "path": "22"
    },
    "244": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x715018A6"
    },
    "249": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "EQ",
      "path": "22"
    },
    "250": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x489"
    },
    "253": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "254": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "DUP1",
      "path": "22"
    },
    "255": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x7901EA78"
    },
    "260": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "EQ",
      "path": "22"
    },
    "261": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x49E"
    },
    "264": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "265": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "DUP1",
      "path": "22"
    },
    "266": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x8140BD0B"
    },
    "271": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "EQ",
      "path": "22"
    },
    "272": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x4BE"
    },
    "275": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "276": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "DUP1",
      "path": "22"
    },
    "277": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x82AFD23B"
    },
    "282": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "EQ",
      "path": "22"
    },
    "283": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x4DE"
    },
    "286": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "287": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "289": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "DUP1",
      "path": "22"
    },
    "290": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "REVERT",
      "path": "22"
    },
    "291": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "292": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "DUP1",
      "path": "22"
    },
    "293": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x23B872DD"
    },
    "298": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "GT",
      "path": "22"
    },
    "299": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1A6"
    },
    "302": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "303": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "DUP1",
      "path": "22"
    },
    "304": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x42842E0E"
    },
    "309": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "GT",
      "path": "22"
    },
    "310": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x175"
    },
    "313": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "314": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "DUP1",
      "path": "22"
    },
    "315": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x42842E0E"
    },
    "320": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "EQ",
      "path": "22"
    },
    "321": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x3E9"
    },
    "324": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "325": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "DUP1",
      "path": "22"
    },
    "326": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x437454B9"
    },
    "331": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "EQ",
      "path": "22"
    },
    "332": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x409"
    },
    "335": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "336": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "DUP1",
      "path": "22"
    },
    "337": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x4F6CCCE7"
    },
    "342": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "EQ",
      "path": "22"
    },
    "343": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x429"
    },
    "346": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "347": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "DUP1",
      "path": "22"
    },
    "348": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x6352211E"
    },
    "353": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "EQ",
      "path": "22"
    },
    "354": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x449"
    },
    "357": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "358": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "DUP1",
      "path": "22"
    },
    "359": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x70A08231"
    },
    "364": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "EQ",
      "path": "22"
    },
    "365": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x469"
    },
    "368": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "369": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "371": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "DUP1",
      "path": "22"
    },
    "372": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "REVERT",
      "path": "22"
    },
    "373": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "374": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "DUP1",
      "path": "22"
    },
    "375": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x23B872DD"
    },
    "380": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "EQ",
      "path": "22"
    },
    "381": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x369"
    },
    "384": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "385": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "DUP1",
      "path": "22"
    },
    "386": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x2B7AC3F3"
    },
    "391": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "EQ",
      "path": "22"
    },
    "392": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x389"
    },
    "395": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "396": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "DUP1",
      "path": "22"
    },
    "397": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x2F745C59"
    },
    "402": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "EQ",
      "path": "22"
    },
    "403": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x3A9"
    },
    "406": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "407": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "DUP1",
      "path": "22"
    },
    "408": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x3B6029CA"
    },
    "413": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "EQ",
      "path": "22"
    },
    "414": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x3C9"
    },
    "417": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "418": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "420": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "DUP1",
      "path": "22"
    },
    "421": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "REVERT",
      "path": "22"
    },
    "422": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "423": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "DUP1",
      "path": "22"
    },
    "424": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x81812FC"
    },
    "429": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "GT",
      "path": "22"
    },
    "430": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1ED"
    },
    "433": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "434": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "DUP1",
      "path": "22"
    },
    "435": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x81812FC"
    },
    "440": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "EQ",
      "path": "22"
    },
    "441": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2C4"
    },
    "444": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "445": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "DUP1",
      "path": "22"
    },
    "446": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x95EA7B3"
    },
    "451": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "EQ",
      "path": "22"
    },
    "452": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2FC"
    },
    "455": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "456": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "DUP1",
      "path": "22"
    },
    "457": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xA363D08"
    },
    "462": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "EQ",
      "path": "22"
    },
    "463": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x31E"
    },
    "466": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "467": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "DUP1",
      "path": "22"
    },
    "468": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x1249C58B"
    },
    "473": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "EQ",
      "path": "22"
    },
    "474": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x33F"
    },
    "477": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "478": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "DUP1",
      "path": "22"
    },
    "479": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x18160DDD"
    },
    "484": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "EQ",
      "path": "22"
    },
    "485": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x354"
    },
    "488": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "489": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "491": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "DUP1",
      "path": "22"
    },
    "492": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "REVERT",
      "path": "22"
    },
    "493": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "494": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "DUP1",
      "path": "22"
    },
    "495": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x1FFC9A7"
    },
    "500": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "EQ",
      "path": "22"
    },
    "501": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x21F"
    },
    "504": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "505": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "DUP1",
      "path": "22"
    },
    "506": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x419E314"
    },
    "511": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "EQ",
      "path": "22"
    },
    "512": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x254"
    },
    "515": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "516": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "DUP1",
      "path": "22"
    },
    "517": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x5106353"
    },
    "522": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "EQ",
      "path": "22"
    },
    "523": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x281"
    },
    "526": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "527": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "DUP1",
      "path": "22"
    },
    "528": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x6FDDE03"
    },
    "533": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "EQ",
      "path": "22"
    },
    "534": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2AF"
    },
    "537": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "538": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "539": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "541": {
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "DUP1",
      "path": "22"
    },
    "542": {
      "first_revert": true,
      "fn": null,
      "offset": [
        359,
        16018
      ],
      "op": "REVERT",
      "path": "22"
    },
    "543": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        988,
        1212
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "544": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        988,
        1212
      ],
      "op": "CALLVALUE",
      "path": "7"
    },
    "545": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        988,
        1212
      ],
      "op": "DUP1",
      "path": "7"
    },
    "546": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        988,
        1212
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "547": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        988,
        1212
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x22B"
    },
    "550": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        988,
        1212
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "551": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        988,
        1212
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "553": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        988,
        1212
      ],
      "op": "DUP1",
      "path": "7"
    },
    "554": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        988,
        1212
      ],
      "op": "REVERT",
      "path": "7"
    },
    "555": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        988,
        1212
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "556": {
      "op": "POP"
    },
    "557": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        988,
        1212
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x23F"
    },
    "560": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        988,
        1212
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x23A"
    },
    "563": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        988,
        1212
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "564": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        988,
        1212
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "566": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        988,
        1212
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2902"
    },
    "569": {
      "fn": "ERC721Enumerable.supportsInterface",
      "jump": "i",
      "offset": [
        988,
        1212
      ],
      "op": "JUMP",
      "path": "7"
    },
    "570": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        988,
        1212
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "571": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        988,
        1212
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x79C"
    },
    "574": {
      "fn": "ERC721Enumerable.supportsInterface",
      "jump": "i",
      "offset": [
        988,
        1212
      ],
      "op": "JUMP",
      "path": "7"
    },
    "575": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        988,
        1212
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "576": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        988,
        1212
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "578": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        988,
        1212
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "579": {
      "op": "SWAP1"
    },
    "580": {
      "op": "ISZERO"
    },
    "581": {
      "op": "ISZERO"
    },
    "582": {
      "op": "DUP2"
    },
    "583": {
      "op": "MSTORE"
    },
    "584": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "586": {
      "op": "ADD"
    },
    "587": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        988,
        1212
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "588": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        988,
        1212
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "590": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        988,
        1212
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "591": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        988,
        1212
      ],
      "op": "DUP1",
      "path": "7"
    },
    "592": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        988,
        1212
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "593": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        988,
        1212
      ],
      "op": "SUB",
      "path": "7"
    },
    "594": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        988,
        1212
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "595": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        988,
        1212
      ],
      "op": "RETURN",
      "path": "7"
    },
    "596": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10404,
        13641
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "597": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10404,
        13641
      ],
      "op": "CALLVALUE",
      "path": "22"
    },
    "598": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10404,
        13641
      ],
      "op": "DUP1",
      "path": "22"
    },
    "599": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10404,
        13641
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "600": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10404,
        13641
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x260"
    },
    "603": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10404,
        13641
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "604": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10404,
        13641
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "606": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10404,
        13641
      ],
      "op": "DUP1",
      "path": "22"
    },
    "607": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10404,
        13641
      ],
      "op": "REVERT",
      "path": "22"
    },
    "608": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10404,
        13641
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "609": {
      "op": "POP"
    },
    "610": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10404,
        13641
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x274"
    },
    "613": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10404,
        13641
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x26F"
    },
    "616": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10404,
        13641
      ],
      "op": "CALLDATASIZE",
      "path": "22"
    },
    "617": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10404,
        13641
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "619": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10404,
        13641
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x29CB"
    },
    "622": {
      "fn": "Wizards.formatTokenURI",
      "jump": "i",
      "offset": [
        10404,
        13641
      ],
      "op": "JUMP",
      "path": "22"
    },
    "623": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10404,
        13641
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "624": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10404,
        13641
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x7C7"
    },
    "627": {
      "fn": "Wizards.formatTokenURI",
      "jump": "i",
      "offset": [
        10404,
        13641
      ],
      "op": "JUMP",
      "path": "22"
    },
    "628": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10404,
        13641
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "629": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10404,
        13641
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "631": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10404,
        13641
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "632": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10404,
        13641
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x24B"
    },
    "635": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10404,
        13641
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "636": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10404,
        13641
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "637": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10404,
        13641
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2A6A"
    },
    "640": {
      "fn": "Wizards.formatTokenURI",
      "jump": "i",
      "offset": [
        10404,
        13641
      ],
      "op": "JUMP",
      "path": "22"
    },
    "641": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        8173,
        8537
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "642": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        8173,
        8537
      ],
      "op": "CALLVALUE",
      "path": "22"
    },
    "643": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        8173,
        8537
      ],
      "op": "DUP1",
      "path": "22"
    },
    "644": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        8173,
        8537
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "645": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        8173,
        8537
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x28D"
    },
    "648": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        8173,
        8537
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "649": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        8173,
        8537
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "651": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        8173,
        8537
      ],
      "op": "DUP1",
      "path": "22"
    },
    "652": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        8173,
        8537
      ],
      "op": "REVERT",
      "path": "22"
    },
    "653": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        8173,
        8537
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "654": {
      "op": "POP"
    },
    "655": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        8173,
        8537
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2A1"
    },
    "658": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        8173,
        8537
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x29C"
    },
    "661": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        8173,
        8537
      ],
      "op": "CALLDATASIZE",
      "path": "22"
    },
    "662": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        8173,
        8537
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "664": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        8173,
        8537
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2A7D"
    },
    "667": {
      "fn": "Wizards.getPhaseOf",
      "jump": "i",
      "offset": [
        8173,
        8537
      ],
      "op": "JUMP",
      "path": "22"
    },
    "668": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        8173,
        8537
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "669": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        8173,
        8537
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x9DA"
    },
    "672": {
      "fn": "Wizards.getPhaseOf",
      "jump": "i",
      "offset": [
        8173,
        8537
      ],
      "op": "JUMP",
      "path": "22"
    },
    "673": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        8173,
        8537
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "674": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        8173,
        8537
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "676": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        8173,
        8537
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "677": {
      "op": "SWAP1"
    },
    "678": {
      "op": "DUP2"
    },
    "679": {
      "op": "MSTORE"
    },
    "680": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "682": {
      "op": "ADD"
    },
    "683": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        8173,
        8537
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x24B"
    },
    "686": {
      "op": "JUMP"
    },
    "687": {
      "fn": "ERC721.name",
      "offset": [
        2525,
        2625
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "688": {
      "fn": "ERC721.name",
      "offset": [
        2525,
        2625
      ],
      "op": "CALLVALUE",
      "path": "6"
    },
    "689": {
      "fn": "ERC721.name",
      "offset": [
        2525,
        2625
      ],
      "op": "DUP1",
      "path": "6"
    },
    "690": {
      "fn": "ERC721.name",
      "offset": [
        2525,
        2625
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "691": {
      "fn": "ERC721.name",
      "offset": [
        2525,
        2625
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2BB"
    },
    "694": {
      "fn": "ERC721.name",
      "offset": [
        2525,
        2625
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "695": {
      "fn": "ERC721.name",
      "offset": [
        2525,
        2625
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "697": {
      "fn": "ERC721.name",
      "offset": [
        2525,
        2625
      ],
      "op": "DUP1",
      "path": "6"
    },
    "698": {
      "fn": "ERC721.name",
      "offset": [
        2525,
        2625
      ],
      "op": "REVERT",
      "path": "6"
    },
    "699": {
      "fn": "ERC721.name",
      "offset": [
        2525,
        2625
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "700": {
      "fn": "ERC721.name",
      "offset": [
        2525,
        2625
      ],
      "op": "POP",
      "path": "6"
    },
    "701": {
      "fn": "ERC721.name",
      "offset": [
        2525,
        2625
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x274"
    },
    "704": {
      "fn": "ERC721.name",
      "offset": [
        2525,
        2625
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xA49"
    },
    "707": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2525,
        2625
      ],
      "op": "JUMP",
      "path": "6"
    },
    "708": {
      "fn": "ERC721.getApproved",
      "offset": [
        4084,
        4305
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "709": {
      "fn": "ERC721.getApproved",
      "offset": [
        4084,
        4305
      ],
      "op": "CALLVALUE",
      "path": "6"
    },
    "710": {
      "fn": "ERC721.getApproved",
      "offset": [
        4084,
        4305
      ],
      "op": "DUP1",
      "path": "6"
    },
    "711": {
      "fn": "ERC721.getApproved",
      "offset": [
        4084,
        4305
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "712": {
      "fn": "ERC721.getApproved",
      "offset": [
        4084,
        4305
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2D0"
    },
    "715": {
      "fn": "ERC721.getApproved",
      "offset": [
        4084,
        4305
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "716": {
      "fn": "ERC721.getApproved",
      "offset": [
        4084,
        4305
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "718": {
      "fn": "ERC721.getApproved",
      "offset": [
        4084,
        4305
      ],
      "op": "DUP1",
      "path": "6"
    },
    "719": {
      "fn": "ERC721.getApproved",
      "offset": [
        4084,
        4305
      ],
      "op": "REVERT",
      "path": "6"
    },
    "720": {
      "fn": "ERC721.getApproved",
      "offset": [
        4084,
        4305
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "721": {
      "op": "POP"
    },
    "722": {
      "fn": "ERC721.getApproved",
      "offset": [
        4084,
        4305
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2E4"
    },
    "725": {
      "fn": "ERC721.getApproved",
      "offset": [
        4084,
        4305
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2DF"
    },
    "728": {
      "fn": "ERC721.getApproved",
      "offset": [
        4084,
        4305
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "729": {
      "fn": "ERC721.getApproved",
      "offset": [
        4084,
        4305
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "731": {
      "fn": "ERC721.getApproved",
      "offset": [
        4084,
        4305
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2A7D"
    },
    "734": {
      "fn": "ERC721.getApproved",
      "jump": "i",
      "offset": [
        4084,
        4305
      ],
      "op": "JUMP",
      "path": "6"
    },
    "735": {
      "fn": "ERC721.getApproved",
      "offset": [
        4084,
        4305
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "736": {
      "fn": "ERC721.getApproved",
      "offset": [
        4084,
        4305
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xADB"
    },
    "739": {
      "fn": "ERC721.getApproved",
      "jump": "i",
      "offset": [
        4084,
        4305
      ],
      "op": "JUMP",
      "path": "6"
    },
    "740": {
      "fn": "ERC721.getApproved",
      "offset": [
        4084,
        4305
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "741": {
      "fn": "ERC721.getApproved",
      "offset": [
        4084,
        4305
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "743": {
      "fn": "ERC721.getApproved",
      "offset": [
        4084,
        4305
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "744": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "746": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "748": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "750": {
      "op": "SHL"
    },
    "751": {
      "op": "SUB"
    },
    "752": {
      "op": "SWAP1"
    },
    "753": {
      "op": "SWAP2"
    },
    "754": {
      "op": "AND"
    },
    "755": {
      "op": "DUP2"
    },
    "756": {
      "op": "MSTORE"
    },
    "757": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "759": {
      "op": "ADD"
    },
    "760": {
      "fn": "ERC721.getApproved",
      "offset": [
        4084,
        4305
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x24B"
    },
    "763": {
      "op": "JUMP"
    },
    "764": {
      "fn": "ERC721.approve",
      "offset": [
        3607,
        4018
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "765": {
      "fn": "ERC721.approve",
      "offset": [
        3607,
        4018
      ],
      "op": "CALLVALUE",
      "path": "6"
    },
    "766": {
      "fn": "ERC721.approve",
      "offset": [
        3607,
        4018
      ],
      "op": "DUP1",
      "path": "6"
    },
    "767": {
      "fn": "ERC721.approve",
      "offset": [
        3607,
        4018
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "768": {
      "fn": "ERC721.approve",
      "offset": [
        3607,
        4018
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x308"
    },
    "771": {
      "fn": "ERC721.approve",
      "offset": [
        3607,
        4018
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "772": {
      "fn": "ERC721.approve",
      "offset": [
        3607,
        4018
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "774": {
      "fn": "ERC721.approve",
      "offset": [
        3607,
        4018
      ],
      "op": "DUP1",
      "path": "6"
    },
    "775": {
      "fn": "ERC721.approve",
      "offset": [
        3607,
        4018
      ],
      "op": "REVERT",
      "path": "6"
    },
    "776": {
      "fn": "ERC721.approve",
      "offset": [
        3607,
        4018
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "777": {
      "op": "POP"
    },
    "778": {
      "fn": "ERC721.approve",
      "offset": [
        3607,
        4018
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x31C"
    },
    "781": {
      "fn": "ERC721.approve",
      "offset": [
        3607,
        4018
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x317"
    },
    "784": {
      "fn": "ERC721.approve",
      "offset": [
        3607,
        4018
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "785": {
      "fn": "ERC721.approve",
      "offset": [
        3607,
        4018
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "787": {
      "fn": "ERC721.approve",
      "offset": [
        3607,
        4018
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2AB2"
    },
    "790": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3607,
        4018
      ],
      "op": "JUMP",
      "path": "6"
    },
    "791": {
      "fn": "ERC721.approve",
      "offset": [
        3607,
        4018
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "792": {
      "fn": "ERC721.approve",
      "offset": [
        3607,
        4018
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xB75"
    },
    "795": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3607,
        4018
      ],
      "op": "JUMP",
      "path": "6"
    },
    "796": {
      "fn": "ERC721.approve",
      "offset": [
        3607,
        4018
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "797": {
      "fn": "ERC721.approve",
      "offset": [
        3607,
        4018
      ],
      "op": "STOP",
      "path": "6"
    },
    "798": {
      "fn": "Wizards.getIsDeserted",
      "offset": [
        8623,
        8695
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "799": {
      "fn": "Wizards.getIsDeserted",
      "offset": [
        8623,
        8695
      ],
      "op": "CALLVALUE",
      "path": "22"
    },
    "800": {
      "fn": "Wizards.getIsDeserted",
      "offset": [
        8623,
        8695
      ],
      "op": "DUP1",
      "path": "22"
    },
    "801": {
      "fn": "Wizards.getIsDeserted",
      "offset": [
        8623,
        8695
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "802": {
      "fn": "Wizards.getIsDeserted",
      "offset": [
        8623,
        8695
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x32A"
    },
    "805": {
      "fn": "Wizards.getIsDeserted",
      "offset": [
        8623,
        8695
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "806": {
      "fn": "Wizards.getIsDeserted",
      "offset": [
        8623,
        8695
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "808": {
      "fn": "Wizards.getIsDeserted",
      "offset": [
        8623,
        8695
      ],
      "op": "DUP1",
      "path": "22"
    },
    "809": {
      "fn": "Wizards.getIsDeserted",
      "offset": [
        8623,
        8695
      ],
      "op": "REVERT",
      "path": "22"
    },
    "810": {
      "fn": "Wizards.getIsDeserted",
      "offset": [
        8623,
        8695
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "811": {
      "op": "POP"
    },
    "812": {
      "fn": "Wizards.getIsDeserted",
      "offset": [
        8623,
        8695
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x23F"
    },
    "815": {
      "fn": "Wizards.getIsDeserted",
      "offset": [
        8623,
        8695
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x339"
    },
    "818": {
      "fn": "Wizards.getIsDeserted",
      "offset": [
        8623,
        8695
      ],
      "op": "CALLDATASIZE",
      "path": "22"
    },
    "819": {
      "fn": "Wizards.getIsDeserted",
      "offset": [
        8623,
        8695
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "821": {
      "fn": "Wizards.getIsDeserted",
      "offset": [
        8623,
        8695
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2A7D"
    },
    "824": {
      "fn": "Wizards.getIsDeserted",
      "jump": "i",
      "offset": [
        8623,
        8695
      ],
      "op": "JUMP",
      "path": "22"
    },
    "825": {
      "fn": "Wizards.getIsDeserted",
      "offset": [
        8623,
        8695
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "826": {
      "op": "POP"
    },
    "827": {
      "fn": "Wizards.getIsDeserted",
      "offset": [
        8679,
        8683
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "829": {
      "fn": "Wizards.getIsDeserted",
      "offset": [
        8679,
        8683
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "830": {
      "fn": "Wizards.getIsDeserted",
      "offset": [
        8623,
        8695
      ],
      "op": "JUMP",
      "path": "22"
    },
    "831": {
      "fn": "Wizards.mint",
      "offset": [
        4293,
        5279
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "832": {
      "fn": "Wizards.mint",
      "offset": [
        4293,
        5279
      ],
      "op": "CALLVALUE",
      "path": "22"
    },
    "833": {
      "fn": "Wizards.mint",
      "offset": [
        4293,
        5279
      ],
      "op": "DUP1",
      "path": "22"
    },
    "834": {
      "fn": "Wizards.mint",
      "offset": [
        4293,
        5279
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "835": {
      "fn": "Wizards.mint",
      "offset": [
        4293,
        5279
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x34B"
    },
    "838": {
      "fn": "Wizards.mint",
      "offset": [
        4293,
        5279
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "839": {
      "fn": "Wizards.mint",
      "offset": [
        4293,
        5279
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "841": {
      "fn": "Wizards.mint",
      "offset": [
        4293,
        5279
      ],
      "op": "DUP1",
      "path": "22"
    },
    "842": {
      "fn": "Wizards.mint",
      "offset": [
        4293,
        5279
      ],
      "op": "REVERT",
      "path": "22"
    },
    "843": {
      "fn": "Wizards.mint",
      "offset": [
        4293,
        5279
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "844": {
      "fn": "Wizards.mint",
      "offset": [
        4293,
        5279
      ],
      "op": "POP",
      "path": "22"
    },
    "845": {
      "fn": "Wizards.mint",
      "offset": [
        4293,
        5279
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x31C"
    },
    "848": {
      "fn": "Wizards.mint",
      "offset": [
        4293,
        5279
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xC8A"
    },
    "851": {
      "fn": "Wizards.mint",
      "jump": "i",
      "offset": [
        4293,
        5279
      ],
      "op": "JUMP",
      "path": "22"
    },
    "852": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1628,
        1741
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "853": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1628,
        1741
      ],
      "op": "CALLVALUE",
      "path": "7"
    },
    "854": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1628,
        1741
      ],
      "op": "DUP1",
      "path": "7"
    },
    "855": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1628,
        1741
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "856": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1628,
        1741
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x360"
    },
    "859": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1628,
        1741
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "860": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1628,
        1741
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "862": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1628,
        1741
      ],
      "op": "DUP1",
      "path": "7"
    },
    "863": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1628,
        1741
      ],
      "op": "REVERT",
      "path": "7"
    },
    "864": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1628,
        1741
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "865": {
      "op": "POP"
    },
    "866": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1716,
        1726
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 0,
      "value": "0x8"
    },
    "868": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1716,
        1733
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "869": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1628,
        1741
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2A1"
    },
    "872": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1628,
        1741
      ],
      "op": "JUMP",
      "path": "7"
    },
    "873": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4974,
        5313
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "874": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4974,
        5313
      ],
      "op": "CALLVALUE",
      "path": "6"
    },
    "875": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4974,
        5313
      ],
      "op": "DUP1",
      "path": "6"
    },
    "876": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4974,
        5313
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "877": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4974,
        5313
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x375"
    },
    "880": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4974,
        5313
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "881": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4974,
        5313
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "883": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4974,
        5313
      ],
      "op": "DUP1",
      "path": "6"
    },
    "884": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4974,
        5313
      ],
      "op": "REVERT",
      "path": "6"
    },
    "885": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4974,
        5313
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "886": {
      "op": "POP"
    },
    "887": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4974,
        5313
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x31C"
    },
    "890": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4974,
        5313
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x384"
    },
    "893": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4974,
        5313
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "894": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4974,
        5313
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "896": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4974,
        5313
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2ADC"
    },
    "899": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        4974,
        5313
      ],
      "op": "JUMP",
      "path": "6"
    },
    "900": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4974,
        5313
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "901": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4974,
        5313
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xF78"
    },
    "904": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        4974,
        5313
      ],
      "op": "JUMP",
      "path": "6"
    },
    "905": {
      "offset": [
        614,
        637
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "906": {
      "fn": "ERC721.transferFrom",
      "offset": [
        614,
        637
      ],
      "op": "CALLVALUE",
      "path": "22"
    },
    "907": {
      "fn": "ERC721.transferFrom",
      "offset": [
        614,
        637
      ],
      "op": "DUP1",
      "path": "22"
    },
    "908": {
      "fn": "ERC721.transferFrom",
      "offset": [
        614,
        637
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "909": {
      "fn": "ERC721.transferFrom",
      "offset": [
        614,
        637
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x395"
    },
    "912": {
      "fn": "ERC721.transferFrom",
      "offset": [
        614,
        637
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "913": {
      "fn": "ERC721.transferFrom",
      "offset": [
        614,
        637
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "915": {
      "fn": "ERC721.transferFrom",
      "offset": [
        614,
        637
      ],
      "op": "DUP1",
      "path": "22"
    },
    "916": {
      "fn": "ERC721.transferFrom",
      "offset": [
        614,
        637
      ],
      "op": "REVERT",
      "path": "22"
    },
    "917": {
      "fn": "ERC721.transferFrom",
      "offset": [
        614,
        637
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "918": {
      "op": "POP"
    },
    "919": {
      "offset": [
        614,
        637
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xD"
    },
    "921": {
      "fn": "ERC721.transferFrom",
      "offset": [
        614,
        637
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "922": {
      "fn": "ERC721.transferFrom",
      "offset": [
        614,
        637
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2E4"
    },
    "925": {
      "fn": "ERC721.transferFrom",
      "offset": [
        614,
        637
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "926": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "928": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "930": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "932": {
      "op": "SHL"
    },
    "933": {
      "op": "SUB"
    },
    "934": {
      "offset": [
        614,
        637
      ],
      "op": "AND",
      "path": "22"
    },
    "935": {
      "fn": "ERC721.transferFrom",
      "offset": [
        614,
        637
      ],
      "op": "DUP2",
      "path": "22"
    },
    "936": {
      "fn": "ERC721.transferFrom",
      "offset": [
        614,
        637
      ],
      "op": "JUMP",
      "path": "22"
    },
    "937": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1296,
        1552
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "938": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1296,
        1552
      ],
      "op": "CALLVALUE",
      "path": "7"
    },
    "939": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1296,
        1552
      ],
      "op": "DUP1",
      "path": "7"
    },
    "940": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1296,
        1552
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "941": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1296,
        1552
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3B5"
    },
    "944": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1296,
        1552
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "945": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1296,
        1552
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "947": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1296,
        1552
      ],
      "op": "DUP1",
      "path": "7"
    },
    "948": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1296,
        1552
      ],
      "op": "REVERT",
      "path": "7"
    },
    "949": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1296,
        1552
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "950": {
      "op": "POP"
    },
    "951": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1296,
        1552
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2A1"
    },
    "954": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1296,
        1552
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3C4"
    },
    "957": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1296,
        1552
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "958": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1296,
        1552
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "960": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1296,
        1552
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2AB2"
    },
    "963": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "jump": "i",
      "offset": [
        1296,
        1552
      ],
      "op": "JUMP",
      "path": "7"
    },
    "964": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1296,
        1552
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "965": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1296,
        1552
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xFA9"
    },
    "968": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "jump": "i",
      "offset": [
        1296,
        1552
      ],
      "op": "JUMP",
      "path": "7"
    },
    "969": {
      "fn": "Wizards.modifyContractSettings",
      "offset": [
        14300,
        14825
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "970": {
      "fn": "Wizards.modifyContractSettings",
      "offset": [
        14300,
        14825
      ],
      "op": "CALLVALUE",
      "path": "22"
    },
    "971": {
      "fn": "Wizards.modifyContractSettings",
      "offset": [
        14300,
        14825
      ],
      "op": "DUP1",
      "path": "22"
    },
    "972": {
      "fn": "Wizards.modifyContractSettings",
      "offset": [
        14300,
        14825
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "973": {
      "fn": "Wizards.modifyContractSettings",
      "offset": [
        14300,
        14825
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x3D5"
    },
    "976": {
      "fn": "Wizards.modifyContractSettings",
      "offset": [
        14300,
        14825
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "977": {
      "fn": "Wizards.modifyContractSettings",
      "offset": [
        14300,
        14825
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "979": {
      "fn": "Wizards.modifyContractSettings",
      "offset": [
        14300,
        14825
      ],
      "op": "DUP1",
      "path": "22"
    },
    "980": {
      "fn": "Wizards.modifyContractSettings",
      "offset": [
        14300,
        14825
      ],
      "op": "REVERT",
      "path": "22"
    },
    "981": {
      "fn": "Wizards.modifyContractSettings",
      "offset": [
        14300,
        14825
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "982": {
      "op": "POP"
    },
    "983": {
      "fn": "Wizards.modifyContractSettings",
      "offset": [
        14300,
        14825
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x31C"
    },
    "986": {
      "fn": "Wizards.modifyContractSettings",
      "offset": [
        14300,
        14825
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x3E4"
    },
    "989": {
      "fn": "Wizards.modifyContractSettings",
      "offset": [
        14300,
        14825
      ],
      "op": "CALLDATASIZE",
      "path": "22"
    },
    "990": {
      "fn": "Wizards.modifyContractSettings",
      "offset": [
        14300,
        14825
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "992": {
      "fn": "Wizards.modifyContractSettings",
      "offset": [
        14300,
        14825
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2B18"
    },
    "995": {
      "fn": "Wizards.modifyContractSettings",
      "jump": "i",
      "offset": [
        14300,
        14825
      ],
      "op": "JUMP",
      "path": "22"
    },
    "996": {
      "fn": "Wizards.modifyContractSettings",
      "offset": [
        14300,
        14825
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "997": {
      "fn": "Wizards.modifyContractSettings",
      "offset": [
        14300,
        14825
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x103F"
    },
    "1000": {
      "fn": "Wizards.modifyContractSettings",
      "jump": "i",
      "offset": [
        14300,
        14825
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1001": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5384,
        5569
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1002": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5384,
        5569
      ],
      "op": "CALLVALUE",
      "path": "6"
    },
    "1003": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5384,
        5569
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1004": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5384,
        5569
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1005": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5384,
        5569
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3F5"
    },
    "1008": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5384,
        5569
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1009": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5384,
        5569
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1011": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5384,
        5569
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1012": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5384,
        5569
      ],
      "op": "REVERT",
      "path": "6"
    },
    "1013": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5384,
        5569
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1014": {
      "op": "POP"
    },
    "1015": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5384,
        5569
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x31C"
    },
    "1018": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5384,
        5569
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x404"
    },
    "1021": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5384,
        5569
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "1022": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5384,
        5569
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1024": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5384,
        5569
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2ADC"
    },
    "1027": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5384,
        5569
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1028": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5384,
        5569
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1029": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5384,
        5569
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x108B"
    },
    "1032": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5384,
        5569
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1033": {
      "fn": "Wizards.crush",
      "offset": [
        9329,
        9390
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1034": {
      "fn": "Wizards.crush",
      "offset": [
        9329,
        9390
      ],
      "op": "CALLVALUE",
      "path": "22"
    },
    "1035": {
      "fn": "Wizards.crush",
      "offset": [
        9329,
        9390
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1036": {
      "fn": "Wizards.crush",
      "offset": [
        9329,
        9390
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "1037": {
      "fn": "Wizards.crush",
      "offset": [
        9329,
        9390
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x415"
    },
    "1040": {
      "fn": "Wizards.crush",
      "offset": [
        9329,
        9390
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "1041": {
      "fn": "Wizards.crush",
      "offset": [
        9329,
        9390
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "1043": {
      "fn": "Wizards.crush",
      "offset": [
        9329,
        9390
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1044": {
      "fn": "Wizards.crush",
      "offset": [
        9329,
        9390
      ],
      "op": "REVERT",
      "path": "22"
    },
    "1045": {
      "fn": "Wizards.crush",
      "offset": [
        9329,
        9390
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1046": {
      "op": "POP"
    },
    "1047": {
      "fn": "Wizards.crush",
      "offset": [
        9329,
        9390
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x31C"
    },
    "1050": {
      "fn": "Wizards.crush",
      "offset": [
        9329,
        9390
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x424"
    },
    "1053": {
      "fn": "Wizards.crush",
      "offset": [
        9329,
        9390
      ],
      "op": "CALLDATASIZE",
      "path": "22"
    },
    "1054": {
      "fn": "Wizards.crush",
      "offset": [
        9329,
        9390
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "1056": {
      "fn": "Wizards.crush",
      "offset": [
        9329,
        9390
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2A7D"
    },
    "1059": {
      "fn": "Wizards.crush",
      "jump": "i",
      "offset": [
        9329,
        9390
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1060": {
      "fn": "Wizards.crush",
      "offset": [
        9329,
        9390
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1061": {
      "fn": "Wizards.crush",
      "offset": [
        9329,
        9390
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x10A6"
    },
    "1064": {
      "fn": "Wizards.crush",
      "jump": "i",
      "offset": [
        9329,
        9390
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1065": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1818,
        2051
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1066": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1818,
        2051
      ],
      "op": "CALLVALUE",
      "path": "7"
    },
    "1067": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1818,
        2051
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1068": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1818,
        2051
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "1069": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1818,
        2051
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x435"
    },
    "1072": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1818,
        2051
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1073": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1818,
        2051
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1075": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1818,
        2051
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1076": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1818,
        2051
      ],
      "op": "REVERT",
      "path": "7"
    },
    "1077": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1818,
        2051
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1078": {
      "op": "POP"
    },
    "1079": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1818,
        2051
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2A1"
    },
    "1082": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1818,
        2051
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x444"
    },
    "1085": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1818,
        2051
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "1086": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1818,
        2051
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "1088": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1818,
        2051
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2A7D"
    },
    "1091": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "jump": "i",
      "offset": [
        1818,
        2051
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1092": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1818,
        2051
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1093": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1818,
        2051
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x10E8"
    },
    "1096": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "jump": "i",
      "offset": [
        1818,
        2051
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1097": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2219,
        2458
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1098": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2219,
        2458
      ],
      "op": "CALLVALUE",
      "path": "6"
    },
    "1099": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2219,
        2458
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1100": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2219,
        2458
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1101": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2219,
        2458
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x455"
    },
    "1104": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2219,
        2458
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1105": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2219,
        2458
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1107": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2219,
        2458
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1108": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2219,
        2458
      ],
      "op": "REVERT",
      "path": "6"
    },
    "1109": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2219,
        2458
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1110": {
      "op": "POP"
    },
    "1111": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2219,
        2458
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2E4"
    },
    "1114": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2219,
        2458
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x464"
    },
    "1117": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2219,
        2458
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "1118": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2219,
        2458
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1120": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2219,
        2458
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2A7D"
    },
    "1123": {
      "fn": "ERC721.ownerOf",
      "jump": "i",
      "offset": [
        2219,
        2458
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1124": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2219,
        2458
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1125": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2219,
        2458
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x117B"
    },
    "1128": {
      "fn": "ERC721.ownerOf",
      "jump": "i",
      "offset": [
        2219,
        2458
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1129": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1949,
        2157
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1130": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1949,
        2157
      ],
      "op": "CALLVALUE",
      "path": "6"
    },
    "1131": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1949,
        2157
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1132": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1949,
        2157
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1133": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1949,
        2157
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x475"
    },
    "1136": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1949,
        2157
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1137": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1949,
        2157
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1139": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1949,
        2157
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1140": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1949,
        2157
      ],
      "op": "REVERT",
      "path": "6"
    },
    "1141": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1949,
        2157
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1142": {
      "op": "POP"
    },
    "1143": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1949,
        2157
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2A1"
    },
    "1146": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1949,
        2157
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x484"
    },
    "1149": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1949,
        2157
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "1150": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1949,
        2157
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1152": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1949,
        2157
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2B75"
    },
    "1155": {
      "fn": "ERC721.balanceOf",
      "jump": "i",
      "offset": [
        1949,
        2157
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1156": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1949,
        2157
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1157": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1949,
        2157
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x11F2"
    },
    "1160": {
      "fn": "ERC721.balanceOf",
      "jump": "i",
      "offset": [
        1949,
        2157
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1161": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1162": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "CALLVALUE",
      "path": "8"
    },
    "1163": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1164": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "1165": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x495"
    },
    "1168": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "1169": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "1171": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1172": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "REVERT",
      "path": "8"
    },
    "1173": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1174": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "POP",
      "path": "8"
    },
    "1175": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x31C"
    },
    "1178": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1279"
    },
    "1181": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1652,
        1746
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1182": {
      "fn": "Wizards.initiate",
      "offset": [
        5354,
        5934
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1183": {
      "fn": "Wizards.initiate",
      "offset": [
        5354,
        5934
      ],
      "op": "CALLVALUE",
      "path": "22"
    },
    "1184": {
      "fn": "Wizards.initiate",
      "offset": [
        5354,
        5934
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1185": {
      "fn": "Wizards.initiate",
      "offset": [
        5354,
        5934
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "1186": {
      "fn": "Wizards.initiate",
      "offset": [
        5354,
        5934
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x4AA"
    },
    "1189": {
      "fn": "Wizards.initiate",
      "offset": [
        5354,
        5934
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "1190": {
      "fn": "Wizards.initiate",
      "offset": [
        5354,
        5934
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "1192": {
      "fn": "Wizards.initiate",
      "offset": [
        5354,
        5934
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1193": {
      "fn": "Wizards.initiate",
      "offset": [
        5354,
        5934
      ],
      "op": "REVERT",
      "path": "22"
    },
    "1194": {
      "fn": "Wizards.initiate",
      "offset": [
        5354,
        5934
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1195": {
      "op": "POP"
    },
    "1196": {
      "fn": "Wizards.initiate",
      "offset": [
        5354,
        5934
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x31C"
    },
    "1199": {
      "fn": "Wizards.initiate",
      "offset": [
        5354,
        5934
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x4B9"
    },
    "1202": {
      "fn": "Wizards.initiate",
      "offset": [
        5354,
        5934
      ],
      "op": "CALLDATASIZE",
      "path": "22"
    },
    "1203": {
      "fn": "Wizards.initiate",
      "offset": [
        5354,
        5934
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "1205": {
      "fn": "Wizards.initiate",
      "offset": [
        5354,
        5934
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2A7D"
    },
    "1208": {
      "fn": "Wizards.initiate",
      "jump": "i",
      "offset": [
        5354,
        5934
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1209": {
      "fn": "Wizards.initiate",
      "offset": [
        5354,
        5934
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1210": {
      "fn": "Wizards.initiate",
      "offset": [
        5354,
        5934
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x12AF"
    },
    "1213": {
      "fn": "Wizards.initiate",
      "jump": "i",
      "offset": [
        5354,
        5934
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1214": {
      "fn": "Wizards.reportBattle",
      "offset": [
        7195,
        8114
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1215": {
      "fn": "Wizards.reportBattle",
      "offset": [
        7195,
        8114
      ],
      "op": "CALLVALUE",
      "path": "22"
    },
    "1216": {
      "fn": "Wizards.reportBattle",
      "offset": [
        7195,
        8114
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1217": {
      "fn": "Wizards.reportBattle",
      "offset": [
        7195,
        8114
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "1218": {
      "fn": "Wizards.reportBattle",
      "offset": [
        7195,
        8114
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x4CA"
    },
    "1221": {
      "fn": "Wizards.reportBattle",
      "offset": [
        7195,
        8114
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "1222": {
      "fn": "Wizards.reportBattle",
      "offset": [
        7195,
        8114
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "1224": {
      "fn": "Wizards.reportBattle",
      "offset": [
        7195,
        8114
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1225": {
      "fn": "Wizards.reportBattle",
      "offset": [
        7195,
        8114
      ],
      "op": "REVERT",
      "path": "22"
    },
    "1226": {
      "fn": "Wizards.reportBattle",
      "offset": [
        7195,
        8114
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1227": {
      "op": "POP"
    },
    "1228": {
      "fn": "Wizards.reportBattle",
      "offset": [
        7195,
        8114
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x31C"
    },
    "1231": {
      "fn": "Wizards.reportBattle",
      "offset": [
        7195,
        8114
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x4D9"
    },
    "1234": {
      "fn": "Wizards.reportBattle",
      "offset": [
        7195,
        8114
      ],
      "op": "CALLDATASIZE",
      "path": "22"
    },
    "1235": {
      "fn": "Wizards.reportBattle",
      "offset": [
        7195,
        8114
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "1237": {
      "fn": "Wizards.reportBattle",
      "offset": [
        7195,
        8114
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2B90"
    },
    "1240": {
      "fn": "Wizards.reportBattle",
      "jump": "i",
      "offset": [
        7195,
        8114
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1241": {
      "fn": "Wizards.reportBattle",
      "offset": [
        7195,
        8114
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1242": {
      "fn": "Wizards.reportBattle",
      "offset": [
        7195,
        8114
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x13BD"
    },
    "1245": {
      "fn": "Wizards.reportBattle",
      "jump": "i",
      "offset": [
        7195,
        8114
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1246": {
      "fn": "Wizards.isActive",
      "offset": [
        2147,
        2303
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1247": {
      "fn": "Wizards.isActive",
      "offset": [
        2147,
        2303
      ],
      "op": "CALLVALUE",
      "path": "22"
    },
    "1248": {
      "fn": "Wizards.isActive",
      "offset": [
        2147,
        2303
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1249": {
      "fn": "Wizards.isActive",
      "offset": [
        2147,
        2303
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "1250": {
      "fn": "Wizards.isActive",
      "offset": [
        2147,
        2303
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x4EA"
    },
    "1253": {
      "fn": "Wizards.isActive",
      "offset": [
        2147,
        2303
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "1254": {
      "fn": "Wizards.isActive",
      "offset": [
        2147,
        2303
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "1256": {
      "fn": "Wizards.isActive",
      "offset": [
        2147,
        2303
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1257": {
      "fn": "Wizards.isActive",
      "offset": [
        2147,
        2303
      ],
      "op": "REVERT",
      "path": "22"
    },
    "1258": {
      "fn": "Wizards.isActive",
      "offset": [
        2147,
        2303
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1259": {
      "op": "POP"
    },
    "1260": {
      "fn": "Wizards.isActive",
      "offset": [
        2147,
        2303
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x23F"
    },
    "1263": {
      "fn": "Wizards.isActive",
      "offset": [
        2147,
        2303
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x4F9"
    },
    "1266": {
      "fn": "Wizards.isActive",
      "offset": [
        2147,
        2303
      ],
      "op": "CALLDATASIZE",
      "path": "22"
    },
    "1267": {
      "fn": "Wizards.isActive",
      "offset": [
        2147,
        2303
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "1269": {
      "fn": "Wizards.isActive",
      "offset": [
        2147,
        2303
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2A7D"
    },
    "1272": {
      "fn": "Wizards.isActive",
      "jump": "i",
      "offset": [
        2147,
        2303
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1273": {
      "fn": "Wizards.isActive",
      "offset": [
        2147,
        2303
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1274": {
      "fn": "Wizards.isActive",
      "offset": [
        2204,
        2208
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "1276": {
      "fn": "Wizards.isActive",
      "offset": [
        2228,
        2253
      ],
      "op": "SWAP1",
      "path": "22",
      "statement": 1
    },
    "1277": {
      "fn": "Wizards.isActive",
      "offset": [
        2228,
        2253
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1278": {
      "fn": "Wizards.isActive",
      "offset": [
        2228,
        2253
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1279": {
      "fn": "Wizards.isActive",
      "offset": [
        2228,
        2242
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xB"
    },
    "1281": {
      "fn": "Wizards.isActive",
      "offset": [
        2228,
        2253
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "1283": {
      "fn": "Wizards.isActive",
      "offset": [
        2228,
        2253
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1284": {
      "fn": "Wizards.isActive",
      "offset": [
        2228,
        2253
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "1286": {
      "fn": "Wizards.isActive",
      "offset": [
        2228,
        2253
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1287": {
      "fn": "Wizards.isActive",
      "offset": [
        2228,
        2253
      ],
      "op": "KECCAK256",
      "path": "22"
    },
    "1288": {
      "fn": "Wizards.isActive",
      "offset": [
        2228,
        2277
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xC"
    },
    "1290": {
      "fn": "Wizards.isActive",
      "offset": [
        2228,
        2277
      ],
      "op": "ADD",
      "path": "22"
    },
    "1291": {
      "fn": "Wizards.isActive",
      "offset": [
        2228,
        2277
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "1292": {
      "fn": "Wizards.isActive",
      "offset": [
        2280,
        2295
      ],
      "op": "TIMESTAMP",
      "path": "22"
    },
    "1293": {
      "op": "LT"
    },
    "1294": {
      "fn": "Wizards.isActive",
      "offset": [
        2228,
        2295
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1295": {
      "fn": "Wizards.isActive",
      "offset": [
        2147,
        2303
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1296": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        8774,
        9224
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1297": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        8774,
        9224
      ],
      "op": "CALLVALUE",
      "path": "22"
    },
    "1298": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        8774,
        9224
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1299": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        8774,
        9224
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "1300": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        8774,
        9224
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x51C"
    },
    "1303": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        8774,
        9224
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "1304": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        8774,
        9224
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "1306": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        8774,
        9224
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1307": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        8774,
        9224
      ],
      "op": "REVERT",
      "path": "22"
    },
    "1308": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        8774,
        9224
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1309": {
      "op": "POP"
    },
    "1310": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        8774,
        9224
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x31C"
    },
    "1313": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        8774,
        9224
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x52B"
    },
    "1316": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        8774,
        9224
      ],
      "op": "CALLDATASIZE",
      "path": "22"
    },
    "1317": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        8774,
        9224
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "1319": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        8774,
        9224
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2BDD"
    },
    "1322": {
      "fn": "Wizards.verifyDuty",
      "jump": "i",
      "offset": [
        8774,
        9224
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1323": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        8774,
        9224
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1324": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        8774,
        9224
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1525"
    },
    "1327": {
      "fn": "Wizards.verifyDuty",
      "jump": "i",
      "offset": [
        8774,
        9224
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1328": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2840,
        3497
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1329": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2840,
        3497
      ],
      "op": "CALLVALUE",
      "path": "22"
    },
    "1330": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2840,
        3497
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1331": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2840,
        3497
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "1332": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2840,
        3497
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x53C"
    },
    "1335": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2840,
        3497
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "1336": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2840,
        3497
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "1338": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2840,
        3497
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1339": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2840,
        3497
      ],
      "op": "REVERT",
      "path": "22"
    },
    "1340": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2840,
        3497
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1341": {
      "op": "POP"
    },
    "1342": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2840,
        3497
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x550"
    },
    "1345": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2840,
        3497
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x54B"
    },
    "1348": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2840,
        3497
      ],
      "op": "CALLDATASIZE",
      "path": "22"
    },
    "1349": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2840,
        3497
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "1351": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2840,
        3497
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2A7D"
    },
    "1354": {
      "fn": "Wizards.getStatsGivenId",
      "jump": "i",
      "offset": [
        2840,
        3497
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1355": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2840,
        3497
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1356": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2840,
        3497
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x15B8"
    },
    "1359": {
      "fn": "Wizards.getStatsGivenId",
      "jump": "i",
      "offset": [
        2840,
        3497
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1360": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2840,
        3497
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1361": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2840,
        3497
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "1363": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2840,
        3497
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "1364": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2840,
        3497
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x24B"
    },
    "1367": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2840,
        3497
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "1368": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2840,
        3497
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1369": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2840,
        3497
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2C37"
    },
    "1372": {
      "fn": "Wizards.getStatsGivenId",
      "jump": "i",
      "offset": [
        2840,
        3497
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1373": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1374": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "CALLVALUE",
      "path": "8"
    },
    "1375": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1376": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "1377": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x569"
    },
    "1380": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "1381": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "1383": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1384": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "REVERT",
      "path": "8"
    },
    "1385": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1386": {
      "op": "POP"
    },
    "1387": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 2,
      "value": "0xA"
    },
    "1389": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "1390": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1392": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1394": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1396": {
      "op": "SHL"
    },
    "1397": {
      "op": "SUB"
    },
    "1398": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "AND",
      "path": "8"
    },
    "1399": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2E4"
    },
    "1402": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1403": {
      "fn": "ERC721.symbol",
      "offset": [
        2694,
        2798
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1404": {
      "fn": "ERC721.symbol",
      "offset": [
        2694,
        2798
      ],
      "op": "CALLVALUE",
      "path": "6"
    },
    "1405": {
      "fn": "ERC721.symbol",
      "offset": [
        2694,
        2798
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1406": {
      "fn": "ERC721.symbol",
      "offset": [
        2694,
        2798
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1407": {
      "fn": "ERC721.symbol",
      "offset": [
        2694,
        2798
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x587"
    },
    "1410": {
      "fn": "ERC721.symbol",
      "offset": [
        2694,
        2798
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1411": {
      "fn": "ERC721.symbol",
      "offset": [
        2694,
        2798
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1413": {
      "fn": "ERC721.symbol",
      "offset": [
        2694,
        2798
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1414": {
      "fn": "ERC721.symbol",
      "offset": [
        2694,
        2798
      ],
      "op": "REVERT",
      "path": "6"
    },
    "1415": {
      "fn": "ERC721.symbol",
      "offset": [
        2694,
        2798
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1416": {
      "fn": "ERC721.symbol",
      "offset": [
        2694,
        2798
      ],
      "op": "POP",
      "path": "6"
    },
    "1417": {
      "fn": "ERC721.symbol",
      "offset": [
        2694,
        2798
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x274"
    },
    "1420": {
      "fn": "ERC721.symbol",
      "offset": [
        2694,
        2798
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1746"
    },
    "1423": {
      "fn": "ERC721.symbol",
      "jump": "i",
      "offset": [
        2694,
        2798
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1424": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        15778,
        16013
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1425": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        15778,
        16013
      ],
      "op": "CALLVALUE",
      "path": "22"
    },
    "1426": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        15778,
        16013
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1427": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        15778,
        16013
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "1428": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        15778,
        16013
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x59C"
    },
    "1431": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        15778,
        16013
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "1432": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        15778,
        16013
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "1434": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        15778,
        16013
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1435": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        15778,
        16013
      ],
      "op": "REVERT",
      "path": "22"
    },
    "1436": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        15778,
        16013
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1437": {
      "op": "POP"
    },
    "1438": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        15778,
        16013
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x31C"
    },
    "1441": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        15778,
        16013
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x5AB"
    },
    "1444": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        15778,
        16013
      ],
      "op": "CALLDATASIZE",
      "path": "22"
    },
    "1445": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        15778,
        16013
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "1447": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        15778,
        16013
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2B75"
    },
    "1450": {
      "fn": "Wizards.updateVerifier",
      "jump": "i",
      "offset": [
        15778,
        16013
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1451": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        15778,
        16013
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1452": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        15778,
        16013
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1755"
    },
    "1455": {
      "fn": "Wizards.updateVerifier",
      "jump": "i",
      "offset": [
        15778,
        16013
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1456": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4377,
        4672
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1457": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4377,
        4672
      ],
      "op": "CALLVALUE",
      "path": "6"
    },
    "1458": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4377,
        4672
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1459": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4377,
        4672
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1460": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4377,
        4672
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x5BC"
    },
    "1463": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4377,
        4672
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1464": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4377,
        4672
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1466": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4377,
        4672
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1467": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4377,
        4672
      ],
      "op": "REVERT",
      "path": "6"
    },
    "1468": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4377,
        4672
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1469": {
      "op": "POP"
    },
    "1470": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4377,
        4672
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x31C"
    },
    "1473": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4377,
        4672
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x5CB"
    },
    "1476": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4377,
        4672
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "1477": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4377,
        4672
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1479": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4377,
        4672
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2CE1"
    },
    "1482": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "i",
      "offset": [
        4377,
        4672
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1483": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4377,
        4672
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1484": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4377,
        4672
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1841"
    },
    "1487": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "i",
      "offset": [
        4377,
        4672
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1488": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5640,
        5968
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1489": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5640,
        5968
      ],
      "op": "CALLVALUE",
      "path": "6"
    },
    "1490": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5640,
        5968
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1491": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5640,
        5968
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1492": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5640,
        5968
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x5DC"
    },
    "1495": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5640,
        5968
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1496": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5640,
        5968
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1498": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5640,
        5968
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1499": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5640,
        5968
      ],
      "op": "REVERT",
      "path": "6"
    },
    "1500": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5640,
        5968
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1501": {
      "op": "POP"
    },
    "1502": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5640,
        5968
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x31C"
    },
    "1505": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5640,
        5968
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x5EB"
    },
    "1508": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5640,
        5968
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "1509": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5640,
        5968
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1511": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5640,
        5968
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2D1D"
    },
    "1514": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5640,
        5968
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1515": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5640,
        5968
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1516": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5640,
        5968
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1905"
    },
    "1519": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5640,
        5968
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1520": {
      "offset": [
        548,
        570
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1521": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        548,
        570
      ],
      "op": "CALLVALUE",
      "path": "22"
    },
    "1522": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        548,
        570
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1523": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        548,
        570
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "1524": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        548,
        570
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x5FC"
    },
    "1527": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        548,
        570
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "1528": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        548,
        570
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "1530": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        548,
        570
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1531": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        548,
        570
      ],
      "op": "REVERT",
      "path": "22"
    },
    "1532": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        548,
        570
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1533": {
      "op": "POP"
    },
    "1534": {
      "offset": [
        548,
        570
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xC"
    },
    "1536": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        548,
        570
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "1537": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        548,
        570
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2E4"
    },
    "1540": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        548,
        570
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1541": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1543": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1545": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1547": {
      "op": "SHL"
    },
    "1548": {
      "op": "SUB"
    },
    "1549": {
      "offset": [
        548,
        570
      ],
      "op": "AND",
      "path": "22"
    },
    "1550": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        548,
        570
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1551": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        548,
        570
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1552": {
      "fn": "Wizards.tokenURI",
      "offset": [
        9400,
        10396
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1553": {
      "fn": "Wizards.tokenURI",
      "offset": [
        9400,
        10396
      ],
      "op": "CALLVALUE",
      "path": "22"
    },
    "1554": {
      "fn": "Wizards.tokenURI",
      "offset": [
        9400,
        10396
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1555": {
      "fn": "Wizards.tokenURI",
      "offset": [
        9400,
        10396
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "1556": {
      "fn": "Wizards.tokenURI",
      "offset": [
        9400,
        10396
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x61C"
    },
    "1559": {
      "fn": "Wizards.tokenURI",
      "offset": [
        9400,
        10396
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "1560": {
      "fn": "Wizards.tokenURI",
      "offset": [
        9400,
        10396
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "1562": {
      "fn": "Wizards.tokenURI",
      "offset": [
        9400,
        10396
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1563": {
      "fn": "Wizards.tokenURI",
      "offset": [
        9400,
        10396
      ],
      "op": "REVERT",
      "path": "22"
    },
    "1564": {
      "fn": "Wizards.tokenURI",
      "offset": [
        9400,
        10396
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1565": {
      "op": "POP"
    },
    "1566": {
      "fn": "Wizards.tokenURI",
      "offset": [
        9400,
        10396
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x274"
    },
    "1569": {
      "fn": "Wizards.tokenURI",
      "offset": [
        9400,
        10396
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x62B"
    },
    "1572": {
      "fn": "Wizards.tokenURI",
      "offset": [
        9400,
        10396
      ],
      "op": "CALLDATASIZE",
      "path": "22"
    },
    "1573": {
      "fn": "Wizards.tokenURI",
      "offset": [
        9400,
        10396
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "1575": {
      "fn": "Wizards.tokenURI",
      "offset": [
        9400,
        10396
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2A7D"
    },
    "1578": {
      "fn": "Wizards.tokenURI",
      "jump": "i",
      "offset": [
        9400,
        10396
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1579": {
      "fn": "Wizards.tokenURI",
      "offset": [
        9400,
        10396
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1580": {
      "fn": "Wizards.tokenURI",
      "offset": [
        9400,
        10396
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x193D"
    },
    "1583": {
      "fn": "Wizards.tokenURI",
      "jump": "i",
      "offset": [
        9400,
        10396
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1584": {
      "offset": [
        493,
        541
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1585": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "CALLVALUE",
      "path": "22"
    },
    "1586": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1587": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "1588": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x63C"
    },
    "1591": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "1592": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "1594": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1595": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "REVERT",
      "path": "22"
    },
    "1596": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1597": {
      "op": "POP"
    },
    "1598": {
      "offset": [
        493,
        541
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x6BC"
    },
    "1601": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x64B"
    },
    "1604": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "CALLDATASIZE",
      "path": "22"
    },
    "1605": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "1607": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2A7D"
    },
    "1610": {
      "fn": "Wizards.tokenURI",
      "jump": "i",
      "offset": [
        493,
        541
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1611": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1612": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xB"
    },
    "1614": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "1616": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1617": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1618": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1619": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "1621": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "1622": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "DUP3",
      "path": "22"
    },
    "1623": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1624": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "1626": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1627": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "1628": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "KECCAK256",
      "path": "22"
    },
    "1629": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1630": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "1631": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x1"
    },
    "1633": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "DUP3",
      "path": "22"
    },
    "1634": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "ADD",
      "path": "22"
    },
    "1635": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "1636": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x2"
    },
    "1638": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "DUP4",
      "path": "22"
    },
    "1639": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "ADD",
      "path": "22"
    },
    "1640": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "1641": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x3"
    },
    "1643": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "DUP5",
      "path": "22"
    },
    "1644": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "ADD",
      "path": "22"
    },
    "1645": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "1646": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "1648": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "DUP6",
      "path": "22"
    },
    "1649": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "ADD",
      "path": "22"
    },
    "1650": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "1651": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x5"
    },
    "1653": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "DUP7",
      "path": "22"
    },
    "1654": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "ADD",
      "path": "22"
    },
    "1655": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "1656": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x6"
    },
    "1658": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "DUP8",
      "path": "22"
    },
    "1659": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "ADD",
      "path": "22"
    },
    "1660": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "1661": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x7"
    },
    "1663": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "DUP9",
      "path": "22"
    },
    "1664": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "ADD",
      "path": "22"
    },
    "1665": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "1666": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x8"
    },
    "1668": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "DUP10",
      "path": "22"
    },
    "1669": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "ADD",
      "path": "22"
    },
    "1670": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "1671": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x9"
    },
    "1673": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "DUP11",
      "path": "22"
    },
    "1674": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "ADD",
      "path": "22"
    },
    "1675": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "1676": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xA"
    },
    "1678": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "DUP12",
      "path": "22"
    },
    "1679": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "ADD",
      "path": "22"
    },
    "1680": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "1681": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP12",
      "path": "22"
    },
    "1682": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "DUP12",
      "path": "22"
    },
    "1683": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "ADD",
      "path": "22"
    },
    "1684": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "1685": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xC"
    },
    "1687": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "DUP13",
      "path": "22"
    },
    "1688": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "ADD",
      "path": "22"
    },
    "1689": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "1690": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xD"
    },
    "1692": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1693": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP13",
      "path": "22"
    },
    "1694": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "ADD",
      "path": "22"
    },
    "1695": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "1696": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP11",
      "path": "22"
    },
    "1697": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP13",
      "path": "22"
    },
    "1698": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP10",
      "path": "22"
    },
    "1699": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP12",
      "path": "22"
    },
    "1700": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP9",
      "path": "22"
    },
    "1701": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP11",
      "path": "22"
    },
    "1702": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP8",
      "path": "22"
    },
    "1703": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP10",
      "path": "22"
    },
    "1704": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP7",
      "path": "22"
    },
    "1705": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP9",
      "path": "22"
    },
    "1706": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP6",
      "path": "22"
    },
    "1707": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP8",
      "path": "22"
    },
    "1708": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP5",
      "path": "22"
    },
    "1709": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP7",
      "path": "22"
    },
    "1710": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP4",
      "path": "22"
    },
    "1711": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP6",
      "path": "22"
    },
    "1712": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "1713": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP5",
      "path": "22"
    },
    "1714": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "1715": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP4",
      "path": "22"
    },
    "1716": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "1717": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1718": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "1719": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xFF"
    },
    "1721": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "AND",
      "path": "22"
    },
    "1722": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "DUP15",
      "path": "22"
    },
    "1723": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1724": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1725": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "1727": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "1728": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x24B"
    },
    "1731": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP15",
      "path": "22"
    },
    "1732": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP14",
      "path": "22"
    },
    "1733": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP13",
      "path": "22"
    },
    "1734": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP12",
      "path": "22"
    },
    "1735": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP11",
      "path": "22"
    },
    "1736": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP10",
      "path": "22"
    },
    "1737": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP9",
      "path": "22"
    },
    "1738": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP8",
      "path": "22"
    },
    "1739": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP7",
      "path": "22"
    },
    "1740": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP6",
      "path": "22"
    },
    "1741": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP5",
      "path": "22"
    },
    "1742": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP4",
      "path": "22"
    },
    "1743": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "1744": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "1745": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1746": {
      "fn": "Wizards.tokenURI",
      "offset": [
        493,
        541
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2D99"
    },
    "1749": {
      "fn": "Wizards.tokenURI",
      "jump": "i",
      "offset": [
        493,
        541
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1750": {
      "offset": [
        1689,
        1729
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1751": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1689,
        1729
      ],
      "op": "CALLVALUE",
      "path": "22"
    },
    "1752": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1689,
        1729
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1753": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1689,
        1729
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "1754": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1689,
        1729
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x6E2"
    },
    "1757": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1689,
        1729
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "1758": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1689,
        1729
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "1760": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1689,
        1729
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1761": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1689,
        1729
      ],
      "op": "REVERT",
      "path": "22"
    },
    "1762": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1689,
        1729
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1763": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1689,
        1729
      ],
      "op": "POP",
      "path": "22"
    },
    "1764": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1689,
        1729
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x6EB"
    },
    "1767": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1689,
        1729
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1A9D"
    },
    "1770": {
      "fn": "Wizards.tokenURI",
      "jump": "i",
      "offset": [
        1689,
        1729
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1771": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1689,
        1729
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1772": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1689,
        1729
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "1774": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1689,
        1729
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "1775": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1689,
        1729
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x24B"
    },
    "1778": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1689,
        1729
      ],
      "op": "SWAP10",
      "path": "22"
    },
    "1779": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1689,
        1729
      ],
      "op": "SWAP9",
      "path": "22"
    },
    "1780": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1689,
        1729
      ],
      "op": "SWAP8",
      "path": "22"
    },
    "1781": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1689,
        1729
      ],
      "op": "SWAP7",
      "path": "22"
    },
    "1782": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1689,
        1729
      ],
      "op": "SWAP6",
      "path": "22"
    },
    "1783": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1689,
        1729
      ],
      "op": "SWAP5",
      "path": "22"
    },
    "1784": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1689,
        1729
      ],
      "op": "SWAP4",
      "path": "22"
    },
    "1785": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1689,
        1729
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "1786": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1689,
        1729
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "1787": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1689,
        1729
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1788": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1689,
        1729
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2E13"
    },
    "1791": {
      "fn": "Wizards.tokenURI",
      "jump": "i",
      "offset": [
        1689,
        1729
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1792": {
      "fn": "Wizards.updateBattler",
      "offset": [
        15544,
        15770
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1793": {
      "fn": "Wizards.updateBattler",
      "offset": [
        15544,
        15770
      ],
      "op": "CALLVALUE",
      "path": "22"
    },
    "1794": {
      "fn": "Wizards.updateBattler",
      "offset": [
        15544,
        15770
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1795": {
      "fn": "Wizards.updateBattler",
      "offset": [
        15544,
        15770
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "1796": {
      "fn": "Wizards.updateBattler",
      "offset": [
        15544,
        15770
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x70C"
    },
    "1799": {
      "fn": "Wizards.updateBattler",
      "offset": [
        15544,
        15770
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "1800": {
      "fn": "Wizards.updateBattler",
      "offset": [
        15544,
        15770
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "1802": {
      "fn": "Wizards.updateBattler",
      "offset": [
        15544,
        15770
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1803": {
      "fn": "Wizards.updateBattler",
      "offset": [
        15544,
        15770
      ],
      "op": "REVERT",
      "path": "22"
    },
    "1804": {
      "fn": "Wizards.updateBattler",
      "offset": [
        15544,
        15770
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1805": {
      "op": "POP"
    },
    "1806": {
      "fn": "Wizards.updateBattler",
      "offset": [
        15544,
        15770
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x31C"
    },
    "1809": {
      "fn": "Wizards.updateBattler",
      "offset": [
        15544,
        15770
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x71B"
    },
    "1812": {
      "fn": "Wizards.updateBattler",
      "offset": [
        15544,
        15770
      ],
      "op": "CALLDATASIZE",
      "path": "22"
    },
    "1813": {
      "fn": "Wizards.updateBattler",
      "offset": [
        15544,
        15770
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "1815": {
      "fn": "Wizards.updateBattler",
      "offset": [
        15544,
        15770
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2B75"
    },
    "1818": {
      "fn": "Wizards.updateBattler",
      "jump": "i",
      "offset": [
        15544,
        15770
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1819": {
      "fn": "Wizards.updateBattler",
      "offset": [
        15544,
        15770
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1820": {
      "fn": "Wizards.updateBattler",
      "offset": [
        15544,
        15770
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1B60"
    },
    "1823": {
      "fn": "Wizards.updateBattler",
      "jump": "i",
      "offset": [
        15544,
        15770
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1824": {
      "fn": "Wizards.rebirth",
      "offset": [
        5942,
        7185
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1825": {
      "fn": "Wizards.rebirth",
      "offset": [
        5942,
        7185
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x31C"
    },
    "1828": {
      "fn": "Wizards.rebirth",
      "offset": [
        5942,
        7185
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x72E"
    },
    "1831": {
      "fn": "Wizards.rebirth",
      "offset": [
        5942,
        7185
      ],
      "op": "CALLDATASIZE",
      "path": "22"
    },
    "1832": {
      "fn": "Wizards.rebirth",
      "offset": [
        5942,
        7185
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "1834": {
      "fn": "Wizards.rebirth",
      "offset": [
        5942,
        7185
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2A7D"
    },
    "1837": {
      "fn": "Wizards.rebirth",
      "jump": "i",
      "offset": [
        5942,
        7185
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1838": {
      "fn": "Wizards.rebirth",
      "offset": [
        5942,
        7185
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1839": {
      "fn": "Wizards.rebirth",
      "offset": [
        5942,
        7185
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1C45"
    },
    "1842": {
      "fn": "Wizards.rebirth",
      "jump": "i",
      "offset": [
        5942,
        7185
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1843": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4743,
        4907
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1844": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4743,
        4907
      ],
      "op": "CALLVALUE",
      "path": "6"
    },
    "1845": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4743,
        4907
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1846": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4743,
        4907
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1847": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4743,
        4907
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x73F"
    },
    "1850": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4743,
        4907
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1851": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4743,
        4907
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1853": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4743,
        4907
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1854": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4743,
        4907
      ],
      "op": "REVERT",
      "path": "6"
    },
    "1855": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4743,
        4907
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1856": {
      "op": "POP"
    },
    "1857": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4743,
        4907
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x23F"
    },
    "1860": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4743,
        4907
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x74E"
    },
    "1863": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4743,
        4907
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "1864": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4743,
        4907
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1866": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4743,
        4907
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2E70"
    },
    "1869": {
      "fn": "ERC721.isApprovedForAll",
      "jump": "i",
      "offset": [
        4743,
        4907
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1870": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4743,
        4907
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1871": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1873": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1875": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1877": {
      "op": "SHL"
    },
    "1878": {
      "op": "SUB"
    },
    "1879": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "SWAP2",
      "path": "6",
      "statement": 3
    },
    "1880": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1881": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "AND",
      "path": "6"
    },
    "1882": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4840,
        4844
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1884": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1885": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1886": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1887": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4882
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x5"
    },
    "1889": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "1891": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1892": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "DUP2",
      "path": "6"
    },
    "1893": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1894": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "1896": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1897": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "DUP4",
      "path": "6"
    },
    "1898": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "1899": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4899
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "1900": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4899
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1901": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4899
      ],
      "op": "SWAP5",
      "path": "6"
    },
    "1902": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4899
      ],
      "op": "AND",
      "path": "6"
    },
    "1903": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4899
      ],
      "op": "DUP3",
      "path": "6"
    },
    "1904": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4899
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1905": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4899
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1906": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4899
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1907": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4899
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "1908": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4899
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "1909": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4899
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "1910": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4899
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "1911": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4899
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xFF"
    },
    "1913": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4899
      ],
      "op": "AND",
      "path": "6"
    },
    "1914": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4899
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "1915": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4743,
        4907
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1916": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1917": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "CALLVALUE",
      "path": "8"
    },
    "1918": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1919": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "1920": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x788"
    },
    "1923": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "1924": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "1926": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1927": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "REVERT",
      "path": "8"
    },
    "1928": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1929": {
      "op": "POP"
    },
    "1930": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x31C"
    },
    "1933": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x797"
    },
    "1936": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "1937": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "1939": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2B75"
    },
    "1942": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1901,
        2093
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1943": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1944": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1E0B"
    },
    "1947": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1901,
        2093
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1948": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        988,
        1212
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1949": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1090,
        1094
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1951": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1953": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1955": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1957": {
      "op": "SHL"
    },
    "1958": {
      "op": "SUB"
    },
    "1959": {
      "op": "NOT"
    },
    "1960": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1114,
        1164
      ],
      "op": "DUP3",
      "path": "7",
      "statement": 4
    },
    "1961": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1114,
        1164
      ],
      "op": "AND",
      "path": "7"
    },
    "1962": {
      "op": "PUSH4",
      "value": "0x780E9D63"
    },
    "1967": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1969": {
      "op": "SHL"
    },
    "1970": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1114,
        1164
      ],
      "op": "EQ",
      "path": "7"
    },
    "1971": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1114,
        1164
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1972": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1114,
        1204
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x7C1"
    },
    "1975": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1114,
        1204
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1976": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1114,
        1204
      ],
      "op": "POP",
      "path": "7"
    },
    "1977": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1168,
        1204
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x7C1"
    },
    "1980": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1192,
        1203
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1981": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1168,
        1191
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1EA3"
    },
    "1984": {
      "fn": "ERC721Enumerable.supportsInterface",
      "jump": "i",
      "offset": [
        1168,
        1204
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1985": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1168,
        1204
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1986": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1107,
        1204
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "1987": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        988,
        1212
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1988": {
      "op": "POP"
    },
    "1989": {
      "op": "POP"
    },
    "1990": {
      "fn": "ERC721Enumerable.supportsInterface",
      "jump": "o",
      "offset": [
        988,
        1212
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1991": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10404,
        13641
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1992": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10491,
        10504
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x60"
    },
    "1994": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10572,
        10592
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "1996": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10595,
        10609
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xB"
    },
    "1998": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10595,
        10619
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "2000": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10610,
        10618
      ],
      "op": "DUP6",
      "path": "22"
    },
    "2001": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10595,
        10619
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2002": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10595,
        10619
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2003": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10595,
        10619
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "2005": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10595,
        10619
      ],
      "op": "ADD",
      "path": "22"
    },
    "2006": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10595,
        10619
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2007": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10595,
        10619
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2008": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10595,
        10619
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2009": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10595,
        10619
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "2011": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10595,
        10619
      ],
      "op": "ADD",
      "path": "22"
    },
    "2012": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10595,
        10619
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "2014": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10595,
        10619
      ],
      "op": "KECCAK256",
      "path": "22"
    },
    "2015": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10572,
        10619
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "2017": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10572,
        10619
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "2018": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10572,
        10619
      ],
      "op": "DUP1",
      "path": "22"
    },
    "2019": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10572,
        10619
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1C0"
    },
    "2022": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10572,
        10619
      ],
      "op": "ADD",
      "path": "22"
    },
    "2023": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10572,
        10619
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "2025": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10572,
        10619
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2026": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10572,
        10619
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2027": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10572,
        10619
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2028": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10572,
        10619
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "2030": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10572,
        10619
      ],
      "op": "DUP3",
      "path": "22"
    },
    "2031": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10572,
        10619
      ],
      "op": "ADD",
      "path": "22"
    },
    "2032": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10572,
        10619
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "2033": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10572,
        10619
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2034": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10572,
        10619
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2035": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10572,
        10619
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "2037": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10572,
        10619
      ],
      "op": "ADD",
      "path": "22"
    },
    "2038": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10572,
        10619
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x1"
    },
    "2040": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10572,
        10619
      ],
      "op": "DUP3",
      "path": "22"
    },
    "2041": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10572,
        10619
      ],
      "op": "ADD",
      "path": "22"
    },
    "2042": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10572,
        10619
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "2043": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10572,
        10619
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2044": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10572,
        10619
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2045": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10572,
        10619
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "2047": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10572,
        10619
      ],
      "op": "ADD",
      "path": "22"
    },
    "2048": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10572,
        10619
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x2"
    },
    "2050": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10572,
        10619
      ],
      "op": "DUP3",
      "path": "22"
    },
    "2051": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10572,
        10619
      ],
      "op": "ADD",
      "path": "22"
    },
    "2052": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10572,
        10619
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "2053": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10572,
        10619
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2054": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10572,
        10619
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2055": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10572,
        10619
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "2057": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10572,
        10619
      ],
      "op": "ADD",
      "path": "22"
    },
    "2058": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10572,
        10619
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x3"
    },
    "2060": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10572,
        10619
      ],
      "op": "DUP3",
      "path": "22"
    },
    "2061": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10572,
        10619
      ],
      "op": "ADD",
      "path": "22"
    },
    "2062": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10572,
        10619
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "2063": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10572,
        10619
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2064": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10572,
        10619
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2065": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10572,
        10619
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "2067": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10572,
        10619
      ],
      "op": "ADD",
      "path": "22"
    },
    "2068": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10572,
        10619
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "2070": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10572,
        10619
      ],
      "op": "DUP3",
      "path": "22"
    },
    "2071": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10572,
        10619
      ],
      "op": "ADD",
      "path": "22"
    },
    "2072": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10572,
        10619
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "2073": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10572,
        10619
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2074": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10572,
        10619
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2075": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10572,
        10619
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "2077": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10572,
        10619
      ],
      "op": "ADD",
      "path": "22"
    },
    "2078": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10572,
        10619
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x5"
    },
    "2080": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10572,
        10619
      ],
      "op": "DUP3",
      "path": "22"
    },
    "2081": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10572,
        10619
      ],
      "op": "ADD",
      "path": "22"
    },
    "2082": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10572,
        10619
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "2083": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10572,
        10619
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2084": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10572,
        10619
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2085": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10572,
        10619
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "2087": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10572,
        10619
      ],
      "op": "ADD",
      "path": "22"
    },
    "2088": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10572,
        10619
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x6"
    },
    "2090": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10572,
        10619
      ],
      "op": "DUP3",
      "path": "22"
    },
    "2091": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10572,
        10619
      ],
      "op": "ADD",
      "path": "22"
    },
    "2092": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10572,
        10619
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "2093": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10572,
        10619
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2094": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10572,
        10619
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2095": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10572,
        10619
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "2097": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10572,
        10619
      ],
      "op": "ADD",
      "path": "22"
    },
    "2098": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10572,
        10619
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x7"
    },
    "2100": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10572,
        10619
      ],
      "op": "DUP3",
      "path": "22"
    },
    "2101": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10572,
        10619
      ],
      "op": "ADD",
      "path": "22"
    },
    "2102": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10572,
        10619
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "2103": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10572,
        10619
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2104": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10572,
        10619
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2105": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10572,
        10619
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "2107": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10572,
        10619
      ],
      "op": "ADD",
      "path": "22"
    },
    "2108": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10572,
        10619
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x8"
    },
    "2110": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10572,
        10619
      ],
      "op": "DUP3",
      "path": "22"
    },
    "2111": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10572,
        10619
      ],
      "op": "ADD",
      "path": "22"
    },
    "2112": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10572,
        10619
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "2113": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10572,
        10619
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2114": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10572,
        10619
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2115": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10572,
        10619
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "2117": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10572,
        10619
      ],
      "op": "ADD",
      "path": "22"
    },
    "2118": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10572,
        10619
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x9"
    },
    "2120": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10572,
        10619
      ],
      "op": "DUP3",
      "path": "22"
    },
    "2121": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10572,
        10619
      ],
      "op": "ADD",
      "path": "22"
    },
    "2122": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10572,
        10619
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "2123": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10572,
        10619
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2124": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10572,
        10619
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2125": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10572,
        10619
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "2127": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10572,
        10619
      ],
      "op": "ADD",
      "path": "22"
    },
    "2128": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10572,
        10619
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xA"
    },
    "2130": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10572,
        10619
      ],
      "op": "DUP3",
      "path": "22"
    },
    "2131": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10572,
        10619
      ],
      "op": "ADD",
      "path": "22"
    },
    "2132": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10572,
        10619
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "2133": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10572,
        10619
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2134": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10572,
        10619
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2135": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10572,
        10619
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "2137": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10572,
        10619
      ],
      "op": "ADD",
      "path": "22"
    },
    "2138": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10572,
        10619
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xB"
    },
    "2140": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10572,
        10619
      ],
      "op": "DUP3",
      "path": "22"
    },
    "2141": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10572,
        10619
      ],
      "op": "ADD",
      "path": "22"
    },
    "2142": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10572,
        10619
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "2143": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10572,
        10619
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2144": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10572,
        10619
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2145": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10572,
        10619
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "2147": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10572,
        10619
      ],
      "op": "ADD",
      "path": "22"
    },
    "2148": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10572,
        10619
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xC"
    },
    "2150": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10572,
        10619
      ],
      "op": "DUP3",
      "path": "22"
    },
    "2151": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10572,
        10619
      ],
      "op": "ADD",
      "path": "22"
    },
    "2152": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10572,
        10619
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "2153": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10572,
        10619
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2154": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10572,
        10619
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2155": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10572,
        10619
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "2157": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10572,
        10619
      ],
      "op": "ADD",
      "path": "22"
    },
    "2158": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10572,
        10619
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xD"
    },
    "2160": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10572,
        10619
      ],
      "op": "DUP3",
      "path": "22"
    },
    "2161": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10572,
        10619
      ],
      "op": "ADD",
      "path": "22"
    },
    "2162": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10572,
        10619
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "2164": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10572,
        10619
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2165": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10572,
        10619
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "2166": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10572,
        10619
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2167": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10572,
        10619
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x100"
    },
    "2170": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10572,
        10619
      ],
      "op": "EXP",
      "path": "22"
    },
    "2171": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10572,
        10619
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2172": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10572,
        10619
      ],
      "op": "DIV",
      "path": "22"
    },
    "2173": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10572,
        10619
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xFF"
    },
    "2175": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10572,
        10619
      ],
      "op": "AND",
      "path": "22"
    },
    "2176": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10572,
        10619
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x3"
    },
    "2178": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10572,
        10619
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2179": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10572,
        10619
      ],
      "op": "GT",
      "path": "22"
    },
    "2180": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10572,
        10619
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "2181": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10572,
        10619
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x890"
    },
    "2184": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10572,
        10619
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "2185": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10572,
        10619
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x890"
    },
    "2188": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10572,
        10619
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2BFF"
    },
    "2191": {
      "fn": "Wizards.formatTokenURI",
      "jump": "i",
      "offset": [
        10572,
        10619
      ],
      "op": "JUMP",
      "path": "22"
    },
    "2192": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10572,
        10619
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2193": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10572,
        10619
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x3"
    },
    "2195": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10572,
        10619
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2196": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10572,
        10619
      ],
      "op": "GT",
      "path": "22"
    },
    "2197": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10572,
        10619
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "2198": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10572,
        10619
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x8A1"
    },
    "2201": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10572,
        10619
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "2202": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10572,
        10619
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x8A1"
    },
    "2205": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10572,
        10619
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2BFF"
    },
    "2208": {
      "fn": "Wizards.formatTokenURI",
      "jump": "i",
      "offset": [
        10572,
        10619
      ],
      "op": "JUMP",
      "path": "22"
    },
    "2209": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10572,
        10619
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2210": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10572,
        10619
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2211": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10572,
        10619
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2212": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10572,
        10619
      ],
      "op": "POP",
      "path": "22"
    },
    "2213": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10572,
        10619
      ],
      "op": "POP",
      "path": "22"
    },
    "2214": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10572,
        10619
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2215": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10572,
        10619
      ],
      "op": "POP",
      "path": "22"
    },
    "2216": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10632,
        10654
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "2218": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10857,
        10865
      ],
      "op": "DUP4",
      "path": "22"
    },
    "2219": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11040,
        11071
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x8B7"
    },
    "2222": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11057,
        11064
      ],
      "op": "DUP4",
      "path": "22"
    },
    "2223": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11057,
        11070
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "2225": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11057,
        11070
      ],
      "op": "ADD",
      "path": "22"
    },
    "2226": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11057,
        11070
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "2227": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11040,
        11056
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1EF3"
    },
    "2230": {
      "fn": "Wizards.formatTokenURI",
      "jump": "i",
      "offset": [
        11040,
        11071
      ],
      "op": "JUMP",
      "path": "22"
    },
    "2231": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11040,
        11071
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2232": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10664,
        11088
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "2234": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10664,
        11088
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "2235": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10664,
        11088
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "2237": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10664,
        11088
      ],
      "op": "ADD",
      "path": "22"
    },
    "2238": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10664,
        11088
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x8C8"
    },
    "2241": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10664,
        11088
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "2242": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10664,
        11088
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "2243": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10664,
        11088
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2244": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10664,
        11088
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2EBF"
    },
    "2247": {
      "fn": "Wizards.formatTokenURI",
      "jump": "i",
      "offset": [
        10664,
        11088
      ],
      "op": "JUMP",
      "path": "22"
    },
    "2248": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10664,
        11088
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2249": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10664,
        11088
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "2251": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10664,
        11088
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "2252": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10664,
        11088
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "2254": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10664,
        11088
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2255": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10664,
        11088
      ],
      "op": "DUP4",
      "path": "22"
    },
    "2256": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10664,
        11088
      ],
      "op": "SUB",
      "path": "22"
    },
    "2257": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10664,
        11088
      ],
      "op": "SUB",
      "path": "22"
    },
    "2258": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10664,
        11088
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2259": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10664,
        11088
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2260": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10664,
        11088
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2261": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10664,
        11088
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "2263": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10664,
        11088
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2264": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10632,
        11089
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2265": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10632,
        11089
      ],
      "op": "POP",
      "path": "22"
    },
    "2266": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11189,
        11197
      ],
      "op": "DUP1",
      "path": "22",
      "statement": 5
    },
    "2267": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11287,
        11315
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x8E7"
    },
    "2270": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11304,
        11311
      ],
      "op": "DUP4",
      "path": "22"
    },
    "2271": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11304,
        11314
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "2273": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11304,
        11314
      ],
      "op": "ADD",
      "path": "22"
    },
    "2274": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11304,
        11314
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "2275": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11287,
        11303
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1EF3"
    },
    "2278": {
      "fn": "Wizards.formatTokenURI",
      "jump": "i",
      "offset": [
        11287,
        11315
      ],
      "op": "JUMP",
      "path": "22"
    },
    "2279": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11287,
        11315
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2280": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11424,
        11462
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x8F4"
    },
    "2283": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11441,
        11448
      ],
      "op": "DUP5",
      "path": "22"
    },
    "2284": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11441,
        11461
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "2286": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11441,
        11461
      ],
      "op": "ADD",
      "path": "22"
    },
    "2287": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11441,
        11461
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "2288": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11424,
        11440
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1EF3"
    },
    "2291": {
      "fn": "Wizards.formatTokenURI",
      "jump": "i",
      "offset": [
        11424,
        11462
      ],
      "op": "JUMP",
      "path": "22"
    },
    "2292": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11424,
        11462
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2293": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11577,
        11617
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x901"
    },
    "2296": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11594,
        11601
      ],
      "op": "DUP6",
      "path": "22"
    },
    "2297": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11594,
        11616
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x60"
    },
    "2299": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11594,
        11616
      ],
      "op": "ADD",
      "path": "22"
    },
    "2300": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11594,
        11616
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "2301": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11577,
        11593
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1EF3"
    },
    "2304": {
      "fn": "Wizards.formatTokenURI",
      "jump": "i",
      "offset": [
        11577,
        11617
      ],
      "op": "JUMP",
      "path": "22"
    },
    "2305": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11577,
        11617
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2306": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11172,
        11636
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "2308": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11172,
        11636
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "2309": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11172,
        11636
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "2311": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11172,
        11636
      ],
      "op": "ADD",
      "path": "22"
    },
    "2312": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11172,
        11636
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x914"
    },
    "2315": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11172,
        11636
      ],
      "op": "SWAP5",
      "path": "22"
    },
    "2316": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11172,
        11636
      ],
      "op": "SWAP4",
      "path": "22"
    },
    "2317": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11172,
        11636
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "2318": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11172,
        11636
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "2319": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11172,
        11636
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2320": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11172,
        11636
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x3019"
    },
    "2323": {
      "fn": "Wizards.formatTokenURI",
      "jump": "i",
      "offset": [
        11172,
        11636
      ],
      "op": "JUMP",
      "path": "22"
    },
    "2324": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11172,
        11636
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2325": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11172,
        11636
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "2327": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11172,
        11636
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "2328": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11172,
        11636
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "2330": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11172,
        11636
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2331": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11172,
        11636
      ],
      "op": "DUP4",
      "path": "22"
    },
    "2332": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11172,
        11636
      ],
      "op": "SUB",
      "path": "22"
    },
    "2333": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11172,
        11636
      ],
      "op": "SUB",
      "path": "22"
    },
    "2334": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11172,
        11636
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2335": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11172,
        11636
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2336": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11172,
        11636
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2337": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11172,
        11636
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "2339": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11172,
        11636
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2340": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11154,
        11637
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2341": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11154,
        11637
      ],
      "op": "POP",
      "path": "22"
    },
    "2342": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11737,
        11745
      ],
      "op": "DUP1",
      "path": "22",
      "statement": 6
    },
    "2343": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11838,
        11869
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x933"
    },
    "2346": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11855,
        11862
      ],
      "op": "DUP4",
      "path": "22"
    },
    "2347": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11855,
        11868
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x80"
    },
    "2349": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11855,
        11868
      ],
      "op": "ADD",
      "path": "22"
    },
    "2350": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11855,
        11868
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "2351": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11838,
        11854
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1EF3"
    },
    "2354": {
      "fn": "Wizards.formatTokenURI",
      "jump": "i",
      "offset": [
        11838,
        11869
      ],
      "op": "JUMP",
      "path": "22"
    },
    "2355": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11838,
        11869
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2356": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11969,
        11999
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x940"
    },
    "2359": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11986,
        11993
      ],
      "op": "DUP5",
      "path": "22"
    },
    "2360": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11986,
        11998
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xA0"
    },
    "2362": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11986,
        11998
      ],
      "op": "ADD",
      "path": "22"
    },
    "2363": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11986,
        11998
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "2364": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11969,
        11985
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1EF3"
    },
    "2367": {
      "fn": "Wizards.formatTokenURI",
      "jump": "i",
      "offset": [
        11969,
        11999
      ],
      "op": "JUMP",
      "path": "22"
    },
    "2368": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11969,
        11999
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2369": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11720,
        12018
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "2371": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11720,
        12018
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "2372": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11720,
        12018
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "2374": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11720,
        12018
      ],
      "op": "ADD",
      "path": "22"
    },
    "2375": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11720,
        12018
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x952"
    },
    "2378": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11720,
        12018
      ],
      "op": "SWAP4",
      "path": "22"
    },
    "2379": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11720,
        12018
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "2380": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11720,
        12018
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "2381": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11720,
        12018
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2382": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11720,
        12018
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x314B"
    },
    "2385": {
      "fn": "Wizards.formatTokenURI",
      "jump": "i",
      "offset": [
        11720,
        12018
      ],
      "op": "JUMP",
      "path": "22"
    },
    "2386": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11720,
        12018
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2387": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11720,
        12018
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "2389": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11720,
        12018
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "2390": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11720,
        12018
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "2392": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11720,
        12018
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2393": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11720,
        12018
      ],
      "op": "DUP4",
      "path": "22"
    },
    "2394": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11720,
        12018
      ],
      "op": "SUB",
      "path": "22"
    },
    "2395": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11720,
        12018
      ],
      "op": "SUB",
      "path": "22"
    },
    "2396": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11720,
        12018
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2397": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11720,
        12018
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2398": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11720,
        12018
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2399": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11720,
        12018
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "2401": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11720,
        12018
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2402": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11702,
        12019
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2403": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        11702,
        12019
      ],
      "op": "POP",
      "path": "22"
    },
    "2404": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        12121,
        12129
      ],
      "op": "DUP1",
      "path": "22",
      "statement": 7
    },
    "2405": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        12223,
        12255
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x971"
    },
    "2408": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        12240,
        12247
      ],
      "op": "DUP4",
      "path": "22"
    },
    "2409": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        12240,
        12254
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xC0"
    },
    "2411": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        12240,
        12254
      ],
      "op": "ADD",
      "path": "22"
    },
    "2412": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        12240,
        12254
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "2413": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        12223,
        12239
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1EF3"
    },
    "2416": {
      "fn": "Wizards.formatTokenURI",
      "jump": "i",
      "offset": [
        12223,
        12255
      ],
      "op": "JUMP",
      "path": "22"
    },
    "2417": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        12223,
        12255
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2418": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        12358,
        12391
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x97E"
    },
    "2421": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        12375,
        12382
      ],
      "op": "DUP5",
      "path": "22"
    },
    "2422": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        12375,
        12390
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xE0"
    },
    "2424": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        12375,
        12390
      ],
      "op": "ADD",
      "path": "22"
    },
    "2425": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        12375,
        12390
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "2426": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        12358,
        12374
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1EF3"
    },
    "2429": {
      "fn": "Wizards.formatTokenURI",
      "jump": "i",
      "offset": [
        12358,
        12391
      ],
      "op": "JUMP",
      "path": "22"
    },
    "2430": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        12358,
        12391
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2431": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        12504,
        12543
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x98C"
    },
    "2434": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        12521,
        12528
      ],
      "op": "DUP6",
      "path": "22"
    },
    "2435": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        12521,
        12542
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x100"
    },
    "2438": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        12521,
        12542
      ],
      "op": "ADD",
      "path": "22"
    },
    "2439": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        12521,
        12542
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "2440": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        12504,
        12520
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1EF3"
    },
    "2443": {
      "fn": "Wizards.formatTokenURI",
      "jump": "i",
      "offset": [
        12504,
        12543
      ],
      "op": "JUMP",
      "path": "22"
    },
    "2444": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        12504,
        12543
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2445": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        12104,
        12562
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "2447": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        12104,
        12562
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "2448": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        12104,
        12562
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "2450": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        12104,
        12562
      ],
      "op": "ADD",
      "path": "22"
    },
    "2451": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        12104,
        12562
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x99F"
    },
    "2454": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        12104,
        12562
      ],
      "op": "SWAP5",
      "path": "22"
    },
    "2455": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        12104,
        12562
      ],
      "op": "SWAP4",
      "path": "22"
    },
    "2456": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        12104,
        12562
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "2457": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        12104,
        12562
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "2458": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        12104,
        12562
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2459": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        12104,
        12562
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x3228"
    },
    "2462": {
      "fn": "Wizards.formatTokenURI",
      "jump": "i",
      "offset": [
        12104,
        12562
      ],
      "op": "JUMP",
      "path": "22"
    },
    "2463": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        12104,
        12562
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2464": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        12104,
        12562
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "2466": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        12104,
        12562
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "2467": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        12104,
        12562
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "2469": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        12104,
        12562
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2470": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        12104,
        12562
      ],
      "op": "DUP4",
      "path": "22"
    },
    "2471": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        12104,
        12562
      ],
      "op": "SUB",
      "path": "22"
    },
    "2472": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        12104,
        12562
      ],
      "op": "SUB",
      "path": "22"
    },
    "2473": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        12104,
        12562
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2474": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        12104,
        12562
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2475": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        12104,
        12562
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2476": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        12104,
        12562
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "2478": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        12104,
        12562
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2479": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        12086,
        12563
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2480": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        12086,
        12563
      ],
      "op": "POP",
      "path": "22"
    },
    "2481": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        12634,
        12642
      ],
      "op": "DUP1",
      "path": "22",
      "statement": 8
    },
    "2482": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        12617,
        12652
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "2484": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        12617,
        12652
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "2485": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        12617,
        12652
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "2487": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        12617,
        12652
      ],
      "op": "ADD",
      "path": "22"
    },
    "2488": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        12617,
        12652
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x9C1"
    },
    "2491": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        12617,
        12652
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "2492": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        12617,
        12652
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2493": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        12617,
        12652
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x333E"
    },
    "2496": {
      "fn": "Wizards.formatTokenURI",
      "jump": "i",
      "offset": [
        12617,
        12652
      ],
      "op": "JUMP",
      "path": "22"
    },
    "2497": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        12617,
        12652
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2498": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        12617,
        12652
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "2500": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        12617,
        12652
      ],
      "op": "DUP1",
      "path": "22"
    },
    "2501": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        12617,
        12652
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "2502": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        12617,
        12652
      ],
      "op": "DUP1",
      "path": "22"
    },
    "2503": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        12617,
        12652
      ],
      "op": "DUP4",
      "path": "22"
    },
    "2504": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        12617,
        12652
      ],
      "op": "SUB",
      "path": "22"
    },
    "2505": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2507": {
      "op": "NOT"
    },
    "2508": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        12617,
        12652
      ],
      "op": "ADD",
      "path": "22"
    },
    "2509": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        12617,
        12652
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2510": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        12617,
        12652
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2511": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        12617,
        12652
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "2512": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        12617,
        12652
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2513": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        12617,
        12652
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2514": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        12617,
        12652
      ],
      "op": "SWAP6",
      "path": "22"
    },
    "2515": {
      "fn": "Wizards.formatTokenURI",
      "offset": [
        10404,
        13641
      ],
      "op": "SWAP5",
      "path": "22"
    },
    "2516": {
      "op": "POP"
    },
    "2517": {
      "op": "POP"
    },
    "2518": {
      "op": "POP"
    },
    "2519": {
      "op": "POP"
    },
    "2520": {
      "op": "POP"
    },
    "2521": {
      "fn": "Wizards.formatTokenURI",
      "jump": "o",
      "offset": [
        10404,
        13641
      ],
      "op": "JUMP",
      "path": "22"
    },
    "2522": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        8173,
        8537
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2523": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        8345,
        8375
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x13"
    },
    "2525": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        8345,
        8375
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "2526": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        8231,
        8238
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "2528": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        8297,
        8321
      ],
      "op": "DUP3",
      "path": "22"
    },
    "2529": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        8297,
        8321
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2530": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        8297,
        8321
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2531": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        8297,
        8311
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xB"
    },
    "2533": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        8297,
        8321
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "2535": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        8297,
        8321
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2536": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        8297,
        8321
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2537": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        8297,
        8321
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2538": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        8297,
        8321
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "2540": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        8297,
        8321
      ],
      "op": "DUP3",
      "path": "22"
    },
    "2541": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        8297,
        8321
      ],
      "op": "KECCAK256",
      "path": "22"
    },
    "2542": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        8297,
        8341
      ],
      "op": "ADD",
      "path": "22"
    },
    "2543": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        8297,
        8341
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "2544": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        8231,
        8238
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2545": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        8231,
        8238
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "2546": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        8231,
        8238
      ],
      "op": "DUP3",
      "path": "22"
    },
    "2547": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        8231,
        8238
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "2548": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        8389,
        8390
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x7"
    },
    "2550": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        8389,
        8390
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "2551": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        8345,
        8375
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2552": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        8279,
        8341
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xA01"
    },
    "2555": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        8279,
        8341
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2556": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        8279,
        8294
      ],
      "op": "TIMESTAMP",
      "path": "22"
    },
    "2557": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        8279,
        8341
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x3383"
    },
    "2560": {
      "fn": "Wizards.getPhaseOf",
      "jump": "i",
      "offset": [
        8279,
        8341
      ],
      "op": "JUMP",
      "path": "22"
    },
    "2561": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        8279,
        8341
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2562": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        8278,
        8375
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xA0B"
    },
    "2565": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        8278,
        8375
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "2566": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        8278,
        8375
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2567": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        8278,
        8375
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x33B0"
    },
    "2570": {
      "fn": "Wizards.getPhaseOf",
      "jump": "i",
      "offset": [
        8278,
        8375
      ],
      "op": "JUMP",
      "path": "22"
    },
    "2571": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        8278,
        8375
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2572": {
      "branch": 129,
      "fn": "Wizards.getPhaseOf",
      "offset": [
        8278,
        8390
      ],
      "op": "GT",
      "path": "22"
    },
    "2573": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        8278,
        8494
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xA3F"
    },
    "2576": {
      "branch": 129,
      "fn": "Wizards.getPhaseOf",
      "offset": [
        8278,
        8494
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "2577": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        8464,
        8494
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x13"
    },
    "2579": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        8464,
        8494
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "2580": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        8416,
        8440
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "2582": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        8416,
        8440
      ],
      "op": "DUP5",
      "path": "22"
    },
    "2583": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        8416,
        8440
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2584": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        8416,
        8440
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2585": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        8416,
        8430
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xB"
    },
    "2587": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        8416,
        8440
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "2589": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        8416,
        8440
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2590": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        8416,
        8440
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2591": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        8416,
        8440
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2592": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        8416,
        8440
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "2594": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        8416,
        8440
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2595": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        8416,
        8440
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "2596": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        8416,
        8440
      ],
      "op": "KECCAK256",
      "path": "22"
    },
    "2597": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        8416,
        8460
      ],
      "op": "ADD",
      "path": "22"
    },
    "2598": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        8416,
        8460
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "2599": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        8398,
        8460
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xA30"
    },
    "2602": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        8398,
        8460
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2603": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        8398,
        8413
      ],
      "op": "TIMESTAMP",
      "path": "22"
    },
    "2604": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        8398,
        8460
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x3383"
    },
    "2607": {
      "fn": "Wizards.getPhaseOf",
      "jump": "i",
      "offset": [
        8398,
        8460
      ],
      "op": "JUMP",
      "path": "22"
    },
    "2608": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        8398,
        8460
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2609": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        8397,
        8494
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xA3A"
    },
    "2612": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        8397,
        8494
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "2613": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        8397,
        8494
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2614": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        8397,
        8494
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x33B0"
    },
    "2617": {
      "fn": "Wizards.getPhaseOf",
      "jump": "i",
      "offset": [
        8397,
        8494
      ],
      "op": "JUMP",
      "path": "22"
    },
    "2618": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        8397,
        8494
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2619": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        8278,
        8494
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xA42"
    },
    "2622": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        8278,
        8494
      ],
      "op": "JUMP",
      "path": "22"
    },
    "2623": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        8278,
        8494
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2624": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        8393,
        8394
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x7"
    },
    "2626": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        8278,
        8494
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2627": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        8251,
        8494
      ],
      "op": "SWAP4",
      "path": "22"
    },
    "2628": {
      "fn": "Wizards.getPhaseOf",
      "offset": [
        8173,
        8537
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "2629": {
      "op": "POP"
    },
    "2630": {
      "op": "POP"
    },
    "2631": {
      "op": "POP"
    },
    "2632": {
      "fn": "Wizards.getPhaseOf",
      "jump": "o",
      "offset": [
        8173,
        8537
      ],
      "op": "JUMP",
      "path": "22"
    },
    "2633": {
      "fn": "ERC721.name",
      "offset": [
        2525,
        2625
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2634": {
      "fn": "ERC721.name",
      "offset": [
        2579,
        2592
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x60"
    },
    "2636": {
      "fn": "ERC721.name",
      "offset": [
        2612,
        2617
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 9,
      "value": "0x0"
    },
    "2638": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2639": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2640": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xA58"
    },
    "2643": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2644": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x33C4"
    },
    "2647": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2605,
        2617
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2648": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2649": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2650": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "2652": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "ADD",
      "path": "6"
    },
    "2653": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2655": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2656": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2657": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "DIV",
      "path": "6"
    },
    "2658": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "MUL",
      "path": "6"
    },
    "2659": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2661": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "ADD",
      "path": "6"
    },
    "2662": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2664": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2665": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2666": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2667": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "ADD",
      "path": "6"
    },
    "2668": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2670": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2671": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2672": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "2673": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2674": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2675": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2676": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2677": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2678": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2680": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "ADD",
      "path": "6"
    },
    "2681": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2682": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2683": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2684": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xA84"
    },
    "2687": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2688": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x33C4"
    },
    "2691": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2605,
        2617
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2692": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2693": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2694": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "2695": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xAD1"
    },
    "2698": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2699": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2700": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "2702": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "LT",
      "path": "6"
    },
    "2703": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xAA6"
    },
    "2706": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2707": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x100"
    },
    "2710": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2711": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "DUP4",
      "path": "6"
    },
    "2712": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2713": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "DIV",
      "path": "6"
    },
    "2714": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "MUL",
      "path": "6"
    },
    "2715": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "DUP4",
      "path": "6"
    },
    "2716": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2717": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2718": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2720": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "ADD",
      "path": "6"
    },
    "2721": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2722": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xAD1"
    },
    "2725": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2726": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2727": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2728": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "ADD",
      "path": "6"
    },
    "2729": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2730": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2731": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2733": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2734": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2736": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2738": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "2739": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2740": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2741": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2742": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2743": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2744": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2745": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2746": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "2748": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "ADD",
      "path": "6"
    },
    "2749": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2750": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2752": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "ADD",
      "path": "6"
    },
    "2753": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2754": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "DUP4",
      "path": "6"
    },
    "2755": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "GT",
      "path": "6"
    },
    "2756": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xAB4"
    },
    "2759": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2760": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2761": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2762": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "SUB",
      "path": "6"
    },
    "2763": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "2765": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "AND",
      "path": "6"
    },
    "2766": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2767": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "ADD",
      "path": "6"
    },
    "2768": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2769": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2770": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "POP",
      "path": "6"
    },
    "2771": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "POP",
      "path": "6"
    },
    "2772": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "POP",
      "path": "6"
    },
    "2773": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "POP",
      "path": "6"
    },
    "2774": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "POP",
      "path": "6"
    },
    "2775": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2776": {
      "fn": "ERC721.name",
      "offset": [
        2605,
        2617
      ],
      "op": "POP",
      "path": "6"
    },
    "2777": {
      "fn": "ERC721.name",
      "offset": [
        2525,
        2625
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2778": {
      "fn": "ERC721.name",
      "jump": "o",
      "offset": [
        2525,
        2625
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2779": {
      "fn": "ERC721.getApproved",
      "offset": [
        4084,
        4305
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2780": {
      "fn": "ERC721.getApproved",
      "offset": [
        4160,
        4167
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2782": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "DUP2",
      "path": "6",
      "statement": 10
    },
    "2783": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2784": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2785": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7574
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2"
    },
    "2787": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2789": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2790": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2792": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2793": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "2794": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2795": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2797": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2799": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2801": {
      "op": "SHL"
    },
    "2802": {
      "op": "SUB"
    },
    "2803": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "AND",
      "path": "6"
    },
    "2804": {
      "fn": "ERC721.getApproved",
      "offset": [
        4180,
        4253
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 11,
      "value": "0xB59"
    },
    "2807": {
      "fn": "ERC721.getApproved",
      "offset": [
        4180,
        4253
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2808": {
      "fn": "ERC721.getApproved",
      "offset": [
        4180,
        4253
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2810": {
      "fn": "ERC721.getApproved",
      "offset": [
        4180,
        4253
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2811": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2815": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2817": {
      "op": "SHL"
    },
    "2818": {
      "fn": "ERC721.getApproved",
      "offset": [
        4180,
        4253
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2819": {
      "fn": "ERC721.getApproved",
      "offset": [
        4180,
        4253
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2820": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2822": {
      "fn": "ERC721.getApproved",
      "offset": [
        4180,
        4253
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "2824": {
      "fn": "ERC721.getApproved",
      "offset": [
        4180,
        4253
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2825": {
      "fn": "ERC721.getApproved",
      "offset": [
        4180,
        4253
      ],
      "op": "ADD",
      "path": "6"
    },
    "2826": {
      "op": "MSTORE"
    },
    "2827": {
      "op": "PUSH1",
      "value": "0x2C"
    },
    "2829": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2831": {
      "op": "DUP3"
    },
    "2832": {
      "op": "ADD"
    },
    "2833": {
      "op": "MSTORE"
    },
    "2834": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F76656420717565727920666F72206E6F6E6578"
    },
    "2867": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2869": {
      "op": "DUP3"
    },
    "2870": {
      "op": "ADD"
    },
    "2871": {
      "op": "MSTORE"
    },
    "2872": {
      "op": "PUSH12",
      "value": "0x34B9BA32B73A103A37B5B2B7"
    },
    "2885": {
      "op": "PUSH1",
      "value": "0xA1"
    },
    "2887": {
      "op": "SHL"
    },
    "2888": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2890": {
      "op": "DUP3"
    },
    "2891": {
      "op": "ADD"
    },
    "2892": {
      "op": "MSTORE"
    },
    "2893": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2895": {
      "op": "ADD"
    },
    "2896": {
      "fn": "ERC721.getApproved",
      "offset": [
        4180,
        4253
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2897": {
      "fn": "ERC721.getApproved",
      "offset": [
        4180,
        4253
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2899": {
      "fn": "ERC721.getApproved",
      "offset": [
        4180,
        4253
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2900": {
      "fn": "ERC721.getApproved",
      "offset": [
        4180,
        4253
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2901": {
      "fn": "ERC721.getApproved",
      "offset": [
        4180,
        4253
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2902": {
      "fn": "ERC721.getApproved",
      "offset": [
        4180,
        4253
      ],
      "op": "SUB",
      "path": "6"
    },
    "2903": {
      "fn": "ERC721.getApproved",
      "offset": [
        4180,
        4253
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2904": {
      "fn": "ERC721.getApproved",
      "offset": [
        4180,
        4253
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "6"
    },
    "2905": {
      "fn": "ERC721.getApproved",
      "offset": [
        4180,
        4253
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2906": {
      "op": "POP"
    },
    "2907": {
      "fn": "ERC721.getApproved",
      "offset": [
        4273,
        4297
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 12,
      "value": "0x0"
    },
    "2909": {
      "fn": "ERC721.getApproved",
      "offset": [
        4273,
        4297
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2910": {
      "fn": "ERC721.getApproved",
      "offset": [
        4273,
        4297
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2911": {
      "fn": "ERC721.getApproved",
      "offset": [
        4273,
        4297
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2912": {
      "fn": "ERC721.getApproved",
      "offset": [
        4273,
        4288
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "2914": {
      "fn": "ERC721.getApproved",
      "offset": [
        4273,
        4297
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "2916": {
      "fn": "ERC721.getApproved",
      "offset": [
        4273,
        4297
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2917": {
      "fn": "ERC721.getApproved",
      "offset": [
        4273,
        4297
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2919": {
      "fn": "ERC721.getApproved",
      "offset": [
        4273,
        4297
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2920": {
      "fn": "ERC721.getApproved",
      "offset": [
        4273,
        4297
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "2921": {
      "fn": "ERC721.getApproved",
      "offset": [
        4273,
        4297
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2922": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2924": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2926": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2928": {
      "op": "SHL"
    },
    "2929": {
      "op": "SUB"
    },
    "2930": {
      "fn": "ERC721.getApproved",
      "offset": [
        4273,
        4297
      ],
      "op": "AND",
      "path": "6"
    },
    "2931": {
      "fn": "ERC721.getApproved",
      "offset": [
        4273,
        4297
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2932": {
      "fn": "ERC721.getApproved",
      "jump": "o",
      "offset": [
        4084,
        4305
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2933": {
      "fn": "ERC721.approve",
      "offset": [
        3607,
        4018
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2934": {
      "fn": "ERC721.approve",
      "offset": [
        3688,
        3701
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2936": {
      "fn": "ERC721.approve",
      "offset": [
        3704,
        3727
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xB80"
    },
    "2939": {
      "fn": "ERC721.approve",
      "offset": [
        3719,
        3726
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2940": {
      "fn": "ERC721.approve",
      "offset": [
        3704,
        3718
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x117B"
    },
    "2943": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3704,
        3727
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2944": {
      "fn": "ERC721.approve",
      "offset": [
        3704,
        3727
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2945": {
      "fn": "ERC721.approve",
      "offset": [
        3688,
        3727
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2946": {
      "fn": "ERC721.approve",
      "offset": [
        3688,
        3727
      ],
      "op": "POP",
      "path": "6"
    },
    "2947": {
      "fn": "ERC721.approve",
      "offset": [
        3752,
        3757
      ],
      "op": "DUP1",
      "path": "6",
      "statement": 13
    },
    "2948": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2950": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2952": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2954": {
      "op": "SHL"
    },
    "2955": {
      "op": "SUB"
    },
    "2956": {
      "fn": "ERC721.approve",
      "offset": [
        3746,
        3757
      ],
      "op": "AND",
      "path": "6"
    },
    "2957": {
      "fn": "ERC721.approve",
      "offset": [
        3746,
        3748
      ],
      "op": "DUP4",
      "path": "6"
    },
    "2958": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2960": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2962": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2964": {
      "op": "SHL"
    },
    "2965": {
      "op": "SUB"
    },
    "2966": {
      "fn": "ERC721.approve",
      "offset": [
        3746,
        3757
      ],
      "op": "AND",
      "path": "6"
    },
    "2967": {
      "branch": 141,
      "fn": "ERC721.approve",
      "offset": [
        3746,
        3757
      ],
      "op": "SUB",
      "path": "6"
    },
    "2968": {
      "fn": "ERC721.approve",
      "offset": [
        3738,
        3795
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xBED"
    },
    "2971": {
      "branch": 141,
      "fn": "ERC721.approve",
      "offset": [
        3738,
        3795
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2972": {
      "fn": "ERC721.approve",
      "offset": [
        3738,
        3795
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2974": {
      "fn": "ERC721.approve",
      "offset": [
        3738,
        3795
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2975": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2979": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2981": {
      "op": "SHL"
    },
    "2982": {
      "fn": "ERC721.approve",
      "offset": [
        3738,
        3795
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2983": {
      "fn": "ERC721.approve",
      "offset": [
        3738,
        3795
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2984": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2986": {
      "fn": "ERC721.approve",
      "offset": [
        3738,
        3795
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "2988": {
      "fn": "ERC721.approve",
      "offset": [
        3738,
        3795
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2989": {
      "fn": "ERC721.approve",
      "offset": [
        3738,
        3795
      ],
      "op": "ADD",
      "path": "6"
    },
    "2990": {
      "op": "MSTORE"
    },
    "2991": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "2993": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2995": {
      "op": "DUP3"
    },
    "2996": {
      "op": "ADD"
    },
    "2997": {
      "op": "MSTORE"
    },
    "2998": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65"
    },
    "3031": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3033": {
      "op": "DUP3"
    },
    "3034": {
      "op": "ADD"
    },
    "3035": {
      "op": "MSTORE"
    },
    "3036": {
      "op": "PUSH1",
      "value": "0x39"
    },
    "3038": {
      "op": "PUSH1",
      "value": "0xF9"
    },
    "3040": {
      "op": "SHL"
    },
    "3041": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3043": {
      "op": "DUP3"
    },
    "3044": {
      "op": "ADD"
    },
    "3045": {
      "op": "MSTORE"
    },
    "3046": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3048": {
      "op": "ADD"
    },
    "3049": {
      "fn": "ERC721.approve",
      "offset": [
        3738,
        3795
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xB50"
    },
    "3052": {
      "op": "JUMP"
    },
    "3053": {
      "fn": "ERC721.approve",
      "offset": [
        3738,
        3795
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3054": {
      "fn": "Context._msgSender",
      "offset": [
        679,
        689
      ],
      "op": "CALLER",
      "path": "3",
      "statement": 14
    },
    "3055": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3057": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3059": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3061": {
      "op": "SHL"
    },
    "3062": {
      "op": "SUB"
    },
    "3063": {
      "fn": "ERC721.approve",
      "offset": [
        3830,
        3851
      ],
      "op": "DUP3",
      "path": "6",
      "statement": 15
    },
    "3064": {
      "fn": "ERC721.approve",
      "offset": [
        3830,
        3851
      ],
      "op": "AND",
      "path": "6"
    },
    "3065": {
      "fn": "ERC721.approve",
      "offset": [
        3830,
        3851
      ],
      "op": "EQ",
      "path": "6"
    },
    "3066": {
      "branch": 142,
      "fn": "ERC721.approve",
      "offset": [
        3830,
        3851
      ],
      "op": "DUP1",
      "path": "6"
    },
    "3067": {
      "fn": "ERC721.approve",
      "offset": [
        3830,
        3892
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xC09"
    },
    "3070": {
      "branch": 142,
      "fn": "ERC721.approve",
      "offset": [
        3830,
        3892
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3071": {
      "op": "POP"
    },
    "3072": {
      "fn": "ERC721.approve",
      "offset": [
        3855,
        3892
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xC09"
    },
    "3075": {
      "fn": "ERC721.approve",
      "offset": [
        3872,
        3877
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3076": {
      "fn": "Context._msgSender",
      "offset": [
        679,
        689
      ],
      "op": "CALLER",
      "path": "3"
    },
    "3077": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4743,
        4907
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x74E"
    },
    "3080": {
      "fn": "ERC721.isApprovedForAll",
      "jump": "i",
      "offset": [
        4743,
        4907
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3081": {
      "branch": 143,
      "fn": "ERC721.approve",
      "offset": [
        3855,
        3892
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3082": {
      "fn": "ERC721.approve",
      "offset": [
        3808,
        3976
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xC7B"
    },
    "3085": {
      "branch": 143,
      "fn": "ERC721.approve",
      "offset": [
        3808,
        3976
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3086": {
      "fn": "ERC721.approve",
      "offset": [
        3808,
        3976
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3088": {
      "fn": "ERC721.approve",
      "offset": [
        3808,
        3976
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "3089": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3093": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3095": {
      "op": "SHL"
    },
    "3096": {
      "fn": "ERC721.approve",
      "offset": [
        3808,
        3976
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3097": {
      "fn": "ERC721.approve",
      "offset": [
        3808,
        3976
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3098": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3100": {
      "fn": "ERC721.approve",
      "offset": [
        3808,
        3976
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "3102": {
      "fn": "ERC721.approve",
      "offset": [
        3808,
        3976
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3103": {
      "fn": "ERC721.approve",
      "offset": [
        3808,
        3976
      ],
      "op": "ADD",
      "path": "6"
    },
    "3104": {
      "op": "MSTORE"
    },
    "3105": {
      "op": "PUSH1",
      "value": "0x38"
    },
    "3107": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3109": {
      "op": "DUP3"
    },
    "3110": {
      "op": "ADD"
    },
    "3111": {
      "op": "MSTORE"
    },
    "3112": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F76652063616C6C6572206973206E6F74206F77"
    },
    "3145": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3147": {
      "op": "DUP3"
    },
    "3148": {
      "op": "ADD"
    },
    "3149": {
      "op": "MSTORE"
    },
    "3150": {
      "op": "PUSH32",
      "value": "0x6E6572206E6F7220617070726F76656420666F7220616C6C0000000000000000"
    },
    "3183": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3185": {
      "op": "DUP3"
    },
    "3186": {
      "op": "ADD"
    },
    "3187": {
      "op": "MSTORE"
    },
    "3188": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3190": {
      "op": "ADD"
    },
    "3191": {
      "fn": "ERC721.approve",
      "offset": [
        3808,
        3976
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xB50"
    },
    "3194": {
      "op": "JUMP"
    },
    "3195": {
      "fn": "ERC721.approve",
      "offset": [
        3808,
        3976
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3196": {
      "fn": "ERC721.approve",
      "offset": [
        3989,
        4010
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 16,
      "value": "0xC85"
    },
    "3199": {
      "fn": "ERC721.approve",
      "offset": [
        3998,
        4000
      ],
      "op": "DUP4",
      "path": "6"
    },
    "3200": {
      "fn": "ERC721.approve",
      "offset": [
        4002,
        4009
      ],
      "op": "DUP4",
      "path": "6"
    },
    "3201": {
      "fn": "ERC721.approve",
      "offset": [
        3989,
        3997
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1FF4"
    },
    "3204": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3989,
        4010
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3205": {
      "fn": "ERC721.approve",
      "offset": [
        3989,
        4010
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3206": {
      "fn": "ERC721.approve",
      "offset": [
        3677,
        4018
      ],
      "op": "POP",
      "path": "6"
    },
    "3207": {
      "fn": "ERC721.approve",
      "offset": [
        3607,
        4018
      ],
      "op": "POP",
      "path": "6"
    },
    "3208": {
      "fn": "ERC721.approve",
      "offset": [
        3607,
        4018
      ],
      "op": "POP",
      "path": "6"
    },
    "3209": {
      "fn": "ERC721.approve",
      "jump": "o",
      "offset": [
        3607,
        4018
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3210": {
      "fn": "Wizards.mint",
      "offset": [
        4293,
        5279
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3211": {
      "fn": "Wizards.mint",
      "offset": [
        4353,
        4379
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 17,
      "value": "0x10"
    },
    "3213": {
      "fn": "Wizards.mint",
      "offset": [
        4353,
        4379
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "3214": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1716,
        1726
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x8"
    },
    "3216": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1716,
        1733
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "3217": {
      "branch": 130,
      "fn": "Wizards.mint",
      "offset": [
        4337,
        4379
      ],
      "op": "LT",
      "path": "22"
    },
    "3218": {
      "fn": "Wizards.mint",
      "offset": [
        4329,
        4398
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xCCE"
    },
    "3221": {
      "branch": 130,
      "fn": "Wizards.mint",
      "offset": [
        4329,
        4398
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "3222": {
      "fn": "Wizards.mint",
      "offset": [
        4329,
        4398
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "3224": {
      "fn": "Wizards.mint",
      "offset": [
        4329,
        4398
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "3225": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3229": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3231": {
      "op": "SHL"
    },
    "3232": {
      "fn": "Wizards.mint",
      "offset": [
        4329,
        4398
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3233": {
      "fn": "Wizards.mint",
      "offset": [
        4329,
        4398
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "3234": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3236": {
      "fn": "Wizards.mint",
      "offset": [
        4329,
        4398
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "3238": {
      "fn": "Wizards.mint",
      "offset": [
        4329,
        4398
      ],
      "op": "DUP3",
      "path": "22"
    },
    "3239": {
      "fn": "Wizards.mint",
      "offset": [
        4329,
        4398
      ],
      "op": "ADD",
      "path": "22"
    },
    "3240": {
      "op": "MSTORE"
    },
    "3241": {
      "op": "PUSH1",
      "value": "0xE"
    },
    "3243": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3245": {
      "op": "DUP3"
    },
    "3246": {
      "op": "ADD"
    },
    "3247": {
      "op": "MSTORE"
    },
    "3248": {
      "op": "PUSH14",
      "value": "0x30BA1036B0BC1039BAB838363C97"
    },
    "3263": {
      "op": "PUSH1",
      "value": "0x91"
    },
    "3265": {
      "op": "SHL"
    },
    "3266": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3268": {
      "op": "DUP3"
    },
    "3269": {
      "op": "ADD"
    },
    "3270": {
      "op": "MSTORE"
    },
    "3271": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3273": {
      "op": "ADD"
    },
    "3274": {
      "fn": "Wizards.mint",
      "offset": [
        4329,
        4398
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xB50"
    },
    "3277": {
      "op": "JUMP"
    },
    "3278": {
      "fn": "Wizards.mint",
      "offset": [
        4329,
        4398
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3279": {
      "fn": "Wizards.mint",
      "offset": [
        4516,
        4537
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "3281": {
      "fn": "Wizards.mint",
      "offset": [
        4575,
        4588
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xCD9"
    },
    "3284": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1716,
        1726
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x8"
    },
    "3286": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1716,
        1733
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "3287": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1716,
        1733
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3288": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1628,
        1741
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3289": {
      "fn": "Wizards.mint",
      "offset": [
        4575,
        4588
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3290": {
      "fn": "Wizards.mint",
      "offset": [
        4558,
        4618
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "3292": {
      "fn": "Wizards.mint",
      "offset": [
        4558,
        4618
      ],
      "op": "DUP1",
      "path": "22"
    },
    "3293": {
      "fn": "Wizards.mint",
      "offset": [
        4558,
        4618
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "3294": {
      "fn": "Wizards.mint",
      "offset": [
        4558,
        4618
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "3296": {
      "fn": "Wizards.mint",
      "offset": [
        4558,
        4618
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3297": {
      "fn": "Wizards.mint",
      "offset": [
        4558,
        4618
      ],
      "op": "ADD",
      "path": "22"
    },
    "3298": {
      "op": "SWAP3"
    },
    "3299": {
      "op": "SWAP1"
    },
    "3300": {
      "op": "SWAP3"
    },
    "3301": {
      "op": "MSTORE"
    },
    "3302": {
      "op": "PUSH12",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "3315": {
      "op": "NOT"
    },
    "3316": {
      "fn": "Wizards.mint",
      "offset": [
        4590,
        4600
      ],
      "op": "CALLER",
      "path": "22"
    },
    "3317": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3319": {
      "op": "SHL"
    },
    "3320": {
      "op": "AND"
    },
    "3321": {
      "op": "SWAP1"
    },
    "3322": {
      "op": "DUP3"
    },
    "3323": {
      "op": "ADD"
    },
    "3324": {
      "op": "MSTORE"
    },
    "3325": {
      "fn": "Wizards.mint",
      "offset": [
        4602,
        4617
      ],
      "op": "TIMESTAMP",
      "path": "22"
    },
    "3326": {
      "op": "PUSH1",
      "value": "0x54"
    },
    "3328": {
      "op": "DUP3"
    },
    "3329": {
      "op": "ADD"
    },
    "3330": {
      "op": "MSTORE"
    },
    "3331": {
      "op": "PUSH1",
      "value": "0x74"
    },
    "3333": {
      "op": "ADD"
    },
    "3334": {
      "fn": "Wizards.mint",
      "offset": [
        4558,
        4618
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "3336": {
      "fn": "Wizards.mint",
      "offset": [
        4558,
        4618
      ],
      "op": "DUP1",
      "path": "22"
    },
    "3337": {
      "fn": "Wizards.mint",
      "offset": [
        4558,
        4618
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "3338": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3340": {
      "op": "NOT"
    },
    "3341": {
      "fn": "Wizards.mint",
      "offset": [
        4558,
        4618
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3342": {
      "fn": "Wizards.mint",
      "offset": [
        4558,
        4618
      ],
      "op": "DUP5",
      "path": "22"
    },
    "3343": {
      "fn": "Wizards.mint",
      "offset": [
        4558,
        4618
      ],
      "op": "SUB",
      "path": "22"
    },
    "3344": {
      "fn": "Wizards.mint",
      "offset": [
        4558,
        4618
      ],
      "op": "ADD",
      "path": "22"
    },
    "3345": {
      "fn": "Wizards.mint",
      "offset": [
        4558,
        4618
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3346": {
      "fn": "Wizards.mint",
      "offset": [
        4558,
        4618
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "3347": {
      "fn": "Wizards.mint",
      "offset": [
        4558,
        4618
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "3348": {
      "fn": "Wizards.mint",
      "offset": [
        4558,
        4618
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3349": {
      "fn": "Wizards.mint",
      "offset": [
        4558,
        4618
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "3350": {
      "fn": "Wizards.mint",
      "offset": [
        4548,
        4619
      ],
      "op": "DUP1",
      "path": "22"
    },
    "3351": {
      "fn": "Wizards.mint",
      "offset": [
        4548,
        4619
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "3352": {
      "fn": "Wizards.mint",
      "offset": [
        4558,
        4618
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "3354": {
      "fn": "Wizards.mint",
      "offset": [
        4548,
        4619
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3355": {
      "fn": "Wizards.mint",
      "offset": [
        4548,
        4619
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "3356": {
      "fn": "Wizards.mint",
      "offset": [
        4548,
        4619
      ],
      "op": "ADD",
      "path": "22"
    },
    "3357": {
      "fn": "Wizards.mint",
      "offset": [
        4548,
        4619
      ],
      "op": "KECCAK256",
      "path": "22"
    },
    "3358": {
      "fn": "Wizards.mint",
      "offset": [
        4548,
        4619
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3359": {
      "op": "POP"
    },
    "3360": {
      "fn": "Wizards.mint",
      "offset": [
        4540,
        4620
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "3362": {
      "fn": "Wizards.mint",
      "offset": [
        4763,
        4781
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xD2C"
    },
    "3365": {
      "fn": "Wizards.mint",
      "offset": [
        4779,
        4781
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x1A"
    },
    "3367": {
      "fn": "Wizards.mint",
      "offset": [
        4548,
        4619
      ],
      "op": "DUP4",
      "path": "22"
    },
    "3368": {
      "fn": "Wizards.mint",
      "offset": [
        4763,
        4781
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x33FE"
    },
    "3371": {
      "fn": "Wizards.mint",
      "jump": "i",
      "offset": [
        4763,
        4781
      ],
      "op": "JUMP",
      "path": "22"
    },
    "3372": {
      "fn": "Wizards.mint",
      "offset": [
        4763,
        4781
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3373": {
      "fn": "Wizards.mint",
      "offset": [
        4758,
        4781
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xD37"
    },
    "3376": {
      "fn": "Wizards.mint",
      "offset": [
        4758,
        4781
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3377": {
      "fn": "Wizards.mint",
      "offset": [
        4758,
        4760
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x19"
    },
    "3379": {
      "fn": "Wizards.mint",
      "offset": [
        4758,
        4781
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x3412"
    },
    "3382": {
      "fn": "Wizards.mint",
      "jump": "i",
      "offset": [
        4758,
        4781
      ],
      "op": "JUMP",
      "path": "22"
    },
    "3383": {
      "fn": "Wizards.mint",
      "offset": [
        4758,
        4781
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3384": {
      "fn": "Wizards.mint",
      "offset": [
        4745,
        4781
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3385": {
      "op": "POP"
    },
    "3386": {
      "fn": "Wizards.mint",
      "offset": [
        4792,
        4812
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "3388": {
      "fn": "Wizards.mint",
      "offset": [
        4842,
        4844
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x1A"
    },
    "3390": {
      "fn": "Wizards.mint",
      "offset": [
        4821,
        4838
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xD48"
    },
    "3393": {
      "fn": "Wizards.mint",
      "offset": [
        4835,
        4838
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x64"
    },
    "3395": {
      "fn": "Wizards.mint",
      "offset": [
        4821,
        4834
      ],
      "op": "DUP6",
      "path": "22"
    },
    "3396": {
      "fn": "Wizards.mint",
      "offset": [
        4821,
        4838
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x33B0"
    },
    "3399": {
      "fn": "Wizards.mint",
      "jump": "i",
      "offset": [
        4821,
        4838
      ],
      "op": "JUMP",
      "path": "22"
    },
    "3400": {
      "fn": "Wizards.mint",
      "offset": [
        4821,
        4838
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3401": {
      "fn": "Wizards.mint",
      "offset": [
        4820,
        4844
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xD52"
    },
    "3404": {
      "fn": "Wizards.mint",
      "offset": [
        4820,
        4844
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "3405": {
      "fn": "Wizards.mint",
      "offset": [
        4820,
        4844
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3406": {
      "fn": "Wizards.mint",
      "offset": [
        4820,
        4844
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x33FE"
    },
    "3409": {
      "fn": "Wizards.mint",
      "jump": "i",
      "offset": [
        4820,
        4844
      ],
      "op": "JUMP",
      "path": "22"
    },
    "3410": {
      "fn": "Wizards.mint",
      "offset": [
        4820,
        4844
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3411": {
      "fn": "Wizards.mint",
      "offset": [
        4815,
        4844
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xD5D"
    },
    "3414": {
      "fn": "Wizards.mint",
      "offset": [
        4815,
        4844
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3415": {
      "fn": "Wizards.mint",
      "offset": [
        4815,
        4817
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x19"
    },
    "3417": {
      "fn": "Wizards.mint",
      "offset": [
        4815,
        4844
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x3412"
    },
    "3420": {
      "fn": "Wizards.mint",
      "jump": "i",
      "offset": [
        4815,
        4844
      ],
      "op": "JUMP",
      "path": "22"
    },
    "3421": {
      "fn": "Wizards.mint",
      "offset": [
        4815,
        4844
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3422": {
      "fn": "Wizards.mint",
      "offset": [
        4792,
        4844
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3423": {
      "op": "POP"
    },
    "3424": {
      "fn": "Wizards.mint",
      "offset": [
        4855,
        4877
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "3426": {
      "fn": "Wizards.mint",
      "offset": [
        4908,
        4910
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xA"
    },
    "3428": {
      "fn": "Wizards.mint",
      "offset": [
        4886,
        4902
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xD6D"
    },
    "3431": {
      "fn": "Wizards.mint",
      "offset": [
        4908,
        4910
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3432": {
      "fn": "Wizards.mint",
      "offset": [
        4886,
        4899
      ],
      "op": "DUP7",
      "path": "22"
    },
    "3433": {
      "fn": "Wizards.mint",
      "offset": [
        4886,
        4902
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x33B0"
    },
    "3436": {
      "fn": "Wizards.mint",
      "jump": "i",
      "offset": [
        4886,
        4902
      ],
      "op": "JUMP",
      "path": "22"
    },
    "3437": {
      "fn": "Wizards.mint",
      "offset": [
        4886,
        4902
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3438": {
      "fn": "Wizards.mint",
      "offset": [
        4886,
        4904
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xD78"
    },
    "3441": {
      "fn": "Wizards.mint",
      "offset": [
        4886,
        4904
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3442": {
      "fn": "Wizards.mint",
      "offset": [
        4903,
        4904
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "3444": {
      "fn": "Wizards.mint",
      "offset": [
        4886,
        4904
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x342A"
    },
    "3447": {
      "fn": "Wizards.mint",
      "jump": "i",
      "offset": [
        4886,
        4904
      ],
      "op": "JUMP",
      "path": "22"
    },
    "3448": {
      "fn": "Wizards.mint",
      "offset": [
        4886,
        4904
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3449": {
      "fn": "Wizards.mint",
      "offset": [
        4885,
        4910
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xD82"
    },
    "3452": {
      "fn": "Wizards.mint",
      "offset": [
        4885,
        4910
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "3453": {
      "fn": "Wizards.mint",
      "offset": [
        4885,
        4910
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3454": {
      "fn": "Wizards.mint",
      "offset": [
        4885,
        4910
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x33FE"
    },
    "3457": {
      "fn": "Wizards.mint",
      "jump": "i",
      "offset": [
        4885,
        4910
      ],
      "op": "JUMP",
      "path": "22"
    },
    "3458": {
      "fn": "Wizards.mint",
      "offset": [
        4885,
        4910
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3459": {
      "fn": "Wizards.mint",
      "offset": [
        4880,
        4910
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xD8D"
    },
    "3462": {
      "fn": "Wizards.mint",
      "offset": [
        4880,
        4910
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3463": {
      "fn": "Wizards.mint",
      "offset": [
        4880,
        4882
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xA"
    },
    "3465": {
      "fn": "Wizards.mint",
      "offset": [
        4880,
        4910
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x3412"
    },
    "3468": {
      "fn": "Wizards.mint",
      "jump": "i",
      "offset": [
        4880,
        4910
      ],
      "op": "JUMP",
      "path": "22"
    },
    "3469": {
      "fn": "Wizards.mint",
      "offset": [
        4880,
        4910
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3470": {
      "fn": "Wizards.mint",
      "offset": [
        4855,
        4910
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3471": {
      "op": "POP"
    },
    "3472": {
      "fn": "Wizards.mint",
      "offset": [
        4921,
        4934
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "3474": {
      "fn": "Wizards.mint",
      "offset": [
        4965,
        4967
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xA"
    },
    "3476": {
      "fn": "Wizards.mint",
      "offset": [
        4943,
        4959
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xD9D"
    },
    "3479": {
      "fn": "Wizards.mint",
      "offset": [
        4965,
        4967
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3480": {
      "fn": "Wizards.mint",
      "offset": [
        4943,
        4956
      ],
      "op": "DUP8",
      "path": "22"
    },
    "3481": {
      "fn": "Wizards.mint",
      "offset": [
        4943,
        4959
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x33B0"
    },
    "3484": {
      "fn": "Wizards.mint",
      "jump": "i",
      "offset": [
        4943,
        4959
      ],
      "op": "JUMP",
      "path": "22"
    },
    "3485": {
      "fn": "Wizards.mint",
      "offset": [
        4943,
        4959
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3486": {
      "fn": "Wizards.mint",
      "offset": [
        4943,
        4961
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xDA8"
    },
    "3489": {
      "fn": "Wizards.mint",
      "offset": [
        4943,
        4961
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3490": {
      "fn": "Wizards.mint",
      "offset": [
        4960,
        4961
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x5"
    },
    "3492": {
      "fn": "Wizards.mint",
      "offset": [
        4943,
        4961
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x342A"
    },
    "3495": {
      "fn": "Wizards.mint",
      "jump": "i",
      "offset": [
        4943,
        4961
      ],
      "op": "JUMP",
      "path": "22"
    },
    "3496": {
      "fn": "Wizards.mint",
      "offset": [
        4943,
        4961
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3497": {
      "fn": "Wizards.mint",
      "offset": [
        4942,
        4967
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xDB2"
    },
    "3500": {
      "fn": "Wizards.mint",
      "offset": [
        4942,
        4967
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "3501": {
      "fn": "Wizards.mint",
      "offset": [
        4942,
        4967
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3502": {
      "fn": "Wizards.mint",
      "offset": [
        4942,
        4967
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x33FE"
    },
    "3505": {
      "fn": "Wizards.mint",
      "jump": "i",
      "offset": [
        4942,
        4967
      ],
      "op": "JUMP",
      "path": "22"
    },
    "3506": {
      "fn": "Wizards.mint",
      "offset": [
        4942,
        4967
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3507": {
      "fn": "Wizards.mint",
      "offset": [
        4937,
        4967
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xDBD"
    },
    "3510": {
      "fn": "Wizards.mint",
      "offset": [
        4937,
        4967
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3511": {
      "fn": "Wizards.mint",
      "offset": [
        4937,
        4939
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xA"
    },
    "3513": {
      "fn": "Wizards.mint",
      "offset": [
        4937,
        4967
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x3412"
    },
    "3516": {
      "fn": "Wizards.mint",
      "jump": "i",
      "offset": [
        4937,
        4967
      ],
      "op": "JUMP",
      "path": "22"
    },
    "3517": {
      "fn": "Wizards.mint",
      "offset": [
        4937,
        4967
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3518": {
      "fn": "Wizards.mint",
      "offset": [
        4921,
        4967
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3519": {
      "op": "POP"
    },
    "3520": {
      "fn": "Wizards.mint",
      "offset": [
        4978,
        4993
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "3522": {
      "fn": "Wizards.mint",
      "offset": [
        5027,
        5028
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "3524": {
      "fn": "Wizards.mint",
      "offset": [
        5005,
        5021
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xDCE"
    },
    "3527": {
      "fn": "Wizards.mint",
      "offset": [
        5019,
        5021
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xA"
    },
    "3529": {
      "fn": "Wizards.mint",
      "offset": [
        5005,
        5018
      ],
      "op": "DUP9",
      "path": "22"
    },
    "3530": {
      "fn": "Wizards.mint",
      "offset": [
        5005,
        5021
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x33B0"
    },
    "3533": {
      "fn": "Wizards.mint",
      "jump": "i",
      "offset": [
        5005,
        5021
      ],
      "op": "JUMP",
      "path": "22"
    },
    "3534": {
      "fn": "Wizards.mint",
      "offset": [
        5005,
        5021
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3535": {
      "fn": "Wizards.mint",
      "offset": [
        5005,
        5023
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xDD9"
    },
    "3538": {
      "fn": "Wizards.mint",
      "offset": [
        5005,
        5023
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3539": {
      "fn": "Wizards.mint",
      "offset": [
        5022,
        5023
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x6"
    },
    "3541": {
      "fn": "Wizards.mint",
      "offset": [
        5005,
        5023
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x342A"
    },
    "3544": {
      "fn": "Wizards.mint",
      "jump": "i",
      "offset": [
        5005,
        5023
      ],
      "op": "JUMP",
      "path": "22"
    },
    "3545": {
      "fn": "Wizards.mint",
      "offset": [
        5005,
        5023
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3546": {
      "fn": "Wizards.mint",
      "offset": [
        5004,
        5028
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xDE3"
    },
    "3549": {
      "fn": "Wizards.mint",
      "offset": [
        5004,
        5028
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "3550": {
      "fn": "Wizards.mint",
      "offset": [
        5004,
        5028
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3551": {
      "fn": "Wizards.mint",
      "offset": [
        5004,
        5028
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x33FE"
    },
    "3554": {
      "fn": "Wizards.mint",
      "jump": "i",
      "offset": [
        5004,
        5028
      ],
      "op": "JUMP",
      "path": "22"
    },
    "3555": {
      "fn": "Wizards.mint",
      "offset": [
        5004,
        5028
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3556": {
      "fn": "Wizards.mint",
      "offset": [
        4996,
        5029
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x3"
    },
    "3558": {
      "fn": "Wizards.mint",
      "offset": [
        4996,
        5029
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3559": {
      "fn": "Wizards.mint",
      "offset": [
        4996,
        5029
      ],
      "op": "GT",
      "path": "22"
    },
    "3560": {
      "fn": "Wizards.mint",
      "offset": [
        4996,
        5029
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "3561": {
      "fn": "Wizards.mint",
      "offset": [
        4996,
        5029
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xDF4"
    },
    "3564": {
      "fn": "Wizards.mint",
      "offset": [
        4996,
        5029
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "3565": {
      "fn": "Wizards.mint",
      "offset": [
        4996,
        5029
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xDF4"
    },
    "3568": {
      "fn": "Wizards.mint",
      "offset": [
        4996,
        5029
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2BFF"
    },
    "3571": {
      "fn": "Wizards.mint",
      "jump": "i",
      "offset": [
        4996,
        5029
      ],
      "op": "JUMP",
      "path": "22"
    },
    "3572": {
      "fn": "Wizards.mint",
      "offset": [
        4996,
        5029
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3573": {
      "fn": "Wizards.mint",
      "offset": [
        4978,
        5029
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3574": {
      "fn": "Wizards.mint",
      "offset": [
        4978,
        5029
      ],
      "op": "POP",
      "path": "22"
    },
    "3575": {
      "fn": "Wizards.mint",
      "offset": [
        5042,
        5062
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "3577": {
      "fn": "Wizards.mint",
      "offset": [
        5066,
        5148
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "3579": {
      "fn": "Wizards.mint",
      "offset": [
        5066,
        5148
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "3580": {
      "fn": "Wizards.mint",
      "offset": [
        5066,
        5148
      ],
      "op": "DUP1",
      "path": "22"
    },
    "3581": {
      "fn": "Wizards.mint",
      "offset": [
        5066,
        5148
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1C0"
    },
    "3584": {
      "fn": "Wizards.mint",
      "offset": [
        5066,
        5148
      ],
      "op": "ADD",
      "path": "22"
    },
    "3585": {
      "fn": "Wizards.mint",
      "offset": [
        5066,
        5148
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "3587": {
      "fn": "Wizards.mint",
      "offset": [
        5066,
        5148
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "3588": {
      "fn": "Wizards.mint",
      "offset": [
        5066,
        5148
      ],
      "op": "DUP1",
      "path": "22"
    },
    "3589": {
      "fn": "Wizards.mint",
      "offset": [
        5072,
        5073
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x1"
    },
    "3591": {
      "fn": "Wizards.mint",
      "offset": [
        5066,
        5148
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3592": {
      "fn": "Wizards.mint",
      "offset": [
        5066,
        5148
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "3593": {
      "fn": "Wizards.mint",
      "offset": [
        5066,
        5148
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "3595": {
      "fn": "Wizards.mint",
      "offset": [
        5066,
        5148
      ],
      "op": "ADD",
      "path": "22"
    },
    "3596": {
      "fn": "Wizards.mint",
      "offset": [
        5075,
        5077
      ],
      "op": "DUP8",
      "path": "22"
    },
    "3597": {
      "fn": "Wizards.mint",
      "offset": [
        5066,
        5148
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3598": {
      "fn": "Wizards.mint",
      "offset": [
        5066,
        5148
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "3599": {
      "fn": "Wizards.mint",
      "offset": [
        5066,
        5148
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "3601": {
      "fn": "Wizards.mint",
      "offset": [
        5066,
        5148
      ],
      "op": "ADD",
      "path": "22"
    },
    "3602": {
      "fn": "Wizards.mint",
      "offset": [
        5079,
        5091
      ],
      "op": "DUP7",
      "path": "22"
    },
    "3603": {
      "fn": "Wizards.mint",
      "offset": [
        5066,
        5148
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3604": {
      "fn": "Wizards.mint",
      "offset": [
        5066,
        5148
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "3605": {
      "fn": "Wizards.mint",
      "offset": [
        5066,
        5148
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "3607": {
      "fn": "Wizards.mint",
      "offset": [
        5066,
        5148
      ],
      "op": "ADD",
      "path": "22"
    },
    "3608": {
      "fn": "Wizards.mint",
      "offset": [
        5093,
        5107
      ],
      "op": "DUP6",
      "path": "22"
    },
    "3609": {
      "fn": "Wizards.mint",
      "offset": [
        5066,
        5148
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3610": {
      "fn": "Wizards.mint",
      "offset": [
        5066,
        5148
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "3611": {
      "fn": "Wizards.mint",
      "offset": [
        5066,
        5148
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "3613": {
      "fn": "Wizards.mint",
      "offset": [
        5066,
        5148
      ],
      "op": "ADD",
      "path": "22"
    },
    "3614": {
      "fn": "Wizards.mint",
      "offset": [
        5109,
        5114
      ],
      "op": "DUP5",
      "path": "22"
    },
    "3615": {
      "fn": "Wizards.mint",
      "offset": [
        5066,
        5148
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3616": {
      "fn": "Wizards.mint",
      "offset": [
        5066,
        5148
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "3617": {
      "fn": "Wizards.mint",
      "offset": [
        5066,
        5148
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "3619": {
      "fn": "Wizards.mint",
      "offset": [
        5066,
        5148
      ],
      "op": "ADD",
      "path": "22"
    },
    "3620": {
      "fn": "Wizards.mint",
      "offset": [
        5116,
        5117
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "3622": {
      "fn": "Wizards.mint",
      "offset": [
        5066,
        5148
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3623": {
      "fn": "Wizards.mint",
      "offset": [
        5066,
        5148
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "3624": {
      "fn": "Wizards.mint",
      "offset": [
        5066,
        5148
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "3626": {
      "fn": "Wizards.mint",
      "offset": [
        5066,
        5148
      ],
      "op": "ADD",
      "path": "22"
    },
    "3627": {
      "fn": "Wizards.mint",
      "offset": [
        5119,
        5120
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "3629": {
      "fn": "Wizards.mint",
      "offset": [
        5066,
        5148
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3630": {
      "fn": "Wizards.mint",
      "offset": [
        5066,
        5148
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "3631": {
      "fn": "Wizards.mint",
      "offset": [
        5066,
        5148
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "3633": {
      "fn": "Wizards.mint",
      "offset": [
        5066,
        5148
      ],
      "op": "ADD",
      "path": "22"
    },
    "3634": {
      "fn": "Wizards.mint",
      "offset": [
        5122,
        5123
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "3636": {
      "fn": "Wizards.mint",
      "offset": [
        5066,
        5148
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3637": {
      "fn": "Wizards.mint",
      "offset": [
        5066,
        5148
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "3638": {
      "fn": "Wizards.mint",
      "offset": [
        5066,
        5148
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "3640": {
      "fn": "Wizards.mint",
      "offset": [
        5066,
        5148
      ],
      "op": "ADD",
      "path": "22"
    },
    "3641": {
      "fn": "Wizards.mint",
      "offset": [
        5125,
        5126
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "3643": {
      "fn": "Wizards.mint",
      "offset": [
        5066,
        5148
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3644": {
      "fn": "Wizards.mint",
      "offset": [
        5066,
        5148
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "3645": {
      "fn": "Wizards.mint",
      "offset": [
        5066,
        5148
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "3647": {
      "fn": "Wizards.mint",
      "offset": [
        5066,
        5148
      ],
      "op": "ADD",
      "path": "22"
    },
    "3648": {
      "fn": "Wizards.mint",
      "offset": [
        5128,
        5129
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "3650": {
      "fn": "Wizards.mint",
      "offset": [
        5066,
        5148
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3651": {
      "fn": "Wizards.mint",
      "offset": [
        5066,
        5148
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "3652": {
      "fn": "Wizards.mint",
      "offset": [
        5066,
        5148
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "3654": {
      "fn": "Wizards.mint",
      "offset": [
        5066,
        5148
      ],
      "op": "ADD",
      "path": "22"
    },
    "3655": {
      "fn": "Wizards.mint",
      "offset": [
        5131,
        5132
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "3657": {
      "fn": "Wizards.mint",
      "offset": [
        5066,
        5148
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3658": {
      "fn": "Wizards.mint",
      "offset": [
        5066,
        5148
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "3659": {
      "fn": "Wizards.mint",
      "offset": [
        5066,
        5148
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "3661": {
      "fn": "Wizards.mint",
      "offset": [
        5066,
        5148
      ],
      "op": "ADD",
      "path": "22"
    },
    "3662": {
      "fn": "Wizards.mint",
      "offset": [
        5134,
        5135
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "3664": {
      "fn": "Wizards.mint",
      "offset": [
        5066,
        5148
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3665": {
      "fn": "Wizards.mint",
      "offset": [
        5066,
        5148
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "3666": {
      "fn": "Wizards.mint",
      "offset": [
        5066,
        5148
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "3668": {
      "fn": "Wizards.mint",
      "offset": [
        5066,
        5148
      ],
      "op": "ADD",
      "path": "22"
    },
    "3669": {
      "fn": "Wizards.mint",
      "offset": [
        5137,
        5138
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "3671": {
      "fn": "Wizards.mint",
      "offset": [
        5066,
        5148
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3672": {
      "fn": "Wizards.mint",
      "offset": [
        5066,
        5148
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "3673": {
      "fn": "Wizards.mint",
      "offset": [
        5066,
        5148
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "3675": {
      "fn": "Wizards.mint",
      "offset": [
        5066,
        5148
      ],
      "op": "ADD",
      "path": "22"
    },
    "3676": {
      "fn": "Wizards.mint",
      "offset": [
        5140,
        5147
      ],
      "op": "DUP4",
      "path": "22"
    },
    "3677": {
      "fn": "Wizards.mint",
      "offset": [
        5066,
        5148
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x3"
    },
    "3679": {
      "fn": "Wizards.mint",
      "offset": [
        5066,
        5148
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3680": {
      "fn": "Wizards.mint",
      "offset": [
        5066,
        5148
      ],
      "op": "GT",
      "path": "22"
    },
    "3681": {
      "fn": "Wizards.mint",
      "offset": [
        5066,
        5148
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "3682": {
      "fn": "Wizards.mint",
      "offset": [
        5066,
        5148
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xE6D"
    },
    "3685": {
      "fn": "Wizards.mint",
      "offset": [
        5066,
        5148
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "3686": {
      "fn": "Wizards.mint",
      "offset": [
        5066,
        5148
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xE6D"
    },
    "3689": {
      "fn": "Wizards.mint",
      "offset": [
        5066,
        5148
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2BFF"
    },
    "3692": {
      "fn": "Wizards.mint",
      "jump": "i",
      "offset": [
        5066,
        5148
      ],
      "op": "JUMP",
      "path": "22"
    },
    "3693": {
      "fn": "Wizards.mint",
      "offset": [
        5066,
        5148
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3694": {
      "fn": "Wizards.mint",
      "offset": [
        5066,
        5148
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3695": {
      "fn": "Wizards.mint",
      "offset": [
        5066,
        5148
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "3696": {
      "fn": "Wizards.mint",
      "offset": [
        5042,
        5148
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3697": {
      "op": "POP"
    },
    "3698": {
      "fn": "Wizards.mint",
      "offset": [
        5042,
        5148
      ],
      "op": "DUP1",
      "path": "22"
    },
    "3699": {
      "fn": "Wizards.mint",
      "offset": [
        5159,
        5173
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 18,
      "value": "0xB"
    },
    "3701": {
      "fn": "Wizards.mint",
      "offset": [
        5159,
        5190
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "3703": {
      "fn": "Wizards.mint",
      "offset": [
        5174,
        5187
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xE7F"
    },
    "3706": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1716,
        1726
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x8"
    },
    "3708": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1716,
        1733
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "3709": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1716,
        1733
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3710": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1628,
        1741
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3711": {
      "fn": "Wizards.mint",
      "offset": [
        5174,
        5187
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3712": {
      "fn": "Wizards.mint",
      "offset": [
        5174,
        5189
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xE8A"
    },
    "3715": {
      "fn": "Wizards.mint",
      "offset": [
        5174,
        5189
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3716": {
      "fn": "Wizards.mint",
      "offset": [
        5188,
        5189
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x1"
    },
    "3718": {
      "fn": "Wizards.mint",
      "offset": [
        5174,
        5189
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x3412"
    },
    "3721": {
      "fn": "Wizards.mint",
      "jump": "i",
      "offset": [
        5174,
        5189
      ],
      "op": "JUMP",
      "path": "22"
    },
    "3722": {
      "fn": "Wizards.mint",
      "offset": [
        5174,
        5189
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3723": {
      "fn": "Wizards.mint",
      "offset": [
        5159,
        5190
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3724": {
      "fn": "Wizards.mint",
      "offset": [
        5159,
        5190
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "3725": {
      "fn": "Wizards.mint",
      "offset": [
        5159,
        5190
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "3727": {
      "fn": "Wizards.mint",
      "offset": [
        5159,
        5190
      ],
      "op": "ADD",
      "path": "22"
    },
    "3728": {
      "fn": "Wizards.mint",
      "offset": [
        5159,
        5190
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3729": {
      "fn": "Wizards.mint",
      "offset": [
        5159,
        5190
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3730": {
      "fn": "Wizards.mint",
      "offset": [
        5159,
        5190
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "3731": {
      "fn": "Wizards.mint",
      "offset": [
        5159,
        5190
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "3733": {
      "fn": "Wizards.mint",
      "offset": [
        5159,
        5190
      ],
      "op": "ADD",
      "path": "22"
    },
    "3734": {
      "fn": "Wizards.mint",
      "offset": [
        5159,
        5190
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "3736": {
      "fn": "Wizards.mint",
      "offset": [
        5159,
        5190
      ],
      "op": "KECCAK256",
      "path": "22"
    },
    "3737": {
      "fn": "Wizards.mint",
      "offset": [
        5159,
        5200
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "3739": {
      "fn": "Wizards.mint",
      "offset": [
        5159,
        5200
      ],
      "op": "DUP3",
      "path": "22"
    },
    "3740": {
      "fn": "Wizards.mint",
      "offset": [
        5159,
        5200
      ],
      "op": "ADD",
      "path": "22"
    },
    "3741": {
      "fn": "Wizards.mint",
      "offset": [
        5159,
        5200
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "3742": {
      "fn": "Wizards.mint",
      "offset": [
        5159,
        5200
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3743": {
      "fn": "Wizards.mint",
      "offset": [
        5159,
        5200
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "3745": {
      "fn": "Wizards.mint",
      "offset": [
        5159,
        5200
      ],
      "op": "ADD",
      "path": "22"
    },
    "3746": {
      "fn": "Wizards.mint",
      "offset": [
        5159,
        5200
      ],
      "op": "SSTORE",
      "path": "22"
    },
    "3747": {
      "fn": "Wizards.mint",
      "offset": [
        5159,
        5200
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "3749": {
      "fn": "Wizards.mint",
      "offset": [
        5159,
        5200
      ],
      "op": "DUP3",
      "path": "22"
    },
    "3750": {
      "fn": "Wizards.mint",
      "offset": [
        5159,
        5200
      ],
      "op": "ADD",
      "path": "22"
    },
    "3751": {
      "fn": "Wizards.mint",
      "offset": [
        5159,
        5200
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "3752": {
      "fn": "Wizards.mint",
      "offset": [
        5159,
        5200
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3753": {
      "fn": "Wizards.mint",
      "offset": [
        5159,
        5200
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x1"
    },
    "3755": {
      "fn": "Wizards.mint",
      "offset": [
        5159,
        5200
      ],
      "op": "ADD",
      "path": "22"
    },
    "3756": {
      "fn": "Wizards.mint",
      "offset": [
        5159,
        5200
      ],
      "op": "SSTORE",
      "path": "22"
    },
    "3757": {
      "fn": "Wizards.mint",
      "offset": [
        5159,
        5200
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "3759": {
      "fn": "Wizards.mint",
      "offset": [
        5159,
        5200
      ],
      "op": "DUP3",
      "path": "22"
    },
    "3760": {
      "fn": "Wizards.mint",
      "offset": [
        5159,
        5200
      ],
      "op": "ADD",
      "path": "22"
    },
    "3761": {
      "fn": "Wizards.mint",
      "offset": [
        5159,
        5200
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "3762": {
      "fn": "Wizards.mint",
      "offset": [
        5159,
        5200
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3763": {
      "fn": "Wizards.mint",
      "offset": [
        5159,
        5200
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x2"
    },
    "3765": {
      "fn": "Wizards.mint",
      "offset": [
        5159,
        5200
      ],
      "op": "ADD",
      "path": "22"
    },
    "3766": {
      "fn": "Wizards.mint",
      "offset": [
        5159,
        5200
      ],
      "op": "SSTORE",
      "path": "22"
    },
    "3767": {
      "fn": "Wizards.mint",
      "offset": [
        5159,
        5200
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x60"
    },
    "3769": {
      "fn": "Wizards.mint",
      "offset": [
        5159,
        5200
      ],
      "op": "DUP3",
      "path": "22"
    },
    "3770": {
      "fn": "Wizards.mint",
      "offset": [
        5159,
        5200
      ],
      "op": "ADD",
      "path": "22"
    },
    "3771": {
      "fn": "Wizards.mint",
      "offset": [
        5159,
        5200
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "3772": {
      "fn": "Wizards.mint",
      "offset": [
        5159,
        5200
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3773": {
      "fn": "Wizards.mint",
      "offset": [
        5159,
        5200
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x3"
    },
    "3775": {
      "fn": "Wizards.mint",
      "offset": [
        5159,
        5200
      ],
      "op": "ADD",
      "path": "22"
    },
    "3776": {
      "fn": "Wizards.mint",
      "offset": [
        5159,
        5200
      ],
      "op": "SSTORE",
      "path": "22"
    },
    "3777": {
      "fn": "Wizards.mint",
      "offset": [
        5159,
        5200
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x80"
    },
    "3779": {
      "fn": "Wizards.mint",
      "offset": [
        5159,
        5200
      ],
      "op": "DUP3",
      "path": "22"
    },
    "3780": {
      "fn": "Wizards.mint",
      "offset": [
        5159,
        5200
      ],
      "op": "ADD",
      "path": "22"
    },
    "3781": {
      "fn": "Wizards.mint",
      "offset": [
        5159,
        5200
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "3782": {
      "fn": "Wizards.mint",
      "offset": [
        5159,
        5200
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3783": {
      "fn": "Wizards.mint",
      "offset": [
        5159,
        5200
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "3785": {
      "fn": "Wizards.mint",
      "offset": [
        5159,
        5200
      ],
      "op": "ADD",
      "path": "22"
    },
    "3786": {
      "fn": "Wizards.mint",
      "offset": [
        5159,
        5200
      ],
      "op": "SSTORE",
      "path": "22"
    },
    "3787": {
      "fn": "Wizards.mint",
      "offset": [
        5159,
        5200
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xA0"
    },
    "3789": {
      "fn": "Wizards.mint",
      "offset": [
        5159,
        5200
      ],
      "op": "DUP3",
      "path": "22"
    },
    "3790": {
      "fn": "Wizards.mint",
      "offset": [
        5159,
        5200
      ],
      "op": "ADD",
      "path": "22"
    },
    "3791": {
      "fn": "Wizards.mint",
      "offset": [
        5159,
        5200
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "3792": {
      "fn": "Wizards.mint",
      "offset": [
        5159,
        5200
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3793": {
      "fn": "Wizards.mint",
      "offset": [
        5159,
        5200
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x5"
    },
    "3795": {
      "fn": "Wizards.mint",
      "offset": [
        5159,
        5200
      ],
      "op": "ADD",
      "path": "22"
    },
    "3796": {
      "fn": "Wizards.mint",
      "offset": [
        5159,
        5200
      ],
      "op": "SSTORE",
      "path": "22"
    },
    "3797": {
      "fn": "Wizards.mint",
      "offset": [
        5159,
        5200
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xC0"
    },
    "3799": {
      "fn": "Wizards.mint",
      "offset": [
        5159,
        5200
      ],
      "op": "DUP3",
      "path": "22"
    },
    "3800": {
      "fn": "Wizards.mint",
      "offset": [
        5159,
        5200
      ],
      "op": "ADD",
      "path": "22"
    },
    "3801": {
      "fn": "Wizards.mint",
      "offset": [
        5159,
        5200
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "3802": {
      "fn": "Wizards.mint",
      "offset": [
        5159,
        5200
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3803": {
      "fn": "Wizards.mint",
      "offset": [
        5159,
        5200
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x6"
    },
    "3805": {
      "fn": "Wizards.mint",
      "offset": [
        5159,
        5200
      ],
      "op": "ADD",
      "path": "22"
    },
    "3806": {
      "fn": "Wizards.mint",
      "offset": [
        5159,
        5200
      ],
      "op": "SSTORE",
      "path": "22"
    },
    "3807": {
      "fn": "Wizards.mint",
      "offset": [
        5159,
        5200
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xE0"
    },
    "3809": {
      "fn": "Wizards.mint",
      "offset": [
        5159,
        5200
      ],
      "op": "DUP3",
      "path": "22"
    },
    "3810": {
      "fn": "Wizards.mint",
      "offset": [
        5159,
        5200
      ],
      "op": "ADD",
      "path": "22"
    },
    "3811": {
      "fn": "Wizards.mint",
      "offset": [
        5159,
        5200
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "3812": {
      "fn": "Wizards.mint",
      "offset": [
        5159,
        5200
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3813": {
      "fn": "Wizards.mint",
      "offset": [
        5159,
        5200
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x7"
    },
    "3815": {
      "fn": "Wizards.mint",
      "offset": [
        5159,
        5200
      ],
      "op": "ADD",
      "path": "22"
    },
    "3816": {
      "fn": "Wizards.mint",
      "offset": [
        5159,
        5200
      ],
      "op": "SSTORE",
      "path": "22"
    },
    "3817": {
      "fn": "Wizards.mint",
      "offset": [
        5159,
        5200
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x100"
    },
    "3820": {
      "fn": "Wizards.mint",
      "offset": [
        5159,
        5200
      ],
      "op": "DUP3",
      "path": "22"
    },
    "3821": {
      "fn": "Wizards.mint",
      "offset": [
        5159,
        5200
      ],
      "op": "ADD",
      "path": "22"
    },
    "3822": {
      "fn": "Wizards.mint",
      "offset": [
        5159,
        5200
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "3823": {
      "fn": "Wizards.mint",
      "offset": [
        5159,
        5200
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3824": {
      "fn": "Wizards.mint",
      "offset": [
        5159,
        5200
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x8"
    },
    "3826": {
      "fn": "Wizards.mint",
      "offset": [
        5159,
        5200
      ],
      "op": "ADD",
      "path": "22"
    },
    "3827": {
      "fn": "Wizards.mint",
      "offset": [
        5159,
        5200
      ],
      "op": "SSTORE",
      "path": "22"
    },
    "3828": {
      "fn": "Wizards.mint",
      "offset": [
        5159,
        5200
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x120"
    },
    "3831": {
      "fn": "Wizards.mint",
      "offset": [
        5159,
        5200
      ],
      "op": "DUP3",
      "path": "22"
    },
    "3832": {
      "fn": "Wizards.mint",
      "offset": [
        5159,
        5200
      ],
      "op": "ADD",
      "path": "22"
    },
    "3833": {
      "fn": "Wizards.mint",
      "offset": [
        5159,
        5200
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "3834": {
      "fn": "Wizards.mint",
      "offset": [
        5159,
        5200
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3835": {
      "fn": "Wizards.mint",
      "offset": [
        5159,
        5200
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x9"
    },
    "3837": {
      "fn": "Wizards.mint",
      "offset": [
        5159,
        5200
      ],
      "op": "ADD",
      "path": "22"
    },
    "3838": {
      "fn": "Wizards.mint",
      "offset": [
        5159,
        5200
      ],
      "op": "SSTORE",
      "path": "22"
    },
    "3839": {
      "fn": "Wizards.mint",
      "offset": [
        5159,
        5200
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x140"
    },
    "3842": {
      "fn": "Wizards.mint",
      "offset": [
        5159,
        5200
      ],
      "op": "DUP3",
      "path": "22"
    },
    "3843": {
      "fn": "Wizards.mint",
      "offset": [
        5159,
        5200
      ],
      "op": "ADD",
      "path": "22"
    },
    "3844": {
      "fn": "Wizards.mint",
      "offset": [
        5159,
        5200
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "3845": {
      "fn": "Wizards.mint",
      "offset": [
        5159,
        5200
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3846": {
      "fn": "Wizards.mint",
      "offset": [
        5159,
        5200
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xA"
    },
    "3848": {
      "fn": "Wizards.mint",
      "offset": [
        5159,
        5200
      ],
      "op": "ADD",
      "path": "22"
    },
    "3849": {
      "fn": "Wizards.mint",
      "offset": [
        5159,
        5200
      ],
      "op": "SSTORE",
      "path": "22"
    },
    "3850": {
      "fn": "Wizards.mint",
      "offset": [
        5159,
        5200
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x160"
    },
    "3853": {
      "fn": "Wizards.mint",
      "offset": [
        5159,
        5200
      ],
      "op": "DUP3",
      "path": "22"
    },
    "3854": {
      "fn": "Wizards.mint",
      "offset": [
        5159,
        5200
      ],
      "op": "ADD",
      "path": "22"
    },
    "3855": {
      "fn": "Wizards.mint",
      "offset": [
        5159,
        5200
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "3856": {
      "fn": "Wizards.mint",
      "offset": [
        5159,
        5200
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3857": {
      "fn": "Wizards.mint",
      "offset": [
        5159,
        5200
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xB"
    },
    "3859": {
      "fn": "Wizards.mint",
      "offset": [
        5159,
        5200
      ],
      "op": "ADD",
      "path": "22"
    },
    "3860": {
      "fn": "Wizards.mint",
      "offset": [
        5159,
        5200
      ],
      "op": "SSTORE",
      "path": "22"
    },
    "3861": {
      "fn": "Wizards.mint",
      "offset": [
        5159,
        5200
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x180"
    },
    "3864": {
      "fn": "Wizards.mint",
      "offset": [
        5159,
        5200
      ],
      "op": "DUP3",
      "path": "22"
    },
    "3865": {
      "fn": "Wizards.mint",
      "offset": [
        5159,
        5200
      ],
      "op": "ADD",
      "path": "22"
    },
    "3866": {
      "fn": "Wizards.mint",
      "offset": [
        5159,
        5200
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "3867": {
      "fn": "Wizards.mint",
      "offset": [
        5159,
        5200
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3868": {
      "fn": "Wizards.mint",
      "offset": [
        5159,
        5200
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xC"
    },
    "3870": {
      "fn": "Wizards.mint",
      "offset": [
        5159,
        5200
      ],
      "op": "ADD",
      "path": "22"
    },
    "3871": {
      "fn": "Wizards.mint",
      "offset": [
        5159,
        5200
      ],
      "op": "SSTORE",
      "path": "22"
    },
    "3872": {
      "fn": "Wizards.mint",
      "offset": [
        5159,
        5200
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1A0"
    },
    "3875": {
      "fn": "Wizards.mint",
      "offset": [
        5159,
        5200
      ],
      "op": "DUP3",
      "path": "22"
    },
    "3876": {
      "fn": "Wizards.mint",
      "offset": [
        5159,
        5200
      ],
      "op": "ADD",
      "path": "22"
    },
    "3877": {
      "fn": "Wizards.mint",
      "offset": [
        5159,
        5200
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "3878": {
      "fn": "Wizards.mint",
      "offset": [
        5159,
        5200
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3879": {
      "fn": "Wizards.mint",
      "offset": [
        5159,
        5200
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xD"
    },
    "3881": {
      "fn": "Wizards.mint",
      "offset": [
        5159,
        5200
      ],
      "op": "ADD",
      "path": "22"
    },
    "3882": {
      "fn": "Wizards.mint",
      "offset": [
        5159,
        5200
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "3884": {
      "fn": "Wizards.mint",
      "offset": [
        5159,
        5200
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x100"
    },
    "3887": {
      "fn": "Wizards.mint",
      "offset": [
        5159,
        5200
      ],
      "op": "EXP",
      "path": "22"
    },
    "3888": {
      "fn": "Wizards.mint",
      "offset": [
        5159,
        5200
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3889": {
      "fn": "Wizards.mint",
      "offset": [
        5159,
        5200
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "3890": {
      "fn": "Wizards.mint",
      "offset": [
        5159,
        5200
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3891": {
      "fn": "Wizards.mint",
      "offset": [
        5159,
        5200
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xFF"
    },
    "3893": {
      "fn": "Wizards.mint",
      "offset": [
        5159,
        5200
      ],
      "op": "MUL",
      "path": "22"
    },
    "3894": {
      "fn": "Wizards.mint",
      "offset": [
        5159,
        5200
      ],
      "op": "NOT",
      "path": "22"
    },
    "3895": {
      "fn": "Wizards.mint",
      "offset": [
        5159,
        5200
      ],
      "op": "AND",
      "path": "22"
    },
    "3896": {
      "fn": "Wizards.mint",
      "offset": [
        5159,
        5200
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3897": {
      "fn": "Wizards.mint",
      "offset": [
        5159,
        5200
      ],
      "op": "DUP4",
      "path": "22"
    },
    "3898": {
      "fn": "Wizards.mint",
      "offset": [
        5159,
        5200
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x3"
    },
    "3900": {
      "fn": "Wizards.mint",
      "offset": [
        5159,
        5200
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3901": {
      "fn": "Wizards.mint",
      "offset": [
        5159,
        5200
      ],
      "op": "GT",
      "path": "22"
    },
    "3902": {
      "fn": "Wizards.mint",
      "offset": [
        5159,
        5200
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "3903": {
      "fn": "Wizards.mint",
      "offset": [
        5159,
        5200
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xF4A"
    },
    "3906": {
      "fn": "Wizards.mint",
      "offset": [
        5159,
        5200
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "3907": {
      "fn": "Wizards.mint",
      "offset": [
        5159,
        5200
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xF4A"
    },
    "3910": {
      "fn": "Wizards.mint",
      "offset": [
        5159,
        5200
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2BFF"
    },
    "3913": {
      "fn": "Wizards.mint",
      "jump": "i",
      "offset": [
        5159,
        5200
      ],
      "op": "JUMP",
      "path": "22"
    },
    "3914": {
      "fn": "Wizards.mint",
      "offset": [
        5159,
        5200
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3915": {
      "fn": "Wizards.mint",
      "offset": [
        5159,
        5200
      ],
      "op": "MUL",
      "path": "22"
    },
    "3916": {
      "fn": "Wizards.mint",
      "offset": [
        5159,
        5200
      ],
      "op": "OR",
      "path": "22"
    },
    "3917": {
      "fn": "Wizards.mint",
      "offset": [
        5159,
        5200
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3918": {
      "fn": "Wizards.mint",
      "offset": [
        5159,
        5200
      ],
      "op": "SSTORE",
      "path": "22"
    },
    "3919": {
      "fn": "Wizards.mint",
      "offset": [
        5159,
        5200
      ],
      "op": "POP",
      "path": "22"
    },
    "3920": {
      "fn": "Wizards.mint",
      "offset": [
        5159,
        5200
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3921": {
      "fn": "Wizards.mint",
      "offset": [
        5159,
        5200
      ],
      "op": "POP",
      "path": "22"
    },
    "3922": {
      "fn": "Wizards.mint",
      "offset": [
        5159,
        5200
      ],
      "op": "POP",
      "path": "22"
    },
    "3923": {
      "fn": "Wizards.mint",
      "offset": [
        5211,
        5250
      ],
      "op": "PUSH2",
      "path": "22",
      "statement": 19,
      "value": "0xF6F"
    },
    "3926": {
      "fn": "Wizards.mint",
      "offset": [
        5221,
        5231
      ],
      "op": "CALLER",
      "path": "22"
    },
    "3927": {
      "fn": "Wizards.mint",
      "offset": [
        5233,
        5246
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xF5F"
    },
    "3930": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1716,
        1726
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x8"
    },
    "3932": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1716,
        1733
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "3933": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1716,
        1733
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3934": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1628,
        1741
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3935": {
      "fn": "Wizards.mint",
      "offset": [
        5233,
        5246
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3936": {
      "fn": "Wizards.mint",
      "offset": [
        5233,
        5248
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xF6A"
    },
    "3939": {
      "fn": "Wizards.mint",
      "offset": [
        5233,
        5248
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3940": {
      "fn": "Wizards.mint",
      "offset": [
        5247,
        5248
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x1"
    },
    "3942": {
      "fn": "Wizards.mint",
      "offset": [
        5233,
        5248
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x3412"
    },
    "3945": {
      "fn": "Wizards.mint",
      "jump": "i",
      "offset": [
        5233,
        5248
      ],
      "op": "JUMP",
      "path": "22"
    },
    "3946": {
      "fn": "Wizards.mint",
      "offset": [
        5233,
        5248
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3947": {
      "fn": "Wizards.mint",
      "offset": [
        5211,
        5220
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2062"
    },
    "3950": {
      "fn": "Wizards.mint",
      "jump": "i",
      "offset": [
        5211,
        5250
      ],
      "op": "JUMP",
      "path": "22"
    },
    "3951": {
      "fn": "Wizards.mint",
      "offset": [
        5211,
        5250
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3952": {
      "fn": "Wizards.mint",
      "offset": [
        4318,
        5279
      ],
      "op": "POP",
      "path": "22"
    },
    "3953": {
      "fn": "Wizards.mint",
      "offset": [
        4318,
        5279
      ],
      "op": "POP",
      "path": "22"
    },
    "3954": {
      "fn": "Wizards.mint",
      "offset": [
        4318,
        5279
      ],
      "op": "POP",
      "path": "22"
    },
    "3955": {
      "fn": "Wizards.mint",
      "offset": [
        4318,
        5279
      ],
      "op": "POP",
      "path": "22"
    },
    "3956": {
      "fn": "Wizards.mint",
      "offset": [
        4318,
        5279
      ],
      "op": "POP",
      "path": "22"
    },
    "3957": {
      "fn": "Wizards.mint",
      "offset": [
        4318,
        5279
      ],
      "op": "POP",
      "path": "22"
    },
    "3958": {
      "fn": "Wizards.mint",
      "offset": [
        4318,
        5279
      ],
      "op": "POP",
      "path": "22"
    },
    "3959": {
      "fn": "Wizards.mint",
      "jump": "o",
      "offset": [
        4293,
        5279
      ],
      "op": "JUMP",
      "path": "22"
    },
    "3960": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4974,
        5313
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3961": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5169,
        5210
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 20,
      "value": "0xF82"
    },
    "3964": {
      "fn": "Context._msgSender",
      "offset": [
        679,
        689
      ],
      "op": "CALLER",
      "path": "3"
    },
    "3965": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5202,
        5209
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3966": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5169,
        5187
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2080"
    },
    "3969": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        5169,
        5210
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3970": {
      "branch": 144,
      "fn": "ERC721.transferFrom",
      "offset": [
        5169,
        5210
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3971": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5161,
        5264
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xF9E"
    },
    "3974": {
      "branch": 144,
      "fn": "ERC721.transferFrom",
      "offset": [
        5161,
        5264
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3975": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5161,
        5264
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3977": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5161,
        5264
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "3978": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3982": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3984": {
      "op": "SHL"
    },
    "3985": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5161,
        5264
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3986": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5161,
        5264
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3987": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5161,
        5264
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "3989": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5161,
        5264
      ],
      "op": "ADD",
      "path": "6"
    },
    "3990": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5161,
        5264
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xB50"
    },
    "3993": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5161,
        5264
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "3994": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5161,
        5264
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3449"
    },
    "3997": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        5161,
        5264
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3998": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5161,
        5264
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3999": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5277,
        5305
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 21,
      "value": "0xC85"
    },
    "4002": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5287,
        5291
      ],
      "op": "DUP4",
      "path": "6"
    },
    "4003": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5293,
        5295
      ],
      "op": "DUP4",
      "path": "6"
    },
    "4004": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5297,
        5304
      ],
      "op": "DUP4",
      "path": "6"
    },
    "4005": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5277,
        5286
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2173"
    },
    "4008": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        5277,
        5305
      ],
      "op": "JUMP",
      "path": "6"
    },
    "4009": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1296,
        1552
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "4010": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1393,
        1400
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "4012": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1429,
        1452
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 22,
      "value": "0xFB4"
    },
    "4015": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1446,
        1451
      ],
      "op": "DUP4",
      "path": "7"
    },
    "4016": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1429,
        1445
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x11F2"
    },
    "4019": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "jump": "i",
      "offset": [
        1429,
        1452
      ],
      "op": "JUMP",
      "path": "7"
    },
    "4020": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1429,
        1452
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "4021": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1421,
        1426
      ],
      "op": "DUP3",
      "path": "7"
    },
    "4022": {
      "branch": 154,
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1421,
        1452
      ],
      "op": "LT",
      "path": "7"
    },
    "4023": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1413,
        1500
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1016"
    },
    "4026": {
      "branch": 154,
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1413,
        1500
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "4027": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1413,
        1500
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "4029": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1413,
        1500
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "4030": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4034": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4036": {
      "op": "SHL"
    },
    "4037": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1413,
        1500
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4038": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1413,
        1500
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4039": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4041": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1413,
        1500
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "4043": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1413,
        1500
      ],
      "op": "DUP3",
      "path": "7"
    },
    "4044": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1413,
        1500
      ],
      "op": "ADD",
      "path": "7"
    },
    "4045": {
      "op": "MSTORE"
    },
    "4046": {
      "op": "PUSH1",
      "value": "0x2B"
    },
    "4048": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4050": {
      "op": "DUP3"
    },
    "4051": {
      "op": "ADD"
    },
    "4052": {
      "op": "MSTORE"
    },
    "4053": {
      "op": "PUSH32",
      "value": "0x455243373231456E756D657261626C653A206F776E657220696E646578206F75"
    },
    "4086": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4088": {
      "op": "DUP3"
    },
    "4089": {
      "op": "ADD"
    },
    "4090": {
      "op": "MSTORE"
    },
    "4091": {
      "op": "PUSH11",
      "value": "0x74206F6620626F756E6473"
    },
    "4103": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "4105": {
      "op": "SHL"
    },
    "4106": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4108": {
      "op": "DUP3"
    },
    "4109": {
      "op": "ADD"
    },
    "4110": {
      "op": "MSTORE"
    },
    "4111": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4113": {
      "op": "ADD"
    },
    "4114": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1413,
        1500
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xB50"
    },
    "4117": {
      "op": "JUMP"
    },
    "4118": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1413,
        1500
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "4119": {
      "op": "POP"
    },
    "4120": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4122": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4124": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4126": {
      "op": "SHL"
    },
    "4127": {
      "op": "SUB"
    },
    "4128": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1537
      ],
      "op": "SWAP2",
      "path": "7",
      "statement": 23
    },
    "4129": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1537
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4130": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1537
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "4131": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1537
      ],
      "op": "AND",
      "path": "7"
    },
    "4132": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1537
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "4134": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1537
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4135": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1537
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4136": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1537
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4137": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1530
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x6"
    },
    "4139": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1537
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "4141": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1537
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4142": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1537
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4143": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1537
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4144": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1537
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "4146": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1537
      ],
      "op": "DUP1",
      "path": "7"
    },
    "4147": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1537
      ],
      "op": "DUP4",
      "path": "7"
    },
    "4148": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1537
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "4149": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1544
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "4150": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1544
      ],
      "op": "DUP4",
      "path": "7"
    },
    "4151": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1544
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4152": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1544
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "4153": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1544
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4154": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1544
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4155": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1544
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "4156": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1544
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "4157": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1518,
        1544
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4158": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "jump": "o",
      "offset": [
        1296,
        1552
      ],
      "op": "JUMP",
      "path": "7"
    },
    "4159": {
      "fn": "Wizards.modifyContractSettings",
      "offset": [
        14300,
        14825
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "4160": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0xA"
    },
    "4162": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "4163": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4165": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4167": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4169": {
      "op": "SHL"
    },
    "4170": {
      "op": "SUB"
    },
    "4171": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "AND",
      "path": "8"
    },
    "4172": {
      "fn": "Context._msgSender",
      "offset": [
        679,
        689
      ],
      "op": "CALLER",
      "path": "3"
    },
    "4173": {
      "offset": [
        1221,
        1244
      ],
      "op": "EQ",
      "path": "8"
    },
    "4174": {
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1069"
    },
    "4177": {
      "offset": [
        1213,
        1281
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "4178": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "4180": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "4181": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4185": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4187": {
      "op": "SHL"
    },
    "4188": {
      "offset": [
        1213,
        1281
      ],
      "op": "DUP2",
      "path": "8"
    },
    "4189": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "4190": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "4192": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "ADD",
      "path": "8"
    },
    "4193": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xB50"
    },
    "4196": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "4197": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x349A"
    },
    "4200": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1213,
        1281
      ],
      "op": "JUMP",
      "path": "8"
    },
    "4201": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "4202": {
      "fn": "Wizards.modifyContractSettings",
      "offset": [
        14514,
        14543
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 24,
      "value": "0x16"
    },
    "4204": {
      "fn": "Wizards.modifyContractSettings",
      "offset": [
        14514,
        14559
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1075"
    },
    "4207": {
      "fn": "Wizards.modifyContractSettings",
      "offset": [
        14546,
        14559
      ],
      "op": "DUP7",
      "path": "22"
    },
    "4208": {
      "fn": "Wizards.modifyContractSettings",
      "offset": [
        14514,
        14543
      ],
      "op": "DUP3",
      "path": "22"
    },
    "4209": {
      "fn": "Wizards.modifyContractSettings",
      "offset": [
        14514,
        14559
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x351D"
    },
    "4212": {
      "fn": "Wizards.modifyContractSettings",
      "jump": "i",
      "offset": [
        14514,
        14559
      ],
      "op": "JUMP",
      "path": "22"
    },
    "4213": {
      "fn": "Wizards.modifyContractSettings",
      "offset": [
        14514,
        14559
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "4214": {
      "op": "POP"
    },
    "4215": {
      "fn": "Wizards.modifyContractSettings",
      "offset": [
        14570,
        14600
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 25,
      "value": "0x13"
    },
    "4217": {
      "fn": "Wizards.modifyContractSettings",
      "offset": [
        14570,
        14617
      ],
      "op": "SWAP4",
      "path": "22"
    },
    "4218": {
      "fn": "Wizards.modifyContractSettings",
      "offset": [
        14570,
        14617
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4219": {
      "fn": "Wizards.modifyContractSettings",
      "offset": [
        14570,
        14617
      ],
      "op": "SWAP4",
      "path": "22"
    },
    "4220": {
      "fn": "Wizards.modifyContractSettings",
      "offset": [
        14570,
        14617
      ],
      "op": "SSTORE",
      "path": "22"
    },
    "4221": {
      "fn": "Wizards.modifyContractSettings",
      "offset": [
        14628,
        14668
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 26,
      "value": "0x11"
    },
    "4223": {
      "fn": "Wizards.modifyContractSettings",
      "offset": [
        14628,
        14695
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "4224": {
      "fn": "Wizards.modifyContractSettings",
      "offset": [
        14628,
        14695
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4225": {
      "fn": "Wizards.modifyContractSettings",
      "offset": [
        14628,
        14695
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "4226": {
      "fn": "Wizards.modifyContractSettings",
      "offset": [
        14628,
        14695
      ],
      "op": "SSTORE",
      "path": "22"
    },
    "4227": {
      "fn": "Wizards.modifyContractSettings",
      "offset": [
        14570,
        14586
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xE"
    },
    "4229": {
      "fn": "Wizards.modifyContractSettings",
      "offset": [
        14706,
        14743
      ],
      "op": "SSTORE",
      "path": "22",
      "statement": 27
    },
    "4230": {
      "fn": "Wizards.modifyContractSettings",
      "offset": [
        14754,
        14785
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 28,
      "value": "0xF"
    },
    "4232": {
      "fn": "Wizards.modifyContractSettings",
      "offset": [
        14754,
        14803
      ],
      "op": "SSTORE",
      "path": "22"
    },
    "4233": {
      "op": "POP"
    },
    "4234": {
      "fn": "Wizards.modifyContractSettings",
      "jump": "o",
      "offset": [
        14300,
        14825
      ],
      "op": "JUMP",
      "path": "22"
    },
    "4235": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5384,
        5569
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4236": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5522,
        5561
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 29,
      "value": "0xC85"
    },
    "4239": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5539,
        5543
      ],
      "op": "DUP4",
      "path": "6"
    },
    "4240": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5545,
        5547
      ],
      "op": "DUP4",
      "path": "6"
    },
    "4241": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5549,
        5556
      ],
      "op": "DUP4",
      "path": "6"
    },
    "4242": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5522,
        5561
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4244": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5522,
        5561
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "4245": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5522,
        5561
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4246": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5522,
        5561
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "4248": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5522,
        5561
      ],
      "op": "ADD",
      "path": "6"
    },
    "4249": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5522,
        5561
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4251": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5522,
        5561
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4252": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5522,
        5561
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4253": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5522,
        5561
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "4255": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5522,
        5561
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4256": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5522,
        5561
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4257": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5522,
        5561
      ],
      "op": "POP",
      "path": "6"
    },
    "4258": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5522,
        5538
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1905"
    },
    "4261": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5522,
        5561
      ],
      "op": "JUMP",
      "path": "6"
    },
    "4262": {
      "fn": "Wizards.crush",
      "offset": [
        9329,
        9390
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "4263": {
      "offset": [
        15170,
        15174
      ],
      "op": "ADDRESS",
      "path": "22"
    },
    "4264": {
      "offset": [
        15148,
        15158
      ],
      "op": "CALLER",
      "path": "22"
    },
    "4265": {
      "offset": [
        15148,
        15175
      ],
      "op": "SUB",
      "path": "22"
    },
    "4266": {
      "offset": [
        15140,
        15193
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x10E5"
    },
    "4269": {
      "offset": [
        15140,
        15193
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "4270": {
      "fn": "Wizards.crush",
      "offset": [
        15140,
        15193
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "4272": {
      "fn": "Wizards.crush",
      "offset": [
        15140,
        15193
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "4273": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4277": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4279": {
      "op": "SHL"
    },
    "4280": {
      "offset": [
        15140,
        15193
      ],
      "op": "DUP2",
      "path": "22"
    },
    "4281": {
      "fn": "Wizards.crush",
      "offset": [
        15140,
        15193
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "4282": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4284": {
      "offset": [
        15140,
        15193
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "4286": {
      "fn": "Wizards.crush",
      "offset": [
        15140,
        15193
      ],
      "op": "DUP3",
      "path": "22"
    },
    "4287": {
      "fn": "Wizards.crush",
      "offset": [
        15140,
        15193
      ],
      "op": "ADD",
      "path": "22"
    },
    "4288": {
      "op": "MSTORE"
    },
    "4289": {
      "op": "PUSH1",
      "value": "0xD"
    },
    "4291": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4293": {
      "op": "DUP3"
    },
    "4294": {
      "op": "ADD"
    },
    "4295": {
      "op": "MSTORE"
    },
    "4296": {
      "op": "PUSH13",
      "value": "0x37B7363C903B32B934B334B2B9"
    },
    "4310": {
      "op": "PUSH1",
      "value": "0x99"
    },
    "4312": {
      "op": "SHL"
    },
    "4313": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4315": {
      "op": "DUP3"
    },
    "4316": {
      "op": "ADD"
    },
    "4317": {
      "op": "MSTORE"
    },
    "4318": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4320": {
      "op": "ADD"
    },
    "4321": {
      "offset": [
        15140,
        15193
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xB50"
    },
    "4324": {
      "op": "JUMP"
    },
    "4325": {
      "offset": [
        15140,
        15193
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "4326": {
      "fn": "Wizards.crush",
      "offset": [
        9329,
        9390
      ],
      "op": "POP",
      "path": "22"
    },
    "4327": {
      "fn": "Wizards.crush",
      "jump": "o",
      "offset": [
        9329,
        9390
      ],
      "op": "JUMP",
      "path": "22"
    },
    "4328": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1818,
        2051
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "4329": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1893,
        1900
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "4331": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1929,
        1959
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 30,
      "value": "0x10F3"
    },
    "4334": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1716,
        1726
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x8"
    },
    "4336": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1716,
        1733
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "4337": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1716,
        1733
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4338": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1628,
        1741
      ],
      "op": "JUMP",
      "path": "7"
    },
    "4339": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1929,
        1959
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "4340": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1921,
        1926
      ],
      "op": "DUP3",
      "path": "7"
    },
    "4341": {
      "branch": 155,
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1921,
        1959
      ],
      "op": "LT",
      "path": "7"
    },
    "4342": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1913,
        2008
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1156"
    },
    "4345": {
      "branch": 155,
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1913,
        2008
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "4346": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1913,
        2008
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "4348": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1913,
        2008
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "4349": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4353": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4355": {
      "op": "SHL"
    },
    "4356": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1913,
        2008
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4357": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1913,
        2008
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4358": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4360": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1913,
        2008
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "4362": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1913,
        2008
      ],
      "op": "DUP3",
      "path": "7"
    },
    "4363": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1913,
        2008
      ],
      "op": "ADD",
      "path": "7"
    },
    "4364": {
      "op": "MSTORE"
    },
    "4365": {
      "op": "PUSH1",
      "value": "0x2C"
    },
    "4367": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4369": {
      "op": "DUP3"
    },
    "4370": {
      "op": "ADD"
    },
    "4371": {
      "op": "MSTORE"
    },
    "4372": {
      "op": "PUSH32",
      "value": "0x455243373231456E756D657261626C653A20676C6F62616C20696E646578206F"
    },
    "4405": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4407": {
      "op": "DUP3"
    },
    "4408": {
      "op": "ADD"
    },
    "4409": {
      "op": "MSTORE"
    },
    "4410": {
      "op": "PUSH12",
      "value": "0x7574206F6620626F756E6473"
    },
    "4423": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4425": {
      "op": "SHL"
    },
    "4426": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4428": {
      "op": "DUP3"
    },
    "4429": {
      "op": "ADD"
    },
    "4430": {
      "op": "MSTORE"
    },
    "4431": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4433": {
      "op": "ADD"
    },
    "4434": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1913,
        2008
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xB50"
    },
    "4437": {
      "op": "JUMP"
    },
    "4438": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1913,
        2008
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "4439": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2026,
        2036
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 31,
      "value": "0x8"
    },
    "4441": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2037,
        2042
      ],
      "op": "DUP3",
      "path": "7"
    },
    "4442": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2026,
        2043
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4443": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2026,
        2043
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "4444": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2026,
        2043
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4445": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2026,
        2043
      ],
      "op": "LT",
      "path": "7"
    },
    "4446": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2026,
        2043
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1169"
    },
    "4449": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2026,
        2043
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "4450": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2026,
        2043
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1169"
    },
    "4453": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2026,
        2043
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x35DD"
    },
    "4456": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "jump": "i",
      "offset": [
        2026,
        2043
      ],
      "op": "JUMP",
      "path": "7"
    },
    "4457": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2026,
        2043
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "4458": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2026,
        2043
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4459": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2026,
        2043
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "4461": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2026,
        2043
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4462": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2026,
        2043
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "4464": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2026,
        2043
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "4466": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2026,
        2043
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "4467": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2026,
        2043
      ],
      "op": "ADD",
      "path": "7"
    },
    "4468": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2026,
        2043
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "4469": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2019,
        2043
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4470": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2019,
        2043
      ],
      "op": "POP",
      "path": "7"
    },
    "4471": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1818,
        2051
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "4472": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1818,
        2051
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4473": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1818,
        2051
      ],
      "op": "POP",
      "path": "7"
    },
    "4474": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "jump": "o",
      "offset": [
        1818,
        2051
      ],
      "op": "JUMP",
      "path": "7"
    },
    "4475": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2219,
        2458
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4476": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2291,
        2298
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "4478": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2327,
        2343
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4479": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2327,
        2343
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4480": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2327,
        2343
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4481": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2327,
        2334
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2"
    },
    "4483": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2327,
        2343
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "4485": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2327,
        2343
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4486": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2327,
        2343
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4488": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2327,
        2343
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4489": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2327,
        2343
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "4490": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2327,
        2343
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "4491": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4493": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4495": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4497": {
      "op": "SHL"
    },
    "4498": {
      "op": "SUB"
    },
    "4499": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2327,
        2343
      ],
      "op": "AND",
      "path": "6"
    },
    "4500": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2327,
        2343
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4501": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2354,
        2427
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 32,
      "value": "0x7C1"
    },
    "4504": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2354,
        2427
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "4505": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2354,
        2427
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4507": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2354,
        2427
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "4508": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4512": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4514": {
      "op": "SHL"
    },
    "4515": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2354,
        2427
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4516": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2354,
        2427
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4517": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4519": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2354,
        2427
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "4521": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2354,
        2427
      ],
      "op": "DUP3",
      "path": "6"
    },
    "4522": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2354,
        2427
      ],
      "op": "ADD",
      "path": "6"
    },
    "4523": {
      "op": "MSTORE"
    },
    "4524": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "4526": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4528": {
      "op": "DUP3"
    },
    "4529": {
      "op": "ADD"
    },
    "4530": {
      "op": "MSTORE"
    },
    "4531": {
      "op": "PUSH32",
      "value": "0x4552433732313A206F776E657220717565727920666F72206E6F6E6578697374"
    },
    "4564": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4566": {
      "op": "DUP3"
    },
    "4567": {
      "op": "ADD"
    },
    "4568": {
      "op": "MSTORE"
    },
    "4569": {
      "op": "PUSH9",
      "value": "0x32B73A103A37B5B2B7"
    },
    "4579": {
      "op": "PUSH1",
      "value": "0xB9"
    },
    "4581": {
      "op": "SHL"
    },
    "4582": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4584": {
      "op": "DUP3"
    },
    "4585": {
      "op": "ADD"
    },
    "4586": {
      "op": "MSTORE"
    },
    "4587": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4589": {
      "op": "ADD"
    },
    "4590": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2354,
        2427
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xB50"
    },
    "4593": {
      "op": "JUMP"
    },
    "4594": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1949,
        2157
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4595": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2021,
        2028
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "4597": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4599": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4601": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4603": {
      "op": "SHL"
    },
    "4604": {
      "op": "SUB"
    },
    "4605": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2049,
        2068
      ],
      "op": "DUP3",
      "path": "6",
      "statement": 33
    },
    "4606": {
      "branch": 145,
      "fn": "ERC721.balanceOf",
      "offset": [
        2049,
        2068
      ],
      "op": "AND",
      "path": "6"
    },
    "4607": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2041,
        2115
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x125D"
    },
    "4610": {
      "branch": 145,
      "fn": "ERC721.balanceOf",
      "offset": [
        2041,
        2115
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "4611": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2041,
        2115
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4613": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2041,
        2115
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "4614": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4618": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4620": {
      "op": "SHL"
    },
    "4621": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2041,
        2115
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4622": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2041,
        2115
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4623": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4625": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2041,
        2115
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "4627": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2041,
        2115
      ],
      "op": "DUP3",
      "path": "6"
    },
    "4628": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2041,
        2115
      ],
      "op": "ADD",
      "path": "6"
    },
    "4629": {
      "op": "MSTORE"
    },
    "4630": {
      "op": "PUSH1",
      "value": "0x2A"
    },
    "4632": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4634": {
      "op": "DUP3"
    },
    "4635": {
      "op": "ADD"
    },
    "4636": {
      "op": "MSTORE"
    },
    "4637": {
      "op": "PUSH32",
      "value": "0x4552433732313A2062616C616E636520717565727920666F7220746865207A65"
    },
    "4670": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4672": {
      "op": "DUP3"
    },
    "4673": {
      "op": "ADD"
    },
    "4674": {
      "op": "MSTORE"
    },
    "4675": {
      "op": "PUSH10",
      "value": "0x726F2061646472657373"
    },
    "4686": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "4688": {
      "op": "SHL"
    },
    "4689": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4691": {
      "op": "DUP3"
    },
    "4692": {
      "op": "ADD"
    },
    "4693": {
      "op": "MSTORE"
    },
    "4694": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4696": {
      "op": "ADD"
    },
    "4697": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2041,
        2115
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xB50"
    },
    "4700": {
      "op": "JUMP"
    },
    "4701": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2041,
        2115
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4702": {
      "op": "POP"
    },
    "4703": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4705": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4707": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4709": {
      "op": "SHL"
    },
    "4710": {
      "op": "SUB"
    },
    "4711": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2133,
        2149
      ],
      "op": "AND",
      "path": "6",
      "statement": 34
    },
    "4712": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2133,
        2149
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "4714": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2133,
        2149
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4715": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2133,
        2149
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4716": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2133,
        2149
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4717": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2133,
        2142
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x3"
    },
    "4719": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2133,
        2149
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "4721": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2133,
        2149
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4722": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2133,
        2149
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4724": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2133,
        2149
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4725": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2133,
        2149
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "4726": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2133,
        2149
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "4727": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2133,
        2149
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4728": {
      "fn": "ERC721.balanceOf",
      "jump": "o",
      "offset": [
        1949,
        2157
      ],
      "op": "JUMP",
      "path": "6"
    },
    "4729": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "4730": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0xA"
    },
    "4732": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "4733": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4735": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4737": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4739": {
      "op": "SHL"
    },
    "4740": {
      "op": "SUB"
    },
    "4741": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "AND",
      "path": "8"
    },
    "4742": {
      "fn": "Context._msgSender",
      "offset": [
        679,
        689
      ],
      "op": "CALLER",
      "path": "3"
    },
    "4743": {
      "offset": [
        1221,
        1244
      ],
      "op": "EQ",
      "path": "8"
    },
    "4744": {
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x12A3"
    },
    "4747": {
      "offset": [
        1213,
        1281
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "4748": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "4750": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "4751": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4755": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4757": {
      "op": "SHL"
    },
    "4758": {
      "offset": [
        1213,
        1281
      ],
      "op": "DUP2",
      "path": "8"
    },
    "4759": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "4760": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "4762": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "ADD",
      "path": "8"
    },
    "4763": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xB50"
    },
    "4766": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "4767": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x349A"
    },
    "4770": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1213,
        1281
      ],
      "op": "JUMP",
      "path": "8"
    },
    "4771": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "4772": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1717,
        1738
      ],
      "op": "PUSH2",
      "path": "8",
      "statement": 35,
      "value": "0x12AD"
    },
    "4775": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1735,
        1736
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "4777": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1717,
        1726
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x231E"
    },
    "4780": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1717,
        1738
      ],
      "op": "JUMP",
      "path": "8"
    },
    "4781": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1717,
        1738
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "4782": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        1652,
        1746
      ],
      "op": "JUMP",
      "path": "8"
    },
    "4783": {
      "fn": "Wizards.initiate",
      "offset": [
        5354,
        5934
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "4784": {
      "fn": "Wizards.initiate",
      "offset": [
        5439,
        5449
      ],
      "op": "CALLER",
      "path": "22",
      "statement": 36
    },
    "4785": {
      "fn": "Wizards.initiate",
      "offset": [
        5418,
        5435
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x12B9"
    },
    "4788": {
      "fn": "Wizards.initiate",
      "offset": [
        5426,
        5434
      ],
      "op": "DUP3",
      "path": "22"
    },
    "4789": {
      "fn": "Wizards.initiate",
      "offset": [
        5418,
        5425
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x117B"
    },
    "4792": {
      "fn": "Wizards.initiate",
      "jump": "i",
      "offset": [
        5418,
        5435
      ],
      "op": "JUMP",
      "path": "22"
    },
    "4793": {
      "fn": "Wizards.initiate",
      "offset": [
        5418,
        5435
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "4794": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4796": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4798": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4800": {
      "op": "SHL"
    },
    "4801": {
      "op": "SUB"
    },
    "4802": {
      "fn": "Wizards.initiate",
      "offset": [
        5418,
        5449
      ],
      "op": "AND",
      "path": "22"
    },
    "4803": {
      "branch": 131,
      "fn": "Wizards.initiate",
      "offset": [
        5418,
        5449
      ],
      "op": "EQ",
      "path": "22"
    },
    "4804": {
      "fn": "Wizards.initiate",
      "offset": [
        5410,
        5467
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x12FF"
    },
    "4807": {
      "branch": 131,
      "fn": "Wizards.initiate",
      "offset": [
        5410,
        5467
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "4808": {
      "fn": "Wizards.initiate",
      "offset": [
        5410,
        5467
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "4810": {
      "fn": "Wizards.initiate",
      "offset": [
        5410,
        5467
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "4811": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4815": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4817": {
      "op": "SHL"
    },
    "4818": {
      "fn": "Wizards.initiate",
      "offset": [
        5410,
        5467
      ],
      "op": "DUP2",
      "path": "22"
    },
    "4819": {
      "fn": "Wizards.initiate",
      "offset": [
        5410,
        5467
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "4820": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4822": {
      "fn": "Wizards.initiate",
      "offset": [
        5410,
        5467
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "4824": {
      "fn": "Wizards.initiate",
      "offset": [
        5410,
        5467
      ],
      "op": "DUP3",
      "path": "22"
    },
    "4825": {
      "fn": "Wizards.initiate",
      "offset": [
        5410,
        5467
      ],
      "op": "ADD",
      "path": "22"
    },
    "4826": {
      "op": "MSTORE"
    },
    "4827": {
      "op": "PUSH1",
      "value": "0xD"
    },
    "4829": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4831": {
      "op": "DUP3"
    },
    "4832": {
      "op": "ADD"
    },
    "4833": {
      "op": "MSTORE"
    },
    "4834": {
      "op": "PUSH13",
      "value": "0x36BAB9BA1031329037BBB732B9"
    },
    "4848": {
      "op": "PUSH1",
      "value": "0x99"
    },
    "4850": {
      "op": "SHL"
    },
    "4851": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4853": {
      "op": "DUP3"
    },
    "4854": {
      "op": "ADD"
    },
    "4855": {
      "op": "MSTORE"
    },
    "4856": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4858": {
      "op": "ADD"
    },
    "4859": {
      "fn": "Wizards.initiate",
      "offset": [
        5410,
        5467
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xB50"
    },
    "4862": {
      "op": "JUMP"
    },
    "4863": {
      "fn": "Wizards.initiate",
      "offset": [
        5410,
        5467
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "4864": {
      "fn": "Wizards.initiate",
      "offset": [
        5486,
        5510
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 37,
      "value": "0x0"
    },
    "4866": {
      "fn": "Wizards.initiate",
      "offset": [
        5486,
        5510
      ],
      "op": "DUP2",
      "path": "22"
    },
    "4867": {
      "fn": "Wizards.initiate",
      "offset": [
        5486,
        5510
      ],
      "op": "DUP2",
      "path": "22"
    },
    "4868": {
      "fn": "Wizards.initiate",
      "offset": [
        5486,
        5510
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "4869": {
      "fn": "Wizards.initiate",
      "offset": [
        5486,
        5500
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xB"
    },
    "4871": {
      "fn": "Wizards.initiate",
      "offset": [
        5486,
        5510
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "4873": {
      "fn": "Wizards.initiate",
      "offset": [
        5486,
        5510
      ],
      "op": "DUP2",
      "path": "22"
    },
    "4874": {
      "fn": "Wizards.initiate",
      "offset": [
        5486,
        5510
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4875": {
      "fn": "Wizards.initiate",
      "offset": [
        5486,
        5510
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "4876": {
      "fn": "Wizards.initiate",
      "offset": [
        5486,
        5510
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "4878": {
      "fn": "Wizards.initiate",
      "offset": [
        5486,
        5510
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4879": {
      "fn": "Wizards.initiate",
      "offset": [
        5486,
        5510
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "4880": {
      "fn": "Wizards.initiate",
      "offset": [
        5486,
        5510
      ],
      "op": "KECCAK256",
      "path": "22"
    },
    "4881": {
      "fn": "Wizards.initiate",
      "offset": [
        5486,
        5530
      ],
      "op": "ADD",
      "path": "22"
    },
    "4882": {
      "fn": "Wizards.initiate",
      "offset": [
        5486,
        5530
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "4883": {
      "branch": 132,
      "fn": "Wizards.initiate",
      "offset": [
        5486,
        5535
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "4884": {
      "fn": "Wizards.initiate",
      "offset": [
        5478,
        5557
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1353"
    },
    "4887": {
      "branch": 132,
      "fn": "Wizards.initiate",
      "offset": [
        5478,
        5557
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "4888": {
      "fn": "Wizards.initiate",
      "offset": [
        5478,
        5557
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "4890": {
      "fn": "Wizards.initiate",
      "offset": [
        5478,
        5557
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "4891": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4895": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4897": {
      "op": "SHL"
    },
    "4898": {
      "fn": "Wizards.initiate",
      "offset": [
        5478,
        5557
      ],
      "op": "DUP2",
      "path": "22"
    },
    "4899": {
      "fn": "Wizards.initiate",
      "offset": [
        5478,
        5557
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "4900": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4902": {
      "fn": "Wizards.initiate",
      "offset": [
        5478,
        5557
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "4904": {
      "fn": "Wizards.initiate",
      "offset": [
        5478,
        5557
      ],
      "op": "DUP3",
      "path": "22"
    },
    "4905": {
      "fn": "Wizards.initiate",
      "offset": [
        5478,
        5557
      ],
      "op": "ADD",
      "path": "22"
    },
    "4906": {
      "op": "MSTORE"
    },
    "4907": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "4909": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4911": {
      "op": "DUP3"
    },
    "4912": {
      "op": "ADD"
    },
    "4913": {
      "op": "MSTORE"
    },
    "4914": {
      "op": "PUSH17",
      "value": "0x185B1C9958591E481A5B9A5D1A585D1959"
    },
    "4932": {
      "op": "PUSH1",
      "value": "0x7A"
    },
    "4934": {
      "op": "SHL"
    },
    "4935": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4937": {
      "op": "DUP3"
    },
    "4938": {
      "op": "ADD"
    },
    "4939": {
      "op": "MSTORE"
    },
    "4940": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4942": {
      "op": "ADD"
    },
    "4943": {
      "fn": "Wizards.initiate",
      "offset": [
        5478,
        5557
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xB50"
    },
    "4946": {
      "op": "JUMP"
    },
    "4947": {
      "fn": "Wizards.initiate",
      "offset": [
        5478,
        5557
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "4948": {
      "fn": "Wizards.initiate",
      "offset": [
        5653,
        5674
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "4950": {
      "fn": "Wizards.initiate",
      "offset": [
        5677,
        5701
      ],
      "op": "DUP2",
      "path": "22"
    },
    "4951": {
      "fn": "Wizards.initiate",
      "offset": [
        5677,
        5701
      ],
      "op": "DUP2",
      "path": "22"
    },
    "4952": {
      "fn": "Wizards.initiate",
      "offset": [
        5677,
        5701
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "4953": {
      "fn": "Wizards.initiate",
      "offset": [
        5677,
        5691
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xB"
    },
    "4955": {
      "fn": "Wizards.initiate",
      "offset": [
        5677,
        5701
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "4957": {
      "fn": "Wizards.initiate",
      "offset": [
        5677,
        5701
      ],
      "op": "DUP2",
      "path": "22"
    },
    "4958": {
      "fn": "Wizards.initiate",
      "offset": [
        5677,
        5701
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4959": {
      "fn": "Wizards.initiate",
      "offset": [
        5677,
        5701
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "4960": {
      "fn": "Wizards.initiate",
      "offset": [
        5677,
        5701
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "4962": {
      "fn": "Wizards.initiate",
      "offset": [
        5677,
        5701
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4963": {
      "fn": "Wizards.initiate",
      "offset": [
        5677,
        5701
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "4964": {
      "fn": "Wizards.initiate",
      "offset": [
        5677,
        5701
      ],
      "op": "KECCAK256",
      "path": "22"
    },
    "4965": {
      "fn": "Wizards.initiate",
      "offset": [
        5742,
        5757
      ],
      "op": "TIMESTAMP",
      "path": "22",
      "statement": 38
    },
    "4966": {
      "fn": "Wizards.initiate",
      "offset": [
        5712,
        5739
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "4967": {
      "fn": "Wizards.initiate",
      "offset": [
        5712,
        5739
      ],
      "op": "DUP2",
      "path": "22"
    },
    "4968": {
      "fn": "Wizards.initiate",
      "offset": [
        5712,
        5739
      ],
      "op": "ADD",
      "path": "22"
    },
    "4969": {
      "fn": "Wizards.initiate",
      "offset": [
        5712,
        5757
      ],
      "op": "DUP3",
      "path": "22"
    },
    "4970": {
      "fn": "Wizards.initiate",
      "offset": [
        5712,
        5757
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4971": {
      "fn": "Wizards.initiate",
      "offset": [
        5712,
        5757
      ],
      "op": "SSTORE",
      "path": "22"
    },
    "4972": {
      "fn": "Wizards.initiate",
      "offset": [
        5820,
        5860
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 39,
      "value": "0x11"
    },
    "4974": {
      "fn": "Wizards.initiate",
      "offset": [
        5820,
        5860
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "4975": {
      "fn": "Wizards.initiate",
      "offset": [
        5677,
        5701
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4976": {
      "fn": "Wizards.initiate",
      "offset": [
        5677,
        5701
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "4977": {
      "fn": "Wizards.initiate",
      "offset": [
        5802,
        5860
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x137A"
    },
    "4980": {
      "fn": "Wizards.initiate",
      "offset": [
        5802,
        5860
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "4981": {
      "fn": "Wizards.initiate",
      "offset": [
        5820,
        5860
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4982": {
      "fn": "Wizards.initiate",
      "offset": [
        5802,
        5860
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x3412"
    },
    "4985": {
      "fn": "Wizards.initiate",
      "jump": "i",
      "offset": [
        5802,
        5860
      ],
      "op": "JUMP",
      "path": "22"
    },
    "4986": {
      "fn": "Wizards.initiate",
      "offset": [
        5802,
        5860
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "4987": {
      "fn": "Wizards.initiate",
      "offset": [
        5768,
        5799
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xC"
    },
    "4989": {
      "fn": "Wizards.initiate",
      "offset": [
        5768,
        5799
      ],
      "op": "DUP3",
      "path": "22"
    },
    "4990": {
      "fn": "Wizards.initiate",
      "offset": [
        5768,
        5799
      ],
      "op": "ADD",
      "path": "22"
    },
    "4991": {
      "fn": "Wizards.initiate",
      "offset": [
        5768,
        5860
      ],
      "op": "SSTORE",
      "path": "22"
    },
    "4992": {
      "fn": "Wizards.initiate",
      "offset": [
        5878,
        5926
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 40,
      "value": "0x40"
    },
    "4994": {
      "fn": "Wizards.initiate",
      "offset": [
        5878,
        5926
      ],
      "op": "DUP1",
      "path": "22"
    },
    "4995": {
      "fn": "Wizards.initiate",
      "offset": [
        5878,
        5926
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "4996": {
      "fn": "Wizards.initiate",
      "offset": [
        5888,
        5898
      ],
      "op": "CALLER",
      "path": "22"
    },
    "4997": {
      "op": "DUP2"
    },
    "4998": {
      "op": "MSTORE"
    },
    "4999": {
      "fn": "Wizards.initiate",
      "offset": [
        5910,
        5925
      ],
      "op": "TIMESTAMP",
      "path": "22"
    },
    "5000": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5002": {
      "op": "DUP3"
    },
    "5003": {
      "op": "ADD"
    },
    "5004": {
      "op": "MSTORE"
    },
    "5005": {
      "fn": "Wizards.initiate",
      "offset": [
        5900,
        5908
      ],
      "op": "DUP4",
      "path": "22"
    },
    "5006": {
      "fn": "Wizards.initiate",
      "offset": [
        5900,
        5908
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "5007": {
      "fn": "Wizards.initiate",
      "offset": [
        5878,
        5926
      ],
      "op": "PUSH32",
      "path": "22",
      "value": "0x1782B66BBE30900EE88FEAB2F2CD676D136386CC51CDF73F6CAE8B1DA253DDF7"
    },
    "5040": {
      "fn": "Wizards.initiate",
      "offset": [
        5878,
        5926
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "5041": {
      "op": "ADD"
    },
    "5042": {
      "fn": "Wizards.initiate",
      "offset": [
        5878,
        5926
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "5044": {
      "fn": "Wizards.initiate",
      "offset": [
        5878,
        5926
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "5045": {
      "fn": "Wizards.initiate",
      "offset": [
        5878,
        5926
      ],
      "op": "DUP1",
      "path": "22"
    },
    "5046": {
      "fn": "Wizards.initiate",
      "offset": [
        5878,
        5926
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "5047": {
      "fn": "Wizards.initiate",
      "offset": [
        5878,
        5926
      ],
      "op": "SUB",
      "path": "22"
    },
    "5048": {
      "fn": "Wizards.initiate",
      "offset": [
        5878,
        5926
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5049": {
      "fn": "Wizards.initiate",
      "offset": [
        5878,
        5926
      ],
      "op": "LOG2",
      "path": "22"
    },
    "5050": {
      "fn": "Wizards.initiate",
      "offset": [
        5399,
        5934
      ],
      "op": "POP",
      "path": "22"
    },
    "5051": {
      "fn": "Wizards.initiate",
      "offset": [
        5354,
        5934
      ],
      "op": "POP",
      "path": "22"
    },
    "5052": {
      "fn": "Wizards.initiate",
      "jump": "o",
      "offset": [
        5354,
        5934
      ],
      "op": "JUMP",
      "path": "22"
    },
    "5053": {
      "fn": "Wizards.reportBattle",
      "offset": [
        7195,
        8114
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "5054": {
      "offset": [
        15348,
        15355
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xC"
    },
    "5056": {
      "fn": "Wizards.reportBattle",
      "offset": [
        15348,
        15355
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "5057": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5059": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5061": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5063": {
      "op": "SHL"
    },
    "5064": {
      "op": "SUB"
    },
    "5065": {
      "offset": [
        15348,
        15355
      ],
      "op": "AND",
      "path": "22"
    },
    "5066": {
      "offset": [
        15334,
        15344
      ],
      "op": "CALLER",
      "path": "22"
    },
    "5067": {
      "offset": [
        15334,
        15355
      ],
      "op": "EQ",
      "path": "22"
    },
    "5068": {
      "offset": [
        15312,
        15419
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1423"
    },
    "5071": {
      "offset": [
        15312,
        15419
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "5072": {
      "fn": "Wizards.reportBattle",
      "offset": [
        15312,
        15419
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "5074": {
      "fn": "Wizards.reportBattle",
      "offset": [
        15312,
        15419
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "5075": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5079": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5081": {
      "op": "SHL"
    },
    "5082": {
      "offset": [
        15312,
        15419
      ],
      "op": "DUP2",
      "path": "22"
    },
    "5083": {
      "fn": "Wizards.reportBattle",
      "offset": [
        15312,
        15419
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "5084": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5086": {
      "offset": [
        15312,
        15419
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "5088": {
      "fn": "Wizards.reportBattle",
      "offset": [
        15312,
        15419
      ],
      "op": "DUP3",
      "path": "22"
    },
    "5089": {
      "fn": "Wizards.reportBattle",
      "offset": [
        15312,
        15419
      ],
      "op": "ADD",
      "path": "22"
    },
    "5090": {
      "op": "MSTORE"
    },
    "5091": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5093": {
      "op": "DUP1"
    },
    "5094": {
      "op": "DUP3"
    },
    "5095": {
      "op": "ADD"
    },
    "5096": {
      "op": "MSTORE"
    },
    "5097": {
      "op": "PUSH32",
      "value": "0x4F6E6C7920626174746C65722063616E2063616C6C20746869732066756E6374"
    },
    "5130": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5132": {
      "op": "DUP3"
    },
    "5133": {
      "op": "ADD"
    },
    "5134": {
      "op": "MSTORE"
    },
    "5135": {
      "op": "PUSH4",
      "value": "0x34B7B717"
    },
    "5140": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "5142": {
      "op": "SHL"
    },
    "5143": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5145": {
      "op": "DUP3"
    },
    "5146": {
      "op": "ADD"
    },
    "5147": {
      "op": "MSTORE"
    },
    "5148": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "5150": {
      "op": "ADD"
    },
    "5151": {
      "offset": [
        15312,
        15419
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xB50"
    },
    "5154": {
      "op": "JUMP"
    },
    "5155": {
      "offset": [
        15312,
        15419
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "5156": {
      "fn": "Wizards.reportBattle",
      "offset": [
        7373,
        7384
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x1"
    },
    "5158": {
      "fn": "Wizards.reportBattle",
      "offset": [
        7362,
        7369
      ],
      "op": "DUP4",
      "path": "22"
    },
    "5159": {
      "fn": "Wizards.reportBattle",
      "offset": [
        7362,
        7384
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x3"
    },
    "5161": {
      "fn": "Wizards.reportBattle",
      "offset": [
        7362,
        7384
      ],
      "op": "DUP2",
      "path": "22"
    },
    "5162": {
      "fn": "Wizards.reportBattle",
      "offset": [
        7362,
        7384
      ],
      "op": "GT",
      "path": "22"
    },
    "5163": {
      "fn": "Wizards.reportBattle",
      "offset": [
        7362,
        7384
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "5164": {
      "fn": "Wizards.reportBattle",
      "offset": [
        7362,
        7384
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1437"
    },
    "5167": {
      "fn": "Wizards.reportBattle",
      "offset": [
        7362,
        7384
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "5168": {
      "fn": "Wizards.reportBattle",
      "offset": [
        7362,
        7384
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1437"
    },
    "5171": {
      "fn": "Wizards.reportBattle",
      "offset": [
        7362,
        7384
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2BFF"
    },
    "5174": {
      "fn": "Wizards.reportBattle",
      "jump": "i",
      "offset": [
        7362,
        7384
      ],
      "op": "JUMP",
      "path": "22"
    },
    "5175": {
      "fn": "Wizards.reportBattle",
      "offset": [
        7362,
        7384
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "5176": {
      "branch": 133,
      "fn": "Wizards.reportBattle",
      "offset": [
        7362,
        7384
      ],
      "op": "SUB",
      "path": "22"
    },
    "5177": {
      "fn": "Wizards.reportBattle",
      "offset": [
        7359,
        7665
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1490"
    },
    "5180": {
      "branch": 133,
      "fn": "Wizards.reportBattle",
      "offset": [
        7359,
        7665
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "5181": {
      "fn": "Wizards.reportBattle",
      "offset": [
        7400,
        7427
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 41,
      "value": "0x0"
    },
    "5183": {
      "fn": "Wizards.reportBattle",
      "offset": [
        7400,
        7427
      ],
      "op": "DUP6",
      "path": "22"
    },
    "5184": {
      "fn": "Wizards.reportBattle",
      "offset": [
        7400,
        7427
      ],
      "op": "DUP2",
      "path": "22"
    },
    "5185": {
      "fn": "Wizards.reportBattle",
      "offset": [
        7400,
        7427
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "5186": {
      "fn": "Wizards.reportBattle",
      "offset": [
        7400,
        7414
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xB"
    },
    "5188": {
      "fn": "Wizards.reportBattle",
      "offset": [
        7400,
        7427
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "5190": {
      "fn": "Wizards.reportBattle",
      "offset": [
        7400,
        7427
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "5191": {
      "fn": "Wizards.reportBattle",
      "offset": [
        7400,
        7427
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "5193": {
      "fn": "Wizards.reportBattle",
      "offset": [
        7400,
        7427
      ],
      "op": "DUP2",
      "path": "22"
    },
    "5194": {
      "fn": "Wizards.reportBattle",
      "offset": [
        7400,
        7427
      ],
      "op": "KECCAK256",
      "path": "22"
    },
    "5195": {
      "fn": "Wizards.reportBattle",
      "offset": [
        7400,
        7432
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x5"
    },
    "5197": {
      "fn": "Wizards.reportBattle",
      "offset": [
        7400,
        7432
      ],
      "op": "ADD",
      "path": "22"
    },
    "5198": {
      "fn": "Wizards.reportBattle",
      "offset": [
        7400,
        7437
      ],
      "op": "DUP1",
      "path": "22"
    },
    "5199": {
      "fn": "Wizards.reportBattle",
      "offset": [
        7400,
        7437
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "5200": {
      "fn": "Wizards.reportBattle",
      "offset": [
        7436,
        7437
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x1"
    },
    "5202": {
      "fn": "Wizards.reportBattle",
      "offset": [
        7436,
        7437
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "5203": {
      "fn": "Wizards.reportBattle",
      "offset": [
        7400,
        7427
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5204": {
      "fn": "Wizards.reportBattle",
      "offset": [
        7400,
        7437
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x145E"
    },
    "5207": {
      "fn": "Wizards.reportBattle",
      "offset": [
        7400,
        7437
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5208": {
      "fn": "Wizards.reportBattle",
      "offset": [
        7436,
        7437
      ],
      "op": "DUP5",
      "path": "22"
    },
    "5209": {
      "fn": "Wizards.reportBattle",
      "offset": [
        7436,
        7437
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5210": {
      "fn": "Wizards.reportBattle",
      "offset": [
        7400,
        7437
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x3412"
    },
    "5213": {
      "fn": "Wizards.reportBattle",
      "jump": "i",
      "offset": [
        7400,
        7437
      ],
      "op": "JUMP",
      "path": "22"
    },
    "5214": {
      "fn": "Wizards.reportBattle",
      "offset": [
        7400,
        7437
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "5215": {
      "fn": "Wizards.reportBattle",
      "offset": [
        7400,
        7437
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5216": {
      "fn": "Wizards.reportBattle",
      "offset": [
        7400,
        7437
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "5217": {
      "fn": "Wizards.reportBattle",
      "offset": [
        7400,
        7437
      ],
      "op": "SSTORE",
      "path": "22"
    },
    "5218": {
      "op": "POP"
    },
    "5219": {
      "op": "POP"
    },
    "5220": {
      "fn": "Wizards.reportBattle",
      "offset": [
        7452,
        7479
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 42,
      "value": "0x0"
    },
    "5222": {
      "fn": "Wizards.reportBattle",
      "offset": [
        7452,
        7479
      ],
      "op": "DUP5",
      "path": "22"
    },
    "5223": {
      "fn": "Wizards.reportBattle",
      "offset": [
        7452,
        7479
      ],
      "op": "DUP2",
      "path": "22"
    },
    "5224": {
      "fn": "Wizards.reportBattle",
      "offset": [
        7452,
        7479
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "5225": {
      "fn": "Wizards.reportBattle",
      "offset": [
        7452,
        7466
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xB"
    },
    "5227": {
      "fn": "Wizards.reportBattle",
      "offset": [
        7452,
        7479
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "5229": {
      "fn": "Wizards.reportBattle",
      "offset": [
        7452,
        7479
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "5230": {
      "fn": "Wizards.reportBattle",
      "offset": [
        7452,
        7479
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "5232": {
      "fn": "Wizards.reportBattle",
      "offset": [
        7452,
        7479
      ],
      "op": "DUP2",
      "path": "22"
    },
    "5233": {
      "fn": "Wizards.reportBattle",
      "offset": [
        7452,
        7479
      ],
      "op": "KECCAK256",
      "path": "22"
    },
    "5234": {
      "fn": "Wizards.reportBattle",
      "offset": [
        7452,
        7486
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x6"
    },
    "5236": {
      "fn": "Wizards.reportBattle",
      "offset": [
        7452,
        7486
      ],
      "op": "ADD",
      "path": "22"
    },
    "5237": {
      "fn": "Wizards.reportBattle",
      "offset": [
        7452,
        7491
      ],
      "op": "DUP1",
      "path": "22"
    },
    "5238": {
      "fn": "Wizards.reportBattle",
      "offset": [
        7452,
        7491
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "5239": {
      "fn": "Wizards.reportBattle",
      "offset": [
        7490,
        7491
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x1"
    },
    "5241": {
      "fn": "Wizards.reportBattle",
      "offset": [
        7490,
        7491
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "5242": {
      "fn": "Wizards.reportBattle",
      "offset": [
        7452,
        7479
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5243": {
      "fn": "Wizards.reportBattle",
      "offset": [
        7452,
        7491
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1485"
    },
    "5246": {
      "fn": "Wizards.reportBattle",
      "offset": [
        7452,
        7491
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5247": {
      "fn": "Wizards.reportBattle",
      "offset": [
        7490,
        7491
      ],
      "op": "DUP5",
      "path": "22"
    },
    "5248": {
      "fn": "Wizards.reportBattle",
      "offset": [
        7490,
        7491
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5249": {
      "fn": "Wizards.reportBattle",
      "offset": [
        7452,
        7491
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x3412"
    },
    "5252": {
      "fn": "Wizards.reportBattle",
      "jump": "i",
      "offset": [
        7452,
        7491
      ],
      "op": "JUMP",
      "path": "22"
    },
    "5253": {
      "fn": "Wizards.reportBattle",
      "offset": [
        7452,
        7491
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "5254": {
      "fn": "Wizards.reportBattle",
      "offset": [
        7452,
        7491
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5255": {
      "fn": "Wizards.reportBattle",
      "offset": [
        7452,
        7491
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "5256": {
      "fn": "Wizards.reportBattle",
      "offset": [
        7452,
        7491
      ],
      "op": "SSTORE",
      "path": "22"
    },
    "5257": {
      "op": "POP"
    },
    "5258": {
      "fn": "Wizards.reportBattle",
      "offset": [
        7359,
        7665
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x14F8"
    },
    "5261": {
      "fn": "Wizards.reportBattle",
      "offset": [
        7359,
        7665
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5262": {
      "op": "POP"
    },
    "5263": {
      "fn": "Wizards.reportBattle",
      "offset": [
        7359,
        7665
      ],
      "op": "JUMP",
      "path": "22"
    },
    "5264": {
      "fn": "Wizards.reportBattle",
      "offset": [
        7359,
        7665
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "5265": {
      "fn": "Wizards.reportBattle",
      "offset": [
        7534,
        7546
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "5267": {
      "fn": "Wizards.reportBattle",
      "offset": [
        7523,
        7530
      ],
      "op": "DUP4",
      "path": "22"
    },
    "5268": {
      "fn": "Wizards.reportBattle",
      "offset": [
        7523,
        7546
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x3"
    },
    "5270": {
      "fn": "Wizards.reportBattle",
      "offset": [
        7523,
        7546
      ],
      "op": "DUP2",
      "path": "22"
    },
    "5271": {
      "fn": "Wizards.reportBattle",
      "offset": [
        7523,
        7546
      ],
      "op": "GT",
      "path": "22"
    },
    "5272": {
      "fn": "Wizards.reportBattle",
      "offset": [
        7523,
        7546
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "5273": {
      "fn": "Wizards.reportBattle",
      "offset": [
        7523,
        7546
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x14A4"
    },
    "5276": {
      "fn": "Wizards.reportBattle",
      "offset": [
        7523,
        7546
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "5277": {
      "fn": "Wizards.reportBattle",
      "offset": [
        7523,
        7546
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x14A4"
    },
    "5280": {
      "fn": "Wizards.reportBattle",
      "offset": [
        7523,
        7546
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2BFF"
    },
    "5283": {
      "fn": "Wizards.reportBattle",
      "jump": "i",
      "offset": [
        7523,
        7546
      ],
      "op": "JUMP",
      "path": "22"
    },
    "5284": {
      "fn": "Wizards.reportBattle",
      "offset": [
        7523,
        7546
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "5285": {
      "branch": 134,
      "fn": "Wizards.reportBattle",
      "offset": [
        7523,
        7546
      ],
      "op": "SUB",
      "path": "22"
    },
    "5286": {
      "fn": "Wizards.reportBattle",
      "offset": [
        7520,
        7665
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x14F8"
    },
    "5289": {
      "branch": 134,
      "fn": "Wizards.reportBattle",
      "offset": [
        7520,
        7665
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "5290": {
      "fn": "Wizards.reportBattle",
      "offset": [
        7562,
        7589
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 43,
      "value": "0x0"
    },
    "5292": {
      "fn": "Wizards.reportBattle",
      "offset": [
        7562,
        7589
      ],
      "op": "DUP6",
      "path": "22"
    },
    "5293": {
      "fn": "Wizards.reportBattle",
      "offset": [
        7562,
        7589
      ],
      "op": "DUP2",
      "path": "22"
    },
    "5294": {
      "fn": "Wizards.reportBattle",
      "offset": [
        7562,
        7589
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "5295": {
      "fn": "Wizards.reportBattle",
      "offset": [
        7562,
        7576
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xB"
    },
    "5297": {
      "fn": "Wizards.reportBattle",
      "offset": [
        7562,
        7589
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "5299": {
      "fn": "Wizards.reportBattle",
      "offset": [
        7562,
        7589
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "5300": {
      "fn": "Wizards.reportBattle",
      "offset": [
        7562,
        7589
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "5302": {
      "fn": "Wizards.reportBattle",
      "offset": [
        7562,
        7589
      ],
      "op": "DUP2",
      "path": "22"
    },
    "5303": {
      "fn": "Wizards.reportBattle",
      "offset": [
        7562,
        7589
      ],
      "op": "KECCAK256",
      "path": "22"
    },
    "5304": {
      "fn": "Wizards.reportBattle",
      "offset": [
        7562,
        7596
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x6"
    },
    "5306": {
      "fn": "Wizards.reportBattle",
      "offset": [
        7562,
        7596
      ],
      "op": "ADD",
      "path": "22"
    },
    "5307": {
      "fn": "Wizards.reportBattle",
      "offset": [
        7562,
        7601
      ],
      "op": "DUP1",
      "path": "22"
    },
    "5308": {
      "fn": "Wizards.reportBattle",
      "offset": [
        7562,
        7601
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "5309": {
      "fn": "Wizards.reportBattle",
      "offset": [
        7600,
        7601
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x1"
    },
    "5311": {
      "fn": "Wizards.reportBattle",
      "offset": [
        7600,
        7601
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "5312": {
      "fn": "Wizards.reportBattle",
      "offset": [
        7562,
        7589
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5313": {
      "fn": "Wizards.reportBattle",
      "offset": [
        7562,
        7601
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x14CB"
    },
    "5316": {
      "fn": "Wizards.reportBattle",
      "offset": [
        7562,
        7601
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5317": {
      "fn": "Wizards.reportBattle",
      "offset": [
        7600,
        7601
      ],
      "op": "DUP5",
      "path": "22"
    },
    "5318": {
      "fn": "Wizards.reportBattle",
      "offset": [
        7600,
        7601
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5319": {
      "fn": "Wizards.reportBattle",
      "offset": [
        7562,
        7601
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x3412"
    },
    "5322": {
      "fn": "Wizards.reportBattle",
      "jump": "i",
      "offset": [
        7562,
        7601
      ],
      "op": "JUMP",
      "path": "22"
    },
    "5323": {
      "fn": "Wizards.reportBattle",
      "offset": [
        7562,
        7601
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "5324": {
      "fn": "Wizards.reportBattle",
      "offset": [
        7562,
        7601
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5325": {
      "fn": "Wizards.reportBattle",
      "offset": [
        7562,
        7601
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "5326": {
      "fn": "Wizards.reportBattle",
      "offset": [
        7562,
        7601
      ],
      "op": "SSTORE",
      "path": "22"
    },
    "5327": {
      "op": "POP"
    },
    "5328": {
      "op": "POP"
    },
    "5329": {
      "fn": "Wizards.reportBattle",
      "offset": [
        7616,
        7643
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 44,
      "value": "0x0"
    },
    "5331": {
      "fn": "Wizards.reportBattle",
      "offset": [
        7616,
        7643
      ],
      "op": "DUP5",
      "path": "22"
    },
    "5332": {
      "fn": "Wizards.reportBattle",
      "offset": [
        7616,
        7643
      ],
      "op": "DUP2",
      "path": "22"
    },
    "5333": {
      "fn": "Wizards.reportBattle",
      "offset": [
        7616,
        7643
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "5334": {
      "fn": "Wizards.reportBattle",
      "offset": [
        7616,
        7630
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xB"
    },
    "5336": {
      "fn": "Wizards.reportBattle",
      "offset": [
        7616,
        7643
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "5338": {
      "fn": "Wizards.reportBattle",
      "offset": [
        7616,
        7643
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "5339": {
      "fn": "Wizards.reportBattle",
      "offset": [
        7616,
        7643
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "5341": {
      "fn": "Wizards.reportBattle",
      "offset": [
        7616,
        7643
      ],
      "op": "DUP2",
      "path": "22"
    },
    "5342": {
      "fn": "Wizards.reportBattle",
      "offset": [
        7616,
        7643
      ],
      "op": "KECCAK256",
      "path": "22"
    },
    "5343": {
      "fn": "Wizards.reportBattle",
      "offset": [
        7616,
        7648
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x5"
    },
    "5345": {
      "fn": "Wizards.reportBattle",
      "offset": [
        7616,
        7648
      ],
      "op": "ADD",
      "path": "22"
    },
    "5346": {
      "fn": "Wizards.reportBattle",
      "offset": [
        7616,
        7653
      ],
      "op": "DUP1",
      "path": "22"
    },
    "5347": {
      "fn": "Wizards.reportBattle",
      "offset": [
        7616,
        7653
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "5348": {
      "fn": "Wizards.reportBattle",
      "offset": [
        7652,
        7653
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x1"
    },
    "5350": {
      "fn": "Wizards.reportBattle",
      "offset": [
        7652,
        7653
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "5351": {
      "fn": "Wizards.reportBattle",
      "offset": [
        7616,
        7643
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5352": {
      "fn": "Wizards.reportBattle",
      "offset": [
        7616,
        7653
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x14F2"
    },
    "5355": {
      "fn": "Wizards.reportBattle",
      "offset": [
        7616,
        7653
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5356": {
      "fn": "Wizards.reportBattle",
      "offset": [
        7652,
        7653
      ],
      "op": "DUP5",
      "path": "22"
    },
    "5357": {
      "fn": "Wizards.reportBattle",
      "offset": [
        7652,
        7653
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5358": {
      "fn": "Wizards.reportBattle",
      "offset": [
        7616,
        7653
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x3412"
    },
    "5361": {
      "fn": "Wizards.reportBattle",
      "jump": "i",
      "offset": [
        7616,
        7653
      ],
      "op": "JUMP",
      "path": "22"
    },
    "5362": {
      "fn": "Wizards.reportBattle",
      "offset": [
        7616,
        7653
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "5363": {
      "fn": "Wizards.reportBattle",
      "offset": [
        7616,
        7653
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5364": {
      "fn": "Wizards.reportBattle",
      "offset": [
        7616,
        7653
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "5365": {
      "fn": "Wizards.reportBattle",
      "offset": [
        7616,
        7653
      ],
      "op": "SSTORE",
      "path": "22"
    },
    "5366": {
      "op": "POP"
    },
    "5367": {
      "op": "POP"
    },
    "5368": {
      "fn": "Wizards.reportBattle",
      "offset": [
        7520,
        7665
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "5369": {
      "fn": "Wizards.reportBattle",
      "offset": [
        7677,
        7704
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 45,
      "value": "0x0"
    },
    "5371": {
      "fn": "Wizards.reportBattle",
      "offset": [
        7677,
        7704
      ],
      "op": "DUP6",
      "path": "22"
    },
    "5372": {
      "fn": "Wizards.reportBattle",
      "offset": [
        7677,
        7704
      ],
      "op": "DUP2",
      "path": "22"
    },
    "5373": {
      "fn": "Wizards.reportBattle",
      "offset": [
        7677,
        7704
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "5374": {
      "fn": "Wizards.reportBattle",
      "offset": [
        7677,
        7691
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xB"
    },
    "5376": {
      "fn": "Wizards.reportBattle",
      "offset": [
        7677,
        7704
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "5378": {
      "fn": "Wizards.reportBattle",
      "offset": [
        7677,
        7704
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "5379": {
      "fn": "Wizards.reportBattle",
      "offset": [
        7677,
        7704
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "5381": {
      "fn": "Wizards.reportBattle",
      "offset": [
        7677,
        7704
      ],
      "op": "DUP2",
      "path": "22"
    },
    "5382": {
      "fn": "Wizards.reportBattle",
      "offset": [
        7677,
        7704
      ],
      "op": "KECCAK256",
      "path": "22"
    },
    "5383": {
      "fn": "Wizards.reportBattle",
      "offset": [
        7677,
        7718
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x8"
    },
    "5385": {
      "fn": "Wizards.reportBattle",
      "offset": [
        7677,
        7718
      ],
      "op": "ADD",
      "path": "22"
    },
    "5386": {
      "fn": "Wizards.reportBattle",
      "offset": [
        7677,
        7732
      ],
      "op": "DUP1",
      "path": "22"
    },
    "5387": {
      "fn": "Wizards.reportBattle",
      "offset": [
        7677,
        7732
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "5388": {
      "fn": "Wizards.reportBattle",
      "offset": [
        7722,
        7732
      ],
      "op": "DUP5",
      "path": "22"
    },
    "5389": {
      "fn": "Wizards.reportBattle",
      "offset": [
        7722,
        7732
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "5390": {
      "fn": "Wizards.reportBattle",
      "offset": [
        7677,
        7704
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5391": {
      "fn": "Wizards.reportBattle",
      "offset": [
        7677,
        7732
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1519"
    },
    "5394": {
      "fn": "Wizards.reportBattle",
      "offset": [
        7677,
        7732
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5395": {
      "fn": "Wizards.reportBattle",
      "offset": [
        7722,
        7732
      ],
      "op": "DUP5",
      "path": "22"
    },
    "5396": {
      "fn": "Wizards.reportBattle",
      "offset": [
        7722,
        7732
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5397": {
      "fn": "Wizards.reportBattle",
      "offset": [
        7677,
        7732
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x3412"
    },
    "5400": {
      "fn": "Wizards.reportBattle",
      "jump": "i",
      "offset": [
        7677,
        7732
      ],
      "op": "JUMP",
      "path": "22"
    },
    "5401": {
      "fn": "Wizards.reportBattle",
      "offset": [
        7677,
        7732
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "5402": {
      "fn": "Wizards.reportBattle",
      "offset": [
        7677,
        7732
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5403": {
      "fn": "Wizards.reportBattle",
      "offset": [
        7677,
        7732
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "5404": {
      "fn": "Wizards.reportBattle",
      "offset": [
        7677,
        7732
      ],
      "op": "SSTORE",
      "path": "22"
    },
    "5405": {
      "op": "POP"
    },
    "5406": {
      "op": "POP"
    },
    "5407": {
      "op": "POP"
    },
    "5408": {
      "op": "POP"
    },
    "5409": {
      "op": "POP"
    },
    "5410": {
      "op": "POP"
    },
    "5411": {
      "op": "POP"
    },
    "5412": {
      "fn": "Wizards.reportBattle",
      "jump": "o",
      "offset": [
        7195,
        8114
      ],
      "op": "JUMP",
      "path": "22"
    },
    "5413": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        8774,
        9224
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "5414": {
      "offset": [
        14999,
        15003
      ],
      "op": "ADDRESS",
      "path": "22"
    },
    "5415": {
      "offset": [
        14977,
        14987
      ],
      "op": "CALLER",
      "path": "22"
    },
    "5416": {
      "offset": [
        14977,
        15004
      ],
      "op": "SUB",
      "path": "22"
    },
    "5417": {
      "offset": [
        14969,
        15022
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1564"
    },
    "5420": {
      "offset": [
        14969,
        15022
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "5421": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        14969,
        15022
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "5423": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        14969,
        15022
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "5424": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5428": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5430": {
      "op": "SHL"
    },
    "5431": {
      "offset": [
        14969,
        15022
      ],
      "op": "DUP2",
      "path": "22"
    },
    "5432": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        14969,
        15022
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "5433": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5435": {
      "offset": [
        14969,
        15022
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "5437": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        14969,
        15022
      ],
      "op": "DUP3",
      "path": "22"
    },
    "5438": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        14969,
        15022
      ],
      "op": "ADD",
      "path": "22"
    },
    "5439": {
      "op": "MSTORE"
    },
    "5440": {
      "op": "PUSH1",
      "value": "0xD"
    },
    "5442": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5444": {
      "op": "DUP3"
    },
    "5445": {
      "op": "ADD"
    },
    "5446": {
      "op": "MSTORE"
    },
    "5447": {
      "op": "PUSH13",
      "value": "0x37B7363C903B32B934B334B2B9"
    },
    "5461": {
      "op": "PUSH1",
      "value": "0x99"
    },
    "5463": {
      "op": "SHL"
    },
    "5464": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5466": {
      "op": "DUP3"
    },
    "5467": {
      "op": "ADD"
    },
    "5468": {
      "op": "MSTORE"
    },
    "5469": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5471": {
      "op": "ADD"
    },
    "5472": {
      "offset": [
        14969,
        15022
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xB50"
    },
    "5475": {
      "op": "JUMP"
    },
    "5476": {
      "offset": [
        14969,
        15022
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "5477": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        8970,
        8994
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 46,
      "value": "0x0"
    },
    "5479": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        8970,
        8994
      ],
      "op": "DUP3",
      "path": "22"
    },
    "5480": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        8970,
        8994
      ],
      "op": "DUP2",
      "path": "22"
    },
    "5481": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        8970,
        8994
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "5482": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        8970,
        8984
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xB"
    },
    "5484": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        8970,
        8994
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "5486": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        8970,
        8994
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "5487": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        8970,
        8994
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "5489": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        8970,
        8994
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5490": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        8970,
        8994
      ],
      "op": "KECCAK256",
      "path": "22"
    },
    "5491": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        8970,
        9018
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xC"
    },
    "5493": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        8970,
        9018
      ],
      "op": "ADD",
      "path": "22"
    },
    "5494": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        8970,
        9018
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "5495": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        9021,
        9036
      ],
      "op": "TIMESTAMP",
      "path": "22"
    },
    "5496": {
      "op": "GT"
    },
    "5497": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        8970,
        9123
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1593"
    },
    "5500": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        8970,
        9123
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "5501": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        9075,
        9099
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "5503": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        9075,
        9099
      ],
      "op": "DUP3",
      "path": "22"
    },
    "5504": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        9075,
        9099
      ],
      "op": "DUP2",
      "path": "22"
    },
    "5505": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        9075,
        9099
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "5506": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        9075,
        9089
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xB"
    },
    "5508": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        9075,
        9099
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "5510": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        9075,
        9099
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "5511": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        9075,
        9099
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "5513": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        9075,
        9099
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5514": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        9075,
        9099
      ],
      "op": "KECCAK256",
      "path": "22"
    },
    "5515": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        9075,
        9123
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xC"
    },
    "5517": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        9075,
        9123
      ],
      "op": "ADD",
      "path": "22"
    },
    "5518": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        9075,
        9123
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "5519": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        8970,
        9123
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1595"
    },
    "5522": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        8970,
        9123
      ],
      "op": "JUMP",
      "path": "22"
    },
    "5523": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        8970,
        9123
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "5524": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        9057,
        9072
      ],
      "op": "TIMESTAMP",
      "path": "22"
    },
    "5525": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        8970,
        9123
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "5526": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        8955,
        9124
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x159F"
    },
    "5529": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        8955,
        9124
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5530": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        8955,
        8966
      ],
      "op": "DUP3",
      "path": "22"
    },
    "5531": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        8955,
        9124
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x3412"
    },
    "5534": {
      "fn": "Wizards.verifyDuty",
      "jump": "i",
      "offset": [
        8955,
        9124
      ],
      "op": "JUMP",
      "path": "22"
    },
    "5535": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        8955,
        9124
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "5536": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        8904,
        8928
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "5538": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        8904,
        8928
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "5539": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        8904,
        8928
      ],
      "op": "DUP4",
      "path": "22"
    },
    "5540": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        8904,
        8928
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "5541": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        8904,
        8918
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xB"
    },
    "5543": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        8904,
        8928
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "5545": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        8904,
        8928
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "5546": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        8904,
        8928
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "5548": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        8904,
        8928
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5549": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        8904,
        8928
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "5550": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        8904,
        8928
      ],
      "op": "KECCAK256",
      "path": "22"
    },
    "5551": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        8904,
        8952
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xC"
    },
    "5553": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        8904,
        8952
      ],
      "op": "ADD",
      "path": "22"
    },
    "5554": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        8904,
        9124
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "5555": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        8904,
        9124
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5556": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        8904,
        9124
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "5557": {
      "fn": "Wizards.verifyDuty",
      "offset": [
        8904,
        9124
      ],
      "op": "SSTORE",
      "path": "22"
    },
    "5558": {
      "op": "POP"
    },
    "5559": {
      "fn": "Wizards.verifyDuty",
      "jump": "o",
      "offset": [
        8774,
        9224
      ],
      "op": "JUMP",
      "path": "22"
    },
    "5560": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2840,
        3497
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "5561": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2906,
        2918
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x15C0"
    },
    "5564": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2906,
        2918
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x286D"
    },
    "5567": {
      "fn": "Wizards.getStatsGivenId",
      "jump": "i",
      "offset": [
        2906,
        2918
      ],
      "op": "JUMP",
      "path": "22"
    },
    "5568": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2906,
        2918
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "5569": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2931,
        2946
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "5571": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2949,
        2970
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x15CB"
    },
    "5574": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2960,
        2969
      ],
      "op": "DUP4",
      "path": "22"
    },
    "5575": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2949,
        2959
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x9DA"
    },
    "5578": {
      "fn": "Wizards.getStatsGivenId",
      "jump": "i",
      "offset": [
        2949,
        2970
      ],
      "op": "JUMP",
      "path": "22"
    },
    "5579": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2949,
        2970
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "5580": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2949,
        2974
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x15D6"
    },
    "5583": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2949,
        2974
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5584": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2973,
        2974
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x1"
    },
    "5586": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2949,
        2974
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x3412"
    },
    "5589": {
      "fn": "Wizards.getStatsGivenId",
      "jump": "i",
      "offset": [
        2949,
        2974
      ],
      "op": "JUMP",
      "path": "22"
    },
    "5590": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2949,
        2974
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "5591": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2931,
        2974
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5592": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2931,
        2974
      ],
      "op": "POP",
      "path": "22"
    },
    "5593": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3019,
        3039
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "5595": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3042,
        3056
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xB"
    },
    "5597": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3042,
        3067
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "5599": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3057,
        3066
      ],
      "op": "DUP6",
      "path": "22"
    },
    "5600": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3042,
        3067
      ],
      "op": "DUP2",
      "path": "22"
    },
    "5601": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3042,
        3067
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "5602": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3042,
        3067
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "5604": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3042,
        3067
      ],
      "op": "ADD",
      "path": "22"
    },
    "5605": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3042,
        3067
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5606": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3042,
        3067
      ],
      "op": "DUP2",
      "path": "22"
    },
    "5607": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3042,
        3067
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "5608": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3042,
        3067
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "5610": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3042,
        3067
      ],
      "op": "ADD",
      "path": "22"
    },
    "5611": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3042,
        3067
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "5613": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3042,
        3067
      ],
      "op": "KECCAK256",
      "path": "22"
    },
    "5614": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3019,
        3067
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "5616": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3019,
        3067
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "5617": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3019,
        3067
      ],
      "op": "DUP1",
      "path": "22"
    },
    "5618": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3019,
        3067
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1C0"
    },
    "5621": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3019,
        3067
      ],
      "op": "ADD",
      "path": "22"
    },
    "5622": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3019,
        3067
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "5624": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3019,
        3067
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "5625": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3019,
        3067
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5626": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3019,
        3067
      ],
      "op": "DUP2",
      "path": "22"
    },
    "5627": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3019,
        3067
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "5629": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3019,
        3067
      ],
      "op": "DUP3",
      "path": "22"
    },
    "5630": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3019,
        3067
      ],
      "op": "ADD",
      "path": "22"
    },
    "5631": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3019,
        3067
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "5632": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3019,
        3067
      ],
      "op": "DUP2",
      "path": "22"
    },
    "5633": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3019,
        3067
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "5634": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3019,
        3067
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "5636": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3019,
        3067
      ],
      "op": "ADD",
      "path": "22"
    },
    "5637": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3019,
        3067
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x1"
    },
    "5639": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3019,
        3067
      ],
      "op": "DUP3",
      "path": "22"
    },
    "5640": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3019,
        3067
      ],
      "op": "ADD",
      "path": "22"
    },
    "5641": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3019,
        3067
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "5642": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3019,
        3067
      ],
      "op": "DUP2",
      "path": "22"
    },
    "5643": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3019,
        3067
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "5644": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3019,
        3067
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "5646": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3019,
        3067
      ],
      "op": "ADD",
      "path": "22"
    },
    "5647": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3019,
        3067
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x2"
    },
    "5649": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3019,
        3067
      ],
      "op": "DUP3",
      "path": "22"
    },
    "5650": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3019,
        3067
      ],
      "op": "ADD",
      "path": "22"
    },
    "5651": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3019,
        3067
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "5652": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3019,
        3067
      ],
      "op": "DUP2",
      "path": "22"
    },
    "5653": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3019,
        3067
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "5654": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3019,
        3067
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "5656": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3019,
        3067
      ],
      "op": "ADD",
      "path": "22"
    },
    "5657": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3019,
        3067
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x3"
    },
    "5659": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3019,
        3067
      ],
      "op": "DUP3",
      "path": "22"
    },
    "5660": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3019,
        3067
      ],
      "op": "ADD",
      "path": "22"
    },
    "5661": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3019,
        3067
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "5662": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3019,
        3067
      ],
      "op": "DUP2",
      "path": "22"
    },
    "5663": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3019,
        3067
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "5664": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3019,
        3067
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "5666": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3019,
        3067
      ],
      "op": "ADD",
      "path": "22"
    },
    "5667": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3019,
        3067
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "5669": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3019,
        3067
      ],
      "op": "DUP3",
      "path": "22"
    },
    "5670": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3019,
        3067
      ],
      "op": "ADD",
      "path": "22"
    },
    "5671": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3019,
        3067
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "5672": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3019,
        3067
      ],
      "op": "DUP2",
      "path": "22"
    },
    "5673": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3019,
        3067
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "5674": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3019,
        3067
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "5676": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3019,
        3067
      ],
      "op": "ADD",
      "path": "22"
    },
    "5677": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3019,
        3067
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x5"
    },
    "5679": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3019,
        3067
      ],
      "op": "DUP3",
      "path": "22"
    },
    "5680": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3019,
        3067
      ],
      "op": "ADD",
      "path": "22"
    },
    "5681": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3019,
        3067
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "5682": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3019,
        3067
      ],
      "op": "DUP2",
      "path": "22"
    },
    "5683": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3019,
        3067
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "5684": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3019,
        3067
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "5686": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3019,
        3067
      ],
      "op": "ADD",
      "path": "22"
    },
    "5687": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3019,
        3067
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x6"
    },
    "5689": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3019,
        3067
      ],
      "op": "DUP3",
      "path": "22"
    },
    "5690": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3019,
        3067
      ],
      "op": "ADD",
      "path": "22"
    },
    "5691": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3019,
        3067
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "5692": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3019,
        3067
      ],
      "op": "DUP2",
      "path": "22"
    },
    "5693": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3019,
        3067
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "5694": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3019,
        3067
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "5696": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3019,
        3067
      ],
      "op": "ADD",
      "path": "22"
    },
    "5697": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3019,
        3067
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x7"
    },
    "5699": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3019,
        3067
      ],
      "op": "DUP3",
      "path": "22"
    },
    "5700": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3019,
        3067
      ],
      "op": "ADD",
      "path": "22"
    },
    "5701": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3019,
        3067
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "5702": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3019,
        3067
      ],
      "op": "DUP2",
      "path": "22"
    },
    "5703": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3019,
        3067
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "5704": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3019,
        3067
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "5706": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3019,
        3067
      ],
      "op": "ADD",
      "path": "22"
    },
    "5707": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3019,
        3067
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x8"
    },
    "5709": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3019,
        3067
      ],
      "op": "DUP3",
      "path": "22"
    },
    "5710": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3019,
        3067
      ],
      "op": "ADD",
      "path": "22"
    },
    "5711": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3019,
        3067
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "5712": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3019,
        3067
      ],
      "op": "DUP2",
      "path": "22"
    },
    "5713": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3019,
        3067
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "5714": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3019,
        3067
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "5716": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3019,
        3067
      ],
      "op": "ADD",
      "path": "22"
    },
    "5717": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3019,
        3067
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x9"
    },
    "5719": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3019,
        3067
      ],
      "op": "DUP3",
      "path": "22"
    },
    "5720": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3019,
        3067
      ],
      "op": "ADD",
      "path": "22"
    },
    "5721": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3019,
        3067
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "5722": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3019,
        3067
      ],
      "op": "DUP2",
      "path": "22"
    },
    "5723": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3019,
        3067
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "5724": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3019,
        3067
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "5726": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3019,
        3067
      ],
      "op": "ADD",
      "path": "22"
    },
    "5727": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3019,
        3067
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xA"
    },
    "5729": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3019,
        3067
      ],
      "op": "DUP3",
      "path": "22"
    },
    "5730": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3019,
        3067
      ],
      "op": "ADD",
      "path": "22"
    },
    "5731": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3019,
        3067
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "5732": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3019,
        3067
      ],
      "op": "DUP2",
      "path": "22"
    },
    "5733": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3019,
        3067
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "5734": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3019,
        3067
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "5736": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3019,
        3067
      ],
      "op": "ADD",
      "path": "22"
    },
    "5737": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3019,
        3067
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xB"
    },
    "5739": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3019,
        3067
      ],
      "op": "DUP3",
      "path": "22"
    },
    "5740": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3019,
        3067
      ],
      "op": "ADD",
      "path": "22"
    },
    "5741": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3019,
        3067
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "5742": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3019,
        3067
      ],
      "op": "DUP2",
      "path": "22"
    },
    "5743": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3019,
        3067
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "5744": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3019,
        3067
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "5746": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3019,
        3067
      ],
      "op": "ADD",
      "path": "22"
    },
    "5747": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3019,
        3067
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xC"
    },
    "5749": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3019,
        3067
      ],
      "op": "DUP3",
      "path": "22"
    },
    "5750": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3019,
        3067
      ],
      "op": "ADD",
      "path": "22"
    },
    "5751": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3019,
        3067
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "5752": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3019,
        3067
      ],
      "op": "DUP2",
      "path": "22"
    },
    "5753": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3019,
        3067
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "5754": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3019,
        3067
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "5756": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3019,
        3067
      ],
      "op": "ADD",
      "path": "22"
    },
    "5757": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3019,
        3067
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xD"
    },
    "5759": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3019,
        3067
      ],
      "op": "DUP3",
      "path": "22"
    },
    "5760": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3019,
        3067
      ],
      "op": "ADD",
      "path": "22"
    },
    "5761": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3019,
        3067
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "5763": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3019,
        3067
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5764": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3019,
        3067
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "5765": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3019,
        3067
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5766": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3019,
        3067
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x100"
    },
    "5769": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3019,
        3067
      ],
      "op": "EXP",
      "path": "22"
    },
    "5770": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3019,
        3067
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5771": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3019,
        3067
      ],
      "op": "DIV",
      "path": "22"
    },
    "5772": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3019,
        3067
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xFF"
    },
    "5774": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3019,
        3067
      ],
      "op": "AND",
      "path": "22"
    },
    "5775": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3019,
        3067
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x3"
    },
    "5777": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3019,
        3067
      ],
      "op": "DUP2",
      "path": "22"
    },
    "5778": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3019,
        3067
      ],
      "op": "GT",
      "path": "22"
    },
    "5779": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3019,
        3067
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "5780": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3019,
        3067
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x169F"
    },
    "5783": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3019,
        3067
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "5784": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3019,
        3067
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x169F"
    },
    "5787": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3019,
        3067
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2BFF"
    },
    "5790": {
      "fn": "Wizards.getStatsGivenId",
      "jump": "i",
      "offset": [
        3019,
        3067
      ],
      "op": "JUMP",
      "path": "22"
    },
    "5791": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3019,
        3067
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "5792": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3019,
        3067
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x3"
    },
    "5794": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3019,
        3067
      ],
      "op": "DUP2",
      "path": "22"
    },
    "5795": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3019,
        3067
      ],
      "op": "GT",
      "path": "22"
    },
    "5796": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3019,
        3067
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "5797": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3019,
        3067
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x16B0"
    },
    "5800": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3019,
        3067
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "5801": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3019,
        3067
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x16B0"
    },
    "5804": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3019,
        3067
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2BFF"
    },
    "5807": {
      "fn": "Wizards.getStatsGivenId",
      "jump": "i",
      "offset": [
        3019,
        3067
      ],
      "op": "JUMP",
      "path": "22"
    },
    "5808": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3019,
        3067
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "5809": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3019,
        3067
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5810": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3019,
        3067
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "5811": {
      "op": "POP"
    },
    "5812": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3114,
        3142
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 47,
      "value": "0x14"
    },
    "5814": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3114,
        3142
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "5815": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3091,
        3101
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "5817": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3091,
        3101
      ],
      "op": "DUP3",
      "path": "22"
    },
    "5818": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3091,
        3101
      ],
      "op": "ADD",
      "path": "22"
    },
    "5819": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3091,
        3101
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "5820": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3019,
        3067
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "5821": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3019,
        3067
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "5822": {
      "op": "POP"
    },
    "5823": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3114,
        3142
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5824": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3091,
        3111
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x16CA"
    },
    "5827": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3091,
        3111
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5828": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3104,
        3111
      ],
      "op": "DUP5",
      "path": "22"
    },
    "5829": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3104,
        3111
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5830": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3091,
        3111
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x342A"
    },
    "5833": {
      "fn": "Wizards.getStatsGivenId",
      "jump": "i",
      "offset": [
        3091,
        3111
      ],
      "op": "JUMP",
      "path": "22"
    },
    "5834": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3091,
        3111
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "5835": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3091,
        3142
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x16D4"
    },
    "5838": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3091,
        3142
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "5839": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3091,
        3142
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5840": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3091,
        3142
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x33B0"
    },
    "5843": {
      "fn": "Wizards.getStatsGivenId",
      "jump": "i",
      "offset": [
        3091,
        3142
      ],
      "op": "JUMP",
      "path": "22"
    },
    "5844": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3091,
        3142
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "5845": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3078,
        3088
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "5847": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3078,
        3088
      ],
      "op": "DUP3",
      "path": "22"
    },
    "5848": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3078,
        3088
      ],
      "op": "ADD",
      "path": "22"
    },
    "5849": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3078,
        3142
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "5850": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3209,
        3237
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 48,
      "value": "0x14"
    },
    "5852": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3209,
        3237
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "5853": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3176,
        3196
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "5855": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3176,
        3196
      ],
      "op": "DUP3",
      "path": "22"
    },
    "5856": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3176,
        3196
      ],
      "op": "ADD",
      "path": "22"
    },
    "5857": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3176,
        3196
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "5858": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3176,
        3206
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x16EC"
    },
    "5861": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3176,
        3206
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5862": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3199,
        3206
      ],
      "op": "DUP5",
      "path": "22"
    },
    "5863": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3199,
        3206
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5864": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3176,
        3206
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x342A"
    },
    "5867": {
      "fn": "Wizards.getStatsGivenId",
      "jump": "i",
      "offset": [
        3176,
        3206
      ],
      "op": "JUMP",
      "path": "22"
    },
    "5868": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3176,
        3206
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "5869": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3176,
        3237
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x16F6"
    },
    "5872": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3176,
        3237
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "5873": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3176,
        3237
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5874": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3176,
        3237
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x33B0"
    },
    "5877": {
      "fn": "Wizards.getStatsGivenId",
      "jump": "i",
      "offset": [
        3176,
        3237
      ],
      "op": "JUMP",
      "path": "22"
    },
    "5878": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3176,
        3237
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "5879": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3153,
        3173
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "5881": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3153,
        3173
      ],
      "op": "DUP3",
      "path": "22"
    },
    "5882": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3153,
        3173
      ],
      "op": "ADD",
      "path": "22"
    },
    "5883": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3153,
        3237
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "5884": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3308,
        3336
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 49,
      "value": "0x14"
    },
    "5886": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3308,
        3336
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "5887": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3273,
        3295
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x60"
    },
    "5889": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3273,
        3295
      ],
      "op": "DUP3",
      "path": "22"
    },
    "5890": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3273,
        3295
      ],
      "op": "ADD",
      "path": "22"
    },
    "5891": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3273,
        3295
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "5892": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3273,
        3305
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x170E"
    },
    "5895": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3273,
        3305
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5896": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3298,
        3305
      ],
      "op": "DUP5",
      "path": "22"
    },
    "5897": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3298,
        3305
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5898": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3273,
        3305
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x342A"
    },
    "5901": {
      "fn": "Wizards.getStatsGivenId",
      "jump": "i",
      "offset": [
        3273,
        3305
      ],
      "op": "JUMP",
      "path": "22"
    },
    "5902": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3273,
        3305
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "5903": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3273,
        3336
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1718"
    },
    "5906": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3273,
        3336
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "5907": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3273,
        3336
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5908": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3273,
        3336
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x33B0"
    },
    "5911": {
      "fn": "Wizards.getStatsGivenId",
      "jump": "i",
      "offset": [
        3273,
        3336
      ],
      "op": "JUMP",
      "path": "22"
    },
    "5912": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3273,
        3336
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "5913": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3248,
        3270
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x60"
    },
    "5915": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3248,
        3270
      ],
      "op": "DUP3",
      "path": "22"
    },
    "5916": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3248,
        3270
      ],
      "op": "ADD",
      "path": "22"
    },
    "5917": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3248,
        3336
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "5918": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3389,
        3417
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 50,
      "value": "0x14"
    },
    "5920": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3389,
        3417
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "5921": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3363,
        3376
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x80"
    },
    "5923": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3363,
        3376
      ],
      "op": "DUP3",
      "path": "22"
    },
    "5924": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3363,
        3376
      ],
      "op": "ADD",
      "path": "22"
    },
    "5925": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3363,
        3376
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "5926": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3363,
        3386
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1730"
    },
    "5929": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3363,
        3386
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5930": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3379,
        3386
      ],
      "op": "DUP5",
      "path": "22"
    },
    "5931": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3379,
        3386
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5932": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3363,
        3386
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x342A"
    },
    "5935": {
      "fn": "Wizards.getStatsGivenId",
      "jump": "i",
      "offset": [
        3363,
        3386
      ],
      "op": "JUMP",
      "path": "22"
    },
    "5936": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3363,
        3386
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "5937": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3363,
        3417
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x173A"
    },
    "5940": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3363,
        3417
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "5941": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3363,
        3417
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "5942": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3363,
        3417
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x33B0"
    },
    "5945": {
      "fn": "Wizards.getStatsGivenId",
      "jump": "i",
      "offset": [
        3363,
        3417
      ],
      "op": "JUMP",
      "path": "22"
    },
    "5946": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3363,
        3417
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "5947": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3347,
        3360
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x80"
    },
    "5949": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3347,
        3360
      ],
      "op": "DUP3",
      "path": "22"
    },
    "5950": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3347,
        3360
      ],
      "op": "ADD",
      "path": "22"
    },
    "5951": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3347,
        3417
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "5952": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        3347,
        3354
      ],
      "op": "SWAP4",
      "path": "22"
    },
    "5953": {
      "fn": "Wizards.getStatsGivenId",
      "offset": [
        2840,
        3497
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "5954": {
      "op": "POP"
    },
    "5955": {
      "op": "POP"
    },
    "5956": {
      "op": "POP"
    },
    "5957": {
      "fn": "Wizards.getStatsGivenId",
      "jump": "o",
      "offset": [
        2840,
        3497
      ],
      "op": "JUMP",
      "path": "22"
    },
    "5958": {
      "fn": "ERC721.symbol",
      "offset": [
        2694,
        2798
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "5959": {
      "fn": "ERC721.symbol",
      "offset": [
        2750,
        2763
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x60"
    },
    "5961": {
      "fn": "ERC721.symbol",
      "offset": [
        2783,
        2790
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 51,
      "value": "0x1"
    },
    "5963": {
      "fn": "ERC721.symbol",
      "offset": [
        2776,
        2790
      ],
      "op": "DUP1",
      "path": "6"
    },
    "5964": {
      "fn": "ERC721.symbol",
      "offset": [
        2776,
        2790
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "5965": {
      "fn": "ERC721.symbol",
      "offset": [
        2776,
        2790
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xA58"
    },
    "5968": {
      "fn": "ERC721.symbol",
      "offset": [
        2776,
        2790
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "5969": {
      "fn": "ERC721.symbol",
      "offset": [
        2776,
        2790
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x33C4"
    },
    "5972": {
      "fn": "ERC721.symbol",
      "jump": "i",
      "offset": [
        2776,
        2790
      ],
      "op": "JUMP",
      "path": "6"
    },
    "5973": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        15778,
        16013
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "5974": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0xA"
    },
    "5976": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "5977": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5979": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5981": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5983": {
      "op": "SHL"
    },
    "5984": {
      "op": "SUB"
    },
    "5985": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "AND",
      "path": "8"
    },
    "5986": {
      "fn": "Context._msgSender",
      "offset": [
        679,
        689
      ],
      "op": "CALLER",
      "path": "3"
    },
    "5987": {
      "offset": [
        1221,
        1244
      ],
      "op": "EQ",
      "path": "8"
    },
    "5988": {
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x177F"
    },
    "5991": {
      "offset": [
        1213,
        1281
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "5992": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "5994": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "5995": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5999": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6001": {
      "op": "SHL"
    },
    "6002": {
      "offset": [
        1213,
        1281
      ],
      "op": "DUP2",
      "path": "8"
    },
    "6003": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "6004": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "6006": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "ADD",
      "path": "8"
    },
    "6007": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xB50"
    },
    "6010": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "6011": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x349A"
    },
    "6014": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1213,
        1281
      ],
      "op": "JUMP",
      "path": "8"
    },
    "6015": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "6016": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6018": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6020": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6022": {
      "op": "SHL"
    },
    "6023": {
      "op": "SUB"
    },
    "6024": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        15859,
        15882
      ],
      "op": "DUP2",
      "path": "22",
      "statement": 52
    },
    "6025": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        15859,
        15882
      ],
      "op": "AND",
      "path": "22"
    },
    "6026": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        15859,
        15882
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "6027": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        15859,
        15882
      ],
      "op": "DUP1",
      "path": "22"
    },
    "6028": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        15859,
        15882
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "6029": {
      "branch": 135,
      "fn": "Wizards.updateVerifier",
      "offset": [
        15859,
        15882
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "6030": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        15859,
        15907
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x17A5"
    },
    "6033": {
      "branch": 135,
      "fn": "Wizards.updateVerifier",
      "offset": [
        15859,
        15907
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "6034": {
      "op": "POP"
    },
    "6035": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        15899,
        15907
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xD"
    },
    "6037": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        15899,
        15907
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "6038": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6040": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6042": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6044": {
      "op": "SHL"
    },
    "6045": {
      "op": "SUB"
    },
    "6046": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        15886,
        15907
      ],
      "op": "DUP3",
      "path": "22"
    },
    "6047": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        15886,
        15907
      ],
      "op": "DUP2",
      "path": "22"
    },
    "6048": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        15886,
        15907
      ],
      "op": "AND",
      "path": "22"
    },
    "6049": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        15899,
        15907
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "6050": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        15899,
        15907
      ],
      "op": "AND",
      "path": "22"
    },
    "6051": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        15886,
        15907
      ],
      "op": "EQ",
      "path": "22"
    },
    "6052": {
      "branch": 136,
      "fn": "Wizards.updateVerifier",
      "offset": [
        15886,
        15907
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "6053": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        15859,
        15907
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "6054": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        15851,
        15936
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x17EC"
    },
    "6057": {
      "branch": 136,
      "fn": "Wizards.updateVerifier",
      "offset": [
        15851,
        15936
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "6058": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        15851,
        15936
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "6060": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        15851,
        15936
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "6061": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6065": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6067": {
      "op": "SHL"
    },
    "6068": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        15851,
        15936
      ],
      "op": "DUP2",
      "path": "22"
    },
    "6069": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        15851,
        15936
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "6070": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6072": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        15851,
        15936
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "6074": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        15851,
        15936
      ],
      "op": "DUP3",
      "path": "22"
    },
    "6075": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        15851,
        15936
      ],
      "op": "ADD",
      "path": "22"
    },
    "6076": {
      "op": "MSTORE"
    },
    "6077": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "6079": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6081": {
      "op": "DUP3"
    },
    "6082": {
      "op": "ADD"
    },
    "6083": {
      "op": "MSTORE"
    },
    "6084": {
      "op": "PUSH24",
      "value": "0x496E76616C6964206F70657261746F722061646472657373"
    },
    "6109": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6111": {
      "op": "SHL"
    },
    "6112": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6114": {
      "op": "DUP3"
    },
    "6115": {
      "op": "ADD"
    },
    "6116": {
      "op": "MSTORE"
    },
    "6117": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6119": {
      "op": "ADD"
    },
    "6120": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        15851,
        15936
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xB50"
    },
    "6123": {
      "op": "JUMP"
    },
    "6124": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        15851,
        15936
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "6125": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        15947,
        15955
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 53,
      "value": "0xD"
    },
    "6127": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        15947,
        15967
      ],
      "op": "DUP1",
      "path": "22"
    },
    "6128": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        15947,
        15967
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "6129": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6131": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6133": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6135": {
      "op": "SHL"
    },
    "6136": {
      "op": "SUB"
    },
    "6137": {
      "op": "NOT"
    },
    "6138": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        15947,
        15967
      ],
      "op": "AND",
      "path": "22"
    },
    "6139": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6141": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6143": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6145": {
      "op": "SHL"
    },
    "6146": {
      "op": "SUB"
    },
    "6147": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        15947,
        15967
      ],
      "op": "DUP4",
      "path": "22"
    },
    "6148": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        15947,
        15967
      ],
      "op": "AND",
      "path": "22"
    },
    "6149": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        15947,
        15967
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "6150": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        15947,
        15967
      ],
      "op": "DUP2",
      "path": "22"
    },
    "6151": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        15947,
        15967
      ],
      "op": "OR",
      "path": "22"
    },
    "6152": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        15947,
        15967
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "6153": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        15947,
        15967
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "6154": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        15947,
        15967
      ],
      "op": "SSTORE",
      "path": "22"
    },
    "6155": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        15983,
        16005
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 54,
      "value": "0x40"
    },
    "6157": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        15983,
        16005
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "6158": {
      "op": "SWAP1"
    },
    "6159": {
      "op": "DUP2"
    },
    "6160": {
      "op": "MSTORE"
    },
    "6161": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        15983,
        16005
      ],
      "op": "PUSH32",
      "path": "22",
      "value": "0xA1FD6A6669ACB930BAE242943BB9FA08DDCBA665C707261E9730EE0305FB85E5"
    },
    "6194": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        15983,
        16005
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "6195": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6197": {
      "op": "ADD"
    },
    "6198": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        15983,
        16005
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "6199": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        15983,
        16005
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "6201": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        15983,
        16005
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "6202": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        15983,
        16005
      ],
      "op": "DUP1",
      "path": "22"
    },
    "6203": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        15983,
        16005
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "6204": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        15983,
        16005
      ],
      "op": "SUB",
      "path": "22"
    },
    "6205": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        15983,
        16005
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "6206": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        15983,
        16005
      ],
      "op": "LOG1",
      "path": "22"
    },
    "6207": {
      "fn": "Wizards.updateVerifier",
      "offset": [
        15778,
        16013
      ],
      "op": "POP",
      "path": "22"
    },
    "6208": {
      "fn": "Wizards.updateVerifier",
      "jump": "o",
      "offset": [
        15778,
        16013
      ],
      "op": "JUMP",
      "path": "22"
    },
    "6209": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4377,
        4672
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "6210": {
      "fn": "Context._msgSender",
      "offset": [
        679,
        689
      ],
      "op": "CALLER",
      "path": "3"
    },
    "6211": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6213": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6215": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6217": {
      "op": "SHL"
    },
    "6218": {
      "op": "SUB"
    },
    "6219": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4480,
        4504
      ],
      "op": "DUP4",
      "path": "6",
      "statement": 55
    },
    "6220": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4480,
        4504
      ],
      "op": "AND",
      "path": "6"
    },
    "6221": {
      "branch": 146,
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4480,
        4504
      ],
      "op": "SUB",
      "path": "6"
    },
    "6222": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4472,
        4534
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1899"
    },
    "6225": {
      "branch": 146,
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4472,
        4534
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "6226": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4472,
        4534
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "6228": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4472,
        4534
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "6229": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6233": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6235": {
      "op": "SHL"
    },
    "6236": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4472,
        4534
      ],
      "op": "DUP2",
      "path": "6"
    },
    "6237": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4472,
        4534
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "6238": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6240": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4472,
        4534
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "6242": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4472,
        4534
      ],
      "op": "DUP3",
      "path": "6"
    },
    "6243": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4472,
        4534
      ],
      "op": "ADD",
      "path": "6"
    },
    "6244": {
      "op": "MSTORE"
    },
    "6245": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "6247": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6249": {
      "op": "DUP3"
    },
    "6250": {
      "op": "ADD"
    },
    "6251": {
      "op": "MSTORE"
    },
    "6252": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F766520746F2063616C6C657200000000000000"
    },
    "6285": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6287": {
      "op": "DUP3"
    },
    "6288": {
      "op": "ADD"
    },
    "6289": {
      "op": "MSTORE"
    },
    "6290": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6292": {
      "op": "ADD"
    },
    "6293": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4472,
        4534
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xB50"
    },
    "6296": {
      "op": "JUMP"
    },
    "6297": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4472,
        4534
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "6298": {
      "fn": "Context._msgSender",
      "offset": [
        679,
        689
      ],
      "op": "CALLER",
      "path": "3"
    },
    "6299": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4579
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 56,
      "value": "0x0"
    },
    "6301": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4579
      ],
      "op": "DUP2",
      "path": "6"
    },
    "6302": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4579
      ],
      "op": "DUP2",
      "path": "6"
    },
    "6303": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4579
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "6304": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4565
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x5"
    },
    "6306": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4579
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "6308": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4579
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6309": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4579
      ],
      "op": "DUP2",
      "path": "6"
    },
    "6310": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4579
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "6311": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4579
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "6313": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4579
      ],
      "op": "DUP1",
      "path": "6"
    },
    "6314": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4579
      ],
      "op": "DUP4",
      "path": "6"
    },
    "6315": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4579
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "6316": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6318": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6320": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6322": {
      "op": "SHL"
    },
    "6323": {
      "op": "SUB"
    },
    "6324": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4589
      ],
      "op": "DUP8",
      "path": "6"
    },
    "6325": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4589
      ],
      "op": "AND",
      "path": "6"
    },
    "6326": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4589
      ],
      "op": "DUP1",
      "path": "6"
    },
    "6327": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4589
      ],
      "op": "DUP6",
      "path": "6"
    },
    "6328": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4589
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "6329": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4589
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6330": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4589
      ],
      "op": "DUP4",
      "path": "6"
    },
    "6331": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4589
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "6332": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4589
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "6333": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4589
      ],
      "op": "DUP2",
      "path": "6"
    },
    "6334": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4589
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6335": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4589
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "6336": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4600
      ],
      "op": "DUP1",
      "path": "6"
    },
    "6337": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4600
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "6338": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "6340": {
      "op": "NOT"
    },
    "6341": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4600
      ],
      "op": "AND",
      "path": "6"
    },
    "6342": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4600
      ],
      "op": "DUP7",
      "path": "6"
    },
    "6343": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4600
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "6344": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4600
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "6345": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4600
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6346": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4600
      ],
      "op": "DUP2",
      "path": "6"
    },
    "6347": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4600
      ],
      "op": "OR",
      "path": "6"
    },
    "6348": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4600
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6349": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4600
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "6350": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4600
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "6351": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4616,
        4664
      ],
      "op": "SWAP1",
      "path": "6",
      "statement": 57
    },
    "6352": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4616,
        4664
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "6353": {
      "op": "SWAP1"
    },
    "6354": {
      "op": "DUP2"
    },
    "6355": {
      "op": "MSTORE"
    },
    "6356": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4589
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "6357": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4547,
        4589
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "6358": {
      "fn": "Context._msgSender",
      "offset": [
        679,
        689
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "6359": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4616,
        4664
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
    },
    "6392": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4616,
        4664
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "6393": {
      "op": "ADD"
    },
    "6394": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4616,
        4664
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "6396": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4616,
        4664
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "6397": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4616,
        4664
      ],
      "op": "DUP1",
      "path": "6"
    },
    "6398": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4616,
        4664
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "6399": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4616,
        4664
      ],
      "op": "SUB",
      "path": "6"
    },
    "6400": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4616,
        4664
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6401": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4616,
        4664
      ],
      "op": "LOG3",
      "path": "6"
    },
    "6402": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4377,
        4672
      ],
      "op": "POP",
      "path": "6"
    },
    "6403": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4377,
        4672
      ],
      "op": "POP",
      "path": "6"
    },
    "6404": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "o",
      "offset": [
        4377,
        4672
      ],
      "op": "JUMP",
      "path": "6"
    },
    "6405": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5640,
        5968
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "6406": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5815,
        5856
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 58,
      "value": "0x190F"
    },
    "6409": {
      "fn": "Context._msgSender",
      "offset": [
        679,
        689
      ],
      "op": "CALLER",
      "path": "3"
    },
    "6410": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5848,
        5855
      ],
      "op": "DUP4",
      "path": "6"
    },
    "6411": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5815,
        5833
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2080"
    },
    "6414": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5815,
        5856
      ],
      "op": "JUMP",
      "path": "6"
    },
    "6415": {
      "branch": 147,
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5815,
        5856
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "6416": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5807,
        5910
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x192B"
    },
    "6419": {
      "branch": 147,
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5807,
        5910
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "6420": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5807,
        5910
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "6422": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5807,
        5910
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "6423": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6427": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6429": {
      "op": "SHL"
    },
    "6430": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5807,
        5910
      ],
      "op": "DUP2",
      "path": "6"
    },
    "6431": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5807,
        5910
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "6432": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5807,
        5910
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "6434": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5807,
        5910
      ],
      "op": "ADD",
      "path": "6"
    },
    "6435": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5807,
        5910
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xB50"
    },
    "6438": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5807,
        5910
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6439": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5807,
        5910
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3449"
    },
    "6442": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5807,
        5910
      ],
      "op": "JUMP",
      "path": "6"
    },
    "6443": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5807,
        5910
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "6444": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5921,
        5960
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 59,
      "value": "0x1937"
    },
    "6447": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5935,
        5939
      ],
      "op": "DUP5",
      "path": "6"
    },
    "6448": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5941,
        5943
      ],
      "op": "DUP5",
      "path": "6"
    },
    "6449": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5945,
        5952
      ],
      "op": "DUP5",
      "path": "6"
    },
    "6450": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5954,
        5959
      ],
      "op": "DUP5",
      "path": "6"
    },
    "6451": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5921,
        5934
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2370"
    },
    "6454": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5921,
        5960
      ],
      "op": "JUMP",
      "path": "6"
    },
    "6455": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5921,
        5960
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "6456": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5640,
        5968
      ],
      "op": "POP",
      "path": "6"
    },
    "6457": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5640,
        5968
      ],
      "op": "POP",
      "path": "6"
    },
    "6458": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5640,
        5968
      ],
      "op": "POP",
      "path": "6"
    },
    "6459": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5640,
        5968
      ],
      "op": "POP",
      "path": "6"
    },
    "6460": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "o",
      "offset": [
        5640,
        5968
      ],
      "op": "JUMP",
      "path": "6"
    },
    "6461": {
      "fn": "Wizards.tokenURI",
      "offset": [
        9400,
        10396
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "6462": {
      "fn": "ERC721._exists",
      "offset": [
        7543,
        7547
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "6464": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "DUP2",
      "path": "6"
    },
    "6465": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "DUP2",
      "path": "6"
    },
    "6466": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "6467": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7574
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2"
    },
    "6469": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "6471": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "6472": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "6474": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6475": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "6476": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "6477": {
      "fn": "Wizards.tokenURI",
      "offset": [
        9474,
        9487
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x60"
    },
    "6479": {
      "fn": "Wizards.tokenURI",
      "offset": [
        9474,
        9487
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "6480": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6482": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6484": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6486": {
      "op": "SHL"
    },
    "6487": {
      "op": "SUB"
    },
    "6488": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "AND",
      "path": "6"
    },
    "6489": {
      "fn": "Wizards.tokenURI",
      "offset": [
        9500,
        9577
      ],
      "op": "PUSH2",
      "path": "22",
      "statement": 60,
      "value": "0x19BC"
    },
    "6492": {
      "fn": "Wizards.tokenURI",
      "offset": [
        9500,
        9577
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "6493": {
      "fn": "Wizards.tokenURI",
      "offset": [
        9500,
        9577
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "6495": {
      "fn": "Wizards.tokenURI",
      "offset": [
        9500,
        9577
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "6496": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6500": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6502": {
      "op": "SHL"
    },
    "6503": {
      "fn": "Wizards.tokenURI",
      "offset": [
        9500,
        9577
      ],
      "op": "DUP2",
      "path": "22"
    },
    "6504": {
      "fn": "Wizards.tokenURI",
      "offset": [
        9500,
        9577
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "6505": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6507": {
      "fn": "Wizards.tokenURI",
      "offset": [
        9500,
        9577
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "6509": {
      "fn": "Wizards.tokenURI",
      "offset": [
        9500,
        9577
      ],
      "op": "DUP3",
      "path": "22"
    },
    "6510": {
      "fn": "Wizards.tokenURI",
      "offset": [
        9500,
        9577
      ],
      "op": "ADD",
      "path": "22"
    },
    "6511": {
      "op": "MSTORE"
    },
    "6512": {
      "op": "PUSH1",
      "value": "0x2F"
    },
    "6514": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6516": {
      "op": "DUP3"
    },
    "6517": {
      "op": "ADD"
    },
    "6518": {
      "op": "MSTORE"
    },
    "6519": {
      "op": "PUSH32",
      "value": "0x4552433732314D657461646174613A2055524920717565727920666F72206E6F"
    },
    "6552": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6554": {
      "op": "DUP3"
    },
    "6555": {
      "op": "ADD"
    },
    "6556": {
      "op": "MSTORE"
    },
    "6557": {
      "op": "PUSH15",
      "value": "0x3732BC34B9BA32B73A103A37B5B2B7"
    },
    "6573": {
      "op": "PUSH1",
      "value": "0x89"
    },
    "6575": {
      "op": "SHL"
    },
    "6576": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6578": {
      "op": "DUP3"
    },
    "6579": {
      "op": "ADD"
    },
    "6580": {
      "op": "MSTORE"
    },
    "6581": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "6583": {
      "op": "ADD"
    },
    "6584": {
      "fn": "Wizards.tokenURI",
      "offset": [
        9500,
        9577
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xB50"
    },
    "6587": {
      "op": "JUMP"
    },
    "6588": {
      "fn": "Wizards.tokenURI",
      "offset": [
        9500,
        9577
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "6589": {
      "fn": "Wizards.tokenURI",
      "offset": [
        9662,
        9686
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "6591": {
      "fn": "Wizards.tokenURI",
      "offset": [
        9662,
        9686
      ],
      "op": "DUP3",
      "path": "22"
    },
    "6592": {
      "fn": "Wizards.tokenURI",
      "offset": [
        9662,
        9686
      ],
      "op": "DUP2",
      "path": "22"
    },
    "6593": {
      "fn": "Wizards.tokenURI",
      "offset": [
        9662,
        9686
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "6594": {
      "fn": "Wizards.tokenURI",
      "offset": [
        9662,
        9676
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xB"
    },
    "6596": {
      "fn": "Wizards.tokenURI",
      "offset": [
        9662,
        9686
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "6598": {
      "fn": "Wizards.tokenURI",
      "offset": [
        9662,
        9686
      ],
      "op": "DUP2",
      "path": "22"
    },
    "6599": {
      "fn": "Wizards.tokenURI",
      "offset": [
        9662,
        9686
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "6600": {
      "fn": "Wizards.tokenURI",
      "offset": [
        9662,
        9686
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "6601": {
      "fn": "Wizards.tokenURI",
      "offset": [
        9662,
        9686
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "6603": {
      "fn": "Wizards.tokenURI",
      "offset": [
        9662,
        9686
      ],
      "op": "DUP3",
      "path": "22"
    },
    "6604": {
      "fn": "Wizards.tokenURI",
      "offset": [
        9662,
        9686
      ],
      "op": "KECCAK256",
      "path": "22"
    },
    "6605": {
      "fn": "Wizards.tokenURI",
      "offset": [
        9662,
        9706
      ],
      "op": "ADD",
      "path": "22"
    },
    "6606": {
      "fn": "Wizards.tokenURI",
      "offset": [
        9662,
        9706
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "6607": {
      "fn": "Wizards.tokenURI",
      "offset": [
        9621,
        9648
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x60"
    },
    "6609": {
      "fn": "Wizards.tokenURI",
      "offset": [
        9621,
        9648
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "6610": {
      "branch": 137,
      "fn": "Wizards.tokenURI",
      "offset": [
        9662,
        9709
      ],
      "op": "SUB",
      "path": "22"
    },
    "6611": {
      "fn": "Wizards.tokenURI",
      "offset": [
        9659,
        10223
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x19F4"
    },
    "6614": {
      "branch": 137,
      "fn": "Wizards.tokenURI",
      "offset": [
        9659,
        10223
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "6615": {
      "op": "POP"
    },
    "6616": {
      "fn": "Wizards.tokenURI",
      "offset": [
        9740,
        9759
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 61,
      "value": "0x40"
    },
    "6618": {
      "fn": "Wizards.tokenURI",
      "offset": [
        9740,
        9759
      ],
      "op": "DUP1",
      "path": "22"
    },
    "6619": {
      "fn": "Wizards.tokenURI",
      "offset": [
        9740,
        9759
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "6620": {
      "fn": "Wizards.tokenURI",
      "offset": [
        9740,
        9759
      ],
      "op": "DUP1",
      "path": "22"
    },
    "6621": {
      "fn": "Wizards.tokenURI",
      "offset": [
        9740,
        9759
      ],
      "op": "DUP3",
      "path": "22"
    },
    "6622": {
      "fn": "Wizards.tokenURI",
      "offset": [
        9740,
        9759
      ],
      "op": "ADD",
      "path": "22"
    },
    "6623": {
      "fn": "Wizards.tokenURI",
      "offset": [
        9740,
        9759
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "6624": {
      "fn": "Wizards.tokenURI",
      "offset": [
        9740,
        9759
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "6625": {
      "fn": "Wizards.tokenURI",
      "offset": [
        9740,
        9759
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "6626": {
      "fn": "Wizards.tokenURI",
      "offset": [
        9740,
        9759
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x1"
    },
    "6628": {
      "fn": "Wizards.tokenURI",
      "offset": [
        9740,
        9759
      ],
      "op": "DUP2",
      "path": "22"
    },
    "6629": {
      "fn": "Wizards.tokenURI",
      "offset": [
        9740,
        9759
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "6630": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "6632": {
      "op": "PUSH1",
      "value": "0xFC"
    },
    "6634": {
      "op": "SHL"
    },
    "6635": {
      "fn": "Wizards.tokenURI",
      "offset": [
        9740,
        9759
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "6637": {
      "fn": "Wizards.tokenURI",
      "offset": [
        9740,
        9759
      ],
      "op": "DUP3",
      "path": "22"
    },
    "6638": {
      "fn": "Wizards.tokenURI",
      "offset": [
        9740,
        9759
      ],
      "op": "ADD",
      "path": "22"
    },
    "6639": {
      "fn": "Wizards.tokenURI",
      "offset": [
        9740,
        9759
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "6640": {
      "fn": "Wizards.tokenURI",
      "offset": [
        9659,
        10223
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1A63"
    },
    "6643": {
      "fn": "Wizards.tokenURI",
      "offset": [
        9659,
        10223
      ],
      "op": "JUMP",
      "path": "22"
    },
    "6644": {
      "fn": "Wizards.tokenURI",
      "offset": [
        9659,
        10223
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "6645": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10025,
        10055
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 62,
      "value": "0x13"
    },
    "6647": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10025,
        10055
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "6648": {
      "fn": "Wizards.tokenURI",
      "offset": [
        9977,
        10001
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "6650": {
      "fn": "Wizards.tokenURI",
      "offset": [
        9977,
        10001
      ],
      "op": "DUP5",
      "path": "22"
    },
    "6651": {
      "fn": "Wizards.tokenURI",
      "offset": [
        9977,
        10001
      ],
      "op": "DUP2",
      "path": "22"
    },
    "6652": {
      "fn": "Wizards.tokenURI",
      "offset": [
        9977,
        10001
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "6653": {
      "fn": "Wizards.tokenURI",
      "offset": [
        9977,
        9991
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xB"
    },
    "6655": {
      "fn": "Wizards.tokenURI",
      "offset": [
        9977,
        10001
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "6657": {
      "fn": "Wizards.tokenURI",
      "offset": [
        9977,
        10001
      ],
      "op": "DUP2",
      "path": "22"
    },
    "6658": {
      "fn": "Wizards.tokenURI",
      "offset": [
        9977,
        10001
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "6659": {
      "fn": "Wizards.tokenURI",
      "offset": [
        9977,
        10001
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "6660": {
      "fn": "Wizards.tokenURI",
      "offset": [
        9977,
        10001
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "6662": {
      "fn": "Wizards.tokenURI",
      "offset": [
        9977,
        10001
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "6663": {
      "fn": "Wizards.tokenURI",
      "offset": [
        9977,
        10001
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "6664": {
      "fn": "Wizards.tokenURI",
      "offset": [
        9977,
        10001
      ],
      "op": "KECCAK256",
      "path": "22"
    },
    "6665": {
      "fn": "Wizards.tokenURI",
      "offset": [
        9977,
        10021
      ],
      "op": "ADD",
      "path": "22"
    },
    "6666": {
      "fn": "Wizards.tokenURI",
      "offset": [
        9977,
        10021
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "6667": {
      "fn": "Wizards.tokenURI",
      "offset": [
        9917,
        10211
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1A60"
    },
    "6670": {
      "fn": "Wizards.tokenURI",
      "offset": [
        9917,
        10211
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "6671": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10081,
        10082
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x7"
    },
    "6673": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10081,
        10082
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "6674": {
      "fn": "Wizards.tokenURI",
      "offset": [
        9959,
        10021
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1A1B"
    },
    "6677": {
      "fn": "Wizards.tokenURI",
      "offset": [
        9959,
        10021
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "6678": {
      "fn": "Wizards.tokenURI",
      "offset": [
        9959,
        9974
      ],
      "op": "TIMESTAMP",
      "path": "22"
    },
    "6679": {
      "fn": "Wizards.tokenURI",
      "offset": [
        9959,
        10021
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x3383"
    },
    "6682": {
      "fn": "Wizards.tokenURI",
      "jump": "i",
      "offset": [
        9959,
        10021
      ],
      "op": "JUMP",
      "path": "22"
    },
    "6683": {
      "fn": "Wizards.tokenURI",
      "offset": [
        9959,
        10021
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "6684": {
      "fn": "Wizards.tokenURI",
      "offset": [
        9958,
        10055
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1A25"
    },
    "6687": {
      "fn": "Wizards.tokenURI",
      "offset": [
        9958,
        10055
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "6688": {
      "fn": "Wizards.tokenURI",
      "offset": [
        9958,
        10055
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "6689": {
      "fn": "Wizards.tokenURI",
      "offset": [
        9958,
        10055
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x33B0"
    },
    "6692": {
      "fn": "Wizards.tokenURI",
      "jump": "i",
      "offset": [
        9958,
        10055
      ],
      "op": "JUMP",
      "path": "22"
    },
    "6693": {
      "fn": "Wizards.tokenURI",
      "offset": [
        9958,
        10055
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "6694": {
      "branch": 138,
      "fn": "Wizards.tokenURI",
      "offset": [
        9958,
        10082
      ],
      "op": "GT",
      "path": "22"
    },
    "6695": {
      "fn": "Wizards.tokenURI",
      "offset": [
        9958,
        10186
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1A59"
    },
    "6698": {
      "branch": 138,
      "fn": "Wizards.tokenURI",
      "offset": [
        9958,
        10186
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "6699": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10156,
        10186
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x13"
    },
    "6701": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10156,
        10186
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "6702": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10108,
        10132
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "6704": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10108,
        10132
      ],
      "op": "DUP6",
      "path": "22"
    },
    "6705": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10108,
        10132
      ],
      "op": "DUP2",
      "path": "22"
    },
    "6706": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10108,
        10132
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "6707": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10108,
        10122
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xB"
    },
    "6709": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10108,
        10132
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "6711": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10108,
        10132
      ],
      "op": "DUP2",
      "path": "22"
    },
    "6712": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10108,
        10132
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "6713": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10108,
        10132
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "6714": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10108,
        10132
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "6716": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10108,
        10132
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "6717": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10108,
        10132
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "6718": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10108,
        10132
      ],
      "op": "KECCAK256",
      "path": "22"
    },
    "6719": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10108,
        10152
      ],
      "op": "ADD",
      "path": "22"
    },
    "6720": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10108,
        10152
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "6721": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10090,
        10152
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1A4A"
    },
    "6724": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10090,
        10152
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "6725": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10090,
        10105
      ],
      "op": "TIMESTAMP",
      "path": "22"
    },
    "6726": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10090,
        10152
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x3383"
    },
    "6729": {
      "fn": "Wizards.tokenURI",
      "jump": "i",
      "offset": [
        10090,
        10152
      ],
      "op": "JUMP",
      "path": "22"
    },
    "6730": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10090,
        10152
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "6731": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10089,
        10186
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1A54"
    },
    "6734": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10089,
        10186
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "6735": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10089,
        10186
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "6736": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10089,
        10186
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x33B0"
    },
    "6739": {
      "fn": "Wizards.tokenURI",
      "jump": "i",
      "offset": [
        10089,
        10186
      ],
      "op": "JUMP",
      "path": "22"
    },
    "6740": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10089,
        10186
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "6741": {
      "fn": "Wizards.tokenURI",
      "offset": [
        9917,
        9933
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1EF3"
    },
    "6744": {
      "fn": "Wizards.tokenURI",
      "jump": "i",
      "offset": [
        9917,
        10211
      ],
      "op": "JUMP",
      "path": "22"
    },
    "6745": {
      "fn": "Wizards.tokenURI",
      "offset": [
        9958,
        10186
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "6746": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10085,
        10086
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x7"
    },
    "6748": {
      "fn": "Wizards.tokenURI",
      "offset": [
        9917,
        9933
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1EF3"
    },
    "6751": {
      "fn": "Wizards.tokenURI",
      "jump": "i",
      "offset": [
        9917,
        10211
      ],
      "op": "JUMP",
      "path": "22"
    },
    "6752": {
      "fn": "Wizards.tokenURI",
      "offset": [
        9917,
        10211
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "6753": {
      "fn": "Wizards.tokenURI",
      "offset": [
        9878,
        10211
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "6754": {
      "fn": "Wizards.tokenURI",
      "offset": [
        9878,
        10211
      ],
      "op": "POP",
      "path": "22"
    },
    "6755": {
      "fn": "Wizards.tokenURI",
      "offset": [
        9659,
        10223
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "6756": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10265,
        10335
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "6758": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10265,
        10335
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "6759": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10233,
        10255
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "6761": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10233,
        10255
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "6762": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10265,
        10335
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1A7A"
    },
    "6765": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10265,
        10335
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "6766": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10282,
        10311
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x16"
    },
    "6768": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10282,
        10311
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "6769": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10313,
        10326
      ],
      "op": "DUP5",
      "path": "22"
    },
    "6770": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10313,
        10326
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "6771": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10265,
        10335
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "6773": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10265,
        10335
      ],
      "op": "ADD",
      "path": "22"
    },
    "6774": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10265,
        10335
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x35F3"
    },
    "6777": {
      "fn": "Wizards.tokenURI",
      "jump": "i",
      "offset": [
        10265,
        10335
      ],
      "op": "JUMP",
      "path": "22"
    },
    "6778": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10265,
        10335
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "6779": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10265,
        10335
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "6781": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10265,
        10335
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "6782": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10265,
        10335
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "6784": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10265,
        10335
      ],
      "op": "DUP2",
      "path": "22"
    },
    "6785": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10265,
        10335
      ],
      "op": "DUP4",
      "path": "22"
    },
    "6786": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10265,
        10335
      ],
      "op": "SUB",
      "path": "22"
    },
    "6787": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10265,
        10335
      ],
      "op": "SUB",
      "path": "22"
    },
    "6788": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10265,
        10335
      ],
      "op": "DUP2",
      "path": "22"
    },
    "6789": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10265,
        10335
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "6790": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10265,
        10335
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "6791": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10265,
        10335
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "6793": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10265,
        10335
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "6794": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10233,
        10336
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "6795": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10233,
        10336
      ],
      "op": "POP",
      "path": "22"
    },
    "6796": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10354,
        10388
      ],
      "op": "PUSH2",
      "path": "22",
      "statement": 63,
      "value": "0x1A95"
    },
    "6799": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10369,
        10377
      ],
      "op": "DUP5",
      "path": "22"
    },
    "6800": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10379,
        10387
      ],
      "op": "DUP3",
      "path": "22"
    },
    "6801": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10354,
        10368
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x7C7"
    },
    "6804": {
      "fn": "Wizards.tokenURI",
      "jump": "i",
      "offset": [
        10354,
        10388
      ],
      "op": "JUMP",
      "path": "22"
    },
    "6805": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10354,
        10388
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "6806": {
      "fn": "Wizards.tokenURI",
      "offset": [
        10347,
        10388
      ],
      "op": "SWAP5",
      "path": "22"
    },
    "6807": {
      "fn": "Wizards.tokenURI",
      "offset": [
        9400,
        10396
      ],
      "op": "SWAP4",
      "path": "22"
    },
    "6808": {
      "op": "POP"
    },
    "6809": {
      "op": "POP"
    },
    "6810": {
      "op": "POP"
    },
    "6811": {
      "op": "POP"
    },
    "6812": {
      "fn": "Wizards.tokenURI",
      "jump": "o",
      "offset": [
        9400,
        10396
      ],
      "op": "JUMP",
      "path": "22"
    },
    "6813": {
      "offset": [
        1689,
        1729
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "6814": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1689,
        1729
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xE"
    },
    "6816": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1689,
        1729
      ],
      "op": "DUP1",
      "path": "22"
    },
    "6817": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1689,
        1729
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "6818": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1689,
        1729
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xF"
    },
    "6820": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1689,
        1729
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "6821": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1689,
        1729
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x10"
    },
    "6823": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1689,
        1729
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "6824": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1689,
        1729
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x11"
    },
    "6826": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1689,
        1729
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "6827": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1689,
        1729
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x12"
    },
    "6829": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1689,
        1729
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "6830": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1689,
        1729
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x13"
    },
    "6832": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1689,
        1729
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "6833": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1689,
        1729
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x14"
    },
    "6835": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1689,
        1729
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "6836": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1689,
        1729
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x15"
    },
    "6838": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1689,
        1729
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "6839": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1689,
        1729
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x16"
    },
    "6841": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1689,
        1729
      ],
      "op": "DUP1",
      "path": "22"
    },
    "6842": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1689,
        1729
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "6843": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1689,
        1729
      ],
      "op": "SWAP9",
      "path": "22"
    },
    "6844": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1689,
        1729
      ],
      "op": "SWAP10",
      "path": "22"
    },
    "6845": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1689,
        1729
      ],
      "op": "SWAP8",
      "path": "22"
    },
    "6846": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1689,
        1729
      ],
      "op": "SWAP9",
      "path": "22"
    },
    "6847": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1689,
        1729
      ],
      "op": "SWAP7",
      "path": "22"
    },
    "6848": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1689,
        1729
      ],
      "op": "SWAP8",
      "path": "22"
    },
    "6849": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1689,
        1729
      ],
      "op": "SWAP6",
      "path": "22"
    },
    "6850": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1689,
        1729
      ],
      "op": "SWAP7",
      "path": "22"
    },
    "6851": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6853": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6855": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6857": {
      "op": "SHL"
    },
    "6858": {
      "op": "SUB"
    },
    "6859": {
      "offset": [
        1689,
        1729
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "6860": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1689,
        1729
      ],
      "op": "SWAP6",
      "path": "22"
    },
    "6861": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1689,
        1729
      ],
      "op": "AND",
      "path": "22"
    },
    "6862": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1689,
        1729
      ],
      "op": "SWAP6",
      "path": "22"
    },
    "6863": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1689,
        1729
      ],
      "op": "SWAP4",
      "path": "22"
    },
    "6864": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1689,
        1729
      ],
      "op": "SWAP5",
      "path": "22"
    },
    "6865": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1689,
        1729
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "6866": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1689,
        1729
      ],
      "op": "SWAP4",
      "path": "22"
    },
    "6867": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1689,
        1729
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "6868": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1689,
        1729
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "6869": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1689,
        1729
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1ADD"
    },
    "6872": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1689,
        1729
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "6873": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1689,
        1729
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x33C4"
    },
    "6876": {
      "fn": "Wizards.tokenURI",
      "jump": "i",
      "offset": [
        1689,
        1729
      ],
      "op": "JUMP",
      "path": "22"
    },
    "6877": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1689,
        1729
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "6878": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1689,
        1729
      ],
      "op": "DUP1",
      "path": "22"
    },
    "6879": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1689,
        1729
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x1F"
    },
    "6881": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1689,
        1729
      ],
      "op": "ADD",
      "path": "22"
    },
    "6882": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1689,
        1729
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "6884": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1689,
        1729
      ],
      "op": "DUP1",
      "path": "22"
    },
    "6885": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1689,
        1729
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "6886": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1689,
        1729
      ],
      "op": "DIV",
      "path": "22"
    },
    "6887": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1689,
        1729
      ],
      "op": "MUL",
      "path": "22"
    },
    "6888": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1689,
        1729
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "6890": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1689,
        1729
      ],
      "op": "ADD",
      "path": "22"
    },
    "6891": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1689,
        1729
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "6893": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1689,
        1729
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "6894": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1689,
        1729
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "6895": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1689,
        1729
      ],
      "op": "DUP2",
      "path": "22"
    },
    "6896": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1689,
        1729
      ],
      "op": "ADD",
      "path": "22"
    },
    "6897": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1689,
        1729
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "6899": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1689,
        1729
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "6900": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1689,
        1729
      ],
      "op": "DUP1",
      "path": "22"
    },
    "6901": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1689,
        1729
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "6902": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1689,
        1729
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "6903": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1689,
        1729
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "6904": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1689,
        1729
      ],
      "op": "DUP2",
      "path": "22"
    },
    "6905": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1689,
        1729
      ],
      "op": "DUP2",
      "path": "22"
    },
    "6906": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1689,
        1729
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "6907": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1689,
        1729
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "6909": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1689,
        1729
      ],
      "op": "ADD",
      "path": "22"
    },
    "6910": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1689,
        1729
      ],
      "op": "DUP3",
      "path": "22"
    },
    "6911": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1689,
        1729
      ],
      "op": "DUP1",
      "path": "22"
    },
    "6912": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1689,
        1729
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "6913": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1689,
        1729
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1B09"
    },
    "6916": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1689,
        1729
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "6917": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1689,
        1729
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x33C4"
    },
    "6920": {
      "fn": "Wizards.tokenURI",
      "jump": "i",
      "offset": [
        1689,
        1729
      ],
      "op": "JUMP",
      "path": "22"
    },
    "6921": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1689,
        1729
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "6922": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1689,
        1729
      ],
      "op": "DUP1",
      "path": "22"
    },
    "6923": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1689,
        1729
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "6924": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1689,
        1729
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1B56"
    },
    "6927": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1689,
        1729
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "6928": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1689,
        1729
      ],
      "op": "DUP1",
      "path": "22"
    },
    "6929": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1689,
        1729
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x1F"
    },
    "6931": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1689,
        1729
      ],
      "op": "LT",
      "path": "22"
    },
    "6932": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1689,
        1729
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1B2B"
    },
    "6935": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1689,
        1729
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "6936": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1689,
        1729
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x100"
    },
    "6939": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1689,
        1729
      ],
      "op": "DUP1",
      "path": "22"
    },
    "6940": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1689,
        1729
      ],
      "op": "DUP4",
      "path": "22"
    },
    "6941": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1689,
        1729
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "6942": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1689,
        1729
      ],
      "op": "DIV",
      "path": "22"
    },
    "6943": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1689,
        1729
      ],
      "op": "MUL",
      "path": "22"
    },
    "6944": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1689,
        1729
      ],
      "op": "DUP4",
      "path": "22"
    },
    "6945": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1689,
        1729
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "6946": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1689,
        1729
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "6947": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1689,
        1729
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "6949": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1689,
        1729
      ],
      "op": "ADD",
      "path": "22"
    },
    "6950": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1689,
        1729
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "6951": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1689,
        1729
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1B56"
    },
    "6954": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1689,
        1729
      ],
      "op": "JUMP",
      "path": "22"
    },
    "6955": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1689,
        1729
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "6956": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1689,
        1729
      ],
      "op": "DUP3",
      "path": "22"
    },
    "6957": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1689,
        1729
      ],
      "op": "ADD",
      "path": "22"
    },
    "6958": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1689,
        1729
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "6959": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1689,
        1729
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "6960": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1689,
        1729
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "6962": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1689,
        1729
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "6963": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1689,
        1729
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "6965": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1689,
        1729
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "6967": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1689,
        1729
      ],
      "op": "KECCAK256",
      "path": "22"
    },
    "6968": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1689,
        1729
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "6969": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1689,
        1729
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "6970": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1689,
        1729
      ],
      "op": "DUP2",
      "path": "22"
    },
    "6971": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1689,
        1729
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "6972": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1689,
        1729
      ],
      "op": "DUP2",
      "path": "22"
    },
    "6973": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1689,
        1729
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "6974": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1689,
        1729
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "6975": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1689,
        1729
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x1"
    },
    "6977": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1689,
        1729
      ],
      "op": "ADD",
      "path": "22"
    },
    "6978": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1689,
        1729
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "6979": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1689,
        1729
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "6981": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1689,
        1729
      ],
      "op": "ADD",
      "path": "22"
    },
    "6982": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1689,
        1729
      ],
      "op": "DUP1",
      "path": "22"
    },
    "6983": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1689,
        1729
      ],
      "op": "DUP4",
      "path": "22"
    },
    "6984": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1689,
        1729
      ],
      "op": "GT",
      "path": "22"
    },
    "6985": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1689,
        1729
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1B39"
    },
    "6988": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1689,
        1729
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "6989": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1689,
        1729
      ],
      "op": "DUP3",
      "path": "22"
    },
    "6990": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1689,
        1729
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "6991": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1689,
        1729
      ],
      "op": "SUB",
      "path": "22"
    },
    "6992": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1689,
        1729
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x1F"
    },
    "6994": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1689,
        1729
      ],
      "op": "AND",
      "path": "22"
    },
    "6995": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1689,
        1729
      ],
      "op": "DUP3",
      "path": "22"
    },
    "6996": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1689,
        1729
      ],
      "op": "ADD",
      "path": "22"
    },
    "6997": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1689,
        1729
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "6998": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1689,
        1729
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "6999": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1689,
        1729
      ],
      "op": "POP",
      "path": "22"
    },
    "7000": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1689,
        1729
      ],
      "op": "POP",
      "path": "22"
    },
    "7001": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1689,
        1729
      ],
      "op": "POP",
      "path": "22"
    },
    "7002": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1689,
        1729
      ],
      "op": "POP",
      "path": "22"
    },
    "7003": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1689,
        1729
      ],
      "op": "POP",
      "path": "22"
    },
    "7004": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1689,
        1729
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "7005": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1689,
        1729
      ],
      "op": "POP",
      "path": "22"
    },
    "7006": {
      "fn": "Wizards.tokenURI",
      "offset": [
        1689,
        1729
      ],
      "op": "DUP10",
      "path": "22"
    },
    "7007": {
      "fn": "Wizards.tokenURI",
      "jump": "o",
      "offset": [
        1689,
        1729
      ],
      "op": "JUMP",
      "path": "22"
    },
    "7008": {
      "fn": "Wizards.updateBattler",
      "offset": [
        15544,
        15770
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "7009": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0xA"
    },
    "7011": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "7012": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7014": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7016": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7018": {
      "op": "SHL"
    },
    "7019": {
      "op": "SUB"
    },
    "7020": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "AND",
      "path": "8"
    },
    "7021": {
      "fn": "Context._msgSender",
      "offset": [
        679,
        689
      ],
      "op": "CALLER",
      "path": "3"
    },
    "7022": {
      "offset": [
        1221,
        1244
      ],
      "op": "EQ",
      "path": "8"
    },
    "7023": {
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1B8A"
    },
    "7026": {
      "offset": [
        1213,
        1281
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "7027": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "7029": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "7030": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7034": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7036": {
      "op": "SHL"
    },
    "7037": {
      "offset": [
        1213,
        1281
      ],
      "op": "DUP2",
      "path": "8"
    },
    "7038": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "7039": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "7041": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "ADD",
      "path": "8"
    },
    "7042": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xB50"
    },
    "7045": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "7046": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x349A"
    },
    "7049": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1213,
        1281
      ],
      "op": "JUMP",
      "path": "8"
    },
    "7050": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "7051": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7053": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7055": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7057": {
      "op": "SHL"
    },
    "7058": {
      "op": "SUB"
    },
    "7059": {
      "fn": "Wizards.updateBattler",
      "offset": [
        15623,
        15645
      ],
      "op": "DUP2",
      "path": "22",
      "statement": 64
    },
    "7060": {
      "fn": "Wizards.updateBattler",
      "offset": [
        15623,
        15645
      ],
      "op": "AND",
      "path": "22"
    },
    "7061": {
      "fn": "Wizards.updateBattler",
      "offset": [
        15623,
        15645
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "7062": {
      "fn": "Wizards.updateBattler",
      "offset": [
        15623,
        15645
      ],
      "op": "DUP1",
      "path": "22"
    },
    "7063": {
      "fn": "Wizards.updateBattler",
      "offset": [
        15623,
        15645
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "7064": {
      "branch": 139,
      "fn": "Wizards.updateBattler",
      "offset": [
        15623,
        15645
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "7065": {
      "fn": "Wizards.updateBattler",
      "offset": [
        15623,
        15668
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1BB0"
    },
    "7068": {
      "branch": 139,
      "fn": "Wizards.updateBattler",
      "offset": [
        15623,
        15668
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "7069": {
      "op": "POP"
    },
    "7070": {
      "fn": "Wizards.updateBattler",
      "offset": [
        15661,
        15668
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xC"
    },
    "7072": {
      "fn": "Wizards.updateBattler",
      "offset": [
        15661,
        15668
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "7073": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7075": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7077": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7079": {
      "op": "SHL"
    },
    "7080": {
      "op": "SUB"
    },
    "7081": {
      "fn": "Wizards.updateBattler",
      "offset": [
        15649,
        15668
      ],
      "op": "DUP3",
      "path": "22"
    },
    "7082": {
      "fn": "Wizards.updateBattler",
      "offset": [
        15649,
        15668
      ],
      "op": "DUP2",
      "path": "22"
    },
    "7083": {
      "fn": "Wizards.updateBattler",
      "offset": [
        15649,
        15668
      ],
      "op": "AND",
      "path": "22"
    },
    "7084": {
      "fn": "Wizards.updateBattler",
      "offset": [
        15661,
        15668
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "7085": {
      "fn": "Wizards.updateBattler",
      "offset": [
        15661,
        15668
      ],
      "op": "AND",
      "path": "22"
    },
    "7086": {
      "fn": "Wizards.updateBattler",
      "offset": [
        15649,
        15668
      ],
      "op": "EQ",
      "path": "22"
    },
    "7087": {
      "branch": 140,
      "fn": "Wizards.updateBattler",
      "offset": [
        15649,
        15668
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "7088": {
      "fn": "Wizards.updateBattler",
      "offset": [
        15623,
        15668
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "7089": {
      "fn": "Wizards.updateBattler",
      "offset": [
        15615,
        15697
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1BF7"
    },
    "7092": {
      "branch": 140,
      "fn": "Wizards.updateBattler",
      "offset": [
        15615,
        15697
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "7093": {
      "fn": "Wizards.updateBattler",
      "offset": [
        15615,
        15697
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "7095": {
      "fn": "Wizards.updateBattler",
      "offset": [
        15615,
        15697
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "7096": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7100": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7102": {
      "op": "SHL"
    },
    "7103": {
      "fn": "Wizards.updateBattler",
      "offset": [
        15615,
        15697
      ],
      "op": "DUP2",
      "path": "22"
    },
    "7104": {
      "fn": "Wizards.updateBattler",
      "offset": [
        15615,
        15697
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "7105": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7107": {
      "fn": "Wizards.updateBattler",
      "offset": [
        15615,
        15697
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "7109": {
      "fn": "Wizards.updateBattler",
      "offset": [
        15615,
        15697
      ],
      "op": "DUP3",
      "path": "22"
    },
    "7110": {
      "fn": "Wizards.updateBattler",
      "offset": [
        15615,
        15697
      ],
      "op": "ADD",
      "path": "22"
    },
    "7111": {
      "op": "MSTORE"
    },
    "7112": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "7114": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7116": {
      "op": "DUP3"
    },
    "7117": {
      "op": "ADD"
    },
    "7118": {
      "op": "MSTORE"
    },
    "7119": {
      "op": "PUSH24",
      "value": "0x496E76616C6964206F70657261746F722061646472657373"
    },
    "7144": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7146": {
      "op": "SHL"
    },
    "7147": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7149": {
      "op": "DUP3"
    },
    "7150": {
      "op": "ADD"
    },
    "7151": {
      "op": "MSTORE"
    },
    "7152": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7154": {
      "op": "ADD"
    },
    "7155": {
      "fn": "Wizards.updateBattler",
      "offset": [
        15615,
        15697
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xB50"
    },
    "7158": {
      "op": "JUMP"
    },
    "7159": {
      "fn": "Wizards.updateBattler",
      "offset": [
        15615,
        15697
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "7160": {
      "fn": "Wizards.updateBattler",
      "offset": [
        15708,
        15715
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 65,
      "value": "0xC"
    },
    "7162": {
      "fn": "Wizards.updateBattler",
      "offset": [
        15708,
        15726
      ],
      "op": "DUP1",
      "path": "22"
    },
    "7163": {
      "fn": "Wizards.updateBattler",
      "offset": [
        15708,
        15726
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "7164": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7166": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7168": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7170": {
      "op": "SHL"
    },
    "7171": {
      "op": "SUB"
    },
    "7172": {
      "op": "NOT"
    },
    "7173": {
      "fn": "Wizards.updateBattler",
      "offset": [
        15708,
        15726
      ],
      "op": "AND",
      "path": "22"
    },
    "7174": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7176": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7178": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7180": {
      "op": "SHL"
    },
    "7181": {
      "op": "SUB"
    },
    "7182": {
      "fn": "Wizards.updateBattler",
      "offset": [
        15708,
        15726
      ],
      "op": "DUP4",
      "path": "22"
    },
    "7183": {
      "fn": "Wizards.updateBattler",
      "offset": [
        15708,
        15726
      ],
      "op": "AND",
      "path": "22"
    },
    "7184": {
      "fn": "Wizards.updateBattler",
      "offset": [
        15708,
        15726
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "7185": {
      "fn": "Wizards.updateBattler",
      "offset": [
        15708,
        15726
      ],
      "op": "DUP2",
      "path": "22"
    },
    "7186": {
      "fn": "Wizards.updateBattler",
      "offset": [
        15708,
        15726
      ],
      "op": "OR",
      "path": "22"
    },
    "7187": {
      "fn": "Wizards.updateBattler",
      "offset": [
        15708,
        15726
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "7188": {
      "fn": "Wizards.updateBattler",
      "offset": [
        15708,
        15726
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "7189": {
      "fn": "Wizards.updateBattler",
      "offset": [
        15708,
        15726
      ],
      "op": "SSTORE",
      "path": "22"
    },
    "7190": {
      "fn": "Wizards.updateBattler",
      "offset": [
        15742,
        15762
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 66,
      "value": "0x40"
    },
    "7192": {
      "fn": "Wizards.updateBattler",
      "offset": [
        15742,
        15762
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "7193": {
      "op": "SWAP1"
    },
    "7194": {
      "op": "DUP2"
    },
    "7195": {
      "op": "MSTORE"
    },
    "7196": {
      "fn": "Wizards.updateBattler",
      "offset": [
        15742,
        15762
      ],
      "op": "PUSH32",
      "path": "22",
      "value": "0xA6996D36756222F1028B4A1A97CBFA625158CF8E69AC5DCF367DE3BD730D34A4"
    },
    "7229": {
      "fn": "Wizards.updateBattler",
      "offset": [
        15742,
        15762
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "7230": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7232": {
      "op": "ADD"
    },
    "7233": {
      "fn": "Wizards.updateBattler",
      "offset": [
        15742,
        15762
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1836"
    },
    "7236": {
      "op": "JUMP"
    },
    "7237": {
      "fn": "Wizards.rebirth",
      "offset": [
        5942,
        7185
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "7238": {
      "fn": "Wizards.rebirth",
      "offset": [
        6479,
        6500
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "7240": {
      "fn": "Wizards.rebirth",
      "offset": [
        6503,
        6527
      ],
      "op": "DUP2",
      "path": "22"
    },
    "7241": {
      "fn": "Wizards.rebirth",
      "offset": [
        6503,
        6527
      ],
      "op": "DUP2",
      "path": "22"
    },
    "7242": {
      "fn": "Wizards.rebirth",
      "offset": [
        6503,
        6527
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "7243": {
      "fn": "Wizards.rebirth",
      "offset": [
        6503,
        6517
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xB"
    },
    "7245": {
      "fn": "Wizards.rebirth",
      "offset": [
        6503,
        6527
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "7247": {
      "fn": "Wizards.rebirth",
      "offset": [
        6503,
        6527
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "7248": {
      "fn": "Wizards.rebirth",
      "offset": [
        6503,
        6527
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "7250": {
      "fn": "Wizards.rebirth",
      "offset": [
        6503,
        6527
      ],
      "op": "DUP2",
      "path": "22"
    },
    "7251": {
      "fn": "Wizards.rebirth",
      "offset": [
        6503,
        6527
      ],
      "op": "KECCAK256",
      "path": "22"
    },
    "7252": {
      "fn": "Wizards.rebirth",
      "offset": [
        6503,
        6527
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "7253": {
      "fn": "Wizards.rebirth",
      "offset": [
        6597,
        6610
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1C5D"
    },
    "7256": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1716,
        1726
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x8"
    },
    "7258": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1716,
        1733
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "7259": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1716,
        1733
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7260": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1628,
        1741
      ],
      "op": "JUMP",
      "path": "7"
    },
    "7261": {
      "fn": "Wizards.rebirth",
      "offset": [
        6597,
        6610
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "7262": {
      "fn": "Wizards.rebirth",
      "offset": [
        6641,
        6654
      ],
      "op": "DUP3",
      "path": "22"
    },
    "7263": {
      "fn": "Wizards.rebirth",
      "offset": [
        6641,
        6654
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "7264": {
      "fn": "Wizards.rebirth",
      "offset": [
        6580,
        6655
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "7266": {
      "fn": "Wizards.rebirth",
      "offset": [
        6580,
        6655
      ],
      "op": "DUP1",
      "path": "22"
    },
    "7267": {
      "fn": "Wizards.rebirth",
      "offset": [
        6580,
        6655
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "7268": {
      "fn": "Wizards.rebirth",
      "offset": [
        6580,
        6655
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "7270": {
      "fn": "Wizards.rebirth",
      "offset": [
        6580,
        6655
      ],
      "op": "DUP2",
      "path": "22"
    },
    "7271": {
      "fn": "Wizards.rebirth",
      "offset": [
        6580,
        6655
      ],
      "op": "ADD",
      "path": "22"
    },
    "7272": {
      "op": "SWAP4"
    },
    "7273": {
      "op": "SWAP1"
    },
    "7274": {
      "op": "SWAP4"
    },
    "7275": {
      "op": "MSTORE"
    },
    "7276": {
      "op": "PUSH12",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "7289": {
      "op": "NOT"
    },
    "7290": {
      "fn": "Wizards.rebirth",
      "offset": [
        6612,
        6622
      ],
      "op": "CALLER",
      "path": "22"
    },
    "7291": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7293": {
      "op": "SHL"
    },
    "7294": {
      "op": "AND"
    },
    "7295": {
      "op": "SWAP1"
    },
    "7296": {
      "op": "DUP4"
    },
    "7297": {
      "op": "ADD"
    },
    "7298": {
      "op": "MSTORE"
    },
    "7299": {
      "fn": "Wizards.rebirth",
      "offset": [
        6624,
        6639
      ],
      "op": "TIMESTAMP",
      "path": "22"
    },
    "7300": {
      "op": "PUSH1",
      "value": "0x54"
    },
    "7302": {
      "op": "DUP4"
    },
    "7303": {
      "op": "ADD"
    },
    "7304": {
      "op": "MSTORE"
    },
    "7305": {
      "op": "PUSH1",
      "value": "0x74"
    },
    "7307": {
      "op": "DUP3"
    },
    "7308": {
      "op": "ADD"
    },
    "7309": {
      "op": "MSTORE"
    },
    "7310": {
      "op": "PUSH1",
      "value": "0x94"
    },
    "7312": {
      "op": "ADD"
    },
    "7313": {
      "fn": "Wizards.rebirth",
      "offset": [
        6580,
        6655
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "7315": {
      "fn": "Wizards.rebirth",
      "offset": [
        6580,
        6655
      ],
      "op": "DUP1",
      "path": "22"
    },
    "7316": {
      "fn": "Wizards.rebirth",
      "offset": [
        6580,
        6655
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "7317": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "7319": {
      "op": "NOT"
    },
    "7320": {
      "fn": "Wizards.rebirth",
      "offset": [
        6580,
        6655
      ],
      "op": "DUP2",
      "path": "22"
    },
    "7321": {
      "fn": "Wizards.rebirth",
      "offset": [
        6580,
        6655
      ],
      "op": "DUP5",
      "path": "22"
    },
    "7322": {
      "fn": "Wizards.rebirth",
      "offset": [
        6580,
        6655
      ],
      "op": "SUB",
      "path": "22"
    },
    "7323": {
      "fn": "Wizards.rebirth",
      "offset": [
        6580,
        6655
      ],
      "op": "ADD",
      "path": "22"
    },
    "7324": {
      "fn": "Wizards.rebirth",
      "offset": [
        6580,
        6655
      ],
      "op": "DUP2",
      "path": "22"
    },
    "7325": {
      "fn": "Wizards.rebirth",
      "offset": [
        6580,
        6655
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "7326": {
      "fn": "Wizards.rebirth",
      "offset": [
        6580,
        6655
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "7327": {
      "fn": "Wizards.rebirth",
      "offset": [
        6580,
        6655
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "7328": {
      "fn": "Wizards.rebirth",
      "offset": [
        6580,
        6655
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "7329": {
      "fn": "Wizards.rebirth",
      "offset": [
        6570,
        6656
      ],
      "op": "DUP1",
      "path": "22"
    },
    "7330": {
      "fn": "Wizards.rebirth",
      "offset": [
        6570,
        6656
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "7331": {
      "fn": "Wizards.rebirth",
      "offset": [
        6580,
        6655
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "7333": {
      "fn": "Wizards.rebirth",
      "offset": [
        6570,
        6656
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "7334": {
      "fn": "Wizards.rebirth",
      "offset": [
        6570,
        6656
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "7335": {
      "fn": "Wizards.rebirth",
      "offset": [
        6570,
        6656
      ],
      "op": "ADD",
      "path": "22"
    },
    "7336": {
      "fn": "Wizards.rebirth",
      "offset": [
        6570,
        6656
      ],
      "op": "KECCAK256",
      "path": "22"
    },
    "7337": {
      "fn": "Wizards.rebirth",
      "offset": [
        6700,
        6715
      ],
      "op": "TIMESTAMP",
      "path": "22",
      "statement": 67
    },
    "7338": {
      "fn": "Wizards.rebirth",
      "offset": [
        6670,
        6697
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xB"
    },
    "7340": {
      "fn": "Wizards.rebirth",
      "offset": [
        6670,
        6697
      ],
      "op": "DUP5",
      "path": "22"
    },
    "7341": {
      "fn": "Wizards.rebirth",
      "offset": [
        6670,
        6697
      ],
      "op": "ADD",
      "path": "22"
    },
    "7342": {
      "fn": "Wizards.rebirth",
      "offset": [
        6670,
        6715
      ],
      "op": "SSTORE",
      "path": "22"
    },
    "7343": {
      "fn": "Wizards.rebirth",
      "offset": [
        6761,
        6801
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 68,
      "value": "0x11"
    },
    "7345": {
      "fn": "Wizards.rebirth",
      "offset": [
        6761,
        6801
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "7346": {
      "fn": "Wizards.rebirth",
      "offset": [
        6726,
        6757
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xC"
    },
    "7348": {
      "fn": "Wizards.rebirth",
      "offset": [
        6726,
        6757
      ],
      "op": "DUP5",
      "path": "22"
    },
    "7349": {
      "fn": "Wizards.rebirth",
      "offset": [
        6726,
        6757
      ],
      "op": "ADD",
      "path": "22"
    },
    "7350": {
      "fn": "Wizards.rebirth",
      "offset": [
        6726,
        6801
      ],
      "op": "DUP1",
      "path": "22"
    },
    "7351": {
      "fn": "Wizards.rebirth",
      "offset": [
        6726,
        6801
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "7352": {
      "fn": "Wizards.rebirth",
      "offset": [
        6570,
        6656
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "7353": {
      "fn": "Wizards.rebirth",
      "offset": [
        6570,
        6656
      ],
      "op": "SWAP4",
      "path": "22"
    },
    "7354": {
      "op": "POP"
    },
    "7355": {
      "fn": "Wizards.rebirth",
      "offset": [
        6761,
        6801
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "7356": {
      "fn": "Wizards.rebirth",
      "offset": [
        6761,
        6801
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "7357": {
      "fn": "Wizards.rebirth",
      "offset": [
        6562,
        6657
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "7359": {
      "fn": "Wizards.rebirth",
      "offset": [
        6562,
        6657
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "7360": {
      "fn": "Wizards.rebirth",
      "offset": [
        6726,
        6801
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1CCA"
    },
    "7363": {
      "fn": "Wizards.rebirth",
      "offset": [
        6726,
        6801
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "7364": {
      "fn": "Wizards.rebirth",
      "offset": [
        6761,
        6801
      ],
      "op": "DUP5",
      "path": "22"
    },
    "7365": {
      "fn": "Wizards.rebirth",
      "offset": [
        6761,
        6801
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "7366": {
      "fn": "Wizards.rebirth",
      "offset": [
        6726,
        6801
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x3412"
    },
    "7369": {
      "fn": "Wizards.rebirth",
      "jump": "i",
      "offset": [
        6726,
        6801
      ],
      "op": "JUMP",
      "path": "22"
    },
    "7370": {
      "fn": "Wizards.rebirth",
      "offset": [
        6726,
        6801
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "7371": {
      "fn": "Wizards.rebirth",
      "offset": [
        6726,
        6801
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "7372": {
      "fn": "Wizards.rebirth",
      "offset": [
        6726,
        6801
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "7373": {
      "fn": "Wizards.rebirth",
      "offset": [
        6726,
        6801
      ],
      "op": "SSTORE",
      "path": "22"
    },
    "7374": {
      "op": "POP"
    },
    "7375": {
      "op": "POP"
    },
    "7376": {
      "fn": "Wizards.rebirth",
      "offset": [
        6812,
        6830
      ],
      "op": "DUP2",
      "path": "22",
      "statement": 69
    },
    "7377": {
      "fn": "Wizards.rebirth",
      "offset": [
        6812,
        6830
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "7378": {
      "fn": "Wizards.rebirth",
      "offset": [
        6829,
        6830
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x1"
    },
    "7380": {
      "fn": "Wizards.rebirth",
      "offset": [
        6829,
        6830
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "7381": {
      "fn": "Wizards.rebirth",
      "offset": [
        6812,
        6819
      ],
      "op": "DUP4",
      "path": "22"
    },
    "7382": {
      "fn": "Wizards.rebirth",
      "offset": [
        6812,
        6819
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "7383": {
      "fn": "Wizards.rebirth",
      "offset": [
        6812,
        6825
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "7385": {
      "fn": "Wizards.rebirth",
      "offset": [
        6812,
        6825
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "7386": {
      "fn": "Wizards.rebirth",
      "offset": [
        6812,
        6830
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1CE4"
    },
    "7389": {
      "fn": "Wizards.rebirth",
      "offset": [
        6812,
        6830
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "7390": {
      "fn": "Wizards.rebirth",
      "offset": [
        6829,
        6830
      ],
      "op": "DUP5",
      "path": "22"
    },
    "7391": {
      "fn": "Wizards.rebirth",
      "offset": [
        6829,
        6830
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "7392": {
      "fn": "Wizards.rebirth",
      "offset": [
        6812,
        6830
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x3412"
    },
    "7395": {
      "fn": "Wizards.rebirth",
      "jump": "i",
      "offset": [
        6812,
        6830
      ],
      "op": "JUMP",
      "path": "22"
    },
    "7396": {
      "fn": "Wizards.rebirth",
      "offset": [
        6812,
        6830
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "7397": {
      "fn": "Wizards.rebirth",
      "offset": [
        6812,
        6830
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "7398": {
      "fn": "Wizards.rebirth",
      "offset": [
        6812,
        6830
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "7399": {
      "fn": "Wizards.rebirth",
      "offset": [
        6812,
        6830
      ],
      "op": "SSTORE",
      "path": "22"
    },
    "7400": {
      "op": "POP"
    },
    "7401": {
      "fn": "Wizards.rebirth",
      "offset": [
        6857,
        6875
      ],
      "op": "PUSH2",
      "path": "22",
      "statement": 70,
      "value": "0x1CF5"
    },
    "7404": {
      "fn": "Wizards.rebirth",
      "offset": [
        6857,
        6875
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "7405": {
      "op": "POP"
    },
    "7406": {
      "fn": "Wizards.rebirth",
      "offset": [
        6873,
        6875
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x10"
    },
    "7408": {
      "fn": "Wizards.rebirth",
      "offset": [
        6857,
        6870
      ],
      "op": "DUP3",
      "path": "22"
    },
    "7409": {
      "fn": "Wizards.rebirth",
      "offset": [
        6857,
        6875
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x33FE"
    },
    "7412": {
      "fn": "Wizards.rebirth",
      "jump": "i",
      "offset": [
        6857,
        6875
      ],
      "op": "JUMP",
      "path": "22"
    },
    "7413": {
      "fn": "Wizards.rebirth",
      "offset": [
        6857,
        6875
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "7414": {
      "fn": "Wizards.rebirth",
      "offset": [
        6857,
        6880
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1D00"
    },
    "7417": {
      "fn": "Wizards.rebirth",
      "offset": [
        6857,
        6880
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "7418": {
      "fn": "Wizards.rebirth",
      "offset": [
        6878,
        6880
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xA"
    },
    "7420": {
      "fn": "Wizards.rebirth",
      "offset": [
        6857,
        6880
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x3412"
    },
    "7423": {
      "fn": "Wizards.rebirth",
      "jump": "i",
      "offset": [
        6857,
        6880
      ],
      "op": "JUMP",
      "path": "22"
    },
    "7424": {
      "fn": "Wizards.rebirth",
      "offset": [
        6857,
        6880
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "7425": {
      "fn": "Wizards.rebirth",
      "offset": [
        6843,
        6850
      ],
      "op": "DUP3",
      "path": "22"
    },
    "7426": {
      "fn": "Wizards.rebirth",
      "offset": [
        6843,
        6853
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x1"
    },
    "7428": {
      "fn": "Wizards.rebirth",
      "offset": [
        6843,
        6853
      ],
      "op": "ADD",
      "path": "22"
    },
    "7429": {
      "fn": "Wizards.rebirth",
      "offset": [
        6843,
        6853
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "7431": {
      "fn": "Wizards.rebirth",
      "offset": [
        6843,
        6880
      ],
      "op": "DUP3",
      "path": "22"
    },
    "7432": {
      "fn": "Wizards.rebirth",
      "offset": [
        6843,
        6880
      ],
      "op": "DUP3",
      "path": "22"
    },
    "7433": {
      "fn": "Wizards.rebirth",
      "offset": [
        6843,
        6880
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "7434": {
      "fn": "Wizards.rebirth",
      "offset": [
        6843,
        6880
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1D13"
    },
    "7437": {
      "fn": "Wizards.rebirth",
      "offset": [
        6843,
        6880
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "7438": {
      "fn": "Wizards.rebirth",
      "offset": [
        6843,
        6880
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "7439": {
      "fn": "Wizards.rebirth",
      "offset": [
        6843,
        6880
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x3412"
    },
    "7442": {
      "fn": "Wizards.rebirth",
      "jump": "i",
      "offset": [
        6843,
        6880
      ],
      "op": "JUMP",
      "path": "22"
    },
    "7443": {
      "fn": "Wizards.rebirth",
      "offset": [
        6843,
        6880
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "7444": {
      "fn": "Wizards.rebirth",
      "offset": [
        6843,
        6880
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "7445": {
      "fn": "Wizards.rebirth",
      "offset": [
        6843,
        6880
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "7446": {
      "fn": "Wizards.rebirth",
      "offset": [
        6843,
        6880
      ],
      "op": "SSTORE",
      "path": "22"
    },
    "7447": {
      "op": "POP"
    },
    "7448": {
      "fn": "Wizards.rebirth",
      "offset": [
        6937,
        6939
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 71,
      "value": "0x10"
    },
    "7450": {
      "fn": "Wizards.rebirth",
      "offset": [
        6937,
        6939
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "7451": {
      "op": "POP"
    },
    "7452": {
      "fn": "Wizards.rebirth",
      "offset": [
        6915,
        6934
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1D26"
    },
    "7455": {
      "fn": "Wizards.rebirth",
      "offset": [
        6929,
        6934
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x64"
    },
    "7457": {
      "fn": "Wizards.rebirth",
      "offset": [
        6915,
        6928
      ],
      "op": "DUP4",
      "path": "22"
    },
    "7458": {
      "fn": "Wizards.rebirth",
      "offset": [
        6915,
        6934
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x33B0"
    },
    "7461": {
      "fn": "Wizards.rebirth",
      "jump": "i",
      "offset": [
        6915,
        6934
      ],
      "op": "JUMP",
      "path": "22"
    },
    "7462": {
      "fn": "Wizards.rebirth",
      "offset": [
        6915,
        6934
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "7463": {
      "fn": "Wizards.rebirth",
      "offset": [
        6915,
        6939
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1D30"
    },
    "7466": {
      "fn": "Wizards.rebirth",
      "offset": [
        6915,
        6939
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "7467": {
      "fn": "Wizards.rebirth",
      "offset": [
        6915,
        6939
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "7468": {
      "fn": "Wizards.rebirth",
      "offset": [
        6915,
        6939
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x33FE"
    },
    "7471": {
      "fn": "Wizards.rebirth",
      "jump": "i",
      "offset": [
        6915,
        6939
      ],
      "op": "JUMP",
      "path": "22"
    },
    "7472": {
      "fn": "Wizards.rebirth",
      "offset": [
        6915,
        6939
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "7473": {
      "fn": "Wizards.rebirth",
      "offset": [
        6915,
        6944
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1D3B"
    },
    "7476": {
      "fn": "Wizards.rebirth",
      "offset": [
        6915,
        6944
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "7477": {
      "fn": "Wizards.rebirth",
      "offset": [
        6942,
        6944
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xA"
    },
    "7479": {
      "fn": "Wizards.rebirth",
      "offset": [
        6915,
        6944
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x3412"
    },
    "7482": {
      "fn": "Wizards.rebirth",
      "jump": "i",
      "offset": [
        6915,
        6944
      ],
      "op": "JUMP",
      "path": "22"
    },
    "7483": {
      "fn": "Wizards.rebirth",
      "offset": [
        6915,
        6944
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "7484": {
      "fn": "Wizards.rebirth",
      "offset": [
        6891,
        6898
      ],
      "op": "DUP3",
      "path": "22"
    },
    "7485": {
      "fn": "Wizards.rebirth",
      "offset": [
        6891,
        6911
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x2"
    },
    "7487": {
      "fn": "Wizards.rebirth",
      "offset": [
        6891,
        6911
      ],
      "op": "ADD",
      "path": "22"
    },
    "7488": {
      "fn": "Wizards.rebirth",
      "offset": [
        6891,
        6911
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "7490": {
      "fn": "Wizards.rebirth",
      "offset": [
        6891,
        6944
      ],
      "op": "DUP3",
      "path": "22"
    },
    "7491": {
      "fn": "Wizards.rebirth",
      "offset": [
        6891,
        6944
      ],
      "op": "DUP3",
      "path": "22"
    },
    "7492": {
      "fn": "Wizards.rebirth",
      "offset": [
        6891,
        6944
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "7493": {
      "fn": "Wizards.rebirth",
      "offset": [
        6891,
        6944
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1D4E"
    },
    "7496": {
      "fn": "Wizards.rebirth",
      "offset": [
        6891,
        6944
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "7497": {
      "fn": "Wizards.rebirth",
      "offset": [
        6891,
        6944
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "7498": {
      "fn": "Wizards.rebirth",
      "offset": [
        6891,
        6944
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x3412"
    },
    "7501": {
      "fn": "Wizards.rebirth",
      "jump": "i",
      "offset": [
        6891,
        6944
      ],
      "op": "JUMP",
      "path": "22"
    },
    "7502": {
      "fn": "Wizards.rebirth",
      "offset": [
        6891,
        6944
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "7503": {
      "fn": "Wizards.rebirth",
      "offset": [
        6891,
        6944
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "7504": {
      "fn": "Wizards.rebirth",
      "offset": [
        6891,
        6944
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "7505": {
      "fn": "Wizards.rebirth",
      "offset": [
        6891,
        6944
      ],
      "op": "SSTORE",
      "path": "22"
    },
    "7506": {
      "op": "POP"
    },
    "7507": {
      "fn": "Wizards.rebirth",
      "offset": [
        7003,
        7005
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 72,
      "value": "0x10"
    },
    "7509": {
      "fn": "Wizards.rebirth",
      "offset": [
        7003,
        7005
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "7510": {
      "op": "POP"
    },
    "7511": {
      "fn": "Wizards.rebirth",
      "offset": [
        6981,
        7000
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1D62"
    },
    "7514": {
      "fn": "Wizards.rebirth",
      "offset": [
        6995,
        7000
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2710"
    },
    "7517": {
      "fn": "Wizards.rebirth",
      "offset": [
        6981,
        6994
      ],
      "op": "DUP4",
      "path": "22"
    },
    "7518": {
      "fn": "Wizards.rebirth",
      "offset": [
        6981,
        7000
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x33B0"
    },
    "7521": {
      "fn": "Wizards.rebirth",
      "jump": "i",
      "offset": [
        6981,
        7000
      ],
      "op": "JUMP",
      "path": "22"
    },
    "7522": {
      "fn": "Wizards.rebirth",
      "offset": [
        6981,
        7000
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "7523": {
      "fn": "Wizards.rebirth",
      "offset": [
        6981,
        7005
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1D6C"
    },
    "7526": {
      "fn": "Wizards.rebirth",
      "offset": [
        6981,
        7005
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "7527": {
      "fn": "Wizards.rebirth",
      "offset": [
        6981,
        7005
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "7528": {
      "fn": "Wizards.rebirth",
      "offset": [
        6981,
        7005
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x33FE"
    },
    "7531": {
      "fn": "Wizards.rebirth",
      "jump": "i",
      "offset": [
        6981,
        7005
      ],
      "op": "JUMP",
      "path": "22"
    },
    "7532": {
      "fn": "Wizards.rebirth",
      "offset": [
        6981,
        7005
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "7533": {
      "fn": "Wizards.rebirth",
      "offset": [
        6981,
        7010
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1D77"
    },
    "7536": {
      "fn": "Wizards.rebirth",
      "offset": [
        6981,
        7010
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "7537": {
      "fn": "Wizards.rebirth",
      "offset": [
        7008,
        7010
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xA"
    },
    "7539": {
      "fn": "Wizards.rebirth",
      "offset": [
        6981,
        7010
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x3412"
    },
    "7542": {
      "fn": "Wizards.rebirth",
      "jump": "i",
      "offset": [
        6981,
        7010
      ],
      "op": "JUMP",
      "path": "22"
    },
    "7543": {
      "fn": "Wizards.rebirth",
      "offset": [
        6981,
        7010
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "7544": {
      "fn": "Wizards.rebirth",
      "offset": [
        6955,
        6962
      ],
      "op": "DUP3",
      "path": "22"
    },
    "7545": {
      "fn": "Wizards.rebirth",
      "offset": [
        6955,
        6977
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x3"
    },
    "7547": {
      "fn": "Wizards.rebirth",
      "offset": [
        6955,
        6977
      ],
      "op": "ADD",
      "path": "22"
    },
    "7548": {
      "fn": "Wizards.rebirth",
      "offset": [
        6955,
        6977
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "7550": {
      "fn": "Wizards.rebirth",
      "offset": [
        6955,
        7010
      ],
      "op": "DUP3",
      "path": "22"
    },
    "7551": {
      "fn": "Wizards.rebirth",
      "offset": [
        6955,
        7010
      ],
      "op": "DUP3",
      "path": "22"
    },
    "7552": {
      "fn": "Wizards.rebirth",
      "offset": [
        6955,
        7010
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "7553": {
      "fn": "Wizards.rebirth",
      "offset": [
        6955,
        7010
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1D8A"
    },
    "7556": {
      "fn": "Wizards.rebirth",
      "offset": [
        6955,
        7010
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "7557": {
      "fn": "Wizards.rebirth",
      "offset": [
        6955,
        7010
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "7558": {
      "fn": "Wizards.rebirth",
      "offset": [
        6955,
        7010
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x3412"
    },
    "7561": {
      "fn": "Wizards.rebirth",
      "jump": "i",
      "offset": [
        6955,
        7010
      ],
      "op": "JUMP",
      "path": "22"
    },
    "7562": {
      "fn": "Wizards.rebirth",
      "offset": [
        6955,
        7010
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "7563": {
      "fn": "Wizards.rebirth",
      "offset": [
        6955,
        7010
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "7564": {
      "fn": "Wizards.rebirth",
      "offset": [
        6955,
        7010
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "7565": {
      "fn": "Wizards.rebirth",
      "offset": [
        6955,
        7010
      ],
      "op": "SSTORE",
      "path": "22"
    },
    "7566": {
      "op": "POP"
    },
    "7567": {
      "fn": "Wizards.rebirth",
      "offset": [
        7060,
        7062
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 73,
      "value": "0xA"
    },
    "7569": {
      "fn": "Wizards.rebirth",
      "offset": [
        7060,
        7062
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "7570": {
      "op": "POP"
    },
    "7571": {
      "fn": "Wizards.rebirth",
      "offset": [
        7038,
        7057
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1D9F"
    },
    "7574": {
      "fn": "Wizards.rebirth",
      "offset": [
        7052,
        7057
      ],
      "op": "PUSH3",
      "path": "22",
      "value": "0xF4240"
    },
    "7578": {
      "fn": "Wizards.rebirth",
      "offset": [
        7038,
        7051
      ],
      "op": "DUP4",
      "path": "22"
    },
    "7579": {
      "fn": "Wizards.rebirth",
      "offset": [
        7038,
        7057
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x33B0"
    },
    "7582": {
      "fn": "Wizards.rebirth",
      "jump": "i",
      "offset": [
        7038,
        7057
      ],
      "op": "JUMP",
      "path": "22"
    },
    "7583": {
      "fn": "Wizards.rebirth",
      "offset": [
        7038,
        7057
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "7584": {
      "fn": "Wizards.rebirth",
      "offset": [
        7038,
        7062
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1DA9"
    },
    "7587": {
      "fn": "Wizards.rebirth",
      "offset": [
        7038,
        7062
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "7588": {
      "fn": "Wizards.rebirth",
      "offset": [
        7038,
        7062
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "7589": {
      "fn": "Wizards.rebirth",
      "offset": [
        7038,
        7062
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x33FE"
    },
    "7592": {
      "fn": "Wizards.rebirth",
      "jump": "i",
      "offset": [
        7038,
        7062
      ],
      "op": "JUMP",
      "path": "22"
    },
    "7593": {
      "fn": "Wizards.rebirth",
      "offset": [
        7038,
        7062
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "7594": {
      "fn": "Wizards.rebirth",
      "offset": [
        7021,
        7028
      ],
      "op": "DUP3",
      "path": "22"
    },
    "7595": {
      "fn": "Wizards.rebirth",
      "offset": [
        7021,
        7034
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "7597": {
      "fn": "Wizards.rebirth",
      "offset": [
        7021,
        7034
      ],
      "op": "ADD",
      "path": "22"
    },
    "7598": {
      "fn": "Wizards.rebirth",
      "offset": [
        7021,
        7034
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "7600": {
      "fn": "Wizards.rebirth",
      "offset": [
        7021,
        7062
      ],
      "op": "DUP3",
      "path": "22"
    },
    "7601": {
      "fn": "Wizards.rebirth",
      "offset": [
        7021,
        7062
      ],
      "op": "DUP3",
      "path": "22"
    },
    "7602": {
      "fn": "Wizards.rebirth",
      "offset": [
        7021,
        7062
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "7603": {
      "fn": "Wizards.rebirth",
      "offset": [
        7021,
        7062
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1DBC"
    },
    "7606": {
      "fn": "Wizards.rebirth",
      "offset": [
        7021,
        7062
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "7607": {
      "fn": "Wizards.rebirth",
      "offset": [
        7021,
        7062
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "7608": {
      "fn": "Wizards.rebirth",
      "offset": [
        7021,
        7062
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x3412"
    },
    "7611": {
      "fn": "Wizards.rebirth",
      "jump": "i",
      "offset": [
        7021,
        7062
      ],
      "op": "JUMP",
      "path": "22"
    },
    "7612": {
      "fn": "Wizards.rebirth",
      "offset": [
        7021,
        7062
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "7613": {
      "fn": "Wizards.rebirth",
      "offset": [
        7021,
        7062
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "7614": {
      "fn": "Wizards.rebirth",
      "offset": [
        7021,
        7062
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "7615": {
      "fn": "Wizards.rebirth",
      "offset": [
        7021,
        7062
      ],
      "op": "SSTORE",
      "path": "22"
    },
    "7616": {
      "op": "POP"
    },
    "7617": {
      "op": "POP"
    },
    "7618": {
      "fn": "Wizards.rebirth",
      "offset": [
        7112,
        7125
      ],
      "op": "DUP2",
      "path": "22",
      "statement": 74
    },
    "7619": {
      "fn": "Wizards.rebirth",
      "offset": [
        7112,
        7125
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "7620": {
      "fn": "Wizards.rebirth",
      "offset": [
        7082,
        7143
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "7622": {
      "fn": "Wizards.rebirth",
      "offset": [
        7082,
        7143
      ],
      "op": "DUP1",
      "path": "22"
    },
    "7623": {
      "fn": "Wizards.rebirth",
      "offset": [
        7082,
        7143
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "7624": {
      "fn": "Wizards.rebirth",
      "offset": [
        7090,
        7100
      ],
      "op": "CALLER",
      "path": "22"
    },
    "7625": {
      "op": "DUP2"
    },
    "7626": {
      "op": "MSTORE"
    },
    "7627": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7629": {
      "op": "DUP2"
    },
    "7630": {
      "op": "ADD"
    },
    "7631": {
      "op": "SWAP3"
    },
    "7632": {
      "op": "SWAP1"
    },
    "7633": {
      "op": "SWAP3"
    },
    "7634": {
      "op": "MSTORE"
    },
    "7635": {
      "fn": "Wizards.rebirth",
      "offset": [
        7127,
        7142
      ],
      "op": "TIMESTAMP",
      "path": "22"
    },
    "7636": {
      "op": "SWAP1"
    },
    "7637": {
      "op": "DUP3"
    },
    "7638": {
      "op": "ADD"
    },
    "7639": {
      "op": "MSTORE"
    },
    "7640": {
      "fn": "Wizards.rebirth",
      "offset": [
        7102,
        7110
      ],
      "op": "DUP4",
      "path": "22"
    },
    "7641": {
      "fn": "Wizards.rebirth",
      "offset": [
        7102,
        7110
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "7642": {
      "fn": "Wizards.rebirth",
      "offset": [
        7082,
        7143
      ],
      "op": "PUSH32",
      "path": "22",
      "value": "0xB77DF37C5C38B010D57710FFA0BF2BBCBDDA02F986C30D708810F5C6B3409631"
    },
    "7675": {
      "fn": "Wizards.rebirth",
      "offset": [
        7082,
        7143
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "7676": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7678": {
      "op": "ADD"
    },
    "7679": {
      "fn": "Wizards.rebirth",
      "offset": [
        7082,
        7143
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "7681": {
      "fn": "Wizards.rebirth",
      "offset": [
        7082,
        7143
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "7682": {
      "fn": "Wizards.rebirth",
      "offset": [
        7082,
        7143
      ],
      "op": "DUP1",
      "path": "22"
    },
    "7683": {
      "fn": "Wizards.rebirth",
      "offset": [
        7082,
        7143
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "7684": {
      "fn": "Wizards.rebirth",
      "offset": [
        7082,
        7143
      ],
      "op": "SUB",
      "path": "22"
    },
    "7685": {
      "fn": "Wizards.rebirth",
      "offset": [
        7082,
        7143
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "7686": {
      "fn": "Wizards.rebirth",
      "offset": [
        7082,
        7143
      ],
      "op": "LOG2",
      "path": "22"
    },
    "7687": {
      "fn": "Wizards.rebirth",
      "offset": [
        5994,
        7185
      ],
      "op": "POP",
      "path": "22"
    },
    "7688": {
      "fn": "Wizards.rebirth",
      "offset": [
        5994,
        7185
      ],
      "op": "POP",
      "path": "22"
    },
    "7689": {
      "fn": "Wizards.rebirth",
      "offset": [
        5942,
        7185
      ],
      "op": "POP",
      "path": "22"
    },
    "7690": {
      "fn": "Wizards.rebirth",
      "jump": "o",
      "offset": [
        5942,
        7185
      ],
      "op": "JUMP",
      "path": "22"
    },
    "7691": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "7692": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0xA"
    },
    "7694": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "7695": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7697": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7699": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7701": {
      "op": "SHL"
    },
    "7702": {
      "op": "SUB"
    },
    "7703": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "AND",
      "path": "8"
    },
    "7704": {
      "fn": "Context._msgSender",
      "offset": [
        679,
        689
      ],
      "op": "CALLER",
      "path": "3"
    },
    "7705": {
      "offset": [
        1221,
        1244
      ],
      "op": "EQ",
      "path": "8"
    },
    "7706": {
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1E35"
    },
    "7709": {
      "offset": [
        1213,
        1281
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "7710": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "7712": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "7713": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7717": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7719": {
      "op": "SHL"
    },
    "7720": {
      "offset": [
        1213,
        1281
      ],
      "op": "DUP2",
      "path": "8"
    },
    "7721": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "7722": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "7724": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "ADD",
      "path": "8"
    },
    "7725": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xB50"
    },
    "7728": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "7729": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x349A"
    },
    "7732": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1213,
        1281
      ],
      "op": "JUMP",
      "path": "8"
    },
    "7733": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "7734": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7736": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7738": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7740": {
      "op": "SHL"
    },
    "7741": {
      "op": "SUB"
    },
    "7742": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1990,
        2012
      ],
      "op": "DUP2",
      "path": "8",
      "statement": 75
    },
    "7743": {
      "branch": 161,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1990,
        2012
      ],
      "op": "AND",
      "path": "8"
    },
    "7744": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1E9A"
    },
    "7747": {
      "branch": 161,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "7748": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "7750": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "7751": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7755": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7757": {
      "op": "SHL"
    },
    "7758": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "DUP2",
      "path": "8"
    },
    "7759": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "7760": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7762": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "7764": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "DUP3",
      "path": "8"
    },
    "7765": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "ADD",
      "path": "8"
    },
    "7766": {
      "op": "MSTORE"
    },
    "7767": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "7769": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7771": {
      "op": "DUP3"
    },
    "7772": {
      "op": "ADD"
    },
    "7773": {
      "op": "MSTORE"
    },
    "7774": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
    },
    "7807": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7809": {
      "op": "DUP3"
    },
    "7810": {
      "op": "ADD"
    },
    "7811": {
      "op": "MSTORE"
    },
    "7812": {
      "op": "PUSH6",
      "value": "0x646472657373"
    },
    "7819": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "7821": {
      "op": "SHL"
    },
    "7822": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7824": {
      "op": "DUP3"
    },
    "7825": {
      "op": "ADD"
    },
    "7826": {
      "op": "MSTORE"
    },
    "7827": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "7829": {
      "op": "ADD"
    },
    "7830": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xB50"
    },
    "7833": {
      "op": "JUMP"
    },
    "7834": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "7835": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2066,
        2085
      ],
      "op": "PUSH2",
      "path": "8",
      "statement": 76,
      "value": "0x10E5"
    },
    "7838": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2076,
        2084
      ],
      "op": "DUP2",
      "path": "8"
    },
    "7839": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2066,
        2075
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x231E"
    },
    "7842": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2066,
        2085
      ],
      "op": "JUMP",
      "path": "8"
    },
    "7843": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1580,
        1885
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "7844": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1682,
        1686
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "7846": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7848": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7850": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7852": {
      "op": "SHL"
    },
    "7853": {
      "op": "SUB"
    },
    "7854": {
      "op": "NOT"
    },
    "7855": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1719,
        1759
      ],
      "op": "DUP3",
      "path": "6",
      "statement": 77
    },
    "7856": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1719,
        1759
      ],
      "op": "AND",
      "path": "6"
    },
    "7857": {
      "op": "PUSH4",
      "value": "0x80AC58CD"
    },
    "7862": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7864": {
      "op": "SHL"
    },
    "7865": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1719,
        1759
      ],
      "op": "EQ",
      "path": "6"
    },
    "7866": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1719,
        1759
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7867": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1719,
        1824
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1ED4"
    },
    "7870": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1719,
        1824
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "7871": {
      "op": "POP"
    },
    "7872": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7874": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7876": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7878": {
      "op": "SHL"
    },
    "7879": {
      "op": "SUB"
    },
    "7880": {
      "op": "NOT"
    },
    "7881": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1776,
        1824
      ],
      "op": "DUP3",
      "path": "6"
    },
    "7882": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1776,
        1824
      ],
      "op": "AND",
      "path": "6"
    },
    "7883": {
      "op": "PUSH4",
      "value": "0x5B5E139F"
    },
    "7888": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7890": {
      "op": "SHL"
    },
    "7891": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1776,
        1824
      ],
      "op": "EQ",
      "path": "6"
    },
    "7892": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1719,
        1824
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "7893": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1719,
        1877
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7894": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1719,
        1877
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x7C1"
    },
    "7897": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1719,
        1877
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "7898": {
      "op": "POP"
    },
    "7899": {
      "op": "PUSH4",
      "value": "0x1FFC9A7"
    },
    "7904": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7906": {
      "op": "SHL"
    },
    "7907": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7909": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7911": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7913": {
      "op": "SHL"
    },
    "7914": {
      "op": "SUB"
    },
    "7915": {
      "op": "NOT"
    },
    "7916": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        908,
        948
      ],
      "op": "DUP4",
      "path": "4",
      "statement": 78
    },
    "7917": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        908,
        948
      ],
      "op": "AND",
      "path": "4"
    },
    "7918": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        908,
        948
      ],
      "op": "EQ",
      "path": "4"
    },
    "7919": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1841,
        1877
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x7C1"
    },
    "7922": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        799,
        956
      ],
      "op": "JUMP",
      "path": "4"
    },
    "7923": {
      "fn": "Strings.toString",
      "offset": [
        286,
        1009
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "7924": {
      "fn": "Strings.toString",
      "offset": [
        342,
        355
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x60"
    },
    "7926": {
      "fn": "Strings.toString",
      "offset": [
        563,
        568
      ],
      "op": "DUP2",
      "path": "21"
    },
    "7927": {
      "fn": "Strings.toString",
      "offset": [
        572,
        573
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "7929": {
      "branch": 162,
      "fn": "Strings.toString",
      "offset": [
        563,
        573
      ],
      "op": "SUB",
      "path": "21"
    },
    "7930": {
      "fn": "Strings.toString",
      "offset": [
        559,
        612
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x1F1A"
    },
    "7933": {
      "branch": 162,
      "fn": "Strings.toString",
      "offset": [
        559,
        612
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "7934": {
      "op": "POP"
    },
    "7935": {
      "op": "POP"
    },
    "7936": {
      "fn": "Strings.toString",
      "offset": [
        590,
        600
      ],
      "op": "PUSH1",
      "path": "21",
      "statement": 79,
      "value": "0x40"
    },
    "7938": {
      "fn": "Strings.toString",
      "offset": [
        590,
        600
      ],
      "op": "DUP1",
      "path": "21"
    },
    "7939": {
      "fn": "Strings.toString",
      "offset": [
        590,
        600
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "7940": {
      "fn": "Strings.toString",
      "offset": [
        590,
        600
      ],
      "op": "DUP1",
      "path": "21"
    },
    "7941": {
      "fn": "Strings.toString",
      "offset": [
        590,
        600
      ],
      "op": "DUP3",
      "path": "21"
    },
    "7942": {
      "fn": "Strings.toString",
      "offset": [
        590,
        600
      ],
      "op": "ADD",
      "path": "21"
    },
    "7943": {
      "fn": "Strings.toString",
      "offset": [
        590,
        600
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "7944": {
      "fn": "Strings.toString",
      "offset": [
        590,
        600
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "7945": {
      "fn": "Strings.toString",
      "offset": [
        590,
        600
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "7946": {
      "fn": "Strings.toString",
      "offset": [
        590,
        600
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x1"
    },
    "7948": {
      "fn": "Strings.toString",
      "offset": [
        590,
        600
      ],
      "op": "DUP2",
      "path": "21"
    },
    "7949": {
      "fn": "Strings.toString",
      "offset": [
        590,
        600
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "7950": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "7952": {
      "op": "PUSH1",
      "value": "0xFC"
    },
    "7954": {
      "op": "SHL"
    },
    "7955": {
      "fn": "Strings.toString",
      "offset": [
        590,
        600
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x20"
    },
    "7957": {
      "fn": "Strings.toString",
      "offset": [
        590,
        600
      ],
      "op": "DUP3",
      "path": "21"
    },
    "7958": {
      "fn": "Strings.toString",
      "offset": [
        590,
        600
      ],
      "op": "ADD",
      "path": "21"
    },
    "7959": {
      "fn": "Strings.toString",
      "offset": [
        590,
        600
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "7960": {
      "fn": "Strings.toString",
      "offset": [
        590,
        600
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "7961": {
      "fn": "Strings.toString",
      "jump": "o",
      "offset": [
        286,
        1009
      ],
      "op": "JUMP",
      "path": "21"
    },
    "7962": {
      "fn": "Strings.toString",
      "offset": [
        559,
        612
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "7963": {
      "fn": "Strings.toString",
      "offset": [
        637,
        642
      ],
      "op": "DUP2",
      "path": "21"
    },
    "7964": {
      "fn": "Strings.toString",
      "offset": [
        622,
        634
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "7966": {
      "fn": "Strings.toString",
      "offset": [
        678,
        756
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "7967": {
      "fn": "Strings.toString",
      "offset": [
        685,
        694
      ],
      "op": "DUP2",
      "path": "21"
    },
    "7968": {
      "fn": "Strings.toString",
      "offset": [
        685,
        694
      ],
      "op": "ISZERO",
      "path": "21"
    },
    "7969": {
      "fn": "Strings.toString",
      "offset": [
        678,
        756
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x1F44"
    },
    "7972": {
      "fn": "Strings.toString",
      "offset": [
        678,
        756
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "7973": {
      "fn": "Strings.toString",
      "offset": [
        711,
        719
      ],
      "op": "DUP1",
      "path": "21",
      "statement": 80
    },
    "7974": {
      "fn": "Strings.toString",
      "offset": [
        711,
        719
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x1F2E"
    },
    "7977": {
      "fn": "Strings.toString",
      "offset": [
        711,
        719
      ],
      "op": "DUP2",
      "path": "21"
    },
    "7978": {
      "fn": "Strings.toString",
      "offset": [
        711,
        719
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x3689"
    },
    "7981": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        711,
        719
      ],
      "op": "JUMP",
      "path": "21"
    },
    "7982": {
      "fn": "Strings.toString",
      "offset": [
        711,
        719
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "7983": {
      "fn": "Strings.toString",
      "offset": [
        711,
        719
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "7984": {
      "op": "POP"
    },
    "7985": {
      "fn": "Strings.toString",
      "offset": [
        734,
        744
      ],
      "op": "PUSH2",
      "path": "21",
      "statement": 81,
      "value": "0x1F3D"
    },
    "7988": {
      "fn": "Strings.toString",
      "offset": [
        734,
        744
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "7989": {
      "op": "POP"
    },
    "7990": {
      "fn": "Strings.toString",
      "offset": [
        742,
        744
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0xA"
    },
    "7992": {
      "fn": "Strings.toString",
      "offset": [
        734,
        744
      ],
      "op": "DUP4",
      "path": "21"
    },
    "7993": {
      "fn": "Strings.toString",
      "offset": [
        734,
        744
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x33B0"
    },
    "7996": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        734,
        744
      ],
      "op": "JUMP",
      "path": "21"
    },
    "7997": {
      "fn": "Strings.toString",
      "offset": [
        734,
        744
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "7998": {
      "fn": "Strings.toString",
      "offset": [
        734,
        744
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "7999": {
      "fn": "Strings.toString",
      "offset": [
        734,
        744
      ],
      "op": "POP",
      "path": "21"
    },
    "8000": {
      "fn": "Strings.toString",
      "offset": [
        678,
        756
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x1F1E"
    },
    "8003": {
      "fn": "Strings.toString",
      "offset": [
        678,
        756
      ],
      "op": "JUMP",
      "path": "21"
    },
    "8004": {
      "fn": "Strings.toString",
      "offset": [
        678,
        756
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "8005": {
      "fn": "Strings.toString",
      "offset": [
        766,
        785
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "8007": {
      "fn": "Strings.toString",
      "offset": [
        798,
        804
      ],
      "op": "DUP2",
      "path": "21"
    },
    "8008": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "PUSH8",
      "path": "21",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "8017": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "DUP2",
      "path": "21"
    },
    "8018": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "GT",
      "path": "21"
    },
    "8019": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "ISZERO",
      "path": "21"
    },
    "8020": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x1F5F"
    },
    "8023": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "8024": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x1F5F"
    },
    "8027": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x291F"
    },
    "8030": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        788,
        805
      ],
      "op": "JUMP",
      "path": "21"
    },
    "8031": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "8032": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "8034": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "8035": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "8036": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "DUP1",
      "path": "21"
    },
    "8037": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "DUP3",
      "path": "21"
    },
    "8038": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "8039": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "DUP1",
      "path": "21"
    },
    "8040": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x1F"
    },
    "8042": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "ADD",
      "path": "21"
    },
    "8043": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x1F"
    },
    "8045": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "NOT",
      "path": "21"
    },
    "8046": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "AND",
      "path": "21"
    },
    "8047": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x20"
    },
    "8049": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "ADD",
      "path": "21"
    },
    "8050": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "DUP3",
      "path": "21"
    },
    "8051": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "ADD",
      "path": "21"
    },
    "8052": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "8054": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "8055": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "DUP1",
      "path": "21"
    },
    "8056": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "ISZERO",
      "path": "21"
    },
    "8057": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x1F89"
    },
    "8060": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "8061": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x20"
    },
    "8063": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "DUP3",
      "path": "21"
    },
    "8064": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "ADD",
      "path": "21"
    },
    "8065": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "DUP2",
      "path": "21"
    },
    "8066": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "DUP1",
      "path": "21"
    },
    "8067": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "CALLDATASIZE",
      "path": "21"
    },
    "8068": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "DUP4",
      "path": "21"
    },
    "8069": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "CALLDATACOPY",
      "path": "21"
    },
    "8070": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "ADD",
      "path": "21"
    },
    "8071": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "8072": {
      "op": "POP"
    },
    "8073": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "8074": {
      "fn": "Strings.toString",
      "offset": [
        788,
        805
      ],
      "op": "POP",
      "path": "21"
    },
    "8075": {
      "fn": "Strings.toString",
      "offset": [
        766,
        805
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "8076": {
      "fn": "Strings.toString",
      "offset": [
        766,
        805
      ],
      "op": "POP",
      "path": "21"
    },
    "8077": {
      "fn": "Strings.toString",
      "offset": [
        816,
        970
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "8078": {
      "fn": "Strings.toString",
      "offset": [
        823,
        833
      ],
      "op": "DUP5",
      "path": "21"
    },
    "8079": {
      "fn": "Strings.toString",
      "offset": [
        823,
        833
      ],
      "op": "ISZERO",
      "path": "21"
    },
    "8080": {
      "fn": "Strings.toString",
      "offset": [
        816,
        970
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x1A95"
    },
    "8083": {
      "fn": "Strings.toString",
      "offset": [
        816,
        970
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "8084": {
      "fn": "Strings.toString",
      "offset": [
        850,
        861
      ],
      "op": "PUSH2",
      "path": "21",
      "statement": 82,
      "value": "0x1F9E"
    },
    "8087": {
      "fn": "Strings.toString",
      "offset": [
        860,
        861
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x1"
    },
    "8089": {
      "fn": "Strings.toString",
      "offset": [
        850,
        861
      ],
      "op": "DUP4",
      "path": "21"
    },
    "8090": {
      "fn": "Strings.toString",
      "offset": [
        850,
        861
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x3383"
    },
    "8093": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        850,
        861
      ],
      "op": "JUMP",
      "path": "21"
    },
    "8094": {
      "fn": "Strings.toString",
      "offset": [
        850,
        861
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "8095": {
      "fn": "Strings.toString",
      "offset": [
        850,
        861
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "8096": {
      "op": "POP"
    },
    "8097": {
      "fn": "Strings.toString",
      "offset": [
        919,
        929
      ],
      "op": "PUSH2",
      "path": "21",
      "statement": 83,
      "value": "0x1FAB"
    },
    "8100": {
      "fn": "Strings.toString",
      "offset": [
        927,
        929
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0xA"
    },
    "8102": {
      "fn": "Strings.toString",
      "offset": [
        919,
        924
      ],
      "op": "DUP7",
      "path": "21"
    },
    "8103": {
      "fn": "Strings.toString",
      "offset": [
        919,
        929
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x33FE"
    },
    "8106": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        919,
        929
      ],
      "op": "JUMP",
      "path": "21"
    },
    "8107": {
      "fn": "Strings.toString",
      "offset": [
        919,
        929
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "8108": {
      "fn": "Strings.toString",
      "offset": [
        906,
        930
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x1FB6"
    },
    "8111": {
      "fn": "Strings.toString",
      "offset": [
        906,
        930
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "8112": {
      "fn": "Strings.toString",
      "offset": [
        906,
        908
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x30"
    },
    "8114": {
      "fn": "Strings.toString",
      "offset": [
        906,
        930
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x3412"
    },
    "8117": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        906,
        930
      ],
      "op": "JUMP",
      "path": "21"
    },
    "8118": {
      "fn": "Strings.toString",
      "offset": [
        906,
        930
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "8119": {
      "fn": "Strings.toString",
      "offset": [
        893,
        932
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0xF8"
    },
    "8121": {
      "fn": "Strings.toString",
      "offset": [
        893,
        932
      ],
      "op": "SHL",
      "path": "21"
    },
    "8122": {
      "fn": "Strings.toString",
      "offset": [
        876,
        882
      ],
      "op": "DUP2",
      "path": "21"
    },
    "8123": {
      "fn": "Strings.toString",
      "offset": [
        883,
        889
      ],
      "op": "DUP4",
      "path": "21"
    },
    "8124": {
      "fn": "Strings.toString",
      "offset": [
        876,
        890
      ],
      "op": "DUP2",
      "path": "21"
    },
    "8125": {
      "fn": "Strings.toString",
      "offset": [
        876,
        890
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "8126": {
      "fn": "Strings.toString",
      "offset": [
        876,
        890
      ],
      "op": "DUP2",
      "path": "21"
    },
    "8127": {
      "fn": "Strings.toString",
      "offset": [
        876,
        890
      ],
      "op": "LT",
      "path": "21"
    },
    "8128": {
      "fn": "Strings.toString",
      "offset": [
        876,
        890
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x1FCB"
    },
    "8131": {
      "fn": "Strings.toString",
      "offset": [
        876,
        890
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "8132": {
      "fn": "Strings.toString",
      "offset": [
        876,
        890
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x1FCB"
    },
    "8135": {
      "fn": "Strings.toString",
      "offset": [
        876,
        890
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x35DD"
    },
    "8138": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        876,
        890
      ],
      "op": "JUMP",
      "path": "21"
    },
    "8139": {
      "fn": "Strings.toString",
      "offset": [
        876,
        890
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "8140": {
      "fn": "Strings.toString",
      "offset": [
        876,
        890
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x20"
    },
    "8142": {
      "fn": "Strings.toString",
      "offset": [
        876,
        890
      ],
      "op": "ADD",
      "path": "21"
    },
    "8143": {
      "fn": "Strings.toString",
      "offset": [
        876,
        890
      ],
      "op": "ADD",
      "path": "21"
    },
    "8144": {
      "fn": "Strings.toString",
      "offset": [
        876,
        932
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "8145": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8147": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8149": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "8151": {
      "op": "SHL"
    },
    "8152": {
      "op": "SUB"
    },
    "8153": {
      "fn": "Strings.toString",
      "offset": [
        876,
        932
      ],
      "op": "NOT",
      "path": "21"
    },
    "8154": {
      "fn": "Strings.toString",
      "offset": [
        876,
        932
      ],
      "op": "AND",
      "path": "21"
    },
    "8155": {
      "fn": "Strings.toString",
      "offset": [
        876,
        932
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "8156": {
      "fn": "Strings.toString",
      "offset": [
        876,
        932
      ],
      "op": "DUP2",
      "path": "21"
    },
    "8157": {
      "fn": "Strings.toString",
      "offset": [
        876,
        932
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "8159": {
      "fn": "Strings.toString",
      "offset": [
        876,
        932
      ],
      "op": "BYTE",
      "path": "21"
    },
    "8160": {
      "fn": "Strings.toString",
      "offset": [
        876,
        932
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "8161": {
      "fn": "Strings.toString",
      "offset": [
        876,
        932
      ],
      "op": "MSTORE8",
      "path": "21"
    },
    "8162": {
      "op": "POP"
    },
    "8163": {
      "fn": "Strings.toString",
      "offset": [
        947,
        958
      ],
      "op": "PUSH2",
      "path": "21",
      "statement": 84,
      "value": "0x1FED"
    },
    "8166": {
      "fn": "Strings.toString",
      "offset": [
        956,
        958
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0xA"
    },
    "8168": {
      "fn": "Strings.toString",
      "offset": [
        947,
        958
      ],
      "op": "DUP7",
      "path": "21"
    },
    "8169": {
      "fn": "Strings.toString",
      "offset": [
        947,
        958
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x33B0"
    },
    "8172": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        947,
        958
      ],
      "op": "JUMP",
      "path": "21"
    },
    "8173": {
      "fn": "Strings.toString",
      "offset": [
        947,
        958
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "8174": {
      "fn": "Strings.toString",
      "offset": [
        947,
        958
      ],
      "op": "SWAP5",
      "path": "21"
    },
    "8175": {
      "fn": "Strings.toString",
      "offset": [
        947,
        958
      ],
      "op": "POP",
      "path": "21"
    },
    "8176": {
      "fn": "Strings.toString",
      "offset": [
        816,
        970
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x1F8D"
    },
    "8179": {
      "fn": "Strings.toString",
      "offset": [
        816,
        970
      ],
      "op": "JUMP",
      "path": "21"
    },
    "8180": {
      "fn": "ERC721._approve",
      "offset": [
        11460,
        11634
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "8181": {
      "fn": "ERC721._approve",
      "offset": [
        11535,
        11559
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 85,
      "value": "0x0"
    },
    "8183": {
      "fn": "ERC721._approve",
      "offset": [
        11535,
        11559
      ],
      "op": "DUP2",
      "path": "6"
    },
    "8184": {
      "fn": "ERC721._approve",
      "offset": [
        11535,
        11559
      ],
      "op": "DUP2",
      "path": "6"
    },
    "8185": {
      "fn": "ERC721._approve",
      "offset": [
        11535,
        11559
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "8186": {
      "fn": "ERC721._approve",
      "offset": [
        11535,
        11550
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "8188": {
      "fn": "ERC721._approve",
      "offset": [
        11535,
        11559
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "8190": {
      "fn": "ERC721._approve",
      "offset": [
        11535,
        11559
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "8191": {
      "fn": "ERC721._approve",
      "offset": [
        11535,
        11559
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "8193": {
      "fn": "ERC721._approve",
      "offset": [
        11535,
        11559
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8194": {
      "fn": "ERC721._approve",
      "offset": [
        11535,
        11559
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "8195": {
      "fn": "ERC721._approve",
      "offset": [
        11535,
        11564
      ],
      "op": "DUP1",
      "path": "6"
    },
    "8196": {
      "fn": "ERC721._approve",
      "offset": [
        11535,
        11564
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "8197": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8199": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8201": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8203": {
      "op": "SHL"
    },
    "8204": {
      "op": "SUB"
    },
    "8205": {
      "op": "NOT"
    },
    "8206": {
      "fn": "ERC721._approve",
      "offset": [
        11535,
        11564
      ],
      "op": "AND",
      "path": "6"
    },
    "8207": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8209": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8211": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8213": {
      "op": "SHL"
    },
    "8214": {
      "op": "SUB"
    },
    "8215": {
      "fn": "ERC721._approve",
      "offset": [
        11535,
        11564
      ],
      "op": "DUP5",
      "path": "6"
    },
    "8216": {
      "fn": "ERC721._approve",
      "offset": [
        11535,
        11564
      ],
      "op": "AND",
      "path": "6"
    },
    "8217": {
      "fn": "ERC721._approve",
      "offset": [
        11535,
        11564
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8218": {
      "fn": "ERC721._approve",
      "offset": [
        11535,
        11564
      ],
      "op": "DUP2",
      "path": "6"
    },
    "8219": {
      "fn": "ERC721._approve",
      "offset": [
        11535,
        11564
      ],
      "op": "OR",
      "path": "6"
    },
    "8220": {
      "fn": "ERC721._approve",
      "offset": [
        11535,
        11564
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8221": {
      "fn": "ERC721._approve",
      "offset": [
        11535,
        11564
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "8222": {
      "fn": "ERC721._approve",
      "offset": [
        11535,
        11564
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "8223": {
      "fn": "ERC721._approve",
      "offset": [
        11535,
        11559
      ],
      "op": "DUP2",
      "path": "6"
    },
    "8224": {
      "fn": "ERC721._approve",
      "offset": [
        11535,
        11559
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8225": {
      "fn": "ERC721._approve",
      "offset": [
        11589,
        11612
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 86,
      "value": "0x2029"
    },
    "8228": {
      "fn": "ERC721._approve",
      "offset": [
        11535,
        11559
      ],
      "op": "DUP3",
      "path": "6"
    },
    "8229": {
      "fn": "ERC721._approve",
      "offset": [
        11589,
        11603
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x117B"
    },
    "8232": {
      "fn": "ERC721._approve",
      "jump": "i",
      "offset": [
        11589,
        11612
      ],
      "op": "JUMP",
      "path": "6"
    },
    "8233": {
      "fn": "ERC721._approve",
      "offset": [
        11589,
        11612
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "8234": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8236": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8238": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8240": {
      "op": "SHL"
    },
    "8241": {
      "op": "SUB"
    },
    "8242": {
      "fn": "ERC721._approve",
      "offset": [
        11580,
        11626
      ],
      "op": "AND",
      "path": "6"
    },
    "8243": {
      "fn": "ERC721._approve",
      "offset": [
        11580,
        11626
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "8276": {
      "fn": "ERC721._approve",
      "offset": [
        11580,
        11626
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "8278": {
      "fn": "ERC721._approve",
      "offset": [
        11580,
        11626
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "8279": {
      "fn": "ERC721._approve",
      "offset": [
        11580,
        11626
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "8281": {
      "fn": "ERC721._approve",
      "offset": [
        11580,
        11626
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "8282": {
      "fn": "ERC721._approve",
      "offset": [
        11580,
        11626
      ],
      "op": "DUP1",
      "path": "6"
    },
    "8283": {
      "fn": "ERC721._approve",
      "offset": [
        11580,
        11626
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "8284": {
      "fn": "ERC721._approve",
      "offset": [
        11580,
        11626
      ],
      "op": "SUB",
      "path": "6"
    },
    "8285": {
      "fn": "ERC721._approve",
      "offset": [
        11580,
        11626
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8286": {
      "fn": "ERC721._approve",
      "offset": [
        11580,
        11626
      ],
      "op": "LOG4",
      "path": "6"
    },
    "8287": {
      "fn": "ERC721._approve",
      "offset": [
        11460,
        11634
      ],
      "op": "POP",
      "path": "6"
    },
    "8288": {
      "fn": "ERC721._approve",
      "offset": [
        11460,
        11634
      ],
      "op": "POP",
      "path": "6"
    },
    "8289": {
      "fn": "ERC721._approve",
      "jump": "o",
      "offset": [
        11460,
        11634
      ],
      "op": "JUMP",
      "path": "6"
    },
    "8290": {
      "fn": "ERC721._safeMint",
      "offset": [
        8462,
        8572
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "8291": {
      "fn": "ERC721._safeMint",
      "offset": [
        8538,
        8564
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 87,
      "value": "0x207C"
    },
    "8294": {
      "fn": "ERC721._safeMint",
      "offset": [
        8548,
        8550
      ],
      "op": "DUP3",
      "path": "6"
    },
    "8295": {
      "fn": "ERC721._safeMint",
      "offset": [
        8552,
        8559
      ],
      "op": "DUP3",
      "path": "6"
    },
    "8296": {
      "fn": "ERC721._safeMint",
      "offset": [
        8538,
        8564
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "8298": {
      "fn": "ERC721._safeMint",
      "offset": [
        8538,
        8564
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "8299": {
      "fn": "ERC721._safeMint",
      "offset": [
        8538,
        8564
      ],
      "op": "DUP1",
      "path": "6"
    },
    "8300": {
      "fn": "ERC721._safeMint",
      "offset": [
        8538,
        8564
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "8302": {
      "fn": "ERC721._safeMint",
      "offset": [
        8538,
        8564
      ],
      "op": "ADD",
      "path": "6"
    },
    "8303": {
      "fn": "ERC721._safeMint",
      "offset": [
        8538,
        8564
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "8305": {
      "fn": "ERC721._safeMint",
      "offset": [
        8538,
        8564
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "8306": {
      "fn": "ERC721._safeMint",
      "offset": [
        8538,
        8564
      ],
      "op": "DUP1",
      "path": "6"
    },
    "8307": {
      "fn": "ERC721._safeMint",
      "offset": [
        8538,
        8564
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "8309": {
      "fn": "ERC721._safeMint",
      "offset": [
        8538,
        8564
      ],
      "op": "DUP2",
      "path": "6"
    },
    "8310": {
      "fn": "ERC721._safeMint",
      "offset": [
        8538,
        8564
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "8311": {
      "fn": "ERC721._safeMint",
      "offset": [
        8538,
        8564
      ],
      "op": "POP",
      "path": "6"
    },
    "8312": {
      "fn": "ERC721._safeMint",
      "offset": [
        8538,
        8547
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x23A3"
    },
    "8315": {
      "fn": "ERC721._safeMint",
      "jump": "i",
      "offset": [
        8538,
        8564
      ],
      "op": "JUMP",
      "path": "6"
    },
    "8316": {
      "fn": "ERC721._safeMint",
      "offset": [
        8538,
        8564
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "8317": {
      "fn": "ERC721._safeMint",
      "offset": [
        8462,
        8572
      ],
      "op": "POP",
      "path": "6"
    },
    "8318": {
      "fn": "ERC721._safeMint",
      "offset": [
        8462,
        8572
      ],
      "op": "POP",
      "path": "6"
    },
    "8319": {
      "fn": "ERC721._safeMint",
      "jump": "o",
      "offset": [
        8462,
        8572
      ],
      "op": "JUMP",
      "path": "6"
    },
    "8320": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7772,
        8120
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "8321": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7865,
        7869
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "8323": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "DUP2",
      "path": "6"
    },
    "8324": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "DUP2",
      "path": "6"
    },
    "8325": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "8326": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7574
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2"
    },
    "8328": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "8330": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "8331": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "8333": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "DUP2",
      "path": "6"
    },
    "8334": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "8335": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "8336": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8338": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8340": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8342": {
      "op": "SHL"
    },
    "8343": {
      "op": "SUB"
    },
    "8344": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "AND",
      "path": "6"
    },
    "8345": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7882,
        7955
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 88,
      "value": "0x20F9"
    },
    "8348": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7882,
        7955
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "8349": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7882,
        7955
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "8351": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7882,
        7955
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "8352": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8356": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8358": {
      "op": "SHL"
    },
    "8359": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7882,
        7955
      ],
      "op": "DUP2",
      "path": "6"
    },
    "8360": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7882,
        7955
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "8361": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8363": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7882,
        7955
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "8365": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7882,
        7955
      ],
      "op": "DUP3",
      "path": "6"
    },
    "8366": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7882,
        7955
      ],
      "op": "ADD",
      "path": "6"
    },
    "8367": {
      "op": "MSTORE"
    },
    "8368": {
      "op": "PUSH1",
      "value": "0x2C"
    },
    "8370": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8372": {
      "op": "DUP3"
    },
    "8373": {
      "op": "ADD"
    },
    "8374": {
      "op": "MSTORE"
    },
    "8375": {
      "op": "PUSH32",
      "value": "0x4552433732313A206F70657261746F7220717565727920666F72206E6F6E6578"
    },
    "8408": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8410": {
      "op": "DUP3"
    },
    "8411": {
      "op": "ADD"
    },
    "8412": {
      "op": "MSTORE"
    },
    "8413": {
      "op": "PUSH12",
      "value": "0x34B9BA32B73A103A37B5B2B7"
    },
    "8426": {
      "op": "PUSH1",
      "value": "0xA1"
    },
    "8428": {
      "op": "SHL"
    },
    "8429": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8431": {
      "op": "DUP3"
    },
    "8432": {
      "op": "ADD"
    },
    "8433": {
      "op": "MSTORE"
    },
    "8434": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "8436": {
      "op": "ADD"
    },
    "8437": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7882,
        7955
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xB50"
    },
    "8440": {
      "op": "JUMP"
    },
    "8441": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7882,
        7955
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "8442": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7966,
        7979
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "8444": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7982,
        8005
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2104"
    },
    "8447": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7997,
        8004
      ],
      "op": "DUP4",
      "path": "6"
    },
    "8448": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7982,
        7996
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x117B"
    },
    "8451": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "i",
      "offset": [
        7982,
        8005
      ],
      "op": "JUMP",
      "path": "6"
    },
    "8452": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7982,
        8005
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "8453": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7966,
        8005
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8454": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7966,
        8005
      ],
      "op": "POP",
      "path": "6"
    },
    "8455": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8035,
        8040
      ],
      "op": "DUP1",
      "path": "6",
      "statement": 89
    },
    "8456": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8458": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8460": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8462": {
      "op": "SHL"
    },
    "8463": {
      "op": "SUB"
    },
    "8464": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8024,
        8040
      ],
      "op": "AND",
      "path": "6"
    },
    "8465": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8024,
        8031
      ],
      "op": "DUP5",
      "path": "6"
    },
    "8466": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8468": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8470": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8472": {
      "op": "SHL"
    },
    "8473": {
      "op": "SUB"
    },
    "8474": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8024,
        8040
      ],
      "op": "AND",
      "path": "6"
    },
    "8475": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8024,
        8040
      ],
      "op": "EQ",
      "path": "6"
    },
    "8476": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8024,
        8075
      ],
      "op": "DUP1",
      "path": "6"
    },
    "8477": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8024,
        8075
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x213F"
    },
    "8480": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8024,
        8075
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "8481": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8024,
        8075
      ],
      "op": "POP",
      "path": "6"
    },
    "8482": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8068,
        8075
      ],
      "op": "DUP4",
      "path": "6"
    },
    "8483": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8485": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8487": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8489": {
      "op": "SHL"
    },
    "8490": {
      "op": "SUB"
    },
    "8491": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8044,
        8075
      ],
      "op": "AND",
      "path": "6"
    },
    "8492": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8044,
        8064
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2134"
    },
    "8495": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8056,
        8063
      ],
      "op": "DUP5",
      "path": "6"
    },
    "8496": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8044,
        8055
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xADB"
    },
    "8499": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "i",
      "offset": [
        8044,
        8064
      ],
      "op": "JUMP",
      "path": "6"
    },
    "8500": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8044,
        8064
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "8501": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8503": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8505": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8507": {
      "op": "SHL"
    },
    "8508": {
      "op": "SUB"
    },
    "8509": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8044,
        8075
      ],
      "op": "AND",
      "path": "6"
    },
    "8510": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8044,
        8075
      ],
      "op": "EQ",
      "path": "6"
    },
    "8511": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8024,
        8075
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "8512": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8024,
        8111
      ],
      "op": "DUP1",
      "path": "6"
    },
    "8513": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8024,
        8111
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1A95"
    },
    "8516": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8024,
        8111
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "8517": {
      "op": "POP"
    },
    "8518": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8520": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8522": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8524": {
      "op": "SHL"
    },
    "8525": {
      "op": "SUB"
    },
    "8526": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "DUP1",
      "path": "6"
    },
    "8527": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "DUP3",
      "path": "6"
    },
    "8528": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "AND",
      "path": "6"
    },
    "8529": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4840,
        4844
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "8531": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8532": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "DUP2",
      "path": "6"
    },
    "8533": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "8534": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4882
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x5"
    },
    "8536": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "8538": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8539": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "DUP2",
      "path": "6"
    },
    "8540": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "8541": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "8543": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "DUP1",
      "path": "6"
    },
    "8544": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "DUP4",
      "path": "6"
    },
    "8545": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4889
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "8546": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4899
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "8547": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4899
      ],
      "op": "DUP9",
      "path": "6"
    },
    "8548": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4899
      ],
      "op": "AND",
      "path": "6"
    },
    "8549": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4899
      ],
      "op": "DUP4",
      "path": "6"
    },
    "8550": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4899
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "8551": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4899
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "8552": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4899
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8553": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4899
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "8554": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4899
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "8555": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4899
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "8556": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4899
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xFF"
    },
    "8558": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4864,
        4899
      ],
      "op": "AND",
      "path": "6"
    },
    "8559": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        8079,
        8111
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1A95"
    },
    "8562": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4743,
        4907
      ],
      "op": "JUMP",
      "path": "6"
    },
    "8563": {
      "fn": "ERC721._transfer",
      "offset": [
        10764,
        11342
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "8564": {
      "fn": "ERC721._transfer",
      "offset": [
        10923,
        10927
      ],
      "op": "DUP3",
      "path": "6",
      "statement": 90
    },
    "8565": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8567": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8569": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8571": {
      "op": "SHL"
    },
    "8572": {
      "op": "SUB"
    },
    "8573": {
      "fn": "ERC721._transfer",
      "offset": [
        10896,
        10927
      ],
      "op": "AND",
      "path": "6"
    },
    "8574": {
      "fn": "ERC721._transfer",
      "offset": [
        10896,
        10919
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2186"
    },
    "8577": {
      "fn": "ERC721._transfer",
      "offset": [
        10911,
        10918
      ],
      "op": "DUP3",
      "path": "6"
    },
    "8578": {
      "fn": "ERC721._transfer",
      "offset": [
        10896,
        10910
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x117B"
    },
    "8581": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        10896,
        10919
      ],
      "op": "JUMP",
      "path": "6"
    },
    "8582": {
      "fn": "ERC721._transfer",
      "offset": [
        10896,
        10919
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "8583": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8585": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8587": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8589": {
      "op": "SHL"
    },
    "8590": {
      "op": "SUB"
    },
    "8591": {
      "fn": "ERC721._transfer",
      "offset": [
        10896,
        10927
      ],
      "op": "AND",
      "path": "6"
    },
    "8592": {
      "branch": 148,
      "fn": "ERC721._transfer",
      "offset": [
        10896,
        10927
      ],
      "op": "EQ",
      "path": "6"
    },
    "8593": {
      "fn": "ERC721._transfer",
      "offset": [
        10888,
        10973
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x21EE"
    },
    "8596": {
      "branch": 148,
      "fn": "ERC721._transfer",
      "offset": [
        10888,
        10973
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "8597": {
      "fn": "ERC721._transfer",
      "offset": [
        10888,
        10973
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "8599": {
      "fn": "ERC721._transfer",
      "offset": [
        10888,
        10973
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "8600": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8604": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8606": {
      "op": "SHL"
    },
    "8607": {
      "fn": "ERC721._transfer",
      "offset": [
        10888,
        10973
      ],
      "op": "DUP2",
      "path": "6"
    },
    "8608": {
      "fn": "ERC721._transfer",
      "offset": [
        10888,
        10973
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "8609": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8611": {
      "fn": "ERC721._transfer",
      "offset": [
        10888,
        10973
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "8613": {
      "fn": "ERC721._transfer",
      "offset": [
        10888,
        10973
      ],
      "op": "DUP3",
      "path": "6"
    },
    "8614": {
      "fn": "ERC721._transfer",
      "offset": [
        10888,
        10973
      ],
      "op": "ADD",
      "path": "6"
    },
    "8615": {
      "op": "MSTORE"
    },
    "8616": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "8618": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8620": {
      "op": "DUP3"
    },
    "8621": {
      "op": "ADD"
    },
    "8622": {
      "op": "MSTORE"
    },
    "8623": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E73666572206F6620746F6B656E20746861742069"
    },
    "8656": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8658": {
      "op": "DUP3"
    },
    "8659": {
      "op": "ADD"
    },
    "8660": {
      "op": "MSTORE"
    },
    "8661": {
      "op": "PUSH9",
      "value": "0x39903737BA1037BBB7"
    },
    "8671": {
      "op": "PUSH1",
      "value": "0xB9"
    },
    "8673": {
      "op": "SHL"
    },
    "8674": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8676": {
      "op": "DUP3"
    },
    "8677": {
      "op": "ADD"
    },
    "8678": {
      "op": "MSTORE"
    },
    "8679": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "8681": {
      "op": "ADD"
    },
    "8682": {
      "fn": "ERC721._transfer",
      "offset": [
        10888,
        10973
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xB50"
    },
    "8685": {
      "op": "JUMP"
    },
    "8686": {
      "fn": "ERC721._transfer",
      "offset": [
        10888,
        10973
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "8687": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8689": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8691": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8693": {
      "op": "SHL"
    },
    "8694": {
      "op": "SUB"
    },
    "8695": {
      "fn": "ERC721._transfer",
      "offset": [
        10992,
        11008
      ],
      "op": "DUP3",
      "path": "6",
      "statement": 91
    },
    "8696": {
      "branch": 149,
      "fn": "ERC721._transfer",
      "offset": [
        10992,
        11008
      ],
      "op": "AND",
      "path": "6"
    },
    "8697": {
      "fn": "ERC721._transfer",
      "offset": [
        10984,
        11049
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2250"
    },
    "8700": {
      "branch": 149,
      "fn": "ERC721._transfer",
      "offset": [
        10984,
        11049
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "8701": {
      "fn": "ERC721._transfer",
      "offset": [
        10984,
        11049
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "8703": {
      "fn": "ERC721._transfer",
      "offset": [
        10984,
        11049
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "8704": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8708": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8710": {
      "op": "SHL"
    },
    "8711": {
      "fn": "ERC721._transfer",
      "offset": [
        10984,
        11049
      ],
      "op": "DUP2",
      "path": "6"
    },
    "8712": {
      "fn": "ERC721._transfer",
      "offset": [
        10984,
        11049
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "8713": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8715": {
      "fn": "ERC721._transfer",
      "offset": [
        10984,
        11049
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "8717": {
      "fn": "ERC721._transfer",
      "offset": [
        10984,
        11049
      ],
      "op": "DUP3",
      "path": "6"
    },
    "8718": {
      "fn": "ERC721._transfer",
      "offset": [
        10984,
        11049
      ],
      "op": "ADD",
      "path": "6"
    },
    "8719": {
      "op": "MSTORE"
    },
    "8720": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8722": {
      "op": "DUP1"
    },
    "8723": {
      "op": "DUP3"
    },
    "8724": {
      "op": "ADD"
    },
    "8725": {
      "op": "MSTORE"
    },
    "8726": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E7366657220746F20746865207A65726F20616464"
    },
    "8759": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8761": {
      "op": "DUP3"
    },
    "8762": {
      "op": "ADD"
    },
    "8763": {
      "op": "MSTORE"
    },
    "8764": {
      "op": "PUSH4",
      "value": "0x72657373"
    },
    "8769": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8771": {
      "op": "SHL"
    },
    "8772": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8774": {
      "op": "DUP3"
    },
    "8775": {
      "op": "ADD"
    },
    "8776": {
      "op": "MSTORE"
    },
    "8777": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "8779": {
      "op": "ADD"
    },
    "8780": {
      "fn": "ERC721._transfer",
      "offset": [
        10984,
        11049
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xB50"
    },
    "8783": {
      "op": "JUMP"
    },
    "8784": {
      "fn": "ERC721._transfer",
      "offset": [
        10984,
        11049
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "8785": {
      "fn": "ERC721._transfer",
      "offset": [
        11062,
        11101
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 92,
      "value": "0x225B"
    },
    "8788": {
      "fn": "ERC721._transfer",
      "offset": [
        11083,
        11087
      ],
      "op": "DUP4",
      "path": "6"
    },
    "8789": {
      "fn": "ERC721._transfer",
      "offset": [
        11089,
        11091
      ],
      "op": "DUP4",
      "path": "6"
    },
    "8790": {
      "fn": "ERC721._transfer",
      "offset": [
        11093,
        11100
      ],
      "op": "DUP4",
      "path": "6"
    },
    "8791": {
      "fn": "ERC721._transfer",
      "offset": [
        11062,
        11082
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x23D6"
    },
    "8794": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        11062,
        11101
      ],
      "op": "JUMP",
      "path": "6"
    },
    "8795": {
      "fn": "ERC721._transfer",
      "offset": [
        11062,
        11101
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "8796": {
      "fn": "ERC721._transfer",
      "offset": [
        11166,
        11195
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 93,
      "value": "0x2266"
    },
    "8799": {
      "fn": "ERC721._transfer",
      "offset": [
        11183,
        11184
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "8801": {
      "fn": "ERC721._transfer",
      "offset": [
        11187,
        11194
      ],
      "op": "DUP3",
      "path": "6"
    },
    "8802": {
      "fn": "ERC721._transfer",
      "offset": [
        11166,
        11174
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1FF4"
    },
    "8805": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        11166,
        11195
      ],
      "op": "JUMP",
      "path": "6"
    },
    "8806": {
      "fn": "ERC721._transfer",
      "offset": [
        11166,
        11195
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "8807": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8809": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8811": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8813": {
      "op": "SHL"
    },
    "8814": {
      "op": "SUB"
    },
    "8815": {
      "fn": "ERC721._transfer",
      "offset": [
        11208,
        11223
      ],
      "op": "DUP4",
      "path": "6",
      "statement": 94
    },
    "8816": {
      "fn": "ERC721._transfer",
      "offset": [
        11208,
        11223
      ],
      "op": "AND",
      "path": "6"
    },
    "8817": {
      "fn": "ERC721._transfer",
      "offset": [
        11208,
        11223
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "8819": {
      "fn": "ERC721._transfer",
      "offset": [
        11208,
        11223
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8820": {
      "fn": "ERC721._transfer",
      "offset": [
        11208,
        11223
      ],
      "op": "DUP2",
      "path": "6"
    },
    "8821": {
      "fn": "ERC721._transfer",
      "offset": [
        11208,
        11223
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "8822": {
      "fn": "ERC721._transfer",
      "offset": [
        11208,
        11217
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x3"
    },
    "8824": {
      "fn": "ERC721._transfer",
      "offset": [
        11208,
        11223
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "8826": {
      "fn": "ERC721._transfer",
      "offset": [
        11208,
        11223
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "8827": {
      "fn": "ERC721._transfer",
      "offset": [
        11208,
        11223
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "8829": {
      "fn": "ERC721._transfer",
      "offset": [
        11208,
        11223
      ],
      "op": "DUP2",
      "path": "6"
    },
    "8830": {
      "fn": "ERC721._transfer",
      "offset": [
        11208,
        11223
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "8831": {
      "fn": "ERC721._transfer",
      "offset": [
        11208,
        11228
      ],
      "op": "DUP1",
      "path": "6"
    },
    "8832": {
      "fn": "ERC721._transfer",
      "offset": [
        11208,
        11228
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "8833": {
      "fn": "ERC721._transfer",
      "offset": [
        11227,
        11228
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "8835": {
      "fn": "ERC721._transfer",
      "offset": [
        11227,
        11228
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "8836": {
      "fn": "ERC721._transfer",
      "offset": [
        11208,
        11223
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8837": {
      "fn": "ERC721._transfer",
      "offset": [
        11208,
        11228
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x228F"
    },
    "8840": {
      "fn": "ERC721._transfer",
      "offset": [
        11208,
        11228
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8841": {
      "fn": "ERC721._transfer",
      "offset": [
        11227,
        11228
      ],
      "op": "DUP5",
      "path": "6"
    },
    "8842": {
      "fn": "ERC721._transfer",
      "offset": [
        11227,
        11228
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8843": {
      "fn": "ERC721._transfer",
      "offset": [
        11208,
        11228
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3383"
    },
    "8846": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        11208,
        11228
      ],
      "op": "JUMP",
      "path": "6"
    },
    "8847": {
      "fn": "ERC721._transfer",
      "offset": [
        11208,
        11228
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "8848": {
      "fn": "ERC721._transfer",
      "offset": [
        11208,
        11228
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8849": {
      "fn": "ERC721._transfer",
      "offset": [
        11208,
        11228
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "8850": {
      "fn": "ERC721._transfer",
      "offset": [
        11208,
        11228
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "8851": {
      "op": "POP"
    },
    "8852": {
      "op": "POP"
    },
    "8853": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8855": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8857": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8859": {
      "op": "SHL"
    },
    "8860": {
      "op": "SUB"
    },
    "8861": {
      "fn": "ERC721._transfer",
      "offset": [
        11239,
        11252
      ],
      "op": "DUP3",
      "path": "6",
      "statement": 95
    },
    "8862": {
      "fn": "ERC721._transfer",
      "offset": [
        11239,
        11252
      ],
      "op": "AND",
      "path": "6"
    },
    "8863": {
      "fn": "ERC721._transfer",
      "offset": [
        11239,
        11252
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "8865": {
      "fn": "ERC721._transfer",
      "offset": [
        11239,
        11252
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8866": {
      "fn": "ERC721._transfer",
      "offset": [
        11239,
        11252
      ],
      "op": "DUP2",
      "path": "6"
    },
    "8867": {
      "fn": "ERC721._transfer",
      "offset": [
        11239,
        11252
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "8868": {
      "fn": "ERC721._transfer",
      "offset": [
        11239,
        11248
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x3"
    },
    "8870": {
      "fn": "ERC721._transfer",
      "offset": [
        11239,
        11252
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "8872": {
      "fn": "ERC721._transfer",
      "offset": [
        11239,
        11252
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "8873": {
      "fn": "ERC721._transfer",
      "offset": [
        11239,
        11252
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "8875": {
      "fn": "ERC721._transfer",
      "offset": [
        11239,
        11252
      ],
      "op": "DUP2",
      "path": "6"
    },
    "8876": {
      "fn": "ERC721._transfer",
      "offset": [
        11239,
        11252
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "8877": {
      "fn": "ERC721._transfer",
      "offset": [
        11239,
        11257
      ],
      "op": "DUP1",
      "path": "6"
    },
    "8878": {
      "fn": "ERC721._transfer",
      "offset": [
        11239,
        11257
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "8879": {
      "fn": "ERC721._transfer",
      "offset": [
        11256,
        11257
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "8881": {
      "fn": "ERC721._transfer",
      "offset": [
        11256,
        11257
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "8882": {
      "fn": "ERC721._transfer",
      "offset": [
        11239,
        11252
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8883": {
      "fn": "ERC721._transfer",
      "offset": [
        11239,
        11257
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x22BD"
    },
    "8886": {
      "fn": "ERC721._transfer",
      "offset": [
        11239,
        11257
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8887": {
      "fn": "ERC721._transfer",
      "offset": [
        11256,
        11257
      ],
      "op": "DUP5",
      "path": "6"
    },
    "8888": {
      "fn": "ERC721._transfer",
      "offset": [
        11256,
        11257
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8889": {
      "fn": "ERC721._transfer",
      "offset": [
        11239,
        11257
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3412"
    },
    "8892": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        11239,
        11257
      ],
      "op": "JUMP",
      "path": "6"
    },
    "8893": {
      "fn": "ERC721._transfer",
      "offset": [
        11239,
        11257
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "8894": {
      "fn": "ERC721._transfer",
      "offset": [
        11239,
        11257
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8895": {
      "fn": "ERC721._transfer",
      "offset": [
        11239,
        11257
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "8896": {
      "fn": "ERC721._transfer",
      "offset": [
        11239,
        11257
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "8897": {
      "op": "POP"
    },
    "8898": {
      "op": "POP"
    },
    "8899": {
      "fn": "ERC721._transfer",
      "offset": [
        11268,
        11284
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 96,
      "value": "0x0"
    },
    "8901": {
      "fn": "ERC721._transfer",
      "offset": [
        11268,
        11284
      ],
      "op": "DUP2",
      "path": "6"
    },
    "8902": {
      "fn": "ERC721._transfer",
      "offset": [
        11268,
        11284
      ],
      "op": "DUP2",
      "path": "6"
    },
    "8903": {
      "fn": "ERC721._transfer",
      "offset": [
        11268,
        11284
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "8904": {
      "fn": "ERC721._transfer",
      "offset": [
        11268,
        11275
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2"
    },
    "8906": {
      "fn": "ERC721._transfer",
      "offset": [
        11268,
        11284
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "8908": {
      "fn": "ERC721._transfer",
      "offset": [
        11268,
        11284
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "8909": {
      "fn": "ERC721._transfer",
      "offset": [
        11268,
        11284
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "8911": {
      "fn": "ERC721._transfer",
      "offset": [
        11268,
        11284
      ],
      "op": "DUP1",
      "path": "6"
    },
    "8912": {
      "fn": "ERC721._transfer",
      "offset": [
        11268,
        11284
      ],
      "op": "DUP3",
      "path": "6"
    },
    "8913": {
      "fn": "ERC721._transfer",
      "offset": [
        11268,
        11284
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "8914": {
      "fn": "ERC721._transfer",
      "offset": [
        11268,
        11289
      ],
      "op": "DUP1",
      "path": "6"
    },
    "8915": {
      "fn": "ERC721._transfer",
      "offset": [
        11268,
        11289
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "8916": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8918": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8920": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8922": {
      "op": "SHL"
    },
    "8923": {
      "op": "SUB"
    },
    "8924": {
      "op": "NOT"
    },
    "8925": {
      "fn": "ERC721._transfer",
      "offset": [
        11268,
        11289
      ],
      "op": "AND",
      "path": "6"
    },
    "8926": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8928": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8930": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8932": {
      "op": "SHL"
    },
    "8933": {
      "op": "SUB"
    },
    "8934": {
      "fn": "ERC721._transfer",
      "offset": [
        11268,
        11289
      ],
      "op": "DUP7",
      "path": "6"
    },
    "8935": {
      "fn": "ERC721._transfer",
      "offset": [
        11268,
        11289
      ],
      "op": "DUP2",
      "path": "6"
    },
    "8936": {
      "fn": "ERC721._transfer",
      "offset": [
        11268,
        11289
      ],
      "op": "AND",
      "path": "6"
    },
    "8937": {
      "fn": "ERC721._transfer",
      "offset": [
        11268,
        11289
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "8938": {
      "fn": "ERC721._transfer",
      "offset": [
        11268,
        11289
      ],
      "op": "DUP3",
      "path": "6"
    },
    "8939": {
      "fn": "ERC721._transfer",
      "offset": [
        11268,
        11289
      ],
      "op": "OR",
      "path": "6"
    },
    "8940": {
      "fn": "ERC721._transfer",
      "offset": [
        11268,
        11289
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8941": {
      "fn": "ERC721._transfer",
      "offset": [
        11268,
        11289
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "8942": {
      "fn": "ERC721._transfer",
      "offset": [
        11268,
        11289
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "8943": {
      "fn": "ERC721._transfer",
      "offset": [
        11307,
        11334
      ],
      "op": "SWAP2",
      "path": "6",
      "statement": 97
    },
    "8944": {
      "fn": "ERC721._transfer",
      "offset": [
        11307,
        11334
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "8945": {
      "fn": "ERC721._transfer",
      "offset": [
        11268,
        11284
      ],
      "op": "DUP5",
      "path": "6"
    },
    "8946": {
      "fn": "ERC721._transfer",
      "offset": [
        11268,
        11284
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "8947": {
      "fn": "ERC721._transfer",
      "offset": [
        11307,
        11334
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "8948": {
      "fn": "ERC721._transfer",
      "offset": [
        11307,
        11334
      ],
      "op": "DUP8",
      "path": "6"
    },
    "8949": {
      "fn": "ERC721._transfer",
      "offset": [
        11307,
        11334
      ],
      "op": "AND",
      "path": "6"
    },
    "8950": {
      "fn": "ERC721._transfer",
      "offset": [
        11307,
        11334
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "8951": {
      "fn": "ERC721._transfer",
      "offset": [
        11307,
        11334
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "8984": {
      "fn": "ERC721._transfer",
      "offset": [
        11307,
        11334
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "8985": {
      "fn": "ERC721._transfer",
      "offset": [
        11307,
        11334
      ],
      "op": "LOG4",
      "path": "6"
    },
    "8986": {
      "fn": "ERC721._transfer",
      "offset": [
        10764,
        11342
      ],
      "op": "POP",
      "path": "6"
    },
    "8987": {
      "fn": "ERC721._transfer",
      "offset": [
        10764,
        11342
      ],
      "op": "POP",
      "path": "6"
    },
    "8988": {
      "fn": "ERC721._transfer",
      "offset": [
        10764,
        11342
      ],
      "op": "POP",
      "path": "6"
    },
    "8989": {
      "fn": "ERC721._transfer",
      "jump": "o",
      "offset": [
        10764,
        11342
      ],
      "op": "JUMP",
      "path": "6"
    },
    "8990": {
      "fn": "Ownable._setOwner",
      "offset": [
        2101,
        2274
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "8991": {
      "fn": "Ownable._setOwner",
      "offset": [
        2176,
        2182
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0xA"
    },
    "8993": {
      "fn": "Ownable._setOwner",
      "offset": [
        2176,
        2182
      ],
      "op": "DUP1",
      "path": "8"
    },
    "8994": {
      "fn": "Ownable._setOwner",
      "offset": [
        2176,
        2182
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "8995": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8997": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8999": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9001": {
      "op": "SHL"
    },
    "9002": {
      "op": "SUB"
    },
    "9003": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "DUP4",
      "path": "8",
      "statement": 98
    },
    "9004": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "DUP2",
      "path": "8"
    },
    "9005": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "AND",
      "path": "8"
    },
    "9006": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9008": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9010": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9012": {
      "op": "SHL"
    },
    "9013": {
      "op": "SUB"
    },
    "9014": {
      "op": "NOT"
    },
    "9015": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "DUP4",
      "path": "8"
    },
    "9016": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "AND",
      "path": "8"
    },
    "9017": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "DUP2",
      "path": "8"
    },
    "9018": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "OR",
      "path": "8"
    },
    "9019": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "9020": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "SWAP4",
      "path": "8"
    },
    "9021": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "9022": {
      "fn": "Ownable._setOwner",
      "offset": [
        2226,
        2266
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 99,
      "value": "0x40"
    },
    "9024": {
      "fn": "Ownable._setOwner",
      "offset": [
        2226,
        2266
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "9025": {
      "fn": "Ownable._setOwner",
      "offset": [
        2176,
        2182
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "9026": {
      "fn": "Ownable._setOwner",
      "offset": [
        2176,
        2182
      ],
      "op": "AND",
      "path": "8"
    },
    "9027": {
      "fn": "Ownable._setOwner",
      "offset": [
        2176,
        2182
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "9028": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "9029": {
      "fn": "Ownable._setOwner",
      "offset": [
        2176,
        2182
      ],
      "op": "DUP3",
      "path": "8"
    },
    "9030": {
      "fn": "Ownable._setOwner",
      "offset": [
        2176,
        2182
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "9031": {
      "fn": "Ownable._setOwner",
      "offset": [
        2226,
        2266
      ],
      "op": "PUSH32",
      "path": "8",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "9064": {
      "fn": "Ownable._setOwner",
      "offset": [
        2226,
        2266
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "9065": {
      "fn": "Ownable._setOwner",
      "offset": [
        2157,
        2173
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "9067": {
      "fn": "Ownable._setOwner",
      "offset": [
        2157,
        2173
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "9068": {
      "fn": "Ownable._setOwner",
      "offset": [
        2226,
        2266
      ],
      "op": "LOG3",
      "path": "8"
    },
    "9069": {
      "fn": "Ownable._setOwner",
      "offset": [
        2146,
        2274
      ],
      "op": "POP",
      "path": "8"
    },
    "9070": {
      "fn": "Ownable._setOwner",
      "offset": [
        2101,
        2274
      ],
      "op": "POP",
      "path": "8"
    },
    "9071": {
      "fn": "Ownable._setOwner",
      "jump": "o",
      "offset": [
        2101,
        2274
      ],
      "op": "JUMP",
      "path": "8"
    },
    "9072": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6850,
        7165
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "9073": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7007,
        7035
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 100,
      "value": "0x237B"
    },
    "9076": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7017,
        7021
      ],
      "op": "DUP5",
      "path": "6"
    },
    "9077": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7023,
        7025
      ],
      "op": "DUP5",
      "path": "6"
    },
    "9078": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7027,
        7034
      ],
      "op": "DUP5",
      "path": "6"
    },
    "9079": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7007,
        7016
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2173"
    },
    "9082": {
      "fn": "ERC721._safeTransfer",
      "jump": "i",
      "offset": [
        7007,
        7035
      ],
      "op": "JUMP",
      "path": "6"
    },
    "9083": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7007,
        7035
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "9084": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7054,
        7102
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 101,
      "value": "0x2387"
    },
    "9087": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7077,
        7081
      ],
      "op": "DUP5",
      "path": "6"
    },
    "9088": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7083,
        7085
      ],
      "op": "DUP5",
      "path": "6"
    },
    "9089": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7087,
        7094
      ],
      "op": "DUP5",
      "path": "6"
    },
    "9090": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7096,
        7101
      ],
      "op": "DUP5",
      "path": "6"
    },
    "9091": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7054,
        7076
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x248E"
    },
    "9094": {
      "fn": "ERC721._safeTransfer",
      "jump": "i",
      "offset": [
        7054,
        7102
      ],
      "op": "JUMP",
      "path": "6"
    },
    "9095": {
      "branch": 150,
      "fn": "ERC721._safeTransfer",
      "offset": [
        7054,
        7102
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "9096": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7046,
        7157
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1937"
    },
    "9099": {
      "branch": 150,
      "fn": "ERC721._safeTransfer",
      "offset": [
        7046,
        7157
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "9100": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7046,
        7157
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "9102": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7046,
        7157
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "9103": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9107": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9109": {
      "op": "SHL"
    },
    "9110": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7046,
        7157
      ],
      "op": "DUP2",
      "path": "6"
    },
    "9111": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7046,
        7157
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "9112": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7046,
        7157
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "9114": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7046,
        7157
      ],
      "op": "ADD",
      "path": "6"
    },
    "9115": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7046,
        7157
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xB50"
    },
    "9118": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7046,
        7157
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "9119": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        7046,
        7157
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x36A2"
    },
    "9122": {
      "fn": "ERC721._safeTransfer",
      "jump": "i",
      "offset": [
        7046,
        7157
      ],
      "op": "JUMP",
      "path": "6"
    },
    "9123": {
      "fn": "ERC721._safeMint",
      "offset": [
        8799,
        9120
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "9124": {
      "fn": "ERC721._safeMint",
      "offset": [
        8929,
        8947
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 102,
      "value": "0x23AD"
    },
    "9127": {
      "fn": "ERC721._safeMint",
      "offset": [
        8935,
        8937
      ],
      "op": "DUP4",
      "path": "6"
    },
    "9128": {
      "fn": "ERC721._safeMint",
      "offset": [
        8939,
        8946
      ],
      "op": "DUP4",
      "path": "6"
    },
    "9129": {
      "fn": "ERC721._safeMint",
      "offset": [
        8929,
        8934
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x258F"
    },
    "9132": {
      "fn": "ERC721._safeMint",
      "jump": "i",
      "offset": [
        8929,
        8947
      ],
      "op": "JUMP",
      "path": "6"
    },
    "9133": {
      "fn": "ERC721._safeMint",
      "offset": [
        8929,
        8947
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "9134": {
      "fn": "ERC721._safeMint",
      "offset": [
        8980,
        9034
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 103,
      "value": "0x23BA"
    },
    "9137": {
      "fn": "ERC721._safeMint",
      "offset": [
        9011,
        9012
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "9139": {
      "fn": "ERC721._safeMint",
      "offset": [
        9015,
        9017
      ],
      "op": "DUP5",
      "path": "6"
    },
    "9140": {
      "fn": "ERC721._safeMint",
      "offset": [
        9019,
        9026
      ],
      "op": "DUP5",
      "path": "6"
    },
    "9141": {
      "fn": "ERC721._safeMint",
      "offset": [
        9028,
        9033
      ],
      "op": "DUP5",
      "path": "6"
    },
    "9142": {
      "fn": "ERC721._safeMint",
      "offset": [
        8980,
        9002
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x248E"
    },
    "9145": {
      "fn": "ERC721._safeMint",
      "jump": "i",
      "offset": [
        8980,
        9034
      ],
      "op": "JUMP",
      "path": "6"
    },
    "9146": {
      "branch": 151,
      "fn": "ERC721._safeMint",
      "offset": [
        8980,
        9034
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "9147": {
      "fn": "ERC721._safeMint",
      "offset": [
        8958,
        9112
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xC85"
    },
    "9150": {
      "branch": 151,
      "fn": "ERC721._safeMint",
      "offset": [
        8958,
        9112
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "9151": {
      "fn": "ERC721._safeMint",
      "offset": [
        8958,
        9112
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "9153": {
      "fn": "ERC721._safeMint",
      "offset": [
        8958,
        9112
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "9154": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9158": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9160": {
      "op": "SHL"
    },
    "9161": {
      "fn": "ERC721._safeMint",
      "offset": [
        8958,
        9112
      ],
      "op": "DUP2",
      "path": "6"
    },
    "9162": {
      "fn": "ERC721._safeMint",
      "offset": [
        8958,
        9112
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "9163": {
      "fn": "ERC721._safeMint",
      "offset": [
        8958,
        9112
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "9165": {
      "fn": "ERC721._safeMint",
      "offset": [
        8958,
        9112
      ],
      "op": "ADD",
      "path": "6"
    },
    "9166": {
      "fn": "ERC721._safeMint",
      "offset": [
        8958,
        9112
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xB50"
    },
    "9169": {
      "fn": "ERC721._safeMint",
      "offset": [
        8958,
        9112
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "9170": {
      "fn": "ERC721._safeMint",
      "offset": [
        8958,
        9112
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x36A2"
    },
    "9173": {
      "fn": "ERC721._safeMint",
      "jump": "i",
      "offset": [
        8958,
        9112
      ],
      "op": "JUMP",
      "path": "6"
    },
    "9174": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2664,
        3253
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "9175": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9177": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9179": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9181": {
      "op": "SHL"
    },
    "9182": {
      "op": "SUB"
    },
    "9183": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2870,
        2888
      ],
      "op": "DUP4",
      "path": "7"
    },
    "9184": {
      "branch": 156,
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2870,
        2888
      ],
      "op": "AND",
      "path": "7"
    },
    "9185": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2866,
        3053
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2431"
    },
    "9188": {
      "branch": 156,
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2866,
        3053
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "9189": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2905,
        2945
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 104,
      "value": "0x242C"
    },
    "9192": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2937,
        2944
      ],
      "op": "DUP2",
      "path": "7"
    },
    "9193": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4080,
        4090
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 105,
      "value": "0x8"
    },
    "9195": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4080,
        4097
      ],
      "op": "DUP1",
      "path": "7"
    },
    "9196": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4080,
        4097
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "9197": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4053,
        4077
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "9199": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4053,
        4077
      ],
      "op": "DUP4",
      "path": "7"
    },
    "9200": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4053,
        4077
      ],
      "op": "DUP2",
      "path": "7"
    },
    "9201": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4053,
        4077
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "9202": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4053,
        4068
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x9"
    },
    "9204": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4053,
        4077
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "9206": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4053,
        4077
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "9207": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4053,
        4077
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "9209": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4053,
        4077
      ],
      "op": "DUP2",
      "path": "7"
    },
    "9210": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4053,
        4077
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "9211": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4053,
        4097
      ],
      "op": "DUP3",
      "path": "7"
    },
    "9212": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4053,
        4097
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "9213": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4053,
        4097
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "9214": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4108,
        4132
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 106,
      "value": "0x1"
    },
    "9216": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4108,
        4132
      ],
      "op": "DUP3",
      "path": "7"
    },
    "9217": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4108,
        4132
      ],
      "op": "ADD",
      "path": "7"
    },
    "9218": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4108,
        4132
      ],
      "op": "DUP4",
      "path": "7"
    },
    "9219": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4108,
        4132
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "9220": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4108,
        4132
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "9221": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4108,
        4132
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "9222": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4108,
        4132
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "9223": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4108,
        4132
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "9224": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4108,
        4132
      ],
      "op": "PUSH32",
      "path": "7",
      "value": "0xF3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE3"
    },
    "9257": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4108,
        4132
      ],
      "op": "ADD",
      "path": "7"
    },
    "9258": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4108,
        4132
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "9259": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3976,
        4140
      ],
      "op": "JUMP",
      "path": "7"
    },
    "9260": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2905,
        2945
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "9261": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2866,
        3053
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2454"
    },
    "9264": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2866,
        3053
      ],
      "op": "JUMP",
      "path": "7"
    },
    "9265": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2866,
        3053
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "9266": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2975,
        2977
      ],
      "op": "DUP2",
      "path": "7"
    },
    "9267": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9269": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9271": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9273": {
      "op": "SHL"
    },
    "9274": {
      "op": "SUB"
    },
    "9275": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2967,
        2977
      ],
      "op": "AND",
      "path": "7"
    },
    "9276": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2967,
        2971
      ],
      "op": "DUP4",
      "path": "7"
    },
    "9277": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9279": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9281": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9283": {
      "op": "SHL"
    },
    "9284": {
      "op": "SUB"
    },
    "9285": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2967,
        2977
      ],
      "op": "AND",
      "path": "7"
    },
    "9286": {
      "branch": 157,
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2967,
        2977
      ],
      "op": "EQ",
      "path": "7"
    },
    "9287": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2963,
        3053
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2454"
    },
    "9290": {
      "branch": 157,
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2963,
        3053
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "9291": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2994,
        3041
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 107,
      "value": "0x2454"
    },
    "9294": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3027,
        3031
      ],
      "op": "DUP4",
      "path": "7"
    },
    "9295": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3033,
        3040
      ],
      "op": "DUP3",
      "path": "7"
    },
    "9296": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2994,
        3026
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x26DD"
    },
    "9299": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "jump": "i",
      "offset": [
        2994,
        3041
      ],
      "op": "JUMP",
      "path": "7"
    },
    "9300": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2994,
        3041
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "9301": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9303": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9305": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9307": {
      "op": "SHL"
    },
    "9308": {
      "op": "SUB"
    },
    "9309": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3067,
        3083
      ],
      "op": "DUP3",
      "path": "7"
    },
    "9310": {
      "branch": 158,
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3067,
        3083
      ],
      "op": "AND",
      "path": "7"
    },
    "9311": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3063,
        3246
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x246B"
    },
    "9314": {
      "branch": 158,
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3063,
        3246
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "9315": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3100,
        3145
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 108,
      "value": "0xC85"
    },
    "9318": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3137,
        3144
      ],
      "op": "DUP2",
      "path": "7"
    },
    "9319": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3100,
        3136
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x277A"
    },
    "9322": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "jump": "i",
      "offset": [
        3100,
        3145
      ],
      "op": "JUMP",
      "path": "7"
    },
    "9323": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3063,
        3246
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "9324": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3173,
        3177
      ],
      "op": "DUP3",
      "path": "7"
    },
    "9325": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9327": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9329": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9331": {
      "op": "SHL"
    },
    "9332": {
      "op": "SUB"
    },
    "9333": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3167,
        3177
      ],
      "op": "AND",
      "path": "7"
    },
    "9334": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3167,
        3169
      ],
      "op": "DUP3",
      "path": "7"
    },
    "9335": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9337": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9339": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9341": {
      "op": "SHL"
    },
    "9342": {
      "op": "SUB"
    },
    "9343": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3167,
        3177
      ],
      "op": "AND",
      "path": "7"
    },
    "9344": {
      "branch": 159,
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3167,
        3177
      ],
      "op": "EQ",
      "path": "7"
    },
    "9345": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3163,
        3246
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xC85"
    },
    "9348": {
      "branch": 159,
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3163,
        3246
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "9349": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3194,
        3234
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 109,
      "value": "0xC85"
    },
    "9352": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3222,
        3224
      ],
      "op": "DUP3",
      "path": "7"
    },
    "9353": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3226,
        3233
      ],
      "op": "DUP3",
      "path": "7"
    },
    "9354": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3194,
        3221
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2829"
    },
    "9357": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "jump": "i",
      "offset": [
        3194,
        3234
      ],
      "op": "JUMP",
      "path": "7"
    },
    "9358": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12199,
        13002
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "9359": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12354,
        12358
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "9361": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9363": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9365": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9367": {
      "op": "SHL"
    },
    "9368": {
      "op": "SUB"
    },
    "9369": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12375,
        12388
      ],
      "op": "DUP5",
      "path": "6"
    },
    "9370": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12375,
        12388
      ],
      "op": "AND",
      "path": "6"
    },
    "9371": {
      "op": "EXTCODESIZE"
    },
    "9372": {
      "op": "ISZERO"
    },
    "9373": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12371,
        12995
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2584"
    },
    "9376": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12371,
        12995
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "9377": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "9379": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "9380": {
      "op": "PUSH4",
      "value": "0xA85BD01"
    },
    "9385": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "9387": {
      "op": "SHL"
    },
    "9388": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "DUP2",
      "path": "6"
    },
    "9389": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "9390": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9392": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9394": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9396": {
      "op": "SHL"
    },
    "9397": {
      "op": "SUB"
    },
    "9398": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12447
      ],
      "op": "DUP6",
      "path": "6"
    },
    "9399": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12447
      ],
      "op": "AND",
      "path": "6"
    },
    "9400": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12447
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "9401": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12447
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x150B7A02"
    },
    "9406": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12447
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "9407": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x24D2"
    },
    "9410": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "9411": {
      "fn": "Context._msgSender",
      "offset": [
        679,
        689
      ],
      "op": "CALLER",
      "path": "3"
    },
    "9412": {
      "fn": "Context._msgSender",
      "offset": [
        679,
        689
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9413": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12462,
        12466
      ],
      "op": "DUP10",
      "path": "6"
    },
    "9414": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12462,
        12466
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "9415": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12468,
        12475
      ],
      "op": "DUP9",
      "path": "6"
    },
    "9416": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12468,
        12475
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "9417": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12477,
        12482
      ],
      "op": "DUP9",
      "path": "6"
    },
    "9418": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12477,
        12482
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "9419": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "9421": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "ADD",
      "path": "6"
    },
    "9422": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x36F4"
    },
    "9425": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "i",
      "offset": [
        12411,
        12483
      ],
      "op": "JUMP",
      "path": "6"
    },
    "9426": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "9427": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "9429": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "9431": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "9432": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "DUP1",
      "path": "6"
    },
    "9433": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "DUP4",
      "path": "6"
    },
    "9434": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "SUB",
      "path": "6"
    },
    "9435": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "DUP2",
      "path": "6"
    },
    "9436": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "9438": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "DUP8",
      "path": "6"
    },
    "9439": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "GAS",
      "path": "6"
    },
    "9440": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "CALL",
      "path": "6"
    },
    "9441": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "9442": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "POP",
      "path": "6"
    },
    "9443": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "POP",
      "path": "6"
    },
    "9444": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "POP",
      "path": "6"
    },
    "9445": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "DUP1",
      "path": "6"
    },
    "9446": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "9447": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x250D"
    },
    "9450": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "9451": {
      "op": "POP"
    },
    "9452": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "9454": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "DUP1",
      "path": "6"
    },
    "9455": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "9456": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "9458": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "9459": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "9460": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "DUP2",
      "path": "6"
    },
    "9461": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "ADD",
      "path": "6"
    },
    "9462": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "9464": {
      "op": "NOT"
    },
    "9465": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "AND",
      "path": "6"
    },
    "9466": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "DUP3",
      "path": "6"
    },
    "9467": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "ADD",
      "path": "6"
    },
    "9468": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "9469": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "9470": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "9471": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x250A"
    },
    "9474": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "9475": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "DUP2",
      "path": "6"
    },
    "9476": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "ADD",
      "path": "6"
    },
    "9477": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "9478": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3731"
    },
    "9481": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "i",
      "offset": [
        12411,
        12483
      ],
      "op": "JUMP",
      "path": "6"
    },
    "9482": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "9483": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "9485": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12411,
        12483
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "9486": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x256A"
    },
    "9489": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "9490": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "9491": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "DUP1",
      "path": "6"
    },
    "9492": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "DUP1",
      "path": "6"
    },
    "9493": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "9494": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x253B"
    },
    "9497": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "9498": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "9500": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "9501": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "9502": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "POP",
      "path": "6"
    },
    "9503": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1F"
    },
    "9505": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "NOT",
      "path": "6"
    },
    "9506": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x3F"
    },
    "9508": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "9509": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "ADD",
      "path": "6"
    },
    "9510": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "AND",
      "path": "6"
    },
    "9511": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "DUP3",
      "path": "6"
    },
    "9512": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "ADD",
      "path": "6"
    },
    "9513": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "9515": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "9516": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "9517": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "DUP3",
      "path": "6"
    },
    "9518": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "9519": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "9520": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "9522": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "9524": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "DUP5",
      "path": "6"
    },
    "9525": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "ADD",
      "path": "6"
    },
    "9526": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "RETURNDATACOPY",
      "path": "6"
    },
    "9527": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2540"
    },
    "9530": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "JUMP",
      "path": "6"
    },
    "9531": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "9532": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x60"
    },
    "9534": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "9535": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "POP",
      "path": "6"
    },
    "9536": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "9537": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "POP",
      "path": "6"
    },
    "9538": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12657,
        12663
      ],
      "op": "DUP1",
      "path": "6"
    },
    "9539": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12657,
        12670
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "9540": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12674,
        12675
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "9542": {
      "branch": 152,
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12657,
        12675
      ],
      "op": "SUB",
      "path": "6"
    },
    "9543": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12653,
        12925
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2562"
    },
    "9546": {
      "branch": 152,
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12653,
        12925
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "9547": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12700,
        12760
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 110,
      "value": "0x40"
    },
    "9549": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12700,
        12760
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "9550": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9554": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9556": {
      "op": "SHL"
    },
    "9557": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12700,
        12760
      ],
      "op": "DUP2",
      "path": "6"
    },
    "9558": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12700,
        12760
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "9559": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12700,
        12760
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "9561": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12700,
        12760
      ],
      "op": "ADD",
      "path": "6"
    },
    "9562": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12700,
        12760
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xB50"
    },
    "9565": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12700,
        12760
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "9566": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12700,
        12760
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x36A2"
    },
    "9569": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "i",
      "offset": [
        12700,
        12760
      ],
      "op": "JUMP",
      "path": "6"
    },
    "9570": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12653,
        12925
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "9571": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12875,
        12881
      ],
      "op": "DUP1",
      "path": "6"
    },
    "9572": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12869,
        12882
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "9573": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12860,
        12866
      ],
      "op": "DUP2",
      "path": "6"
    },
    "9574": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12856,
        12858
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "9576": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12852,
        12867
      ],
      "op": "ADD",
      "path": "6"
    },
    "9577": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12845,
        12883
      ],
      "op": "REVERT",
      "path": "6"
    },
    "9578": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12407,
        12940
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "9579": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9581": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9583": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9585": {
      "op": "SHL"
    },
    "9586": {
      "op": "SUB"
    },
    "9587": {
      "op": "NOT"
    },
    "9588": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12534,
        12589
      ],
      "op": "AND",
      "path": "6",
      "statement": 111
    },
    "9589": {
      "op": "PUSH4",
      "value": "0xA85BD01"
    },
    "9594": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "9596": {
      "op": "SHL"
    },
    "9597": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12534,
        12589
      ],
      "op": "EQ",
      "path": "6"
    },
    "9598": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12534,
        12589
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "9599": {
      "op": "POP"
    },
    "9600": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12527,
        12589
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1A95"
    },
    "9603": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12527,
        12589
      ],
      "op": "JUMP",
      "path": "6"
    },
    "9604": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12371,
        12995
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "9605": {
      "op": "POP"
    },
    "9606": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12979,
        12983
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 112,
      "value": "0x1"
    },
    "9608": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12199,
        13002
      ],
      "op": "SWAP5",
      "path": "6"
    },
    "9609": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12199,
        13002
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "9610": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12199,
        13002
      ],
      "op": "POP",
      "path": "6"
    },
    "9611": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12199,
        13002
      ],
      "op": "POP",
      "path": "6"
    },
    "9612": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12199,
        13002
      ],
      "op": "POP",
      "path": "6"
    },
    "9613": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12199,
        13002
      ],
      "op": "POP",
      "path": "6"
    },
    "9614": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "o",
      "offset": [
        12199,
        13002
      ],
      "op": "JUMP",
      "path": "6"
    },
    "9615": {
      "fn": "ERC721._mint",
      "offset": [
        9456,
        9838
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "9616": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9618": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9620": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9622": {
      "op": "SHL"
    },
    "9623": {
      "op": "SUB"
    },
    "9624": {
      "fn": "ERC721._mint",
      "offset": [
        9536,
        9552
      ],
      "op": "DUP3",
      "path": "6",
      "statement": 113
    },
    "9625": {
      "branch": 153,
      "fn": "ERC721._mint",
      "offset": [
        9536,
        9552
      ],
      "op": "AND",
      "path": "6"
    },
    "9626": {
      "fn": "ERC721._mint",
      "offset": [
        9528,
        9589
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x25E5"
    },
    "9629": {
      "branch": 153,
      "fn": "ERC721._mint",
      "offset": [
        9528,
        9589
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "9630": {
      "fn": "ERC721._mint",
      "offset": [
        9528,
        9589
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "9632": {
      "fn": "ERC721._mint",
      "offset": [
        9528,
        9589
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "9633": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9637": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9639": {
      "op": "SHL"
    },
    "9640": {
      "fn": "ERC721._mint",
      "offset": [
        9528,
        9589
      ],
      "op": "DUP2",
      "path": "6"
    },
    "9641": {
      "fn": "ERC721._mint",
      "offset": [
        9528,
        9589
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "9642": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9644": {
      "fn": "ERC721._mint",
      "offset": [
        9528,
        9589
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "9646": {
      "fn": "ERC721._mint",
      "offset": [
        9528,
        9589
      ],
      "op": "DUP3",
      "path": "6"
    },
    "9647": {
      "fn": "ERC721._mint",
      "offset": [
        9528,
        9589
      ],
      "op": "ADD",
      "path": "6"
    },
    "9648": {
      "op": "DUP2"
    },
    "9649": {
      "op": "SWAP1"
    },
    "9650": {
      "op": "MSTORE"
    },
    "9651": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9653": {
      "op": "DUP3"
    },
    "9654": {
      "op": "ADD"
    },
    "9655": {
      "op": "MSTORE"
    },
    "9656": {
      "op": "PUSH32",
      "value": "0x4552433732313A206D696E7420746F20746865207A65726F2061646472657373"
    },
    "9689": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9691": {
      "op": "DUP3"
    },
    "9692": {
      "op": "ADD"
    },
    "9693": {
      "op": "MSTORE"
    },
    "9694": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9696": {
      "op": "ADD"
    },
    "9697": {
      "fn": "ERC721._mint",
      "offset": [
        9528,
        9589
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xB50"
    },
    "9700": {
      "op": "JUMP"
    },
    "9701": {
      "fn": "ERC721._mint",
      "offset": [
        9528,
        9589
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "9702": {
      "fn": "ERC721._exists",
      "offset": [
        7543,
        7547
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "9704": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "DUP2",
      "path": "6"
    },
    "9705": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "DUP2",
      "path": "6"
    },
    "9706": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "9707": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7574
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2"
    },
    "9709": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "9711": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "9712": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "9714": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "9715": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "9716": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "9717": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9719": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9721": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9723": {
      "op": "SHL"
    },
    "9724": {
      "op": "SUB"
    },
    "9725": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7583
      ],
      "op": "AND",
      "path": "6"
    },
    "9726": {
      "fn": "ERC721._exists",
      "offset": [
        7567,
        7597
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "9727": {
      "fn": "ERC721._mint",
      "offset": [
        9600,
        9658
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 114,
      "value": "0x264A"
    },
    "9730": {
      "fn": "ERC721._mint",
      "offset": [
        9600,
        9658
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "9731": {
      "fn": "ERC721._mint",
      "offset": [
        9600,
        9658
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "9733": {
      "fn": "ERC721._mint",
      "offset": [
        9600,
        9658
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "9734": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9738": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9740": {
      "op": "SHL"
    },
    "9741": {
      "fn": "ERC721._mint",
      "offset": [
        9600,
        9658
      ],
      "op": "DUP2",
      "path": "6"
    },
    "9742": {
      "fn": "ERC721._mint",
      "offset": [
        9600,
        9658
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "9743": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9745": {
      "fn": "ERC721._mint",
      "offset": [
        9600,
        9658
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "9747": {
      "fn": "ERC721._mint",
      "offset": [
        9600,
        9658
      ],
      "op": "DUP3",
      "path": "6"
    },
    "9748": {
      "fn": "ERC721._mint",
      "offset": [
        9600,
        9658
      ],
      "op": "ADD",
      "path": "6"
    },
    "9749": {
      "op": "MSTORE"
    },
    "9750": {
      "op": "PUSH1",
      "value": "0x1C"
    },
    "9752": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9754": {
      "op": "DUP3"
    },
    "9755": {
      "op": "ADD"
    },
    "9756": {
      "op": "MSTORE"
    },
    "9757": {
      "op": "PUSH32",
      "value": "0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000"
    },
    "9790": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9792": {
      "op": "DUP3"
    },
    "9793": {
      "op": "ADD"
    },
    "9794": {
      "op": "MSTORE"
    },
    "9795": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9797": {
      "op": "ADD"
    },
    "9798": {
      "fn": "ERC721._mint",
      "offset": [
        9600,
        9658
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xB50"
    },
    "9801": {
      "op": "JUMP"
    },
    "9802": {
      "fn": "ERC721._mint",
      "offset": [
        9600,
        9658
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "9803": {
      "fn": "ERC721._mint",
      "offset": [
        9671,
        9716
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 115,
      "value": "0x2656"
    },
    "9806": {
      "fn": "ERC721._mint",
      "offset": [
        9700,
        9701
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "9808": {
      "fn": "ERC721._mint",
      "offset": [
        9704,
        9706
      ],
      "op": "DUP4",
      "path": "6"
    },
    "9809": {
      "fn": "ERC721._mint",
      "offset": [
        9708,
        9715
      ],
      "op": "DUP4",
      "path": "6"
    },
    "9810": {
      "fn": "ERC721._mint",
      "offset": [
        9671,
        9691
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x23D6"
    },
    "9813": {
      "fn": "ERC721._mint",
      "jump": "i",
      "offset": [
        9671,
        9716
      ],
      "op": "JUMP",
      "path": "6"
    },
    "9814": {
      "fn": "ERC721._mint",
      "offset": [
        9671,
        9716
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "9815": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9817": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9819": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9821": {
      "op": "SHL"
    },
    "9822": {
      "op": "SUB"
    },
    "9823": {
      "fn": "ERC721._mint",
      "offset": [
        9729,
        9742
      ],
      "op": "DUP3",
      "path": "6",
      "statement": 116
    },
    "9824": {
      "fn": "ERC721._mint",
      "offset": [
        9729,
        9742
      ],
      "op": "AND",
      "path": "6"
    },
    "9825": {
      "fn": "ERC721._mint",
      "offset": [
        9729,
        9742
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "9827": {
      "fn": "ERC721._mint",
      "offset": [
        9729,
        9742
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "9828": {
      "fn": "ERC721._mint",
      "offset": [
        9729,
        9742
      ],
      "op": "DUP2",
      "path": "6"
    },
    "9829": {
      "fn": "ERC721._mint",
      "offset": [
        9729,
        9742
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "9830": {
      "fn": "ERC721._mint",
      "offset": [
        9729,
        9738
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x3"
    },
    "9832": {
      "fn": "ERC721._mint",
      "offset": [
        9729,
        9742
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "9834": {
      "fn": "ERC721._mint",
      "offset": [
        9729,
        9742
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "9835": {
      "fn": "ERC721._mint",
      "offset": [
        9729,
        9742
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "9837": {
      "fn": "ERC721._mint",
      "offset": [
        9729,
        9742
      ],
      "op": "DUP2",
      "path": "6"
    },
    "9838": {
      "fn": "ERC721._mint",
      "offset": [
        9729,
        9742
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "9839": {
      "fn": "ERC721._mint",
      "offset": [
        9729,
        9747
      ],
      "op": "DUP1",
      "path": "6"
    },
    "9840": {
      "fn": "ERC721._mint",
      "offset": [
        9729,
        9747
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "9841": {
      "fn": "ERC721._mint",
      "offset": [
        9746,
        9747
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "9843": {
      "fn": "ERC721._mint",
      "offset": [
        9746,
        9747
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "9844": {
      "fn": "ERC721._mint",
      "offset": [
        9729,
        9742
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "9845": {
      "fn": "ERC721._mint",
      "offset": [
        9729,
        9747
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x267F"
    },
    "9848": {
      "fn": "ERC721._mint",
      "offset": [
        9729,
        9747
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "9849": {
      "fn": "ERC721._mint",
      "offset": [
        9746,
        9747
      ],
      "op": "DUP5",
      "path": "6"
    },
    "9850": {
      "fn": "ERC721._mint",
      "offset": [
        9746,
        9747
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "9851": {
      "fn": "ERC721._mint",
      "offset": [
        9729,
        9747
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x3412"
    },
    "9854": {
      "fn": "ERC721._mint",
      "jump": "i",
      "offset": [
        9729,
        9747
      ],
      "op": "JUMP",
      "path": "6"
    },
    "9855": {
      "fn": "ERC721._mint",
      "offset": [
        9729,
        9747
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "9856": {
      "fn": "ERC721._mint",
      "offset": [
        9729,
        9747
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "9857": {
      "fn": "ERC721._mint",
      "offset": [
        9729,
        9747
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "9858": {
      "fn": "ERC721._mint",
      "offset": [
        9729,
        9747
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "9859": {
      "op": "POP"
    },
    "9860": {
      "op": "POP"
    },
    "9861": {
      "fn": "ERC721._mint",
      "offset": [
        9758,
        9774
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 117,
      "value": "0x0"
    },
    "9863": {
      "fn": "ERC721._mint",
      "offset": [
        9758,
        9774
      ],
      "op": "DUP2",
      "path": "6"
    },
    "9864": {
      "fn": "ERC721._mint",
      "offset": [
        9758,
        9774
      ],
      "op": "DUP2",
      "path": "6"
    },
    "9865": {
      "fn": "ERC721._mint",
      "offset": [
        9758,
        9774
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "9866": {
      "fn": "ERC721._mint",
      "offset": [
        9758,
        9765
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2"
    },
    "9868": {
      "fn": "ERC721._mint",
      "offset": [
        9758,
        9774
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "9870": {
      "fn": "ERC721._mint",
      "offset": [
        9758,
        9774
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "9871": {
      "fn": "ERC721._mint",
      "offset": [
        9758,
        9774
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "9873": {
      "fn": "ERC721._mint",
      "offset": [
        9758,
        9774
      ],
      "op": "DUP1",
      "path": "6"
    },
    "9874": {
      "fn": "ERC721._mint",
      "offset": [
        9758,
        9774
      ],
      "op": "DUP3",
      "path": "6"
    },
    "9875": {
      "fn": "ERC721._mint",
      "offset": [
        9758,
        9774
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "9876": {
      "fn": "ERC721._mint",
      "offset": [
        9758,
        9779
      ],
      "op": "DUP1",
      "path": "6"
    },
    "9877": {
      "fn": "ERC721._mint",
      "offset": [
        9758,
        9779
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "9878": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9880": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9882": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9884": {
      "op": "SHL"
    },
    "9885": {
      "op": "SUB"
    },
    "9886": {
      "op": "NOT"
    },
    "9887": {
      "fn": "ERC721._mint",
      "offset": [
        9758,
        9779
      ],
      "op": "AND",
      "path": "6"
    },
    "9888": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9890": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9892": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9894": {
      "op": "SHL"
    },
    "9895": {
      "op": "SUB"
    },
    "9896": {
      "fn": "ERC721._mint",
      "offset": [
        9758,
        9779
      ],
      "op": "DUP7",
      "path": "6"
    },
    "9897": {
      "fn": "ERC721._mint",
      "offset": [
        9758,
        9779
      ],
      "op": "AND",
      "path": "6"
    },
    "9898": {
      "fn": "ERC721._mint",
      "offset": [
        9758,
        9779
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "9899": {
      "fn": "ERC721._mint",
      "offset": [
        9758,
        9779
      ],
      "op": "DUP2",
      "path": "6"
    },
    "9900": {
      "fn": "ERC721._mint",
      "offset": [
        9758,
        9779
      ],
      "op": "OR",
      "path": "6"
    },
    "9901": {
      "fn": "ERC721._mint",
      "offset": [
        9758,
        9779
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "9902": {
      "fn": "ERC721._mint",
      "offset": [
        9758,
        9779
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "9903": {
      "fn": "ERC721._mint",
      "offset": [
        9758,
        9779
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "9904": {
      "fn": "ERC721._mint",
      "offset": [
        9797,
        9830
      ],
      "op": "SWAP1",
      "path": "6",
      "statement": 118
    },
    "9905": {
      "fn": "ERC721._mint",
      "offset": [
        9797,
        9830
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "9906": {
      "fn": "ERC721._mint",
      "offset": [
        9758,
        9774
      ],
      "op": "DUP4",
      "path": "6"
    },
    "9907": {
      "fn": "ERC721._mint",
      "offset": [
        9758,
        9774
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "9908": {
      "fn": "ERC721._mint",
      "offset": [
        9758,
        9774
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "9909": {
      "fn": "ERC721._mint",
      "offset": [
        9797,
        9830
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "9942": {
      "fn": "ERC721._mint",
      "offset": [
        9797,
        9830
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "9943": {
      "fn": "ERC721._mint",
      "offset": [
        9758,
        9774
      ],
      "op": "DUP3",
      "path": "6"
    },
    "9944": {
      "fn": "ERC721._mint",
      "offset": [
        9758,
        9774
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "9945": {
      "fn": "ERC721._mint",
      "offset": [
        9797,
        9830
      ],
      "op": "LOG4",
      "path": "6"
    },
    "9946": {
      "fn": "ERC721._mint",
      "offset": [
        9456,
        9838
      ],
      "op": "POP",
      "path": "6"
    },
    "9947": {
      "fn": "ERC721._mint",
      "offset": [
        9456,
        9838
      ],
      "op": "POP",
      "path": "6"
    },
    "9948": {
      "fn": "ERC721._mint",
      "jump": "o",
      "offset": [
        9456,
        9838
      ],
      "op": "JUMP",
      "path": "6"
    },
    "9949": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4767,
        5755
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "9950": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5033,
        5055
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "9952": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5083,
        5084
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "9954": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5058,
        5080
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x26EA"
    },
    "9957": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5075,
        5079
      ],
      "op": "DUP5",
      "path": "7"
    },
    "9958": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5058,
        5074
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x11F2"
    },
    "9961": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "jump": "i",
      "offset": [
        5058,
        5080
      ],
      "op": "JUMP",
      "path": "7"
    },
    "9962": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5058,
        5080
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "9963": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5058,
        5084
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x26F4"
    },
    "9966": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5058,
        5084
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "9967": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5058,
        5084
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "9968": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5058,
        5084
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3383"
    },
    "9971": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "jump": "i",
      "offset": [
        5058,
        5084
      ],
      "op": "JUMP",
      "path": "7"
    },
    "9972": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5058,
        5084
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "9973": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5095,
        5113
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "9975": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5116,
        5142
      ],
      "op": "DUP4",
      "path": "7"
    },
    "9976": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5116,
        5142
      ],
      "op": "DUP2",
      "path": "7"
    },
    "9977": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5116,
        5142
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "9978": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5116,
        5133
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x7"
    },
    "9980": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5116,
        5142
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "9982": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5116,
        5142
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "9983": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5116,
        5142
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "9985": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5116,
        5142
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "9986": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5116,
        5142
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "9987": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5116,
        5142
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "9988": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5033,
        5084
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "9989": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5033,
        5084
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "9990": {
      "op": "POP"
    },
    "9991": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5249,
        5277
      ],
      "op": "DUP1",
      "path": "7"
    },
    "9992": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5249,
        5277
      ],
      "op": "DUP3",
      "path": "7"
    },
    "9993": {
      "branch": 160,
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5249,
        5277
      ],
      "op": "EQ",
      "path": "7"
    },
    "9994": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5245,
        5573
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2747"
    },
    "9997": {
      "branch": 160,
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5245,
        5573
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "9998": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10000": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10002": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10004": {
      "op": "SHL"
    },
    "10005": {
      "op": "SUB"
    },
    "10006": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5316,
        5334
      ],
      "op": "DUP5",
      "path": "7"
    },
    "10007": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5316,
        5334
      ],
      "op": "AND",
      "path": "7"
    },
    "10008": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5294,
        5313
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "10010": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5316,
        5334
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "10011": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5316,
        5334
      ],
      "op": "DUP2",
      "path": "7"
    },
    "10012": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5316,
        5334
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "10013": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5316,
        5328
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x6"
    },
    "10015": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5316,
        5334
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "10017": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5316,
        5334
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "10018": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5316,
        5334
      ],
      "op": "DUP2",
      "path": "7"
    },
    "10019": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5316,
        5334
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "10020": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5316,
        5334
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "10022": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5316,
        5334
      ],
      "op": "DUP1",
      "path": "7"
    },
    "10023": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5316,
        5334
      ],
      "op": "DUP4",
      "path": "7"
    },
    "10024": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5316,
        5334
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "10025": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5316,
        5350
      ],
      "op": "DUP6",
      "path": "7"
    },
    "10026": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5316,
        5350
      ],
      "op": "DUP5",
      "path": "7"
    },
    "10027": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5316,
        5350
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "10028": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5316,
        5350
      ],
      "op": "DUP3",
      "path": "7"
    },
    "10029": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5316,
        5350
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "10030": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5316,
        5350
      ],
      "op": "DUP1",
      "path": "7"
    },
    "10031": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5316,
        5350
      ],
      "op": "DUP4",
      "path": "7"
    },
    "10032": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5316,
        5350
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "10033": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5316,
        5350
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "10034": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5367,
        5397
      ],
      "op": "DUP5",
      "path": "7",
      "statement": 119
    },
    "10035": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5367,
        5397
      ],
      "op": "DUP5",
      "path": "7"
    },
    "10036": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5367,
        5397
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "10037": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5367,
        5397
      ],
      "op": "DUP2",
      "path": "7"
    },
    "10038": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5367,
        5397
      ],
      "op": "DUP5",
      "path": "7"
    },
    "10039": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5367,
        5397
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "10040": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5367,
        5411
      ],
      "op": "DUP2",
      "path": "7"
    },
    "10041": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5367,
        5411
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "10042": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5367,
        5411
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "10043": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5484,
        5514
      ],
      "op": "DUP4",
      "path": "7",
      "statement": 120
    },
    "10044": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5484,
        5514
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "10045": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5484,
        5501
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x7"
    },
    "10047": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5484,
        5514
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "10048": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5484,
        5514
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "10049": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5484,
        5514
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "10050": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5484,
        5514
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "10051": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5484,
        5514
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "10052": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5484,
        5527
      ],
      "op": "DUP2",
      "path": "7"
    },
    "10053": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5484,
        5527
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "10054": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5484,
        5527
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "10055": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5245,
        5573
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "10056": {
      "op": "POP"
    },
    "10057": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5669,
        5695
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 121,
      "value": "0x0"
    },
    "10059": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5669,
        5695
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "10060": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5669,
        5695
      ],
      "op": "DUP3",
      "path": "7"
    },
    "10061": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5669,
        5695
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "10062": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5669,
        5686
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x7"
    },
    "10064": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5669,
        5695
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "10066": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5669,
        5695
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "10067": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5669,
        5695
      ],
      "op": "DUP2",
      "path": "7"
    },
    "10068": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5669,
        5695
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "10069": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5669,
        5695
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "10071": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5669,
        5695
      ],
      "op": "DUP1",
      "path": "7"
    },
    "10072": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5669,
        5695
      ],
      "op": "DUP5",
      "path": "7"
    },
    "10073": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5669,
        5695
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "10074": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5662,
        5695
      ],
      "op": "DUP5",
      "path": "7"
    },
    "10075": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5662,
        5695
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "10076": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5662,
        5695
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "10077": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10079": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10081": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10083": {
      "op": "SHL"
    },
    "10084": {
      "op": "SUB"
    },
    "10085": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5713,
        5731
      ],
      "op": "SWAP1",
      "path": "7",
      "statement": 122
    },
    "10086": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5713,
        5731
      ],
      "op": "SWAP5",
      "path": "7"
    },
    "10087": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5713,
        5731
      ],
      "op": "AND",
      "path": "7"
    },
    "10088": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5713,
        5731
      ],
      "op": "DUP4",
      "path": "7"
    },
    "10089": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5713,
        5731
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "10090": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5713,
        5725
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x6"
    },
    "10092": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5713,
        5731
      ],
      "op": "DUP2",
      "path": "7"
    },
    "10093": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5713,
        5731
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "10094": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5713,
        5731
      ],
      "op": "DUP4",
      "path": "7"
    },
    "10095": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5713,
        5731
      ],
      "op": "DUP4",
      "path": "7"
    },
    "10096": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5713,
        5731
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "10097": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5713,
        5747
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "10098": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5713,
        5747
      ],
      "op": "DUP4",
      "path": "7"
    },
    "10099": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5713,
        5747
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "10100": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5713,
        5747
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "10101": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5713,
        5747
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "10102": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5713,
        5747
      ],
      "op": "DUP2",
      "path": "7"
    },
    "10103": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5713,
        5747
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "10104": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5706,
        5747
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "10105": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "jump": "o",
      "offset": [
        4767,
        5755
      ],
      "op": "JUMP",
      "path": "7"
    },
    "10106": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6050,
        7129
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "10107": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6328,
        6338
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x8"
    },
    "10109": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6328,
        6345
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "10110": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6303,
        6325
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "10112": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6303,
        6325
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "10113": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6328,
        6349
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x278C"
    },
    "10116": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6328,
        6349
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "10117": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6348,
        6349
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "10119": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6348,
        6349
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "10120": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6328,
        6349
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3383"
    },
    "10123": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "jump": "i",
      "offset": [
        6328,
        6349
      ],
      "op": "JUMP",
      "path": "7"
    },
    "10124": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6328,
        6349
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "10125": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6360,
        6378
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "10127": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6381,
        6405
      ],
      "op": "DUP4",
      "path": "7"
    },
    "10128": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6381,
        6405
      ],
      "op": "DUP2",
      "path": "7"
    },
    "10129": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6381,
        6405
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "10130": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6381,
        6396
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x9"
    },
    "10132": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6381,
        6405
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "10134": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6381,
        6405
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "10135": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6381,
        6405
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "10137": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6381,
        6405
      ],
      "op": "DUP2",
      "path": "7"
    },
    "10138": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6381,
        6405
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "10139": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6381,
        6405
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "10140": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6754,
        6764
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x8"
    },
    "10142": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6754,
        6780
      ],
      "op": "DUP1",
      "path": "7"
    },
    "10143": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6754,
        6780
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "10144": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6303,
        6349
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "10145": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6303,
        6349
      ],
      "op": "SWAP5",
      "path": "7"
    },
    "10146": {
      "op": "POP"
    },
    "10147": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6381,
        6405
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "10148": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6381,
        6405
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "10149": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6303,
        6349
      ],
      "op": "DUP5",
      "path": "7"
    },
    "10150": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6303,
        6349
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "10151": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6754,
        6780
      ],
      "op": "DUP2",
      "path": "7"
    },
    "10152": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6754,
        6780
      ],
      "op": "LT",
      "path": "7"
    },
    "10153": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6754,
        6780
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x27B4"
    },
    "10156": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6754,
        6780
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "10157": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6754,
        6780
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x27B4"
    },
    "10160": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6754,
        6780
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x35DD"
    },
    "10163": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "jump": "i",
      "offset": [
        6754,
        6780
      ],
      "op": "JUMP",
      "path": "7"
    },
    "10164": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6754,
        6780
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "10165": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6754,
        6780
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "10166": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6754,
        6780
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "10168": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6754,
        6780
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "10169": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6754,
        6780
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "10171": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6754,
        6780
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "10173": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6754,
        6780
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "10174": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6754,
        6780
      ],
      "op": "ADD",
      "path": "7"
    },
    "10175": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6754,
        6780
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "10176": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6732,
        6780
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "10177": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6732,
        6780
      ],
      "op": "POP",
      "path": "7"
    },
    "10178": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6818,
        6829
      ],
      "op": "DUP1",
      "path": "7",
      "statement": 123
    },
    "10179": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6793,
        6803
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x8"
    },
    "10181": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6804,
        6814
      ],
      "op": "DUP4",
      "path": "7"
    },
    "10182": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6793,
        6815
      ],
      "op": "DUP2",
      "path": "7"
    },
    "10183": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6793,
        6815
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "10184": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6793,
        6815
      ],
      "op": "DUP2",
      "path": "7"
    },
    "10185": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6793,
        6815
      ],
      "op": "LT",
      "path": "7"
    },
    "10186": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6793,
        6815
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x27D5"
    },
    "10189": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6793,
        6815
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "10190": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6793,
        6815
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x27D5"
    },
    "10193": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6793,
        6815
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x35DD"
    },
    "10196": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "jump": "i",
      "offset": [
        6793,
        6815
      ],
      "op": "JUMP",
      "path": "7"
    },
    "10197": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6793,
        6815
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "10198": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6793,
        6815
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "10200": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6793,
        6815
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "10201": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6793,
        6815
      ],
      "op": "DUP3",
      "path": "7"
    },
    "10202": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6793,
        6815
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "10203": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6793,
        6815
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "10205": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6793,
        6815
      ],
      "op": "DUP1",
      "path": "7"
    },
    "10206": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6793,
        6815
      ],
      "op": "DUP4",
      "path": "7"
    },
    "10207": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6793,
        6815
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "10208": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6793,
        6815
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "10209": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6793,
        6815
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "10210": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6793,
        6815
      ],
      "op": "ADD",
      "path": "7"
    },
    "10211": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6793,
        6829
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "10212": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6793,
        6829
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "10213": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6793,
        6829
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "10214": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6793,
        6829
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "10215": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6898,
        6926
      ],
      "op": "DUP3",
      "path": "7",
      "statement": 124
    },
    "10216": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6898,
        6926
      ],
      "op": "DUP2",
      "path": "7"
    },
    "10217": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6898,
        6926
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "10218": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6898,
        6913
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x9"
    },
    "10220": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6898,
        6926
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "10221": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6898,
        6926
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "10222": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6898,
        6926
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "10223": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6898,
        6926
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "10225": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6898,
        6926
      ],
      "op": "DUP1",
      "path": "7"
    },
    "10226": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6898,
        6926
      ],
      "op": "DUP3",
      "path": "7"
    },
    "10227": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6898,
        6926
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "10228": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6898,
        6939
      ],
      "op": "DUP5",
      "path": "7"
    },
    "10229": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6898,
        6939
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "10230": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6898,
        6939
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "10231": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7070,
        7094
      ],
      "op": "DUP6",
      "path": "7",
      "statement": 125
    },
    "10232": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7070,
        7094
      ],
      "op": "DUP3",
      "path": "7"
    },
    "10233": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7070,
        7094
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "10234": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7070,
        7094
      ],
      "op": "DUP2",
      "path": "7"
    },
    "10235": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7070,
        7094
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "10236": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7063,
        7094
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "10237": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7105,
        7115
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 126,
      "value": "0x8"
    },
    "10239": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7105,
        7121
      ],
      "op": "DUP1",
      "path": "7"
    },
    "10240": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7105,
        7121
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "10241": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7105,
        7121
      ],
      "op": "DUP1",
      "path": "7"
    },
    "10242": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7105,
        7121
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x280D"
    },
    "10245": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7105,
        7121
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "10246": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7105,
        7121
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x280D"
    },
    "10249": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7105,
        7121
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x374E"
    },
    "10252": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "jump": "i",
      "offset": [
        7105,
        7121
      ],
      "op": "JUMP",
      "path": "7"
    },
    "10253": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7105,
        7121
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "10254": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7105,
        7121
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "10256": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7105,
        7121
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "10257": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7105,
        7121
      ],
      "op": "SUB",
      "path": "7"
    },
    "10258": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7105,
        7121
      ],
      "op": "DUP2",
      "path": "7"
    },
    "10259": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7105,
        7121
      ],
      "op": "DUP2",
      "path": "7"
    },
    "10260": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7105,
        7121
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "10261": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7105,
        7121
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "10263": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7105,
        7121
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "10264": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7105,
        7121
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "10266": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7105,
        7121
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "10268": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7105,
        7121
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "10269": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7105,
        7121
      ],
      "op": "ADD",
      "path": "7"
    },
    "10270": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7105,
        7121
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "10272": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7105,
        7121
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "10273": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7105,
        7121
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "10274": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7105,
        7121
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "10275": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        7105,
        7121
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "10276": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6121,
        7129
      ],
      "op": "POP",
      "path": "7"
    },
    "10277": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6121,
        7129
      ],
      "op": "POP",
      "path": "7"
    },
    "10278": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6121,
        7129
      ],
      "op": "POP",
      "path": "7"
    },
    "10279": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6050,
        7129
      ],
      "op": "POP",
      "path": "7"
    },
    "10280": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "jump": "o",
      "offset": [
        6050,
        7129
      ],
      "op": "JUMP",
      "path": "7"
    },
    "10281": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3554,
        3775
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "10282": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3639,
        3653
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "10284": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3656,
        3676
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2834"
    },
    "10287": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3673,
        3675
      ],
      "op": "DUP4",
      "path": "7"
    },
    "10288": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3656,
        3672
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x11F2"
    },
    "10291": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "jump": "i",
      "offset": [
        3656,
        3676
      ],
      "op": "JUMP",
      "path": "7"
    },
    "10292": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3656,
        3676
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "10293": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10295": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10297": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10299": {
      "op": "SHL"
    },
    "10300": {
      "op": "SUB"
    },
    "10301": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3687,
        3703
      ],
      "op": "SWAP1",
      "path": "7",
      "statement": 127
    },
    "10302": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3687,
        3703
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "10303": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3687,
        3703
      ],
      "op": "AND",
      "path": "7"
    },
    "10304": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3687,
        3703
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "10306": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3687,
        3703
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "10307": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3687,
        3703
      ],
      "op": "DUP2",
      "path": "7"
    },
    "10308": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3687,
        3703
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "10309": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3687,
        3699
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x6"
    },
    "10311": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3687,
        3703
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "10313": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3687,
        3703
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "10314": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3687,
        3703
      ],
      "op": "DUP2",
      "path": "7"
    },
    "10315": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3687,
        3703
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "10316": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3687,
        3703
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "10318": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3687,
        3703
      ],
      "op": "DUP1",
      "path": "7"
    },
    "10319": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3687,
        3703
      ],
      "op": "DUP4",
      "path": "7"
    },
    "10320": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3687,
        3703
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "10321": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3687,
        3711
      ],
      "op": "DUP7",
      "path": "7"
    },
    "10322": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3687,
        3711
      ],
      "op": "DUP5",
      "path": "7"
    },
    "10323": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3687,
        3711
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "10324": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3687,
        3711
      ],
      "op": "DUP3",
      "path": "7"
    },
    "10325": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3687,
        3711
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "10326": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3687,
        3711
      ],
      "op": "DUP1",
      "path": "7"
    },
    "10327": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3687,
        3711
      ],
      "op": "DUP4",
      "path": "7"
    },
    "10328": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3687,
        3711
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "10329": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3687,
        3721
      ],
      "op": "DUP6",
      "path": "7"
    },
    "10330": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3687,
        3721
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "10331": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3687,
        3721
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "10332": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3732,
        3758
      ],
      "op": "SWAP4",
      "path": "7",
      "statement": 128
    },
    "10333": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3732,
        3758
      ],
      "op": "DUP3",
      "path": "7"
    },
    "10334": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3732,
        3758
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "10335": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3732,
        3749
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x7"
    },
    "10337": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3732,
        3758
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "10338": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3732,
        3758
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "10339": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3732,
        3758
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "10340": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3732,
        3758
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "10341": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3732,
        3758
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "10342": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3732,
        3758
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "10343": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3732,
        3767
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "10344": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3732,
        3767
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "10345": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3732,
        3767
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "10346": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3732,
        3767
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "10347": {
      "op": "POP"
    },
    "10348": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "jump": "o",
      "offset": [
        3554,
        3775
      ],
      "op": "JUMP",
      "path": "7"
    },
    "10349": {
      "op": "JUMPDEST"
    },
    "10350": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10352": {
      "op": "MLOAD"
    },
    "10353": {
      "op": "DUP1"
    },
    "10354": {
      "op": "PUSH2",
      "value": "0x1C0"
    },
    "10357": {
      "op": "ADD"
    },
    "10358": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10360": {
      "op": "MSTORE"
    },
    "10361": {
      "op": "DUP1"
    },
    "10362": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10364": {
      "op": "DUP2"
    },
    "10365": {
      "op": "MSTORE"
    },
    "10366": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10368": {
      "op": "ADD"
    },
    "10369": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10371": {
      "op": "DUP2"
    },
    "10372": {
      "op": "MSTORE"
    },
    "10373": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10375": {
      "op": "ADD"
    },
    "10376": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10378": {
      "op": "DUP2"
    },
    "10379": {
      "op": "MSTORE"
    },
    "10380": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10382": {
      "op": "ADD"
    },
    "10383": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10385": {
      "op": "DUP2"
    },
    "10386": {
      "op": "MSTORE"
    },
    "10387": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10389": {
      "op": "ADD"
    },
    "10390": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10392": {
      "op": "DUP2"
    },
    "10393": {
      "op": "MSTORE"
    },
    "10394": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10396": {
      "op": "ADD"
    },
    "10397": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10399": {
      "op": "DUP2"
    },
    "10400": {
      "op": "MSTORE"
    },
    "10401": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10403": {
      "op": "ADD"
    },
    "10404": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10406": {
      "op": "DUP2"
    },
    "10407": {
      "op": "MSTORE"
    },
    "10408": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10410": {
      "op": "ADD"
    },
    "10411": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10413": {
      "op": "DUP2"
    },
    "10414": {
      "op": "MSTORE"
    },
    "10415": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10417": {
      "op": "ADD"
    },
    "10418": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10420": {
      "op": "DUP2"
    },
    "10421": {
      "op": "MSTORE"
    },
    "10422": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10424": {
      "op": "ADD"
    },
    "10425": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10427": {
      "op": "DUP2"
    },
    "10428": {
      "op": "MSTORE"
    },
    "10429": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10431": {
      "op": "ADD"
    },
    "10432": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10434": {
      "op": "DUP2"
    },
    "10435": {
      "op": "MSTORE"
    },
    "10436": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10438": {
      "op": "ADD"
    },
    "10439": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10441": {
      "op": "DUP2"
    },
    "10442": {
      "op": "MSTORE"
    },
    "10443": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10445": {
      "op": "ADD"
    },
    "10446": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10448": {
      "op": "DUP2"
    },
    "10449": {
      "op": "MSTORE"
    },
    "10450": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10452": {
      "op": "ADD"
    },
    "10453": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10455": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "10457": {
      "op": "DUP2"
    },
    "10458": {
      "op": "GT"
    },
    "10459": {
      "op": "ISZERO"
    },
    "10460": {
      "op": "PUSH2",
      "value": "0x28E7"
    },
    "10463": {
      "op": "JUMPI"
    },
    "10464": {
      "op": "PUSH2",
      "value": "0x28E7"
    },
    "10467": {
      "op": "PUSH2",
      "value": "0x2BFF"
    },
    "10470": {
      "jump": "i",
      "op": "JUMP"
    },
    "10471": {
      "op": "JUMPDEST"
    },
    "10472": {
      "op": "SWAP1"
    },
    "10473": {
      "op": "MSTORE"
    },
    "10474": {
      "op": "SWAP1"
    },
    "10475": {
      "jump": "o",
      "op": "JUMP"
    },
    "10476": {
      "op": "JUMPDEST"
    },
    "10477": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10479": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10481": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10483": {
      "op": "SHL"
    },
    "10484": {
      "op": "SUB"
    },
    "10485": {
      "op": "NOT"
    },
    "10486": {
      "op": "DUP2"
    },
    "10487": {
      "op": "AND"
    },
    "10488": {
      "op": "DUP2"
    },
    "10489": {
      "op": "EQ"
    },
    "10490": {
      "op": "PUSH2",
      "value": "0x10E5"
    },
    "10493": {
      "op": "JUMPI"
    },
    "10494": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10496": {
      "op": "DUP1"
    },
    "10497": {
      "op": "REVERT"
    },
    "10498": {
      "op": "JUMPDEST"
    },
    "10499": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10501": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10503": {
      "op": "DUP3"
    },
    "10504": {
      "op": "DUP5"
    },
    "10505": {
      "op": "SUB"
    },
    "10506": {
      "op": "SLT"
    },
    "10507": {
      "op": "ISZERO"
    },
    "10508": {
      "op": "PUSH2",
      "value": "0x2914"
    },
    "10511": {
      "op": "JUMPI"
    },
    "10512": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10514": {
      "op": "DUP1"
    },
    "10515": {
      "op": "REVERT"
    },
    "10516": {
      "op": "JUMPDEST"
    },
    "10517": {
      "op": "DUP2"
    },
    "10518": {
      "op": "CALLDATALOAD"
    },
    "10519": {
      "op": "PUSH2",
      "value": "0xA42"
    },
    "10522": {
      "op": "DUP2"
    },
    "10523": {
      "op": "PUSH2",
      "value": "0x28EC"
    },
    "10526": {
      "jump": "i",
      "op": "JUMP"
    },
    "10527": {
      "op": "JUMPDEST"
    },
    "10528": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "10533": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10535": {
      "op": "SHL"
    },
    "10536": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10538": {
      "op": "MSTORE"
    },
    "10539": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "10541": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "10543": {
      "op": "MSTORE"
    },
    "10544": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10546": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10548": {
      "op": "REVERT"
    },
    "10549": {
      "op": "JUMPDEST"
    },
    "10550": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10552": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "10561": {
      "op": "DUP1"
    },
    "10562": {
      "op": "DUP5"
    },
    "10563": {
      "op": "GT"
    },
    "10564": {
      "op": "ISZERO"
    },
    "10565": {
      "op": "PUSH2",
      "value": "0x2950"
    },
    "10568": {
      "op": "JUMPI"
    },
    "10569": {
      "op": "PUSH2",
      "value": "0x2950"
    },
    "10572": {
      "op": "PUSH2",
      "value": "0x291F"
    },
    "10575": {
      "jump": "i",
      "op": "JUMP"
    },
    "10576": {
      "op": "JUMPDEST"
    },
    "10577": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10579": {
      "op": "MLOAD"
    },
    "10580": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "10582": {
      "op": "DUP6"
    },
    "10583": {
      "op": "ADD"
    },
    "10584": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "10586": {
      "op": "NOT"
    },
    "10587": {
      "op": "SWAP1"
    },
    "10588": {
      "op": "DUP2"
    },
    "10589": {
      "op": "AND"
    },
    "10590": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "10592": {
      "op": "ADD"
    },
    "10593": {
      "op": "AND"
    },
    "10594": {
      "op": "DUP2"
    },
    "10595": {
      "op": "ADD"
    },
    "10596": {
      "op": "SWAP1"
    },
    "10597": {
      "op": "DUP3"
    },
    "10598": {
      "op": "DUP3"
    },
    "10599": {
      "op": "GT"
    },
    "10600": {
      "op": "DUP2"
    },
    "10601": {
      "op": "DUP4"
    },
    "10602": {
      "op": "LT"
    },
    "10603": {
      "op": "OR"
    },
    "10604": {
      "op": "ISZERO"
    },
    "10605": {
      "op": "PUSH2",
      "value": "0x2978"
    },
    "10608": {
      "op": "JUMPI"
    },
    "10609": {
      "op": "PUSH2",
      "value": "0x2978"
    },
    "10612": {
      "op": "PUSH2",
      "value": "0x291F"
    },
    "10615": {
      "jump": "i",
      "op": "JUMP"
    },
    "10616": {
      "op": "JUMPDEST"
    },
    "10617": {
      "op": "DUP2"
    },
    "10618": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10620": {
      "op": "MSTORE"
    },
    "10621": {
      "op": "DUP1"
    },
    "10622": {
      "op": "SWAP4"
    },
    "10623": {
      "op": "POP"
    },
    "10624": {
      "op": "DUP6"
    },
    "10625": {
      "op": "DUP2"
    },
    "10626": {
      "op": "MSTORE"
    },
    "10627": {
      "op": "DUP7"
    },
    "10628": {
      "op": "DUP7"
    },
    "10629": {
      "op": "DUP7"
    },
    "10630": {
      "op": "ADD"
    },
    "10631": {
      "op": "GT"
    },
    "10632": {
      "op": "ISZERO"
    },
    "10633": {
      "op": "PUSH2",
      "value": "0x2991"
    },
    "10636": {
      "op": "JUMPI"
    },
    "10637": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10639": {
      "op": "DUP1"
    },
    "10640": {
      "op": "REVERT"
    },
    "10641": {
      "op": "JUMPDEST"
    },
    "10642": {
      "op": "DUP6"
    },
    "10643": {
      "op": "DUP6"
    },
    "10644": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10646": {
      "op": "DUP4"
    },
    "10647": {
      "op": "ADD"
    },
    "10648": {
      "op": "CALLDATACOPY"
    },
    "10649": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10651": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10653": {
      "op": "DUP8"
    },
    "10654": {
      "op": "DUP4"
    },
    "10655": {
      "op": "ADD"
    },
    "10656": {
      "op": "ADD"
    },
    "10657": {
      "op": "MSTORE"
    },
    "10658": {
      "op": "POP"
    },
    "10659": {
      "op": "POP"
    },
    "10660": {
      "op": "POP"
    },
    "10661": {
      "op": "SWAP4"
    },
    "10662": {
      "op": "SWAP3"
    },
    "10663": {
      "op": "POP"
    },
    "10664": {
      "op": "POP"
    },
    "10665": {
      "op": "POP"
    },
    "10666": {
      "jump": "o",
      "op": "JUMP"
    },
    "10667": {
      "op": "JUMPDEST"
    },
    "10668": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10670": {
      "op": "DUP3"
    },
    "10671": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "10673": {
      "op": "DUP4"
    },
    "10674": {
      "op": "ADD"
    },
    "10675": {
      "op": "SLT"
    },
    "10676": {
      "op": "PUSH2",
      "value": "0x29BC"
    },
    "10679": {
      "op": "JUMPI"
    },
    "10680": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10682": {
      "op": "DUP1"
    },
    "10683": {
      "op": "REVERT"
    },
    "10684": {
      "op": "JUMPDEST"
    },
    "10685": {
      "op": "PUSH2",
      "value": "0xA42"
    },
    "10688": {
      "op": "DUP4"
    },
    "10689": {
      "op": "DUP4"
    },
    "10690": {
      "op": "CALLDATALOAD"
    },
    "10691": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10693": {
      "op": "DUP6"
    },
    "10694": {
      "op": "ADD"
    },
    "10695": {
      "op": "PUSH2",
      "value": "0x2935"
    },
    "10698": {
      "jump": "i",
      "op": "JUMP"
    },
    "10699": {
      "op": "JUMPDEST"
    },
    "10700": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10702": {
      "op": "DUP1"
    },
    "10703": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10705": {
      "op": "DUP4"
    },
    "10706": {
      "op": "DUP6"
    },
    "10707": {
      "op": "SUB"
    },
    "10708": {
      "op": "SLT"
    },
    "10709": {
      "op": "ISZERO"
    },
    "10710": {
      "op": "PUSH2",
      "value": "0x29DE"
    },
    "10713": {
      "op": "JUMPI"
    },
    "10714": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10716": {
      "op": "DUP1"
    },
    "10717": {
      "op": "REVERT"
    },
    "10718": {
      "op": "JUMPDEST"
    },
    "10719": {
      "op": "DUP3"
    },
    "10720": {
      "op": "CALLDATALOAD"
    },
    "10721": {
      "op": "SWAP2"
    },
    "10722": {
      "op": "POP"
    },
    "10723": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10725": {
      "op": "DUP4"
    },
    "10726": {
      "op": "ADD"
    },
    "10727": {
      "op": "CALLDATALOAD"
    },
    "10728": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "10737": {
      "op": "DUP2"
    },
    "10738": {
      "op": "GT"
    },
    "10739": {
      "op": "ISZERO"
    },
    "10740": {
      "op": "PUSH2",
      "value": "0x29FC"
    },
    "10743": {
      "op": "JUMPI"
    },
    "10744": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10746": {
      "op": "DUP1"
    },
    "10747": {
      "op": "REVERT"
    },
    "10748": {
      "op": "JUMPDEST"
    },
    "10749": {
      "op": "PUSH2",
      "value": "0x2A08"
    },
    "10752": {
      "op": "DUP6"
    },
    "10753": {
      "op": "DUP3"
    },
    "10754": {
      "op": "DUP7"
    },
    "10755": {
      "op": "ADD"
    },
    "10756": {
      "op": "PUSH2",
      "value": "0x29AB"
    },
    "10759": {
      "jump": "i",
      "op": "JUMP"
    },
    "10760": {
      "op": "JUMPDEST"
    },
    "10761": {
      "op": "SWAP2"
    },
    "10762": {
      "op": "POP"
    },
    "10763": {
      "op": "POP"
    },
    "10764": {
      "op": "SWAP3"
    },
    "10765": {
      "op": "POP"
    },
    "10766": {
      "op": "SWAP3"
    },
    "10767": {
      "op": "SWAP1"
    },
    "10768": {
      "op": "POP"
    },
    "10769": {
      "jump": "o",
      "op": "JUMP"
    },
    "10770": {
      "op": "JUMPDEST"
    },
    "10771": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10773": {
      "op": "JUMPDEST"
    },
    "10774": {
      "op": "DUP4"
    },
    "10775": {
      "op": "DUP2"
    },
    "10776": {
      "op": "LT"
    },
    "10777": {
      "op": "ISZERO"
    },
    "10778": {
      "op": "PUSH2",
      "value": "0x2A2D"
    },
    "10781": {
      "op": "JUMPI"
    },
    "10782": {
      "op": "DUP2"
    },
    "10783": {
      "op": "DUP2"
    },
    "10784": {
      "op": "ADD"
    },
    "10785": {
      "op": "MLOAD"
    },
    "10786": {
      "op": "DUP4"
    },
    "10787": {
      "op": "DUP3"
    },
    "10788": {
      "op": "ADD"
    },
    "10789": {
      "op": "MSTORE"
    },
    "10790": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10792": {
      "op": "ADD"
    },
    "10793": {
      "op": "PUSH2",
      "value": "0x2A15"
    },
    "10796": {
      "op": "JUMP"
    },
    "10797": {
      "op": "JUMPDEST"
    },
    "10798": {
      "op": "DUP4"
    },
    "10799": {
      "op": "DUP2"
    },
    "10800": {
      "op": "GT"
    },
    "10801": {
      "op": "ISZERO"
    },
    "10802": {
      "op": "PUSH2",
      "value": "0x1937"
    },
    "10805": {
      "op": "JUMPI"
    },
    "10806": {
      "op": "POP"
    },
    "10807": {
      "op": "POP"
    },
    "10808": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10810": {
      "op": "SWAP2"
    },
    "10811": {
      "op": "ADD"
    },
    "10812": {
      "op": "MSTORE"
    },
    "10813": {
      "jump": "o",
      "op": "JUMP"
    },
    "10814": {
      "op": "JUMPDEST"
    },
    "10815": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10817": {
      "op": "DUP2"
    },
    "10818": {
      "op": "MLOAD"
    },
    "10819": {
      "op": "DUP1"
    },
    "10820": {
      "op": "DUP5"
    },
    "10821": {
      "op": "MSTORE"
    },
    "10822": {
      "op": "PUSH2",
      "value": "0x2A56"
    },
    "10825": {
      "op": "DUP2"
    },
    "10826": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10828": {
      "op": "DUP7"
    },
    "10829": {
      "op": "ADD"
    },
    "10830": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10832": {
      "op": "DUP7"
    },
    "10833": {
      "op": "ADD"
    },
    "10834": {
      "op": "PUSH2",
      "value": "0x2A12"
    },
    "10837": {
      "jump": "i",
      "op": "JUMP"
    },
    "10838": {
      "op": "JUMPDEST"
    },
    "10839": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "10841": {
      "op": "ADD"
    },
    "10842": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "10844": {
      "op": "NOT"
    },
    "10845": {
      "op": "AND"
    },
    "10846": {
      "op": "SWAP3"
    },
    "10847": {
      "op": "SWAP1"
    },
    "10848": {
      "op": "SWAP3"
    },
    "10849": {
      "op": "ADD"
    },
    "10850": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10852": {
      "op": "ADD"
    },
    "10853": {
      "op": "SWAP3"
    },
    "10854": {
      "op": "SWAP2"
    },
    "10855": {
      "op": "POP"
    },
    "10856": {
      "op": "POP"
    },
    "10857": {
      "jump": "o",
      "op": "JUMP"
    },
    "10858": {
      "op": "JUMPDEST"
    },
    "10859": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10861": {
      "op": "DUP2"
    },
    "10862": {
      "op": "MSTORE"
    },
    "10863": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10865": {
      "op": "PUSH2",
      "value": "0xA42"
    },
    "10868": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10870": {
      "op": "DUP4"
    },
    "10871": {
      "op": "ADD"
    },
    "10872": {
      "op": "DUP5"
    },
    "10873": {
      "op": "PUSH2",
      "value": "0x2A3E"
    },
    "10876": {
      "jump": "i",
      "op": "JUMP"
    },
    "10877": {
      "op": "JUMPDEST"
    },
    "10878": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10880": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10882": {
      "op": "DUP3"
    },
    "10883": {
      "op": "DUP5"
    },
    "10884": {
      "op": "SUB"
    },
    "10885": {
      "op": "SLT"
    },
    "10886": {
      "op": "ISZERO"
    },
    "10887": {
      "op": "PUSH2",
      "value": "0x2A8F"
    },
    "10890": {
      "op": "JUMPI"
    },
    "10891": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10893": {
      "op": "DUP1"
    },
    "10894": {
      "op": "REVERT"
    },
    "10895": {
      "op": "JUMPDEST"
    },
    "10896": {
      "op": "POP"
    },
    "10897": {
      "op": "CALLDATALOAD"
    },
    "10898": {
      "op": "SWAP2"
    },
    "10899": {
      "op": "SWAP1"
    },
    "10900": {
      "op": "POP"
    },
    "10901": {
      "jump": "o",
      "op": "JUMP"
    },
    "10902": {
      "op": "JUMPDEST"
    },
    "10903": {
      "op": "DUP1"
    },
    "10904": {
      "op": "CALLDATALOAD"
    },
    "10905": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10907": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10909": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10911": {
      "op": "SHL"
    },
    "10912": {
      "op": "SUB"
    },
    "10913": {
      "op": "DUP2"
    },
    "10914": {
      "op": "AND"
    },
    "10915": {
      "op": "DUP2"
    },
    "10916": {
      "op": "EQ"
    },
    "10917": {
      "op": "PUSH2",
      "value": "0x2AAD"
    },
    "10920": {
      "op": "JUMPI"
    },
    "10921": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10923": {
      "op": "DUP1"
    },
    "10924": {
      "op": "REVERT"
    },
    "10925": {
      "op": "JUMPDEST"
    },
    "10926": {
      "op": "SWAP2"
    },
    "10927": {
      "op": "SWAP1"
    },
    "10928": {
      "op": "POP"
    },
    "10929": {
      "jump": "o",
      "op": "JUMP"
    },
    "10930": {
      "op": "JUMPDEST"
    },
    "10931": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10933": {
      "op": "DUP1"
    },
    "10934": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10936": {
      "op": "DUP4"
    },
    "10937": {
      "op": "DUP6"
    },
    "10938": {
      "op": "SUB"
    },
    "10939": {
      "op": "SLT"
    },
    "10940": {
      "op": "ISZERO"
    },
    "10941": {
      "op": "PUSH2",
      "value": "0x2AC5"
    },
    "10944": {
      "op": "JUMPI"
    },
    "10945": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10947": {
      "op": "DUP1"
    },
    "10948": {
      "op": "REVERT"
    },
    "10949": {
      "op": "JUMPDEST"
    },
    "10950": {
      "op": "PUSH2",
      "value": "0x2ACE"
    },
    "10953": {
      "op": "DUP4"
    },
    "10954": {
      "op": "PUSH2",
      "value": "0x2A96"
    },
    "10957": {
      "jump": "i",
      "op": "JUMP"
    },
    "10958": {
      "op": "JUMPDEST"
    },
    "10959": {
      "op": "SWAP5"
    },
    "10960": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10962": {
      "op": "SWAP4"
    },
    "10963": {
      "op": "SWAP1"
    },
    "10964": {
      "op": "SWAP4"
    },
    "10965": {
      "op": "ADD"
    },
    "10966": {
      "op": "CALLDATALOAD"
    },
    "10967": {
      "op": "SWAP4"
    },
    "10968": {
      "op": "POP"
    },
    "10969": {
      "op": "POP"
    },
    "10970": {
      "op": "POP"
    },
    "10971": {
      "jump": "o",
      "op": "JUMP"
    },
    "10972": {
      "op": "JUMPDEST"
    },
    "10973": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10975": {
      "op": "DUP1"
    },
    "10976": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10978": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10980": {
      "op": "DUP5"
    },
    "10981": {
      "op": "DUP7"
    },
    "10982": {
      "op": "SUB"
    },
    "10983": {
      "op": "SLT"
    },
    "10984": {
      "op": "ISZERO"
    },
    "10985": {
      "op": "PUSH2",
      "value": "0x2AF1"
    },
    "10988": {
      "op": "JUMPI"
    },
    "10989": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10991": {
      "op": "DUP1"
    },
    "10992": {
      "op": "REVERT"
    },
    "10993": {
      "op": "JUMPDEST"
    },
    "10994": {
      "op": "PUSH2",
      "value": "0x2AFA"
    },
    "10997": {
      "op": "DUP5"
    },
    "10998": {
      "op": "PUSH2",
      "value": "0x2A96"
    },
    "11001": {
      "jump": "i",
      "op": "JUMP"
    },
    "11002": {
      "op": "JUMPDEST"
    },
    "11003": {
      "op": "SWAP3"
    },
    "11004": {
      "op": "POP"
    },
    "11005": {
      "op": "PUSH2",
      "value": "0x2B08"
    },
    "11008": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11010": {
      "op": "DUP6"
    },
    "11011": {
      "op": "ADD"
    },
    "11012": {
      "op": "PUSH2",
      "value": "0x2A96"
    },
    "11015": {
      "jump": "i",
      "op": "JUMP"
    },
    "11016": {
      "op": "JUMPDEST"
    },
    "11017": {
      "op": "SWAP2"
    },
    "11018": {
      "op": "POP"
    },
    "11019": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11021": {
      "op": "DUP5"
    },
    "11022": {
      "op": "ADD"
    },
    "11023": {
      "op": "CALLDATALOAD"
    },
    "11024": {
      "op": "SWAP1"
    },
    "11025": {
      "op": "POP"
    },
    "11026": {
      "op": "SWAP3"
    },
    "11027": {
      "op": "POP"
    },
    "11028": {
      "op": "SWAP3"
    },
    "11029": {
      "op": "POP"
    },
    "11030": {
      "op": "SWAP3"
    },
    "11031": {
      "jump": "o",
      "op": "JUMP"
    },
    "11032": {
      "op": "JUMPDEST"
    },
    "11033": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11035": {
      "op": "DUP1"
    },
    "11036": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11038": {
      "op": "DUP1"
    },
    "11039": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11041": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11043": {
      "op": "DUP7"
    },
    "11044": {
      "op": "DUP9"
    },
    "11045": {
      "op": "SUB"
    },
    "11046": {
      "op": "SLT"
    },
    "11047": {
      "op": "ISZERO"
    },
    "11048": {
      "op": "PUSH2",
      "value": "0x2B30"
    },
    "11051": {
      "op": "JUMPI"
    },
    "11052": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11054": {
      "op": "DUP1"
    },
    "11055": {
      "op": "REVERT"
    },
    "11056": {
      "op": "JUMPDEST"
    },
    "11057": {
      "op": "DUP6"
    },
    "11058": {
      "op": "CALLDATALOAD"
    },
    "11059": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "11068": {
      "op": "DUP2"
    },
    "11069": {
      "op": "GT"
    },
    "11070": {
      "op": "ISZERO"
    },
    "11071": {
      "op": "PUSH2",
      "value": "0x2B47"
    },
    "11074": {
      "op": "JUMPI"
    },
    "11075": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11077": {
      "op": "DUP1"
    },
    "11078": {
      "op": "REVERT"
    },
    "11079": {
      "op": "JUMPDEST"
    },
    "11080": {
      "op": "PUSH2",
      "value": "0x2B53"
    },
    "11083": {
      "op": "DUP9"
    },
    "11084": {
      "op": "DUP3"
    },
    "11085": {
      "op": "DUP10"
    },
    "11086": {
      "op": "ADD"
    },
    "11087": {
      "op": "PUSH2",
      "value": "0x29AB"
    },
    "11090": {
      "jump": "i",
      "op": "JUMP"
    },
    "11091": {
      "op": "JUMPDEST"
    },
    "11092": {
      "op": "SWAP9"
    },
    "11093": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11095": {
      "op": "DUP9"
    },
    "11096": {
      "op": "ADD"
    },
    "11097": {
      "op": "CALLDATALOAD"
    },
    "11098": {
      "op": "SWAP9"
    },
    "11099": {
      "op": "POP"
    },
    "11100": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11102": {
      "op": "DUP9"
    },
    "11103": {
      "op": "ADD"
    },
    "11104": {
      "op": "CALLDATALOAD"
    },
    "11105": {
      "op": "SWAP8"
    },
    "11106": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "11108": {
      "op": "DUP2"
    },
    "11109": {
      "op": "ADD"
    },
    "11110": {
      "op": "CALLDATALOAD"
    },
    "11111": {
      "op": "SWAP8"
    },
    "11112": {
      "op": "POP"
    },
    "11113": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "11115": {
      "op": "ADD"
    },
    "11116": {
      "op": "CALLDATALOAD"
    },
    "11117": {
      "op": "SWAP6"
    },
    "11118": {
      "op": "POP"
    },
    "11119": {
      "op": "SWAP4"
    },
    "11120": {
      "op": "POP"
    },
    "11121": {
      "op": "POP"
    },
    "11122": {
      "op": "POP"
    },
    "11123": {
      "op": "POP"
    },
    "11124": {
      "jump": "o",
      "op": "JUMP"
    },
    "11125": {
      "op": "JUMPDEST"
    },
    "11126": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11128": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11130": {
      "op": "DUP3"
    },
    "11131": {
      "op": "DUP5"
    },
    "11132": {
      "op": "SUB"
    },
    "11133": {
      "op": "SLT"
    },
    "11134": {
      "op": "ISZERO"
    },
    "11135": {
      "op": "PUSH2",
      "value": "0x2B87"
    },
    "11138": {
      "op": "JUMPI"
    },
    "11139": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11141": {
      "op": "DUP1"
    },
    "11142": {
      "op": "REVERT"
    },
    "11143": {
      "op": "JUMPDEST"
    },
    "11144": {
      "op": "PUSH2",
      "value": "0xA42"
    },
    "11147": {
      "op": "DUP3"
    },
    "11148": {
      "op": "PUSH2",
      "value": "0x2A96"
    },
    "11151": {
      "jump": "i",
      "op": "JUMP"
    },
    "11152": {
      "op": "JUMPDEST"
    },
    "11153": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11155": {
      "op": "DUP1"
    },
    "11156": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11158": {
      "op": "DUP1"
    },
    "11159": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11161": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11163": {
      "op": "DUP7"
    },
    "11164": {
      "op": "DUP9"
    },
    "11165": {
      "op": "SUB"
    },
    "11166": {
      "op": "SLT"
    },
    "11167": {
      "op": "ISZERO"
    },
    "11168": {
      "op": "PUSH2",
      "value": "0x2BA8"
    },
    "11171": {
      "op": "JUMPI"
    },
    "11172": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11174": {
      "op": "DUP1"
    },
    "11175": {
      "op": "REVERT"
    },
    "11176": {
      "op": "JUMPDEST"
    },
    "11177": {
      "op": "DUP6"
    },
    "11178": {
      "op": "CALLDATALOAD"
    },
    "11179": {
      "op": "SWAP5"
    },
    "11180": {
      "op": "POP"
    },
    "11181": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11183": {
      "op": "DUP7"
    },
    "11184": {
      "op": "ADD"
    },
    "11185": {
      "op": "CALLDATALOAD"
    },
    "11186": {
      "op": "SWAP4"
    },
    "11187": {
      "op": "POP"
    },
    "11188": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11190": {
      "op": "DUP7"
    },
    "11191": {
      "op": "ADD"
    },
    "11192": {
      "op": "CALLDATALOAD"
    },
    "11193": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "11195": {
      "op": "DUP2"
    },
    "11196": {
      "op": "LT"
    },
    "11197": {
      "op": "PUSH2",
      "value": "0x2BC5"
    },
    "11200": {
      "op": "JUMPI"
    },
    "11201": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11203": {
      "op": "DUP1"
    },
    "11204": {
      "op": "REVERT"
    },
    "11205": {
      "op": "JUMPDEST"
    },
    "11206": {
      "op": "SWAP5"
    },
    "11207": {
      "op": "SWAP8"
    },
    "11208": {
      "op": "SWAP4"
    },
    "11209": {
      "op": "SWAP7"
    },
    "11210": {
      "op": "POP"
    },
    "11211": {
      "op": "SWAP4"
    },
    "11212": {
      "op": "SWAP5"
    },
    "11213": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "11215": {
      "op": "DUP2"
    },
    "11216": {
      "op": "ADD"
    },
    "11217": {
      "op": "CALLDATALOAD"
    },
    "11218": {
      "op": "SWAP5"
    },
    "11219": {
      "op": "POP"
    },
    "11220": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "11222": {
      "op": "ADD"
    },
    "11223": {
      "op": "CALLDATALOAD"
    },
    "11224": {
      "op": "SWAP3"
    },
    "11225": {
      "op": "SWAP2"
    },
    "11226": {
      "op": "POP"
    },
    "11227": {
      "op": "POP"
    },
    "11228": {
      "jump": "o",
      "op": "JUMP"
    },
    "11229": {
      "op": "JUMPDEST"
    },
    "11230": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11232": {
      "op": "DUP1"
    },
    "11233": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11235": {
      "op": "DUP4"
    },
    "11236": {
      "op": "DUP6"
    },
    "11237": {
      "op": "SUB"
    },
    "11238": {
      "op": "SLT"
    },
    "11239": {
      "op": "ISZERO"
    },
    "11240": {
      "op": "PUSH2",
      "value": "0x2BF0"
    },
    "11243": {
      "op": "JUMPI"
    },
    "11244": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11246": {
      "op": "DUP1"
    },
    "11247": {
      "op": "REVERT"
    },
    "11248": {
      "op": "JUMPDEST"
    },
    "11249": {
      "op": "POP"
    },
    "11250": {
      "op": "POP"
    },
    "11251": {
      "op": "DUP1"
    },
    "11252": {
      "op": "CALLDATALOAD"
    },
    "11253": {
      "op": "SWAP3"
    },
    "11254": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11256": {
      "op": "SWAP1"
    },
    "11257": {
      "op": "SWAP2"
    },
    "11258": {
      "op": "ADD"
    },
    "11259": {
      "op": "CALLDATALOAD"
    },
    "11260": {
      "op": "SWAP2"
    },
    "11261": {
      "op": "POP"
    },
    "11262": {
      "jump": "o",
      "op": "JUMP"
    },
    "11263": {
      "op": "JUMPDEST"
    },
    "11264": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "11269": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "11271": {
      "op": "SHL"
    },
    "11272": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11274": {
      "op": "MSTORE"
    },
    "11275": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "11277": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "11279": {
      "op": "MSTORE"
    },
    "11280": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11282": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11284": {
      "op": "REVERT"
    },
    "11285": {
      "op": "JUMPDEST"
    },
    "11286": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "11288": {
      "op": "DUP2"
    },
    "11289": {
      "op": "LT"
    },
    "11290": {
      "op": "PUSH2",
      "value": "0x2C33"
    },
    "11293": {
      "op": "JUMPI"
    },
    "11294": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "11299": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "11301": {
      "op": "SHL"
    },
    "11302": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11304": {
      "op": "MSTORE"
    },
    "11305": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "11307": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "11309": {
      "op": "MSTORE"
    },
    "11310": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11312": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11314": {
      "op": "REVERT"
    },
    "11315": {
      "op": "JUMPDEST"
    },
    "11316": {
      "op": "SWAP1"
    },
    "11317": {
      "op": "MSTORE"
    },
    "11318": {
      "jump": "o",
      "op": "JUMP"
    },
    "11319": {
      "op": "JUMPDEST"
    },
    "11320": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11322": {
      "op": "PUSH2",
      "value": "0x1C0"
    },
    "11325": {
      "op": "DUP3"
    },
    "11326": {
      "op": "ADD"
    },
    "11327": {
      "op": "SWAP1"
    },
    "11328": {
      "op": "POP"
    },
    "11329": {
      "op": "DUP3"
    },
    "11330": {
      "op": "MLOAD"
    },
    "11331": {
      "op": "DUP3"
    },
    "11332": {
      "op": "MSTORE"
    },
    "11333": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11335": {
      "op": "DUP4"
    },
    "11336": {
      "op": "ADD"
    },
    "11337": {
      "op": "MLOAD"
    },
    "11338": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11340": {
      "op": "DUP4"
    },
    "11341": {
      "op": "ADD"
    },
    "11342": {
      "op": "MSTORE"
    },
    "11343": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11345": {
      "op": "DUP4"
    },
    "11346": {
      "op": "ADD"
    },
    "11347": {
      "op": "MLOAD"
    },
    "11348": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11350": {
      "op": "DUP4"
    },
    "11351": {
      "op": "ADD"
    },
    "11352": {
      "op": "MSTORE"
    },
    "11353": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "11355": {
      "op": "DUP4"
    },
    "11356": {
      "op": "ADD"
    },
    "11357": {
      "op": "MLOAD"
    },
    "11358": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "11360": {
      "op": "DUP4"
    },
    "11361": {
      "op": "ADD"
    },
    "11362": {
      "op": "MSTORE"
    },
    "11363": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "11365": {
      "op": "DUP4"
    },
    "11366": {
      "op": "ADD"
    },
    "11367": {
      "op": "MLOAD"
    },
    "11368": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "11370": {
      "op": "DUP4"
    },
    "11371": {
      "op": "ADD"
    },
    "11372": {
      "op": "MSTORE"
    },
    "11373": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11375": {
      "op": "DUP4"
    },
    "11376": {
      "op": "ADD"
    },
    "11377": {
      "op": "MLOAD"
    },
    "11378": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11380": {
      "op": "DUP4"
    },
    "11381": {
      "op": "ADD"
    },
    "11382": {
      "op": "MSTORE"
    },
    "11383": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "11385": {
      "op": "DUP4"
    },
    "11386": {
      "op": "ADD"
    },
    "11387": {
      "op": "MLOAD"
    },
    "11388": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "11390": {
      "op": "DUP4"
    },
    "11391": {
      "op": "ADD"
    },
    "11392": {
      "op": "MSTORE"
    },
    "11393": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "11395": {
      "op": "DUP4"
    },
    "11396": {
      "op": "ADD"
    },
    "11397": {
      "op": "MLOAD"
    },
    "11398": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "11400": {
      "op": "DUP4"
    },
    "11401": {
      "op": "ADD"
    },
    "11402": {
      "op": "MSTORE"
    },
    "11403": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "11406": {
      "op": "DUP1"
    },
    "11407": {
      "op": "DUP5"
    },
    "11408": {
      "op": "ADD"
    },
    "11409": {
      "op": "MLOAD"
    },
    "11410": {
      "op": "DUP2"
    },
    "11411": {
      "op": "DUP5"
    },
    "11412": {
      "op": "ADD"
    },
    "11413": {
      "op": "MSTORE"
    },
    "11414": {
      "op": "POP"
    },
    "11415": {
      "op": "PUSH2",
      "value": "0x120"
    },
    "11418": {
      "op": "DUP1"
    },
    "11419": {
      "op": "DUP5"
    },
    "11420": {
      "op": "ADD"
    },
    "11421": {
      "op": "MLOAD"
    },
    "11422": {
      "op": "DUP2"
    },
    "11423": {
      "op": "DUP5"
    },
    "11424": {
      "op": "ADD"
    },
    "11425": {
      "op": "MSTORE"
    },
    "11426": {
      "op": "POP"
    },
    "11427": {
      "op": "PUSH2",
      "value": "0x140"
    },
    "11430": {
      "op": "DUP1"
    },
    "11431": {
      "op": "DUP5"
    },
    "11432": {
      "op": "ADD"
    },
    "11433": {
      "op": "MLOAD"
    },
    "11434": {
      "op": "DUP2"
    },
    "11435": {
      "op": "DUP5"
    },
    "11436": {
      "op": "ADD"
    },
    "11437": {
      "op": "MSTORE"
    },
    "11438": {
      "op": "POP"
    },
    "11439": {
      "op": "PUSH2",
      "value": "0x160"
    },
    "11442": {
      "op": "DUP1"
    },
    "11443": {
      "op": "DUP5"
    },
    "11444": {
      "op": "ADD"
    },
    "11445": {
      "op": "MLOAD"
    },
    "11446": {
      "op": "DUP2"
    },
    "11447": {
      "op": "DUP5"
    },
    "11448": {
      "op": "ADD"
    },
    "11449": {
      "op": "MSTORE"
    },
    "11450": {
      "op": "POP"
    },
    "11451": {
      "op": "PUSH2",
      "value": "0x180"
    },
    "11454": {
      "op": "DUP1"
    },
    "11455": {
      "op": "DUP5"
    },
    "11456": {
      "op": "ADD"
    },
    "11457": {
      "op": "MLOAD"
    },
    "11458": {
      "op": "DUP2"
    },
    "11459": {
      "op": "DUP5"
    },
    "11460": {
      "op": "ADD"
    },
    "11461": {
      "op": "MSTORE"
    },
    "11462": {
      "op": "POP"
    },
    "11463": {
      "op": "PUSH2",
      "value": "0x1A0"
    },
    "11466": {
      "op": "DUP1"
    },
    "11467": {
      "op": "DUP5"
    },
    "11468": {
      "op": "ADD"
    },
    "11469": {
      "op": "MLOAD"
    },
    "11470": {
      "op": "PUSH2",
      "value": "0x2CD9"
    },
    "11473": {
      "op": "DUP3"
    },
    "11474": {
      "op": "DUP6"
    },
    "11475": {
      "op": "ADD"
    },
    "11476": {
      "op": "DUP3"
    },
    "11477": {
      "op": "PUSH2",
      "value": "0x2C15"
    },
    "11480": {
      "jump": "i",
      "op": "JUMP"
    },
    "11481": {
      "op": "JUMPDEST"
    },
    "11482": {
      "op": "POP"
    },
    "11483": {
      "op": "POP"
    },
    "11484": {
      "op": "SWAP3"
    },
    "11485": {
      "op": "SWAP2"
    },
    "11486": {
      "op": "POP"
    },
    "11487": {
      "op": "POP"
    },
    "11488": {
      "jump": "o",
      "op": "JUMP"
    },
    "11489": {
      "op": "JUMPDEST"
    },
    "11490": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11492": {
      "op": "DUP1"
    },
    "11493": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11495": {
      "op": "DUP4"
    },
    "11496": {
      "op": "DUP6"
    },
    "11497": {
      "op": "SUB"
    },
    "11498": {
      "op": "SLT"
    },
    "11499": {
      "op": "ISZERO"
    },
    "11500": {
      "op": "PUSH2",
      "value": "0x2CF4"
    },
    "11503": {
      "op": "JUMPI"
    },
    "11504": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11506": {
      "op": "DUP1"
    },
    "11507": {
      "op": "REVERT"
    },
    "11508": {
      "op": "JUMPDEST"
    },
    "11509": {
      "op": "PUSH2",
      "value": "0x2CFD"
    },
    "11512": {
      "op": "DUP4"
    },
    "11513": {
      "op": "PUSH2",
      "value": "0x2A96"
    },
    "11516": {
      "jump": "i",
      "op": "JUMP"
    },
    "11517": {
      "op": "JUMPDEST"
    },
    "11518": {
      "op": "SWAP2"
    },
    "11519": {
      "op": "POP"
    },
    "11520": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11522": {
      "op": "DUP4"
    },
    "11523": {
      "op": "ADD"
    },
    "11524": {
      "op": "CALLDATALOAD"
    },
    "11525": {
      "op": "DUP1"
    },
    "11526": {
      "op": "ISZERO"
    },
    "11527": {
      "op": "ISZERO"
    },
    "11528": {
      "op": "DUP2"
    },
    "11529": {
      "op": "EQ"
    },
    "11530": {
      "op": "PUSH2",
      "value": "0x2D12"
    },
    "11533": {
      "op": "JUMPI"
    },
    "11534": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11536": {
      "op": "DUP1"
    },
    "11537": {
      "op": "REVERT"
    },
    "11538": {
      "op": "JUMPDEST"
    },
    "11539": {
      "op": "DUP1"
    },
    "11540": {
      "op": "SWAP2"
    },
    "11541": {
      "op": "POP"
    },
    "11542": {
      "op": "POP"
    },
    "11543": {
      "op": "SWAP3"
    },
    "11544": {
      "op": "POP"
    },
    "11545": {
      "op": "SWAP3"
    },
    "11546": {
      "op": "SWAP1"
    },
    "11547": {
      "op": "POP"
    },
    "11548": {
      "jump": "o",
      "op": "JUMP"
    },
    "11549": {
      "op": "JUMPDEST"
    },
    "11550": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11552": {
      "op": "DUP1"
    },
    "11553": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11555": {
      "op": "DUP1"
    },
    "11556": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "11558": {
      "op": "DUP6"
    },
    "11559": {
      "op": "DUP8"
    },
    "11560": {
      "op": "SUB"
    },
    "11561": {
      "op": "SLT"
    },
    "11562": {
      "op": "ISZERO"
    },
    "11563": {
      "op": "PUSH2",
      "value": "0x2D33"
    },
    "11566": {
      "op": "JUMPI"
    },
    "11567": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11569": {
      "op": "DUP1"
    },
    "11570": {
      "op": "REVERT"
    },
    "11571": {
      "op": "JUMPDEST"
    },
    "11572": {
      "op": "PUSH2",
      "value": "0x2D3C"
    },
    "11575": {
      "op": "DUP6"
    },
    "11576": {
      "op": "PUSH2",
      "value": "0x2A96"
    },
    "11579": {
      "jump": "i",
      "op": "JUMP"
    },
    "11580": {
      "op": "JUMPDEST"
    },
    "11581": {
      "op": "SWAP4"
    },
    "11582": {
      "op": "POP"
    },
    "11583": {
      "op": "PUSH2",
      "value": "0x2D4A"
    },
    "11586": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11588": {
      "op": "DUP7"
    },
    "11589": {
      "op": "ADD"
    },
    "11590": {
      "op": "PUSH2",
      "value": "0x2A96"
    },
    "11593": {
      "jump": "i",
      "op": "JUMP"
    },
    "11594": {
      "op": "JUMPDEST"
    },
    "11595": {
      "op": "SWAP3"
    },
    "11596": {
      "op": "POP"
    },
    "11597": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11599": {
      "op": "DUP6"
    },
    "11600": {
      "op": "ADD"
    },
    "11601": {
      "op": "CALLDATALOAD"
    },
    "11602": {
      "op": "SWAP2"
    },
    "11603": {
      "op": "POP"
    },
    "11604": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "11606": {
      "op": "DUP6"
    },
    "11607": {
      "op": "ADD"
    },
    "11608": {
      "op": "CALLDATALOAD"
    },
    "11609": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "11618": {
      "op": "DUP2"
    },
    "11619": {
      "op": "GT"
    },
    "11620": {
      "op": "ISZERO"
    },
    "11621": {
      "op": "PUSH2",
      "value": "0x2D6D"
    },
    "11624": {
      "op": "JUMPI"
    },
    "11625": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11627": {
      "op": "DUP1"
    },
    "11628": {
      "op": "REVERT"
    },
    "11629": {
      "op": "JUMPDEST"
    },
    "11630": {
      "op": "DUP6"
    },
    "11631": {
      "op": "ADD"
    },
    "11632": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "11634": {
      "op": "DUP2"
    },
    "11635": {
      "op": "ADD"
    },
    "11636": {
      "op": "DUP8"
    },
    "11637": {
      "op": "SGT"
    },
    "11638": {
      "op": "PUSH2",
      "value": "0x2D7E"
    },
    "11641": {
      "op": "JUMPI"
    },
    "11642": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11644": {
      "op": "DUP1"
    },
    "11645": {
      "op": "REVERT"
    },
    "11646": {
      "op": "JUMPDEST"
    },
    "11647": {
      "op": "PUSH2",
      "value": "0x2D8D"
    },
    "11650": {
      "op": "DUP8"
    },
    "11651": {
      "op": "DUP3"
    },
    "11652": {
      "op": "CALLDATALOAD"
    },
    "11653": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11655": {
      "op": "DUP5"
    },
    "11656": {
      "op": "ADD"
    },
    "11657": {
      "op": "PUSH2",
      "value": "0x2935"
    },
    "11660": {
      "jump": "i",
      "op": "JUMP"
    },
    "11661": {
      "op": "JUMPDEST"
    },
    "11662": {
      "op": "SWAP2"
    },
    "11663": {
      "op": "POP"
    },
    "11664": {
      "op": "POP"
    },
    "11665": {
      "op": "SWAP3"
    },
    "11666": {
      "op": "SWAP6"
    },
    "11667": {
      "op": "SWAP2"
    },
    "11668": {
      "op": "SWAP5"
    },
    "11669": {
      "op": "POP"
    },
    "11670": {
      "op": "SWAP3"
    },
    "11671": {
      "op": "POP"
    },
    "11672": {
      "jump": "o",
      "op": "JUMP"
    },
    "11673": {
      "op": "JUMPDEST"
    },
    "11674": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11676": {
      "op": "PUSH2",
      "value": "0x1C0"
    },
    "11679": {
      "op": "DUP3"
    },
    "11680": {
      "op": "ADD"
    },
    "11681": {
      "op": "SWAP1"
    },
    "11682": {
      "op": "POP"
    },
    "11683": {
      "op": "DUP16"
    },
    "11684": {
      "op": "DUP3"
    },
    "11685": {
      "op": "MSTORE"
    },
    "11686": {
      "op": "DUP15"
    },
    "11687": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11689": {
      "op": "DUP4"
    },
    "11690": {
      "op": "ADD"
    },
    "11691": {
      "op": "MSTORE"
    },
    "11692": {
      "op": "DUP14"
    },
    "11693": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11695": {
      "op": "DUP4"
    },
    "11696": {
      "op": "ADD"
    },
    "11697": {
      "op": "MSTORE"
    },
    "11698": {
      "op": "DUP13"
    },
    "11699": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "11701": {
      "op": "DUP4"
    },
    "11702": {
      "op": "ADD"
    },
    "11703": {
      "op": "MSTORE"
    },
    "11704": {
      "op": "DUP12"
    },
    "11705": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "11707": {
      "op": "DUP4"
    },
    "11708": {
      "op": "ADD"
    },
    "11709": {
      "op": "MSTORE"
    },
    "11710": {
      "op": "DUP11"
    },
    "11711": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11713": {
      "op": "DUP4"
    },
    "11714": {
      "op": "ADD"
    },
    "11715": {
      "op": "MSTORE"
    },
    "11716": {
      "op": "DUP10"
    },
    "11717": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "11719": {
      "op": "DUP4"
    },
    "11720": {
      "op": "ADD"
    },
    "11721": {
      "op": "MSTORE"
    },
    "11722": {
      "op": "DUP9"
    },
    "11723": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "11725": {
      "op": "DUP4"
    },
    "11726": {
      "op": "ADD"
    },
    "11727": {
      "op": "MSTORE"
    },
    "11728": {
      "op": "DUP8"
    },
    "11729": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "11732": {
      "op": "DUP4"
    },
    "11733": {
      "op": "ADD"
    },
    "11734": {
      "op": "MSTORE"
    },
    "11735": {
      "op": "DUP7"
    },
    "11736": {
      "op": "PUSH2",
      "value": "0x120"
    },
    "11739": {
      "op": "DUP4"
    },
    "11740": {
      "op": "ADD"
    },
    "11741": {
      "op": "MSTORE"
    },
    "11742": {
      "op": "DUP6"
    },
    "11743": {
      "op": "PUSH2",
      "value": "0x140"
    },
    "11746": {
      "op": "DUP4"
    },
    "11747": {
      "op": "ADD"
    },
    "11748": {
      "op": "MSTORE"
    },
    "11749": {
      "op": "DUP5"
    },
    "11750": {
      "op": "PUSH2",
      "value": "0x160"
    },
    "11753": {
      "op": "DUP4"
    },
    "11754": {
      "op": "ADD"
    },
    "11755": {
      "op": "MSTORE"
    },
    "11756": {
      "op": "DUP4"
    },
    "11757": {
      "op": "PUSH2",
      "value": "0x180"
    },
    "11760": {
      "op": "DUP4"
    },
    "11761": {
      "op": "ADD"
    },
    "11762": {
      "op": "MSTORE"
    },
    "11763": {
      "op": "PUSH2",
      "value": "0x2E00"
    },
    "11766": {
      "op": "PUSH2",
      "value": "0x1A0"
    },
    "11769": {
      "op": "DUP4"
    },
    "11770": {
      "op": "ADD"
    },
    "11771": {
      "op": "DUP5"
    },
    "11772": {
      "op": "PUSH2",
      "value": "0x2C15"
    },
    "11775": {
      "jump": "i",
      "op": "JUMP"
    },
    "11776": {
      "op": "JUMPDEST"
    },
    "11777": {
      "op": "SWAP16"
    },
    "11778": {
      "op": "SWAP15"
    },
    "11779": {
      "op": "POP"
    },
    "11780": {
      "op": "POP"
    },
    "11781": {
      "op": "POP"
    },
    "11782": {
      "op": "POP"
    },
    "11783": {
      "op": "POP"
    },
    "11784": {
      "op": "POP"
    },
    "11785": {
      "op": "POP"
    },
    "11786": {
      "op": "POP"
    },
    "11787": {
      "op": "POP"
    },
    "11788": {
      "op": "POP"
    },
    "11789": {
      "op": "POP"
    },
    "11790": {
      "op": "POP"
    },
    "11791": {
      "op": "POP"
    },
    "11792": {
      "op": "POP"
    },
    "11793": {
      "op": "POP"
    },
    "11794": {
      "jump": "o",
      "op": "JUMP"
    },
    "11795": {
      "op": "JUMPDEST"
    },
    "11796": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11798": {
      "op": "PUSH2",
      "value": "0x120"
    },
    "11801": {
      "op": "DUP12"
    },
    "11802": {
      "op": "DUP4"
    },
    "11803": {
      "op": "MSTORE"
    },
    "11804": {
      "op": "DUP11"
    },
    "11805": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11807": {
      "op": "DUP5"
    },
    "11808": {
      "op": "ADD"
    },
    "11809": {
      "op": "MSTORE"
    },
    "11810": {
      "op": "DUP10"
    },
    "11811": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11813": {
      "op": "DUP5"
    },
    "11814": {
      "op": "ADD"
    },
    "11815": {
      "op": "MSTORE"
    },
    "11816": {
      "op": "DUP9"
    },
    "11817": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "11819": {
      "op": "DUP5"
    },
    "11820": {
      "op": "ADD"
    },
    "11821": {
      "op": "MSTORE"
    },
    "11822": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11824": {
      "op": "DUP1"
    },
    "11825": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11827": {
      "op": "SHL"
    },
    "11828": {
      "op": "SUB"
    },
    "11829": {
      "op": "DUP9"
    },
    "11830": {
      "op": "AND"
    },
    "11831": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "11833": {
      "op": "DUP5"
    },
    "11834": {
      "op": "ADD"
    },
    "11835": {
      "op": "MSTORE"
    },
    "11836": {
      "op": "DUP7"
    },
    "11837": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11839": {
      "op": "DUP5"
    },
    "11840": {
      "op": "ADD"
    },
    "11841": {
      "op": "MSTORE"
    },
    "11842": {
      "op": "DUP6"
    },
    "11843": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "11845": {
      "op": "DUP5"
    },
    "11846": {
      "op": "ADD"
    },
    "11847": {
      "op": "MSTORE"
    },
    "11848": {
      "op": "DUP5"
    },
    "11849": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "11851": {
      "op": "DUP5"
    },
    "11852": {
      "op": "ADD"
    },
    "11853": {
      "op": "MSTORE"
    },
    "11854": {
      "op": "DUP1"
    },
    "11855": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "11858": {
      "op": "DUP5"
    },
    "11859": {
      "op": "ADD"
    },
    "11860": {
      "op": "MSTORE"
    },
    "11861": {
      "op": "PUSH2",
      "value": "0x2E60"
    },
    "11864": {
      "op": "DUP2"
    },
    "11865": {
      "op": "DUP5"
    },
    "11866": {
      "op": "ADD"
    },
    "11867": {
      "op": "DUP6"
    },
    "11868": {
      "op": "PUSH2",
      "value": "0x2A3E"
    },
    "11871": {
      "jump": "i",
      "op": "JUMP"
    },
    "11872": {
      "op": "JUMPDEST"
    },
    "11873": {
      "op": "SWAP13"
    },
    "11874": {
      "op": "SWAP12"
    },
    "11875": {
      "op": "POP"
    },
    "11876": {
      "op": "POP"
    },
    "11877": {
      "op": "POP"
    },
    "11878": {
      "op": "POP"
    },
    "11879": {
      "op": "POP"
    },
    "11880": {
      "op": "POP"
    },
    "11881": {
      "op": "POP"
    },
    "11882": {
      "op": "POP"
    },
    "11883": {
      "op": "POP"
    },
    "11884": {
      "op": "POP"
    },
    "11885": {
      "op": "POP"
    },
    "11886": {
      "op": "POP"
    },
    "11887": {
      "jump": "o",
      "op": "JUMP"
    },
    "11888": {
      "op": "JUMPDEST"
    },
    "11889": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11891": {
      "op": "DUP1"
    },
    "11892": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11894": {
      "op": "DUP4"
    },
    "11895": {
      "op": "DUP6"
    },
    "11896": {
      "op": "SUB"
    },
    "11897": {
      "op": "SLT"
    },
    "11898": {
      "op": "ISZERO"
    },
    "11899": {
      "op": "PUSH2",
      "value": "0x2E83"
    },
    "11902": {
      "op": "JUMPI"
    },
    "11903": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11905": {
      "op": "DUP1"
    },
    "11906": {
      "op": "REVERT"
    },
    "11907": {
      "op": "JUMPDEST"
    },
    "11908": {
      "op": "PUSH2",
      "value": "0x2E8C"
    },
    "11911": {
      "op": "DUP4"
    },
    "11912": {
      "op": "PUSH2",
      "value": "0x2A96"
    },
    "11915": {
      "jump": "i",
      "op": "JUMP"
    },
    "11916": {
      "op": "JUMPDEST"
    },
    "11917": {
      "op": "SWAP2"
    },
    "11918": {
      "op": "POP"
    },
    "11919": {
      "op": "PUSH2",
      "value": "0x2E9A"
    },
    "11922": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11924": {
      "op": "DUP5"
    },
    "11925": {
      "op": "ADD"
    },
    "11926": {
      "op": "PUSH2",
      "value": "0x2A96"
    },
    "11929": {
      "jump": "i",
      "op": "JUMP"
    },
    "11930": {
      "op": "JUMPDEST"
    },
    "11931": {
      "op": "SWAP1"
    },
    "11932": {
      "op": "POP"
    },
    "11933": {
      "op": "SWAP3"
    },
    "11934": {
      "op": "POP"
    },
    "11935": {
      "op": "SWAP3"
    },
    "11936": {
      "op": "SWAP1"
    },
    "11937": {
      "op": "POP"
    },
    "11938": {
      "jump": "o",
      "op": "JUMP"
    },
    "11939": {
      "op": "JUMPDEST"
    },
    "11940": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11942": {
      "op": "DUP2"
    },
    "11943": {
      "op": "MLOAD"
    },
    "11944": {
      "op": "PUSH2",
      "value": "0x2EB5"
    },
    "11947": {
      "op": "DUP2"
    },
    "11948": {
      "op": "DUP6"
    },
    "11949": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11951": {
      "op": "DUP7"
    },
    "11952": {
      "op": "ADD"
    },
    "11953": {
      "op": "PUSH2",
      "value": "0x2A12"
    },
    "11956": {
      "jump": "i",
      "op": "JUMP"
    },
    "11957": {
      "op": "JUMPDEST"
    },
    "11958": {
      "op": "SWAP3"
    },
    "11959": {
      "op": "SWAP1"
    },
    "11960": {
      "op": "SWAP3"
    },
    "11961": {
      "op": "ADD"
    },
    "11962": {
      "op": "SWAP3"
    },
    "11963": {
      "op": "SWAP2"
    },
    "11964": {
      "op": "POP"
    },
    "11965": {
      "op": "POP"
    },
    "11966": {
      "jump": "o",
      "op": "JUMP"
    },
    "11967": {
      "op": "JUMPDEST"
    },
    "11968": {
      "op": "PUSH32",
      "value": "0x7B226465736372697074696F6E223A202257697A61726441726D792200000000"
    },
    "12001": {
      "op": "DUP2"
    },
    "12002": {
      "op": "MSTORE"
    },
    "12003": {
      "op": "PUSH32",
      "value": "0x2C202265787465726E616C5F75726C223A202268747470733A2F2F77697A6172"
    },
    "12036": {
      "op": "PUSH1",
      "value": "0x1C"
    },
    "12038": {
      "op": "DUP3"
    },
    "12039": {
      "op": "ADD"
    },
    "12040": {
      "op": "MSTORE"
    },
    "12041": {
      "op": "PUSH32",
      "value": "0x6461726D794E46542E636F6D20286F7220736F6D657468696E67206C696B6520"
    },
    "12074": {
      "op": "PUSH1",
      "value": "0x3C"
    },
    "12076": {
      "op": "DUP3"
    },
    "12077": {
      "op": "ADD"
    },
    "12078": {
      "op": "MSTORE"
    },
    "12079": {
      "op": "PUSH6",
      "value": "0x3A3434B99491"
    },
    "12086": {
      "op": "PUSH1",
      "value": "0xD1"
    },
    "12088": {
      "op": "SHL"
    },
    "12089": {
      "op": "PUSH1",
      "value": "0x5C"
    },
    "12091": {
      "op": "DUP3"
    },
    "12092": {
      "op": "ADD"
    },
    "12093": {
      "op": "MSTORE"
    },
    "12094": {
      "op": "PUSH12",
      "value": "0x16101134B6B0B3B2911D1011"
    },
    "12107": {
      "op": "PUSH1",
      "value": "0xA1"
    },
    "12109": {
      "op": "SHL"
    },
    "12110": {
      "op": "PUSH1",
      "value": "0x62"
    },
    "12112": {
      "op": "DUP3"
    },
    "12113": {
      "op": "ADD"
    },
    "12114": {
      "op": "MSTORE"
    },
    "12115": {
      "op": "DUP3"
    },
    "12116": {
      "op": "MLOAD"
    },
    "12117": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12119": {
      "op": "SWAP1"
    },
    "12120": {
      "op": "PUSH2",
      "value": "0x2F68"
    },
    "12123": {
      "op": "DUP2"
    },
    "12124": {
      "op": "PUSH1",
      "value": "0x6E"
    },
    "12126": {
      "op": "DUP6"
    },
    "12127": {
      "op": "ADD"
    },
    "12128": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12130": {
      "op": "DUP9"
    },
    "12131": {
      "op": "ADD"
    },
    "12132": {
      "op": "PUSH2",
      "value": "0x2A12"
    },
    "12135": {
      "jump": "i",
      "op": "JUMP"
    },
    "12136": {
      "op": "JUMPDEST"
    },
    "12137": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "12139": {
      "op": "PUSH1",
      "value": "0xF9"
    },
    "12141": {
      "op": "SHL"
    },
    "12142": {
      "op": "PUSH1",
      "value": "0x6E"
    },
    "12144": {
      "op": "SWAP2"
    },
    "12145": {
      "op": "DUP5"
    },
    "12146": {
      "op": "ADD"
    },
    "12147": {
      "op": "SWAP2"
    },
    "12148": {
      "op": "DUP3"
    },
    "12149": {
      "op": "ADD"
    },
    "12150": {
      "op": "MSTORE"
    },
    "12151": {
      "op": "PUSH18",
      "value": "0x1610113730B6B2911D10112BB4BD30B93211"
    },
    "12170": {
      "op": "PUSH1",
      "value": "0x71"
    },
    "12172": {
      "op": "SHL"
    },
    "12173": {
      "op": "PUSH1",
      "value": "0x6F"
    },
    "12175": {
      "op": "DUP3"
    },
    "12176": {
      "op": "ADD"
    },
    "12177": {
      "op": "MSTORE"
    },
    "12178": {
      "op": "PUSH32",
      "value": "0x2C202261747472696275746573223A205B7B22646973706C61795F7479706522"
    },
    "12211": {
      "op": "PUSH1",
      "value": "0x81"
    },
    "12213": {
      "op": "DUP3"
    },
    "12214": {
      "op": "ADD"
    },
    "12215": {
      "op": "MSTORE"
    },
    "12216": {
      "op": "PUSH32",
      "value": "0x3A20226E756D626572222C202274726169745F74797065223A20226C6576656C"
    },
    "12249": {
      "op": "PUSH1",
      "value": "0xA1"
    },
    "12251": {
      "op": "DUP3"
    },
    "12252": {
      "op": "ADD"
    },
    "12253": {
      "op": "MSTORE"
    },
    "12254": {
      "op": "PUSH12",
      "value": "0x111610113B30B63AB2911D1"
    },
    "12267": {
      "op": "PUSH1",
      "value": "0xA5"
    },
    "12269": {
      "op": "SHL"
    },
    "12270": {
      "op": "PUSH1",
      "value": "0xC1"
    },
    "12272": {
      "op": "DUP3"
    },
    "12273": {
      "op": "ADD"
    },
    "12274": {
      "op": "MSTORE"
    },
    "12275": {
      "op": "PUSH2",
      "value": "0x3010"
    },
    "12278": {
      "op": "PUSH2",
      "value": "0x3002"
    },
    "12281": {
      "op": "PUSH1",
      "value": "0xCD"
    },
    "12283": {
      "op": "DUP4"
    },
    "12284": {
      "op": "ADD"
    },
    "12285": {
      "op": "DUP7"
    },
    "12286": {
      "op": "PUSH2",
      "value": "0x2EA3"
    },
    "12289": {
      "jump": "i",
      "op": "JUMP"
    },
    "12290": {
      "op": "JUMPDEST"
    },
    "12291": {
      "op": "PUSH2",
      "value": "0x207D"
    },
    "12294": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "12296": {
      "op": "SHL"
    },
    "12297": {
      "op": "DUP2"
    },
    "12298": {
      "op": "MSTORE"
    },
    "12299": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "12301": {
      "op": "ADD"
    },
    "12302": {
      "op": "SWAP1"
    },
    "12303": {
      "op": "JUMP"
    },
    "12304": {
      "op": "JUMPDEST"
    },
    "12305": {
      "op": "SWAP6"
    },
    "12306": {
      "op": "SWAP5"
    },
    "12307": {
      "op": "POP"
    },
    "12308": {
      "op": "POP"
    },
    "12309": {
      "op": "POP"
    },
    "12310": {
      "op": "POP"
    },
    "12311": {
      "op": "POP"
    },
    "12312": {
      "jump": "o",
      "op": "JUMP"
    },
    "12313": {
      "op": "JUMPDEST"
    },
    "12314": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12316": {
      "op": "DUP6"
    },
    "12317": {
      "op": "MLOAD"
    },
    "12318": {
      "op": "PUSH2",
      "value": "0x302B"
    },
    "12321": {
      "op": "DUP2"
    },
    "12322": {
      "op": "DUP5"
    },
    "12323": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12325": {
      "op": "DUP11"
    },
    "12326": {
      "op": "ADD"
    },
    "12327": {
      "op": "PUSH2",
      "value": "0x2A12"
    },
    "12330": {
      "jump": "i",
      "op": "JUMP"
    },
    "12331": {
      "op": "JUMPDEST"
    },
    "12332": {
      "op": "DUP1"
    },
    "12333": {
      "op": "DUP4"
    },
    "12334": {
      "op": "ADD"
    },
    "12335": {
      "op": "SWAP1"
    },
    "12336": {
      "op": "POP"
    },
    "12337": {
      "op": "PUSH32",
      "value": "0x2C207B22646973706C61795F74797065223A20226E756D626572222C20227472"
    },
    "12370": {
      "op": "DUP1"
    },
    "12371": {
      "op": "DUP3"
    },
    "12372": {
      "op": "MSTORE"
    },
    "12373": {
      "op": "PUSH32",
      "value": "0x6169745F74797065223A20226870222C202276616C7565223A20000000000000"
    },
    "12406": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12408": {
      "op": "DUP4"
    },
    "12409": {
      "op": "ADD"
    },
    "12410": {
      "op": "MSTORE"
    },
    "12411": {
      "op": "DUP7"
    },
    "12412": {
      "op": "MLOAD"
    },
    "12413": {
      "op": "PUSH2",
      "value": "0x308D"
    },
    "12416": {
      "op": "DUP2"
    },
    "12417": {
      "op": "PUSH1",
      "value": "0x3A"
    },
    "12419": {
      "op": "DUP6"
    },
    "12420": {
      "op": "ADD"
    },
    "12421": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12423": {
      "op": "DUP12"
    },
    "12424": {
      "op": "ADD"
    },
    "12425": {
      "op": "PUSH2",
      "value": "0x2A12"
    },
    "12428": {
      "jump": "i",
      "op": "JUMP"
    },
    "12429": {
      "op": "JUMPDEST"
    },
    "12430": {
      "op": "PUSH2",
      "value": "0x207D"
    },
    "12433": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "12435": {
      "op": "SHL"
    },
    "12436": {
      "op": "PUSH1",
      "value": "0x3A"
    },
    "12438": {
      "op": "SWAP4"
    },
    "12439": {
      "op": "SWAP1"
    },
    "12440": {
      "op": "SWAP2"
    },
    "12441": {
      "op": "ADD"
    },
    "12442": {
      "op": "SWAP3"
    },
    "12443": {
      "op": "DUP4"
    },
    "12444": {
      "op": "ADD"
    },
    "12445": {
      "op": "DUP2"
    },
    "12446": {
      "op": "SWAP1"
    },
    "12447": {
      "op": "MSTORE"
    },
    "12448": {
      "op": "PUSH1",
      "value": "0x3C"
    },
    "12450": {
      "op": "DUP4"
    },
    "12451": {
      "op": "ADD"
    },
    "12452": {
      "op": "DUP3"
    },
    "12453": {
      "op": "SWAP1"
    },
    "12454": {
      "op": "MSTORE"
    },
    "12455": {
      "op": "PUSH32",
      "value": "0x6169745F74797065223A20226D61676963616C20706F776572222C202276616C"
    },
    "12488": {
      "op": "PUSH1",
      "value": "0x5C"
    },
    "12490": {
      "op": "DUP5"
    },
    "12491": {
      "op": "ADD"
    },
    "12492": {
      "op": "MSTORE"
    },
    "12493": {
      "op": "PUSH5",
      "value": "0x3AB2911D1"
    },
    "12499": {
      "op": "PUSH1",
      "value": "0xDD"
    },
    "12501": {
      "op": "SHL"
    },
    "12502": {
      "op": "PUSH1",
      "value": "0x7C"
    },
    "12504": {
      "op": "DUP5"
    },
    "12505": {
      "op": "ADD"
    },
    "12506": {
      "op": "MSTORE"
    },
    "12507": {
      "op": "DUP7"
    },
    "12508": {
      "op": "MLOAD"
    },
    "12509": {
      "op": "PUSH2",
      "value": "0x30ED"
    },
    "12512": {
      "op": "DUP2"
    },
    "12513": {
      "op": "PUSH1",
      "value": "0x81"
    },
    "12515": {
      "op": "DUP7"
    },
    "12516": {
      "op": "ADD"
    },
    "12517": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12519": {
      "op": "DUP12"
    },
    "12520": {
      "op": "ADD"
    },
    "12521": {
      "op": "PUSH2",
      "value": "0x2A12"
    },
    "12524": {
      "jump": "i",
      "op": "JUMP"
    },
    "12525": {
      "op": "JUMPDEST"
    },
    "12526": {
      "op": "PUSH1",
      "value": "0x81"
    },
    "12528": {
      "op": "SWAP4"
    },
    "12529": {
      "op": "ADD"
    },
    "12530": {
      "op": "SWAP3"
    },
    "12531": {
      "op": "DUP4"
    },
    "12532": {
      "op": "ADD"
    },
    "12533": {
      "op": "MSTORE"
    },
    "12534": {
      "op": "PUSH1",
      "value": "0x83"
    },
    "12536": {
      "op": "DUP3"
    },
    "12537": {
      "op": "ADD"
    },
    "12538": {
      "op": "MSTORE"
    },
    "12539": {
      "op": "PUSH32",
      "value": "0x6169745F74797065223A20226D61676963616C20646566656E7365222C202276"
    },
    "12572": {
      "op": "PUSH1",
      "value": "0xA3"
    },
    "12574": {
      "op": "DUP3"
    },
    "12575": {
      "op": "ADD"
    },
    "12576": {
      "op": "MSTORE"
    },
    "12577": {
      "op": "PUSH7",
      "value": "0x30B63AB2911D1"
    },
    "12585": {
      "op": "PUSH1",
      "value": "0xCD"
    },
    "12587": {
      "op": "SHL"
    },
    "12588": {
      "op": "PUSH1",
      "value": "0xC3"
    },
    "12590": {
      "op": "DUP3"
    },
    "12591": {
      "op": "ADD"
    },
    "12592": {
      "op": "MSTORE"
    },
    "12593": {
      "op": "PUSH2",
      "value": "0x3140"
    },
    "12596": {
      "op": "PUSH2",
      "value": "0x3002"
    },
    "12599": {
      "op": "PUSH1",
      "value": "0xCA"
    },
    "12601": {
      "op": "DUP4"
    },
    "12602": {
      "op": "ADD"
    },
    "12603": {
      "op": "DUP7"
    },
    "12604": {
      "op": "PUSH2",
      "value": "0x2EA3"
    },
    "12607": {
      "jump": "i",
      "op": "JUMP"
    },
    "12608": {
      "op": "JUMPDEST"
    },
    "12609": {
      "op": "SWAP8"
    },
    "12610": {
      "op": "SWAP7"
    },
    "12611": {
      "op": "POP"
    },
    "12612": {
      "op": "POP"
    },
    "12613": {
      "op": "POP"
    },
    "12614": {
      "op": "POP"
    },
    "12615": {
      "op": "POP"
    },
    "12616": {
      "op": "POP"
    },
    "12617": {
      "op": "POP"
    },
    "12618": {
      "jump": "o",
      "op": "JUMP"
    },
    "12619": {
      "op": "JUMPDEST"
    },
    "12620": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12622": {
      "op": "DUP5"
    },
    "12623": {
      "op": "MLOAD"
    },
    "12624": {
      "op": "PUSH2",
      "value": "0x315D"
    },
    "12627": {
      "op": "DUP2"
    },
    "12628": {
      "op": "DUP5"
    },
    "12629": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12631": {
      "op": "DUP10"
    },
    "12632": {
      "op": "ADD"
    },
    "12633": {
      "op": "PUSH2",
      "value": "0x2A12"
    },
    "12636": {
      "jump": "i",
      "op": "JUMP"
    },
    "12637": {
      "op": "JUMPDEST"
    },
    "12638": {
      "op": "DUP1"
    },
    "12639": {
      "op": "DUP4"
    },
    "12640": {
      "op": "ADD"
    },
    "12641": {
      "op": "SWAP1"
    },
    "12642": {
      "op": "POP"
    },
    "12643": {
      "op": "PUSH32",
      "value": "0x2C207B22646973706C61795F74797065223A20226E756D626572222C20227472"
    },
    "12676": {
      "op": "DUP1"
    },
    "12677": {
      "op": "DUP3"
    },
    "12678": {
      "op": "MSTORE"
    },
    "12679": {
      "op": "PUSH32",
      "value": "0x6169745F74797065223A20227370656564222C202276616C7565223A20000000"
    },
    "12712": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12714": {
      "op": "DUP4"
    },
    "12715": {
      "op": "ADD"
    },
    "12716": {
      "op": "MSTORE"
    },
    "12717": {
      "op": "DUP6"
    },
    "12718": {
      "op": "MLOAD"
    },
    "12719": {
      "op": "PUSH2",
      "value": "0x31BF"
    },
    "12722": {
      "op": "DUP2"
    },
    "12723": {
      "op": "PUSH1",
      "value": "0x3D"
    },
    "12725": {
      "op": "DUP6"
    },
    "12726": {
      "op": "ADD"
    },
    "12727": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12729": {
      "op": "DUP11"
    },
    "12730": {
      "op": "ADD"
    },
    "12731": {
      "op": "PUSH2",
      "value": "0x2A12"
    },
    "12734": {
      "jump": "i",
      "op": "JUMP"
    },
    "12735": {
      "op": "JUMPDEST"
    },
    "12736": {
      "op": "DUP1"
    },
    "12737": {
      "op": "DUP4"
    },
    "12738": {
      "op": "ADD"
    },
    "12739": {
      "op": "SWAP3"
    },
    "12740": {
      "op": "POP"
    },
    "12741": {
      "op": "POP"
    },
    "12742": {
      "op": "PUSH2",
      "value": "0x207D"
    },
    "12745": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "12747": {
      "op": "SHL"
    },
    "12748": {
      "op": "DUP1"
    },
    "12749": {
      "op": "PUSH1",
      "value": "0x3D"
    },
    "12751": {
      "op": "DUP5"
    },
    "12752": {
      "op": "ADD"
    },
    "12753": {
      "op": "MSTORE"
    },
    "12754": {
      "op": "DUP2"
    },
    "12755": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "12757": {
      "op": "DUP5"
    },
    "12758": {
      "op": "ADD"
    },
    "12759": {
      "op": "MSTORE"
    },
    "12760": {
      "op": "PUSH32",
      "value": "0x6169745F74797065223A202277696E73222C202276616C7565223A2000000000"
    },
    "12793": {
      "op": "PUSH1",
      "value": "0x5F"
    },
    "12795": {
      "op": "DUP5"
    },
    "12796": {
      "op": "ADD"
    },
    "12797": {
      "op": "MSTORE"
    },
    "12798": {
      "op": "DUP6"
    },
    "12799": {
      "op": "MLOAD"
    },
    "12800": {
      "op": "SWAP2"
    },
    "12801": {
      "op": "POP"
    },
    "12802": {
      "op": "PUSH2",
      "value": "0x3212"
    },
    "12805": {
      "op": "DUP3"
    },
    "12806": {
      "op": "PUSH1",
      "value": "0x7B"
    },
    "12808": {
      "op": "DUP6"
    },
    "12809": {
      "op": "ADD"
    },
    "12810": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12812": {
      "op": "DUP10"
    },
    "12813": {
      "op": "ADD"
    },
    "12814": {
      "op": "PUSH2",
      "value": "0x2A12"
    },
    "12817": {
      "jump": "i",
      "op": "JUMP"
    },
    "12818": {
      "op": "JUMPDEST"
    },
    "12819": {
      "op": "PUSH1",
      "value": "0x7B"
    },
    "12821": {
      "op": "SWAP3"
    },
    "12822": {
      "op": "SWAP1"
    },
    "12823": {
      "op": "SWAP2"
    },
    "12824": {
      "op": "ADD"
    },
    "12825": {
      "op": "SWAP2"
    },
    "12826": {
      "op": "DUP3"
    },
    "12827": {
      "op": "ADD"
    },
    "12828": {
      "op": "MSTORE"
    },
    "12829": {
      "op": "PUSH1",
      "value": "0x7D"
    },
    "12831": {
      "op": "ADD"
    },
    "12832": {
      "op": "SWAP6"
    },
    "12833": {
      "op": "SWAP5"
    },
    "12834": {
      "op": "POP"
    },
    "12835": {
      "op": "POP"
    },
    "12836": {
      "op": "POP"
    },
    "12837": {
      "op": "POP"
    },
    "12838": {
      "op": "POP"
    },
    "12839": {
      "jump": "o",
      "op": "JUMP"
    },
    "12840": {
      "op": "JUMPDEST"
    },
    "12841": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12843": {
      "op": "DUP6"
    },
    "12844": {
      "op": "MLOAD"
    },
    "12845": {
      "op": "PUSH2",
      "value": "0x323A"
    },
    "12848": {
      "op": "DUP2"
    },
    "12849": {
      "op": "DUP5"
    },
    "12850": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12852": {
      "op": "DUP11"
    },
    "12853": {
      "op": "ADD"
    },
    "12854": {
      "op": "PUSH2",
      "value": "0x2A12"
    },
    "12857": {
      "jump": "i",
      "op": "JUMP"
    },
    "12858": {
      "op": "JUMPDEST"
    },
    "12859": {
      "op": "DUP1"
    },
    "12860": {
      "op": "DUP4"
    },
    "12861": {
      "op": "ADD"
    },
    "12862": {
      "op": "SWAP1"
    },
    "12863": {
      "op": "POP"
    },
    "12864": {
      "op": "PUSH32",
      "value": "0x2C207B22646973706C61795F74797065223A20226E756D626572222C20227472"
    },
    "12897": {
      "op": "DUP1"
    },
    "12898": {
      "op": "DUP3"
    },
    "12899": {
      "op": "MSTORE"
    },
    "12900": {
      "op": "PUSH32",
      "value": "0x6169745F74797065223A20226C6F73736573222C202276616C7565223A200000"
    },
    "12933": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12935": {
      "op": "DUP4"
    },
    "12936": {
      "op": "ADD"
    },
    "12937": {
      "op": "MSTORE"
    },
    "12938": {
      "op": "DUP7"
    },
    "12939": {
      "op": "MLOAD"
    },
    "12940": {
      "op": "PUSH2",
      "value": "0x329C"
    },
    "12943": {
      "op": "DUP2"
    },
    "12944": {
      "op": "PUSH1",
      "value": "0x3E"
    },
    "12946": {
      "op": "DUP6"
    },
    "12947": {
      "op": "ADD"
    },
    "12948": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12950": {
      "op": "DUP12"
    },
    "12951": {
      "op": "ADD"
    },
    "12952": {
      "op": "PUSH2",
      "value": "0x2A12"
    },
    "12955": {
      "jump": "i",
      "op": "JUMP"
    },
    "12956": {
      "op": "JUMPDEST"
    },
    "12957": {
      "op": "DUP1"
    },
    "12958": {
      "op": "DUP4"
    },
    "12959": {
      "op": "ADD"
    },
    "12960": {
      "op": "SWAP3"
    },
    "12961": {
      "op": "POP"
    },
    "12962": {
      "op": "POP"
    },
    "12963": {
      "op": "PUSH2",
      "value": "0x207D"
    },
    "12966": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "12968": {
      "op": "SHL"
    },
    "12969": {
      "op": "DUP1"
    },
    "12970": {
      "op": "PUSH1",
      "value": "0x3E"
    },
    "12972": {
      "op": "DUP5"
    },
    "12973": {
      "op": "ADD"
    },
    "12974": {
      "op": "MSTORE"
    },
    "12975": {
      "op": "DUP2"
    },
    "12976": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12978": {
      "op": "DUP5"
    },
    "12979": {
      "op": "ADD"
    },
    "12980": {
      "op": "MSTORE"
    },
    "12981": {
      "op": "PUSH32",
      "value": "0x6169745F74797065223A2022626174746C6573222C202276616C7565223A2000"
    },
    "13014": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "13016": {
      "op": "DUP5"
    },
    "13017": {
      "op": "ADD"
    },
    "13018": {
      "op": "MSTORE"
    },
    "13019": {
      "op": "DUP7"
    },
    "13020": {
      "op": "MLOAD"
    },
    "13021": {
      "op": "PUSH2",
      "value": "0x32ED"
    },
    "13024": {
      "op": "DUP2"
    },
    "13025": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "13027": {
      "op": "DUP7"
    },
    "13028": {
      "op": "ADD"
    },
    "13029": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13031": {
      "op": "DUP12"
    },
    "13032": {
      "op": "ADD"
    },
    "13033": {
      "op": "PUSH2",
      "value": "0x2A12"
    },
    "13036": {
      "jump": "i",
      "op": "JUMP"
    },
    "13037": {
      "op": "JUMPDEST"
    },
    "13038": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "13040": {
      "op": "SWAP4"
    },
    "13041": {
      "op": "ADD"
    },
    "13042": {
      "op": "SWAP3"
    },
    "13043": {
      "op": "DUP4"
    },
    "13044": {
      "op": "ADD"
    },
    "13045": {
      "op": "MSTORE"
    },
    "13046": {
      "op": "PUSH1",
      "value": "0x81"
    },
    "13048": {
      "op": "DUP3"
    },
    "13049": {
      "op": "ADD"
    },
    "13050": {
      "op": "MSTORE"
    },
    "13051": {
      "op": "PUSH32",
      "value": "0x6169745F74797065223A2022746F6B656E73436C61696D6564222C202276616C"
    },
    "13084": {
      "op": "PUSH1",
      "value": "0xA1"
    },
    "13086": {
      "op": "DUP3"
    },
    "13087": {
      "op": "ADD"
    },
    "13088": {
      "op": "MSTORE"
    },
    "13089": {
      "op": "PUSH5",
      "value": "0x3AB2911D1"
    },
    "13095": {
      "op": "PUSH1",
      "value": "0xDD"
    },
    "13097": {
      "op": "SHL"
    },
    "13098": {
      "op": "PUSH1",
      "value": "0xC1"
    },
    "13100": {
      "op": "DUP3"
    },
    "13101": {
      "op": "ADD"
    },
    "13102": {
      "op": "MSTORE"
    },
    "13103": {
      "op": "PUSH2",
      "value": "0x3140"
    },
    "13106": {
      "op": "PUSH2",
      "value": "0x3002"
    },
    "13109": {
      "op": "PUSH1",
      "value": "0xC6"
    },
    "13111": {
      "op": "DUP4"
    },
    "13112": {
      "op": "ADD"
    },
    "13113": {
      "op": "DUP7"
    },
    "13114": {
      "op": "PUSH2",
      "value": "0x2EA3"
    },
    "13117": {
      "jump": "i",
      "op": "JUMP"
    },
    "13118": {
      "op": "JUMPDEST"
    },
    "13119": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13121": {
      "op": "DUP3"
    },
    "13122": {
      "op": "MLOAD"
    },
    "13123": {
      "op": "PUSH2",
      "value": "0x3350"
    },
    "13126": {
      "op": "DUP2"
    },
    "13127": {
      "op": "DUP5"
    },
    "13128": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13130": {
      "op": "DUP8"
    },
    "13131": {
      "op": "ADD"
    },
    "13132": {
      "op": "PUSH2",
      "value": "0x2A12"
    },
    "13135": {
      "jump": "i",
      "op": "JUMP"
    },
    "13136": {
      "op": "JUMPDEST"
    },
    "13137": {
      "op": "PUSH1",
      "value": "0x5D"
    },
    "13139": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "13141": {
      "op": "SHL"
    },
    "13142": {
      "op": "SWAP3"
    },
    "13143": {
      "op": "ADD"
    },
    "13144": {
      "op": "SWAP2"
    },
    "13145": {
      "op": "DUP3"
    },
    "13146": {
      "op": "MSTORE"
    },
    "13147": {
      "op": "POP"
    },
    "13148": {
      "op": "PUSH1",
      "value": "0x7D"
    },
    "13150": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "13152": {
      "op": "SHL"
    },
    "13153": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13155": {
      "op": "DUP3"
    },
    "13156": {
      "op": "ADD"
    },
    "13157": {
      "op": "MSTORE"
    },
    "13158": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "13160": {
      "op": "ADD"
    },
    "13161": {
      "op": "SWAP2"
    },
    "13162": {
      "op": "SWAP1"
    },
    "13163": {
      "op": "POP"
    },
    "13164": {
      "jump": "o",
      "op": "JUMP"
    },
    "13165": {
      "op": "JUMPDEST"
    },
    "13166": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "13171": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "13173": {
      "op": "SHL"
    },
    "13174": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13176": {
      "op": "MSTORE"
    },
    "13177": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "13179": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "13181": {
      "op": "MSTORE"
    },
    "13182": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "13184": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13186": {
      "op": "REVERT"
    },
    "13187": {
      "op": "JUMPDEST"
    },
    "13188": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13190": {
      "op": "DUP3"
    },
    "13191": {
      "op": "DUP3"
    },
    "13192": {
      "op": "LT"
    },
    "13193": {
      "op": "ISZERO"
    },
    "13194": {
      "op": "PUSH2",
      "value": "0x3395"
    },
    "13197": {
      "op": "JUMPI"
    },
    "13198": {
      "op": "PUSH2",
      "value": "0x3395"
    },
    "13201": {
      "op": "PUSH2",
      "value": "0x336D"
    },
    "13204": {
      "jump": "i",
      "op": "JUMP"
    },
    "13205": {
      "op": "JUMPDEST"
    },
    "13206": {
      "op": "POP"
    },
    "13207": {
      "op": "SUB"
    },
    "13208": {
      "op": "SWAP1"
    },
    "13209": {
      "jump": "o",
      "op": "JUMP"
    },
    "13210": {
      "op": "JUMPDEST"
    },
    "13211": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "13216": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "13218": {
      "op": "SHL"
    },
    "13219": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13221": {
      "op": "MSTORE"
    },
    "13222": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "13224": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "13226": {
      "op": "MSTORE"
    },
    "13227": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "13229": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13231": {
      "op": "REVERT"
    },
    "13232": {
      "op": "JUMPDEST"
    },
    "13233": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13235": {
      "op": "DUP3"
    },
    "13236": {
      "op": "PUSH2",
      "value": "0x33BF"
    },
    "13239": {
      "op": "JUMPI"
    },
    "13240": {
      "op": "PUSH2",
      "value": "0x33BF"
    },
    "13243": {
      "op": "PUSH2",
      "value": "0x339A"
    },
    "13246": {
      "jump": "i",
      "op": "JUMP"
    },
    "13247": {
      "op": "JUMPDEST"
    },
    "13248": {
      "op": "POP"
    },
    "13249": {
      "op": "DIV"
    },
    "13250": {
      "op": "SWAP1"
    },
    "13251": {
      "jump": "o",
      "op": "JUMP"
    },
    "13252": {
      "op": "JUMPDEST"
    },
    "13253": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13255": {
      "op": "DUP2"
    },
    "13256": {
      "op": "DUP2"
    },
    "13257": {
      "op": "SHR"
    },
    "13258": {
      "op": "SWAP1"
    },
    "13259": {
      "op": "DUP3"
    },
    "13260": {
      "op": "AND"
    },
    "13261": {
      "op": "DUP1"
    },
    "13262": {
      "op": "PUSH2",
      "value": "0x33D8"
    },
    "13265": {
      "op": "JUMPI"
    },
    "13266": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "13268": {
      "op": "DUP3"
    },
    "13269": {
      "op": "AND"
    },
    "13270": {
      "op": "SWAP2"
    },
    "13271": {
      "op": "POP"
    },
    "13272": {
      "op": "JUMPDEST"
    },
    "13273": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13275": {
      "op": "DUP3"
    },
    "13276": {
      "op": "LT"
    },
    "13277": {
      "op": "DUP2"
    },
    "13278": {
      "op": "SUB"
    },
    "13279": {
      "op": "PUSH2",
      "value": "0x33F8"
    },
    "13282": {
      "op": "JUMPI"
    },
    "13283": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "13288": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "13290": {
      "op": "SHL"
    },
    "13291": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13293": {
      "op": "MSTORE"
    },
    "13294": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "13296": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "13298": {
      "op": "MSTORE"
    },
    "13299": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "13301": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13303": {
      "op": "REVERT"
    },
    "13304": {
      "op": "JUMPDEST"
    },
    "13305": {
      "op": "POP"
    },
    "13306": {
      "op": "SWAP2"
    },
    "13307": {
      "op": "SWAP1"
    },
    "13308": {
      "op": "POP"
    },
    "13309": {
      "jump": "o",
      "op": "JUMP"
    },
    "13310": {
      "op": "JUMPDEST"
    },
    "13311": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13313": {
      "op": "DUP3"
    },
    "13314": {
      "op": "PUSH2",
      "value": "0x340D"
    },
    "13317": {
      "op": "JUMPI"
    },
    "13318": {
      "op": "PUSH2",
      "value": "0x340D"
    },
    "13321": {
      "op": "PUSH2",
      "value": "0x339A"
    },
    "13324": {
      "jump": "i",
      "op": "JUMP"
    },
    "13325": {
      "op": "JUMPDEST"
    },
    "13326": {
      "op": "POP"
    },
    "13327": {
      "op": "MOD"
    },
    "13328": {
      "op": "SWAP1"
    },
    "13329": {
      "jump": "o",
      "op": "JUMP"
    },
    "13330": {
      "op": "JUMPDEST"
    },
    "13331": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13333": {
      "op": "DUP3"
    },
    "13334": {
      "op": "NOT"
    },
    "13335": {
      "op": "DUP3"
    },
    "13336": {
      "op": "GT"
    },
    "13337": {
      "op": "ISZERO"
    },
    "13338": {
      "op": "PUSH2",
      "value": "0x3425"
    },
    "13341": {
      "op": "JUMPI"
    },
    "13342": {
      "op": "PUSH2",
      "value": "0x3425"
    },
    "13345": {
      "op": "PUSH2",
      "value": "0x336D"
    },
    "13348": {
      "jump": "i",
      "op": "JUMP"
    },
    "13349": {
      "op": "JUMPDEST"
    },
    "13350": {
      "op": "POP"
    },
    "13351": {
      "op": "ADD"
    },
    "13352": {
      "op": "SWAP1"
    },
    "13353": {
      "jump": "o",
      "op": "JUMP"
    },
    "13354": {
      "op": "JUMPDEST"
    },
    "13355": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13357": {
      "op": "DUP2"
    },
    "13358": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13360": {
      "op": "NOT"
    },
    "13361": {
      "op": "DIV"
    },
    "13362": {
      "op": "DUP4"
    },
    "13363": {
      "op": "GT"
    },
    "13364": {
      "op": "DUP3"
    },
    "13365": {
      "op": "ISZERO"
    },
    "13366": {
      "op": "ISZERO"
    },
    "13367": {
      "op": "AND"
    },
    "13368": {
      "op": "ISZERO"
    },
    "13369": {
      "op": "PUSH2",
      "value": "0x3444"
    },
    "13372": {
      "op": "JUMPI"
    },
    "13373": {
      "op": "PUSH2",
      "value": "0x3444"
    },
    "13376": {
      "op": "PUSH2",
      "value": "0x336D"
    },
    "13379": {
      "jump": "i",
      "op": "JUMP"
    },
    "13380": {
      "op": "JUMPDEST"
    },
    "13381": {
      "op": "POP"
    },
    "13382": {
      "op": "MUL"
    },
    "13383": {
      "op": "SWAP1"
    },
    "13384": {
      "jump": "o",
      "op": "JUMP"
    },
    "13385": {
      "op": "JUMPDEST"
    },
    "13386": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13388": {
      "op": "DUP1"
    },
    "13389": {
      "op": "DUP3"
    },
    "13390": {
      "op": "MSTORE"
    },
    "13391": {
      "op": "PUSH1",
      "value": "0x31"
    },
    "13393": {
      "op": "SWAP1"
    },
    "13394": {
      "op": "DUP3"
    },
    "13395": {
      "op": "ADD"
    },
    "13396": {
      "op": "MSTORE"
    },
    "13397": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E736665722063616C6C6572206973206E6F74206F"
    },
    "13430": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13432": {
      "op": "DUP3"
    },
    "13433": {
      "op": "ADD"
    },
    "13434": {
      "op": "MSTORE"
    },
    "13435": {
      "op": "PUSH17",
      "value": "0x1DDB995C881B9BDC88185C1C1C9BDD9959"
    },
    "13453": {
      "op": "PUSH1",
      "value": "0x7A"
    },
    "13455": {
      "op": "SHL"
    },
    "13456": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "13458": {
      "op": "DUP3"
    },
    "13459": {
      "op": "ADD"
    },
    "13460": {
      "op": "MSTORE"
    },
    "13461": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "13463": {
      "op": "ADD"
    },
    "13464": {
      "op": "SWAP1"
    },
    "13465": {
      "jump": "o",
      "op": "JUMP"
    },
    "13466": {
      "op": "JUMPDEST"
    },
    "13467": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13469": {
      "op": "DUP1"
    },
    "13470": {
      "op": "DUP3"
    },
    "13471": {
      "op": "MSTORE"
    },
    "13472": {
      "op": "DUP2"
    },
    "13473": {
      "op": "DUP2"
    },
    "13474": {
      "op": "ADD"
    },
    "13475": {
      "op": "MSTORE"
    },
    "13476": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "13509": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13511": {
      "op": "DUP3"
    },
    "13512": {
      "op": "ADD"
    },
    "13513": {
      "op": "MSTORE"
    },
    "13514": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "13516": {
      "op": "ADD"
    },
    "13517": {
      "op": "SWAP1"
    },
    "13518": {
      "jump": "o",
      "op": "JUMP"
    },
    "13519": {
      "op": "JUMPDEST"
    },
    "13520": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "13522": {
      "op": "DUP3"
    },
    "13523": {
      "op": "GT"
    },
    "13524": {
      "op": "ISZERO"
    },
    "13525": {
      "op": "PUSH2",
      "value": "0xC85"
    },
    "13528": {
      "op": "JUMPI"
    },
    "13529": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13531": {
      "op": "DUP2"
    },
    "13532": {
      "op": "DUP2"
    },
    "13533": {
      "op": "MSTORE"
    },
    "13534": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13536": {
      "op": "DUP2"
    },
    "13537": {
      "op": "KECCAK256"
    },
    "13538": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "13540": {
      "op": "DUP6"
    },
    "13541": {
      "op": "ADD"
    },
    "13542": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "13544": {
      "op": "SHR"
    },
    "13545": {
      "op": "DUP2"
    },
    "13546": {
      "op": "ADD"
    },
    "13547": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13549": {
      "op": "DUP7"
    },
    "13550": {
      "op": "LT"
    },
    "13551": {
      "op": "ISZERO"
    },
    "13552": {
      "op": "PUSH2",
      "value": "0x34F6"
    },
    "13555": {
      "op": "JUMPI"
    },
    "13556": {
      "op": "POP"
    },
    "13557": {
      "op": "DUP1"
    },
    "13558": {
      "op": "JUMPDEST"
    },
    "13559": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "13561": {
      "op": "DUP6"
    },
    "13562": {
      "op": "ADD"
    },
    "13563": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "13565": {
      "op": "SHR"
    },
    "13566": {
      "op": "DUP3"
    },
    "13567": {
      "op": "ADD"
    },
    "13568": {
      "op": "SWAP2"
    },
    "13569": {
      "op": "POP"
    },
    "13570": {
      "op": "JUMPDEST"
    },
    "13571": {
      "op": "DUP2"
    },
    "13572": {
      "op": "DUP2"
    },
    "13573": {
      "op": "LT"
    },
    "13574": {
      "op": "ISZERO"
    },
    "13575": {
      "op": "PUSH2",
      "value": "0x3515"
    },
    "13578": {
      "op": "JUMPI"
    },
    "13579": {
      "op": "DUP3"
    },
    "13580": {
      "op": "DUP2"
    },
    "13581": {
      "op": "SSTORE"
    },
    "13582": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13584": {
      "op": "ADD"
    },
    "13585": {
      "op": "PUSH2",
      "value": "0x3502"
    },
    "13588": {
      "op": "JUMP"
    },
    "13589": {
      "op": "JUMPDEST"
    },
    "13590": {
      "op": "POP"
    },
    "13591": {
      "op": "POP"
    },
    "13592": {
      "op": "POP"
    },
    "13593": {
      "op": "POP"
    },
    "13594": {
      "op": "POP"
    },
    "13595": {
      "op": "POP"
    },
    "13596": {
      "jump": "o",
      "op": "JUMP"
    },
    "13597": {
      "op": "JUMPDEST"
    },
    "13598": {
      "op": "DUP2"
    },
    "13599": {
      "op": "MLOAD"
    },
    "13600": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "13609": {
      "op": "DUP2"
    },
    "13610": {
      "op": "GT"
    },
    "13611": {
      "op": "ISZERO"
    },
    "13612": {
      "op": "PUSH2",
      "value": "0x3537"
    },
    "13615": {
      "op": "JUMPI"
    },
    "13616": {
      "op": "PUSH2",
      "value": "0x3537"
    },
    "13619": {
      "op": "PUSH2",
      "value": "0x291F"
    },
    "13622": {
      "jump": "i",
      "op": "JUMP"
    },
    "13623": {
      "op": "JUMPDEST"
    },
    "13624": {
      "op": "PUSH2",
      "value": "0x354B"
    },
    "13627": {
      "op": "DUP2"
    },
    "13628": {
      "op": "PUSH2",
      "value": "0x3545"
    },
    "13631": {
      "op": "DUP5"
    },
    "13632": {
      "op": "SLOAD"
    },
    "13633": {
      "op": "PUSH2",
      "value": "0x33C4"
    },
    "13636": {
      "jump": "i",
      "op": "JUMP"
    },
    "13637": {
      "op": "JUMPDEST"
    },
    "13638": {
      "op": "DUP5"
    },
    "13639": {
      "op": "PUSH2",
      "value": "0x34CF"
    },
    "13642": {
      "jump": "i",
      "op": "JUMP"
    },
    "13643": {
      "op": "JUMPDEST"
    },
    "13644": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13646": {
      "op": "DUP1"
    },
    "13647": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "13649": {
      "op": "DUP4"
    },
    "13650": {
      "op": "GT"
    },
    "13651": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13653": {
      "op": "DUP2"
    },
    "13654": {
      "op": "EQ"
    },
    "13655": {
      "op": "PUSH2",
      "value": "0x3580"
    },
    "13658": {
      "op": "JUMPI"
    },
    "13659": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13661": {
      "op": "DUP5"
    },
    "13662": {
      "op": "ISZERO"
    },
    "13663": {
      "op": "PUSH2",
      "value": "0x3568"
    },
    "13666": {
      "op": "JUMPI"
    },
    "13667": {
      "op": "POP"
    },
    "13668": {
      "op": "DUP6"
    },
    "13669": {
      "op": "DUP4"
    },
    "13670": {
      "op": "ADD"
    },
    "13671": {
      "op": "MLOAD"
    },
    "13672": {
      "op": "JUMPDEST"
    },
    "13673": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13675": {
      "op": "NOT"
    },
    "13676": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "13678": {
      "op": "DUP7"
    },
    "13679": {
      "op": "SWAP1"
    },
    "13680": {
      "op": "SHL"
    },
    "13681": {
      "op": "SHR"
    },
    "13682": {
      "op": "NOT"
    },
    "13683": {
      "op": "AND"
    },
    "13684": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13686": {
      "op": "DUP6"
    },
    "13687": {
      "op": "SWAP1"
    },
    "13688": {
      "op": "SHL"
    },
    "13689": {
      "op": "OR"
    },
    "13690": {
      "op": "DUP6"
    },
    "13691": {
      "op": "SSTORE"
    },
    "13692": {
      "op": "PUSH2",
      "value": "0x3515"
    },
    "13695": {
      "op": "JUMP"
    },
    "13696": {
      "op": "JUMPDEST"
    },
    "13697": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13699": {
      "op": "DUP6"
    },
    "13700": {
      "op": "DUP2"
    },
    "13701": {
      "op": "MSTORE"
    },
    "13702": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13704": {
      "op": "DUP2"
    },
    "13705": {
      "op": "KECCAK256"
    },
    "13706": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "13708": {
      "op": "NOT"
    },
    "13709": {
      "op": "DUP7"
    },
    "13710": {
      "op": "AND"
    },
    "13711": {
      "op": "SWAP2"
    },
    "13712": {
      "op": "JUMPDEST"
    },
    "13713": {
      "op": "DUP3"
    },
    "13714": {
      "op": "DUP2"
    },
    "13715": {
      "op": "LT"
    },
    "13716": {
      "op": "ISZERO"
    },
    "13717": {
      "op": "PUSH2",
      "value": "0x35AF"
    },
    "13720": {
      "op": "JUMPI"
    },
    "13721": {
      "op": "DUP9"
    },
    "13722": {
      "op": "DUP7"
    },
    "13723": {
      "op": "ADD"
    },
    "13724": {
      "op": "MLOAD"
    },
    "13725": {
      "op": "DUP3"
    },
    "13726": {
      "op": "SSTORE"
    },
    "13727": {
      "op": "SWAP5"
    },
    "13728": {
      "op": "DUP5"
    },
    "13729": {
      "op": "ADD"
    },
    "13730": {
      "op": "SWAP5"
    },
    "13731": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13733": {
      "op": "SWAP1"
    },
    "13734": {
      "op": "SWAP2"
    },
    "13735": {
      "op": "ADD"
    },
    "13736": {
      "op": "SWAP1"
    },
    "13737": {
      "op": "DUP5"
    },
    "13738": {
      "op": "ADD"
    },
    "13739": {
      "op": "PUSH2",
      "value": "0x3590"
    },
    "13742": {
      "op": "JUMP"
    },
    "13743": {
      "op": "JUMPDEST"
    },
    "13744": {
      "op": "POP"
    },
    "13745": {
      "op": "DUP6"
    },
    "13746": {
      "op": "DUP3"
    },
    "13747": {
      "op": "LT"
    },
    "13748": {
      "op": "ISZERO"
    },
    "13749": {
      "op": "PUSH2",
      "value": "0x35CD"
    },
    "13752": {
      "op": "JUMPI"
    },
    "13753": {
      "op": "DUP8"
    },
    "13754": {
      "op": "DUP6"
    },
    "13755": {
      "op": "ADD"
    },
    "13756": {
      "op": "MLOAD"
    },
    "13757": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13759": {
      "op": "NOT"
    },
    "13760": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "13762": {
      "op": "DUP9"
    },
    "13763": {
      "op": "SWAP1"
    },
    "13764": {
      "op": "SHL"
    },
    "13765": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "13767": {
      "op": "AND"
    },
    "13768": {
      "op": "SHR"
    },
    "13769": {
      "op": "NOT"
    },
    "13770": {
      "op": "AND"
    },
    "13771": {
      "op": "DUP2"
    },
    "13772": {
      "op": "SSTORE"
    },
    "13773": {
      "op": "JUMPDEST"
    },
    "13774": {
      "op": "POP"
    },
    "13775": {
      "op": "POP"
    },
    "13776": {
      "op": "POP"
    },
    "13777": {
      "op": "POP"
    },
    "13778": {
      "op": "POP"
    },
    "13779": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13781": {
      "op": "SWAP1"
    },
    "13782": {
      "op": "DUP2"
    },
    "13783": {
      "op": "SHL"
    },
    "13784": {
      "op": "ADD"
    },
    "13785": {
      "op": "SWAP1"
    },
    "13786": {
      "op": "SSTORE"
    },
    "13787": {
      "op": "POP"
    },
    "13788": {
      "jump": "o",
      "op": "JUMP"
    },
    "13789": {
      "op": "JUMPDEST"
    },
    "13790": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "13795": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "13797": {
      "op": "SHL"
    },
    "13798": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13800": {
      "op": "MSTORE"
    },
    "13801": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "13803": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "13805": {
      "op": "MSTORE"
    },
    "13806": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "13808": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13810": {
      "op": "REVERT"
    },
    "13811": {
      "op": "JUMPDEST"
    },
    "13812": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13814": {
      "op": "DUP1"
    },
    "13815": {
      "op": "DUP5"
    },
    "13816": {
      "op": "SLOAD"
    },
    "13817": {
      "op": "PUSH2",
      "value": "0x3601"
    },
    "13820": {
      "op": "DUP2"
    },
    "13821": {
      "op": "PUSH2",
      "value": "0x33C4"
    },
    "13824": {
      "jump": "i",
      "op": "JUMP"
    },
    "13825": {
      "op": "JUMPDEST"
    },
    "13826": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13828": {
      "op": "DUP3"
    },
    "13829": {
      "op": "DUP2"
    },
    "13830": {
      "op": "AND"
    },
    "13831": {
      "op": "DUP1"
    },
    "13832": {
      "op": "ISZERO"
    },
    "13833": {
      "op": "PUSH2",
      "value": "0x3619"
    },
    "13836": {
      "op": "JUMPI"
    },
    "13837": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13839": {
      "op": "DUP2"
    },
    "13840": {
      "op": "EQ"
    },
    "13841": {
      "op": "PUSH2",
      "value": "0x362E"
    },
    "13844": {
      "op": "JUMPI"
    },
    "13845": {
      "op": "PUSH2",
      "value": "0x365D"
    },
    "13848": {
      "op": "JUMP"
    },
    "13849": {
      "op": "JUMPDEST"
    },
    "13850": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "13852": {
      "op": "NOT"
    },
    "13853": {
      "op": "DUP5"
    },
    "13854": {
      "op": "AND"
    },
    "13855": {
      "op": "DUP8"
    },
    "13856": {
      "op": "MSTORE"
    },
    "13857": {
      "op": "DUP3"
    },
    "13858": {
      "op": "ISZERO"
    },
    "13859": {
      "op": "ISZERO"
    },
    "13860": {
      "op": "DUP4"
    },
    "13861": {
      "op": "MUL"
    },
    "13862": {
      "op": "DUP8"
    },
    "13863": {
      "op": "ADD"
    },
    "13864": {
      "op": "SWAP5"
    },
    "13865": {
      "op": "POP"
    },
    "13866": {
      "op": "PUSH2",
      "value": "0x365D"
    },
    "13869": {
      "op": "JUMP"
    },
    "13870": {
      "op": "JUMPDEST"
    },
    "13871": {
      "op": "DUP9"
    },
    "13872": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13874": {
      "op": "MSTORE"
    },
    "13875": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13877": {
      "op": "DUP1"
    },
    "13878": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13880": {
      "op": "KECCAK256"
    },
    "13881": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13883": {
      "op": "JUMPDEST"
    },
    "13884": {
      "op": "DUP6"
    },
    "13885": {
      "op": "DUP2"
    },
    "13886": {
      "op": "LT"
    },
    "13887": {
      "op": "ISZERO"
    },
    "13888": {
      "op": "PUSH2",
      "value": "0x3654"
    },
    "13891": {
      "op": "JUMPI"
    },
    "13892": {
      "op": "DUP2"
    },
    "13893": {
      "op": "SLOAD"
    },
    "13894": {
      "op": "DUP11"
    },
    "13895": {
      "op": "DUP3"
    },
    "13896": {
      "op": "ADD"
    },
    "13897": {
      "op": "MSTORE"
    },
    "13898": {
      "op": "SWAP1"
    },
    "13899": {
      "op": "DUP5"
    },
    "13900": {
      "op": "ADD"
    },
    "13901": {
      "op": "SWAP1"
    },
    "13902": {
      "op": "DUP3"
    },
    "13903": {
      "op": "ADD"
    },
    "13904": {
      "op": "PUSH2",
      "value": "0x363B"
    },
    "13907": {
      "op": "JUMP"
    },
    "13908": {
      "op": "JUMPDEST"
    },
    "13909": {
      "op": "POP"
    },
    "13910": {
      "op": "POP"
    },
    "13911": {
      "op": "POP"
    },
    "13912": {
      "op": "DUP3"
    },
    "13913": {
      "op": "DUP8"
    },
    "13914": {
      "op": "ADD"
    },
    "13915": {
      "op": "SWAP5"
    },
    "13916": {
      "op": "POP"
    },
    "13917": {
      "op": "JUMPDEST"
    },
    "13918": {
      "op": "POP"
    },
    "13919": {
      "op": "POP"
    },
    "13920": {
      "op": "POP"
    },
    "13921": {
      "op": "POP"
    },
    "13922": {
      "op": "DUP4"
    },
    "13923": {
      "op": "MLOAD"
    },
    "13924": {
      "op": "PUSH2",
      "value": "0x3671"
    },
    "13927": {
      "op": "DUP2"
    },
    "13928": {
      "op": "DUP4"
    },
    "13929": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13931": {
      "op": "DUP9"
    },
    "13932": {
      "op": "ADD"
    },
    "13933": {
      "op": "PUSH2",
      "value": "0x2A12"
    },
    "13936": {
      "jump": "i",
      "op": "JUMP"
    },
    "13937": {
      "op": "JUMPDEST"
    },
    "13938": {
      "op": "PUSH4",
      "value": "0x2E6A7067"
    },
    "13943": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "13945": {
      "op": "SHL"
    },
    "13946": {
      "op": "SWAP2"
    },
    "13947": {
      "op": "ADD"
    },
    "13948": {
      "op": "SWAP1"
    },
    "13949": {
      "op": "DUP2"
    },
    "13950": {
      "op": "MSTORE"
    },
    "13951": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "13953": {
      "op": "ADD"
    },
    "13954": {
      "op": "SWAP5"
    },
    "13955": {
      "op": "SWAP4"
    },
    "13956": {
      "op": "POP"
    },
    "13957": {
      "op": "POP"
    },
    "13958": {
      "op": "POP"
    },
    "13959": {
      "op": "POP"
    },
    "13960": {
      "jump": "o",
      "op": "JUMP"
    },
    "13961": {
      "op": "JUMPDEST"
    },
    "13962": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13964": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13966": {
      "op": "DUP3"
    },
    "13967": {
      "op": "ADD"
    },
    "13968": {
      "op": "PUSH2",
      "value": "0x369B"
    },
    "13971": {
      "op": "JUMPI"
    },
    "13972": {
      "op": "PUSH2",
      "value": "0x369B"
    },
    "13975": {
      "op": "PUSH2",
      "value": "0x336D"
    },
    "13978": {
      "jump": "i",
      "op": "JUMP"
    },
    "13979": {
      "op": "JUMPDEST"
    },
    "13980": {
      "op": "POP"
    },
    "13981": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13983": {
      "op": "ADD"
    },
    "13984": {
      "op": "SWAP1"
    },
    "13985": {
      "jump": "o",
      "op": "JUMP"
    },
    "13986": {
      "op": "JUMPDEST"
    },
    "13987": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13989": {
      "op": "DUP1"
    },
    "13990": {
      "op": "DUP3"
    },
    "13991": {
      "op": "MSTORE"
    },
    "13992": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "13994": {
      "op": "SWAP1"
    },
    "13995": {
      "op": "DUP3"
    },
    "13996": {
      "op": "ADD"
    },
    "13997": {
      "op": "MSTORE"
    },
    "13998": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265"
    },
    "14031": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14033": {
      "op": "DUP3"
    },
    "14034": {
      "op": "ADD"
    },
    "14035": {
      "op": "MSTORE"
    },
    "14036": {
      "op": "PUSH18",
      "value": "0x31B2B4BB32B91034B6B83632B6B2B73A32B9"
    },
    "14055": {
      "op": "PUSH1",
      "value": "0x71"
    },
    "14057": {
      "op": "SHL"
    },
    "14058": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "14060": {
      "op": "DUP3"
    },
    "14061": {
      "op": "ADD"
    },
    "14062": {
      "op": "MSTORE"
    },
    "14063": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "14065": {
      "op": "ADD"
    },
    "14066": {
      "op": "SWAP1"
    },
    "14067": {
      "jump": "o",
      "op": "JUMP"
    },
    "14068": {
      "op": "JUMPDEST"
    },
    "14069": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14071": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14073": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14075": {
      "op": "SHL"
    },
    "14076": {
      "op": "SUB"
    },
    "14077": {
      "op": "DUP6"
    },
    "14078": {
      "op": "DUP2"
    },
    "14079": {
      "op": "AND"
    },
    "14080": {
      "op": "DUP3"
    },
    "14081": {
      "op": "MSTORE"
    },
    "14082": {
      "op": "DUP5"
    },
    "14083": {
      "op": "AND"
    },
    "14084": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14086": {
      "op": "DUP3"
    },
    "14087": {
      "op": "ADD"
    },
    "14088": {
      "op": "MSTORE"
    },
    "14089": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14091": {
      "op": "DUP2"
    },
    "14092": {
      "op": "ADD"
    },
    "14093": {
      "op": "DUP4"
    },
    "14094": {
      "op": "SWAP1"
    },
    "14095": {
      "op": "MSTORE"
    },
    "14096": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "14098": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "14100": {
      "op": "DUP3"
    },
    "14101": {
      "op": "ADD"
    },
    "14102": {
      "op": "DUP2"
    },
    "14103": {
      "op": "SWAP1"
    },
    "14104": {
      "op": "MSTORE"
    },
    "14105": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14107": {
      "op": "SWAP1"
    },
    "14108": {
      "op": "PUSH2",
      "value": "0x3727"
    },
    "14111": {
      "op": "SWAP1"
    },
    "14112": {
      "op": "DUP4"
    },
    "14113": {
      "op": "ADD"
    },
    "14114": {
      "op": "DUP5"
    },
    "14115": {
      "op": "PUSH2",
      "value": "0x2A3E"
    },
    "14118": {
      "jump": "i",
      "op": "JUMP"
    },
    "14119": {
      "op": "JUMPDEST"
    },
    "14120": {
      "op": "SWAP7"
    },
    "14121": {
      "op": "SWAP6"
    },
    "14122": {
      "op": "POP"
    },
    "14123": {
      "op": "POP"
    },
    "14124": {
      "op": "POP"
    },
    "14125": {
      "op": "POP"
    },
    "14126": {
      "op": "POP"
    },
    "14127": {
      "op": "POP"
    },
    "14128": {
      "jump": "o",
      "op": "JUMP"
    },
    "14129": {
      "op": "JUMPDEST"
    },
    "14130": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14132": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14134": {
      "op": "DUP3"
    },
    "14135": {
      "op": "DUP5"
    },
    "14136": {
      "op": "SUB"
    },
    "14137": {
      "op": "SLT"
    },
    "14138": {
      "op": "ISZERO"
    },
    "14139": {
      "op": "PUSH2",
      "value": "0x3743"
    },
    "14142": {
      "op": "JUMPI"
    },
    "14143": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14145": {
      "op": "DUP1"
    },
    "14146": {
      "op": "REVERT"
    },
    "14147": {
      "op": "JUMPDEST"
    },
    "14148": {
      "op": "DUP2"
    },
    "14149": {
      "op": "MLOAD"
    },
    "14150": {
      "op": "PUSH2",
      "value": "0xA42"
    },
    "14153": {
      "op": "DUP2"
    },
    "14154": {
      "op": "PUSH2",
      "value": "0x28EC"
    },
    "14157": {
      "jump": "i",
      "op": "JUMP"
    },
    "14158": {
      "op": "JUMPDEST"
    },
    "14159": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "14164": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "14166": {
      "op": "SHL"
    },
    "14167": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14169": {
      "op": "MSTORE"
    },
    "14170": {
      "op": "PUSH1",
      "value": "0x31"
    },
    "14172": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "14174": {
      "op": "MSTORE"
    },
    "14175": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "14177": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14179": {
      "op": "REVERT"
    }
  },
  "sha1": "92382bccc4f246b79c766627ed5040bd1ae1b9a6",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.15;\n\n//import \"./helpers/ERC721.sol\";\nimport \"./helpers/Ownable.sol\";\nimport \"./helpers/ERC721Enumerable.sol\";\nimport \"./libraries/Strings.sol\";\n\n//import \"OpenZeppelin/openzeppelin-contracts@4.6.0/contracts/token/ERC721/ERC721.sol\";\n//import \"estarriolvetch/ERC721Psi/contracts/ERC721Psi.sol\";\n\ncontract Wizards is ERC721Enumerable, Ownable {\n    // cull the herd and reduce to 1000?\n//    uint256 public totalSupply = 0;\n    mapping (uint256 => Stats) public tokenIdToStats;\n    address public battler; /// contract address to update stats\n    address public verifier; /// contract address to update stats\n\n    enum ELEMENT {FIRE, WIND, WATER, EARTH}\n    enum OUTCOME {LOSS, WIN, TIE, CAPTURE}\n\n    // note -- stack gets too deep if add more\n    struct Stats { // todo -- reduce uint amount\n        uint256 level;\n        uint256 hp;\n        uint256 magicalPower;\n        uint256 magicalDefense;\n        uint256 speed;\n        uint256 wins;\n        uint256 losses;\n        uint256 battles;\n        uint256 tokensClaimed;\n        uint256 goodness;\n        uint256 badness;\n        uint256 initiationTimestamp; // 0 if uninitiated\n        uint256 protectedUntilTimestamp; // after this timestamp, NFT can be crushed\n        ELEMENT element;\n    }\n\n    struct ContractSettings { // todo refine\n        uint256 mintCost;\n        uint256 initiationCost;\n        uint256 maxSupply;\n        uint256 protectionTimeExtension;\n        address ecosystemTokenAddress;\n        uint256 phaseDuration;\n        uint256 totalPhases;\n        uint256 rebirthFee;\n        string imageBaseURI;\n    }\n\n    ContractSettings public contractSettings;\n    // 8 images\n\n    // 8 phases, must initiate first\n\n    event NewVerifier(address battler);\n    event NewBattler(address verifier);\n    event Initiated(address initiater, uint256 indexed wizardId, uint256 timestamp);\n    event Rebirth(address initiater, uint256 indexed wizardId, uint256 newLevel, uint256 timestamp);\n\n\n    ////////////////////\n    ////    Get       //\n    ////////////////////\n    function isActive(uint256 _wizardId) public view returns(bool) {\n        return tokenIdToStats[_wizardId].protectedUntilTimestamp > block.timestamp;\n    }\n\n\n\n//    struct Stats {\n//        uint256 level;\n//        uint256 hp;\n//        uint256 magicalPower;\n//        uint256 magicalDefense;\n//        uint256 speed;\n//        uint256 wins;\n//        uint256 losses;\n//        uint256 battles;\n//        uint256 tokensClaimed;\n//        uint256 goodness;\n//        uint256 badness;\n//        uint256 initiationTimestamp; // 0 if uninitiated\n//        uint256 protectedUntilTimestamp; // after this timestamp, NFT can be crushed\n//        ELEMENT element;\n//    }\n\n\n    function getStatsGivenId(uint256 _wizardId) external view returns(Stats memory) {\n        uint256 myPhase = getPhaseOf(_wizardId) + 1; // base 1\n        // totalPhases\n        Stats memory myStats = tokenIdToStats[_wizardId];\n        myStats.hp = myStats.hp * myPhase / contractSettings.totalPhases;\n        myStats.magicalPower = myStats.magicalPower * myPhase / contractSettings.totalPhases;\n        myStats.magicalDefense = myStats.magicalDefense * myPhase / contractSettings.totalPhases;\n        myStats.speed = myStats.speed * myPhase / contractSettings.totalPhases;\n        // initial phase will give zero stats\n        return myStats;\n    }\n\n\n    ///////////////////////////\n    ////// Core Functions /////\n    ///////////////////////////\n    constructor(string memory name_, string memory symbol_, address _address, string memory _imageBaseURI) ERC721(name_, symbol_) {\n        contractSettings.maxSupply = 10000;\n        contractSettings.initiationCost = 1;\n        contractSettings.mintCost = 5; // todo -- do in less steps\n        contractSettings.protectionTimeExtension = 1 days; // todo -- do in less steps\n        contractSettings.ecosystemTokenAddress = _address; // todo -- do in less steps\n        contractSettings.phaseDuration = 60*60;// todo --\n        contractSettings.imageBaseURI = _imageBaseURI;// todo --\n        contractSettings.totalPhases = 8;\n        contractSettings.rebirthFee = 5;\n    }\n\n    function mint() external {\n        require(totalSupply() < contractSettings.maxSupply, \"at max supply.\");\n        // todo -- randomly create stats\n        //\n        // hp, base = 25\n        // mp base = 25\n\n        uint256 pseudoRandNum = uint256(keccak256(abi.encodePacked(totalSupply(), msg.sender, block.timestamp)));\n//        uint256 addOn = uint256(keccak256(abi.encodePacked(totalSupply(), msg.sender, block.timestamp))) % 26;\n        uint256 hp = 25 + pseudoRandNum % 26;\n        uint256 magicalPower = 25 + (pseudoRandNum/100) % 26;\n        uint256 magicalDefense = 10 + (pseudoRandNum/10*4) % 10;\n        uint256 speed = 10 + (pseudoRandNum/10*5) % 10;\n        ELEMENT element = ELEMENT((pseudoRandNum/10*6) % 4);\n\n        Stats memory myStats =  Stats(1, hp, magicalPower, magicalDefense, speed, 0, 0, 0, 0, 0, 0, 0, 0, element);\n        tokenIdToStats[totalSupply()+1] = myStats;\n        _safeMint(msg.sender, totalSupply()+1 ); // with with 1 as id\n    }\n\n\n    /**\n     * @dev Moves NFT from inactive to active\n     */\n    function initiate(uint256 _tokenId) external {\n        require(ownerOf(_tokenId) == msg.sender, \"must be owner\");\n        require(tokenIdToStats[_tokenId].initiationTimestamp == 0, \"already initiated\");\n        // todo -- must be beyond time limitation\n        // todo -- receive fee\n\n        Stats storage myStats = tokenIdToStats[_tokenId];\n        myStats.initiationTimestamp = block.timestamp;\n        myStats.protectedUntilTimestamp = block.timestamp + contractSettings.protectionTimeExtension;\n\n        emit Initiated(msg.sender, _tokenId, block.timestamp);\n    }\n\n    function rebirth(uint256 _tokenId) external payable {\n        /* todo -- add in requires\n        require(ownerOf(_tokenId) == msg.sender, \"must be owner\");\n        require(tokenIdToStats[_tokenId].initiationTimestamp == 0, \"already initiated\");\n        require(isActive(_tokenId), \"must be active\");\n        require(getPhaseOf(_tokenId)==contractSettings.totalPhases-1, \"must be at max phase\");\n        require(msg.value == contractSettings.rebirthFee, \"insufficient fee.\")\n        */\n\n        // todo -- receive fee\n\n        Stats storage myStats = tokenIdToStats[_tokenId];\n        uint256 pseudoRandNum = uint256(keccak256(abi.encodePacked(totalSupply(), msg.sender, block.timestamp, myStats.level)));\n\n        myStats.initiationTimestamp = block.timestamp;\n        myStats.protectedUntilTimestamp += contractSettings.protectionTimeExtension;\n        myStats.level += 1;\n\n        myStats.hp += pseudoRandNum % 16 + 10;\n        myStats.magicalPower += pseudoRandNum/10**2 % 16 + 10;\n        myStats.magicalDefense += pseudoRandNum/10**4 % 16 + 10;\n        myStats.speed += pseudoRandNum/10**6 % 10;\n\n\n        emit Rebirth(msg.sender, _tokenId, myStats.level, block.timestamp); // todo -- could emit stats bonus\n    }\n\n\n    function reportBattle(uint256 _attackerId, uint256 _defenderId, OUTCOME outcome, uint256 _tokensWon,\n        uint256 _tokensWaged) external onlyBattler {\n        if(outcome == OUTCOME.WIN){\n            tokenIdToStats[_attackerId].wins += 1;\n            tokenIdToStats[_defenderId].losses += 1;\n\n        }\n        else if(outcome == OUTCOME.LOSS){\n            tokenIdToStats[_attackerId].losses += 1;\n            tokenIdToStats[_defenderId].wins += 1;\n        }\n\n        tokenIdToStats[_attackerId].tokensClaimed += _tokensWon;\n\n        // todo -- tokens waged?\n//        tokenIdToStats[_defenderId].tokensClaimed += _tokensWon;\n        // todo -- add stat for last time attacked to limit attack frequency?\n\n        // we switched to ETH\n//        if(_won==OUTCOME.LOSS) {\n//            tokenIdToStats[_defenderId].tokensClaimed += _tokensWaged; // todo -- this ignores commission\n//        }\n    }\n\n\n    /**\n     * @dev Gets phase of NFT\n     */\n    function getPhaseOf(uint256 _tokenId) public view returns(uint256) {\n        uint256 phase =\n          (block.timestamp - tokenIdToStats[_tokenId].initiationTimestamp) / contractSettings.phaseDuration\n          > 7 ? 7 : (block.timestamp - tokenIdToStats[_tokenId].initiationTimestamp) / contractSettings.phaseDuration\n          ;\n        return phase;\n    }\n\n    /**\n     * @dev check if NFT is deserted--negligent in duties.\n     */\n    function getIsDeserted(uint256 _tokenId) public returns(bool) {\n\n    }\n\n    /**\n     * @dev Verify duties of NFT. Not duty specific\n     */\n    function verifyDuty(uint256 _tokenId, uint256 _timeReward) external onlyVerifier {\n        // add time entension to NFT\n        tokenIdToStats[_tokenId].protectedUntilTimestamp = _timeReward + (tokenIdToStats[_tokenId].protectedUntilTimestamp < block.timestamp\n                 ? block.timestamp : tokenIdToStats[_tokenId].protectedUntilTimestamp);\n\n        // increase stats of NFT\n//        tokenIdToStats[_tokenId].tasksCompleted +=1;\n    }\n\n\n\n    /**\n     * @dev uninitiate an NFT that is negligent in duties. Reward crusher\n     */\n    function crush(uint256 _tokenId) onlyHolder external {\n    }\n\n\n    function tokenURI(uint256 _tokenId) public view virtual override returns (string memory) {\n        require(_exists(_tokenId), \"ERC721Metadata: URI query for nonexistent token\");\n        // todo -- update image\n        string memory linkExtension;\n        if(tokenIdToStats[_tokenId].initiationTimestamp==0){ // uninitiated\n            linkExtension = \"0\"; // todo -- shameful uninitiated picture\n        }\n        else{ // todo -- this didn't use getPhaseOf\n            linkExtension =\n                      Strings.toString(\n                      (block.timestamp - tokenIdToStats[_tokenId].initiationTimestamp) / contractSettings.phaseDuration\n                      > 7 ? 7 : (block.timestamp - tokenIdToStats[_tokenId].initiationTimestamp) / contractSettings.phaseDuration\n                      );\n        }\n        string memory imageURI = string(abi.encodePacked(contractSettings.imageBaseURI, linkExtension, '.jpg'));\n        return formatTokenURI(_tokenId, imageURI);\n    }\n\n    function formatTokenURI(uint256 _tokenId, string memory imageURI) public view returns (string memory) {\n//        Data memory _myData = unpackData(_tokenId);\n        Stats memory myStats = tokenIdToStats[_tokenId];\n\n        string memory json_str = string(abi.encodePacked(\n            '{\"description\": \"WizardArmy\"',\n            ', \"external_url\": \"https://wizardarmyNFT.com (or something like this)\"',\n            ', \"image\": \"',\n             imageURI, '\"',\n            ', \"name\": \"Wizard\"',\n            // attributes\n            ', \"attributes\": [{\"display_type\": \"number\", \"trait_type\": \"level\", \"value\": ',\n            Strings.toString(myStats.level), ' }'\n        ));\n\n        // use this format to add extra properties\n        json_str = string(abi.encodePacked(json_str,\n            ', {\"display_type\": \"number\", \"trait_type\": \"hp\", \"value\": ',\n            Strings.toString(myStats.hp),   ' }',\n            ', {\"display_type\": \"number\", \"trait_type\": \"magical power\", \"value\": ',\n            Strings.toString(myStats.magicalPower),   ' }',\n                ', {\"display_type\": \"number\", \"trait_type\": \"magical defense\", \"value\": ',\n            Strings.toString(myStats.magicalDefense),   ' }'\n        ));\n\n        // use this format to add extra properties\n        json_str = string(abi.encodePacked(json_str,\n            ', {\"display_type\": \"number\", \"trait_type\": \"speed\", \"value\": ',\n            Strings.toString(myStats.speed),   ' }',\n            ', {\"display_type\": \"number\", \"trait_type\": \"wins\", \"value\": ',\n            Strings.toString(myStats.wins),   ' }'\n        ));\n\n\n        // use this format to add extra properties\n        json_str = string(abi.encodePacked(json_str,\n            ', {\"display_type\": \"number\", \"trait_type\": \"losses\", \"value\": ',\n            Strings.toString(myStats.losses),   ' }',\n            ', {\"display_type\": \"number\", \"trait_type\": \"battles\", \"value\": ',\n            Strings.toString(myStats.battles),   ' }',\n                ', {\"display_type\": \"number\", \"trait_type\": \"tokensClaimed\", \"value\": ',\n            Strings.toString(myStats.tokensClaimed),   ' }'\n        ));\n\n        // end string\n        json_str = string(abi.encodePacked(json_str, ']','}'));\n\n//        string memory json_str = string(abi.encodePacked(\n//            '{\"description\": \"WizardArmy\"',\n//            ', \"external_url\": \"https://wizardarmyNFT.com (or something like this)\"',\n//            ', \"image\": \"',\n//             imageURI, '\"',\n//            ', \"name\": \"Wizard\"',\n//            // attributes\n//            ', \"attributes\": [{\"display_type\": \"number\", \"trait_type\": \"level\", \"value\": ',\n//            '11111111',   ' }'\n//        ));\n//        json_str = string(abi.encodePacked(json_str,\n//            ', {\"display_type\": \"number\", \"trait_type\": \"hp\", \"value\": ',\n//            '2222222222',   ' }',\n//            ', {\"display_type\": \"number\", \"trait_type\": \"mp\", \"value\": ',\n//            '33333333333333333',   ' }',\n//                ', {\"display_type\": \"number\", \"trait_type\": \"wins\", \"value\": ',\n//            '4444444444',   ' }',\n//            ']', // End Attributes\n//            '}'\n//        ));\n        return json_str;\n    }\n\n//    function uint2str(uint _i) internal pure returns (string memory _uintAsString) {\n//        if (_i == 0) {\n//            return \"0\";\n//        }\n//        uint j = _i;\n//        uint len;\n//        while (j != 0) {\n//            len++;\n//            j /= 10;\n//        }\n//        bytes memory bstr = new bytes(len);\n//        uint k = len - 1;\n//        while (_i != 0) {\n//            bstr[k--] = bytes1(uint8(48 + _i % 10));\n//            _i /= 10;\n//        }\n//        return string(bstr);\n//    }\n\n\n    /////////////////////////////////\n    ////// Admin Functions      /////\n    /////////////////////////////////\n\n\n    function modifyContractSettings(string memory _imageBaseURI, uint256 _phaseDuration, uint256 _protectionTimeExtension, uint256 _mintCost,\n                    uint256 _initiationCost) external onlyOwner {\n        contractSettings.imageBaseURI = _imageBaseURI;\n        contractSettings.phaseDuration = _phaseDuration;\n        contractSettings.protectionTimeExtension = _protectionTimeExtension;\n        contractSettings.mintCost = _mintCost;\n        contractSettings.initiationCost = _initiationCost\n\n\n        ;\n    }\n\n    ///////////////////////////\n    ////// Modifiers      /////\n    ///////////////////////////\n\n    modifier onlyVerifier() {\n        require(msg.sender != address(this), 'only verifier'); // todo -- decide who will verify--one or many addresses\n        _;\n    }\n\n    modifier onlyHolder() {\n        require(msg.sender != address(this), 'only verifier'); // todo -- decide who will verify--one or many addresses\n        _;\n    }\n\n    modifier onlyBattler() {\n        require(\n            msg.sender == battler,\n            \"Only battler can call this function.\"\n        );\n        _;\n    }\n\n    ///////////////////////////\n    ////// Admin      /////\n    ///////////////////////////\n\n    function updateBattler(address _battler) external onlyOwner {\n        require(_battler != address(0) && _battler != battler, \"Invalid operator address\");\n        battler = _battler;\n        emit NewBattler(_battler);\n    }\n\n    function updateVerifier(address _verifier) external onlyOwner {\n        require(_verifier != address(0) && _verifier != verifier, \"Invalid operator address\");\n        verifier = _verifier;\n        emit NewVerifier(_verifier);\n    }\n\n}",
  "sourceMap": "359:15659:22:-:0;;;3606:679;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3716:5;3723:7;1459:5:6;:13;3716:5:22;1459::6;:13;:::i;:::-;-1:-1:-1;1483:7:6;:17;1493:7;1483;:17;:::i;:::-;;1392:116;;889:23:8;899:12;:10;;;:12;;:::i;:::-;889:9;:23::i;:::-;3772:5:22::1;3743:26:::0;:34;3822:1:::1;3788:31:::0;:35;3862:1:::1;3743:16;3834:29:::0;3945:6:::1;3902:40:::0;:49;3990:38;:49;;-1:-1:-1;;;;;;3990:49:22::1;-1:-1:-1::0;;;;;3990:49:22;::::1;;::::0;;4111:5:::1;4078:30:::0;:38;4137:29;:45:::1;4169:13:::0;4137:29;:45:::1;:::i;:::-;-1:-1:-1::0;;4234:1:22::1;4203:28:::0;:32;-1:-1:-1;;4276:1:22::1;4246:27:::0;:31;-1:-1:-1;359:15659:22;;599:98:3;679:10;;599:98::o;2101:173:8:-;2176:6;;;-1:-1:-1;;;;;2193:17:8;;;-1:-1:-1;;;;;;2193:17:8;;;;;;;2226:40;;2176:6;;;2193:17;2176:6;;2226:40;;2157:16;;2226:40;2146:128;2101:173;:::o;14:127:23:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:885;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:23;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:23;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;930:2;927:1;924:9;921:80;;;989:1;984:2;979;971:6;967:15;963:24;956:35;921:80;1019:6;146:885;-1:-1:-1;;;;;;146:885:23:o;1036:934::-;1163:6;1171;1179;1187;1240:3;1228:9;1219:7;1215:23;1211:33;1208:53;;;1257:1;1254;1247:12;1208:53;1284:16;;-1:-1:-1;;;;;1349:14:23;;;1346:34;;;1376:1;1373;1366:12;1346:34;1399:61;1452:7;1443:6;1432:9;1428:22;1399:61;:::i;:::-;1389:71;;1506:2;1495:9;1491:18;1485:25;1469:41;;1535:2;1525:8;1522:16;1519:36;;;1551:1;1548;1541:12;1519:36;1574:63;1629:7;1618:8;1607:9;1603:24;1574:63;:::i;:::-;1680:2;1665:18;;1659:25;1564:73;;-1:-1:-1;1659:25:23;-1:-1:-1;;;;;;1713:31:23;;1703:42;;1693:70;;1759:1;1756;1749:12;1693:70;1833:2;1818:18;;1812:25;1782:5;;-1:-1:-1;1849:16:23;;;1846:36;;;1878:1;1875;1868:12;1846:36;;1901:63;1956:7;1945:8;1934:9;1930:24;1901:63;:::i;:::-;1891:73;;;1036:934;;;;;;;:::o;1975:380::-;2054:1;2050:12;;;;2097;;;2118:61;;2172:4;2164:6;2160:17;2150:27;;2118:61;2225:2;2217:6;2214:14;2194:18;2191:38;2188:161;;2271:10;2266:3;2262:20;2259:1;2252:31;2306:4;2303:1;2296:15;2334:4;2331:1;2324:15;2188:161;;1975:380;;;:::o;2486:545::-;2588:2;2583:3;2580:11;2577:448;;;2624:1;2649:5;2645:2;2638:17;2694:4;2690:2;2680:19;2764:2;2752:10;2748:19;2745:1;2741:27;2735:4;2731:38;2800:4;2788:10;2785:20;2782:47;;;-1:-1:-1;2823:4:23;2782:47;2878:2;2873:3;2869:12;2866:1;2862:20;2856:4;2852:31;2842:41;;2933:82;2951:2;2944:5;2941:13;2933:82;;;2996:17;;;2977:1;2966:13;2933:82;;;2937:3;;;2577:448;2486:545;;;:::o;3207:1352::-;3327:10;;-1:-1:-1;;;;;3349:30:23;;3346:56;;;3382:18;;:::i;:::-;3411:97;3501:6;3461:38;3493:4;3487:11;3461:38;:::i;:::-;3455:4;3411:97;:::i;:::-;3563:4;;3627:2;3616:14;;3644:1;3639:663;;;;4346:1;4363:6;4360:89;;;-1:-1:-1;4415:19:23;;;4409:26;4360:89;-1:-1:-1;;3164:1:23;3160:11;;;3156:24;3152:29;3142:40;3188:1;3184:11;;;3139:57;4462:81;;3609:944;;3639:663;2433:1;2426:14;;;2470:4;2457:18;;-1:-1:-1;;3675:20:23;;;3793:236;3807:7;3804:1;3801:14;3793:236;;;3896:19;;;3890:26;3875:42;;3988:27;;;;3956:1;3944:14;;;;3823:19;;3793:236;;;3797:3;4057:6;4048:7;4045:19;4042:201;;;4118:19;;;4112:26;-1:-1:-1;;4201:1:23;4197:14;;;4213:3;4193:24;4189:37;4185:42;4170:58;4155:74;;4042:201;-1:-1:-1;;;;;4289:1:23;4273:14;;;4269:22;4256:36;;-1:-1:-1;3207:1352:23:o;:::-;359:15659:22;;;;;;",
  "sourcePath": "contracts/wizards.sol",
  "type": "contract"
}