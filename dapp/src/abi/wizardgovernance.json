{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_nft",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_wizardTower",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "Empty",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "OutOfBounds",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "hash",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "isHashCorrect",
          "type": "bool"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "firstEncoded",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "firstUnencoded",
          "type": "bytes"
        }
      ],
      "name": "HashTesting",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "_IPFSHash",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint40",
          "name": "_proposalID",
          "type": "uint40"
        },
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "_numFieldsToHash",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "uint24",
          "name": "_timeBonus",
          "type": "uint24"
        },
        {
          "indexed": false,
          "internalType": "uint40",
          "name": "_begTimestamp",
          "type": "uint40"
        },
        {
          "indexed": false,
          "internalType": "uint40",
          "name": "_endTimestamp",
          "type": "uint40"
        },
        {
          "indexed": false,
          "internalType": "uint16",
          "name": "_availableSlots",
          "type": "uint16"
        }
      ],
      "name": "NewTaskTypeCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "wizardId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "taskId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "IPFSHash",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "data",
          "type": "uint256"
        }
      ],
      "name": "TaskCompleted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "wizardId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "taskId",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "string",
              "name": "IPFSHash",
              "type": "string"
            },
            {
              "internalType": "uint40",
              "name": "NFTID",
              "type": "uint40"
            },
            {
              "internalType": "bytes32",
              "name": "hash",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "refuterHash",
              "type": "bytes32"
            },
            {
              "internalType": "uint8",
              "name": "numFieldsToHash",
              "type": "uint8"
            },
            {
              "internalType": "uint24",
              "name": "timeBonus",
              "type": "uint24"
            },
            {
              "internalType": "uint80",
              "name": "payment",
              "type": "uint80"
            },
            {
              "internalType": "uint16",
              "name": "verifierID",
              "type": "uint16"
            },
            {
              "internalType": "uint16",
              "name": "refuterID",
              "type": "uint16"
            },
            {
              "internalType": "uint40",
              "name": "verificationReservedTimestamp",
              "type": "uint40"
            }
          ],
          "indexed": false,
          "internalType": "struct Governance.Task",
          "name": "myTask",
          "type": "tuple"
        }
      ],
      "name": "VerificationAssigned",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "VerifierIdFirst",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "VerifierIdSecond",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "taskId",
          "type": "uint256"
        }
      ],
      "name": "VerificationFailed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "taskDoer",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "Verifier",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "taskId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "hash",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "isHashCorrect",
          "type": "bool"
        }
      ],
      "name": "VerificationSucceeded",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_wizId",
          "type": "uint256"
        }
      ],
      "name": "areTasksAvailableToConfirm",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_wizId",
          "type": "uint256"
        }
      ],
      "name": "claimRandomTaskForVerification",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_IPFSHash",
          "type": "string"
        },
        {
          "internalType": "bytes32",
          "name": "_hash",
          "type": "bytes32"
        },
        {
          "internalType": "uint40",
          "name": "_wizId",
          "type": "uint40"
        }
      ],
      "name": "completeTask",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_IPFSHash",
          "type": "string"
        },
        {
          "internalType": "uint16",
          "name": "_numberOfOptions",
          "type": "uint16"
        },
        {
          "internalType": "uint24",
          "name": "_timeBonus",
          "type": "uint24"
        },
        {
          "internalType": "uint40",
          "name": "_begTimestamp",
          "type": "uint40"
        },
        {
          "internalType": "uint40",
          "name": "_endTimestamp",
          "type": "uint40"
        },
        {
          "internalType": "uint16",
          "name": "_availableSlots",
          "type": "uint16"
        }
      ],
      "name": "createProposal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_IPFSHash",
          "type": "string"
        },
        {
          "internalType": "uint8",
          "name": "_numFieldsToHash",
          "type": "uint8"
        },
        {
          "internalType": "uint24",
          "name": "_timeBonus",
          "type": "uint24"
        },
        {
          "internalType": "uint40",
          "name": "_begTimestamp",
          "type": "uint40"
        },
        {
          "internalType": "uint40",
          "name": "_endTimestamp",
          "type": "uint40"
        },
        {
          "internalType": "uint16",
          "name": "_availableSlots",
          "type": "uint16"
        }
      ],
      "name": "createTaskType",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_IPFSHash",
          "type": "string"
        }
      ],
      "name": "deleteTaskTypeByIPFSHash",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint40",
          "name": "_wizId",
          "type": "uint40"
        }
      ],
      "name": "getMyAvailableTaskTypes",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_taskId",
          "type": "uint256"
        }
      ],
      "name": "getTaskById",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "IPFSHash",
              "type": "string"
            },
            {
              "internalType": "uint40",
              "name": "NFTID",
              "type": "uint40"
            },
            {
              "internalType": "bytes32",
              "name": "hash",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "refuterHash",
              "type": "bytes32"
            },
            {
              "internalType": "uint8",
              "name": "numFieldsToHash",
              "type": "uint8"
            },
            {
              "internalType": "uint24",
              "name": "timeBonus",
              "type": "uint24"
            },
            {
              "internalType": "uint80",
              "name": "payment",
              "type": "uint80"
            },
            {
              "internalType": "uint16",
              "name": "verifierID",
              "type": "uint16"
            },
            {
              "internalType": "uint16",
              "name": "refuterID",
              "type": "uint16"
            },
            {
              "internalType": "uint40",
              "name": "verificationReservedTimestamp",
              "type": "uint40"
            }
          ],
          "internalType": "struct Governance.Task",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint40",
          "name": "_wizId",
          "type": "uint40"
        }
      ],
      "name": "getTasksAssignedToWiz",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "IPFSHash",
              "type": "string"
            },
            {
              "internalType": "uint40",
              "name": "NFTID",
              "type": "uint40"
            },
            {
              "internalType": "bytes32",
              "name": "hash",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "refuterHash",
              "type": "bytes32"
            },
            {
              "internalType": "uint8",
              "name": "numFieldsToHash",
              "type": "uint8"
            },
            {
              "internalType": "uint24",
              "name": "timeBonus",
              "type": "uint24"
            },
            {
              "internalType": "uint80",
              "name": "payment",
              "type": "uint80"
            },
            {
              "internalType": "uint16",
              "name": "verifierID",
              "type": "uint16"
            },
            {
              "internalType": "uint16",
              "name": "refuterID",
              "type": "uint16"
            },
            {
              "internalType": "uint40",
              "name": "verificationReservedTimestamp",
              "type": "uint40"
            }
          ],
          "internalType": "struct Governance.Task[]",
          "name": "",
          "type": "tuple[]"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalID",
          "type": "uint256"
        }
      ],
      "name": "getVotes",
      "outputs": [
        {
          "internalType": "uint16[]",
          "name": "",
          "type": "uint16[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalID",
          "type": "uint256"
        }
      ],
      "name": "getWinningVote",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isCallerOnBoard",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "proposalToNFTVotes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "proposals",
      "outputs": [
        {
          "internalType": "string",
          "name": "IPFSHash",
          "type": "string"
        },
        {
          "internalType": "uint16",
          "name": "numberOfOptions",
          "type": "uint16"
        },
        {
          "internalType": "uint40",
          "name": "totalVotes",
          "type": "uint40"
        },
        {
          "internalType": "uint40",
          "name": "begTimestamp",
          "type": "uint40"
        },
        {
          "internalType": "uint40",
          "name": "endTimestamp",
          "type": "uint40"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_addy",
          "type": "address"
        }
      ],
      "name": "setNFTAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_wizId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_taskID",
          "type": "uint256"
        },
        {
          "internalType": "bytes32[]",
          "name": "_fields",
          "type": "bytes32[]"
        }
      ],
      "name": "submitVerification",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "taskTypes",
      "outputs": [
        {
          "internalType": "string",
          "name": "IPFSHash",
          "type": "string"
        },
        {
          "internalType": "bool",
          "name": "paused",
          "type": "bool"
        },
        {
          "internalType": "uint40",
          "name": "proposalID",
          "type": "uint40"
        },
        {
          "internalType": "uint8",
          "name": "numFieldsToHash",
          "type": "uint8"
        },
        {
          "internalType": "uint24",
          "name": "timeBonus",
          "type": "uint24"
        },
        {
          "internalType": "uint40",
          "name": "begTimestamp",
          "type": "uint40"
        },
        {
          "internalType": "uint40",
          "name": "endTimestamp",
          "type": "uint40"
        },
        {
          "internalType": "uint16",
          "name": "availableSlots",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "tasks",
      "outputs": [
        {
          "internalType": "string",
          "name": "IPFSHash",
          "type": "string"
        },
        {
          "internalType": "uint40",
          "name": "NFTID",
          "type": "uint40"
        },
        {
          "internalType": "bytes32",
          "name": "hash",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "refuterHash",
          "type": "bytes32"
        },
        {
          "internalType": "uint8",
          "name": "numFieldsToHash",
          "type": "uint8"
        },
        {
          "internalType": "uint24",
          "name": "timeBonus",
          "type": "uint24"
        },
        {
          "internalType": "uint80",
          "name": "payment",
          "type": "uint80"
        },
        {
          "internalType": "uint16",
          "name": "verifierID",
          "type": "uint16"
        },
        {
          "internalType": "uint16",
          "name": "refuterID",
          "type": "uint16"
        },
        {
          "internalType": "uint40",
          "name": "verificationReservedTimestamp",
          "type": "uint40"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tasksWaitingConfirmation",
      "outputs": [
        {
          "internalType": "int128",
          "name": "_begin",
          "type": "int128"
        },
        {
          "internalType": "int128",
          "name": "_end",
          "type": "int128"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_givenHash",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32[]",
          "name": "_fields",
          "type": "bytes32[]"
        },
        {
          "internalType": "bool",
          "name": "_refuted",
          "type": "bool"
        }
      ],
      "name": "testHashing",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalTasksAttempted",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalID",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "NFTID",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_vote",
          "type": "uint256"
        }
      ],
      "name": "vote",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "allSourcePaths": {
    "0": "C:/Users/David/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.7.3/contracts/utils/math/SafeCast.sol",
    "1": "C:/Users/David/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.7.3/contracts/utils/structs/DoubleEndedQueue.sol",
    "12": "contracts/helpers/Ownable.sol",
    "13": "contracts/helpers/ReentrancyGuard.sol",
    "2": "contracts/Governance.sol",
    "22": "contracts/libraries/Strings.sol",
    "23": "contracts/wizards.sol",
    "5": "contracts/WizardTower.sol",
    "6": "contracts/helpers/Context.sol"
  },
  "ast": {
    "absolutePath": "contracts/Governance.sol",
    "exportedSymbols": {
      "Address": [
        7707
      ],
      "Context": [
        5037
      ],
      "DoubleEndedQueue": [
        4993
      ],
      "ERC165": [
        5061
      ],
      "ERC2981Collection": [
        5145
      ],
      "ERC721": [
        5964
      ],
      "ERC721A": [
        7035
      ],
      "ERC721Enumerable": [
        8249
      ],
      "Governance": [
        1993
      ],
      "IERC165": [
        7191
      ],
      "IERC20": [
        7264
      ],
      "IERC2981": [
        10118
      ],
      "IERC721": [
        7380
      ],
      "IERC721Enumerable": [
        7411
      ],
      "IERC721Metadata": [
        10145
      ],
      "IERC721Receiver": [
        10163
      ],
      "Ownable": [
        7139
      ],
      "ReentrancyGuard": [
        7179
      ],
      "RelativeTimeVault": [
        2785
      ],
      "Strings": [
        7910
      ],
      "WizardTower": [
        5016
      ],
      "Wizards": [
        4652
      ]
    },
    "id": 1994,
    "license": "Unlicensed",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "0.8",
          ".15"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:2"
      },
      {
        "absolutePath": "contracts/wizards.sol",
        "file": "./wizards.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1994,
        "sourceUnit": 4653,
        "src": "64:23:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/interfaces/IERC20.sol",
        "file": "./interfaces/IERC20.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1994,
        "sourceUnit": 7265,
        "src": "88:33:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/interfaces/IERC165.sol",
        "file": "./interfaces/IERC165.sol",
        "id": 4,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1994,
        "sourceUnit": 7192,
        "src": "122:34:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/interfaces/IERC721.sol",
        "file": "./interfaces/IERC721.sol",
        "id": 5,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1994,
        "sourceUnit": 7381,
        "src": "157:34:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/interfaces/IERC721Enumerable.sol",
        "file": "./interfaces/IERC721Enumerable.sol",
        "id": 6,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1994,
        "sourceUnit": 7412,
        "src": "192:44:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/helpers/ERC721A.sol",
        "file": "./helpers/ERC721A.sol",
        "id": 7,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1994,
        "sourceUnit": 7036,
        "src": "270:31:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/helpers/ERC721.sol",
        "file": "./helpers/ERC721.sol",
        "id": 8,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1994,
        "sourceUnit": 5965,
        "src": "302:30:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/helpers/ERC165.sol",
        "file": "./helpers/ERC165.sol",
        "id": 9,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1994,
        "sourceUnit": 5062,
        "src": "333:30:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/helpers/Ownable.sol",
        "file": "./helpers/Ownable.sol",
        "id": 10,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1994,
        "sourceUnit": 7140,
        "src": "364:31:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/helpers/Context.sol",
        "file": "./helpers/Context.sol",
        "id": 11,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1994,
        "sourceUnit": 5038,
        "src": "396:31:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/helpers/ReentrancyGuard.sol",
        "file": "./helpers/ReentrancyGuard.sol",
        "id": 12,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1994,
        "sourceUnit": 7180,
        "src": "428:39:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/helpers/ERC2981Collection.sol",
        "file": "./helpers/ERC2981Collection.sol",
        "id": 13,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1994,
        "sourceUnit": 5146,
        "src": "468:41:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/libraries/Strings.sol",
        "file": "./libraries/Strings.sol",
        "id": 14,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1994,
        "sourceUnit": 7911,
        "src": "510:33:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/libraries/Address.sol",
        "file": "./libraries/Address.sol",
        "id": 15,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1994,
        "sourceUnit": 7708,
        "src": "544:33:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/WizardTower.sol",
        "file": "./WizardTower.sol",
        "id": 16,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1994,
        "sourceUnit": 5017,
        "src": "578:27:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/David/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.7.3/contracts/utils/structs/DoubleEndedQueue.sol",
        "file": "@openzeppelin/contracts/utils/structs/DoubleEndedQueue.sol",
        "id": 18,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1994,
        "sourceUnit": 4994,
        "src": "606:92:2",
        "symbolAliases": [
          {
            "foreign": {
              "id": 17,
              "name": "DoubleEndedQueue",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 4993,
              "src": "614:16:2",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 19,
              "name": "ReentrancyGuard",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 7179,
              "src": "794:15:2"
            },
            "id": 20,
            "nodeType": "InheritanceSpecifier",
            "src": "794:15:2"
          },
          {
            "baseName": {
              "id": 21,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 7139,
              "src": "811:7:2"
            },
            "id": 22,
            "nodeType": "InheritanceSpecifier",
            "src": "811:7:2"
          }
        ],
        "canonicalName": "Governance",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1993,
        "linearizedBaseContracts": [
          1993,
          7139,
          5037,
          7179
        ],
        "name": "Governance",
        "nameLocation": "780:10:2",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 25,
            "mutability": "mutable",
            "name": "wizardsNFT",
            "nameLocation": "865:10:2",
            "nodeType": "VariableDeclaration",
            "scope": 1993,
            "src": "857:18:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Wizards_$4652",
              "typeString": "contract Wizards"
            },
            "typeName": {
              "id": 24,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 23,
                "name": "Wizards",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 4652,
                "src": "857:7:2"
              },
              "referencedDeclaration": 4652,
              "src": "857:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Wizards_$4652",
                "typeString": "contract Wizards"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 28,
            "mutability": "mutable",
            "name": "wizardTower",
            "nameLocation": "893:11:2",
            "nodeType": "VariableDeclaration",
            "scope": 1993,
            "src": "881:23:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_WizardTower_$5016",
              "typeString": "contract WizardTower"
            },
            "typeName": {
              "id": 27,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 26,
                "name": "WizardTower",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 5016,
                "src": "881:11:2"
              },
              "referencedDeclaration": 5016,
              "src": "881:11:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_WizardTower_$5016",
                "typeString": "contract WizardTower"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "6215597b",
            "id": 34,
            "mutability": "mutable",
            "name": "proposalToNFTVotes",
            "nameLocation": "1071:18:2",
            "nodeType": "VariableDeclaration",
            "scope": 1993,
            "src": "1014:75:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$",
              "typeString": "mapping(uint256 => mapping(uint256 => uint256))"
            },
            "typeName": {
              "id": 33,
              "keyType": {
                "id": 29,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1023:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1014:49:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                "typeString": "mapping(uint256 => mapping(uint256 => uint256))"
              },
              "valueType": {
                "id": 32,
                "keyType": {
                  "id": 30,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1043:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "nodeType": "Mapping",
                "src": "1034:28:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                  "typeString": "mapping(uint256 => uint256)"
                },
                "valueType": {
                  "id": 31,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1054:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "Governance.TaskType",
            "id": 55,
            "members": [
              {
                "constant": false,
                "id": 38,
                "mutability": "mutable",
                "name": "nextActiveTimeThreshold",
                "nameLocation": "1183:23:2",
                "nodeType": "VariableDeclaration",
                "scope": 55,
                "src": "1155:51:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_uint40_$_t_uint256_$",
                  "typeString": "mapping(uint40 => uint256)"
                },
                "typeName": {
                  "id": 37,
                  "keyType": {
                    "id": 35,
                    "name": "uint40",
                    "nodeType": "ElementaryTypeName",
                    "src": "1164:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "nodeType": "Mapping",
                  "src": "1155:27:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_uint40_$_t_uint256_$",
                    "typeString": "mapping(uint40 => uint256)"
                  },
                  "valueType": {
                    "id": 36,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1174:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 40,
                "mutability": "mutable",
                "name": "IPFSHash",
                "nameLocation": "1277:8:2",
                "nodeType": "VariableDeclaration",
                "scope": 55,
                "src": "1270:15:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 39,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "1270:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 42,
                "mutability": "mutable",
                "name": "paused",
                "nameLocation": "1321:6:2",
                "nodeType": "VariableDeclaration",
                "scope": 55,
                "src": "1316:11:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 41,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1316:4:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 44,
                "mutability": "mutable",
                "name": "proposalID",
                "nameLocation": "1344:10:2",
                "nodeType": "VariableDeclaration",
                "scope": 55,
                "src": "1337:17:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint40",
                  "typeString": "uint40"
                },
                "typeName": {
                  "id": 43,
                  "name": "uint40",
                  "nodeType": "ElementaryTypeName",
                  "src": "1337:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 46,
                "mutability": "mutable",
                "name": "numFieldsToHash",
                "nameLocation": "1398:15:2",
                "nodeType": "VariableDeclaration",
                "scope": 55,
                "src": "1392:21:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint8",
                  "typeString": "uint8"
                },
                "typeName": {
                  "id": 45,
                  "name": "uint8",
                  "nodeType": "ElementaryTypeName",
                  "src": "1392:5:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 48,
                "mutability": "mutable",
                "name": "timeBonus",
                "nameLocation": "1430:9:2",
                "nodeType": "VariableDeclaration",
                "scope": 55,
                "src": "1423:16:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint24",
                  "typeString": "uint24"
                },
                "typeName": {
                  "id": 47,
                  "name": "uint24",
                  "nodeType": "ElementaryTypeName",
                  "src": "1423:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint24",
                    "typeString": "uint24"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 50,
                "mutability": "mutable",
                "name": "begTimestamp",
                "nameLocation": "1456:12:2",
                "nodeType": "VariableDeclaration",
                "scope": 55,
                "src": "1449:19:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint40",
                  "typeString": "uint40"
                },
                "typeName": {
                  "id": 49,
                  "name": "uint40",
                  "nodeType": "ElementaryTypeName",
                  "src": "1449:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 52,
                "mutability": "mutable",
                "name": "endTimestamp",
                "nameLocation": "1485:12:2",
                "nodeType": "VariableDeclaration",
                "scope": 55,
                "src": "1478:19:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint40",
                  "typeString": "uint40"
                },
                "typeName": {
                  "id": 51,
                  "name": "uint40",
                  "nodeType": "ElementaryTypeName",
                  "src": "1478:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 54,
                "mutability": "mutable",
                "name": "availableSlots",
                "nameLocation": "1514:14:2",
                "nodeType": "VariableDeclaration",
                "scope": 55,
                "src": "1507:21:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint16",
                  "typeString": "uint16"
                },
                "typeName": {
                  "id": 53,
                  "name": "uint16",
                  "nodeType": "ElementaryTypeName",
                  "src": "1507:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "TaskType",
            "nameLocation": "1136:8:2",
            "nodeType": "StructDefinition",
            "scope": 1993,
            "src": "1129:406:2",
            "visibility": "public"
          },
          {
            "canonicalName": "Governance.Task",
            "id": 76,
            "members": [
              {
                "constant": false,
                "id": 57,
                "mutability": "mutable",
                "name": "IPFSHash",
                "nameLocation": "1595:8:2",
                "nodeType": "VariableDeclaration",
                "scope": 76,
                "src": "1588:15:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 56,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "1588:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 59,
                "mutability": "mutable",
                "name": "NFTID",
                "nameLocation": "1641:5:2",
                "nodeType": "VariableDeclaration",
                "scope": 76,
                "src": "1634:12:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint40",
                  "typeString": "uint40"
                },
                "typeName": {
                  "id": 58,
                  "name": "uint40",
                  "nodeType": "ElementaryTypeName",
                  "src": "1634:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 61,
                "mutability": "mutable",
                "name": "hash",
                "nameLocation": "1701:4:2",
                "nodeType": "VariableDeclaration",
                "scope": 76,
                "src": "1693:12:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 60,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "1693:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 63,
                "mutability": "mutable",
                "name": "refuterHash",
                "nameLocation": "1755:11:2",
                "nodeType": "VariableDeclaration",
                "scope": 76,
                "src": "1747:19:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 62,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "1747:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 65,
                "mutability": "mutable",
                "name": "numFieldsToHash",
                "nameLocation": "1819:15:2",
                "nodeType": "VariableDeclaration",
                "scope": 76,
                "src": "1813:21:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint8",
                  "typeString": "uint8"
                },
                "typeName": {
                  "id": 64,
                  "name": "uint8",
                  "nodeType": "ElementaryTypeName",
                  "src": "1813:5:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 67,
                "mutability": "mutable",
                "name": "timeBonus",
                "nameLocation": "1867:9:2",
                "nodeType": "VariableDeclaration",
                "scope": 76,
                "src": "1860:16:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint24",
                  "typeString": "uint24"
                },
                "typeName": {
                  "id": 66,
                  "name": "uint24",
                  "nodeType": "ElementaryTypeName",
                  "src": "1860:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint24",
                    "typeString": "uint24"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 69,
                "mutability": "mutable",
                "name": "payment",
                "nameLocation": "2039:7:2",
                "nodeType": "VariableDeclaration",
                "scope": 76,
                "src": "2032:14:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint80",
                  "typeString": "uint80"
                },
                "typeName": {
                  "id": 68,
                  "name": "uint80",
                  "nodeType": "ElementaryTypeName",
                  "src": "2032:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint80",
                    "typeString": "uint80"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 71,
                "mutability": "mutable",
                "name": "verifierID",
                "nameLocation": "2066:10:2",
                "nodeType": "VariableDeclaration",
                "scope": 76,
                "src": "2059:17:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint16",
                  "typeString": "uint16"
                },
                "typeName": {
                  "id": 70,
                  "name": "uint16",
                  "nodeType": "ElementaryTypeName",
                  "src": "2059:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 73,
                "mutability": "mutable",
                "name": "refuterID",
                "nameLocation": "2117:9:2",
                "nodeType": "VariableDeclaration",
                "scope": 76,
                "src": "2110:16:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint16",
                  "typeString": "uint16"
                },
                "typeName": {
                  "id": 72,
                  "name": "uint16",
                  "nodeType": "ElementaryTypeName",
                  "src": "2110:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 75,
                "mutability": "mutable",
                "name": "verificationReservedTimestamp",
                "nameLocation": "2167:29:2",
                "nodeType": "VariableDeclaration",
                "scope": 76,
                "src": "2160:36:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint40",
                  "typeString": "uint40"
                },
                "typeName": {
                  "id": 74,
                  "name": "uint40",
                  "nodeType": "ElementaryTypeName",
                  "src": "2160:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Task",
            "nameLocation": "1573:4:2",
            "nodeType": "StructDefinition",
            "scope": 1993,
            "src": "1566:675:2",
            "visibility": "public"
          },
          {
            "canonicalName": "Governance.Proposal",
            "id": 91,
            "members": [
              {
                "constant": false,
                "id": 78,
                "mutability": "mutable",
                "name": "IPFSHash",
                "nameLocation": "2280:8:2",
                "nodeType": "VariableDeclaration",
                "scope": 91,
                "src": "2273:15:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 77,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "2273:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 80,
                "mutability": "mutable",
                "name": "numberOfOptions",
                "nameLocation": "2305:15:2",
                "nodeType": "VariableDeclaration",
                "scope": 91,
                "src": "2298:22:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint16",
                  "typeString": "uint16"
                },
                "typeName": {
                  "id": 79,
                  "name": "uint16",
                  "nodeType": "ElementaryTypeName",
                  "src": "2298:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 84,
                "mutability": "mutable",
                "name": "votes",
                "nameLocation": "2340:5:2",
                "nodeType": "VariableDeclaration",
                "scope": 91,
                "src": "2330:15:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_uint16_$8_storage_ptr",
                  "typeString": "uint16[8]"
                },
                "typeName": {
                  "baseType": {
                    "id": 81,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "2330:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "id": 83,
                  "length": {
                    "hexValue": "38",
                    "id": 82,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2337:1:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_8_by_1",
                      "typeString": "int_const 8"
                    },
                    "value": "8"
                  },
                  "nodeType": "ArrayTypeName",
                  "src": "2330:9:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint16_$8_storage_ptr",
                    "typeString": "uint16[8]"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 86,
                "mutability": "mutable",
                "name": "totalVotes",
                "nameLocation": "2362:10:2",
                "nodeType": "VariableDeclaration",
                "scope": 91,
                "src": "2355:17:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint40",
                  "typeString": "uint40"
                },
                "typeName": {
                  "id": 85,
                  "name": "uint40",
                  "nodeType": "ElementaryTypeName",
                  "src": "2355:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 88,
                "mutability": "mutable",
                "name": "begTimestamp",
                "nameLocation": "2389:12:2",
                "nodeType": "VariableDeclaration",
                "scope": 91,
                "src": "2382:19:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint40",
                  "typeString": "uint40"
                },
                "typeName": {
                  "id": 87,
                  "name": "uint40",
                  "nodeType": "ElementaryTypeName",
                  "src": "2382:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 90,
                "mutability": "mutable",
                "name": "endTimestamp",
                "nameLocation": "2418:12:2",
                "nodeType": "VariableDeclaration",
                "scope": 91,
                "src": "2411:19:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint40",
                  "typeString": "uint40"
                },
                "typeName": {
                  "id": 89,
                  "name": "uint40",
                  "nodeType": "ElementaryTypeName",
                  "src": "2411:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Proposal",
            "nameLocation": "2254:8:2",
            "nodeType": "StructDefinition",
            "scope": 1993,
            "src": "2247:190:2",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "10190ef1",
            "id": 95,
            "mutability": "mutable",
            "name": "taskTypes",
            "nameLocation": "2463:9:2",
            "nodeType": "VariableDeclaration",
            "scope": 1993,
            "src": "2445:27:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_TaskType_$55_storage_$dyn_storage",
              "typeString": "struct Governance.TaskType[]"
            },
            "typeName": {
              "baseType": {
                "id": 93,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 92,
                  "name": "TaskType",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 55,
                  "src": "2445:8:2"
                },
                "referencedDeclaration": 55,
                "src": "2445:8:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_TaskType_$55_storage_ptr",
                  "typeString": "struct Governance.TaskType"
                }
              },
              "id": 94,
              "nodeType": "ArrayTypeName",
              "src": "2445:10:2",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_TaskType_$55_storage_$dyn_storage_ptr",
                "typeString": "struct Governance.TaskType[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "e95d2347",
            "id": 98,
            "mutability": "mutable",
            "name": "tasksWaitingConfirmation",
            "nameLocation": "2619:24:2",
            "nodeType": "VariableDeclaration",
            "scope": 1993,
            "src": "2582:61:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Bytes32Deque_$4671_storage",
              "typeString": "struct DoubleEndedQueue.Bytes32Deque"
            },
            "typeName": {
              "id": 97,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 96,
                "name": "DoubleEndedQueue.Bytes32Deque",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 4671,
                "src": "2582:29:2"
              },
              "referencedDeclaration": 4671,
              "src": "2582:29:2",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Bytes32Deque_$4671_storage_ptr",
                "typeString": "struct DoubleEndedQueue.Bytes32Deque"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "013cf08b",
            "id": 103,
            "mutability": "mutable",
            "name": "proposals",
            "nameLocation": "2796:9:2",
            "nodeType": "VariableDeclaration",
            "scope": 1993,
            "src": "2759:46:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$91_storage_$",
              "typeString": "mapping(uint256 => struct Governance.Proposal)"
            },
            "typeName": {
              "id": 102,
              "keyType": {
                "id": 99,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2768:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "2759:29:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$91_storage_$",
                "typeString": "mapping(uint256 => struct Governance.Proposal)"
              },
              "valueType": {
                "id": 101,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 100,
                  "name": "Proposal",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 91,
                  "src": "2779:8:2"
                },
                "referencedDeclaration": 91,
                "src": "2779:8:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Proposal_$91_storage_ptr",
                  "typeString": "struct Governance.Proposal"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 105,
            "mutability": "mutable",
            "name": "totalProposals",
            "nameLocation": "2819:14:2",
            "nodeType": "VariableDeclaration",
            "scope": 1993,
            "src": "2811:22:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 104,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2811:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "8d977672",
            "id": 110,
            "mutability": "mutable",
            "name": "tasks",
            "nameLocation": "2873:5:2",
            "nodeType": "VariableDeclaration",
            "scope": 1993,
            "src": "2840:38:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Task_$76_storage_$",
              "typeString": "mapping(uint256 => struct Governance.Task)"
            },
            "typeName": {
              "id": 109,
              "keyType": {
                "id": 106,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2849:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "2840:25:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Task_$76_storage_$",
                "typeString": "mapping(uint256 => struct Governance.Task)"
              },
              "valueType": {
                "id": 108,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 107,
                  "name": "Task",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 76,
                  "src": "2860:4:2"
                },
                "referencedDeclaration": 76,
                "src": "2860:4:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Task_$76_storage_ptr",
                  "typeString": "struct Governance.Task"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "90b293d8",
            "id": 112,
            "mutability": "mutable",
            "name": "totalTasksAttempted",
            "nameLocation": "2899:19:2",
            "nodeType": "VariableDeclaration",
            "scope": 1993,
            "src": "2884:34:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 111,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2884:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 117,
            "mutability": "mutable",
            "name": "verificationTime",
            "nameLocation": "2959:16:2",
            "nodeType": "VariableDeclaration",
            "scope": 1993,
            "src": "2951:32:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 113,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2951:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "commonType": {
                "typeIdentifier": "t_rational_600_by_1",
                "typeString": "int_const 600"
              },
              "id": 116,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "hexValue": "3130",
                "id": 114,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "2978:2:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_10_by_1",
                  "typeString": "int_const 10"
                },
                "value": "10"
              },
              "nodeType": "BinaryOperation",
              "operator": "*",
              "rightExpression": {
                "hexValue": "3630",
                "id": 115,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "2981:2:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_60_by_1",
                  "typeString": "int_const 60"
                },
                "value": "60"
              },
              "src": "2978:5:2",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_600_by_1",
                "typeString": "int_const 600"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 120,
            "mutability": "mutable",
            "name": "taskVerificationTimeBonus",
            "nameLocation": "3011:25:2",
            "nodeType": "VariableDeclaration",
            "scope": 1993,
            "src": "3003:42:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 118,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "3003:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31",
              "id": 119,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "3039:6:2",
              "subdenomination": "days",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_86400_by_1",
                "typeString": "int_const 86400"
              },
              "value": "1"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 123,
            "mutability": "mutable",
            "name": "boardSeats",
            "nameLocation": "3068:10:2",
            "nodeType": "VariableDeclaration",
            "scope": 1993,
            "src": "3060:22:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 121,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "3060:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "33",
              "id": 122,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "3081:1:2",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_3_by_1",
                "typeString": "int_const 3"
              },
              "value": "3"
            },
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "eventSelector": "f20a22b1aa6d8ba4bf99c845fb1f02f4879ba83155bde0f82f49cb58675df268",
            "id": 132,
            "name": "VerificationAssigned",
            "nameLocation": "3095:20:2",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 131,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 125,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "wizardId",
                  "nameLocation": "3124:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 132,
                  "src": "3116:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 124,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3116:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 127,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "taskId",
                  "nameLocation": "3142:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 132,
                  "src": "3134:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 126,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3134:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 130,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "myTask",
                  "nameLocation": "3155:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 132,
                  "src": "3150:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Task_$76_memory_ptr",
                    "typeString": "struct Governance.Task"
                  },
                  "typeName": {
                    "id": 129,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 128,
                      "name": "Task",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 76,
                      "src": "3150:4:2"
                    },
                    "referencedDeclaration": 76,
                    "src": "3150:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Task_$76_storage_ptr",
                      "typeString": "struct Governance.Task"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3115:47:2"
            },
            "src": "3089:74:2"
          },
          {
            "anonymous": false,
            "eventSelector": "d12a897fdb9082da1e0476e136a51fa43484a8837cfbe517cfff0b1ffeedb19d",
            "id": 140,
            "name": "VerificationFailed",
            "nameLocation": "3174:18:2",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 139,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 134,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "VerifierIdFirst",
                  "nameLocation": "3201:15:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 140,
                  "src": "3193:23:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 133,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3193:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 136,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "VerifierIdSecond",
                  "nameLocation": "3226:16:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 140,
                  "src": "3218:24:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 135,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3218:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 138,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "taskId",
                  "nameLocation": "3252:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 140,
                  "src": "3244:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 137,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3244:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3192:67:2"
            },
            "src": "3168:92:2"
          },
          {
            "anonymous": false,
            "eventSelector": "e3f0e138f100deaf328ba1def71c39dade8cd971ba0074d935ee648e54532fae",
            "id": 152,
            "name": "VerificationSucceeded",
            "nameLocation": "3271:21:2",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 151,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 142,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "taskDoer",
                  "nameLocation": "3301:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 152,
                  "src": "3293:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 141,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3293:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 144,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "Verifier",
                  "nameLocation": "3319:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 152,
                  "src": "3311:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 143,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3311:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 146,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "taskId",
                  "nameLocation": "3337:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 152,
                  "src": "3329:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 145,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3329:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 148,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "hash",
                  "nameLocation": "3353:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 152,
                  "src": "3345:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 147,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3345:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 150,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "isHashCorrect",
                  "nameLocation": "3364:13:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 152,
                  "src": "3359:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 149,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3359:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3292:86:2"
            },
            "src": "3265:114:2"
          },
          {
            "anonymous": false,
            "eventSelector": "637ce8d069e382e64ef71cf191623b88c7e307ce252e908e7f2babbad0cb81ea",
            "id": 162,
            "name": "HashTesting",
            "nameLocation": "3390:11:2",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 161,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 154,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "hash",
                  "nameLocation": "3410:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 162,
                  "src": "3402:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 153,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3402:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 156,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "isHashCorrect",
                  "nameLocation": "3421:13:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 162,
                  "src": "3416:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 155,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3416:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 158,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "firstEncoded",
                  "nameLocation": "3444:12:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 162,
                  "src": "3436:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 157,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3436:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 160,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "firstUnencoded",
                  "nameLocation": "3464:14:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 162,
                  "src": "3458:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 159,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3458:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3401:78:2"
            },
            "src": "3384:96:2"
          },
          {
            "anonymous": false,
            "eventSelector": "2810025950962e3cd71fd98c2dc111ffbdb2a129b36771df8d36a7de2fe3e4e0",
            "id": 178,
            "name": "NewTaskTypeCreated",
            "nameLocation": "3491:18:2",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 177,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 164,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_IPFSHash",
                  "nameLocation": "3517:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 178,
                  "src": "3510:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 163,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3510:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 166,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_proposalID",
                  "nameLocation": "3534:11:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 178,
                  "src": "3527:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  },
                  "typeName": {
                    "id": 165,
                    "name": "uint40",
                    "nodeType": "ElementaryTypeName",
                    "src": "3527:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 168,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_numFieldsToHash",
                  "nameLocation": "3553:16:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 178,
                  "src": "3547:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 167,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "3547:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 170,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_timeBonus",
                  "nameLocation": "3578:10:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 178,
                  "src": "3571:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint24",
                    "typeString": "uint24"
                  },
                  "typeName": {
                    "id": 169,
                    "name": "uint24",
                    "nodeType": "ElementaryTypeName",
                    "src": "3571:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint24",
                      "typeString": "uint24"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 172,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_begTimestamp",
                  "nameLocation": "3607:13:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 178,
                  "src": "3600:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  },
                  "typeName": {
                    "id": 171,
                    "name": "uint40",
                    "nodeType": "ElementaryTypeName",
                    "src": "3600:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 174,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_endTimestamp",
                  "nameLocation": "3629:13:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 178,
                  "src": "3622:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  },
                  "typeName": {
                    "id": 173,
                    "name": "uint40",
                    "nodeType": "ElementaryTypeName",
                    "src": "3622:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 176,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_availableSlots",
                  "nameLocation": "3651:15:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 178,
                  "src": "3644:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 175,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "3644:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3509:158:2"
            },
            "src": "3485:183:2"
          },
          {
            "anonymous": false,
            "eventSelector": "bcc1ea15519f3acfb49e91de851e553b2c024b9ab85cee8ffd8fe4e4e0a7876d",
            "id": 188,
            "name": "TaskCompleted",
            "nameLocation": "3679:13:2",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 187,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 180,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "wizardId",
                  "nameLocation": "3701:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 188,
                  "src": "3693:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 179,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3693:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 182,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "taskId",
                  "nameLocation": "3719:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 188,
                  "src": "3711:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 181,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3711:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 184,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "IPFSHash",
                  "nameLocation": "3734:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 188,
                  "src": "3727:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 183,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3727:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 186,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "3752:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 188,
                  "src": "3744:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 185,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3744:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3692:65:2"
            },
            "src": "3673:85:2"
          },
          {
            "body": {
              "id": 222,
              "nodeType": "Block",
              "src": "4434:239:2",
              "statements": [
                {
                  "body": {
                    "id": 218,
                    "nodeType": "Block",
                    "src": "4479:166:2",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 209,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 204,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 194,
                                    "src": "4544:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 202,
                                    "name": "wizardTower",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 28,
                                    "src": "4515:11:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_WizardTower_$5016",
                                      "typeString": "contract WizardTower"
                                    }
                                  },
                                  "id": 203,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "getWizardOnFloor",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2144,
                                  "src": "4515:28:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
                                    "typeString": "function (uint256) view external returns (uint256)"
                                  }
                                },
                                "id": 205,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4515:31:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 200,
                                "name": "wizardsNFT",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 25,
                                "src": "4496:10:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Wizards_$4652",
                                  "typeString": "contract Wizards"
                                }
                              },
                              "id": 201,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "ownerOf",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 5292,
                              "src": "4496:18:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                                "typeString": "function (uint256) view external returns (address)"
                              }
                            },
                            "id": 206,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4496:51:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 207,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "4551:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 208,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "4551:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "4496:65:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 213,
                        "nodeType": "IfStatement",
                        "src": "4493:114:2",
                        "trueBody": {
                          "id": 212,
                          "nodeType": "Block",
                          "src": "4563:44:2",
                          "statements": [
                            {
                              "expression": {
                                "hexValue": "74727565",
                                "id": 210,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4588:4:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              },
                              "functionReturnParameters": 192,
                              "id": 211,
                              "nodeType": "Return",
                              "src": "4581:11:2"
                            }
                          ]
                        }
                      },
                      {
                        "id": 217,
                        "nodeType": "UncheckedBlock",
                        "src": "4620:15:2",
                        "statements": [
                          {
                            "expression": {
                              "id": 215,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": true,
                              "src": "4630:3:2",
                              "subExpression": {
                                "id": 214,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 194,
                                "src": "4632:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 216,
                            "nodeType": "ExpressionStatement",
                            "src": "4630:3:2"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 199,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 197,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 194,
                      "src": "4462:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "id": 198,
                      "name": "boardSeats",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 123,
                      "src": "4467:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4462:15:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 219,
                  "initializationExpression": {
                    "assignments": [
                      194
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 194,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "4456:1:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 219,
                        "src": "4448:9:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 193,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4448:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 196,
                    "initialValue": {
                      "hexValue": "31",
                      "id": 195,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4459:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "4448:12:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "4444:201:2"
                },
                {
                  "expression": {
                    "hexValue": "66616c7365",
                    "id": 220,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4661:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "functionReturnParameters": 192,
                  "id": 221,
                  "nodeType": "Return",
                  "src": "4654:12:2"
                }
              ]
            },
            "functionSelector": "3b47fed2",
            "id": 223,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isCallerOnBoard",
            "nameLocation": "4389:15:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 189,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4404:2:2"
            },
            "returnParameters": {
              "id": 192,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 191,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 223,
                  "src": "4428:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 190,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4428:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4427:6:2"
            },
            "scope": 1993,
            "src": "4380:293:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 235,
              "nodeType": "Block",
              "src": "4928:38:2",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 231,
                      "name": "tasks",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 110,
                      "src": "4945:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Task_$76_storage_$",
                        "typeString": "mapping(uint256 => struct Governance.Task storage ref)"
                      }
                    },
                    "id": 233,
                    "indexExpression": {
                      "id": 232,
                      "name": "_taskId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 225,
                      "src": "4951:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4945:14:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Task_$76_storage",
                      "typeString": "struct Governance.Task storage ref"
                    }
                  },
                  "functionReturnParameters": 230,
                  "id": 234,
                  "nodeType": "Return",
                  "src": "4938:21:2"
                }
              ]
            },
            "functionSelector": "976217cd",
            "id": 236,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTaskById",
            "nameLocation": "4863:11:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 226,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 225,
                  "mutability": "mutable",
                  "name": "_taskId",
                  "nameLocation": "4883:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 236,
                  "src": "4875:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 224,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4875:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4874:17:2"
            },
            "returnParameters": {
              "id": 230,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 229,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 236,
                  "src": "4915:11:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Task_$76_memory_ptr",
                    "typeString": "struct Governance.Task"
                  },
                  "typeName": {
                    "id": 228,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 227,
                      "name": "Task",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 76,
                      "src": "4915:4:2"
                    },
                    "referencedDeclaration": 76,
                    "src": "4915:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Task_$76_storage_ptr",
                      "typeString": "struct Governance.Task"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4914:13:2"
            },
            "scope": 1993,
            "src": "4854:112:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 291,
              "nodeType": "Block",
              "src": "5050:311:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 247,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 245,
                          "name": "proposalID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 238,
                          "src": "5068:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "id": 246,
                          "name": "totalProposals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 105,
                          "src": "5081:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5068:27:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6e6f20737563682070726f706f73616c",
                        "id": 248,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5097:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7f70e7e117a210e101713c97232a3cb728ce069a6ee3603e8c77d84127a93b4e",
                          "typeString": "literal_string \"no such proposal\""
                        },
                        "value": "no such proposal"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7f70e7e117a210e101713c97232a3cb728ce069a6ee3603e8c77d84127a93b4e",
                          "typeString": "literal_string \"no such proposal\""
                        }
                      ],
                      "id": 244,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5060:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 249,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5060:56:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 250,
                  "nodeType": "ExpressionStatement",
                  "src": "5060:56:2"
                },
                {
                  "assignments": [
                    255
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 255,
                      "mutability": "mutable",
                      "name": "voteArray",
                      "nameLocation": "5142:9:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 291,
                      "src": "5126:25:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint16_$dyn_memory_ptr",
                        "typeString": "uint16[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 253,
                          "name": "uint16",
                          "nodeType": "ElementaryTypeName",
                          "src": "5126:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "id": 254,
                        "nodeType": "ArrayTypeName",
                        "src": "5126:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint16_$dyn_storage_ptr",
                          "typeString": "uint16[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 264,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 259,
                            "name": "proposals",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 103,
                            "src": "5167:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$91_storage_$",
                              "typeString": "mapping(uint256 => struct Governance.Proposal storage ref)"
                            }
                          },
                          "id": 261,
                          "indexExpression": {
                            "id": 260,
                            "name": "proposalID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 238,
                            "src": "5177:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5167:21:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Proposal_$91_storage",
                            "typeString": "struct Governance.Proposal storage ref"
                          }
                        },
                        "id": 262,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "numberOfOptions",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 80,
                        "src": "5167:37:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      ],
                      "id": 258,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "5154:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint16_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (uint16[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 256,
                          "name": "uint16",
                          "nodeType": "ElementaryTypeName",
                          "src": "5158:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "id": 257,
                        "nodeType": "ArrayTypeName",
                        "src": "5158:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint16_$dyn_storage_ptr",
                          "typeString": "uint16[]"
                        }
                      }
                    },
                    "id": 263,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5154:51:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint16_$dyn_memory_ptr",
                      "typeString": "uint16[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5126:79:2"
                },
                {
                  "body": {
                    "id": 287,
                    "nodeType": "Block",
                    "src": "5259:70:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 285,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 276,
                              "name": "voteArray",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 255,
                              "src": "5273:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint16_$dyn_memory_ptr",
                                "typeString": "uint16[] memory"
                              }
                            },
                            "id": 278,
                            "indexExpression": {
                              "id": 277,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 266,
                              "src": "5283:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "5273:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 279,
                                  "name": "proposals",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 103,
                                  "src": "5288:9:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$91_storage_$",
                                    "typeString": "mapping(uint256 => struct Governance.Proposal storage ref)"
                                  }
                                },
                                "id": 281,
                                "indexExpression": {
                                  "id": 280,
                                  "name": "proposalID",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 238,
                                  "src": "5298:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "5288:21:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Proposal_$91_storage",
                                  "typeString": "struct Governance.Proposal storage ref"
                                }
                              },
                              "id": 282,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "votes",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 84,
                              "src": "5288:27:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint16_$8_storage",
                                "typeString": "uint16[8] storage ref"
                              }
                            },
                            "id": 284,
                            "indexExpression": {
                              "id": 283,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 266,
                              "src": "5316:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5288:30:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "src": "5273:45:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "id": 286,
                        "nodeType": "ExpressionStatement",
                        "src": "5273:45:2"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 272,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 269,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 266,
                      "src": "5234:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 270,
                        "name": "voteArray",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 255,
                        "src": "5237:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint16_$dyn_memory_ptr",
                          "typeString": "uint16[] memory"
                        }
                      },
                      "id": 271,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "5237:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5234:19:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 288,
                  "initializationExpression": {
                    "assignments": [
                      266
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 266,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "5227:1:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 288,
                        "src": "5219:9:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 265,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5219:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 268,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 267,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5231:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "5219:13:2"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 274,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "5255:3:2",
                      "subExpression": {
                        "id": 273,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 266,
                        "src": "5255:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 275,
                    "nodeType": "ExpressionStatement",
                    "src": "5255:3:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "5215:114:2"
                },
                {
                  "expression": {
                    "id": 289,
                    "name": "voteArray",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 255,
                    "src": "5345:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint16_$dyn_memory_ptr",
                      "typeString": "uint16[] memory"
                    }
                  },
                  "functionReturnParameters": 243,
                  "id": 290,
                  "nodeType": "Return",
                  "src": "5338:16:2"
                }
              ]
            },
            "functionSelector": "ff981099",
            "id": 292,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getVotes",
            "nameLocation": "4981:8:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 239,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 238,
                  "mutability": "mutable",
                  "name": "proposalID",
                  "nameLocation": "4998:10:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 292,
                  "src": "4990:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 237,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4990:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4989:20:2"
            },
            "returnParameters": {
              "id": 243,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 242,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 292,
                  "src": "5033:15:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint16_$dyn_memory_ptr",
                    "typeString": "uint16[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 240,
                      "name": "uint16",
                      "nodeType": "ElementaryTypeName",
                      "src": "5033:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "id": 241,
                    "nodeType": "ArrayTypeName",
                    "src": "5033:8:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint16_$dyn_storage_ptr",
                      "typeString": "uint16[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5032:17:2"
            },
            "scope": 1993,
            "src": "4972:389:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 397,
              "nodeType": "Block",
              "src": "5444:892:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 302,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 300,
                          "name": "proposalID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 294,
                          "src": "5462:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "id": 301,
                          "name": "totalProposals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 105,
                          "src": "5475:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5462:27:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6e6f20737563682070726f706f73616c",
                        "id": 303,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5491:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7f70e7e117a210e101713c97232a3cb728ce069a6ee3603e8c77d84127a93b4e",
                          "typeString": "literal_string \"no such proposal\""
                        },
                        "value": "no such proposal"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7f70e7e117a210e101713c97232a3cb728ce069a6ee3603e8c77d84127a93b4e",
                          "typeString": "literal_string \"no such proposal\""
                        }
                      ],
                      "id": 299,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5454:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 304,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5454:56:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 305,
                  "nodeType": "ExpressionStatement",
                  "src": "5454:56:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 313,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 307,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "5529:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 308,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "5529:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 309,
                              "name": "proposals",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 103,
                              "src": "5547:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$91_storage_$",
                                "typeString": "mapping(uint256 => struct Governance.Proposal storage ref)"
                              }
                            },
                            "id": 311,
                            "indexExpression": {
                              "id": 310,
                              "name": "proposalID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 294,
                              "src": "5557:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5547:21:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Proposal_$91_storage",
                              "typeString": "struct Governance.Proposal storage ref"
                            }
                          },
                          "id": 312,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "endTimestamp",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 90,
                          "src": "5547:34:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint40",
                            "typeString": "uint40"
                          }
                        },
                        "src": "5529:52:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "766f74696e67207374696c6c20616374697665",
                        "id": 314,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5583:21:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_22f2e02cab1835d44c1d530aa3f7458160c75e111c83b0fee59782f82fdc8c00",
                          "typeString": "literal_string \"voting still active\""
                        },
                        "value": "voting still active"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_22f2e02cab1835d44c1d530aa3f7458160c75e111c83b0fee59782f82fdc8c00",
                          "typeString": "literal_string \"voting still active\""
                        }
                      ],
                      "id": 306,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5520:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 315,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5520:85:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 316,
                  "nodeType": "ExpressionStatement",
                  "src": "5520:85:2"
                },
                {
                  "assignments": [
                    318
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 318,
                      "mutability": "mutable",
                      "name": "winningVote",
                      "nameLocation": "5733:11:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 397,
                      "src": "5725:19:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 317,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5725:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 319,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5725:19:2"
                },
                {
                  "assignments": [
                    321
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 321,
                      "mutability": "mutable",
                      "name": "winningVoteAmount",
                      "nameLocation": "5762:17:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 397,
                      "src": "5754:25:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 320,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5754:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 322,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5754:25:2"
                },
                {
                  "assignments": [
                    324
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 324,
                      "mutability": "mutable",
                      "name": "tie",
                      "nameLocation": "5797:3:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 397,
                      "src": "5789:11:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 323,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5789:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 326,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 325,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5801:1:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5789:13:2"
                },
                {
                  "body": {
                    "id": 386,
                    "nodeType": "Block",
                    "src": "5875:382:2",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 347,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 340,
                                  "name": "proposals",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 103,
                                  "src": "5928:9:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$91_storage_$",
                                    "typeString": "mapping(uint256 => struct Governance.Proposal storage ref)"
                                  }
                                },
                                "id": 342,
                                "indexExpression": {
                                  "id": 341,
                                  "name": "proposalID",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 294,
                                  "src": "5938:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "5928:21:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Proposal_$91_storage",
                                  "typeString": "struct Governance.Proposal storage ref"
                                }
                              },
                              "id": 343,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "votes",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 84,
                              "src": "5928:27:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint16_$8_storage",
                                "typeString": "uint16[8] storage ref"
                              }
                            },
                            "id": 345,
                            "indexExpression": {
                              "id": 344,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 328,
                              "src": "5956:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5928:30:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "id": 346,
                            "name": "winningVoteAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 321,
                            "src": "5961:17:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5928:50:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 378,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "baseExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 371,
                                    "name": "proposals",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 103,
                                    "src": "6157:9:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$91_storage_$",
                                      "typeString": "mapping(uint256 => struct Governance.Proposal storage ref)"
                                    }
                                  },
                                  "id": 373,
                                  "indexExpression": {
                                    "id": 372,
                                    "name": "proposalID",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 294,
                                    "src": "6167:10:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "6157:21:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Proposal_$91_storage",
                                    "typeString": "struct Governance.Proposal storage ref"
                                  }
                                },
                                "id": 374,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "votes",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 84,
                                "src": "6157:27:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint16_$8_storage",
                                  "typeString": "uint16[8] storage ref"
                                }
                              },
                              "id": 376,
                              "indexExpression": {
                                "id": 375,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 328,
                                "src": "6185:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "6157:30:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 377,
                              "name": "winningVoteAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 321,
                              "src": "6191:17:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "6157:51:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 384,
                          "nodeType": "IfStatement",
                          "src": "6154:93:2",
                          "trueBody": {
                            "id": 383,
                            "nodeType": "Block",
                            "src": "6209:38:2",
                            "statements": [
                              {
                                "expression": {
                                  "id": 381,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftHandSide": {
                                    "id": 379,
                                    "name": "tie",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 324,
                                    "src": "6227:3:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "Assignment",
                                  "operator": "=",
                                  "rightHandSide": {
                                    "hexValue": "31",
                                    "id": 380,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "6231:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    "value": "1"
                                  },
                                  "src": "6227:5:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 382,
                                "nodeType": "ExpressionStatement",
                                "src": "6227:5:2"
                              }
                            ]
                          }
                        },
                        "id": 385,
                        "nodeType": "IfStatement",
                        "src": "5925:322:2",
                        "trueBody": {
                          "id": 370,
                          "nodeType": "Block",
                          "src": "5980:156:2",
                          "statements": [
                            {
                              "expression": {
                                "id": 355,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 348,
                                  "name": "winningVoteAmount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 321,
                                  "src": "5998:17:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "baseExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 349,
                                        "name": "proposals",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 103,
                                        "src": "6018:9:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$91_storage_$",
                                          "typeString": "mapping(uint256 => struct Governance.Proposal storage ref)"
                                        }
                                      },
                                      "id": 351,
                                      "indexExpression": {
                                        "id": 350,
                                        "name": "proposalID",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 294,
                                        "src": "6028:10:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "6018:21:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Proposal_$91_storage",
                                        "typeString": "struct Governance.Proposal storage ref"
                                      }
                                    },
                                    "id": 352,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "votes",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 84,
                                    "src": "6018:27:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint16_$8_storage",
                                      "typeString": "uint16[8] storage ref"
                                    }
                                  },
                                  "id": 354,
                                  "indexExpression": {
                                    "id": 353,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 328,
                                    "src": "6046:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "6018:30:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint16",
                                    "typeString": "uint16"
                                  }
                                },
                                "src": "5998:50:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 356,
                              "nodeType": "ExpressionStatement",
                              "src": "5998:50:2"
                            },
                            {
                              "expression": {
                                "id": 359,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 357,
                                  "name": "winningVote",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 318,
                                  "src": "6066:11:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 358,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 328,
                                  "src": "6080:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "6066:15:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 360,
                              "nodeType": "ExpressionStatement",
                              "src": "6066:15:2"
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 363,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 361,
                                  "name": "tie",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 324,
                                  "src": "6103:3:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "hexValue": "31",
                                  "id": 362,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "6108:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "src": "6103:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 369,
                              "nodeType": "IfStatement",
                              "src": "6099:23:2",
                              "trueBody": {
                                "id": 368,
                                "nodeType": "Block",
                                "src": "6111:11:2",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 366,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "id": 364,
                                        "name": "tie",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 324,
                                        "src": "6113:3:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "hexValue": "30",
                                        "id": 365,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "6119:1:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      },
                                      "src": "6113:7:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 367,
                                    "nodeType": "ExpressionStatement",
                                    "src": "6113:7:2"
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 336,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 331,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 328,
                      "src": "5829:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 332,
                          "name": "proposals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 103,
                          "src": "5832:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$91_storage_$",
                            "typeString": "mapping(uint256 => struct Governance.Proposal storage ref)"
                          }
                        },
                        "id": 334,
                        "indexExpression": {
                          "id": 333,
                          "name": "proposalID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 294,
                          "src": "5842:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5832:21:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proposal_$91_storage",
                          "typeString": "struct Governance.Proposal storage ref"
                        }
                      },
                      "id": 335,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "numberOfOptions",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 80,
                      "src": "5832:37:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "src": "5829:40:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 387,
                  "initializationExpression": {
                    "assignments": [
                      328
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 328,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "5824:1:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 387,
                        "src": "5816:9:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 327,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5816:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 330,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 329,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5826:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "5816:11:2"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 338,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "5871:3:2",
                      "subExpression": {
                        "id": 337,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 328,
                        "src": "5871:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 339,
                    "nodeType": "ExpressionStatement",
                    "src": "5871:3:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "5812:445:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 391,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 389,
                          "name": "tie",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 324,
                          "src": "6274:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 390,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6279:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "6274:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7468657265207761732061207469652e",
                        "id": 392,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6282:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a1c2bbbee70a8d13edbf54a9c72401ac19b15698e1d23660ca88991f323433da",
                          "typeString": "literal_string \"there was a tie.\""
                        },
                        "value": "there was a tie."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a1c2bbbee70a8d13edbf54a9c72401ac19b15698e1d23660ca88991f323433da",
                          "typeString": "literal_string \"there was a tie.\""
                        }
                      ],
                      "id": 388,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6266:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 393,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6266:35:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 394,
                  "nodeType": "ExpressionStatement",
                  "src": "6266:35:2"
                },
                {
                  "expression": {
                    "id": 395,
                    "name": "winningVote",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 318,
                    "src": "6318:11:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 298,
                  "id": 396,
                  "nodeType": "Return",
                  "src": "6311:18:2"
                }
              ]
            },
            "functionSelector": "826b8ebd",
            "id": 398,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getWinningVote",
            "nameLocation": "5376:14:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 295,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 294,
                  "mutability": "mutable",
                  "name": "proposalID",
                  "nameLocation": "5399:10:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 398,
                  "src": "5391:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 293,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5391:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5390:20:2"
            },
            "returnParameters": {
              "id": 298,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 297,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 398,
                  "src": "5434:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 296,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5434:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5433:10:2"
            },
            "scope": 1993,
            "src": "5367:969:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 463,
              "nodeType": "Block",
              "src": "6464:607:2",
              "statements": [
                {
                  "assignments": [
                    406
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 406,
                      "mutability": "mutable",
                      "name": "totalTasksSubmitted",
                      "nameLocation": "6482:19:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 463,
                      "src": "6474:27:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 405,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6474:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 411,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 409,
                        "name": "tasksWaitingConfirmation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98,
                        "src": "6528:24:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Bytes32Deque_$4671_storage",
                          "typeString": "struct DoubleEndedQueue.Bytes32Deque storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Bytes32Deque_$4671_storage",
                          "typeString": "struct DoubleEndedQueue.Bytes32Deque storage ref"
                        }
                      ],
                      "expression": {
                        "id": 407,
                        "name": "DoubleEndedQueue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4993,
                        "src": "6504:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_DoubleEndedQueue_$4993_$",
                          "typeString": "type(library DoubleEndedQueue)"
                        }
                      },
                      "id": 408,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4976,
                      "src": "6504:23:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32Deque_$4671_storage_ptr_$returns$_t_uint256_$",
                        "typeString": "function (struct DoubleEndedQueue.Bytes32Deque storage pointer) view returns (uint256)"
                      }
                    },
                    "id": 410,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6504:49:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6474:79:2"
                },
                {
                  "assignments": [
                    414
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 414,
                      "mutability": "mutable",
                      "name": "myTask",
                      "nameLocation": "6575:6:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 463,
                      "src": "6563:18:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Task_$76_memory_ptr",
                        "typeString": "struct Governance.Task"
                      },
                      "typeName": {
                        "id": 413,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 412,
                          "name": "Task",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 76,
                          "src": "6563:4:2"
                        },
                        "referencedDeclaration": 76,
                        "src": "6563:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Task_$76_storage_ptr",
                          "typeString": "struct Governance.Task"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 415,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6563:18:2"
                },
                {
                  "body": {
                    "id": 459,
                    "nodeType": "Block",
                    "src": "6747:296:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 434,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 423,
                            "name": "myTask",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 414,
                            "src": "6761:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Task_$76_memory_ptr",
                              "typeString": "struct Governance.Task memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 424,
                              "name": "tasks",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 110,
                              "src": "6770:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Task_$76_storage_$",
                                "typeString": "mapping(uint256 => struct Governance.Task storage ref)"
                              }
                            },
                            "id": 433,
                            "indexExpression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 429,
                                      "name": "tasksWaitingConfirmation",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 98,
                                      "src": "6804:24:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Bytes32Deque_$4671_storage",
                                        "typeString": "struct DoubleEndedQueue.Bytes32Deque storage ref"
                                      }
                                    },
                                    {
                                      "id": 430,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 417,
                                      "src": "6829:1:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_struct$_Bytes32Deque_$4671_storage",
                                        "typeString": "struct DoubleEndedQueue.Bytes32Deque storage ref"
                                      },
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "id": 427,
                                      "name": "DoubleEndedQueue",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4993,
                                      "src": "6784:16:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_DoubleEndedQueue_$4993_$",
                                        "typeString": "type(library DoubleEndedQueue)"
                                      }
                                    },
                                    "id": 428,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "at",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 4930,
                                    "src": "6784:19:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32Deque_$4671_storage_ptr_$_t_uint256_$returns$_t_bytes32_$",
                                      "typeString": "function (struct DoubleEndedQueue.Bytes32Deque storage pointer,uint256) view returns (bytes32)"
                                    }
                                  },
                                  "id": 431,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "6784:47:2",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                ],
                                "id": 426,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "6776:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                },
                                "typeName": {
                                  "id": 425,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "6776:7:2",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 432,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6776:56:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "6770:63:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Task_$76_storage",
                              "typeString": "struct Governance.Task storage ref"
                            }
                          },
                          "src": "6761:72:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Task_$76_memory_ptr",
                            "typeString": "struct Governance.Task memory"
                          }
                        },
                        "id": 435,
                        "nodeType": "ExpressionStatement",
                        "src": "6761:72:2"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 450,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 445,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 440,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 436,
                                  "name": "myTask",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 414,
                                  "src": "6851:6:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Task_$76_memory_ptr",
                                    "typeString": "struct Governance.Task memory"
                                  }
                                },
                                "id": 437,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "verificationReservedTimestamp",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 75,
                                "src": "6851:36:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint40",
                                  "typeString": "uint40"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<",
                              "rightExpression": {
                                "expression": {
                                  "id": 438,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "6890:5:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 439,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "6890:15:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "6851:54:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "&&",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 444,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 441,
                                  "name": "myTask",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 414,
                                  "src": "6909:6:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Task_$76_memory_ptr",
                                    "typeString": "struct Governance.Task memory"
                                  }
                                },
                                "id": 442,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "NFTID",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 59,
                                "src": "6909:12:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint40",
                                  "typeString": "uint40"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "id": 443,
                                "name": "_wizId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 400,
                                "src": "6925:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "6909:22:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "6851:80:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 449,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 446,
                                "name": "myTask",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 414,
                                "src": "6935:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Task_$76_memory_ptr",
                                  "typeString": "struct Governance.Task memory"
                                }
                              },
                              "id": 447,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "refuterID",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 73,
                              "src": "6935:16:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "id": 448,
                              "name": "_wizId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 400,
                              "src": "6954:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "6935:25:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "6851:109:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 454,
                        "nodeType": "IfStatement",
                        "src": "6847:158:2",
                        "trueBody": {
                          "id": 453,
                          "nodeType": "Block",
                          "src": "6961:44:2",
                          "statements": [
                            {
                              "expression": {
                                "hexValue": "74727565",
                                "id": 451,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6986:4:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              },
                              "functionReturnParameters": 404,
                              "id": 452,
                              "nodeType": "Return",
                              "src": "6979:11:2"
                            }
                          ]
                        }
                      },
                      {
                        "id": 458,
                        "nodeType": "UncheckedBlock",
                        "src": "7018:15:2",
                        "statements": [
                          {
                            "expression": {
                              "id": 456,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": true,
                              "src": "7028:3:2",
                              "subExpression": {
                                "id": 455,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 417,
                                "src": "7030:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 457,
                            "nodeType": "ExpressionStatement",
                            "src": "7028:3:2"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 422,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 420,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 417,
                      "src": "6721:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 421,
                      "name": "totalTasksSubmitted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 406,
                      "src": "6725:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6721:23:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 460,
                  "initializationExpression": {
                    "assignments": [
                      417
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 417,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "6715:1:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 460,
                        "src": "6707:9:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 416,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6707:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 419,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 418,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6718:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "6707:12:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "6703:340:2"
                },
                {
                  "expression": {
                    "hexValue": "66616c7365",
                    "id": 461,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "7059:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "functionReturnParameters": 404,
                  "id": 462,
                  "nodeType": "Return",
                  "src": "7052:12:2"
                }
              ]
            },
            "functionSelector": "f4739bd9",
            "id": 464,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "areTasksAvailableToConfirm",
            "nameLocation": "6392:26:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 401,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 400,
                  "mutability": "mutable",
                  "name": "_wizId",
                  "nameLocation": "6427:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 464,
                  "src": "6419:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 399,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6419:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6418:16:2"
            },
            "returnParameters": {
              "id": 404,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 403,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 464,
                  "src": "6458:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 402,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6458:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6457:6:2"
            },
            "scope": 1993,
            "src": "6383:688:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 667,
              "nodeType": "Block",
              "src": "7180:1507:2",
              "statements": [
                {
                  "assignments": [
                    477
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 477,
                      "mutability": "mutable",
                      "name": "totalTasksSubmitted",
                      "nameLocation": "7198:19:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 667,
                      "src": "7190:27:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 476,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7190:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 482,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 480,
                        "name": "tasksWaitingConfirmation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98,
                        "src": "7244:24:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Bytes32Deque_$4671_storage",
                          "typeString": "struct DoubleEndedQueue.Bytes32Deque storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Bytes32Deque_$4671_storage",
                          "typeString": "struct DoubleEndedQueue.Bytes32Deque storage ref"
                        }
                      ],
                      "expression": {
                        "id": 478,
                        "name": "DoubleEndedQueue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4993,
                        "src": "7220:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_DoubleEndedQueue_$4993_$",
                          "typeString": "type(library DoubleEndedQueue)"
                        }
                      },
                      "id": 479,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4976,
                      "src": "7220:23:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32Deque_$4671_storage_ptr_$returns$_t_uint256_$",
                        "typeString": "function (struct DoubleEndedQueue.Bytes32Deque storage pointer) view returns (uint256)"
                      }
                    },
                    "id": 481,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7220:49:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7190:79:2"
                },
                {
                  "assignments": [
                    485
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 485,
                      "mutability": "mutable",
                      "name": "myTask",
                      "nameLocation": "7291:6:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 667,
                      "src": "7279:18:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Task_$76_memory_ptr",
                        "typeString": "struct Governance.Task"
                      },
                      "typeName": {
                        "id": 484,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 483,
                          "name": "Task",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 76,
                          "src": "7279:4:2"
                        },
                        "referencedDeclaration": 76,
                        "src": "7279:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Task_$76_storage_ptr",
                          "typeString": "struct Governance.Task"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 486,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7279:18:2"
                },
                {
                  "assignments": [
                    488
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 488,
                      "mutability": "mutable",
                      "name": "taskId",
                      "nameLocation": "7315:6:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 667,
                      "src": "7307:14:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 487,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7307:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 489,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7307:14:2"
                },
                {
                  "assignments": [
                    491
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 491,
                      "mutability": "mutable",
                      "name": "count",
                      "nameLocation": "7339:5:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 667,
                      "src": "7331:13:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 490,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7331:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 493,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 492,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "7345:1:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7331:15:2"
                },
                {
                  "body": {
                    "id": 538,
                    "nodeType": "Block",
                    "src": "7401:308:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 510,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 501,
                            "name": "taskId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 488,
                            "src": "7415:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 506,
                                    "name": "tasksWaitingConfirmation",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 98,
                                    "src": "7452:24:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Bytes32Deque_$4671_storage",
                                      "typeString": "struct DoubleEndedQueue.Bytes32Deque storage ref"
                                    }
                                  },
                                  {
                                    "id": 507,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 495,
                                    "src": "7478:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_struct$_Bytes32Deque_$4671_storage",
                                      "typeString": "struct DoubleEndedQueue.Bytes32Deque storage ref"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 504,
                                    "name": "DoubleEndedQueue",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4993,
                                    "src": "7432:16:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_DoubleEndedQueue_$4993_$",
                                      "typeString": "type(library DoubleEndedQueue)"
                                    }
                                  },
                                  "id": 505,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "at",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 4930,
                                  "src": "7432:19:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32Deque_$4671_storage_ptr_$_t_uint256_$returns$_t_bytes32_$",
                                    "typeString": "function (struct DoubleEndedQueue.Bytes32Deque storage pointer,uint256) view returns (bytes32)"
                                  }
                                },
                                "id": 508,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7432:48:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "id": 503,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7424:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 502,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "7424:7:2",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 509,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7424:57:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7415:66:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 511,
                        "nodeType": "ExpressionStatement",
                        "src": "7415:66:2"
                      },
                      {
                        "expression": {
                          "id": 516,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 512,
                            "name": "myTask",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 485,
                            "src": "7495:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Task_$76_memory_ptr",
                              "typeString": "struct Governance.Task memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 513,
                              "name": "tasks",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 110,
                              "src": "7504:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Task_$76_storage_$",
                                "typeString": "mapping(uint256 => struct Governance.Task storage ref)"
                              }
                            },
                            "id": 515,
                            "indexExpression": {
                              "id": 514,
                              "name": "taskId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 488,
                              "src": "7510:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "7504:13:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Task_$76_storage",
                              "typeString": "struct Governance.Task storage ref"
                            }
                          },
                          "src": "7495:22:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Task_$76_memory_ptr",
                            "typeString": "struct Governance.Task memory"
                          }
                        },
                        "id": 517,
                        "nodeType": "ExpressionStatement",
                        "src": "7495:22:2"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 527,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 522,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 518,
                                "name": "myTask",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 485,
                                "src": "7535:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Task_$76_memory_ptr",
                                  "typeString": "struct Governance.Task memory"
                                }
                              },
                              "id": 519,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "verificationReservedTimestamp",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 75,
                              "src": "7535:36:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint40",
                                "typeString": "uint40"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "expression": {
                                "id": 520,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "7574:5:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 521,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "7574:15:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "7535:54:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint40",
                              "typeString": "uint40"
                            },
                            "id": 526,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 523,
                                "name": "myTask",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 485,
                                "src": "7593:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Task_$76_memory_ptr",
                                  "typeString": "struct Governance.Task memory"
                                }
                              },
                              "id": 524,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "verifierID",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 71,
                              "src": "7593:17:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 525,
                              "name": "_wizId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 466,
                              "src": "7613:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint40",
                                "typeString": "uint40"
                              }
                            },
                            "src": "7593:26:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "7535:84:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 533,
                        "nodeType": "IfStatement",
                        "src": "7531:140:2",
                        "trueBody": {
                          "id": 532,
                          "nodeType": "Block",
                          "src": "7620:51:2",
                          "statements": [
                            {
                              "id": 531,
                              "nodeType": "UncheckedBlock",
                              "src": "7638:19:2",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 529,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "UnaryOperation",
                                    "operator": "++",
                                    "prefix": true,
                                    "src": "7648:7:2",
                                    "subExpression": {
                                      "id": 528,
                                      "name": "count",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 491,
                                      "src": "7650:5:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 530,
                                  "nodeType": "ExpressionStatement",
                                  "src": "7648:7:2"
                                }
                              ]
                            }
                          ]
                        }
                      },
                      {
                        "id": 537,
                        "nodeType": "UncheckedBlock",
                        "src": "7684:15:2",
                        "statements": [
                          {
                            "expression": {
                              "id": 535,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": true,
                              "src": "7694:3:2",
                              "subExpression": {
                                "id": 534,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 495,
                                "src": "7696:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 536,
                            "nodeType": "ExpressionStatement",
                            "src": "7694:3:2"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 500,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 498,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 495,
                      "src": "7375:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 499,
                      "name": "totalTasksSubmitted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 477,
                      "src": "7379:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7375:23:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 539,
                  "initializationExpression": {
                    "assignments": [
                      495
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 495,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "7369:1:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 539,
                        "src": "7361:9:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 494,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7361:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 497,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 496,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7372:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "7361:12:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "7357:352:2"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 542,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 540,
                      "name": "count",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 491,
                      "src": "7766:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 541,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7773:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "7766:8:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 571,
                  "nodeType": "IfStatement",
                  "src": "7762:249:2",
                  "trueBody": {
                    "id": 570,
                    "nodeType": "Block",
                    "src": "7776:235:2",
                    "statements": [
                      {
                        "assignments": [
                          547
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 547,
                            "mutability": "mutable",
                            "name": "myReturn",
                            "nameLocation": "7804:8:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 570,
                            "src": "7790:22:2",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Task_$76_memory_ptr_$dyn_memory_ptr",
                              "typeString": "struct Governance.Task[]"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 545,
                                "nodeType": "UserDefinedTypeName",
                                "pathNode": {
                                  "id": 544,
                                  "name": "Task",
                                  "nodeType": "IdentifierPath",
                                  "referencedDeclaration": 76,
                                  "src": "7790:4:2"
                                },
                                "referencedDeclaration": 76,
                                "src": "7790:4:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Task_$76_storage_ptr",
                                  "typeString": "struct Governance.Task"
                                }
                              },
                              "id": 546,
                              "nodeType": "ArrayTypeName",
                              "src": "7790:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Task_$76_storage_$dyn_storage_ptr",
                                "typeString": "struct Governance.Task[]"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 554,
                        "initialValue": {
                          "arguments": [
                            {
                              "hexValue": "31",
                              "id": 552,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7825:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              }
                            ],
                            "id": 551,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "7814:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_Task_$76_memory_ptr_$dyn_memory_ptr_$",
                              "typeString": "function (uint256) pure returns (struct Governance.Task memory[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 549,
                                "nodeType": "UserDefinedTypeName",
                                "pathNode": {
                                  "id": 548,
                                  "name": "Task",
                                  "nodeType": "IdentifierPath",
                                  "referencedDeclaration": 76,
                                  "src": "7818:4:2"
                                },
                                "referencedDeclaration": 76,
                                "src": "7818:4:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Task_$76_storage_ptr",
                                  "typeString": "struct Governance.Task"
                                }
                              },
                              "id": 550,
                              "nodeType": "ArrayTypeName",
                              "src": "7818:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Task_$76_storage_$dyn_storage_ptr",
                                "typeString": "struct Governance.Task[]"
                              }
                            }
                          },
                          "id": 553,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7814:13:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Task_$76_memory_ptr_$dyn_memory_ptr",
                            "typeString": "struct Governance.Task memory[] memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7790:37:2"
                      },
                      {
                        "assignments": [
                          559
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 559,
                            "mutability": "mutable",
                            "name": "myReturnUint",
                            "nameLocation": "7858:12:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 570,
                            "src": "7841:29:2",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[]"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 557,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "7841:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 558,
                              "nodeType": "ArrayTypeName",
                              "src": "7841:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                                "typeString": "uint256[]"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 565,
                        "initialValue": {
                          "arguments": [
                            {
                              "hexValue": "31",
                              "id": 563,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7886:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              }
                            ],
                            "id": 562,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "7872:13:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                              "typeString": "function (uint256) pure returns (uint256[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 560,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "7876:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 561,
                              "nodeType": "ArrayTypeName",
                              "src": "7876:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                                "typeString": "uint256[]"
                              }
                            }
                          },
                          "id": 564,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7872:16:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7841:47:2"
                      },
                      {
                        "expression": {
                          "components": [
                            {
                              "id": 566,
                              "name": "myReturn",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 547,
                              "src": "7977:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Task_$76_memory_ptr_$dyn_memory_ptr",
                                "typeString": "struct Governance.Task memory[] memory"
                              }
                            },
                            {
                              "id": 567,
                              "name": "myReturnUint",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 559,
                              "src": "7987:12:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            }
                          ],
                          "id": 568,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "7976:24:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_array$_t_struct$_Task_$76_memory_ptr_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
                            "typeString": "tuple(struct Governance.Task memory[] memory,uint256[] memory)"
                          }
                        },
                        "functionReturnParameters": 475,
                        "id": 569,
                        "nodeType": "Return",
                        "src": "7969:31:2"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    573
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 573,
                      "mutability": "mutable",
                      "name": "counter",
                      "nameLocation": "8029:7:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 667,
                      "src": "8021:15:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 572,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8021:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 575,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 574,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "8039:1:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8021:19:2"
                },
                {
                  "assignments": [
                    580
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 580,
                      "mutability": "mutable",
                      "name": "myTasks",
                      "nameLocation": "8064:7:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 667,
                      "src": "8050:21:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Task_$76_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct Governance.Task[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 578,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 577,
                            "name": "Task",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 76,
                            "src": "8050:4:2"
                          },
                          "referencedDeclaration": 76,
                          "src": "8050:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Task_$76_storage_ptr",
                            "typeString": "struct Governance.Task"
                          }
                        },
                        "id": 579,
                        "nodeType": "ArrayTypeName",
                        "src": "8050:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Task_$76_storage_$dyn_storage_ptr",
                          "typeString": "struct Governance.Task[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 587,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 585,
                        "name": "count",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 491,
                        "src": "8085:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 584,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "8074:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_Task_$76_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (struct Governance.Task memory[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 582,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 581,
                            "name": "Task",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 76,
                            "src": "8078:4:2"
                          },
                          "referencedDeclaration": 76,
                          "src": "8078:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Task_$76_storage_ptr",
                            "typeString": "struct Governance.Task"
                          }
                        },
                        "id": 583,
                        "nodeType": "ArrayTypeName",
                        "src": "8078:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Task_$76_storage_$dyn_storage_ptr",
                          "typeString": "struct Governance.Task[]"
                        }
                      }
                    },
                    "id": 586,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8074:17:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Task_$76_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct Governance.Task memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8050:41:2"
                },
                {
                  "assignments": [
                    592
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 592,
                      "mutability": "mutable",
                      "name": "myTaskIds",
                      "nameLocation": "8118:9:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 667,
                      "src": "8101:26:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 590,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8101:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 591,
                        "nodeType": "ArrayTypeName",
                        "src": "8101:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 598,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 596,
                        "name": "count",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 491,
                        "src": "8144:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 595,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "8130:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (uint256[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 593,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8134:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 594,
                        "nodeType": "ArrayTypeName",
                        "src": "8134:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      }
                    },
                    "id": 597,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8130:20:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8101:49:2"
                },
                {
                  "body": {
                    "id": 661,
                    "nodeType": "Block",
                    "src": "8204:440:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 615,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 606,
                            "name": "taskId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 488,
                            "src": "8218:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 611,
                                    "name": "tasksWaitingConfirmation",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 98,
                                    "src": "8255:24:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Bytes32Deque_$4671_storage",
                                      "typeString": "struct DoubleEndedQueue.Bytes32Deque storage ref"
                                    }
                                  },
                                  {
                                    "id": 612,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 600,
                                    "src": "8281:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_struct$_Bytes32Deque_$4671_storage",
                                      "typeString": "struct DoubleEndedQueue.Bytes32Deque storage ref"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 609,
                                    "name": "DoubleEndedQueue",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4993,
                                    "src": "8235:16:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_DoubleEndedQueue_$4993_$",
                                      "typeString": "type(library DoubleEndedQueue)"
                                    }
                                  },
                                  "id": 610,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "at",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 4930,
                                  "src": "8235:19:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32Deque_$4671_storage_ptr_$_t_uint256_$returns$_t_bytes32_$",
                                    "typeString": "function (struct DoubleEndedQueue.Bytes32Deque storage pointer,uint256) view returns (bytes32)"
                                  }
                                },
                                "id": 613,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8235:48:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "id": 608,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "8227:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 607,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "8227:7:2",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 614,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8227:57:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8218:66:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 616,
                        "nodeType": "ExpressionStatement",
                        "src": "8218:66:2"
                      },
                      {
                        "expression": {
                          "id": 621,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 617,
                            "name": "myTask",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 485,
                            "src": "8298:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Task_$76_memory_ptr",
                              "typeString": "struct Governance.Task memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 618,
                              "name": "tasks",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 110,
                              "src": "8307:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Task_$76_storage_$",
                                "typeString": "mapping(uint256 => struct Governance.Task storage ref)"
                              }
                            },
                            "id": 620,
                            "indexExpression": {
                              "id": 619,
                              "name": "taskId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 488,
                              "src": "8313:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "8307:13:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Task_$76_storage",
                              "typeString": "struct Governance.Task storage ref"
                            }
                          },
                          "src": "8298:22:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Task_$76_memory_ptr",
                            "typeString": "struct Governance.Task memory"
                          }
                        },
                        "id": 622,
                        "nodeType": "ExpressionStatement",
                        "src": "8298:22:2"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 632,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 627,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 623,
                                "name": "myTask",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 485,
                                "src": "8338:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Task_$76_memory_ptr",
                                  "typeString": "struct Governance.Task memory"
                                }
                              },
                              "id": 624,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "verificationReservedTimestamp",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 75,
                              "src": "8338:36:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint40",
                                "typeString": "uint40"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "expression": {
                                "id": 625,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "8377:5:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 626,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "8377:15:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "8338:54:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint40",
                              "typeString": "uint40"
                            },
                            "id": 631,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 628,
                                "name": "myTask",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 485,
                                "src": "8396:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Task_$76_memory_ptr",
                                  "typeString": "struct Governance.Task memory"
                                }
                              },
                              "id": 629,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "verifierID",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 71,
                              "src": "8396:17:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 630,
                              "name": "_wizId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 466,
                              "src": "8416:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint40",
                                "typeString": "uint40"
                              }
                            },
                            "src": "8396:26:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "8338:84:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 656,
                        "nodeType": "IfStatement",
                        "src": "8334:272:2",
                        "trueBody": {
                          "id": 655,
                          "nodeType": "Block",
                          "src": "8423:183:2",
                          "statements": [
                            {
                              "expression": {
                                "id": 637,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 633,
                                    "name": "myTasks",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 580,
                                    "src": "8441:7:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_Task_$76_memory_ptr_$dyn_memory_ptr",
                                      "typeString": "struct Governance.Task memory[] memory"
                                    }
                                  },
                                  "id": 635,
                                  "indexExpression": {
                                    "id": 634,
                                    "name": "counter",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 573,
                                    "src": "8449:7:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "8441:16:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Task_$76_memory_ptr",
                                    "typeString": "struct Governance.Task memory"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 636,
                                  "name": "myTask",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 485,
                                  "src": "8460:6:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Task_$76_memory_ptr",
                                    "typeString": "struct Governance.Task memory"
                                  }
                                },
                                "src": "8441:25:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Task_$76_memory_ptr",
                                  "typeString": "struct Governance.Task memory"
                                }
                              },
                              "id": 638,
                              "nodeType": "ExpressionStatement",
                              "src": "8441:25:2"
                            },
                            {
                              "expression": {
                                "id": 643,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 639,
                                    "name": "myTaskIds",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 592,
                                    "src": "8484:9:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                      "typeString": "uint256[] memory"
                                    }
                                  },
                                  "id": 641,
                                  "indexExpression": {
                                    "id": 640,
                                    "name": "counter",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 573,
                                    "src": "8494:7:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "8484:18:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 642,
                                  "name": "taskId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 488,
                                  "src": "8505:6:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "8484:27:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 644,
                              "nodeType": "ExpressionStatement",
                              "src": "8484:27:2"
                            },
                            {
                              "id": 648,
                              "nodeType": "UncheckedBlock",
                              "src": "8529:21:2",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 646,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "UnaryOperation",
                                    "operator": "++",
                                    "prefix": true,
                                    "src": "8539:9:2",
                                    "subExpression": {
                                      "id": 645,
                                      "name": "counter",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 573,
                                      "src": "8541:7:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 647,
                                  "nodeType": "ExpressionStatement",
                                  "src": "8539:9:2"
                                }
                              ]
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 651,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 649,
                                  "name": "counter",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 573,
                                  "src": "8570:7:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">",
                                "rightExpression": {
                                  "id": 650,
                                  "name": "count",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 491,
                                  "src": "8578:5:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "8570:13:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 654,
                              "nodeType": "IfStatement",
                              "src": "8567:25:2",
                              "trueBody": {
                                "id": 653,
                                "nodeType": "Block",
                                "src": "8584:8:2",
                                "statements": [
                                  {
                                    "id": 652,
                                    "nodeType": "Break",
                                    "src": "8585:5:2"
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      },
                      {
                        "id": 660,
                        "nodeType": "UncheckedBlock",
                        "src": "8619:15:2",
                        "statements": [
                          {
                            "expression": {
                              "id": 658,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": true,
                              "src": "8629:3:2",
                              "subExpression": {
                                "id": 657,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 600,
                                "src": "8631:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 659,
                            "nodeType": "ExpressionStatement",
                            "src": "8629:3:2"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 605,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 603,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 600,
                      "src": "8178:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 604,
                      "name": "totalTasksSubmitted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 477,
                      "src": "8182:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8178:23:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 662,
                  "initializationExpression": {
                    "assignments": [
                      600
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 600,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "8172:1:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 662,
                        "src": "8164:9:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 599,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8164:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 602,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 601,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8175:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "8164:12:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "8160:484:2"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "id": 663,
                        "name": "myTasks",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 580,
                        "src": "8661:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Task_$76_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct Governance.Task memory[] memory"
                        }
                      },
                      {
                        "id": 664,
                        "name": "myTaskIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 592,
                        "src": "8670:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      }
                    ],
                    "id": 665,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "8660:20:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_array$_t_struct$_Task_$76_memory_ptr_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
                      "typeString": "tuple(struct Governance.Task memory[] memory,uint256[] memory)"
                    }
                  },
                  "functionReturnParameters": 475,
                  "id": 666,
                  "nodeType": "Return",
                  "src": "8653:27:2"
                }
              ]
            },
            "functionSelector": "4b50f16a",
            "id": 668,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTasksAssignedToWiz",
            "nameLocation": "7087:21:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 467,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 466,
                  "mutability": "mutable",
                  "name": "_wizId",
                  "nameLocation": "7116:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 668,
                  "src": "7109:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  },
                  "typeName": {
                    "id": 465,
                    "name": "uint40",
                    "nodeType": "ElementaryTypeName",
                    "src": "7109:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7108:15:2"
            },
            "returnParameters": {
              "id": 475,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 471,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 668,
                  "src": "7147:13:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Task_$76_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct Governance.Task[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 469,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 468,
                        "name": "Task",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 76,
                        "src": "7147:4:2"
                      },
                      "referencedDeclaration": 76,
                      "src": "7147:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Task_$76_storage_ptr",
                        "typeString": "struct Governance.Task"
                      }
                    },
                    "id": 470,
                    "nodeType": "ArrayTypeName",
                    "src": "7147:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Task_$76_storage_$dyn_storage_ptr",
                      "typeString": "struct Governance.Task[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 474,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 668,
                  "src": "7162:16:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 472,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "7162:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 473,
                    "nodeType": "ArrayTypeName",
                    "src": "7162:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7146:33:2"
            },
            "scope": 1993,
            "src": "7078:1609:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 839,
              "nodeType": "Block",
              "src": "8851:1412:2",
              "statements": [
                {
                  "assignments": [
                    677
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 677,
                      "mutability": "mutable",
                      "name": "count",
                      "nameLocation": "8869:5:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 839,
                      "src": "8861:13:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 676,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8861:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 678,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8861:13:2"
                },
                {
                  "body": {
                    "id": 729,
                    "nodeType": "Block",
                    "src": "8922:506:2",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 718,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 711,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 703,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 695,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "baseExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 687,
                                        "name": "taskTypes",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 95,
                                        "src": "8939:9:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_TaskType_$55_storage_$dyn_storage",
                                          "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                        }
                                      },
                                      "id": 689,
                                      "indexExpression": {
                                        "id": 688,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 680,
                                        "src": "8949:1:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "8939:12:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_TaskType_$55_storage",
                                        "typeString": "struct Governance.TaskType storage ref"
                                      }
                                    },
                                    "id": 690,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "nextActiveTimeThreshold",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 38,
                                    "src": "8939:36:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint40_$_t_uint256_$",
                                      "typeString": "mapping(uint40 => uint256)"
                                    }
                                  },
                                  "id": 692,
                                  "indexExpression": {
                                    "id": 691,
                                    "name": "_wizId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 670,
                                    "src": "8976:6:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint40",
                                      "typeString": "uint40"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "8939:44:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<",
                                "rightExpression": {
                                  "expression": {
                                    "id": 693,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "8986:5:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 694,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "8986:15:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "8939:62:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 702,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 696,
                                      "name": "taskTypes",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 95,
                                      "src": "9017:9:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_TaskType_$55_storage_$dyn_storage",
                                        "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                      }
                                    },
                                    "id": 698,
                                    "indexExpression": {
                                      "id": 697,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 680,
                                      "src": "9027:1:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "9017:12:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_TaskType_$55_storage",
                                      "typeString": "struct Governance.TaskType storage ref"
                                    }
                                  },
                                  "id": 699,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "begTimestamp",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 50,
                                  "src": "9017:25:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint40",
                                    "typeString": "uint40"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<=",
                                "rightExpression": {
                                  "expression": {
                                    "id": 700,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "9046:5:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 701,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "9046:15:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "9017:44:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "8939:122:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "&&",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 710,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 704,
                                    "name": "taskTypes",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 95,
                                    "src": "9065:9:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_TaskType_$55_storage_$dyn_storage",
                                      "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                    }
                                  },
                                  "id": 706,
                                  "indexExpression": {
                                    "id": 705,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 680,
                                    "src": "9075:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "9065:12:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_TaskType_$55_storage",
                                    "typeString": "struct Governance.TaskType storage ref"
                                  }
                                },
                                "id": 707,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "endTimestamp",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 52,
                                "src": "9065:25:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint40",
                                  "typeString": "uint40"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "expression": {
                                  "id": 708,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "9093:5:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 709,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "9093:15:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "9065:43:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "8939:169:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            },
                            "id": 717,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 712,
                                  "name": "taskTypes",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 95,
                                  "src": "9124:9:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_TaskType_$55_storage_$dyn_storage",
                                    "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                  }
                                },
                                "id": 714,
                                "indexExpression": {
                                  "id": 713,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 680,
                                  "src": "9134:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "9124:12:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TaskType_$55_storage",
                                  "typeString": "struct Governance.TaskType storage ref"
                                }
                              },
                              "id": 715,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "availableSlots",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 54,
                              "src": "9124:27:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 716,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9154:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "9124:31:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "8939:216:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 724,
                        "nodeType": "IfStatement",
                        "src": "8936:285:2",
                        "trueBody": {
                          "id": 723,
                          "nodeType": "Block",
                          "src": "9170:51:2",
                          "statements": [
                            {
                              "id": 722,
                              "nodeType": "UncheckedBlock",
                              "src": "9188:19:2",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 720,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "UnaryOperation",
                                    "operator": "++",
                                    "prefix": true,
                                    "src": "9198:7:2",
                                    "subExpression": {
                                      "id": 719,
                                      "name": "count",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 677,
                                      "src": "9200:5:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 721,
                                  "nodeType": "ExpressionStatement",
                                  "src": "9198:7:2"
                                }
                              ]
                            }
                          ]
                        }
                      },
                      {
                        "id": 728,
                        "nodeType": "UncheckedBlock",
                        "src": "9403:15:2",
                        "statements": [
                          {
                            "expression": {
                              "id": 726,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": true,
                              "src": "9413:3:2",
                              "subExpression": {
                                "id": 725,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 680,
                                "src": "9415:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 727,
                            "nodeType": "ExpressionStatement",
                            "src": "9413:3:2"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 686,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 683,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 680,
                      "src": "8901:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 684,
                        "name": "taskTypes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 95,
                        "src": "8904:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_TaskType_$55_storage_$dyn_storage",
                          "typeString": "struct Governance.TaskType storage ref[] storage ref"
                        }
                      },
                      "id": 685,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "8904:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8901:19:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 730,
                  "initializationExpression": {
                    "assignments": [
                      680
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 680,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "8896:1:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 730,
                        "src": "8888:9:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 679,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8888:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 682,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 681,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8898:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "8888:11:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "8884:544:2"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 733,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 731,
                      "name": "count",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 677,
                      "src": "9485:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 732,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9492:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "9485:8:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 754,
                  "nodeType": "IfStatement",
                  "src": "9481:139:2",
                  "trueBody": {
                    "id": 753,
                    "nodeType": "Block",
                    "src": "9495:125:2",
                    "statements": [
                      {
                        "assignments": [
                          738
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 738,
                            "mutability": "mutable",
                            "name": "myReturn",
                            "nameLocation": "9525:8:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 753,
                            "src": "9509:24:2",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                              "typeString": "string[]"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 736,
                                "name": "string",
                                "nodeType": "ElementaryTypeName",
                                "src": "9509:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_storage_ptr",
                                  "typeString": "string"
                                }
                              },
                              "id": 737,
                              "nodeType": "ArrayTypeName",
                              "src": "9509:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                                "typeString": "string[]"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 744,
                        "initialValue": {
                          "arguments": [
                            {
                              "hexValue": "31",
                              "id": 742,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9548:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              }
                            ],
                            "id": 741,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "9535:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$",
                              "typeString": "function (uint256) pure returns (string memory[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 739,
                                "name": "string",
                                "nodeType": "ElementaryTypeName",
                                "src": "9539:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_storage_ptr",
                                  "typeString": "string"
                                }
                              },
                              "id": 740,
                              "nodeType": "ArrayTypeName",
                              "src": "9539:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                                "typeString": "string[]"
                              }
                            }
                          },
                          "id": 743,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9535:15:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                            "typeString": "string memory[] memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9509:41:2"
                      },
                      {
                        "expression": {
                          "id": 749,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 745,
                              "name": "myReturn",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 738,
                              "src": "9564:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                                "typeString": "string memory[] memory"
                              }
                            },
                            "id": 747,
                            "indexExpression": {
                              "hexValue": "30",
                              "id": 746,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9573:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "9564:11:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "",
                            "id": 748,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9578:2:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                              "typeString": "literal_string \"\""
                            },
                            "value": ""
                          },
                          "src": "9564:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "id": 750,
                        "nodeType": "ExpressionStatement",
                        "src": "9564:16:2"
                      },
                      {
                        "expression": {
                          "id": 751,
                          "name": "myReturn",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 738,
                          "src": "9601:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                            "typeString": "string memory[] memory"
                          }
                        },
                        "functionReturnParameters": 675,
                        "id": 752,
                        "nodeType": "Return",
                        "src": "9594:15:2"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    759
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 759,
                      "mutability": "mutable",
                      "name": "myTasks",
                      "nameLocation": "9646:7:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 839,
                      "src": "9630:23:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                        "typeString": "string[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 757,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "9630:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "id": 758,
                        "nodeType": "ArrayTypeName",
                        "src": "9630:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                          "typeString": "string[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 765,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 763,
                        "name": "count",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 677,
                        "src": "9669:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 762,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "9656:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (string memory[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 760,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "9660:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "id": 761,
                        "nodeType": "ArrayTypeName",
                        "src": "9660:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                          "typeString": "string[]"
                        }
                      }
                    },
                    "id": 764,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9656:19:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                      "typeString": "string memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9630:45:2"
                },
                {
                  "assignments": [
                    767
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 767,
                      "mutability": "mutable",
                      "name": "counter",
                      "nameLocation": "9693:7:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 839,
                      "src": "9685:15:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 766,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9685:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 769,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 768,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "9703:1:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9685:19:2"
                },
                {
                  "body": {
                    "id": 835,
                    "nodeType": "Block",
                    "src": "9752:481:2",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 809,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 802,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 794,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 786,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "baseExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 778,
                                        "name": "taskTypes",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 95,
                                        "src": "9769:9:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_TaskType_$55_storage_$dyn_storage",
                                          "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                        }
                                      },
                                      "id": 780,
                                      "indexExpression": {
                                        "id": 779,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 771,
                                        "src": "9779:1:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "9769:12:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_TaskType_$55_storage",
                                        "typeString": "struct Governance.TaskType storage ref"
                                      }
                                    },
                                    "id": 781,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "nextActiveTimeThreshold",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 38,
                                    "src": "9769:36:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint40_$_t_uint256_$",
                                      "typeString": "mapping(uint40 => uint256)"
                                    }
                                  },
                                  "id": 783,
                                  "indexExpression": {
                                    "id": 782,
                                    "name": "_wizId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 670,
                                    "src": "9806:6:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint40",
                                      "typeString": "uint40"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "9769:44:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<",
                                "rightExpression": {
                                  "expression": {
                                    "id": 784,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "9816:5:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 785,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "9816:15:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "9769:62:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 793,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 787,
                                      "name": "taskTypes",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 95,
                                      "src": "9847:9:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_TaskType_$55_storage_$dyn_storage",
                                        "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                      }
                                    },
                                    "id": 789,
                                    "indexExpression": {
                                      "id": 788,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 771,
                                      "src": "9857:1:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "9847:12:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_TaskType_$55_storage",
                                      "typeString": "struct Governance.TaskType storage ref"
                                    }
                                  },
                                  "id": 790,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "begTimestamp",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 50,
                                  "src": "9847:25:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint40",
                                    "typeString": "uint40"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<=",
                                "rightExpression": {
                                  "expression": {
                                    "id": 791,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "9876:5:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 792,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "9876:15:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "9847:44:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "9769:122:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "&&",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 801,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 795,
                                    "name": "taskTypes",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 95,
                                    "src": "9895:9:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_TaskType_$55_storage_$dyn_storage",
                                      "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                    }
                                  },
                                  "id": 797,
                                  "indexExpression": {
                                    "id": 796,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 771,
                                    "src": "9905:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "9895:12:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_TaskType_$55_storage",
                                    "typeString": "struct Governance.TaskType storage ref"
                                  }
                                },
                                "id": 798,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "endTimestamp",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 52,
                                "src": "9895:25:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint40",
                                  "typeString": "uint40"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "expression": {
                                  "id": 799,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "9923:5:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 800,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "9923:15:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "9895:43:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "9769:169:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            },
                            "id": 808,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 803,
                                  "name": "taskTypes",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 95,
                                  "src": "9954:9:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_TaskType_$55_storage_$dyn_storage",
                                    "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                  }
                                },
                                "id": 805,
                                "indexExpression": {
                                  "id": 804,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 771,
                                  "src": "9964:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "9954:12:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TaskType_$55_storage",
                                  "typeString": "struct Governance.TaskType storage ref"
                                }
                              },
                              "id": 806,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "availableSlots",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 54,
                              "src": "9954:27:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 807,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9984:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "9954:31:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "9769:216:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 830,
                        "nodeType": "IfStatement",
                        "src": "9766:429:2",
                        "trueBody": {
                          "id": 829,
                          "nodeType": "Block",
                          "src": "10000:195:2",
                          "statements": [
                            {
                              "expression": {
                                "id": 817,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 810,
                                    "name": "myTasks",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 759,
                                    "src": "10018:7:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                                      "typeString": "string memory[] memory"
                                    }
                                  },
                                  "id": 812,
                                  "indexExpression": {
                                    "id": 811,
                                    "name": "counter",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 767,
                                    "src": "10026:7:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "10018:16:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 813,
                                      "name": "taskTypes",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 95,
                                      "src": "10037:9:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_TaskType_$55_storage_$dyn_storage",
                                        "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                      }
                                    },
                                    "id": 815,
                                    "indexExpression": {
                                      "id": 814,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 771,
                                      "src": "10047:1:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "10037:12:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_TaskType_$55_storage",
                                      "typeString": "struct Governance.TaskType storage ref"
                                    }
                                  },
                                  "id": 816,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "IPFSHash",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 40,
                                  "src": "10037:21:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_storage",
                                    "typeString": "string storage ref"
                                  }
                                },
                                "src": "10018:40:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              "id": 818,
                              "nodeType": "ExpressionStatement",
                              "src": "10018:40:2"
                            },
                            {
                              "id": 822,
                              "nodeType": "UncheckedBlock",
                              "src": "10076:21:2",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 820,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "UnaryOperation",
                                    "operator": "++",
                                    "prefix": true,
                                    "src": "10086:9:2",
                                    "subExpression": {
                                      "id": 819,
                                      "name": "counter",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 767,
                                      "src": "10088:7:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 821,
                                  "nodeType": "ExpressionStatement",
                                  "src": "10086:9:2"
                                }
                              ]
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 825,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 823,
                                  "name": "counter",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 767,
                                  "src": "10117:7:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">=",
                                "rightExpression": {
                                  "id": 824,
                                  "name": "count",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 677,
                                  "src": "10128:5:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "10117:16:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 828,
                              "nodeType": "IfStatement",
                              "src": "10114:67:2",
                              "trueBody": {
                                "id": 827,
                                "nodeType": "Block",
                                "src": "10135:46:2",
                                "statements": [
                                  {
                                    "id": 826,
                                    "nodeType": "Break",
                                    "src": "10157:5:2"
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      },
                      {
                        "id": 834,
                        "nodeType": "UncheckedBlock",
                        "src": "10208:15:2",
                        "statements": [
                          {
                            "expression": {
                              "id": 832,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": true,
                              "src": "10218:3:2",
                              "subExpression": {
                                "id": 831,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 771,
                                "src": "10220:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 833,
                            "nodeType": "ExpressionStatement",
                            "src": "10218:3:2"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 777,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 774,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 771,
                      "src": "9731:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 775,
                        "name": "taskTypes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 95,
                        "src": "9734:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_TaskType_$55_storage_$dyn_storage",
                          "typeString": "struct Governance.TaskType storage ref[] storage ref"
                        }
                      },
                      "id": 776,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "9734:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9731:19:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 836,
                  "initializationExpression": {
                    "assignments": [
                      771
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 771,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "9726:1:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 836,
                        "src": "9718:9:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 770,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "9718:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 773,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 772,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9728:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "9718:11:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "9714:519:2"
                },
                {
                  "expression": {
                    "id": 837,
                    "name": "myTasks",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 759,
                    "src": "10249:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                      "typeString": "string memory[] memory"
                    }
                  },
                  "functionReturnParameters": 675,
                  "id": 838,
                  "nodeType": "Return",
                  "src": "10242:14:2"
                }
              ]
            },
            "functionSelector": "b2bad544",
            "id": 840,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getMyAvailableTaskTypes",
            "nameLocation": "8772:23:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 671,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 670,
                  "mutability": "mutable",
                  "name": "_wizId",
                  "nameLocation": "8803:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 840,
                  "src": "8796:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  },
                  "typeName": {
                    "id": 669,
                    "name": "uint40",
                    "nodeType": "ElementaryTypeName",
                    "src": "8796:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8795:15:2"
            },
            "returnParameters": {
              "id": 675,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 674,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 840,
                  "src": "8834:15:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                    "typeString": "string[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 672,
                      "name": "string",
                      "nodeType": "ElementaryTypeName",
                      "src": "8834:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      }
                    },
                    "id": 673,
                    "nodeType": "ArrayTypeName",
                    "src": "8834:8:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                      "typeString": "string[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8833:17:2"
            },
            "scope": 1993,
            "src": "8763:1500:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 853,
              "nodeType": "Block",
              "src": "10430:44:2",
              "statements": [
                {
                  "expression": {
                    "id": 851,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 847,
                      "name": "wizardsNFT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25,
                      "src": "10440:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Wizards_$4652",
                        "typeString": "contract Wizards"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 849,
                          "name": "_addy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 842,
                          "src": "10461:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 848,
                        "name": "Wizards",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4652,
                        "src": "10453:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Wizards_$4652_$",
                          "typeString": "type(contract Wizards)"
                        }
                      },
                      "id": 850,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10453:14:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Wizards_$4652",
                        "typeString": "contract Wizards"
                      }
                    },
                    "src": "10440:27:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Wizards_$4652",
                      "typeString": "contract Wizards"
                    }
                  },
                  "id": 852,
                  "nodeType": "ExpressionStatement",
                  "src": "10440:27:2"
                }
              ]
            },
            "functionSelector": "69d03738",
            "id": 854,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 845,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 844,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 7082,
                  "src": "10420:9:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "10420:9:2"
              }
            ],
            "name": "setNFTAddress",
            "nameLocation": "10382:13:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 843,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 842,
                  "mutability": "mutable",
                  "name": "_addy",
                  "nameLocation": "10404:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 854,
                  "src": "10396:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 841,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10396:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10395:15:2"
            },
            "returnParameters": {
              "id": 846,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10430:0:2"
            },
            "scope": 1993,
            "src": "10373:101:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 929,
              "nodeType": "Block",
              "src": "10668:1153:2",
              "statements": [
                {
                  "body": {
                    "id": 927,
                    "nodeType": "Block",
                    "src": "10715:1100:2",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          "id": 882,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 870,
                                        "name": "taskTypes",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 95,
                                        "src": "10759:9:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_TaskType_$55_storage_$dyn_storage",
                                          "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                        }
                                      },
                                      "id": 872,
                                      "indexExpression": {
                                        "id": 871,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 860,
                                        "src": "10769:1:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "10759:12:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_TaskType_$55_storage",
                                        "typeString": "struct Governance.TaskType storage ref"
                                      }
                                    },
                                    "id": 873,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "IPFSHash",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 40,
                                    "src": "10759:21:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_storage",
                                      "typeString": "string storage ref"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_string_storage",
                                      "typeString": "string storage ref"
                                    }
                                  ],
                                  "expression": {
                                    "id": 868,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "10742:3:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 869,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "encodePacked",
                                  "nodeType": "MemberAccess",
                                  "src": "10742:16:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 874,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "10742:39:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 867,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "10732:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 875,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10732:50:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 879,
                                    "name": "_IPFSHash",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 856,
                                    "src": "10813:9:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  ],
                                  "expression": {
                                    "id": 877,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "10796:3:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 878,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "encodePacked",
                                  "nodeType": "MemberAccess",
                                  "src": "10796:16:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 880,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "10796:27:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 876,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "10786:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 881,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10786:38:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "10732:92:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 922,
                        "nodeType": "IfStatement",
                        "src": "10729:1048:2",
                        "trueBody": {
                          "id": 921,
                          "nodeType": "Block",
                          "src": "10825:952:2",
                          "statements": [
                            {
                              "assignments": [
                                885
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 885,
                                  "mutability": "mutable",
                                  "name": "myTaskType",
                                  "nameLocation": "10924:10:2",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 921,
                                  "src": "10907:27:2",
                                  "stateVariable": false,
                                  "storageLocation": "storage",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_TaskType_$55_storage_ptr",
                                    "typeString": "struct Governance.TaskType"
                                  },
                                  "typeName": {
                                    "id": 884,
                                    "nodeType": "UserDefinedTypeName",
                                    "pathNode": {
                                      "id": 883,
                                      "name": "TaskType",
                                      "nodeType": "IdentifierPath",
                                      "referencedDeclaration": 55,
                                      "src": "10907:8:2"
                                    },
                                    "referencedDeclaration": 55,
                                    "src": "10907:8:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_TaskType_$55_storage_ptr",
                                      "typeString": "struct Governance.TaskType"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 889,
                              "initialValue": {
                                "baseExpression": {
                                  "id": 886,
                                  "name": "taskTypes",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 95,
                                  "src": "10937:9:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_TaskType_$55_storage_$dyn_storage",
                                    "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                  }
                                },
                                "id": 888,
                                "indexExpression": {
                                  "id": 887,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 860,
                                  "src": "10947:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "10937:12:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TaskType_$55_storage",
                                  "typeString": "struct Governance.TaskType storage ref"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "10907:42:2"
                            },
                            {
                              "assignments": [
                                892
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 892,
                                  "mutability": "mutable",
                                  "name": "displacedTaskType",
                                  "nameLocation": "10984:17:2",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 921,
                                  "src": "10967:34:2",
                                  "stateVariable": false,
                                  "storageLocation": "storage",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_TaskType_$55_storage_ptr",
                                    "typeString": "struct Governance.TaskType"
                                  },
                                  "typeName": {
                                    "id": 891,
                                    "nodeType": "UserDefinedTypeName",
                                    "pathNode": {
                                      "id": 890,
                                      "name": "TaskType",
                                      "nodeType": "IdentifierPath",
                                      "referencedDeclaration": 55,
                                      "src": "10967:8:2"
                                    },
                                    "referencedDeclaration": 55,
                                    "src": "10967:8:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_TaskType_$55_storage_ptr",
                                      "typeString": "struct Governance.TaskType"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 899,
                              "initialValue": {
                                "baseExpression": {
                                  "id": 893,
                                  "name": "taskTypes",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 95,
                                  "src": "11004:9:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_TaskType_$55_storage_$dyn_storage",
                                    "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                  }
                                },
                                "id": 898,
                                "indexExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 897,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "id": 894,
                                      "name": "taskTypes",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 95,
                                      "src": "11014:9:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_TaskType_$55_storage_$dyn_storage",
                                        "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                      }
                                    },
                                    "id": 895,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "length",
                                    "nodeType": "MemberAccess",
                                    "src": "11014:16:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "hexValue": "31",
                                    "id": 896,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "11031:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    "value": "1"
                                  },
                                  "src": "11014:18:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "11004:29:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TaskType_$55_storage",
                                  "typeString": "struct Governance.TaskType storage ref"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "10967:66:2"
                            },
                            {
                              "expression": {
                                "id": 902,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 900,
                                  "name": "myTaskType",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 885,
                                  "src": "11149:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_TaskType_$55_storage_ptr",
                                    "typeString": "struct Governance.TaskType storage pointer"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 901,
                                  "name": "displacedTaskType",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 892,
                                  "src": "11162:17:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_TaskType_$55_storage_ptr",
                                    "typeString": "struct Governance.TaskType storage pointer"
                                  }
                                },
                                "src": "11149:30:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TaskType_$55_storage_ptr",
                                  "typeString": "struct Governance.TaskType storage pointer"
                                }
                              },
                              "id": 903,
                              "nodeType": "ExpressionStatement",
                              "src": "11149:30:2"
                            },
                            {
                              "expression": {
                                "id": 910,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "delete",
                                "prefix": true,
                                "src": "11197:36:2",
                                "subExpression": {
                                  "baseExpression": {
                                    "id": 904,
                                    "name": "taskTypes",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 95,
                                    "src": "11204:9:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_TaskType_$55_storage_$dyn_storage",
                                      "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                    }
                                  },
                                  "id": 909,
                                  "indexExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 908,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "id": 905,
                                        "name": "taskTypes",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 95,
                                        "src": "11214:9:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_TaskType_$55_storage_$dyn_storage",
                                          "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                        }
                                      },
                                      "id": 906,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "length",
                                      "nodeType": "MemberAccess",
                                      "src": "11214:16:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "-",
                                    "rightExpression": {
                                      "hexValue": "31",
                                      "id": 907,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "11231:1:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1_by_1",
                                        "typeString": "int_const 1"
                                      },
                                      "value": "1"
                                    },
                                    "src": "11214:18:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "11204:29:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_TaskType_$55_storage",
                                    "typeString": "struct Governance.TaskType storage ref"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 911,
                              "nodeType": "ExpressionStatement",
                              "src": "11197:36:2"
                            },
                            {
                              "expression": {
                                "id": 918,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "delete",
                                "prefix": true,
                                "src": "11703:36:2",
                                "subExpression": {
                                  "baseExpression": {
                                    "id": 912,
                                    "name": "taskTypes",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 95,
                                    "src": "11710:9:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_TaskType_$55_storage_$dyn_storage",
                                      "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                    }
                                  },
                                  "id": 917,
                                  "indexExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 916,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "id": 913,
                                        "name": "taskTypes",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 95,
                                        "src": "11720:9:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_TaskType_$55_storage_$dyn_storage",
                                          "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                        }
                                      },
                                      "id": 914,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "length",
                                      "nodeType": "MemberAccess",
                                      "src": "11720:16:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "-",
                                    "rightExpression": {
                                      "hexValue": "31",
                                      "id": 915,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "11737:1:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1_by_1",
                                        "typeString": "int_const 1"
                                      },
                                      "value": "1"
                                    },
                                    "src": "11720:18:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "11710:29:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_TaskType_$55_storage",
                                    "typeString": "struct Governance.TaskType storage ref"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 919,
                              "nodeType": "ExpressionStatement",
                              "src": "11703:36:2"
                            },
                            {
                              "id": 920,
                              "nodeType": "Break",
                              "src": "11757:5:2"
                            }
                          ]
                        }
                      },
                      {
                        "id": 926,
                        "nodeType": "UncheckedBlock",
                        "src": "11790:15:2",
                        "statements": [
                          {
                            "expression": {
                              "id": 924,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": true,
                              "src": "11800:3:2",
                              "subExpression": {
                                "id": 923,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 860,
                                "src": "11802:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 925,
                            "nodeType": "ExpressionStatement",
                            "src": "11800:3:2"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 866,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 863,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 860,
                      "src": "10695:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 864,
                        "name": "taskTypes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 95,
                        "src": "10697:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_TaskType_$55_storage_$dyn_storage",
                          "typeString": "struct Governance.TaskType storage ref[] storage ref"
                        }
                      },
                      "id": 865,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "10697:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10695:18:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 928,
                  "initializationExpression": {
                    "assignments": [
                      860
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 860,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "10690:1:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 928,
                        "src": "10682:9:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 859,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10682:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 862,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 861,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10692:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "10682:11:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "10678:1137:2"
                }
              ]
            },
            "functionSelector": "f713b7ed",
            "id": 930,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deleteTaskTypeByIPFSHash",
            "nameLocation": "10609:24:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 857,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 856,
                  "mutability": "mutable",
                  "name": "_IPFSHash",
                  "nameLocation": "10648:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 930,
                  "src": "10634:23:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 855,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "10634:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10633:25:2"
            },
            "returnParameters": {
              "id": 858,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10668:0:2"
            },
            "scope": 1993,
            "src": "10600:1221:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 950,
              "nodeType": "Block",
              "src": "12076:200:2",
              "statements": [
                {
                  "expression": {
                    "id": 942,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 938,
                      "name": "wizardsNFT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25,
                      "src": "12130:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Wizards_$4652",
                        "typeString": "contract Wizards"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 940,
                          "name": "_nft",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 933,
                          "src": "12151:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 939,
                        "name": "Wizards",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4652,
                        "src": "12143:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Wizards_$4652_$",
                          "typeString": "type(contract Wizards)"
                        }
                      },
                      "id": 941,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12143:13:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Wizards_$4652",
                        "typeString": "contract Wizards"
                      }
                    },
                    "src": "12130:26:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Wizards_$4652",
                      "typeString": "contract Wizards"
                    }
                  },
                  "id": 943,
                  "nodeType": "ExpressionStatement",
                  "src": "12130:26:2"
                },
                {
                  "expression": {
                    "id": 948,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 944,
                      "name": "wizardTower",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28,
                      "src": "12166:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_WizardTower_$5016",
                        "typeString": "contract WizardTower"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 946,
                          "name": "_wizardTower",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 935,
                          "src": "12192:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 945,
                        "name": "WizardTower",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5016,
                        "src": "12180:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_WizardTower_$5016_$",
                          "typeString": "type(contract WizardTower)"
                        }
                      },
                      "id": 947,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12180:25:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_WizardTower_$5016",
                        "typeString": "contract WizardTower"
                      }
                    },
                    "src": "12166:39:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_WizardTower_$5016",
                      "typeString": "contract WizardTower"
                    }
                  },
                  "id": 949,
                  "nodeType": "ExpressionStatement",
                  "src": "12166:39:2"
                }
              ]
            },
            "documentation": {
              "id": 931,
              "nodeType": "StructuredDocumentation",
              "src": "11935:89:2",
              "text": "@dev Constructor for HOADAO\n@param _nft -- contract address for NFTs"
            },
            "id": 951,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 936,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 933,
                  "mutability": "mutable",
                  "name": "_nft",
                  "nameLocation": "12049:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 951,
                  "src": "12041:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 932,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12041:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 935,
                  "mutability": "mutable",
                  "name": "_wizardTower",
                  "nameLocation": "12063:12:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 951,
                  "src": "12055:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 934,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12055:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12040:36:2"
            },
            "returnParameters": {
              "id": 937,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12076:0:2"
            },
            "scope": 1993,
            "src": "12029:247:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 954,
              "nodeType": "Block",
              "src": "12340:7:2",
              "statements": []
            },
            "id": 955,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 952,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12320:2:2"
            },
            "returnParameters": {
              "id": 953,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12340:0:2"
            },
            "scope": 1993,
            "src": "12313:34:2",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1044,
              "nodeType": "Block",
              "src": "12437:580:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 969,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 967,
                          "name": "proposalID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 957,
                          "src": "12455:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "id": 968,
                          "name": "totalProposals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 105,
                          "src": "12468:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "12455:27:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6e6f20737563682070726f706f73616c",
                        "id": 970,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12484:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7f70e7e117a210e101713c97232a3cb728ce069a6ee3603e8c77d84127a93b4e",
                          "typeString": "literal_string \"no such proposal\""
                        },
                        "value": "no such proposal"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7f70e7e117a210e101713c97232a3cb728ce069a6ee3603e8c77d84127a93b4e",
                          "typeString": "literal_string \"no such proposal\""
                        }
                      ],
                      "id": 966,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12447:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 971,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12447:56:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 972,
                  "nodeType": "ExpressionStatement",
                  "src": "12447:56:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 980,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 976,
                              "name": "NFTID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 959,
                              "src": "12540:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 974,
                              "name": "wizardsNFT",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25,
                              "src": "12521:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Wizards_$4652",
                                "typeString": "contract Wizards"
                              }
                            },
                            "id": 975,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "ownerOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5292,
                            "src": "12521:18:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view external returns (address)"
                            }
                          },
                          "id": 977,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12521:25:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 978,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "12548:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 979,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "12548:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "12521:37:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6e6f74206f776e6572206f66204e4654",
                        "id": 981,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12560:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_73759f0e095f46dd731a35f99460bb6e619d6a499dbe8aada299139e4499269c",
                          "typeString": "literal_string \"not owner of NFT\""
                        },
                        "value": "not owner of NFT"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_73759f0e095f46dd731a35f99460bb6e619d6a499dbe8aada299139e4499269c",
                          "typeString": "literal_string \"not owner of NFT\""
                        }
                      ],
                      "id": 973,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12513:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 982,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12513:66:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 983,
                  "nodeType": "ExpressionStatement",
                  "src": "12513:66:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 991,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 985,
                              "name": "proposalToNFTVotes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 34,
                              "src": "12597:18:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                                "typeString": "mapping(uint256 => mapping(uint256 => uint256))"
                              }
                            },
                            "id": 987,
                            "indexExpression": {
                              "id": 986,
                              "name": "proposalID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 957,
                              "src": "12616:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "12597:30:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                              "typeString": "mapping(uint256 => uint256)"
                            }
                          },
                          "id": 989,
                          "indexExpression": {
                            "id": 988,
                            "name": "NFTID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 959,
                            "src": "12628:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "12597:37:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 990,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "12636:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "12597:40:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "616c726561647920766f746564",
                        "id": 992,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12639:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_300512b688c99720d35ec7d5b6f38f17f9fa91c0bc270419bc4a8ce8e86b6fff",
                          "typeString": "literal_string \"already voted\""
                        },
                        "value": "already voted"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_300512b688c99720d35ec7d5b6f38f17f9fa91c0bc270419bc4a8ce8e86b6fff",
                          "typeString": "literal_string \"already voted\""
                        }
                      ],
                      "id": 984,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12589:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 993,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12589:66:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 994,
                  "nodeType": "ExpressionStatement",
                  "src": "12589:66:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1005,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 998,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 996,
                            "name": "_vote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 961,
                            "src": "12673:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 997,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "12680:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "12673:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1004,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 999,
                            "name": "_vote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 961,
                            "src": "12685:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 1000,
                                "name": "proposals",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 103,
                                "src": "12694:9:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$91_storage_$",
                                  "typeString": "mapping(uint256 => struct Governance.Proposal storage ref)"
                                }
                              },
                              "id": 1002,
                              "indexExpression": {
                                "id": 1001,
                                "name": "proposalID",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 957,
                                "src": "12704:10:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "12694:21:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Proposal_$91_storage",
                                "typeString": "struct Governance.Proposal storage ref"
                              }
                            },
                            "id": 1003,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "numberOfOptions",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 80,
                            "src": "12694:37:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "src": "12685:46:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "12673:58:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 995,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12665:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1006,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12665:67:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1007,
                  "nodeType": "ExpressionStatement",
                  "src": "12665:67:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1015,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1009,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "12750:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 1010,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "12750:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 1011,
                              "name": "proposals",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 103,
                              "src": "12768:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$91_storage_$",
                                "typeString": "mapping(uint256 => struct Governance.Proposal storage ref)"
                              }
                            },
                            "id": 1013,
                            "indexExpression": {
                              "id": 1012,
                              "name": "proposalID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 957,
                              "src": "12778:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "12768:21:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Proposal_$91_storage",
                              "typeString": "struct Governance.Proposal storage ref"
                            }
                          },
                          "id": 1014,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "endTimestamp",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 90,
                          "src": "12768:34:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint40",
                            "typeString": "uint40"
                          }
                        },
                        "src": "12750:52:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1008,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12742:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1016,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12742:61:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1017,
                  "nodeType": "ExpressionStatement",
                  "src": "12742:61:2"
                },
                {
                  "expression": {
                    "id": 1026,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 1018,
                          "name": "proposalToNFTVotes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34,
                          "src": "12813:18:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                            "typeString": "mapping(uint256 => mapping(uint256 => uint256))"
                          }
                        },
                        "id": 1021,
                        "indexExpression": {
                          "id": 1019,
                          "name": "proposalID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 957,
                          "src": "12832:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "12813:30:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 1022,
                      "indexExpression": {
                        "id": 1020,
                        "name": "NFTID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 959,
                        "src": "12844:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "12813:37:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1025,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1023,
                        "name": "_vote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 961,
                        "src": "12853:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "hexValue": "31",
                        "id": 1024,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12861:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "12853:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12813:49:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1027,
                  "nodeType": "ExpressionStatement",
                  "src": "12813:49:2"
                },
                {
                  "expression": {
                    "id": 1035,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "expression": {
                          "baseExpression": {
                            "id": 1028,
                            "name": "proposals",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 103,
                            "src": "12905:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$91_storage_$",
                              "typeString": "mapping(uint256 => struct Governance.Proposal storage ref)"
                            }
                          },
                          "id": 1030,
                          "indexExpression": {
                            "id": 1029,
                            "name": "proposalID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 957,
                            "src": "12915:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "12905:21:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Proposal_$91_storage",
                            "typeString": "struct Governance.Proposal storage ref"
                          }
                        },
                        "id": 1031,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "votes",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 84,
                        "src": "12905:27:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint16_$8_storage",
                          "typeString": "uint16[8] storage ref"
                        }
                      },
                      "id": 1033,
                      "indexExpression": {
                        "id": 1032,
                        "name": "_vote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 961,
                        "src": "12933:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "12905:34:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 1034,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "12943:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "12905:39:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "id": 1036,
                  "nodeType": "ExpressionStatement",
                  "src": "12905:39:2"
                },
                {
                  "expression": {
                    "id": 1042,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 1037,
                          "name": "proposals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 103,
                          "src": "12973:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$91_storage_$",
                            "typeString": "mapping(uint256 => struct Governance.Proposal storage ref)"
                          }
                        },
                        "id": 1039,
                        "indexExpression": {
                          "id": 1038,
                          "name": "proposalID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 957,
                          "src": "12983:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "12973:21:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proposal_$91_storage",
                          "typeString": "struct Governance.Proposal storage ref"
                        }
                      },
                      "id": 1040,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "totalVotes",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 86,
                      "src": "12973:32:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint40",
                        "typeString": "uint40"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 1041,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "13009:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "12973:37:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "id": 1043,
                  "nodeType": "ExpressionStatement",
                  "src": "12973:37:2"
                }
              ]
            },
            "functionSelector": "8a6655d6",
            "id": 1045,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 964,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 963,
                  "name": "onlyMember",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1982,
                  "src": "12426:10:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "12426:10:2"
              }
            ],
            "name": "vote",
            "nameLocation": "12362:4:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 962,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 957,
                  "mutability": "mutable",
                  "name": "proposalID",
                  "nameLocation": "12375:10:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1045,
                  "src": "12367:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 956,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12367:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 959,
                  "mutability": "mutable",
                  "name": "NFTID",
                  "nameLocation": "12395:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1045,
                  "src": "12387:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 958,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12387:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 961,
                  "mutability": "mutable",
                  "name": "_vote",
                  "nameLocation": "12410:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1045,
                  "src": "12402:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 960,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12402:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12366:50:2"
            },
            "returnParameters": {
              "id": 965,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12437:0:2"
            },
            "scope": 1993,
            "src": "12353:664:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1121,
              "nodeType": "Block",
              "src": "13245:580:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1069,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          },
                          "id": 1065,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1063,
                            "name": "_numberOfOptions",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1049,
                            "src": "13263:16:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 1064,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "13282:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "13263:20:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          },
                          "id": 1068,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1066,
                            "name": "_numberOfOptions",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1049,
                            "src": "13287:16:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "hexValue": "323537",
                            "id": 1067,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "13306:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_257_by_1",
                              "typeString": "int_const 257"
                            },
                            "value": "257"
                          },
                          "src": "13287:22:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "13263:46:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "696e76616c6964206e756d626572206f66206f7074696f6e73",
                        "id": 1070,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13311:27:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c4475af82e361be3665e848c2658c7e9ff0d7f613ea39becc6f39f268d955f1b",
                          "typeString": "literal_string \"invalid number of options\""
                        },
                        "value": "invalid number of options"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c4475af82e361be3665e848c2658c7e9ff0d7f613ea39becc6f39f268d955f1b",
                          "typeString": "literal_string \"invalid number of options\""
                        }
                      ],
                      "id": 1062,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "13255:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1071,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13255:84:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1072,
                  "nodeType": "ExpressionStatement",
                  "src": "13255:84:2"
                },
                {
                  "expression": {
                    "id": 1075,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1073,
                      "name": "totalProposals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 105,
                      "src": "13349:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 1074,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "13367:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "13349:19:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1076,
                  "nodeType": "ExpressionStatement",
                  "src": "13349:19:2"
                },
                {
                  "assignments": [
                    1079
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1079,
                      "mutability": "mutable",
                      "name": "myProposal",
                      "nameLocation": "13416:10:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1121,
                      "src": "13399:27:2",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Proposal_$91_storage_ptr",
                        "typeString": "struct Governance.Proposal"
                      },
                      "typeName": {
                        "id": 1078,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1077,
                          "name": "Proposal",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 91,
                          "src": "13399:8:2"
                        },
                        "referencedDeclaration": 91,
                        "src": "13399:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proposal_$91_storage_ptr",
                          "typeString": "struct Governance.Proposal"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1083,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1080,
                      "name": "proposals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 103,
                      "src": "13429:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$91_storage_$",
                        "typeString": "mapping(uint256 => struct Governance.Proposal storage ref)"
                      }
                    },
                    "id": 1082,
                    "indexExpression": {
                      "id": 1081,
                      "name": "totalProposals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 105,
                      "src": "13439:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "13429:25:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Proposal_$91_storage",
                      "typeString": "struct Governance.Proposal storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13399:55:2"
                },
                {
                  "expression": {
                    "id": 1088,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1084,
                        "name": "myProposal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1079,
                        "src": "13468:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proposal_$91_storage_ptr",
                          "typeString": "struct Governance.Proposal storage pointer"
                        }
                      },
                      "id": 1086,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "begTimestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 88,
                      "src": "13468:23:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint40",
                        "typeString": "uint40"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1087,
                      "name": "_begTimestamp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1053,
                      "src": "13494:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint40",
                        "typeString": "uint40"
                      }
                    },
                    "src": "13468:39:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "id": 1089,
                  "nodeType": "ExpressionStatement",
                  "src": "13468:39:2"
                },
                {
                  "expression": {
                    "id": 1094,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1090,
                        "name": "myProposal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1079,
                        "src": "13521:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proposal_$91_storage_ptr",
                          "typeString": "struct Governance.Proposal storage pointer"
                        }
                      },
                      "id": 1092,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "endTimestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 90,
                      "src": "13521:23:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint40",
                        "typeString": "uint40"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1093,
                      "name": "_endTimestamp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1055,
                      "src": "13547:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint40",
                        "typeString": "uint40"
                      }
                    },
                    "src": "13521:39:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "id": 1095,
                  "nodeType": "ExpressionStatement",
                  "src": "13521:39:2"
                },
                {
                  "expression": {
                    "id": 1100,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1096,
                        "name": "myProposal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1079,
                        "src": "13574:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proposal_$91_storage_ptr",
                          "typeString": "struct Governance.Proposal storage pointer"
                        }
                      },
                      "id": 1098,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "numberOfOptions",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 80,
                      "src": "13574:26:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1099,
                      "name": "_numberOfOptions",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1049,
                      "src": "13603:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "src": "13574:45:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "id": 1101,
                  "nodeType": "ExpressionStatement",
                  "src": "13574:45:2"
                },
                {
                  "expression": {
                    "id": 1106,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1102,
                        "name": "myProposal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1079,
                        "src": "13633:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proposal_$91_storage_ptr",
                          "typeString": "struct Governance.Proposal storage pointer"
                        }
                      },
                      "id": 1104,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "IPFSHash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 78,
                      "src": "13633:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1105,
                      "name": "_IPFSHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1047,
                      "src": "13655:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_calldata_ptr",
                        "typeString": "string calldata"
                      }
                    },
                    "src": "13633:31:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 1107,
                  "nodeType": "ExpressionStatement",
                  "src": "13633:31:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1109,
                        "name": "_IPFSHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1047,
                        "src": "13691:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 1112,
                            "name": "totalProposals",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105,
                            "src": "13709:14:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 1111,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "13702:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint40_$",
                            "typeString": "type(uint40)"
                          },
                          "typeName": {
                            "id": 1110,
                            "name": "uint40",
                            "nodeType": "ElementaryTypeName",
                            "src": "13702:6:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1113,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13702:22:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 1114,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13726:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "id": 1115,
                        "name": "_timeBonus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1051,
                        "src": "13729:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      },
                      {
                        "id": 1116,
                        "name": "_begTimestamp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1053,
                        "src": "13741:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        }
                      },
                      {
                        "id": 1117,
                        "name": "_endTimestamp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1055,
                        "src": "13756:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        }
                      },
                      {
                        "id": 1118,
                        "name": "_availableSlots",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1057,
                        "src": "13771:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        },
                        {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        },
                        {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        },
                        {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      ],
                      "id": 1108,
                      "name": "_createTaskType",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1243,
                      "src": "13675:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_calldata_ptr_$_t_uint40_$_t_uint8_$_t_uint24_$_t_uint40_$_t_uint40_$_t_uint16_$returns$__$",
                        "typeString": "function (string calldata,uint40,uint8,uint24,uint40,uint40,uint16)"
                      }
                    },
                    "id": 1119,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13675:112:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1120,
                  "nodeType": "ExpressionStatement",
                  "src": "13675:112:2"
                }
              ]
            },
            "functionSelector": "beca3a16",
            "id": 1122,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1060,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1059,
                  "name": "onlyBoard",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1992,
                  "src": "13235:9:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "13235:9:2"
              }
            ],
            "name": "createProposal",
            "nameLocation": "13072:14:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1058,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1047,
                  "mutability": "mutable",
                  "name": "_IPFSHash",
                  "nameLocation": "13103:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1122,
                  "src": "13087:25:2",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1046,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "13087:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1049,
                  "mutability": "mutable",
                  "name": "_numberOfOptions",
                  "nameLocation": "13121:16:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1122,
                  "src": "13114:23:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 1048,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "13114:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1051,
                  "mutability": "mutable",
                  "name": "_timeBonus",
                  "nameLocation": "13146:10:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1122,
                  "src": "13139:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint24",
                    "typeString": "uint24"
                  },
                  "typeName": {
                    "id": 1050,
                    "name": "uint24",
                    "nodeType": "ElementaryTypeName",
                    "src": "13139:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint24",
                      "typeString": "uint24"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1053,
                  "mutability": "mutable",
                  "name": "_begTimestamp",
                  "nameLocation": "13165:13:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1122,
                  "src": "13158:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  },
                  "typeName": {
                    "id": 1052,
                    "name": "uint40",
                    "nodeType": "ElementaryTypeName",
                    "src": "13158:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1055,
                  "mutability": "mutable",
                  "name": "_endTimestamp",
                  "nameLocation": "13187:13:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1122,
                  "src": "13180:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  },
                  "typeName": {
                    "id": 1054,
                    "name": "uint40",
                    "nodeType": "ElementaryTypeName",
                    "src": "13180:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1057,
                  "mutability": "mutable",
                  "name": "_availableSlots",
                  "nameLocation": "13209:15:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1122,
                  "src": "13202:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 1056,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "13202:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13086:139:2"
            },
            "returnParameters": {
              "id": 1061,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13245:0:2"
            },
            "scope": 1993,
            "src": "13063:762:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1149,
              "nodeType": "Block",
              "src": "14029:123:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1140,
                        "name": "_IPFSHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1124,
                        "src": "14055:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 1141,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14066:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "id": 1142,
                        "name": "_numFieldsToHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1126,
                        "src": "14069:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "id": 1143,
                        "name": "_timeBonus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1128,
                        "src": "14087:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      },
                      {
                        "id": 1144,
                        "name": "_begTimestamp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1130,
                        "src": "14099:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        }
                      },
                      {
                        "id": 1145,
                        "name": "_endTimestamp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1132,
                        "src": "14114:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        }
                      },
                      {
                        "id": 1146,
                        "name": "_availableSlots",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1134,
                        "src": "14129:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        },
                        {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        },
                        {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        },
                        {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      ],
                      "id": 1139,
                      "name": "_createTaskType",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1243,
                      "src": "14039:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_calldata_ptr_$_t_uint40_$_t_uint8_$_t_uint24_$_t_uint40_$_t_uint40_$_t_uint16_$returns$__$",
                        "typeString": "function (string calldata,uint40,uint8,uint24,uint40,uint40,uint16)"
                      }
                    },
                    "id": 1147,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14039:106:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1148,
                  "nodeType": "ExpressionStatement",
                  "src": "14039:106:2"
                }
              ]
            },
            "functionSelector": "61f9e9a8",
            "id": 1150,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1137,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1136,
                  "name": "onlyBoard",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1992,
                  "src": "14019:9:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "14019:9:2"
              }
            ],
            "name": "createTaskType",
            "nameLocation": "13841:14:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1135,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1124,
                  "mutability": "mutable",
                  "name": "_IPFSHash",
                  "nameLocation": "13872:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1150,
                  "src": "13856:25:2",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1123,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "13856:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1126,
                  "mutability": "mutable",
                  "name": "_numFieldsToHash",
                  "nameLocation": "13889:16:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1150,
                  "src": "13883:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1125,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "13883:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1128,
                  "mutability": "mutable",
                  "name": "_timeBonus",
                  "nameLocation": "13914:10:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1150,
                  "src": "13907:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint24",
                    "typeString": "uint24"
                  },
                  "typeName": {
                    "id": 1127,
                    "name": "uint24",
                    "nodeType": "ElementaryTypeName",
                    "src": "13907:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint24",
                      "typeString": "uint24"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1130,
                  "mutability": "mutable",
                  "name": "_begTimestamp",
                  "nameLocation": "13933:13:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1150,
                  "src": "13926:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  },
                  "typeName": {
                    "id": 1129,
                    "name": "uint40",
                    "nodeType": "ElementaryTypeName",
                    "src": "13926:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1132,
                  "mutability": "mutable",
                  "name": "_endTimestamp",
                  "nameLocation": "13971:13:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1150,
                  "src": "13964:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  },
                  "typeName": {
                    "id": 1131,
                    "name": "uint40",
                    "nodeType": "ElementaryTypeName",
                    "src": "13964:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1134,
                  "mutability": "mutable",
                  "name": "_availableSlots",
                  "nameLocation": "13993:15:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1150,
                  "src": "13986:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 1133,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "13986:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13855:154:2"
            },
            "returnParameters": {
              "id": 1138,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14029:0:2"
            },
            "scope": 1993,
            "src": "13832:320:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1242,
              "nodeType": "Block",
              "src": "14363:726:2",
              "statements": [
                {
                  "assignments": [
                    1168
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1168,
                      "mutability": "mutable",
                      "name": "taskTypesLength",
                      "nameLocation": "14381:15:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1242,
                      "src": "14373:23:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1167,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "14373:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1171,
                  "initialValue": {
                    "expression": {
                      "id": 1169,
                      "name": "taskTypes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 95,
                      "src": "14399:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_TaskType_$55_storage_$dyn_storage",
                        "typeString": "struct Governance.TaskType storage ref[] storage ref"
                      }
                    },
                    "id": 1170,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "14399:16:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14373:42:2"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 1172,
                        "name": "taskTypes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 95,
                        "src": "14425:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_TaskType_$55_storage_$dyn_storage",
                          "typeString": "struct Governance.TaskType storage ref[] storage ref"
                        }
                      },
                      "id": 1174,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "14425:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_TaskType_$55_storage_$dyn_storage_ptr_$returns$_t_struct$_TaskType_$55_storage_$bound_to$_t_array$_t_struct$_TaskType_$55_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct Governance.TaskType storage ref[] storage pointer) returns (struct Governance.TaskType storage ref)"
                      }
                    },
                    "id": 1175,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14425:16:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TaskType_$55_storage",
                      "typeString": "struct Governance.TaskType storage ref"
                    }
                  },
                  "id": 1176,
                  "nodeType": "ExpressionStatement",
                  "src": "14425:16:2"
                },
                {
                  "assignments": [
                    1179
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1179,
                      "mutability": "mutable",
                      "name": "newTaskType",
                      "nameLocation": "14468:11:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1242,
                      "src": "14451:28:2",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TaskType_$55_storage_ptr",
                        "typeString": "struct Governance.TaskType"
                      },
                      "typeName": {
                        "id": 1178,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1177,
                          "name": "TaskType",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 55,
                          "src": "14451:8:2"
                        },
                        "referencedDeclaration": 55,
                        "src": "14451:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TaskType_$55_storage_ptr",
                          "typeString": "struct Governance.TaskType"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1183,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1180,
                      "name": "taskTypes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 95,
                      "src": "14482:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_TaskType_$55_storage_$dyn_storage",
                        "typeString": "struct Governance.TaskType storage ref[] storage ref"
                      }
                    },
                    "id": 1182,
                    "indexExpression": {
                      "id": 1181,
                      "name": "taskTypesLength",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1168,
                      "src": "14492:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "14482:26:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TaskType_$55_storage",
                      "typeString": "struct Governance.TaskType storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14451:57:2"
                },
                {
                  "expression": {
                    "id": 1188,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1184,
                        "name": "newTaskType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1179,
                        "src": "14522:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TaskType_$55_storage_ptr",
                          "typeString": "struct Governance.TaskType storage pointer"
                        }
                      },
                      "id": 1186,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "IPFSHash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 40,
                      "src": "14522:20:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1187,
                      "name": "_IPFSHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1152,
                      "src": "14544:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_calldata_ptr",
                        "typeString": "string calldata"
                      }
                    },
                    "src": "14522:31:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 1189,
                  "nodeType": "ExpressionStatement",
                  "src": "14522:31:2"
                },
                {
                  "expression": {
                    "id": 1194,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1190,
                        "name": "newTaskType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1179,
                        "src": "14567:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TaskType_$55_storage_ptr",
                          "typeString": "struct Governance.TaskType storage pointer"
                        }
                      },
                      "id": 1192,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "paused",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 42,
                      "src": "14567:18:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 1193,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "14588:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "14567:26:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1195,
                  "nodeType": "ExpressionStatement",
                  "src": "14567:26:2"
                },
                {
                  "expression": {
                    "id": 1200,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1196,
                        "name": "newTaskType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1179,
                        "src": "14607:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TaskType_$55_storage_ptr",
                          "typeString": "struct Governance.TaskType storage pointer"
                        }
                      },
                      "id": 1198,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "proposalID",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44,
                      "src": "14607:22:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint40",
                        "typeString": "uint40"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1199,
                      "name": "_proposalID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1154,
                      "src": "14632:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint40",
                        "typeString": "uint40"
                      }
                    },
                    "src": "14607:36:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "id": 1201,
                  "nodeType": "ExpressionStatement",
                  "src": "14607:36:2"
                },
                {
                  "expression": {
                    "id": 1206,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1202,
                        "name": "newTaskType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1179,
                        "src": "14657:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TaskType_$55_storage_ptr",
                          "typeString": "struct Governance.TaskType storage pointer"
                        }
                      },
                      "id": 1204,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "numFieldsToHash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46,
                      "src": "14657:27:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1205,
                      "name": "_numFieldsToHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1156,
                      "src": "14687:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "14657:46:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 1207,
                  "nodeType": "ExpressionStatement",
                  "src": "14657:46:2"
                },
                {
                  "expression": {
                    "id": 1212,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1208,
                        "name": "newTaskType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1179,
                        "src": "14717:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TaskType_$55_storage_ptr",
                          "typeString": "struct Governance.TaskType storage pointer"
                        }
                      },
                      "id": 1210,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "timeBonus",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 48,
                      "src": "14717:21:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint24",
                        "typeString": "uint24"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1211,
                      "name": "_timeBonus",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1158,
                      "src": "14741:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint24",
                        "typeString": "uint24"
                      }
                    },
                    "src": "14717:34:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint24",
                      "typeString": "uint24"
                    }
                  },
                  "id": 1213,
                  "nodeType": "ExpressionStatement",
                  "src": "14717:34:2"
                },
                {
                  "expression": {
                    "id": 1218,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1214,
                        "name": "newTaskType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1179,
                        "src": "14765:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TaskType_$55_storage_ptr",
                          "typeString": "struct Governance.TaskType storage pointer"
                        }
                      },
                      "id": 1216,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "begTimestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50,
                      "src": "14765:24:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint40",
                        "typeString": "uint40"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1217,
                      "name": "_begTimestamp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1160,
                      "src": "14792:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint40",
                        "typeString": "uint40"
                      }
                    },
                    "src": "14765:40:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "id": 1219,
                  "nodeType": "ExpressionStatement",
                  "src": "14765:40:2"
                },
                {
                  "expression": {
                    "id": 1224,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1220,
                        "name": "newTaskType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1179,
                        "src": "14819:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TaskType_$55_storage_ptr",
                          "typeString": "struct Governance.TaskType storage pointer"
                        }
                      },
                      "id": 1222,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "endTimestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 52,
                      "src": "14819:24:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint40",
                        "typeString": "uint40"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1223,
                      "name": "_endTimestamp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1162,
                      "src": "14846:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint40",
                        "typeString": "uint40"
                      }
                    },
                    "src": "14819:40:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "id": 1225,
                  "nodeType": "ExpressionStatement",
                  "src": "14819:40:2"
                },
                {
                  "expression": {
                    "id": 1230,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1226,
                        "name": "newTaskType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1179,
                        "src": "14873:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TaskType_$55_storage_ptr",
                          "typeString": "struct Governance.TaskType storage pointer"
                        }
                      },
                      "id": 1228,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "availableSlots",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 54,
                      "src": "14873:26:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1229,
                      "name": "_availableSlots",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1164,
                      "src": "14902:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "src": "14873:44:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "id": 1231,
                  "nodeType": "ExpressionStatement",
                  "src": "14873:44:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1233,
                        "name": "_IPFSHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1152,
                        "src": "14982:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "id": 1234,
                        "name": "_proposalID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1154,
                        "src": "14993:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        }
                      },
                      {
                        "id": 1235,
                        "name": "_numFieldsToHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1156,
                        "src": "15006:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "id": 1236,
                        "name": "_timeBonus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1158,
                        "src": "15024:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      },
                      {
                        "id": 1237,
                        "name": "_begTimestamp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1160,
                        "src": "15036:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        }
                      },
                      {
                        "id": 1238,
                        "name": "_endTimestamp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1162,
                        "src": "15051:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        }
                      },
                      {
                        "id": 1239,
                        "name": "_availableSlots",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1164,
                        "src": "15066:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        },
                        {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        },
                        {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        },
                        {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      ],
                      "id": 1232,
                      "name": "NewTaskTypeCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 178,
                      "src": "14963:18:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint40_$_t_uint8_$_t_uint24_$_t_uint40_$_t_uint40_$_t_uint16_$returns$__$",
                        "typeString": "function (string memory,uint40,uint8,uint24,uint40,uint40,uint16)"
                      }
                    },
                    "id": 1240,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14963:119:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1241,
                  "nodeType": "EmitStatement",
                  "src": "14958:124:2"
                }
              ]
            },
            "id": 1243,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_createTaskType",
            "nameLocation": "14167:15:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1165,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1152,
                  "mutability": "mutable",
                  "name": "_IPFSHash",
                  "nameLocation": "14199:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1243,
                  "src": "14183:25:2",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1151,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "14183:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1154,
                  "mutability": "mutable",
                  "name": "_proposalID",
                  "nameLocation": "14217:11:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1243,
                  "src": "14210:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  },
                  "typeName": {
                    "id": 1153,
                    "name": "uint40",
                    "nodeType": "ElementaryTypeName",
                    "src": "14210:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1156,
                  "mutability": "mutable",
                  "name": "_numFieldsToHash",
                  "nameLocation": "14236:16:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1243,
                  "src": "14230:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1155,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "14230:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1158,
                  "mutability": "mutable",
                  "name": "_timeBonus",
                  "nameLocation": "14261:10:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1243,
                  "src": "14254:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint24",
                    "typeString": "uint24"
                  },
                  "typeName": {
                    "id": 1157,
                    "name": "uint24",
                    "nodeType": "ElementaryTypeName",
                    "src": "14254:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint24",
                      "typeString": "uint24"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1160,
                  "mutability": "mutable",
                  "name": "_begTimestamp",
                  "nameLocation": "14293:13:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1243,
                  "src": "14286:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  },
                  "typeName": {
                    "id": 1159,
                    "name": "uint40",
                    "nodeType": "ElementaryTypeName",
                    "src": "14286:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1162,
                  "mutability": "mutable",
                  "name": "_endTimestamp",
                  "nameLocation": "14315:13:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1243,
                  "src": "14308:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  },
                  "typeName": {
                    "id": 1161,
                    "name": "uint40",
                    "nodeType": "ElementaryTypeName",
                    "src": "14308:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1164,
                  "mutability": "mutable",
                  "name": "_availableSlots",
                  "nameLocation": "14337:15:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1243,
                  "src": "14330:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 1163,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "14330:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14182:171:2"
            },
            "returnParameters": {
              "id": 1166,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14363:0:2"
            },
            "scope": 1993,
            "src": "14158:931:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1344,
              "nodeType": "Block",
              "src": "15161:1063:2",
              "statements": [
                {
                  "assignments": [
                    1249
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1249,
                      "mutability": "mutable",
                      "name": "totalTasksSubmitted",
                      "nameLocation": "15179:19:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1344,
                      "src": "15171:27:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1248,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "15171:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1254,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1252,
                        "name": "tasksWaitingConfirmation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98,
                        "src": "15225:24:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Bytes32Deque_$4671_storage",
                          "typeString": "struct DoubleEndedQueue.Bytes32Deque storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Bytes32Deque_$4671_storage",
                          "typeString": "struct DoubleEndedQueue.Bytes32Deque storage ref"
                        }
                      ],
                      "expression": {
                        "id": 1250,
                        "name": "DoubleEndedQueue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4993,
                        "src": "15201:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_DoubleEndedQueue_$4993_$",
                          "typeString": "type(library DoubleEndedQueue)"
                        }
                      },
                      "id": 1251,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4976,
                      "src": "15201:23:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32Deque_$4671_storage_ptr_$returns$_t_uint256_$",
                        "typeString": "function (struct DoubleEndedQueue.Bytes32Deque storage pointer) view returns (uint256)"
                      }
                    },
                    "id": 1253,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15201:49:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15171:79:2"
                },
                {
                  "assignments": [
                    1257
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1257,
                      "mutability": "mutable",
                      "name": "myTask",
                      "nameLocation": "15272:6:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1344,
                      "src": "15260:18:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Task_$76_memory_ptr",
                        "typeString": "struct Governance.Task"
                      },
                      "typeName": {
                        "id": 1256,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1255,
                          "name": "Task",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 76,
                          "src": "15260:4:2"
                        },
                        "referencedDeclaration": 76,
                        "src": "15260:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Task_$76_storage_ptr",
                          "typeString": "struct Governance.Task"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1258,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15260:18:2"
                },
                {
                  "assignments": [
                    1260
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1260,
                      "mutability": "mutable",
                      "name": "taskId",
                      "nameLocation": "15296:6:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1344,
                      "src": "15288:14:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1259,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "15288:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1261,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15288:14:2"
                },
                {
                  "body": {
                    "id": 1342,
                    "nodeType": "Block",
                    "src": "15443:722:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 1278,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1269,
                            "name": "taskId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1260,
                            "src": "15457:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 1274,
                                    "name": "tasksWaitingConfirmation",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 98,
                                    "src": "15494:24:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Bytes32Deque_$4671_storage",
                                      "typeString": "struct DoubleEndedQueue.Bytes32Deque storage ref"
                                    }
                                  },
                                  {
                                    "id": 1275,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1263,
                                    "src": "15520:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_struct$_Bytes32Deque_$4671_storage",
                                      "typeString": "struct DoubleEndedQueue.Bytes32Deque storage ref"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 1272,
                                    "name": "DoubleEndedQueue",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4993,
                                    "src": "15474:16:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_DoubleEndedQueue_$4993_$",
                                      "typeString": "type(library DoubleEndedQueue)"
                                    }
                                  },
                                  "id": 1273,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "at",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 4930,
                                  "src": "15474:19:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32Deque_$4671_storage_ptr_$_t_uint256_$returns$_t_bytes32_$",
                                    "typeString": "function (struct DoubleEndedQueue.Bytes32Deque storage pointer,uint256) view returns (bytes32)"
                                  }
                                },
                                "id": 1276,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "15474:48:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "id": 1271,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "15466:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 1270,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "15466:7:2",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1277,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "15466:57:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "15457:66:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1279,
                        "nodeType": "ExpressionStatement",
                        "src": "15457:66:2"
                      },
                      {
                        "expression": {
                          "id": 1284,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1280,
                            "name": "myTask",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1257,
                            "src": "15537:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Task_$76_memory_ptr",
                              "typeString": "struct Governance.Task memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 1281,
                              "name": "tasks",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 110,
                              "src": "15546:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Task_$76_storage_$",
                                "typeString": "mapping(uint256 => struct Governance.Task storage ref)"
                              }
                            },
                            "id": 1283,
                            "indexExpression": {
                              "id": 1282,
                              "name": "taskId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1260,
                              "src": "15552:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "15546:13:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Task_$76_storage",
                              "typeString": "struct Governance.Task storage ref"
                            }
                          },
                          "src": "15537:22:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Task_$76_memory_ptr",
                            "typeString": "struct Governance.Task memory"
                          }
                        },
                        "id": 1285,
                        "nodeType": "ExpressionStatement",
                        "src": "15537:22:2"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 1300,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 1295,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1290,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 1286,
                                  "name": "myTask",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1257,
                                  "src": "15577:6:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Task_$76_memory_ptr",
                                    "typeString": "struct Governance.Task memory"
                                  }
                                },
                                "id": 1287,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "verificationReservedTimestamp",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 75,
                                "src": "15577:36:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint40",
                                  "typeString": "uint40"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<",
                              "rightExpression": {
                                "expression": {
                                  "id": 1288,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "15616:5:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 1289,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "15616:15:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "15577:54:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "&&",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1294,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 1291,
                                  "name": "myTask",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1257,
                                  "src": "15635:6:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Task_$76_memory_ptr",
                                    "typeString": "struct Governance.Task memory"
                                  }
                                },
                                "id": 1292,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "NFTID",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 59,
                                "src": "15635:12:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint40",
                                  "typeString": "uint40"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "id": 1293,
                                "name": "_wizId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1245,
                                "src": "15651:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "15635:22:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "15577:80:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1299,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 1296,
                                "name": "myTask",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1257,
                                "src": "15661:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Task_$76_memory_ptr",
                                  "typeString": "struct Governance.Task memory"
                                }
                              },
                              "id": 1297,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "refuterID",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 73,
                              "src": "15661:16:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "id": 1298,
                              "name": "_wizId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1245,
                              "src": "15680:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "15661:25:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "15577:109:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1337,
                        "nodeType": "IfStatement",
                        "src": "15573:554:2",
                        "trueBody": {
                          "id": 1336,
                          "nodeType": "Block",
                          "src": "15687:440:2",
                          "statements": [
                            {
                              "expression": {
                                "id": 1308,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 1301,
                                    "name": "myTask",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1257,
                                    "src": "15865:6:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Task_$76_memory_ptr",
                                      "typeString": "struct Governance.Task memory"
                                    }
                                  },
                                  "id": 1303,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "verifierID",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 71,
                                  "src": "15865:17:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint16",
                                    "typeString": "uint16"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "id": 1306,
                                      "name": "_wizId",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1245,
                                      "src": "15892:6:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "id": 1305,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "15885:6:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint16_$",
                                      "typeString": "type(uint16)"
                                    },
                                    "typeName": {
                                      "id": 1304,
                                      "name": "uint16",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "15885:6:2",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 1307,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "15885:14:2",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint16",
                                    "typeString": "uint16"
                                  }
                                },
                                "src": "15865:34:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint16",
                                  "typeString": "uint16"
                                }
                              },
                              "id": 1309,
                              "nodeType": "ExpressionStatement",
                              "src": "15865:34:2"
                            },
                            {
                              "expression": {
                                "id": 1320,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 1310,
                                    "name": "myTask",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1257,
                                    "src": "15917:6:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Task_$76_memory_ptr",
                                      "typeString": "struct Governance.Task memory"
                                    }
                                  },
                                  "id": 1312,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "verificationReservedTimestamp",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 75,
                                  "src": "15917:36:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint40",
                                    "typeString": "uint40"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 1318,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "expression": {
                                          "id": 1315,
                                          "name": "block",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -4,
                                          "src": "15963:5:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_block",
                                            "typeString": "block"
                                          }
                                        },
                                        "id": 1316,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "timestamp",
                                        "nodeType": "MemberAccess",
                                        "src": "15963:15:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "+",
                                      "rightExpression": {
                                        "id": 1317,
                                        "name": "verificationTime",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 117,
                                        "src": "15981:16:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "15963:34:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "id": 1314,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "15956:6:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint40_$",
                                      "typeString": "type(uint40)"
                                    },
                                    "typeName": {
                                      "id": 1313,
                                      "name": "uint40",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "15956:6:2",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 1319,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "15956:42:2",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint40",
                                    "typeString": "uint40"
                                  }
                                },
                                "src": "15917:81:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint40",
                                  "typeString": "uint40"
                                }
                              },
                              "id": 1321,
                              "nodeType": "ExpressionStatement",
                              "src": "15917:81:2"
                            },
                            {
                              "expression": {
                                "id": 1326,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 1322,
                                    "name": "tasks",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 110,
                                    "src": "16016:5:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Task_$76_storage_$",
                                      "typeString": "mapping(uint256 => struct Governance.Task storage ref)"
                                    }
                                  },
                                  "id": 1324,
                                  "indexExpression": {
                                    "id": 1323,
                                    "name": "taskId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1260,
                                    "src": "16022:6:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "16016:13:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Task_$76_storage",
                                    "typeString": "struct Governance.Task storage ref"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 1325,
                                  "name": "myTask",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1257,
                                  "src": "16032:6:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Task_$76_memory_ptr",
                                    "typeString": "struct Governance.Task memory"
                                  }
                                },
                                "src": "16016:22:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Task_$76_storage",
                                  "typeString": "struct Governance.Task storage ref"
                                }
                              },
                              "id": 1327,
                              "nodeType": "ExpressionStatement",
                              "src": "16016:22:2"
                            },
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "id": 1329,
                                    "name": "_wizId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1245,
                                    "src": "16082:6:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 1330,
                                    "name": "taskId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1260,
                                    "src": "16090:6:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "baseExpression": {
                                      "id": 1331,
                                      "name": "tasks",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 110,
                                      "src": "16098:5:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Task_$76_storage_$",
                                        "typeString": "mapping(uint256 => struct Governance.Task storage ref)"
                                      }
                                    },
                                    "id": 1333,
                                    "indexExpression": {
                                      "id": 1332,
                                      "name": "taskId",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1260,
                                      "src": "16104:6:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "16098:13:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Task_$76_storage",
                                      "typeString": "struct Governance.Task storage ref"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_struct$_Task_$76_storage",
                                      "typeString": "struct Governance.Task storage ref"
                                    }
                                  ],
                                  "id": 1328,
                                  "name": "VerificationAssigned",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 132,
                                  "src": "16061:20:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_struct$_Task_$76_memory_ptr_$returns$__$",
                                    "typeString": "function (uint256,uint256,struct Governance.Task memory)"
                                  }
                                },
                                "id": 1334,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "16061:51:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1335,
                              "nodeType": "EmitStatement",
                              "src": "16056:56:2"
                            }
                          ]
                        }
                      },
                      {
                        "id": 1341,
                        "nodeType": "UncheckedBlock",
                        "src": "16140:15:2",
                        "statements": [
                          {
                            "expression": {
                              "id": 1339,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": true,
                              "src": "16150:3:2",
                              "subExpression": {
                                "id": 1338,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1263,
                                "src": "16152:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 1340,
                            "nodeType": "ExpressionStatement",
                            "src": "16150:3:2"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1268,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1266,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1263,
                      "src": "15417:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 1267,
                      "name": "totalTasksSubmitted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1249,
                      "src": "15421:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "15417:23:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1343,
                  "initializationExpression": {
                    "assignments": [
                      1263
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1263,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "15411:1:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 1343,
                        "src": "15403:9:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1262,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "15403:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1265,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 1264,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "15414:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "15403:12:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "15399:766:2"
                }
              ]
            },
            "functionSelector": "d374a217",
            "id": 1345,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "claimRandomTaskForVerification",
            "nameLocation": "15105:30:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1246,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1245,
                  "mutability": "mutable",
                  "name": "_wizId",
                  "nameLocation": "15144:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1345,
                  "src": "15136:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1244,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15136:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15135:16:2"
            },
            "returnParameters": {
              "id": 1247,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15161:0:2"
            },
            "scope": 1993,
            "src": "15096:1128:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1482,
              "nodeType": "Block",
              "src": "16316:1200:2",
              "statements": [
                {
                  "body": {
                    "id": 1480,
                    "nodeType": "Block",
                    "src": "16449:1041:2",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          "id": 1377,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 1365,
                                        "name": "taskTypes",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 95,
                                        "src": "16487:9:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_TaskType_$55_storage_$dyn_storage",
                                          "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                        }
                                      },
                                      "id": 1367,
                                      "indexExpression": {
                                        "id": 1366,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1355,
                                        "src": "16497:1:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "16487:12:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_TaskType_$55_storage",
                                        "typeString": "struct Governance.TaskType storage ref"
                                      }
                                    },
                                    "id": 1368,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "IPFSHash",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 40,
                                    "src": "16487:21:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_storage",
                                      "typeString": "string storage ref"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_string_storage",
                                      "typeString": "string storage ref"
                                    }
                                  ],
                                  "expression": {
                                    "id": 1363,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "16476:3:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 1364,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "encode",
                                  "nodeType": "MemberAccess",
                                  "src": "16476:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 1369,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "16476:33:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 1362,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "16466:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 1370,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "16466:44:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 1374,
                                    "name": "_IPFSHash",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1347,
                                    "src": "16535:9:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  ],
                                  "expression": {
                                    "id": 1372,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "16524:3:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 1373,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "encode",
                                  "nodeType": "MemberAccess",
                                  "src": "16524:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 1375,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "16524:21:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 1371,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "16514:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 1376,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "16514:32:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "16466:80:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1475,
                        "nodeType": "IfStatement",
                        "src": "16463:989:2",
                        "trueBody": {
                          "id": 1474,
                          "nodeType": "Block",
                          "src": "16547:905:2",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    "id": 1393,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 1385,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "expression": {
                                          "baseExpression": {
                                            "id": 1379,
                                            "name": "taskTypes",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 95,
                                            "src": "16633:9:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_struct$_TaskType_$55_storage_$dyn_storage",
                                              "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                            }
                                          },
                                          "id": 1381,
                                          "indexExpression": {
                                            "id": 1380,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1355,
                                            "src": "16643:1:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "16633:12:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_TaskType_$55_storage",
                                            "typeString": "struct Governance.TaskType storage ref"
                                          }
                                        },
                                        "id": 1382,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "begTimestamp",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 50,
                                        "src": "16633:25:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint40",
                                          "typeString": "uint40"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "<=",
                                      "rightExpression": {
                                        "expression": {
                                          "id": 1383,
                                          "name": "block",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -4,
                                          "src": "16662:5:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_block",
                                            "typeString": "block"
                                          }
                                        },
                                        "id": 1384,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "timestamp",
                                        "nodeType": "MemberAccess",
                                        "src": "16662:15:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "16633:44:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "&&",
                                    "rightExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 1392,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "expression": {
                                          "id": 1386,
                                          "name": "block",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -4,
                                          "src": "16681:5:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_block",
                                            "typeString": "block"
                                          }
                                        },
                                        "id": 1387,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "timestamp",
                                        "nodeType": "MemberAccess",
                                        "src": "16681:15:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "<=",
                                      "rightExpression": {
                                        "expression": {
                                          "baseExpression": {
                                            "id": 1388,
                                            "name": "taskTypes",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 95,
                                            "src": "16700:9:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_struct$_TaskType_$55_storage_$dyn_storage",
                                              "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                            }
                                          },
                                          "id": 1390,
                                          "indexExpression": {
                                            "id": 1389,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1355,
                                            "src": "16710:1:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "16700:12:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_TaskType_$55_storage",
                                            "typeString": "struct Governance.TaskType storage ref"
                                          }
                                        },
                                        "id": 1391,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "endTimestamp",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 52,
                                        "src": "16700:25:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint40",
                                          "typeString": "uint40"
                                        }
                                      },
                                      "src": "16681:44:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "src": "16633:92:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "hexValue": "4f7574736964652074696d6520706572696f64",
                                    "id": 1394,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "16727:21:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_2aa371626d645af6c67a3e4026854ea2c35f19ae75ceda6326bf45ca93e956ba",
                                      "typeString": "literal_string \"Outside time period\""
                                    },
                                    "value": "Outside time period"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_2aa371626d645af6c67a3e4026854ea2c35f19ae75ceda6326bf45ca93e956ba",
                                      "typeString": "literal_string \"Outside time period\""
                                    }
                                  ],
                                  "id": 1378,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "16625:7:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 1395,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "16625:124:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1396,
                              "nodeType": "ExpressionStatement",
                              "src": "16625:124:2"
                            },
                            {
                              "assignments": [
                                1399
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 1399,
                                  "mutability": "mutable",
                                  "name": "myTask",
                                  "nameLocation": "16814:6:2",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1474,
                                  "src": "16802:18:2",
                                  "stateVariable": false,
                                  "storageLocation": "memory",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Task_$76_memory_ptr",
                                    "typeString": "struct Governance.Task"
                                  },
                                  "typeName": {
                                    "id": 1398,
                                    "nodeType": "UserDefinedTypeName",
                                    "pathNode": {
                                      "id": 1397,
                                      "name": "Task",
                                      "nodeType": "IdentifierPath",
                                      "referencedDeclaration": 76,
                                      "src": "16802:4:2"
                                    },
                                    "referencedDeclaration": 76,
                                    "src": "16802:4:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Task_$76_storage_ptr",
                                      "typeString": "struct Governance.Task"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 1418,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "id": 1401,
                                    "name": "_IPFSHash",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1347,
                                    "src": "16828:9:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  },
                                  {
                                    "id": 1402,
                                    "name": "_wizId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1351,
                                    "src": "16838:6:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint40",
                                      "typeString": "uint40"
                                    }
                                  },
                                  {
                                    "id": 1403,
                                    "name": "_hash",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1349,
                                    "src": "16846:5:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  {
                                    "hexValue": "30",
                                    "id": 1404,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "16853:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 1405,
                                        "name": "taskTypes",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 95,
                                        "src": "16856:9:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_TaskType_$55_storage_$dyn_storage",
                                          "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                        }
                                      },
                                      "id": 1407,
                                      "indexExpression": {
                                        "id": 1406,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1355,
                                        "src": "16866:1:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "16856:12:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_TaskType_$55_storage",
                                        "typeString": "struct Governance.TaskType storage ref"
                                      }
                                    },
                                    "id": 1408,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "numFieldsToHash",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 46,
                                    "src": "16856:28:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 1409,
                                        "name": "taskTypes",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 95,
                                        "src": "16886:9:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_TaskType_$55_storage_$dyn_storage",
                                          "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                        }
                                      },
                                      "id": 1411,
                                      "indexExpression": {
                                        "id": 1410,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1355,
                                        "src": "16896:1:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "16886:12:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_TaskType_$55_storage",
                                        "typeString": "struct Governance.TaskType storage ref"
                                      }
                                    },
                                    "id": 1412,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "timeBonus",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 48,
                                    "src": "16886:22:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint24",
                                      "typeString": "uint24"
                                    }
                                  },
                                  {
                                    "hexValue": "30",
                                    "id": 1413,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "16910:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  {
                                    "hexValue": "30",
                                    "id": 1414,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "16913:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  {
                                    "hexValue": "30",
                                    "id": 1415,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "16916:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  {
                                    "hexValue": "30",
                                    "id": 1416,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "16919:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    },
                                    {
                                      "typeIdentifier": "t_uint40",
                                      "typeString": "uint40"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    },
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    },
                                    {
                                      "typeIdentifier": "t_uint24",
                                      "typeString": "uint24"
                                    },
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 1400,
                                  "name": "Task",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 76,
                                  "src": "16823:4:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_struct$_Task_$76_storage_ptr_$",
                                    "typeString": "type(struct Governance.Task storage pointer)"
                                  }
                                },
                                "id": 1417,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "structConstructorCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "16823:98:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Task_$76_memory_ptr",
                                  "typeString": "struct Governance.Task memory"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "16802:119:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1422,
                                    "name": "tasksWaitingConfirmation",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 98,
                                    "src": "16965:24:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Bytes32Deque_$4671_storage",
                                      "typeString": "struct DoubleEndedQueue.Bytes32Deque storage ref"
                                    }
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "id": 1425,
                                        "name": "totalTasksAttempted",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 112,
                                        "src": "16999:19:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "id": 1424,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "16991:7:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_bytes32_$",
                                        "typeString": "type(bytes32)"
                                      },
                                      "typeName": {
                                        "id": 1423,
                                        "name": "bytes32",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "16991:7:2",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 1426,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "16991:28:2",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_struct$_Bytes32Deque_$4671_storage",
                                      "typeString": "struct DoubleEndedQueue.Bytes32Deque storage ref"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  ],
                                  "expression": {
                                    "id": 1419,
                                    "name": "DoubleEndedQueue",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4993,
                                    "src": "16939:16:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_DoubleEndedQueue_$4993_$",
                                      "typeString": "type(library DoubleEndedQueue)"
                                    }
                                  },
                                  "id": 1421,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "pushBack",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 4703,
                                  "src": "16939:25:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Bytes32Deque_$4671_storage_ptr_$_t_bytes32_$returns$__$",
                                    "typeString": "function (struct DoubleEndedQueue.Bytes32Deque storage pointer,bytes32)"
                                  }
                                },
                                "id": 1427,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "16939:81:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1428,
                              "nodeType": "ExpressionStatement",
                              "src": "16939:81:2"
                            },
                            {
                              "expression": {
                                "id": 1433,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 1429,
                                    "name": "tasks",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 110,
                                    "src": "17038:5:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Task_$76_storage_$",
                                      "typeString": "mapping(uint256 => struct Governance.Task storage ref)"
                                    }
                                  },
                                  "id": 1431,
                                  "indexExpression": {
                                    "id": 1430,
                                    "name": "totalTasksAttempted",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 112,
                                    "src": "17044:19:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "17038:26:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Task_$76_storage",
                                    "typeString": "struct Governance.Task storage ref"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 1432,
                                  "name": "myTask",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1399,
                                  "src": "17067:6:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Task_$76_memory_ptr",
                                    "typeString": "struct Governance.Task memory"
                                  }
                                },
                                "src": "17038:35:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Task_$76_storage",
                                  "typeString": "struct Governance.Task storage ref"
                                }
                              },
                              "id": 1434,
                              "nodeType": "ExpressionStatement",
                              "src": "17038:35:2"
                            },
                            {
                              "expression": {
                                "id": 1437,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 1435,
                                  "name": "totalTasksAttempted",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 112,
                                  "src": "17091:19:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "hexValue": "31",
                                  "id": 1436,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "17112:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "src": "17091:22:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1438,
                              "nodeType": "ExpressionStatement",
                              "src": "17091:22:2"
                            },
                            {
                              "expression": {
                                "id": 1449,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 1439,
                                        "name": "taskTypes",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 95,
                                        "src": "17168:9:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_TaskType_$55_storage_$dyn_storage",
                                          "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                        }
                                      },
                                      "id": 1441,
                                      "indexExpression": {
                                        "id": 1440,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1355,
                                        "src": "17178:1:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "17168:12:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_TaskType_$55_storage",
                                        "typeString": "struct Governance.TaskType storage ref"
                                      }
                                    },
                                    "id": 1442,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "nextActiveTimeThreshold",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 38,
                                    "src": "17168:36:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint40_$_t_uint256_$",
                                      "typeString": "mapping(uint40 => uint256)"
                                    }
                                  },
                                  "id": 1444,
                                  "indexExpression": {
                                    "id": 1443,
                                    "name": "_wizId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1351,
                                    "src": "17205:6:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint40",
                                      "typeString": "uint40"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "17168:44:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1448,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "id": 1445,
                                      "name": "block",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -4,
                                      "src": "17215:5:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_block",
                                        "typeString": "block"
                                      }
                                    },
                                    "id": 1446,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "timestamp",
                                    "nodeType": "MemberAccess",
                                    "src": "17215:15:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "+",
                                  "rightExpression": {
                                    "hexValue": "31",
                                    "id": 1447,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "17233:6:2",
                                    "subdenomination": "days",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_86400_by_1",
                                      "typeString": "int_const 86400"
                                    },
                                    "value": "1"
                                  },
                                  "src": "17215:24:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "17168:71:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1450,
                              "nodeType": "ExpressionStatement",
                              "src": "17168:71:2"
                            },
                            {
                              "expression": {
                                "id": 1461,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 1451,
                                      "name": "taskTypes",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 95,
                                      "src": "17257:9:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_TaskType_$55_storage_$dyn_storage",
                                        "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                      }
                                    },
                                    "id": 1453,
                                    "indexExpression": {
                                      "id": 1452,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1355,
                                      "src": "17267:1:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "17257:12:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_TaskType_$55_storage",
                                      "typeString": "struct Governance.TaskType storage ref"
                                    }
                                  },
                                  "id": 1454,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "availableSlots",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 54,
                                  "src": "17257:27:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint16",
                                    "typeString": "uint16"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint16",
                                    "typeString": "uint16"
                                  },
                                  "id": 1460,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 1455,
                                        "name": "taskTypes",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 95,
                                        "src": "17287:9:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_TaskType_$55_storage_$dyn_storage",
                                          "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                        }
                                      },
                                      "id": 1457,
                                      "indexExpression": {
                                        "id": 1456,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1355,
                                        "src": "17297:1:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "17287:12:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_TaskType_$55_storage",
                                        "typeString": "struct Governance.TaskType storage ref"
                                      }
                                    },
                                    "id": 1458,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "availableSlots",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 54,
                                    "src": "17287:27:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint16",
                                      "typeString": "uint16"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "hexValue": "31",
                                    "id": 1459,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "17317:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    "value": "1"
                                  },
                                  "src": "17287:31:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint16",
                                    "typeString": "uint16"
                                  }
                                },
                                "src": "17257:61:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint16",
                                  "typeString": "uint16"
                                }
                              },
                              "id": 1462,
                              "nodeType": "ExpressionStatement",
                              "src": "17257:61:2"
                            },
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "id": 1464,
                                    "name": "_wizId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1351,
                                    "src": "17356:6:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint40",
                                      "typeString": "uint40"
                                    }
                                  },
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 1467,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 1465,
                                      "name": "totalTasksAttempted",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 112,
                                      "src": "17363:19:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "-",
                                    "rightExpression": {
                                      "hexValue": "31",
                                      "id": 1466,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "17384:1:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1_by_1",
                                        "typeString": "int_const 1"
                                      },
                                      "value": "1"
                                    },
                                    "src": "17363:22:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 1468,
                                    "name": "_IPFSHash",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1347,
                                    "src": "17387:9:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 1469,
                                      "name": "block",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -4,
                                      "src": "17398:5:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_block",
                                        "typeString": "block"
                                      }
                                    },
                                    "id": 1470,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "timestamp",
                                    "nodeType": "MemberAccess",
                                    "src": "17398:15:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint40",
                                      "typeString": "uint40"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 1463,
                                  "name": "TaskCompleted",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 188,
                                  "src": "17342:13:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                                    "typeString": "function (uint256,uint256,string memory,uint256)"
                                  }
                                },
                                "id": 1471,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "17342:72:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1472,
                              "nodeType": "EmitStatement",
                              "src": "17337:77:2"
                            },
                            {
                              "id": 1473,
                              "nodeType": "Break",
                              "src": "17432:5:2"
                            }
                          ]
                        }
                      },
                      {
                        "id": 1479,
                        "nodeType": "UncheckedBlock",
                        "src": "17465:15:2",
                        "statements": [
                          {
                            "expression": {
                              "id": 1477,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": true,
                              "src": "17475:3:2",
                              "subExpression": {
                                "id": 1476,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1355,
                                "src": "17477:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 1478,
                            "nodeType": "ExpressionStatement",
                            "src": "17475:3:2"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1361,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1358,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1355,
                      "src": "16429:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 1359,
                        "name": "taskTypes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 95,
                        "src": "16431:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_TaskType_$55_storage_$dyn_storage",
                          "typeString": "struct Governance.TaskType storage ref[] storage ref"
                        }
                      },
                      "id": 1360,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "16431:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "16429:18:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1481,
                  "initializationExpression": {
                    "assignments": [
                      1355
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1355,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "16422:1:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 1481,
                        "src": "16414:9:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1354,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "16414:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1357,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 1356,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "16426:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "16414:13:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "16410:1080:2"
                }
              ]
            },
            "functionSelector": "72e185ce",
            "id": 1483,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "completeTask",
            "nameLocation": "16239:12:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1352,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1347,
                  "mutability": "mutable",
                  "name": "_IPFSHash",
                  "nameLocation": "16266:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1483,
                  "src": "16252:23:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1346,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "16252:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1349,
                  "mutability": "mutable",
                  "name": "_hash",
                  "nameLocation": "16285:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1483,
                  "src": "16277:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1348,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "16277:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1351,
                  "mutability": "mutable",
                  "name": "_wizId",
                  "nameLocation": "16299:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1483,
                  "src": "16292:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  },
                  "typeName": {
                    "id": 1350,
                    "name": "uint40",
                    "nodeType": "ElementaryTypeName",
                    "src": "16292:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16251:55:2"
            },
            "returnParameters": {
              "id": 1353,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16316:0:2"
            },
            "scope": 1993,
            "src": "16230:1286:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1552,
              "nodeType": "Block",
              "src": "17613:412:2",
              "statements": [
                {
                  "assignments": [
                    1494
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1494,
                      "mutability": "mutable",
                      "name": "unencoded",
                      "nameLocation": "17636:9:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1552,
                      "src": "17623:22:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 1493,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "17623:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1501,
                  "initialValue": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 1497,
                          "name": "_fields",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1488,
                          "src": "17665:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                            "typeString": "bytes32[] memory"
                          }
                        },
                        "id": 1499,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 1498,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "17673:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "17665:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 1495,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "17648:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 1496,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "encodePacked",
                      "nodeType": "MemberAccess",
                      "src": "17648:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () pure returns (bytes memory)"
                      }
                    },
                    "id": 1500,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17648:28:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17623:53:2"
                },
                {
                  "condition": {
                    "id": 1502,
                    "name": "_refuted",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1490,
                    "src": "17689:8:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1531,
                  "nodeType": "IfStatement",
                  "src": "17686:193:2",
                  "trueBody": {
                    "id": 1530,
                    "nodeType": "Block",
                    "src": "17699:180:2",
                    "statements": [
                      {
                        "body": {
                          "id": 1528,
                          "nodeType": "Block",
                          "src": "17752:117:2",
                          "statements": [
                            {
                              "expression": {
                                "id": 1522,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 1511,
                                    "name": "_fields",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1488,
                                    "src": "17770:7:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                      "typeString": "bytes32[] memory"
                                    }
                                  },
                                  "id": 1513,
                                  "indexExpression": {
                                    "id": 1512,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1504,
                                    "src": "17778:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "17770:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "baseExpression": {
                                            "id": 1517,
                                            "name": "_fields",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1488,
                                            "src": "17810:7:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                              "typeString": "bytes32[] memory"
                                            }
                                          },
                                          "id": 1519,
                                          "indexExpression": {
                                            "id": 1518,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1504,
                                            "src": "17818:1:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "17810:10:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                          }
                                        ],
                                        "expression": {
                                          "id": 1515,
                                          "name": "abi",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -1,
                                          "src": "17793:3:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_abi",
                                            "typeString": "abi"
                                          }
                                        },
                                        "id": 1516,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberName": "encodePacked",
                                        "nodeType": "MemberAccess",
                                        "src": "17793:16:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                          "typeString": "function () pure returns (bytes memory)"
                                        }
                                      },
                                      "id": 1520,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "17793:28:2",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    ],
                                    "id": 1514,
                                    "name": "keccak256",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -8,
                                    "src": "17783:9:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                      "typeString": "function (bytes memory) pure returns (bytes32)"
                                    }
                                  },
                                  "id": 1521,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "17783:39:2",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "src": "17770:52:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "id": 1523,
                              "nodeType": "ExpressionStatement",
                              "src": "17770:52:2"
                            },
                            {
                              "id": 1527,
                              "nodeType": "UncheckedBlock",
                              "src": "17840:15:2",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 1525,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "UnaryOperation",
                                    "operator": "++",
                                    "prefix": true,
                                    "src": "17850:3:2",
                                    "subExpression": {
                                      "id": 1524,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1504,
                                      "src": "17852:1:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 1526,
                                  "nodeType": "ExpressionStatement",
                                  "src": "17850:3:2"
                                }
                              ]
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1510,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1507,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1504,
                            "src": "17732:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 1508,
                              "name": "_fields",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1488,
                              "src": "17736:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                "typeString": "bytes32[] memory"
                              }
                            },
                            "id": 1509,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "17736:14:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "17732:18:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1529,
                        "initializationExpression": {
                          "assignments": [
                            1504
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 1504,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "17725:1:2",
                              "nodeType": "VariableDeclaration",
                              "scope": 1529,
                              "src": "17717:9:2",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 1503,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "17717:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 1506,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 1505,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "17729:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "17717:13:2"
                        },
                        "nodeType": "ForStatement",
                        "src": "17713:156:2"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    1533
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1533,
                      "mutability": "mutable",
                      "name": "myHash",
                      "nameLocation": "17896:6:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1552,
                      "src": "17888:14:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1532,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "17888:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1540,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1537,
                            "name": "_fields",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1488,
                            "src": "17932:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                              "typeString": "bytes32[] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                              "typeString": "bytes32[] memory"
                            }
                          ],
                          "expression": {
                            "id": 1535,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "17915:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 1536,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "17915:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 1538,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17915:25:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 1534,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "17905:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 1539,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17905:36:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17888:53:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1542,
                        "name": "myHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1533,
                        "src": "17968:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 1545,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1543,
                          "name": "myHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1533,
                          "src": "17976:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 1544,
                          "name": "_givenHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1485,
                          "src": "17984:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "17976:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 1546,
                          "name": "_fields",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1488,
                          "src": "17996:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                            "typeString": "bytes32[] memory"
                          }
                        },
                        "id": 1548,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 1547,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "18004:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "17996:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 1549,
                        "name": "unencoded",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1494,
                        "src": "18008:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 1541,
                      "name": "HashTesting",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 162,
                      "src": "17956:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bool_$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes32,bool,bytes32,bytes memory)"
                      }
                    },
                    "id": 1550,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17956:62:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1551,
                  "nodeType": "EmitStatement",
                  "src": "17951:67:2"
                }
              ]
            },
            "functionSelector": "09265ce6",
            "id": 1553,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testHashing",
            "nameLocation": "17531:11:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1491,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1485,
                  "mutability": "mutable",
                  "name": "_givenHash",
                  "nameLocation": "17551:10:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1553,
                  "src": "17543:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1484,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "17543:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1488,
                  "mutability": "mutable",
                  "name": "_fields",
                  "nameLocation": "17580:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1553,
                  "src": "17563:24:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1486,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "17563:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 1487,
                    "nodeType": "ArrayTypeName",
                    "src": "17563:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1490,
                  "mutability": "mutable",
                  "name": "_refuted",
                  "nameLocation": "17594:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1553,
                  "src": "17589:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1489,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "17589:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17542:61:2"
            },
            "returnParameters": {
              "id": 1492,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17613:0:2"
            },
            "scope": 1993,
            "src": "17522:503:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1945,
              "nodeType": "Block",
              "src": "18827:4112:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1577,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1570,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "id": 1566,
                                "name": "_wizId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1555,
                                "src": "18914:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 1564,
                                "name": "wizardsNFT",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 25,
                                "src": "18895:10:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Wizards_$4652",
                                  "typeString": "contract Wizards"
                                }
                              },
                              "id": 1565,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "ownerOf",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 5292,
                              "src": "18895:18:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                                "typeString": "function (uint256) view external returns (address)"
                              }
                            },
                            "id": 1567,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "18895:26:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 1568,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "18925:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1569,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "18925:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "18895:40:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1576,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 1571,
                                "name": "tasks",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 110,
                                "src": "18939:5:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Task_$76_storage_$",
                                  "typeString": "mapping(uint256 => struct Governance.Task storage ref)"
                                }
                              },
                              "id": 1573,
                              "indexExpression": {
                                "id": 1572,
                                "name": "_taskID",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1557,
                                "src": "18945:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "18939:14:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Task_$76_storage",
                                "typeString": "struct Governance.Task storage ref"
                              }
                            },
                            "id": 1574,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "verifierID",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 71,
                            "src": "18939:25:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 1575,
                            "name": "_wizId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1555,
                            "src": "18966:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "18939:33:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "18895:77:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d757374206265206f776e6572206f662061737369676e65642077697a617264",
                        "id": 1578,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18974:34:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_29a5053514bc5f788dbd1548d65ae6067a8703782cd1eb7764fcaabfc0c5129d",
                          "typeString": "literal_string \"Must be owner of assigned wizard\""
                        },
                        "value": "Must be owner of assigned wizard"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_29a5053514bc5f788dbd1548d65ae6067a8703782cd1eb7764fcaabfc0c5129d",
                          "typeString": "literal_string \"Must be owner of assigned wizard\""
                        }
                      ],
                      "id": 1563,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "18887:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1579,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18887:122:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1580,
                  "nodeType": "ExpressionStatement",
                  "src": "18887:122:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1585,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1582,
                            "name": "_fields",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1560,
                            "src": "19027:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                              "typeString": "bytes32[] memory"
                            }
                          },
                          "id": 1583,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "19027:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1584,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "19044:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "19027:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1581,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "19019:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1586,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19019:27:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1587,
                  "nodeType": "ExpressionStatement",
                  "src": "19019:27:2"
                },
                {
                  "assignments": [
                    1590
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1590,
                      "mutability": "mutable",
                      "name": "myTask",
                      "nameLocation": "19069:6:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1945,
                      "src": "19057:18:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Task_$76_memory_ptr",
                        "typeString": "struct Governance.Task"
                      },
                      "typeName": {
                        "id": 1589,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1588,
                          "name": "Task",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 76,
                          "src": "19057:4:2"
                        },
                        "referencedDeclaration": 76,
                        "src": "19057:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Task_$76_storage_ptr",
                          "typeString": "struct Governance.Task"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1594,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1591,
                      "name": "tasks",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 110,
                      "src": "19078:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Task_$76_storage_$",
                        "typeString": "mapping(uint256 => struct Governance.Task storage ref)"
                      }
                    },
                    "id": 1593,
                    "indexExpression": {
                      "id": 1592,
                      "name": "_taskID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1557,
                      "src": "19084:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "19078:14:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Task_$76_storage",
                      "typeString": "struct Governance.Task storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "19057:35:2"
                },
                {
                  "assignments": [
                    1596
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1596,
                      "mutability": "mutable",
                      "name": "count",
                      "nameLocation": "19110:5:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1945,
                      "src": "19102:13:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1595,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "19102:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1598,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 1597,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "19118:1:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "19102:17:2"
                },
                {
                  "assignments": [
                    1600
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1600,
                      "mutability": "mutable",
                      "name": "deleteTaskFlag",
                      "nameLocation": "19134:14:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1945,
                      "src": "19129:19:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1599,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "19129:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1602,
                  "initialValue": {
                    "hexValue": "74727565",
                    "id": 1601,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "19151:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "19129:26:2"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    },
                    "id": 1606,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 1603,
                        "name": "myTask",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1590,
                        "src": "19214:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Task_$76_memory_ptr",
                          "typeString": "struct Governance.Task memory"
                        }
                      },
                      "id": 1604,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "refuterID",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 73,
                      "src": "19214:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1605,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "19233:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "19214:20:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1635,
                  "nodeType": "IfStatement",
                  "src": "19211:205:2",
                  "trueBody": {
                    "id": 1634,
                    "nodeType": "Block",
                    "src": "19236:180:2",
                    "statements": [
                      {
                        "body": {
                          "id": 1632,
                          "nodeType": "Block",
                          "src": "19289:117:2",
                          "statements": [
                            {
                              "expression": {
                                "id": 1626,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 1615,
                                    "name": "_fields",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1560,
                                    "src": "19307:7:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                      "typeString": "bytes32[] memory"
                                    }
                                  },
                                  "id": 1617,
                                  "indexExpression": {
                                    "id": 1616,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1608,
                                    "src": "19315:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "19307:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "baseExpression": {
                                            "id": 1621,
                                            "name": "_fields",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1560,
                                            "src": "19347:7:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                              "typeString": "bytes32[] memory"
                                            }
                                          },
                                          "id": 1623,
                                          "indexExpression": {
                                            "id": 1622,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1608,
                                            "src": "19355:1:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "19347:10:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                          }
                                        ],
                                        "expression": {
                                          "id": 1619,
                                          "name": "abi",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -1,
                                          "src": "19330:3:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_abi",
                                            "typeString": "abi"
                                          }
                                        },
                                        "id": 1620,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberName": "encodePacked",
                                        "nodeType": "MemberAccess",
                                        "src": "19330:16:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                          "typeString": "function () pure returns (bytes memory)"
                                        }
                                      },
                                      "id": 1624,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "19330:28:2",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    ],
                                    "id": 1618,
                                    "name": "keccak256",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -8,
                                    "src": "19320:9:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                      "typeString": "function (bytes memory) pure returns (bytes32)"
                                    }
                                  },
                                  "id": 1625,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "19320:39:2",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "src": "19307:52:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "id": 1627,
                              "nodeType": "ExpressionStatement",
                              "src": "19307:52:2"
                            },
                            {
                              "id": 1631,
                              "nodeType": "UncheckedBlock",
                              "src": "19377:15:2",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 1629,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "UnaryOperation",
                                    "operator": "++",
                                    "prefix": true,
                                    "src": "19387:3:2",
                                    "subExpression": {
                                      "id": 1628,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1608,
                                      "src": "19389:1:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 1630,
                                  "nodeType": "ExpressionStatement",
                                  "src": "19387:3:2"
                                }
                              ]
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1614,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1611,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1608,
                            "src": "19269:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 1612,
                              "name": "_fields",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1560,
                              "src": "19273:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                "typeString": "bytes32[] memory"
                              }
                            },
                            "id": 1613,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "19273:14:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "19269:18:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1633,
                        "initializationExpression": {
                          "assignments": [
                            1608
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 1608,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "19262:1:2",
                              "nodeType": "VariableDeclaration",
                              "scope": 1633,
                              "src": "19254:9:2",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 1607,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "19254:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 1610,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 1609,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "19266:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "19254:13:2"
                        },
                        "nodeType": "ForStatement",
                        "src": "19250:156:2"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    1637
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1637,
                      "mutability": "mutable",
                      "name": "myHash",
                      "nameLocation": "19433:6:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1945,
                      "src": "19425:14:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1636,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "19425:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1644,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1641,
                            "name": "_fields",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1560,
                            "src": "19469:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                              "typeString": "bytes32[] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                              "typeString": "bytes32[] memory"
                            }
                          ],
                          "expression": {
                            "id": 1639,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "19452:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 1640,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "19452:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 1642,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "19452:25:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 1638,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "19442:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 1643,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19442:36:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "19425:53:2"
                },
                {
                  "assignments": [
                    1646
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1646,
                      "mutability": "mutable",
                      "name": "correctHash",
                      "nameLocation": "19497:11:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1945,
                      "src": "19489:19:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1645,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "19489:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1654,
                  "initialValue": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "id": 1650,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 1647,
                          "name": "myTask",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1590,
                          "src": "19511:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Task_$76_memory_ptr",
                            "typeString": "struct Governance.Task memory"
                          }
                        },
                        "id": 1648,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "hash",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 61,
                        "src": "19511:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "id": 1649,
                        "name": "myHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1637,
                        "src": "19526:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "src": "19511:21:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "hexValue": "30",
                      "id": 1652,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "19539:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "id": 1653,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "19511:29:2",
                    "trueExpression": {
                      "hexValue": "31",
                      "id": 1651,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "19535:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "19489:51:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1656,
                        "name": "_wizId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1555,
                        "src": "19578:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 1657,
                          "name": "myTask",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1590,
                          "src": "19586:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Task_$76_memory_ptr",
                            "typeString": "struct Governance.Task memory"
                          }
                        },
                        "id": 1658,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "NFTID",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 59,
                        "src": "19586:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        }
                      },
                      {
                        "id": 1659,
                        "name": "_taskID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1557,
                        "src": "19600:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1660,
                        "name": "myHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1637,
                        "src": "19609:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1663,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1661,
                          "name": "correctHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1646,
                          "src": "19617:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 1662,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "19630:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "19617:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1655,
                      "name": "VerificationSucceeded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 152,
                      "src": "19556:21:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_bytes32_$_t_bool_$returns$__$",
                        "typeString": "function (uint256,uint256,uint256,bytes32,bool)"
                      }
                    },
                    "id": 1664,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19556:76:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1665,
                  "nodeType": "EmitStatement",
                  "src": "19551:81:2"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1668,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1666,
                      "name": "correctHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1646,
                      "src": "19647:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 1667,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "19661:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "19647:15:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 1879,
                    "nodeType": "Block",
                    "src": "20510:1630:2",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          },
                          "id": 1746,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 1743,
                              "name": "myTask",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1590,
                              "src": "20600:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Task_$76_memory_ptr",
                                "typeString": "struct Governance.Task memory"
                              }
                            },
                            "id": 1744,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "refuterID",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 73,
                            "src": "20600:16:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 1745,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "20618:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "20600:19:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1773,
                        "nodeType": "IfStatement",
                        "src": "20597:211:2",
                        "trueBody": {
                          "id": 1772,
                          "nodeType": "Block",
                          "src": "20620:188:2",
                          "statements": [
                            {
                              "expression": {
                                "id": 1754,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 1747,
                                    "name": "myTask",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1590,
                                    "src": "20638:6:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Task_$76_memory_ptr",
                                      "typeString": "struct Governance.Task memory"
                                    }
                                  },
                                  "id": 1749,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "refuterID",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 73,
                                  "src": "20638:16:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint16",
                                    "typeString": "uint16"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "id": 1752,
                                      "name": "_wizId",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1555,
                                      "src": "20662:6:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "id": 1751,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "20655:6:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint16_$",
                                      "typeString": "type(uint16)"
                                    },
                                    "typeName": {
                                      "id": 1750,
                                      "name": "uint16",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "20655:6:2",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 1753,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "20655:14:2",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint16",
                                    "typeString": "uint16"
                                  }
                                },
                                "src": "20638:31:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint16",
                                  "typeString": "uint16"
                                }
                              },
                              "id": 1755,
                              "nodeType": "ExpressionStatement",
                              "src": "20638:31:2"
                            },
                            {
                              "expression": {
                                "id": 1760,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 1756,
                                    "name": "myTask",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1590,
                                    "src": "20687:6:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Task_$76_memory_ptr",
                                      "typeString": "struct Governance.Task memory"
                                    }
                                  },
                                  "id": 1758,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "refuterHash",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 63,
                                  "src": "20687:18:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 1759,
                                  "name": "myHash",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1637,
                                  "src": "20706:6:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "src": "20687:25:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "id": 1761,
                              "nodeType": "ExpressionStatement",
                              "src": "20687:25:2"
                            },
                            {
                              "expression": {
                                "id": 1766,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 1762,
                                    "name": "tasks",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 110,
                                    "src": "20730:5:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Task_$76_storage_$",
                                      "typeString": "mapping(uint256 => struct Governance.Task storage ref)"
                                    }
                                  },
                                  "id": 1764,
                                  "indexExpression": {
                                    "id": 1763,
                                    "name": "_taskID",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1557,
                                    "src": "20736:7:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "20730:14:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Task_$76_storage",
                                    "typeString": "struct Governance.Task storage ref"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 1765,
                                  "name": "myTask",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1590,
                                  "src": "20747:6:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Task_$76_memory_ptr",
                                    "typeString": "struct Governance.Task memory"
                                  }
                                },
                                "src": "20730:23:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Task_$76_storage",
                                  "typeString": "struct Governance.Task storage ref"
                                }
                              },
                              "id": 1767,
                              "nodeType": "ExpressionStatement",
                              "src": "20730:23:2"
                            },
                            {
                              "expression": {
                                "id": 1770,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 1768,
                                  "name": "deleteTaskFlag",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1600,
                                  "src": "20771:14:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "66616c7365",
                                  "id": 1769,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "20788:5:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "false"
                                },
                                "src": "20771:22:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 1771,
                              "nodeType": "ExpressionStatement",
                              "src": "20771:22:2"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          "id": 1777,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 1774,
                              "name": "myTask",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1590,
                              "src": "20884:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Task_$76_memory_ptr",
                                "typeString": "struct Governance.Task memory"
                              }
                            },
                            "id": 1775,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "refuterHash",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 63,
                            "src": "20884:18:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 1776,
                            "name": "myHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1637,
                            "src": "20904:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "20884:26:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 1877,
                          "nodeType": "Block",
                          "src": "21723:407:2",
                          "statements": [
                            {
                              "assignments": [
                                1851
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 1851,
                                  "mutability": "mutable",
                                  "name": "split",
                                  "nameLocation": "21837:5:2",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1877,
                                  "src": "21829:13:2",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 1850,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "21829:7:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 1854,
                              "initialValue": {
                                "expression": {
                                  "id": 1852,
                                  "name": "myTask",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1590,
                                  "src": "21845:6:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Task_$76_memory_ptr",
                                    "typeString": "struct Governance.Task memory"
                                  }
                                },
                                "id": 1853,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "payment",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 69,
                                "src": "21845:14:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint80",
                                  "typeString": "uint80"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "21829:30:2"
                            },
                            {
                              "expression": {
                                "id": 1858,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "delete",
                                "prefix": true,
                                "src": "21877:21:2",
                                "subExpression": {
                                  "baseExpression": {
                                    "id": 1855,
                                    "name": "tasks",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 110,
                                    "src": "21884:5:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Task_$76_storage_$",
                                      "typeString": "mapping(uint256 => struct Governance.Task storage ref)"
                                    }
                                  },
                                  "id": 1857,
                                  "indexExpression": {
                                    "id": 1856,
                                    "name": "_taskID",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1557,
                                    "src": "21890:7:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "21884:14:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Task_$76_storage",
                                    "typeString": "struct Governance.Task storage ref"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1859,
                              "nodeType": "ExpressionStatement",
                              "src": "21877:21:2"
                            },
                            {
                              "assignments": [
                                1861,
                                1863
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 1861,
                                  "mutability": "mutable",
                                  "name": "sent",
                                  "nameLocation": "21922:4:2",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1877,
                                  "src": "21917:9:2",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "typeName": {
                                    "id": 1860,
                                    "name": "bool",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "21917:4:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "visibility": "internal"
                                },
                                {
                                  "constant": false,
                                  "id": 1863,
                                  "mutability": "mutable",
                                  "name": "data",
                                  "nameLocation": "21941:4:2",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1877,
                                  "src": "21928:17:2",
                                  "stateVariable": false,
                                  "storageLocation": "memory",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes"
                                  },
                                  "typeName": {
                                    "id": 1862,
                                    "name": "bytes",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "21928:5:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_storage_ptr",
                                      "typeString": "bytes"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 1871,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "hexValue": "",
                                    "id": 1869,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "21976:2:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                      "typeString": "literal_string \"\""
                                    },
                                    "value": ""
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                      "typeString": "literal_string \"\""
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                        "typeString": "literal_string \"\""
                                      }
                                    ],
                                    "expression": {
                                      "arguments": [],
                                      "expression": {
                                        "argumentTypes": [],
                                        "id": 1864,
                                        "name": "owner",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 7068,
                                        "src": "21949:5:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                          "typeString": "function () view returns (address)"
                                        }
                                      },
                                      "id": 1865,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "21949:7:2",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "id": 1866,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "call",
                                    "nodeType": "MemberAccess",
                                    "src": "21949:12:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                      "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                                    }
                                  },
                                  "id": 1868,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "names": [
                                    "value"
                                  ],
                                  "nodeType": "FunctionCallOptions",
                                  "options": [
                                    {
                                      "id": 1867,
                                      "name": "split",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1851,
                                      "src": "21969:5:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "src": "21949:26:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                                    "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                                  }
                                },
                                "id": 1870,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "21949:30:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                                  "typeString": "tuple(bool,bytes memory)"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "21916:63:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1873,
                                    "name": "sent",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1861,
                                    "src": "22055:4:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "hexValue": "4661696c656420746f2073656e64204574686572",
                                    "id": 1874,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "22061:22:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
                                      "typeString": "literal_string \"Failed to send Ether\""
                                    },
                                    "value": "Failed to send Ether"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
                                      "typeString": "literal_string \"Failed to send Ether\""
                                    }
                                  ],
                                  "id": 1872,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "22047:7:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 1875,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "22047:37:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1876,
                              "nodeType": "ExpressionStatement",
                              "src": "22047:37:2"
                            }
                          ]
                        },
                        "id": 1878,
                        "nodeType": "IfStatement",
                        "src": "20881:1249:2",
                        "trueBody": {
                          "id": 1849,
                          "nodeType": "Block",
                          "src": "20911:795:2",
                          "statements": [
                            {
                              "assignments": [
                                1779
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 1779,
                                  "mutability": "mutable",
                                  "name": "split",
                                  "nameLocation": "20937:5:2",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1849,
                                  "src": "20929:13:2",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 1778,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "20929:7:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 1784,
                              "initialValue": {
                                "commonType": {
                                  "typeIdentifier": "t_uint80",
                                  "typeString": "uint80"
                                },
                                "id": 1783,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 1780,
                                    "name": "myTask",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1590,
                                    "src": "20945:6:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Task_$76_memory_ptr",
                                      "typeString": "struct Governance.Task memory"
                                    }
                                  },
                                  "id": 1781,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "payment",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 69,
                                  "src": "20945:14:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint80",
                                    "typeString": "uint80"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "/",
                                "rightExpression": {
                                  "hexValue": "32",
                                  "id": 1782,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "20960:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_2_by_1",
                                    "typeString": "int_const 2"
                                  },
                                  "value": "2"
                                },
                                "src": "20945:16:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint80",
                                  "typeString": "uint80"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "20929:32:2"
                            },
                            {
                              "assignments": [
                                1786
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 1786,
                                  "mutability": "mutable",
                                  "name": "taskRefuter",
                                  "nameLocation": "20995:11:2",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1849,
                                  "src": "20979:27:2",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  },
                                  "typeName": {
                                    "id": 1785,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "20979:15:2",
                                    "stateMutability": "payable",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 1795,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "expression": {
                                          "id": 1791,
                                          "name": "myTask",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1590,
                                          "src": "21036:6:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Task_$76_memory_ptr",
                                            "typeString": "struct Governance.Task memory"
                                          }
                                        },
                                        "id": 1792,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "refuterID",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 73,
                                        "src": "21036:16:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint16",
                                          "typeString": "uint16"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint16",
                                          "typeString": "uint16"
                                        }
                                      ],
                                      "expression": {
                                        "id": 1789,
                                        "name": "wizardsNFT",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 25,
                                        "src": "21017:10:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_Wizards_$4652",
                                          "typeString": "contract Wizards"
                                        }
                                      },
                                      "id": 1790,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "ownerOf",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 5292,
                                      "src": "21017:18:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                                        "typeString": "function (uint256) view external returns (address)"
                                      }
                                    },
                                    "id": 1793,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "21017:36:2",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 1788,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "21009:8:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_payable_$",
                                    "typeString": "type(address payable)"
                                  },
                                  "typeName": {
                                    "id": 1787,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "21009:8:2",
                                    "stateMutability": "payable",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1794,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "21009:45:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "20979:75:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 1799,
                                      "name": "myTask",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1590,
                                      "src": "21095:6:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Task_$76_memory_ptr",
                                        "typeString": "struct Governance.Task memory"
                                      }
                                    },
                                    "id": 1800,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "refuterID",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 73,
                                    "src": "21095:16:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint16",
                                      "typeString": "uint16"
                                    }
                                  },
                                  {
                                    "id": 1801,
                                    "name": "taskVerificationTimeBonus",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 120,
                                    "src": "21113:25:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint16",
                                      "typeString": "uint16"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 1796,
                                    "name": "wizardsNFT",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 25,
                                    "src": "21073:10:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_Wizards_$4652",
                                      "typeString": "contract Wizards"
                                    }
                                  },
                                  "id": 1798,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "verifyDuty",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 4273,
                                  "src": "21073:21:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                                    "typeString": "function (uint256,uint256) external"
                                  }
                                },
                                "id": 1802,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "21073:66:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1803,
                              "nodeType": "ExpressionStatement",
                              "src": "21073:66:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1807,
                                    "name": "_wizId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1555,
                                    "src": "21179:6:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 1808,
                                    "name": "taskVerificationTimeBonus",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 120,
                                    "src": "21187:25:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 1804,
                                    "name": "wizardsNFT",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 25,
                                    "src": "21157:10:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_Wizards_$4652",
                                      "typeString": "contract Wizards"
                                    }
                                  },
                                  "id": 1806,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "verifyDuty",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 4273,
                                  "src": "21157:21:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                                    "typeString": "function (uint256,uint256) external"
                                  }
                                },
                                "id": 1809,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "21157:56:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1810,
                              "nodeType": "ExpressionStatement",
                              "src": "21157:56:2"
                            },
                            {
                              "expression": {
                                "id": 1814,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "delete",
                                "prefix": true,
                                "src": "21298:21:2",
                                "subExpression": {
                                  "baseExpression": {
                                    "id": 1811,
                                    "name": "tasks",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 110,
                                    "src": "21305:5:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Task_$76_storage_$",
                                      "typeString": "mapping(uint256 => struct Governance.Task storage ref)"
                                    }
                                  },
                                  "id": 1813,
                                  "indexExpression": {
                                    "id": 1812,
                                    "name": "_taskID",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1557,
                                    "src": "21311:7:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "21305:14:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Task_$76_storage",
                                    "typeString": "struct Governance.Task storage ref"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1815,
                              "nodeType": "ExpressionStatement",
                              "src": "21298:21:2"
                            },
                            {
                              "assignments": [
                                1817,
                                1819
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 1817,
                                  "mutability": "mutable",
                                  "name": "sent",
                                  "nameLocation": "21386:4:2",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1849,
                                  "src": "21381:9:2",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "typeName": {
                                    "id": 1816,
                                    "name": "bool",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "21381:4:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "visibility": "internal"
                                },
                                {
                                  "constant": false,
                                  "id": 1819,
                                  "mutability": "mutable",
                                  "name": "data",
                                  "nameLocation": "21405:4:2",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1849,
                                  "src": "21392:17:2",
                                  "stateVariable": false,
                                  "storageLocation": "memory",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes"
                                  },
                                  "typeName": {
                                    "id": 1818,
                                    "name": "bytes",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "21392:5:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_storage_ptr",
                                      "typeString": "bytes"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 1826,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "hexValue": "",
                                    "id": 1824,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "21444:2:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                      "typeString": "literal_string \"\""
                                    },
                                    "value": ""
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                      "typeString": "literal_string \"\""
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                        "typeString": "literal_string \"\""
                                      }
                                    ],
                                    "expression": {
                                      "id": 1820,
                                      "name": "taskRefuter",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1786,
                                      "src": "21413:11:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address_payable",
                                        "typeString": "address payable"
                                      }
                                    },
                                    "id": 1821,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "call",
                                    "nodeType": "MemberAccess",
                                    "src": "21413:16:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                      "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                                    }
                                  },
                                  "id": 1823,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "names": [
                                    "value"
                                  ],
                                  "nodeType": "FunctionCallOptions",
                                  "options": [
                                    {
                                      "id": 1822,
                                      "name": "split",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1779,
                                      "src": "21437:5:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "src": "21413:30:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                                    "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                                  }
                                },
                                "id": 1825,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "21413:34:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                                  "typeString": "tuple(bool,bytes memory)"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "21380:67:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1828,
                                    "name": "sent",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1817,
                                    "src": "21473:4:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "hexValue": "4661696c656420746f2073656e64204574686572",
                                    "id": 1829,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "21479:22:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
                                      "typeString": "literal_string \"Failed to send Ether\""
                                    },
                                    "value": "Failed to send Ether"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
                                      "typeString": "literal_string \"Failed to send Ether\""
                                    }
                                  ],
                                  "id": 1827,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "21465:7:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 1830,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "21465:37:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1831,
                              "nodeType": "ExpressionStatement",
                              "src": "21465:37:2"
                            },
                            {
                              "expression": {
                                "id": 1842,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "components": [
                                    {
                                      "id": 1832,
                                      "name": "sent",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1817,
                                      "src": "21558:4:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    {
                                      "id": 1833,
                                      "name": "data",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1819,
                                      "src": "21564:4:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    }
                                  ],
                                  "id": 1834,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "TupleExpression",
                                  "src": "21557:12:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                                    "typeString": "tuple(bool,bytes memory)"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "hexValue": "",
                                      "id": 1840,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "string",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "21602:2:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                        "typeString": "literal_string \"\""
                                      },
                                      "value": ""
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                        "typeString": "literal_string \"\""
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                          "typeString": "literal_string \"\""
                                        }
                                      ],
                                      "expression": {
                                        "expression": {
                                          "id": 1835,
                                          "name": "msg",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -15,
                                          "src": "21572:3:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_message",
                                            "typeString": "msg"
                                          }
                                        },
                                        "id": 1836,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "sender",
                                        "nodeType": "MemberAccess",
                                        "src": "21572:10:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "id": 1837,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "call",
                                      "nodeType": "MemberAccess",
                                      "src": "21572:15:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                                      }
                                    },
                                    "id": 1839,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "names": [
                                      "value"
                                    ],
                                    "nodeType": "FunctionCallOptions",
                                    "options": [
                                      {
                                        "id": 1838,
                                        "name": "split",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1779,
                                        "src": "21595:5:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "src": "21572:29:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                                      "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                                    }
                                  },
                                  "id": 1841,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "21572:33:2",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                                    "typeString": "tuple(bool,bytes memory)"
                                  }
                                },
                                "src": "21557:48:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1843,
                              "nodeType": "ExpressionStatement",
                              "src": "21557:48:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1845,
                                    "name": "sent",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1817,
                                    "src": "21631:4:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "hexValue": "4661696c656420746f2073656e64204574686572",
                                    "id": 1846,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "21637:22:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
                                      "typeString": "literal_string \"Failed to send Ether\""
                                    },
                                    "value": "Failed to send Ether"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
                                      "typeString": "literal_string \"Failed to send Ether\""
                                    }
                                  ],
                                  "id": 1844,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "21623:7:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 1847,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "21623:37:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1848,
                              "nodeType": "ExpressionStatement",
                              "src": "21623:37:2"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "id": 1880,
                  "nodeType": "IfStatement",
                  "src": "19643:2497:2",
                  "trueBody": {
                    "id": 1742,
                    "nodeType": "Block",
                    "src": "19663:833:2",
                    "statements": [
                      {
                        "assignments": [
                          1670
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1670,
                            "mutability": "mutable",
                            "name": "split",
                            "nameLocation": "19749:5:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 1742,
                            "src": "19741:13:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1669,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "19741:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1675,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint80",
                            "typeString": "uint80"
                          },
                          "id": 1674,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 1671,
                              "name": "myTask",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1590,
                              "src": "19757:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Task_$76_memory_ptr",
                                "typeString": "struct Governance.Task memory"
                              }
                            },
                            "id": 1672,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "payment",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 69,
                            "src": "19757:14:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint80",
                              "typeString": "uint80"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "32",
                            "id": 1673,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "19772:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "src": "19757:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint80",
                            "typeString": "uint80"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "19741:32:2"
                      },
                      {
                        "assignments": [
                          1677
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1677,
                            "mutability": "mutable",
                            "name": "taskSubmitter",
                            "nameLocation": "19803:13:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 1742,
                            "src": "19787:29:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            "typeName": {
                              "id": 1676,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "19787:15:2",
                              "stateMutability": "payable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1686,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 1682,
                                    "name": "myTask",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1590,
                                    "src": "19846:6:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Task_$76_memory_ptr",
                                      "typeString": "struct Governance.Task memory"
                                    }
                                  },
                                  "id": 1683,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "verifierID",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 71,
                                  "src": "19846:17:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint16",
                                    "typeString": "uint16"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint16",
                                    "typeString": "uint16"
                                  }
                                ],
                                "expression": {
                                  "id": 1680,
                                  "name": "wizardsNFT",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 25,
                                  "src": "19827:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Wizards_$4652",
                                    "typeString": "contract Wizards"
                                  }
                                },
                                "id": 1681,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "ownerOf",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 5292,
                                "src": "19827:18:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                                  "typeString": "function (uint256) view external returns (address)"
                                }
                              },
                              "id": 1684,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "19827:37:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1679,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "19819:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_payable_$",
                              "typeString": "type(address payable)"
                            },
                            "typeName": {
                              "id": 1678,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "19819:8:2",
                              "stateMutability": "payable",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1685,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "19819:46:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "19787:78:2"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1690,
                                "name": "myTask",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1590,
                                "src": "19955:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Task_$76_memory_ptr",
                                  "typeString": "struct Governance.Task memory"
                                }
                              },
                              "id": 1691,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "NFTID",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 59,
                              "src": "19955:12:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint40",
                                "typeString": "uint40"
                              }
                            },
                            {
                              "expression": {
                                "id": 1692,
                                "name": "myTask",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1590,
                                "src": "19969:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Task_$76_memory_ptr",
                                  "typeString": "struct Governance.Task memory"
                                }
                              },
                              "id": 1693,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timeBonus",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 67,
                              "src": "19969:16:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint24",
                                "typeString": "uint24"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint40",
                                "typeString": "uint40"
                              },
                              {
                                "typeIdentifier": "t_uint24",
                                "typeString": "uint24"
                              }
                            ],
                            "expression": {
                              "id": 1687,
                              "name": "wizardsNFT",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25,
                              "src": "19933:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Wizards_$4652",
                                "typeString": "contract Wizards"
                              }
                            },
                            "id": 1689,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "verifyDuty",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4273,
                            "src": "19933:21:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256) external"
                            }
                          },
                          "id": 1694,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "19933:53:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1695,
                        "nodeType": "ExpressionStatement",
                        "src": "19933:53:2"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1699,
                                "name": "myTask",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1590,
                                "src": "20022:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Task_$76_memory_ptr",
                                  "typeString": "struct Governance.Task memory"
                                }
                              },
                              "id": 1700,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "verifierID",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 71,
                              "src": "20022:17:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            },
                            {
                              "id": 1701,
                              "name": "taskVerificationTimeBonus",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 120,
                              "src": "20041:25:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 1696,
                              "name": "wizardsNFT",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25,
                              "src": "20000:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Wizards_$4652",
                                "typeString": "contract Wizards"
                              }
                            },
                            "id": 1698,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "verifyDuty",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4273,
                            "src": "20000:21:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256) external"
                            }
                          },
                          "id": 1702,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "20000:67:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1703,
                        "nodeType": "ExpressionStatement",
                        "src": "20000:67:2"
                      },
                      {
                        "expression": {
                          "id": 1707,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "delete",
                          "prefix": true,
                          "src": "20144:21:2",
                          "subExpression": {
                            "baseExpression": {
                              "id": 1704,
                              "name": "tasks",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 110,
                              "src": "20151:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Task_$76_storage_$",
                                "typeString": "mapping(uint256 => struct Governance.Task storage ref)"
                              }
                            },
                            "id": 1706,
                            "indexExpression": {
                              "id": 1705,
                              "name": "_taskID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1557,
                              "src": "20157:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "20151:14:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Task_$76_storage",
                              "typeString": "struct Governance.Task storage ref"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1708,
                        "nodeType": "ExpressionStatement",
                        "src": "20144:21:2"
                      },
                      {
                        "assignments": [
                          1710,
                          1712
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1710,
                            "mutability": "mutable",
                            "name": "sent",
                            "nameLocation": "20224:4:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 1742,
                            "src": "20219:9:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 1709,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "20219:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 1712,
                            "mutability": "mutable",
                            "name": "data",
                            "nameLocation": "20243:4:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 1742,
                            "src": "20230:17:2",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 1711,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "20230:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1719,
                        "initialValue": {
                          "arguments": [
                            {
                              "hexValue": "",
                              "id": 1717,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "20284:2:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              },
                              "value": ""
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                }
                              ],
                              "expression": {
                                "id": 1713,
                                "name": "taskSubmitter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1677,
                                "src": "20251:13:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "id": 1714,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "call",
                              "nodeType": "MemberAccess",
                              "src": "20251:18:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                              }
                            },
                            "id": 1716,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "id": 1715,
                                "name": "split",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1670,
                                "src": "20277:5:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "src": "20251:32:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                              "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                            }
                          },
                          "id": 1718,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "20251:36:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "20218:69:2"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1721,
                              "name": "sent",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1710,
                              "src": "20309:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4661696c656420746f2073656e64204574686572",
                              "id": 1722,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "20315:22:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
                                "typeString": "literal_string \"Failed to send Ether\""
                              },
                              "value": "Failed to send Ether"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
                                "typeString": "literal_string \"Failed to send Ether\""
                              }
                            ],
                            "id": 1720,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "20301:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1723,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "20301:37:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1724,
                        "nodeType": "ExpressionStatement",
                        "src": "20301:37:2"
                      },
                      {
                        "expression": {
                          "id": 1735,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "components": [
                              {
                                "id": 1725,
                                "name": "sent",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1710,
                                "src": "20386:4:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              {
                                "id": 1726,
                                "name": "data",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1712,
                                "src": "20392:4:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "id": 1727,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "TupleExpression",
                            "src": "20385:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                              "typeString": "tuple(bool,bytes memory)"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "hexValue": "",
                                "id": 1733,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "20430:2:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                },
                                "value": ""
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                    "typeString": "literal_string \"\""
                                  }
                                ],
                                "expression": {
                                  "expression": {
                                    "id": 1728,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "20400:3:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 1729,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "20400:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "id": 1730,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "call",
                                "nodeType": "MemberAccess",
                                "src": "20400:15:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                  "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                                }
                              },
                              "id": 1732,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "names": [
                                "value"
                              ],
                              "nodeType": "FunctionCallOptions",
                              "options": [
                                {
                                  "id": 1731,
                                  "name": "split",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1670,
                                  "src": "20423:5:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "src": "20400:29:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                                "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                              }
                            },
                            "id": 1734,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "20400:33:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                              "typeString": "tuple(bool,bytes memory)"
                            }
                          },
                          "src": "20385:48:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1736,
                        "nodeType": "ExpressionStatement",
                        "src": "20385:48:2"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1738,
                              "name": "sent",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1710,
                              "src": "20455:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4661696c656420746f2073656e64204574686572",
                              "id": 1739,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "20461:22:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
                                "typeString": "literal_string \"Failed to send Ether\""
                              },
                              "value": "Failed to send Ether"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
                                "typeString": "literal_string \"Failed to send Ether\""
                              }
                            ],
                            "id": 1737,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "20447:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1740,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "20447:37:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1741,
                        "nodeType": "ExpressionStatement",
                        "src": "20447:37:2"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "id": 1881,
                    "name": "deleteTaskFlag",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1600,
                    "src": "22204:14:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1944,
                  "nodeType": "IfStatement",
                  "src": "22201:731:2",
                  "trueBody": {
                    "id": 1943,
                    "nodeType": "Block",
                    "src": "22219:713:2",
                    "statements": [
                      {
                        "assignments": [
                          1883
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1883,
                            "mutability": "mutable",
                            "name": "totalTasksSubmitted",
                            "nameLocation": "22241:19:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 1943,
                            "src": "22233:27:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1882,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "22233:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1888,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 1886,
                              "name": "tasksWaitingConfirmation",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 98,
                              "src": "22287:24:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Bytes32Deque_$4671_storage",
                                "typeString": "struct DoubleEndedQueue.Bytes32Deque storage ref"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_Bytes32Deque_$4671_storage",
                                "typeString": "struct DoubleEndedQueue.Bytes32Deque storage ref"
                              }
                            ],
                            "expression": {
                              "id": 1884,
                              "name": "DoubleEndedQueue",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4993,
                              "src": "22263:16:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_DoubleEndedQueue_$4993_$",
                                "typeString": "type(library DoubleEndedQueue)"
                              }
                            },
                            "id": 1885,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4976,
                            "src": "22263:23:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32Deque_$4671_storage_ptr_$returns$_t_uint256_$",
                              "typeString": "function (struct DoubleEndedQueue.Bytes32Deque storage pointer) view returns (uint256)"
                            }
                          },
                          "id": 1887,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "22263:49:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "22233:79:2"
                      },
                      {
                        "body": {
                          "id": 1941,
                          "nodeType": "Block",
                          "src": "22454:468:2",
                          "statements": [
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1905,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "id": 1900,
                                          "name": "tasksWaitingConfirmation",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 98,
                                          "src": "22504:24:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Bytes32Deque_$4671_storage",
                                            "typeString": "struct DoubleEndedQueue.Bytes32Deque storage ref"
                                          }
                                        },
                                        {
                                          "id": 1901,
                                          "name": "i",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1890,
                                          "src": "22530:1:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_struct$_Bytes32Deque_$4671_storage",
                                            "typeString": "struct DoubleEndedQueue.Bytes32Deque storage ref"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "expression": {
                                          "id": 1898,
                                          "name": "DoubleEndedQueue",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 4993,
                                          "src": "22484:16:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_contract$_DoubleEndedQueue_$4993_$",
                                            "typeString": "type(library DoubleEndedQueue)"
                                          }
                                        },
                                        "id": 1899,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "at",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 4930,
                                        "src": "22484:19:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32Deque_$4671_storage_ptr_$_t_uint256_$returns$_t_bytes32_$",
                                          "typeString": "function (struct DoubleEndedQueue.Bytes32Deque storage pointer,uint256) view returns (bytes32)"
                                        }
                                      },
                                      "id": 1902,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "22484:48:2",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      }
                                    ],
                                    "id": 1897,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "22476:7:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint256_$",
                                      "typeString": "type(uint256)"
                                    },
                                    "typeName": {
                                      "id": 1896,
                                      "name": "uint256",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "22476:7:2",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 1903,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "22476:57:2",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "id": 1904,
                                  "name": "_taskID",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1557,
                                  "src": "22535:7:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "22476:66:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 1936,
                              "nodeType": "IfStatement",
                              "src": "22472:404:2",
                              "trueBody": {
                                "id": 1935,
                                "nodeType": "Block",
                                "src": "22543:333:2",
                                "statements": [
                                  {
                                    "assignments": [
                                      1907
                                    ],
                                    "declarations": [
                                      {
                                        "constant": false,
                                        "id": 1907,
                                        "mutability": "mutable",
                                        "name": "prevFront",
                                        "nameLocation": "22573:9:2",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 1935,
                                        "src": "22565:17:2",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes32",
                                          "typeString": "bytes32"
                                        },
                                        "typeName": {
                                          "id": 1906,
                                          "name": "bytes32",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "22565:7:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                          }
                                        },
                                        "visibility": "internal"
                                      }
                                    ],
                                    "id": 1912,
                                    "initialValue": {
                                      "arguments": [
                                        {
                                          "id": 1910,
                                          "name": "tasksWaitingConfirmation",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 98,
                                          "src": "22611:24:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Bytes32Deque_$4671_storage",
                                            "typeString": "struct DoubleEndedQueue.Bytes32Deque storage ref"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_struct$_Bytes32Deque_$4671_storage",
                                            "typeString": "struct DoubleEndedQueue.Bytes32Deque storage ref"
                                          }
                                        ],
                                        "expression": {
                                          "id": 1908,
                                          "name": "DoubleEndedQueue",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 4993,
                                          "src": "22585:16:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_contract$_DoubleEndedQueue_$4993_$",
                                            "typeString": "type(library DoubleEndedQueue)"
                                          }
                                        },
                                        "id": 1909,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "popFront",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 4829,
                                        "src": "22585:25:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Bytes32Deque_$4671_storage_ptr_$returns$_t_bytes32_$",
                                          "typeString": "function (struct DoubleEndedQueue.Bytes32Deque storage pointer) returns (bytes32)"
                                        }
                                      },
                                      "id": 1911,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "22585:51:2",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "22565:71:2"
                                  },
                                  {
                                    "condition": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 1915,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 1913,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1890,
                                        "src": "22661:1:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "!=",
                                      "rightExpression": {
                                        "hexValue": "30",
                                        "id": 1914,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "22664:1:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      },
                                      "src": "22661:4:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "id": 1934,
                                    "nodeType": "IfStatement",
                                    "src": "22658:200:2",
                                    "trueBody": {
                                      "id": 1933,
                                      "nodeType": "Block",
                                      "src": "22666:192:2",
                                      "statements": [
                                        {
                                          "expression": {
                                            "id": 1931,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftHandSide": {
                                              "baseExpression": {
                                                "expression": {
                                                  "id": 1916,
                                                  "name": "tasksWaitingConfirmation",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 98,
                                                  "src": "22743:24:2",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_Bytes32Deque_$4671_storage",
                                                    "typeString": "struct DoubleEndedQueue.Bytes32Deque storage ref"
                                                  }
                                                },
                                                "id": 1928,
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "_data",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 4670,
                                                "src": "22743:30:2",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_mapping$_t_int128_$_t_bytes32_$",
                                                  "typeString": "mapping(int128 => bytes32)"
                                                }
                                              },
                                              "id": 1929,
                                              "indexExpression": {
                                                "arguments": [
                                                  {
                                                    "commonType": {
                                                      "typeIdentifier": "t_int256",
                                                      "typeString": "int256"
                                                    },
                                                    "id": 1926,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "leftExpression": {
                                                      "expression": {
                                                        "id": 1920,
                                                        "name": "tasksWaitingConfirmation",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 98,
                                                        "src": "22781:24:2",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_struct$_Bytes32Deque_$4671_storage",
                                                          "typeString": "struct DoubleEndedQueue.Bytes32Deque storage ref"
                                                        }
                                                      },
                                                      "id": 1921,
                                                      "isConstant": false,
                                                      "isLValue": true,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "memberName": "_begin",
                                                      "nodeType": "MemberAccess",
                                                      "referencedDeclaration": 4664,
                                                      "src": "22781:31:2",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_int128",
                                                        "typeString": "int128"
                                                      }
                                                    },
                                                    "nodeType": "BinaryOperation",
                                                    "operator": "+",
                                                    "rightExpression": {
                                                      "arguments": [
                                                        {
                                                          "id": 1924,
                                                          "name": "i",
                                                          "nodeType": "Identifier",
                                                          "overloadedDeclarations": [],
                                                          "referencedDeclaration": 1890,
                                                          "src": "22819:1:2",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                          }
                                                        }
                                                      ],
                                                      "expression": {
                                                        "argumentTypes": [
                                                          {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                          }
                                                        ],
                                                        "id": 1923,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "lValueRequested": false,
                                                        "nodeType": "ElementaryTypeNameExpression",
                                                        "src": "22815:3:2",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_type$_t_int256_$",
                                                          "typeString": "type(int256)"
                                                        },
                                                        "typeName": {
                                                          "id": 1922,
                                                          "name": "int",
                                                          "nodeType": "ElementaryTypeName",
                                                          "src": "22815:3:2",
                                                          "typeDescriptions": {}
                                                        }
                                                      },
                                                      "id": 1925,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": false,
                                                      "kind": "typeConversion",
                                                      "lValueRequested": false,
                                                      "names": [],
                                                      "nodeType": "FunctionCall",
                                                      "src": "22815:6:2",
                                                      "tryCall": false,
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_int256",
                                                        "typeString": "int256"
                                                      }
                                                    },
                                                    "src": "22781:40:2",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_int256",
                                                      "typeString": "int256"
                                                    }
                                                  }
                                                ],
                                                "expression": {
                                                  "argumentTypes": [
                                                    {
                                                      "typeIdentifier": "t_int256",
                                                      "typeString": "int256"
                                                    }
                                                  ],
                                                  "id": 1919,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "lValueRequested": false,
                                                  "nodeType": "ElementaryTypeNameExpression",
                                                  "src": "22774:6:2",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_int128_$",
                                                    "typeString": "type(int128)"
                                                  },
                                                  "typeName": {
                                                    "id": 1918,
                                                    "name": "int128",
                                                    "nodeType": "ElementaryTypeName",
                                                    "src": "22774:6:2",
                                                    "typeDescriptions": {}
                                                  }
                                                },
                                                "id": 1927,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "typeConversion",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "22774:48:2",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_int128",
                                                  "typeString": "int128"
                                                }
                                              },
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": true,
                                              "nodeType": "IndexAccess",
                                              "src": "22743:80:2",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_bytes32",
                                                "typeString": "bytes32"
                                              }
                                            },
                                            "nodeType": "Assignment",
                                            "operator": "=",
                                            "rightHandSide": {
                                              "id": 1930,
                                              "name": "prevFront",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1907,
                                              "src": "22826:9:2",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_bytes32",
                                                "typeString": "bytes32"
                                              }
                                            },
                                            "src": "22743:92:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bytes32",
                                              "typeString": "bytes32"
                                            }
                                          },
                                          "id": 1932,
                                          "nodeType": "ExpressionStatement",
                                          "src": "22743:92:2"
                                        }
                                      ]
                                    }
                                  }
                                ]
                              }
                            },
                            {
                              "id": 1940,
                              "nodeType": "UncheckedBlock",
                              "src": "22893:15:2",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 1938,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "UnaryOperation",
                                    "operator": "++",
                                    "prefix": true,
                                    "src": "22903:3:2",
                                    "subExpression": {
                                      "id": 1937,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1890,
                                      "src": "22905:1:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 1939,
                                  "nodeType": "ExpressionStatement",
                                  "src": "22903:3:2"
                                }
                              ]
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1895,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1893,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1890,
                            "src": "22428:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "id": 1894,
                            "name": "totalTasksSubmitted",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1883,
                            "src": "22432:19:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "22428:23:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1942,
                        "initializationExpression": {
                          "assignments": [
                            1890
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 1890,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "22422:1:2",
                              "nodeType": "VariableDeclaration",
                              "scope": 1942,
                              "src": "22414:9:2",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 1889,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "22414:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 1892,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 1891,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "22425:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "22414:12:2"
                        },
                        "nodeType": "ForStatement",
                        "src": "22410:512:2"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "f18c51d3",
            "id": 1946,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "submitVerification",
            "nameLocation": "18740:18:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1561,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1555,
                  "mutability": "mutable",
                  "name": "_wizId",
                  "nameLocation": "18767:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1946,
                  "src": "18759:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1554,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "18759:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1557,
                  "mutability": "mutable",
                  "name": "_taskID",
                  "nameLocation": "18783:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1946,
                  "src": "18775:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1556,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "18775:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1560,
                  "mutability": "mutable",
                  "name": "_fields",
                  "nameLocation": "18809:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1946,
                  "src": "18792:24:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1558,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "18792:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 1559,
                    "nodeType": "ArrayTypeName",
                    "src": "18792:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18758:59:2"
            },
            "returnParameters": {
              "id": 1562,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "18827:0:2"
            },
            "scope": 1993,
            "src": "18731:4208:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1954,
              "nodeType": "Block",
              "src": "23048:58:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "66616c7365",
                        "id": 1949,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "23066:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "hexValue": "4d7573742062652061646d696e",
                        "id": 1950,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "23072:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bd96b1ed5c7b326773a6be52f6fd399ff9263aeb45597abb2af8de7934df67c1",
                          "typeString": "literal_string \"Must be admin\""
                        },
                        "value": "Must be admin"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bd96b1ed5c7b326773a6be52f6fd399ff9263aeb45597abb2af8de7934df67c1",
                          "typeString": "literal_string \"Must be admin\""
                        }
                      ],
                      "id": 1948,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "23058:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1951,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23058:30:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1952,
                  "nodeType": "ExpressionStatement",
                  "src": "23058:30:2"
                },
                {
                  "id": 1953,
                  "nodeType": "PlaceholderStatement",
                  "src": "23098:1:2"
                }
              ]
            },
            "id": 1955,
            "name": "onlyAdmin",
            "nameLocation": "23036:9:2",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1947,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "23045:2:2"
            },
            "src": "23027:79:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1963,
              "nodeType": "Block",
              "src": "23136:58:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "66616c7365",
                        "id": 1958,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "23154:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "hexValue": "4d7573742062652061646d696e",
                        "id": 1959,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "23160:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bd96b1ed5c7b326773a6be52f6fd399ff9263aeb45597abb2af8de7934df67c1",
                          "typeString": "literal_string \"Must be admin\""
                        },
                        "value": "Must be admin"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bd96b1ed5c7b326773a6be52f6fd399ff9263aeb45597abb2af8de7934df67c1",
                          "typeString": "literal_string \"Must be admin\""
                        }
                      ],
                      "id": 1957,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "23146:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1960,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23146:30:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1961,
                  "nodeType": "ExpressionStatement",
                  "src": "23146:30:2"
                },
                {
                  "id": 1962,
                  "nodeType": "PlaceholderStatement",
                  "src": "23186:1:2"
                }
              ]
            },
            "id": 1964,
            "name": "onlyNFTOwner",
            "nameLocation": "23121:12:2",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1956,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "23133:2:2"
            },
            "src": "23112:82:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1972,
              "nodeType": "Block",
              "src": "23222:59:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "66616c7365",
                        "id": 1967,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "23240:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "hexValue": "4d757374206265206c6573736565",
                        "id": 1968,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "23246:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_37e3c5f829f0710bee63aab7e0e0e4e41123855652abc1459d4423f866aba493",
                          "typeString": "literal_string \"Must be lessee\""
                        },
                        "value": "Must be lessee"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_37e3c5f829f0710bee63aab7e0e0e4e41123855652abc1459d4423f866aba493",
                          "typeString": "literal_string \"Must be lessee\""
                        }
                      ],
                      "id": 1966,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "23232:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1969,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23232:31:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1970,
                  "nodeType": "ExpressionStatement",
                  "src": "23232:31:2"
                },
                {
                  "id": 1971,
                  "nodeType": "PlaceholderStatement",
                  "src": "23273:1:2"
                }
              ]
            },
            "id": 1973,
            "name": "onlyLessee",
            "nameLocation": "23209:10:2",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1965,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "23219:2:2"
            },
            "src": "23200:81:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1981,
              "nodeType": "Block",
              "src": "23309:81:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "66616c7365",
                        "id": 1976,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "23349:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "hexValue": "4d757374206265206d656d626572",
                        "id": 1977,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "23355:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a04ddf7e4f54e61b704ffb185299c2b9de8d6603e816ee24666c5099bc530a98",
                          "typeString": "literal_string \"Must be member\""
                        },
                        "value": "Must be member"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a04ddf7e4f54e61b704ffb185299c2b9de8d6603e816ee24666c5099bc530a98",
                          "typeString": "literal_string \"Must be member\""
                        }
                      ],
                      "id": 1975,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "23341:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1978,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23341:31:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1979,
                  "nodeType": "ExpressionStatement",
                  "src": "23341:31:2"
                },
                {
                  "id": 1980,
                  "nodeType": "PlaceholderStatement",
                  "src": "23382:1:2"
                }
              ]
            },
            "id": 1982,
            "name": "onlyMember",
            "nameLocation": "23296:10:2",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1974,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "23306:2:2"
            },
            "src": "23287:103:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1991,
              "nodeType": "Block",
              "src": "23440:202:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 1985,
                          "name": "isCallerOnBoard",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 223,
                          "src": "23513:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                            "typeString": "function () view returns (bool)"
                          }
                        },
                        "id": 1986,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "23513:17:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d757374206265206f6e2074686520626f617264",
                        "id": 1987,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "23532:22:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ff1967d201ff7c8fd38bf0f0ae23f762e566218fb9ca1f12ab82fc2c11572d1c",
                          "typeString": "literal_string \"Must be on the board\""
                        },
                        "value": "Must be on the board"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ff1967d201ff7c8fd38bf0f0ae23f762e566218fb9ca1f12ab82fc2c11572d1c",
                          "typeString": "literal_string \"Must be on the board\""
                        }
                      ],
                      "id": 1984,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "23505:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1988,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23505:50:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1989,
                  "nodeType": "ExpressionStatement",
                  "src": "23505:50:2"
                },
                {
                  "id": 1990,
                  "nodeType": "PlaceholderStatement",
                  "src": "23634:1:2"
                }
              ]
            },
            "id": 1992,
            "name": "onlyBoard",
            "nameLocation": "23428:9:2",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1983,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "23437:2:2"
            },
            "src": "23419:223:2",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 1994,
        "src": "771:22878:2",
        "usedErrors": [
          4659,
          4662
        ]
      }
    ],
    "src": "0:23649:2"
  },
  "bytecode": "6080604052610258600c5562015180600d556003600e553480156200002357600080fd5b5060405162004488380380620044888339810160408190526200004691620000f7565b6001600055620000563362000088565b600280546001600160a01b039384166001600160a01b031991821617909155600380549290931691161790556200012f565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b80516001600160a01b0381168114620000f257600080fd5b919050565b600080604083850312156200010b57600080fd5b6200011683620000da565b91506200012660208401620000da565b90509250929050565b614349806200013f6000396000f3fe60806040526004361061016a5760003560e01c80638d977672116100d1578063d374a2171161008a578063f2fde38b11610064578063f2fde38b146104c2578063f4739bd9146104e2578063f713b7ed14610502578063ff9810991461052257600080fd5b8063d374a21714610442578063e95d234714610462578063f18c51d3146104a257600080fd5b80638d977672146103545780638da5cb5b1461038a57806390b293d8146103b2578063976217cd146103c8578063b2bad544146103f5578063beca3a161461042257600080fd5b80636215597b116101235780636215597b1461027957806369d03738146102bf578063715018a6146102df57806372e185ce146102f4578063826b8ebd146103145780638a6655d61461033457600080fd5b8063013cf08b1461017657806309265ce6146101b057806310190ef1146101d25780633b47fed2146102065780634b50f16a1461022b57806361f9e9a81461025957600080fd5b3661017157005b600080fd5b34801561018257600080fd5b50610196610191366004613417565b61054f565b6040516101a7959493929190613488565b60405180910390f35b3480156101bc57600080fd5b506101d06101cb366004613591565b61061b565b005b3480156101de57600080fd5b506101f26101ed366004613417565b610761565b6040516101a79897969594939291906135f0565b34801561021257600080fd5b5061021b61086b565b60405190151581526020016101a7565b34801561023757600080fd5b5061024b61024636600461366f565b610979565b6040516101a792919061375b565b34801561026557600080fd5b506101d0610274366004613863565b610e0d565b34801561028557600080fd5b506102b1610294366004613900565b600460209081526000928352604080842090915290825290205481565b6040519081526020016101a7565b3480156102cb57600080fd5b506101d06102da366004613937565b610e77565b3480156102eb57600080fd5b506101d0610ec3565b34801561030057600080fd5b506101d061030f3660046139c3565b610ef9565b34801561032057600080fd5b506102b161032f366004613417565b61136f565b34801561034057600080fd5b506101d061034f366004613a19565b611592565b34801561036057600080fd5b5061037461036f366004613417565b6115cb565b6040516101a79a99989796959493929190613a45565b34801561039657600080fd5b506001546040516001600160a01b0390911681526020016101a7565b3480156103be57600080fd5b506102b1600b5481565b3480156103d457600080fd5b506103e86103e3366004613417565b6116cd565b6040516101a79190613ac6565b34801561040157600080fd5b5061041561041036600461366f565b61180f565b6040516101a79190613ad9565b34801561042e57600080fd5b506101d061043d366004613b3b565b611bd5565b34801561044e57600080fd5b506101d061045d366004613417565b611d35565b34801561046e57600080fd5b5060065461048890600f81810b91600160801b9004900b82565b60408051600f93840b81529190920b6020820152016101a7565b3480156104ae57600080fd5b506101d06104bd366004613b8b565b61206c565b3480156104ce57600080fd5b506101d06104dd366004613937565b612a89565b3480156104ee57600080fd5b5061021b6104fd366004613417565b612b24565b34801561050e57600080fd5b506101d061051d366004613bda565b612cf4565b34801561052e57600080fd5b5061054261053d366004613417565b612e91565b6040516101a79190613c16565b60086020526000908152604090208054819061056a90613c5e565b80601f016020809104026020016040519081016040528092919081815260200182805461059690613c5e565b80156105e35780601f106105b8576101008083540402835291602001916105e3565b820191906000526020600020905b8154815290600101906020018083116105c657829003601f168201915b505050506001830154600390930154919261ffff169164ffffffffff8082169250650100000000008204811691600160501b90041685565b60008260008151811061063057610630613c98565b602002602001015160405160200161064a91815260200190565b604051602081830303815290604052905081156106d65760005b83518110156106d45783818151811061067f5761067f613c98565b602002602001015160405160200161069991815260200190565b604051602081830303815290604052805190602001208482815181106106c1576106c1613c98565b6020908102919091010152600101610664565b505b6000836040516020016106e99190613cae565b6040516020818303038152906040528051906020012090507f637ce8d069e382e64ef71cf191623b88c7e307ce252e908e7f2babbad0cb81ea818683148660008151811061073957610739613c98565b6020026020010151856040516107529493929190613ce4565b60405180910390a15050505050565b6005818154811061077157600080fd5b906000526020600020906003020160009150905080600101805461079490613c5e565b80601f01602080910402602001604051908101604052809291908181526020018280546107c090613c5e565b801561080d5780601f106107e25761010080835404028352916020019161080d565b820191906000526020600020905b8154815290600101906020018083116107f057829003601f168201915b5050506002909301549192505060ff8082169164ffffffffff610100820481169266010000000000008304169162ffffff600160381b82041691600160501b8204811691600160781b81049091169061ffff600160a01b9091041688565b600060015b600e548111610971576002546003546040516301038d3760e61b81526004810184905233926001600160a01b0390811692636352211e929116906340e34dc090602401602060405180830381865afa1580156108d0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108f49190613d15565b6040518263ffffffff1660e01b815260040161091291815260200190565b602060405180830381865afa15801561092f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109539190613d2e565b6001600160a01b03160361096957600191505090565b600101610870565b506000905090565b6060806000610997600654600f81810b600160801b909204900b0390565b90506109a1613379565b600080805b84811015610b29576109b9600682612fbb565b6000818152600a6020526040908190208151610140810190925280549295509091829082906109e790613c5e565b80601f0160208091040260200160405190810160405280929190818152602001828054610a1390613c5e565b8015610a605780601f10610a3557610100808354040283529160200191610a60565b820191906000526020600020905b815481529060010190602001808311610a4357829003601f168201915b5050509183525050600182015464ffffffffff9081166020830152600283015460408301526003830154606083015260049092015460ff8116608083015261010080820462ffffff1660a0840152600160201b82046001600160501b031660c0840152600160701b820461ffff90811660e0850152600160801b83041690830152600160901b9004821661012091820152820151919550429116118015610b1557508764ffffffffff168460e0015161ffff16145b15610b21578160010191505b6001016109a6565b5080600003610b9657604080516001808252818301909252600091816020015b610b51613379565b815260200190600190039081610b49575050604080516001808252818301909252919250600091906020808301908036833750939b919a509098505050505050505050565b600080826001600160401b03811115610bb157610bb16134cc565b604051908082528060200260200182016040528015610bea57816020015b610bd7613379565b815260200190600190039081610bcf5790505b5090506000836001600160401b03811115610c0757610c076134cc565b604051908082528060200260200182016040528015610c30578160200160208202803683370190505b50905060005b87811015610dfd57610c49600682612fbb565b6000818152600a602052604090819020815161014081019092528054929850909182908290610c7790613c5e565b80601f0160208091040260200160405190810160405280929190818152602001828054610ca390613c5e565b8015610cf05780601f10610cc557610100808354040283529160200191610cf0565b820191906000526020600020905b815481529060010190602001808311610cd357829003601f168201915b5050509183525050600182015464ffffffffff9081166020830152600283015460408301526003830154606083015260049092015460ff8116608083015261010080820462ffffff1660a0840152600160201b82046001600160501b031660c0840152600160701b820461ffff90811660e0850152600160801b83041690830152600160901b9004821661012091820152820151919850429116118015610da557508a64ffffffffff168760e0015161ffff16145b15610df55786838581518110610dbd57610dbd613c98565b602002602001018190525085828581518110610ddb57610ddb613c98565b602002602001018181525050836001019350848411610dfd575b600101610c36565b5090999098509650505050505050565b610e1561086b565b610e5d5760405162461bcd60e51b8152602060048201526014602482015273135d5cdd081899481bdb881d1a1948189bd85c9960621b60448201526064015b60405180910390fd5b610e6e87876000888888888861302c565b50505050505050565b6001546001600160a01b03163314610ea15760405162461bcd60e51b8152600401610e5490613d4b565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b6001546001600160a01b03163314610eed5760405162461bcd60e51b8152600401610e5490613d4b565b610ef760006131ab565b565b60005b6005548110156113695783604051602001610f179190613d80565b6040516020818303038152906040528051906020012060058281548110610f4057610f40613c98565b9060005260206000209060030201600101604051602001610f619190613e10565b6040516020818303038152906040528051906020012003611361574260058281548110610f9057610f90613c98565b6000918252602090912060039091020160020154600160501b900464ffffffffff1611801590610ff4575060058181548110610fce57610fce613c98565b6000918252602090912060039091020160020154600160781b900464ffffffffff164211155b6110365760405162461bcd60e51b815260206004820152601360248201527213dd5d1cda5919481d1a5b59481c195c9a5bd9606a1b6044820152606401610e54565b60006040518061014001604052808681526020018464ffffffffff1681526020018581526020016000801b81526020016005848154811061107957611079613c98565b906000526020600020906003020160020160069054906101000a900460ff1660ff168152602001600584815481106110b3576110b3613c98565b6000918252602080832060039290920290910160020154600160381b900462ffffff1683528281018290526040808401839052606084018390526080909301829052600b5460068054600160801b90819004600f0b8086526007855286862084905582546001600160801b039081166001909201169091021790558252600a9052208151919250829181906111489082613e72565b5060208201516001828101805464ffffffffff191664ffffffffff938416179055604084015160028401556060840151600384015560808401516004909301805460a086015160c087015160e0880151610100808a0151610120909a015160ff90991663ffffffff199095169490941762ffffff90931690930291909117640100000000600160801b031916600160201b6001600160501b039092169190910261ffff60701b191617600160701b61ffff928316021766ffffffffffffff60801b1916600160801b919096160264ffffffffff60901b191694909417600160901b939092169290920217909155600b8054600090611247908490613f47565b9091555061125a90504262015180613f47565b6005838154811061126d5761126d613c98565b6000918252602080832064ffffffffff881684526003909202909101905260409020556005805460019190849081106112a8576112a8613c98565b906000526020600020906003020160020160149054906101000a900461ffff166112d29190613f5f565b600583815481106112e5576112e5613c98565b906000526020600020906003020160020160146101000a81548161ffff021916908361ffff1602179055507fbcc1ea15519f3acfb49e91de851e553b2c024b9ab85cee8ffd8fe4e4e0a7876d836001600b546113419190613f82565b87426040516113539493929190613f99565b60405180910390a150611369565b600101610efc565b50505050565b600060095482106113b55760405162461bcd60e51b815260206004820152601060248201526f1b9bc81cdd58da081c1c9bdc1bdcd85b60821b6044820152606401610e54565b600082815260086020526040902060030154600160501b900464ffffffffff1642116114195760405162461bcd60e51b8152602060048201526013602482015272766f74696e67207374696c6c2061637469766560681b6044820152606401610e54565b6000806000805b60008681526008602052604090206001015461ffff16811015611547578260086000888152602001908152602001600020600201826008811061146557611465613c98565b601091828204019190066002029054906101000a900461ffff1661ffff1611156114e5576008600087815260200190815260200160002060020181600881106114b0576114b0613c98565b601091828204019190066002029054906101000a900461ffff1661ffff169250809350816001036114e057600091505b611535565b8260086000888152602001908152602001600020600201826008811061150d5761150d613c98565b601091828204019190066002029054906101000a900461ffff1661ffff160361153557600191505b8061153f81613fd0565b915050611420565b5080156115895760405162461bcd60e51b815260206004820152601060248201526f3a3432b932903bb0b99030903a34b29760811b6044820152606401610e54565b50909392505050565b60405162461bcd60e51b815260206004820152600e60248201526d26bab9ba1031329036b2b6b132b960911b6044820152606401610e54565b600a602052600090815260409020805481906115e690613c5e565b80601f016020809104026020016040519081016040528092919081815260200182805461161290613c5e565b801561165f5780601f106116345761010080835404028352916020019161165f565b820191906000526020600020905b81548152906001019060200180831161164257829003601f168201915b505050600184015460028501546003860154600490960154949564ffffffffff92831695919450925060ff81169162ffffff610100830416916001600160501b03600160201b8204169161ffff600160701b8304811692600160801b810490911691600160901b909104168a565b6116d5613379565b6000828152600a602052604090819020815161014081019092528054829082906116fe90613c5e565b80601f016020809104026020016040519081016040528092919081815260200182805461172a90613c5e565b80156117775780601f1061174c57610100808354040283529160200191611777565b820191906000526020600020905b81548152906001019060200180831161175a57829003601f168201915b5050509183525050600182015464ffffffffff9081166020830152600283015460408301526003830154606083015260049092015460ff8116608083015261010080820462ffffff1660a0840152600160201b82046001600160501b031660c0840152600160701b820461ffff90811660e0850152600160801b83041690830152600160901b90049091166101209091015292915050565b60606000805b60055481101561192757426005828154811061183357611833613c98565b6000918252602080832064ffffffffff891684526003909202909101905260409020541080156118975750426005828154811061187257611872613c98565b6000918252602090912060039091020160020154600160501b900464ffffffffff1611155b80156118d6575042600582815481106118b2576118b2613c98565b6000918252602090912060039091020160020154600160781b900464ffffffffff16115b801561191357506001600582815481106118f2576118f2613c98565b6000918252602090912060039091020160020154600160a01b900461ffff16115b1561191f578160010191505b600101611815565b508060000361199357604080516001808252818301909252600091816020015b6060815260200190600190039081611947579050509050604051806020016040528060008152508160008151811061198157611981613c98565b60209081029190910101529392505050565b6000816001600160401b038111156119ad576119ad6134cc565b6040519080825280602002602001820160405280156119e057816020015b60608152602001906001900390816119cb5790505b5090506000805b600554811015611bcb574260058281548110611a0557611a05613c98565b6000918252602080832064ffffffffff8b168452600390920290910190526040902054108015611a6957504260058281548110611a4457611a44613c98565b6000918252602090912060039091020160020154600160501b900464ffffffffff1611155b8015611aa857504260058281548110611a8457611a84613c98565b6000918252602090912060039091020160020154600160781b900464ffffffffff16115b8015611ae55750600160058281548110611ac457611ac4613c98565b6000918252602090912060039091020160020154600160a01b900461ffff16115b15611bc35760058181548110611afd57611afd613c98565b90600052602060002090600302016001018054611b1990613c5e565b80601f0160208091040260200160405190810160405280929190818152602001828054611b4590613c5e565b8015611b925780601f10611b6757610100808354040283529160200191611b92565b820191906000526020600020905b815481529060010190602001808311611b7557829003601f168201915b5050505050838381518110611ba957611ba9613c98565b602002602001018190525081600101915083821015611bcb575b6001016119e7565b5090949350505050565b611bdd61086b565b611c205760405162461bcd60e51b8152602060048201526014602482015273135d5cdd081899481bdb881d1a1948189bd85c9960621b6044820152606401610e54565b60018561ffff16118015611c3957506101018561ffff16105b611c855760405162461bcd60e51b815260206004820152601960248201527f696e76616c6964206e756d626572206f66206f7074696f6e73000000000000006044820152606401610e54565b600160096000828254611c989190613f47565b909155505060095460009081526008602052604090206003810180546effffffffffffffffffff000000000019166501000000000064ffffffffff8781169190910264ffffffffff60501b191691909117600160501b9186169190910217905560018101805461ffff191661ffff881617905580611d17888a83613fe9565b50611d2b888860095460008989898961302c565b5050505050505050565b6000611d50600654600f81810b600160801b909204900b0390565b9050611d5a613379565b6000805b8381101561206557611d71600682612fbb565b6000818152600a602052604090819020815161014081019092528054929450909182908290611d9f90613c5e565b80601f0160208091040260200160405190810160405280929190818152602001828054611dcb90613c5e565b8015611e185780601f10611ded57610100808354040283529160200191611e18565b820191906000526020600020905b815481529060010190602001808311611dfb57829003601f168201915b5050509183525050600182015464ffffffffff9081166020830152600283015460408301526003830154606083015260049092015460ff8116608083015261010080820462ffffff1660a0840152600160201b82046001600160501b031660c0840152600160701b820461ffff90811660e0850152600160801b83041690830152600160901b9004821661012091820152820151919450429116108015611eca575084836020015164ffffffffff1614155b8015611edf57508483610100015161ffff1614155b1561205d5761ffff851660e0840152600c54611efb9042613f47565b64ffffffffff166101208401526000828152600a6020526040902083518491908190611f279082613e72565b5060208281015160018301805464ffffffffff191664ffffffffff92831617905560408085015160028501556060850151600385015560808501516004909401805460a087015160c088015160e0890151610100808b0151610120909b015160ff909a1663ffffffff199095169490941762ffffff90931690930291909117640100000000600160801b031916600160201b6001600160501b039092169190910261ffff60701b191617600160701b61ffff928316021766ffffffffffffff60801b1916600160801b919097160264ffffffffff60901b191695909517600160901b9490921693909302179092556000848152600a9092529081902090517ff20a22b1aa6d8ba4bf99c845fb1f02f4879ba83155bde0f82f49cb58675df2689161205491889186916140a8565b60405180910390a15b600101611d5e565b5050505050565b6002546040516331a9108f60e11b81526004810185905233916001600160a01b031690636352211e90602401602060405180830381865afa1580156120b5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120d99190613d2e565b6001600160a01b031614801561210a57506000828152600a6020526040902060040154600160701b900461ffff1683145b6121565760405162461bcd60e51b815260206004820181905260248201527f4d757374206265206f776e6572206f662061737369676e65642077697a6172646044820152606401610e54565b600081511161216457600080fd5b6000828152600a60205260408082208151610140810190925280548290829061218c90613c5e565b80601f01602080910402602001604051908101604052809291908181526020018280546121b890613c5e565b80156122055780601f106121da57610100808354040283529160200191612205565b820191906000526020600020905b8154815290600101906020018083116121e857829003601f168201915b505050918352505060018281015464ffffffffff9081166020840152600284015460408401526003840154606084015260049093015460ff8116608084015261010080820462ffffff1660a0850152600160201b82046001600160501b031660c0850152600160701b820461ffff90811660e0860152600160801b8304811682860152600160901b909204909416610120909301929092529183015192935060009216156123225760005b8451811015612320578481815181106122cb576122cb613c98565b60200260200101516040516020016122e591815260200190565b6040516020818303038152906040528051906020012085828151811061230d5761230d613c98565b60209081029190910101526001016122b0565b505b6000846040516020016123359190613cae565b604051602081830303815290604052805190602001209050600081856040015114612361576000612364565b60015b602086810151604080518c815264ffffffffff909216928201929092529081018990526060810184905260ff9190911660018114608083015291507fe3f0e138f100deaf328ba1def71c39dade8cd971ba0074d935ee648e54532fae9060a00160405180910390a18060010361268757600060028660c001516123e79190614173565b60025460e08801516040516331a9108f60e11b815261ffff90911660048201526001600160501b039290921692506000916001600160a01b0390911690636352211e90602401602060405180830381865afa15801561244a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061246e9190613d2e565b600254602089015160a08a0151604051638ad4d6a560e01b815264ffffffffff909216600483015262ffffff1660248201529192506001600160a01b031690638ad4d6a590604401600060405180830381600087803b1580156124d057600080fd5b505af11580156124e4573d6000803e3d6000fd5b505060025460e08a0151600d54604051638ad4d6a560e01b815261ffff909216600483015260248201526001600160a01b039091169250638ad4d6a591506044015b600060405180830381600087803b15801561254057600080fd5b505af1158015612554573d6000803e3d6000fd5b50505060008a8152600a60205260408120915061257182826133cd565b5060018101805464ffffffffff1916905560006002820181905560038201819055600490910180546001600160b81b031916905560405181906001600160a01b0384169085908381818185875af1925050503d80600081146125ef576040519150601f19603f3d011682016040523d82523d6000602084013e6125f4565b606091505b5091509150816126165760405162461bcd60e51b8152600401610e54906141a7565b60405133908590600081818185875af1925050503d8060008114612656576040519150601f19603f3d011682016040523d82523d6000602084013e61265b565b606091505b5090925090508161267e5760405162461bcd60e51b8152600401610e54906141a7565b505050506129f2565b84610100015161ffff166000036127b95761ffff8816610100860152606085018290526000878152600a60205260409020855186919081906126c99082613e72565b50602082015160018201805464ffffffffff191664ffffffffff928316179055604083015160028301556060830151600383015560808301516004909201805460a085015160c086015160e0870151610100808901516101209099015160ff90981663ffffffff199095169490941762ffffff90931690930291909117640100000000600160801b031916600160201b6001600160501b039092169190910261ffff60701b191617600160701b61ffff928316021766ffffffffffffff60801b1916600160801b919095160264ffffffffff60901b191693909317600160901b9290911691909102179055600092505b8185606001510361290c57600060028660c001516127d79190614173565b6002546101008801516040516331a9108f60e11b815261ffff90911660048201526001600160501b039290921692506000916001600160a01b0390911690636352211e90602401602060405180830381865afa15801561283b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061285f9190613d2e565b600254610100890151600d54604051638ad4d6a560e01b815261ffff909216600483015260248201529192506001600160a01b031690638ad4d6a590604401600060405180830381600087803b1580156128b857600080fd5b505af11580156128cc573d6000803e3d6000fd5b5050600254600d54604051638ad4d6a560e01b8152600481018f905260248101919091526001600160a01b039091169250638ad4d6a59150604401612526565b60c08501516000888152600a602052604081206001600160501b03909216919061293682826133cd565b5060018101805464ffffffffff1916905560006002820181905560038201819055600490910180546001600160b81b03191690558061297d6001546001600160a01b031690565b6001600160a01b03168360405160006040518083038185875af1925050503d80600081146129c7576040519150601f19603f3d011682016040523d82523d6000602084013e6129cc565b606091505b5091509150816129ee5760405162461bcd60e51b8152600401610e54906141a7565b5050505b8215611d2b576000612a13600654600f81810b600160801b909204900b0390565b905060005b81811015612a7d5788612a2c600683612fbb565b03612a75576000612a3d60066131fd565b90508115612a73576006548190600790600090612a5e908690600f0b6141d5565b600f0b81526020810191909152604001600020555b505b600101612a18565b50505050505050505050565b6001546001600160a01b03163314612ab35760405162461bcd60e51b8152600401610e5490613d4b565b6001600160a01b038116612b185760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610e54565b612b21816131ab565b50565b600080612b40600654600f81810b600160801b909204900b0390565b9050612b4a613379565b60005b82811015612ce957600a6000612b64600684612fbb565b60001c815260200190815260200160002060405180610140016040529081600082018054612b9190613c5e565b80601f0160208091040260200160405190810160405280929190818152602001828054612bbd90613c5e565b8015612c0a5780601f10612bdf57610100808354040283529160200191612c0a565b820191906000526020600020905b815481529060010190602001808311612bed57829003601f168201915b5050509183525050600182015464ffffffffff9081166020830152600283015460408301526003830154606083015260049092015460ff8116608083015261010080820462ffffff1660a0840152600160201b82046001600160501b031660c0840152600160701b820461ffff90811660e0850152600160801b83041690830152600160901b9004821661012091820152820151919350429116108015612cbc575084826020015164ffffffffff1614155b8015612cd157508482610100015161ffff1614155b15612ce157506001949350505050565b600101612b4d565b506000949350505050565b60005b600554811015612e8d5781604051602001612d129190614216565b6040516020818303038152906040528051906020012060058281548110612d3b57612d3b613c98565b9060005260206000209060030201600101604051602001612d5c9190614232565b6040516020818303038152906040528051906020012003612e8557600060058281548110612d8c57612d8c613c98565b90600052602060002090600302019050600060056001600580549050612db29190613f82565b81548110612dc257612dc2613c98565b9060005260206000209060030201905080915060056001600580549050612de99190613f82565b81548110612df957612df9613c98565b90600052602060002090600302016000600182016000612e1991906133cd565b5060020180546001600160b01b031916905560058054612e3b90600190613f82565b81548110612e4b57612e4b613c98565b90600052602060002090600302016000600182016000612e6b91906133cd565b5060020180546001600160b01b031916905550612e8d9050565b600101612cf7565b5050565b60606009548210612ed75760405162461bcd60e51b815260206004820152601060248201526f1b9bc81cdd58da081c1c9bdc1bdcd85b60821b6044820152606401610e54565b60008281526008602052604081206001015461ffff166001600160401b03811115612f0457612f046134cc565b604051908082528060200260200182016040528015612f2d578160200160208202803683370190505b50905060005b8151811015612fb457600860008581526020019081526020016000206002018160088110612f6357612f63613c98565b601091828204019190066002029054906101000a900461ffff16828281518110612f8f57612f8f613c98565b61ffff9092166020928302919091019091015280612fac81613fd0565b915050612f33565b5092915050565b600080612fde612fca8461327c565b8554612fd99190600f0b6141d5565b6132ea565b8454909150600160801b9004600f90810b9082900b1261301157604051632d0483c560e21b815260040160405180910390fd5b600f0b60009081526001939093016020525050604090205490565b600580546001810180835560008381529192908390811061304f5761304f613c98565b600091825260209091206003909102019050600181016130708a8c83613fe9565b5060008160020160006101000a81548160ff021916908315150217905550878160020160016101000a81548164ffffffffff021916908364ffffffffff160217905550868160020160066101000a81548160ff021916908360ff160217905550858160020160076101000a81548162ffffff021916908362ffffff1602179055508481600201600a6101000a81548164ffffffffff021916908364ffffffffff1602179055508381600201600f6101000a81548164ffffffffff021916908364ffffffffff160217905550828160020160146101000a81548161ffff021916908361ffff1602179055507f2810025950962e3cd71fd98c2dc111ffbdb2a129b36771df8d36a7de2fe3e4e08a8a8a8a8a8a8a8a6040516131979897969594939291906142a4565b60405180910390a150505050505050505050565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60006132188254600f81810b600160801b909204900b131590565b1561323657604051631ed9509560e11b815260040160405180910390fd5b508054600f0b6000818152600180840160205260408220805492905583546fffffffffffffffffffffffffffffffff191692016001600160801b03169190911790915590565b60006001600160ff1b038211156132e65760405162461bcd60e51b815260206004820152602860248201527f53616665436173743a2076616c756520646f65736e27742066697420696e2061604482015267371034b73a191a9b60c11b6064820152608401610e54565b5090565b60006f7fffffffffffffffffffffffffffffff19821280159061331d57506f7fffffffffffffffffffffffffffffff8213155b6132e65760405162461bcd60e51b815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e20316044820152663238206269747360c81b6064820152608401610e54565b6040805161014081018252606080825260006020830181905292820183905281018290526080810182905260a0810182905260c0810182905260e08101829052610100810182905261012081019190915290565b5080546133d990613c5e565b6000825580601f106133e9575050565b601f016020900490600052602060002090810190612b2191905b808211156132e65760008155600101613403565b60006020828403121561342957600080fd5b5035919050565b60005b8381101561344b578181015183820152602001613433565b838111156113695750506000910152565b60008151808452613474816020860160208601613430565b601f01601f19169290920160200192915050565b60a08152600061349b60a083018861345c565b61ffff9690961660208301525064ffffffffff93841660408201529183166060830152909116608090910152919050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b038111828210171561350a5761350a6134cc565b604052919050565b600082601f83011261352357600080fd5b813560206001600160401b0382111561353e5761353e6134cc565b8160051b61354d8282016134e2565b928352848101820192828101908785111561356757600080fd5b83870192505b848310156135865782358252918301919083019061356d565b979650505050505050565b6000806000606084860312156135a657600080fd5b8335925060208401356001600160401b038111156135c357600080fd5b6135cf86828701613512565b925050604084013580151581146135e557600080fd5b809150509250925092565b60006101008083526136048184018c61345c565b9915156020840152505064ffffffffff968716604082015260ff95909516606086015262ffffff93909316608085015290841660a084015290921660c082015261ffff90911660e090910152919050565b803564ffffffffff8116811461366a57600080fd5b919050565b60006020828403121561368157600080fd5b61368a82613655565b9392505050565b600061014082518185526136a78286018261345c565b91505060208301516136c2602086018264ffffffffff169052565b50604083015160408501526060830151606085015260808301516136eb608086018260ff169052565b5060a083015161370260a086018262ffffff169052565b5060c083015161371d60c08601826001600160501b03169052565b5060e083015161373360e086018261ffff169052565b506101008381015161ffff16908501526101208084015164ffffffffff811682870152611bcb565b6000604082016040835280855180835260608501915060608160051b8601019250602080880160005b838110156137b257605f198887030185526137a0868351613691565b95509382019390820190600101613784565b50508584038187015286518085528782019482019350915060005b828110156137e9578451845293810193928101926001016137cd565b5091979650505050505050565b60008083601f84011261380857600080fd5b5081356001600160401b0381111561381f57600080fd5b60208301915083602082850101111561383757600080fd5b9250929050565b803562ffffff8116811461366a57600080fd5b803561ffff8116811461366a57600080fd5b600080600080600080600060c0888a03121561387e57600080fd5b87356001600160401b0381111561389457600080fd5b6138a08a828b016137f6565b909850965050602088013560ff811681146138ba57600080fd5b94506138c86040890161383e565b93506138d660608901613655565b92506138e460808901613655565b91506138f260a08901613851565b905092959891949750929550565b6000806040838503121561391357600080fd5b50508035926020909101359150565b6001600160a01b0381168114612b2157600080fd5b60006020828403121561394957600080fd5b813561368a81613922565b600082601f83011261396557600080fd5b81356001600160401b0381111561397e5761397e6134cc565b613991601f8201601f19166020016134e2565b8181528460208386010111156139a657600080fd5b816020850160208301376000918101602001919091529392505050565b6000806000606084860312156139d857600080fd5b83356001600160401b038111156139ee57600080fd5b6139fa86828701613954565b93505060208401359150613a1060408501613655565b90509250925092565b600080600060608486031215613a2e57600080fd5b505081359360208301359350604090920135919050565b6000610140808352613a598184018e61345c565b64ffffffffff9c8d166020850152604084019b909b525050606081019790975260ff95909516608087015262ffffff9390931660a08601526001600160501b039190911660c085015261ffff90811660e08501521661010083015290921661012090920191909152919050565b60208152600061368a6020830184613691565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015613b2e57603f19888603018452613b1c85835161345c565b94509285019290850190600101613b00565b5092979650505050505050565b600080600080600080600060c0888a031215613b5657600080fd5b87356001600160401b03811115613b6c57600080fd5b613b788a828b016137f6565b90985096506138ba905060208901613851565b600080600060608486031215613ba057600080fd5b833592506020840135915060408401356001600160401b03811115613bc457600080fd5b613bd086828701613512565b9150509250925092565b600060208284031215613bec57600080fd5b81356001600160401b03811115613c0257600080fd5b613c0e84828501613954565b949350505050565b6020808252825182820181905260009190848201906040850190845b81811015613c5257835161ffff1683529284019291840191600101613c32565b50909695505050505050565b600181811c90821680613c7257607f821691505b602082108103613c9257634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b815160009082906020808601845b83811015613cd857815185529382019390820190600101613cbc565b50929695505050505050565b8481528315156020820152826040820152608060608201526000613d0b608083018461345c565b9695505050505050565b600060208284031215613d2757600080fd5b5051919050565b600060208284031215613d4057600080fd5b815161368a81613922565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208152600061368a602083018461345c565b60008154613da081613c5e565b808552602060018381168015613dbd5760018114613dd757613e05565b60ff1985168884015283151560051b880183019550613e05565b866000528260002060005b85811015613dfd5781548a8201860152908301908401613de2565b890184019650505b505050505092915050565b60208152600061368a6020830184613d93565b601f821115613e6d57600081815260208120601f850160051c81016020861015613e4a5750805b601f850160051c820191505b81811015613e6957828155600101613e56565b5050505b505050565b81516001600160401b03811115613e8b57613e8b6134cc565b613e9f81613e998454613c5e565b84613e23565b602080601f831160018114613ed45760008415613ebc5750858301515b600019600386901b1c1916600185901b178555613e69565b600085815260208120601f198616915b82811015613f0357888601518255948401946001909101908401613ee4565b5085821015613f215787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052601160045260246000fd5b60008219821115613f5a57613f5a613f31565b500190565b600061ffff83811690831681811015613f7a57613f7a613f31565b039392505050565b600082821015613f9457613f94613f31565b500390565b64ffffffffff85168152836020820152608060408201526000613fbf608083018561345c565b905082606083015295945050505050565b600060018201613fe257613fe2613f31565b5060010190565b6001600160401b03831115614000576140006134cc565b6140148361400e8354613c5e565b83613e23565b6000601f84116001811461404857600085156140305750838201355b600019600387901b1c1916600186901b178355612065565b600083815260209020601f19861690835b828110156140795786850135825560209485019460019092019101614059565b50868210156140965760001960f88860031b161c19848701351681555b505060018560011b0183555050505050565b8381528260208201526060604082015260006101408060608401526140d16101a0840185613d93565b600185015464ffffffffff1664ffffffffff8116608086015250600285015460a0850152600385015460c0850152600485015460ff811660e0860152600881901c62ffffff16610100860152602081901c6001600160501b031661012086015261ffff607082901c8116848701526141556101608701828460801c1661ffff169052565b50609081901c64ffffffffff16610180860152509695505050505050565b60006001600160501b038084168061419b57634e487b7160e01b600052601260045260246000fd5b92169190910492915050565b6020808252601490820152732330b4b632b2103a379039b2b7321022ba3432b960611b604082015260600190565b600080821280156001600160ff1b03849003851316156141f7576141f7613f31565b600160ff1b839003841281161561421057614210613f31565b50500190565b60008251614228818460208701613430565b9190910192915050565b600080835461424081613c5e565b60018281168015614258576001811461426d57613cd8565b60ff1984168752821515830287019450613cd8565b8760005260208060002060005b858110156142935781548a82015290840190820161427a565b505050959091019695505050505050565b60e081528760e08201526000610100898b8285013760008a840182015264ffffffffff988916602084015260ff9790971660408301525062ffffff949094166060850152918516608084015290931660a082015261ffff90921660c0830152601f909201601f1916010191905056fea2646970667358221220c4ec3f21052b5a995de82999aeb607b9e323b6972d4b59a901d48548f717abdd64736f6c634300080f0033",
  "bytecodeSha1": "da2e5c78cfbbebb3fd61fb923ec365af1b727ba6",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.15+commit.e14f2714"
  },
  "contractName": "Governance",
  "coverageMap": {
    "branches": {
      "0": {
        "SafeCast.toInt128": {
          "181": [
            26367,
            26392,
            false
          ],
          "182": [
            26396,
            26421,
            true
          ]
        },
        "SafeCast.toInt256": {
          "180": [
            35409,
            35443,
            true
          ]
        }
      },
      "1": {
        "DoubleEndedQueue.at": {
          "177": [
            4843,
            4860,
            false
          ]
        },
        "DoubleEndedQueue.popFront": {
          "178": [
            3380,
            3392,
            false
          ]
        }
      },
      "12": {
        "Ownable.transferOwnership": {
          "179": [
            1990,
            2012,
            true
          ]
        }
      },
      "13": {},
      "2": {
        "Governance.areTasksAvailableToConfirm": {
          "172": [
            6851,
            6905,
            false
          ],
          "173": [
            6909,
            6931,
            false
          ],
          "174": [
            6935,
            6960,
            false
          ]
        },
        "Governance.claimRandomTaskForVerification": {
          "156": [
            15577,
            15631,
            false
          ],
          "157": [
            15635,
            15657,
            false
          ],
          "158": [
            15661,
            15686,
            false
          ]
        },
        "Governance.completeTask": {
          "134": [
            16466,
            16546,
            false
          ],
          "135": [
            16633,
            16677,
            false
          ],
          "136": [
            16681,
            16725,
            true
          ]
        },
        "Governance.createProposal": {
          "153": [
            23513,
            23530,
            true
          ],
          "154": [
            13263,
            13283,
            false
          ],
          "155": [
            13287,
            13309,
            true
          ]
        },
        "Governance.deleteTaskTypeByIPFSHash": {
          "175": [
            10732,
            10824,
            false
          ]
        },
        "Governance.getMyAvailableTaskTypes": {
          "143": [
            8939,
            9001,
            false
          ],
          "144": [
            9017,
            9061,
            false
          ],
          "145": [
            9065,
            9108,
            false
          ],
          "146": [
            9124,
            9155,
            false
          ],
          "147": [
            9485,
            9493,
            false
          ],
          "148": [
            9769,
            9831,
            false
          ],
          "149": [
            9847,
            9891,
            false
          ],
          "150": [
            9895,
            9938,
            false
          ],
          "151": [
            9954,
            9985,
            false
          ],
          "152": [
            10117,
            10133,
            false
          ]
        },
        "Governance.getTasksAssignedToWiz": {
          "128": [
            7535,
            7589,
            false
          ],
          "129": [
            7593,
            7619,
            false
          ],
          "130": [
            7766,
            7774,
            false
          ],
          "131": [
            8338,
            8392,
            false
          ],
          "132": [
            8396,
            8422,
            false
          ],
          "133": [
            8570,
            8583,
            false
          ]
        },
        "Governance.getVotes": {
          "176": [
            5068,
            5095,
            true
          ]
        },
        "Governance.getWinningVote": {
          "137": [
            5462,
            5489,
            true
          ],
          "138": [
            5529,
            5581,
            true
          ],
          "139": [
            5928,
            5978,
            false
          ],
          "140": [
            6103,
            6109,
            false
          ],
          "141": [
            6157,
            6208,
            false
          ],
          "142": [
            6274,
            6280,
            true
          ]
        },
        "Governance.isCallerOnBoard": {
          "127": [
            4496,
            4561,
            false
          ]
        },
        "Governance.submitVerification": {
          "159": [
            18895,
            18935,
            false
          ],
          "160": [
            18939,
            18972,
            true
          ],
          "161": [
            19027,
            19045,
            true
          ],
          "162": [
            19214,
            19234,
            false
          ],
          "163": [
            19511,
            19532,
            true
          ],
          "164": [
            19647,
            19662,
            false
          ],
          "165": [
            20309,
            20313,
            true
          ],
          "166": [
            20600,
            20619,
            false
          ],
          "167": [
            20884,
            20910,
            false
          ],
          "168": [
            22055,
            22059,
            true
          ],
          "169": [
            22204,
            22218,
            false
          ],
          "170": [
            22476,
            22542,
            false
          ],
          "171": [
            22661,
            22665,
            false
          ]
        },
        "Governance.testHashing": {
          "126": [
            17689,
            17697,
            false
          ]
        }
      },
      "22": {},
      "23": {},
      "5": {},
      "6": {}
    },
    "statements": {
      "0": {
        "SafeCast.toInt128": {
          "125": [
            26359,
            26465
          ]
        },
        "SafeCast.toInt256": {
          "123": [
            35401,
            35488
          ],
          "124": [
            35498,
            35518
          ]
        }
      },
      "1": {
        "DoubleEndedQueue.at": {
          "104": [
            4839,
            4882
          ],
          "105": [
            4892,
            4915
          ]
        },
        "DoubleEndedQueue.empty": {
          "119": [
            5859,
            5892
          ]
        },
        "DoubleEndedQueue.length": {
          "7": [
            5633,
            5690
          ]
        },
        "DoubleEndedQueue.popFront": {
          "118": [
            3376,
            3408
          ],
          "120": [
            3460,
            3491
          ],
          "121": [
            3501,
            3531
          ],
          "122": [
            3565,
            3594
          ]
        },
        "DoubleEndedQueue.pushBack": {
          "27": [
            2207,
            2237
          ],
          "28": [
            2271,
            2297
          ]
        }
      },
      "12": {
        "Ownable._setOwner": {
          "116": [
            2193,
            2210
          ],
          "117": [
            2221,
            2266
          ]
        },
        "Ownable.owner": {
          "0": [
            1067,
            1080
          ]
        },
        "Ownable.renounceOwnership": {
          "24": [
            1717,
            1738
          ]
        },
        "Ownable.transferOwnership": {
          "89": [
            1982,
            2055
          ],
          "90": [
            2066,
            2085
          ]
        }
      },
      "13": {},
      "2": {
        "Governance._createTaskType": {
          "106": [
            14425,
            14441
          ],
          "107": [
            14522,
            14553
          ],
          "108": [
            14567,
            14593
          ],
          "109": [
            14607,
            14643
          ],
          "110": [
            14657,
            14703
          ],
          "111": [
            14717,
            14751
          ],
          "112": [
            14765,
            14805
          ],
          "113": [
            14819,
            14859
          ],
          "114": [
            14873,
            14917
          ],
          "115": [
            14958,
            15082
          ]
        },
        "Governance.areTasksAvailableToConfirm": {
          "91": [
            6761,
            6833
          ],
          "92": [
            6979,
            6990
          ],
          "93": [
            7028,
            7031
          ],
          "94": [
            7052,
            7064
          ]
        },
        "Governance.claimRandomTaskForVerification": {
          "62": [
            15457,
            15523
          ],
          "63": [
            15537,
            15559
          ],
          "64": [
            15865,
            15899
          ],
          "65": [
            15917,
            15998
          ],
          "66": [
            16016,
            16038
          ],
          "67": [
            16056,
            16112
          ],
          "68": [
            16150,
            16153
          ]
        },
        "Governance.completeTask": {
          "25": [
            16625,
            16749
          ],
          "26": [
            16939,
            17020
          ],
          "29": [
            17038,
            17073
          ],
          "30": [
            17091,
            17113
          ],
          "31": [
            17168,
            17239
          ],
          "32": [
            17257,
            17318
          ],
          "33": [
            17337,
            17414
          ],
          "34": [
            17432,
            17437
          ],
          "35": [
            17475,
            17478
          ]
        },
        "Governance.createProposal": {
          "55": [
            13255,
            13339
          ],
          "56": [
            13349,
            13368
          ],
          "57": [
            13468,
            13507
          ],
          "58": [
            13521,
            13560
          ],
          "59": [
            13574,
            13619
          ],
          "60": [
            13633,
            13664
          ],
          "61": [
            13675,
            13787
          ]
        },
        "Governance.createTaskType": {
          "21": [
            14039,
            14145
          ]
        },
        "Governance.deleteTaskTypeByIPFSHash": {
          "95": [
            11149,
            11179
          ],
          "96": [
            11197,
            11233
          ],
          "97": [
            11703,
            11739
          ],
          "98": [
            11757,
            11762
          ],
          "99": [
            11800,
            11803
          ]
        },
        "Governance.getMyAvailableTaskTypes": {
          "46": [
            9198,
            9205
          ],
          "47": [
            9413,
            9416
          ],
          "48": [
            9564,
            9580
          ],
          "49": [
            9594,
            9609
          ],
          "50": [
            10018,
            10058
          ],
          "51": [
            10086,
            10095
          ],
          "52": [
            10157,
            10162
          ],
          "53": [
            10218,
            10221
          ],
          "54": [
            10242,
            10256
          ]
        },
        "Governance.getTaskById": {
          "45": [
            4938,
            4959
          ]
        },
        "Governance.getTasksAssignedToWiz": {
          "8": [
            7415,
            7481
          ],
          "9": [
            7495,
            7517
          ],
          "10": [
            7648,
            7655
          ],
          "11": [
            7694,
            7697
          ],
          "12": [
            7969,
            8000
          ],
          "13": [
            8218,
            8284
          ],
          "14": [
            8298,
            8320
          ],
          "15": [
            8441,
            8466
          ],
          "16": [
            8484,
            8511
          ],
          "17": [
            8539,
            8548
          ],
          "18": [
            8585,
            8590
          ],
          "19": [
            8629,
            8632
          ],
          "20": [
            8653,
            8680
          ]
        },
        "Governance.getVotes": {
          "100": [
            5060,
            5116
          ],
          "101": [
            5273,
            5318
          ],
          "102": [
            5255,
            5258
          ],
          "103": [
            5338,
            5354
          ]
        },
        "Governance.getWinningVote": {
          "36": [
            5454,
            5510
          ],
          "37": [
            5520,
            5605
          ],
          "38": [
            5998,
            6048
          ],
          "39": [
            6066,
            6081
          ],
          "40": [
            6113,
            6120
          ],
          "41": [
            6227,
            6232
          ],
          "42": [
            5871,
            5874
          ],
          "43": [
            6266,
            6301
          ],
          "44": [
            6311,
            6329
          ]
        },
        "Governance.isCallerOnBoard": {
          "4": [
            4581,
            4592
          ],
          "5": [
            4630,
            4633
          ],
          "6": [
            4654,
            4666
          ]
        },
        "Governance.setNFTAddress": {
          "23": [
            10440,
            10467
          ]
        },
        "Governance.submitVerification": {
          "69": [
            18887,
            19009
          ],
          "70": [
            19019,
            19046
          ],
          "71": [
            19307,
            19359
          ],
          "72": [
            19387,
            19390
          ],
          "73": [
            19551,
            19632
          ],
          "74": [
            19933,
            19986
          ],
          "75": [
            20000,
            20067
          ],
          "76": [
            20144,
            20165
          ],
          "77": [
            20301,
            20338
          ],
          "78": [
            20385,
            20433
          ],
          "79": [
            20447,
            20484
          ],
          "80": [
            20638,
            20669
          ],
          "81": [
            20687,
            20712
          ],
          "82": [
            20730,
            20753
          ],
          "83": [
            21073,
            21139
          ],
          "84": [
            21157,
            21213
          ],
          "85": [
            21877,
            21898
          ],
          "86": [
            22047,
            22084
          ],
          "87": [
            22743,
            22835
          ],
          "88": [
            22903,
            22906
          ]
        },
        "Governance.testHashing": {
          "1": [
            17770,
            17822
          ],
          "2": [
            17850,
            17853
          ],
          "3": [
            17951,
            18018
          ]
        }
      },
      "22": {},
      "23": {},
      "5": {},
      "6": {
        "Context._msgSender": {
          "22": [
            672,
            689
          ]
        }
      }
    }
  },
  "dependencies": [
    "Context",
    "OpenZeppelin/openzeppelin-contracts@4.7.3/DoubleEndedQueue",
    "Ownable",
    "ReentrancyGuard",
    "OpenZeppelin/openzeppelin-contracts@4.7.3/SafeCast",
    "Strings",
    "WizardTower",
    "Wizards"
  ],
  "deployedBytecode": "",
  "deployedSourceMap": "771:22878:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2759:46;;;;;;;;;;-1:-1:-1;2759:46:2;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;17522:503;;;;;;;;;;-1:-1:-1;17522:503:2;;;;;:::i;:::-;;:::i;:::-;;2445:27;;;;;;;;;;-1:-1:-1;2445:27:2;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;:::i;4380:293::-;;;;;;;;;;;;;:::i;:::-;;;4390:14:24;;4383:22;4365:41;;4353:2;4338:18;4380:293:2;4225:187:24;7078:1609:2;;;;;;;;;;-1:-1:-1;7078:1609:2;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;13832:320::-;;;;;;;;;;-1:-1:-1;13832:320:2;;;;;:::i;:::-;;:::i;1014:75::-;;;;;;;;;;-1:-1:-1;1014:75:2;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;9375:25:24;;;9363:2;9348:18;1014:75:2;9229:177:24;10373:101:2;;;;;;;;;;-1:-1:-1;10373:101:2;;;;;:::i;:::-;;:::i;1652:94:12:-;;;;;;;;;;;;;:::i;16230:1286:2:-;;;;;;;;;;-1:-1:-1;16230:1286:2;;;;;:::i;:::-;;:::i;5367:969::-;;;;;;;;;;-1:-1:-1;5367:969:2;;;;;:::i;:::-;;:::i;12353:664::-;;;;;;;;;;-1:-1:-1;12353:664:2;;;;;:::i;:::-;;:::i;2840:38::-;;;;;;;;;;-1:-1:-1;2840:38:2;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;:::i;1001:87:12:-;;;;;;;;;;-1:-1:-1;1074:6:12;;1001:87;;-1:-1:-1;;;;;1074:6:12;;;12292:51:24;;12280:2;12265:18;1001:87:12;12146:203:24;2884:34:2;;;;;;;;;;;;;;;;4854:112;;;;;;;;;;-1:-1:-1;4854:112:2;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;8763:1500::-;;;;;;;;;;-1:-1:-1;8763:1500:2;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;13063:762::-;;;;;;;;;;-1:-1:-1;13063:762:2;;;;;:::i;:::-;;:::i;15096:1128::-;;;;;;;;;;-1:-1:-1;15096:1128:2;;;;;:::i;:::-;;:::i;2582:61::-;;;;;;;;;;-1:-1:-1;2582:61:2;;;;;;;;;-1:-1:-1;;;2582:61:2;;;;;;;;;;14390:2:24;14379:22;;;14361:41;;14438:22;;;;14433:2;14418:18;;14411:50;14334:18;2582:61:2;14191:276:24;18731:4208:2;;;;;;;;;;-1:-1:-1;18731:4208:2;;;;;:::i;:::-;;:::i;1901:192:12:-;;;;;;;;;;-1:-1:-1;1901:192:12;;;;;:::i;:::-;;:::i;6383:688:2:-;;;;;;;;;;-1:-1:-1;6383:688:2;;;;;:::i;:::-;;:::i;10600:1221::-;;;;;;;;;;-1:-1:-1;10600:1221:2;;;;;:::i;:::-;;:::i;4972:389::-;;;;;;;;;;-1:-1:-1;4972:389:2;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2759:46::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2759:46:2;;;;;;;;;;;;;;;;;;;-1:-1:-1;2759:46:2;;;;;;-1:-1:-1;;;2759:46:2;;;;:::o;17522:503::-;17623:22;17665:7;17673:1;17665:10;;;;;;;;:::i;:::-;;;;;;;17648:28;;;;;;16582:19:24;;16626:2;16617:12;;16453:182;17648:28:2;;;;;;;;;;;;;17623:53;;17689:8;17686:193;;;17717:9;17713:156;17736:7;:14;17732:1;:18;17713:156;;;17810:7;17818:1;17810:10;;;;;;;;:::i;:::-;;;;;;;17793:28;;;;;;16582:19:24;;16626:2;16617:12;;16453:182;17793:28:2;;;;;;;;;;;;;17783:39;;;;;;17770:7;17778:1;17770:10;;;;;;;;:::i;:::-;;;;;;;;;;:52;17850:3;;17713:156;;;;17686:193;17888:14;17932:7;17915:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;17905:36;;;;;;17888:53;;17956:62;17968:6;17984:10;17976:6;:18;17996:7;18004:1;17996:10;;;;;;;;:::i;:::-;;;;;;;18008:9;17956:62;;;;;;;;;:::i;:::-;;;;;;;;17613:412;;17522:503;;;:::o;2445:27::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2445:27:2;;;;;;;-1:-1:-1;;2445:27:2;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2445:27:2;;;;-1:-1:-1;;;2445:27:2;;;;;-1:-1:-1;;;2445:27:2;;;;;;;-1:-1:-1;;;2445:27:2;;;;;:::o;4380:293::-;4428:4;4459:1;4444:201;4467:10;;4462:1;:15;4444:201;;4496:10;;4515:11;;:31;;-1:-1:-1;;;4515:31:2;;;;;9375:25:24;;;4551:10:2;;-1:-1:-1;;;;;4496:10:2;;;;:18;;4515:11;;;:28;;9348:18:24;;4515:31:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4496:51;;;;;;;;;;;;;9375:25:24;;9363:2;9348:18;;9229:177;4496:51:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;4496:65:2;;4493:114;;4588:4;4581:11;;;4380:293;:::o;4493:114::-;4630:3;;4444:201;;;;4661:5;4654:12;;4380:293;:::o;7078:1609::-;7147:13;7162:16;7190:27;7220:49;7244:24;5676:12:1;;;;;-1:-1:-1;;;5655:10:1;;;;;5648:41;;5344:363;7220:49:2;7190:79;;7279:18;;:::i;:::-;7307:14;;;7357:352;7379:19;7375:1;:23;7357:352;;;7432:48;7452:24;7478:1;7432:19;:48::i;:::-;7424:57;7504:13;;;:5;:13;;;;;;;7495:22;;;;;;;;;;7424:57;;-1:-1:-1;7495:22:2;;;;7504:13;;7495:22;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;7495:22:2;;;-1:-1:-1;;7495:22:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;7495:22:2;;-1:-1:-1;;;;;7495:22:2;;;;;-1:-1:-1;;;7495:22:2;;;;;;;;;;-1:-1:-1;;;7495:22:2;;;;;;;-1:-1:-1;;;7495:22:2;;;;;;;;;7535:36;;;;;-1:-1:-1;7574:15:2;7535:54;;;:84;;;;;7613:6;7593:26;;:6;:17;;;:26;;;7535:84;7531:140;;;7648:7;;;;;7531:140;7694:3;;7357:352;;;;7766:5;7773:1;7766:8;7762:249;;7814:13;;;7825:1;7814:13;;;;;;;;;7790:22;;7814:13;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;7872:16:2;;;7886:1;7872:16;;;;;;;;;7790:37;;-1:-1:-1;7841:29:2;;7872:16;;;;;;;;;;-1:-1:-1;7977:8:2;;;;-1:-1:-1;7977:8:2;;-1:-1:-1;;;;;;;;;7078:1609:2:o;7762:249::-;8021:15;8050:21;8085:5;-1:-1:-1;;;;;8074:17:2;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;8050:41;;8101:26;8144:5;-1:-1:-1;;;;;8130:20:2;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;8130:20:2;;8101:49;;8164:9;8160:484;8182:19;8178:1;:23;8160:484;;;8235:48;8255:24;8281:1;8235:19;:48::i;:::-;8227:57;8307:13;;;:5;:13;;;;;;;8298:22;;;;;;;;;;8227:57;;-1:-1:-1;8298:22:2;;;;8307:13;;8298:22;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;8298:22:2;;;-1:-1:-1;;8298:22:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;8298:22:2;;-1:-1:-1;;;;;8298:22:2;;;;;-1:-1:-1;;;8298:22:2;;;;;;;;;;-1:-1:-1;;;8298:22:2;;;;;;;-1:-1:-1;;;8298:22:2;;;;;;;;;8338:36;;;;;-1:-1:-1;8377:15:2;8338:54;;;:84;;;;;8416:6;8396:26;;:6;:17;;;:26;;;8338:84;8334:272;;;8460:6;8441:7;8449;8441:16;;;;;;;;:::i;:::-;;;;;;:25;;;;8505:6;8484:9;8494:7;8484:18;;;;;;;;:::i;:::-;;;;;;:27;;;;;8539:9;;;;;8578:5;8570:7;:13;8585:5;8567:25;;8629:3;;8160:484;;;-1:-1:-1;8661:7:2;;8670:9;;-1:-1:-1;7078:1609:2;-1:-1:-1;;;;;;;7078:1609:2:o;13832:320::-;23513:17;:15;:17::i;:::-;23505:50;;;;-1:-1:-1;;;23505:50:2;;18283:2:24;23505:50:2;;;18265:21:24;18322:2;18302:18;;;18295:30;-1:-1:-1;;;18341:18:24;;;18334:50;18401:18;;23505:50:2;;;;;;;;;14039:106:::1;14055:9;;14066:1;14069:16;14087:10;14099:13;14114;14129:15;14039;:106::i;:::-;13832:320:::0;;;;;;;:::o;10373:101::-;1074:6:12;;-1:-1:-1;;;;;1074:6:12;679:10:6;1221:23:12;1213:68;;;;-1:-1:-1;;;1213:68:12;;;;;;;:::i;:::-;10440:10:2::1;:27:::0;;-1:-1:-1;;;;;;10440:27:2::1;-1:-1:-1::0;;;;;10440:27:2;;;::::1;::::0;;;::::1;::::0;;10373:101::o;1652:94:12:-;1074:6;;-1:-1:-1;;;;;1074:6:12;679:10:6;1221:23:12;1213:68;;;;-1:-1:-1;;;1213:68:12;;;;;;;:::i;:::-;1717:21:::1;1735:1;1717:9;:21::i;:::-;1652:94::o:0;16230:1286:2:-;16414:9;16410:1080;16431:9;:16;16429:18;;16410:1080;;;16535:9;16524:21;;;;;;;;:::i;:::-;;;;;;;;;;;;;16514:32;;;;;;16487:9;16497:1;16487:12;;;;;;;;:::i;:::-;;;;;;;;;;;:21;;16476:33;;;;;;;;:::i;:::-;;;;;;;;;;;;;16466:44;;;;;;:80;16463:989;;16662:15;16633:9;16643:1;16633:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:25;;;-1:-1:-1;;;16633:25:2;;;;:44;;;;:92;;;16700:9;16710:1;16700:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:25;;;-1:-1:-1;;;16700:25:2;;;;16681:15;:44;;16633:92;16625:124;;;;-1:-1:-1;;;16625:124:2;;20351:2:24;16625:124:2;;;20333:21:24;20390:2;20370:18;;;20363:30;-1:-1:-1;;;20409:18:24;;;20402:49;20468:18;;16625:124:2;20149:343:24;16625:124:2;16802:18;16823:98;;;;;;;;16828:9;16823:98;;;;16838:6;16823:98;;;;;;16846:5;16823:98;;;;16853:1;16823:98;;;;;;16856:9;16866:1;16856:12;;;;;;;;:::i;:::-;;;;;;;;;;;:28;;;;;;;;;;;;16823:98;;;;;;16886:9;16896:1;16886:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:22;;;-1:-1:-1;;;16886:22:2;;;;16823:98;;;;;;;;;;;;;;;;;;;;;;;;;;;;16999:19;;16965:24;2187:10:1;;-1:-1:-1;;;2187:10:1;;;;;;2207:22;;;:11;:22;;;;;:30;;;2271:26;;-1:-1:-1;;;;;2271:26:1;;;2207:11;2284:13;;;2271:26;;;;;;;17038::2;;:5;:26;;;:35;;;;-1:-1:-1;17038:35:2;;:26;;:35;;:26;:35;:::i;:::-;-1:-1:-1;17038:35:2;;;;;;;;;;-1:-1:-1;;17038:35:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;17038:35:2;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;17038:35:2;-1:-1:-1;;;;;;;;17038:35:2;;;;;;;-1:-1:-1;;;;17038:35:2;;-1:-1:-1;;;17038:35:2;;;;;;-1:-1:-1;;;;17038:35:2;-1:-1:-1;;;17038:35:2;;;;;-1:-1:-1;;;;17038:35:2;;;;;-1:-1:-1;;;17038:35:2;;;;;;;;;;;;17091:19;:22;;-1:-1:-1;;17091:22:2;;17038:35;;17091:22;:::i;:::-;;;;-1:-1:-1;17215:24:2;;-1:-1:-1;17215:15:2;17233:6;17215:24;:::i;:::-;17168:9;17178:1;17168:12;;;;;;;;:::i;:::-;;;;;;;;;:44;;;;;:12;;;;;;;:44;;;;;:71;17287:9;:12;;17317:1;;17287:9;17297:1;;17287:12;;;;;;:::i;:::-;;;;;;;;;;;:27;;;;;;;;;;;;:31;;;;:::i;:::-;17257:9;17267:1;17257:12;;;;;;;;:::i;:::-;;;;;;;;;;;:27;;;:61;;;;;;;;;;;;;;;;;;17342:72;17356:6;17384:1;17363:19;;:22;;;;:::i;:::-;17387:9;17398:15;17342:72;;;;;;;;;:::i;:::-;;;;;;;;17432:5;;;16463:989;17475:3;;16410:1080;;;;16230:1286;;;:::o;5367:969::-;5434:7;5475:14;;5462:10;:27;5454:56;;;;-1:-1:-1;;;5454:56:2;;23852:2:24;5454:56:2;;;23834:21:24;23891:2;23871:18;;;23864:30;-1:-1:-1;;;23910:18:24;;;23903:46;23966:18;;5454:56:2;23650:340:24;5454:56:2;5547:21;;;;:9;:21;;;;;:34;;;-1:-1:-1;;;5547:34:2;;;;5529:15;:52;5520:85;;;;-1:-1:-1;;;5520:85:2;;24197:2:24;5520:85:2;;;24179:21:24;24236:2;24216:18;;;24209:30;-1:-1:-1;;;24255:18:24;;;24248:49;24314:18;;5520:85:2;23995:343:24;5520:85:2;5725:19;5754:25;5789:11;5816:9;5812:445;5832:21;;;;:9;:21;;;;;:37;;;;;5829:40;;5812:445;;;5961:17;5928:9;:21;5938:10;5928:21;;;;;;;;;;;:27;;5956:1;5928:30;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:50;;;5925:322;;;6018:9;:21;6028:10;6018:21;;;;;;;;;;;:27;;6046:1;6018:30;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;5998:50;;;;6080:1;6066:15;;6103:3;6108:1;6103:6;6099:23;;6119:1;6113:7;;6099:23;5925:322;;;6191:17;6157:9;:21;6167:10;6157:21;;;;;;;;;;;:27;;6185:1;6157:30;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:51;;;6154:93;;6231:1;6227:5;;6154:93;5871:3;;;;:::i;:::-;;;;5812:445;;;-1:-1:-1;6274:6:2;;6266:35;;;;-1:-1:-1;;;6266:35:2;;24685:2:24;6266:35:2;;;24667:21:24;24724:2;24704:18;;;24697:30;-1:-1:-1;;;24743:18:24;;;24736:46;24799:18;;6266:35:2;24483:340:24;6266:35:2;-1:-1:-1;6318:11:2;;5367:969;-1:-1:-1;;;5367:969:2:o;12353:664::-;23341:31;;-1:-1:-1;;;23341:31:2;;25030:2:24;23341:31:2;;;25012:21:24;25069:2;25049:18;;;25042:30;-1:-1:-1;;;25088:18:24;;;25081:44;25142:18;;23341:31:2;24828:338:24;2840:38:2;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2840:38:2;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2840:38:2;-1:-1:-1;2840:38:2;;;;;;;;;;-1:-1:-1;;;;;;;;2840:38:2;;;;;-1:-1:-1;;;2840:38:2;;;;;-1:-1:-1;;;2840:38:2;;;;;;-1:-1:-1;;;2840:38:2;;;;;:::o;4854:112::-;4915:11;;:::i;:::-;4945:14;;;;:5;:14;;;;;;;4938:21;;;;;;;;;;;;4945:14;;4938:21;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;4938:21:2;;;-1:-1:-1;;4938:21:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;4938:21:2;;-1:-1:-1;;;;;4938:21:2;;;;;-1:-1:-1;;;4938:21:2;;;;;;;;;;-1:-1:-1;;;4938:21:2;;;;;;;-1:-1:-1;;;4938:21:2;;;;;;;;;;;;-1:-1:-1;;4854:112:2:o;8763:1500::-;8834:15;8861:13;;8884:544;8904:9;:16;8901:19;;8884:544;;;8986:15;8939:9;8949:1;8939:12;;;;;;;;:::i;:::-;;;;;;;;;:44;;;;;:12;;;;;;;:44;;;;;;:62;:122;;;;;9046:15;9017:9;9027:1;9017:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:25;;;-1:-1:-1;;;9017:25:2;;;;:44;;8939:122;:169;;;;;9093:15;9065:9;9075:1;9065:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:25;;;-1:-1:-1;;;9065:25:2;;;;:43;8939:169;:216;;;;;9154:1;9124:9;9134:1;9124:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:27;;;-1:-1:-1;;;9124:27:2;;;;:31;8939:216;8936:285;;;9198:7;;;;;8936:285;9413:3;;8884:544;;;;9485:5;9492:1;9485:8;9481:139;;9535:15;;;9548:1;9535:15;;;;;;;;;9509:24;;9535:15;;;;;;;;;;;;;;;;;;;;9509:41;;9564:16;;;;;;;;;;;;:8;9573:1;9564:11;;;;;;;;:::i;:::-;;;;;;;;;;:16;9601:8;8763:1500;-1:-1:-1;;;8763:1500:2:o;9481:139::-;9630:23;9669:5;-1:-1:-1;;;;;9656:19:2;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9630:45;;9685:15;9718:9;9714:519;9734:9;:16;9731:19;;9714:519;;;9816:15;9769:9;9779:1;9769:12;;;;;;;;:::i;:::-;;;;;;;;;:44;;;;;:12;;;;;;;:44;;;;;;:62;:122;;;;;9876:15;9847:9;9857:1;9847:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:25;;;-1:-1:-1;;;9847:25:2;;;;:44;;9769:122;:169;;;;;9923:15;9895:9;9905:1;9895:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:25;;;-1:-1:-1;;;9895:25:2;;;;:43;9769:169;:216;;;;;9984:1;9954:9;9964:1;9954:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:27;;;-1:-1:-1;;;9954:27:2;;;;:31;9769:216;9766:429;;;10037:9;10047:1;10037:12;;;;;;;;:::i;:::-;;;;;;;;;;;:21;;10018:40;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:7;10026;10018:16;;;;;;;;:::i;:::-;;;;;;:40;;;;10086:9;;;;;10128:5;10117:7;:16;10114:67;10157:5;10114:67;;10218:3;;9714:519;;;-1:-1:-1;10249:7:2;;8763:1500;-1:-1:-1;;;;8763:1500:2:o;13063:762::-;23513:17;:15;:17::i;:::-;23505:50;;;;-1:-1:-1;;;23505:50:2;;18283:2:24;23505:50:2;;;18265:21:24;18322:2;18302:18;;;18295:30;-1:-1:-1;;;18341:18:24;;;18334:50;18401:18;;23505:50:2;18081:344:24;23505:50:2;13282:1:::1;13263:16;:20;;;:46;;;;;13306:3;13287:16;:22;;;13263:46;13255:84;;;::::0;-1:-1:-1;;;13255:84:2;;26524:2:24;13255:84:2::1;::::0;::::1;26506:21:24::0;26563:2;26543:18;;;26536:30;26602:27;26582:18;;;26575:55;26647:18;;13255:84:2::1;26322:349:24::0;13255:84:2::1;13367:1;13349:14;;:19;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;13439:14:2::1;::::0;13399:27:::1;13429:25:::0;;;:9:::1;:25;::::0;;;;13468:23:::1;::::0;::::1;:39:::0;;-1:-1:-1;;13521:39:2;13468;::::1;::::0;;::::1;::::0;;;::::1;-1:-1:-1::0;;;;13521:39:2;;;;;-1:-1:-1;;;13521:39:2;;::::1;::::0;;;::::1;;::::0;;-1:-1:-1;13574:26:2;::::1;:45:::0;;-1:-1:-1;;13574:45:2::1;;::::0;::::1;;::::0;;13429:25;13633:31:::1;13655:9:::0;;13429:25;13633:31:::1;:::i;:::-;;13675:112;13691:9;;13709:14;;13726:1;13729:10;13741:13;13756;13771:15;13675;:112::i;:::-;13245:580;13063:762:::0;;;;;;;:::o;15096:1128::-;15171:27;15201:49;15225:24;5676:12:1;;;;;-1:-1:-1;;;5655:10:1;;;;;5648:41;;5344:363;15201:49:2;15171:79;;15260:18;;:::i;:::-;15288:14;;15399:766;15421:19;15417:1;:23;15399:766;;;15474:48;15494:24;15520:1;15474:19;:48::i;:::-;15466:57;15546:13;;;:5;:13;;;;;;;15537:22;;;;;;;;;;15466:57;;-1:-1:-1;15537:22:2;;;;15546:13;;15537:22;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;15537:22:2;;;-1:-1:-1;;15537:22:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;15537:22:2;;-1:-1:-1;;;;;15537:22:2;;;;;-1:-1:-1;;;15537:22:2;;;;;;;;;;-1:-1:-1;;;15537:22:2;;;;;;;-1:-1:-1;;;15537:22:2;;;;;;;;;15577:36;;;;;-1:-1:-1;15616:15:2;15577:54;;;:80;;;;;15651:6;15635;:12;;;:22;;;;15577:80;:109;;;;;15680:6;15661;:16;;;:25;;;;15577:109;15573:554;;;15865:34;;;:17;;;:34;15981:16;;15963:34;;:15;:34;:::i;:::-;15917:81;;:36;;;:81;16016:13;;;;:5;:13;;;;;:22;;15917:6;;16016:13;;;:22;;:13;:22;:::i;:::-;-1:-1:-1;16016:22:2;;;;;;;;;;-1:-1:-1;;16016:22:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;16016:22:2;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;16016:22:2;-1:-1:-1;;;;;;;;16016:22:2;;;;;;;-1:-1:-1;;;;16016:22:2;;-1:-1:-1;;;16016:22:2;;;;;;-1:-1:-1;;;;16016:22:2;-1:-1:-1;;;16016:22:2;;;;;-1:-1:-1;;;;16016:22:2;;;;;-1:-1:-1;;;16016:22:2;;;;;;;;;;;;-1:-1:-1;16098:13:2;;;:5;:13;;;;;;;16061:51;;;;;;16082:6;;16098:13;;16061:51;:::i;:::-;;;;;;;;15573:554;16150:3;;15399:766;;;;15161:1063;;;15096:1128;:::o;18731:4208::-;18895:10;;:26;;-1:-1:-1;;;18895:26:2;;;;;9375:25:24;;;18925:10:2;;-1:-1:-1;;;;;18895:10:2;;:18;;9348::24;;18895:26:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;18895:40:2;;:77;;;;-1:-1:-1;18939:14:2;;;;:5;:14;;;;;:25;;;-1:-1:-1;;;18939:25:2;;;;:33;;18895:77;18887:122;;;;-1:-1:-1;;;18887:122:2;;29551:2:24;18887:122:2;;;29533:21:24;;;29570:18;;;29563:30;29629:34;29609:18;;;29602:62;29681:18;;18887:122:2;29349:356:24;18887:122:2;19044:1;19027:7;:14;:18;19019:27;;;;;;19057:18;19078:14;;;:5;:14;;;;;;19057:35;;;;;;;;;;;;19078:14;;19057:35;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;19057:35:2;;;-1:-1:-1;;19057:35:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;19057:35:2;;-1:-1:-1;;;;;19057:35:2;;;;;-1:-1:-1;;;19057:35:2;;;;;;;;;;-1:-1:-1;;;19057:35:2;;;;;;;;-1:-1:-1;;;19057:35:2;;;;;;;;;;;;;;19214:16;;;;;;-1:-1:-1;;;19214:20:2;;19211:205;;19254:9;19250:156;19273:7;:14;19269:1;:18;19250:156;;;19347:7;19355:1;19347:10;;;;;;;;:::i;:::-;;;;;;;19330:28;;;;;;16582:19:24;;16626:2;16617:12;;16453:182;19330:28:2;;;;;;;;;;;;;19320:39;;;;;;19307:7;19315:1;19307:10;;;;;;;;:::i;:::-;;;;;;;;;;:52;19387:3;;19250:156;;;;19211:205;19425:14;19469:7;19452:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;19442:36;;;;;;19425:53;;19489:19;19526:6;19511;:11;;;:21;:29;;19539:1;19511:29;;;19535:1;19511:29;19586:12;;;;;19556:76;;;29962:25:24;;;30035:12;30023:25;;;30003:18;;;29996:53;;;;30065:18;;;30058:34;;;30123:2;30108:18;;30101:34;;;19489:51:2;;;;;19630:1;19617:14;;30166:3:24;30151:19;;30144:51;19489::2;-1:-1:-1;19556:76:2;;29949:3:24;29934:19;19556:76:2;;;;;;;19647:11;19661:1;19647:15;19643:2497;;19741:13;19772:1;19757:6;:14;;;:16;;;;:::i;:::-;19827:10;;19846:17;;;;19827:37;;-1:-1:-1;;;19827:37:2;;30686:6:24;30674:19;;;19827:37:2;;;30656:38:24;-1:-1:-1;;;;;19741:32:2;;;;;-1:-1:-1;19787:29:2;;-1:-1:-1;;;;;19827:10:2;;;;:18;;30629::24;;19827:37:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;19933:10;;19955:12;;;;19969:16;;;;19933:53;;-1:-1:-1;;;19933:53:2;;30907:12:24;30895:25;;;19933:53:2;;;30877:44:24;30969:8;30957:21;30937:18;;;30930:49;19787:78:2;;-1:-1:-1;;;;;;19933:10:2;;:21;;30850:18:24;;19933:53:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;20000:10:2;;20022:17;;;;20041:25;;20000:67;;-1:-1:-1;;;20000:67:2;;31193:6:24;31181:19;;;20000:67:2;;;31163:38:24;31217:18;;;31210:34;-1:-1:-1;;;;;20000:10:2;;;;-1:-1:-1;20000:21:2;;-1:-1:-1;31136:18:24;;20000:67:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;20151:14:2;;;;:5;:14;;;;;;-1:-1:-1;20144:21:2;20151:14;;20144:21;:::i;:::-;-1:-1:-1;20144:21:2;;;;;-1:-1:-1;;20144:21:2;;;-1:-1:-1;20144:21:2;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;20144:21:2;;;20251:36;;-1:-1:-1;;;;;;;20251:18:2;;;20277:5;;-1:-1:-1;20251:36:2;-1:-1:-1;20251:36:2;20277:5;20251:18;:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20218:69;;;;20309:4;20301:37;;;;-1:-1:-1;;;20301:37:2;;;;;;;:::i;:::-;20400:33;;:10;;20423:5;;20400:33;;;;20423:5;20400:10;:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;20385:48:2;;-1:-1:-1;20385:48:2;-1:-1:-1;20385:48:2;20447:37;;;;-1:-1:-1;;;20447:37:2;;;;;;;:::i;:::-;19663:833;;;;19643:2497;;;20600:6;:16;;;:19;;20618:1;20600:19;20597:211;;20638:31;;;:16;;;:31;20687:18;;;:25;;;-1:-1:-1;20730:14:2;;;:5;:14;;;;;:23;;20638:6;;20730:14;;;:23;;:14;:23;:::i;:::-;-1:-1:-1;20730:23:2;;;;;;;;;-1:-1:-1;;20730:23:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;20730:23:2;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;20730:23:2;-1:-1:-1;;;;;;;;20730:23:2;;;;;;;-1:-1:-1;;;;20730:23:2;;-1:-1:-1;;;20730:23:2;;;;;;-1:-1:-1;;;;20730:23:2;-1:-1:-1;;;20730:23:2;;;;;-1:-1:-1;;;;20730:23:2;;;;;-1:-1:-1;;;20730:23:2;;;;;;;;;;;-1:-1:-1;;;20597:211:2;20904:6;20884;:18;;;:26;20881:1249;;20929:13;20960:1;20945:6;:14;;;:16;;;;:::i;:::-;21017:10;;;21036:16;;;21017:36;;-1:-1:-1;;;21017:36:2;;30686:6:24;30674:19;;;21017:36:2;;;30656:38:24;-1:-1:-1;;;;;20929:32:2;;;;;-1:-1:-1;20979:27:2;;-1:-1:-1;;;;;21017:10:2;;;;:18;;30629::24;;21017:36:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;21073:10;;;21095:16;;;21113:25;;21073:66;;-1:-1:-1;;;21073:66:2;;31193:6:24;31181:19;;;21073:66:2;;;31163:38:24;31217:18;;;31210:34;20979:75:2;;-1:-1:-1;;;;;;21073:10:2;;:21;;31136:18:24;;21073:66:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;21157:10:2;;21187:25;;21157:56;;-1:-1:-1;;;21157:56:2;;;;;31988:25:24;;;32029:18;;;32022:34;;;;-1:-1:-1;;;;;21157:10:2;;;;-1:-1:-1;21157:21:2;;-1:-1:-1;31961:18:24;;21157:56:2;31814:248:24;20881:1249:2;21845:14;;;;21829:13;21884:14;;;:5;:14;;;;;-1:-1:-1;;;;;21829:30:2;;;;21884:14;21877:21;21884:14;21829:13;21877:21;:::i;:::-;-1:-1:-1;21877:21:2;;;;;-1:-1:-1;;21877:21:2;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;21877:21:2;;;;21949:7;1074:6:12;;-1:-1:-1;;;;;1074:6:12;;1001:87;21949:7:2;-1:-1:-1;;;;;21949:12:2;21969:5;21949:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21916:63;;;;22055:4;22047:37;;;;-1:-1:-1;;;22047:37:2;;;;;;;:::i;:::-;21723:407;;;20881:1249;22204:14;22201:731;;;22233:27;22263:49;22287:24;5676:12:1;;;;;-1:-1:-1;;;5655:10:1;;;;;5648:41;;5344:363;22263:49:2;22233:79;;22414:9;22410:512;22432:19;22428:1;:23;22410:512;;;22535:7;22484:48;22504:24;22530:1;22484:19;:48::i;:::-;22476:66;22472:404;;22565:17;22585:51;22611:24;22585:25;:51::i;:::-;22565:71;-1:-1:-1;22661:4:2;;22658:200;;22743:24;22781:31;22826:9;;22743:30;;:80;;22781:40;;22819:1;;22781:31;;:40;:::i;:::-;22743:80;;;;;;;;;;;;;-1:-1:-1;22743:80:2;:92;22658:200;22543:333;22472:404;22903:3;;22410:512;;;;22219:713;18827:4112;;;;;18731:4208;;;:::o;1901:192:12:-;1074:6;;-1:-1:-1;;;;;1074:6:12;679:10:6;1221:23:12;1213:68;;;;-1:-1:-1;;;1213:68:12;;;;;;;:::i;:::-;-1:-1:-1;;;;;1990:22:12;::::1;1982:73;;;::::0;-1:-1:-1;;;1982:73:12;;32539:2:24;1982:73:12::1;::::0;::::1;32521:21:24::0;32578:2;32558:18;;;32551:30;32617:34;32597:18;;;32590:62;-1:-1:-1;;;32668:18:24;;;32661:36;32714:19;;1982:73:12::1;32337:402:24::0;1982:73:12::1;2066:19;2076:8;2066:9;:19::i;:::-;1901:192:::0;:::o;6383:688:2:-;6458:4;6474:27;6504:49;6528:24;5676:12:1;;;;;-1:-1:-1;;;5655:10:1;;;;;5648:41;;5344:363;6504:49:2;6474:79;;6563:18;;:::i;:::-;6707:9;6703:340;6725:19;6721:1;:23;6703:340;;;6770:5;:63;6784:47;6804:24;6829:1;6784:19;:47::i;:::-;6776:56;;6770:63;;;;;;;;;;;6761:72;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;6761:72:2;;;-1:-1:-1;;6761:72:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;6761:72:2;;-1:-1:-1;;;;;6761:72:2;;;;;-1:-1:-1;;;6761:72:2;;;;;;;;;;-1:-1:-1;;;6761:72:2;;;;;;;-1:-1:-1;;;6761:72:2;;;;;;;;;6851:36;;;;;-1:-1:-1;6890:15:2;6851:54;;;:80;;;;;6925:6;6909;:12;;;:22;;;;6851:80;:109;;;;;6954:6;6935;:16;;;:25;;;;6851:109;6847:158;;;-1:-1:-1;6986:4:2;;6383:688;-1:-1:-1;;;;6383:688:2:o;6847:158::-;7028:3;;6703:340;;;-1:-1:-1;7059:5:2;;6383:688;-1:-1:-1;;;;6383:688:2:o;10600:1221::-;10682:9;10678:1137;10697:9;:16;10695:18;;10678:1137;;;10813:9;10796:27;;;;;;;;:::i;:::-;;;;;;;;;;;;;10786:38;;;;;;10759:9;10769:1;10759:12;;;;;;;;:::i;:::-;;;;;;;;;;;:21;;10742:39;;;;;;;;:::i;:::-;;;;;;;;;;;;;10732:50;;;;;;:92;10729:1048;;10907:27;10937:9;10947:1;10937:12;;;;;;;;:::i;:::-;;;;;;;;;;;10907:42;;10967:34;11004:9;11031:1;11014:9;:16;;;;:18;;;;:::i;:::-;11004:29;;;;;;;;:::i;:::-;;;;;;;;;;;10967:66;;11162:17;11149:30;;11204:9;11231:1;11214:9;:16;;;;:18;;;;:::i;:::-;11204:29;;;;;;;;:::i;:::-;;;;;;;;;;;;11197:36;;;;;;;;:::i;:::-;-1:-1:-1;11197:36:2;;;;-1:-1:-1;;;;;;11197:36:2;;;11710:9;11720:16;;:18;;11197:36;;11720:18;:::i;:::-;11710:29;;;;;;;;:::i;:::-;;;;;;;;;;;;11703:36;;;;;;;;:::i;:::-;-1:-1:-1;11703:36:2;;;;-1:-1:-1;;;;;;11703:36:2;;;-1:-1:-1;11757:5:2;;-1:-1:-1;11757:5:2;10729:1048;11800:3;;10678:1137;;;;10600:1221;:::o;4972:389::-;5033:15;5081:14;;5068:10;:27;5060:56;;;;-1:-1:-1;;;5060:56:2;;23852:2:24;5060:56:2;;;23834:21:24;23891:2;23871:18;;;23864:30;-1:-1:-1;;;23910:18:24;;;23903:46;23966:18;;5060:56:2;23650:340:24;5060:56:2;5126:25;5167:21;;;:9;:21;;;;;:37;;;;;-1:-1:-1;;;;;5154:51:2;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5154:51:2;;5126:79;;5219:9;5215:114;5237:9;:16;5234:1;:19;5215:114;;;5288:9;:21;5298:10;5288:21;;;;;;;;;;;:27;;5316:1;5288:30;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;5273:9;5283:1;5273:12;;;;;;;;:::i;:::-;:45;;;;:12;;;;;;;;;;;:45;5255:3;;;;:::i;:::-;;;;5215:114;;;-1:-1:-1;5345:9:2;4972:389;-1:-1:-1;;4972:389:2:o;4598:324:1:-;4676:13;4750:10;4763:66;4804:24;4822:5;4804:17;:24::i;:::-;4788:12;;4781:47;;;4788:12;;4781:47;:::i;:::-;4763:17;:66::i;:::-;4850:10;;4750:79;;-1:-1:-1;;;;4850:10:1;;;;;;4843:17;;;;;4839:43;;4869:13;;-1:-1:-1;;;4869:13:1;;;;;;;;;;;4839:43;4899:16;;;;;;:11;;;;;:16;;-1:-1:-1;;4899:16:1;;;;;4598:324::o;14158:931:2:-;14399:9;:16;;14425;;;;;;14373:23;14425:16;;;14399;;:9;:16;;14482:26;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;14522:20:2;;;:31;14544:9;;14522:20;:31;:::i;:::-;;14588:5;14567:11;:18;;;:26;;;;;;;;;;;;;;;;;;14632:11;14607;:22;;;:36;;;;;;;;;;;;;;;;;;14687:16;14657:11;:27;;;:46;;;;;;;;;;;;;;;;;;14741:10;14717:11;:21;;;:34;;;;;;;;;;;;;;;;;;14792:13;14765:11;:24;;;:40;;;;;;;;;;;;;;;;;;14846:13;14819:11;:24;;;:40;;;;;;;;;;;;;;;;;;14902:15;14873:11;:26;;;:44;;;;;;;;;;;;;;;;;;14963:119;14982:9;;14993:11;15006:16;15024:10;15036:13;15051;15066:15;14963:119;;;;;;;;;;;;;:::i;:::-;;;;;;;;14363:726;;14158:931;;;;;;;;:::o;2101:173:12:-;2176:6;;;-1:-1:-1;;;;;2193:17:12;;;-1:-1:-1;;;;;;2193:17:12;;;;;;;2226:40;;2176:6;;;2193:17;2176:6;;2226:40;;2157:16;;2226:40;2146:128;2101:173;:::o;3287:324:1:-;3351:13;3380:12;3386:5;5880:12;;;;;-1:-1:-1;;;5866:10:1;;;;;:26;;;5777:122;3380:12;3376:32;;;3401:7;;-1:-1:-1;;;3401:7:1;;;;;;;;;;;3376:32;-1:-1:-1;3438:12:1;;;;3418:17;3468:23;;;3438:12;3468:11;;;:23;;;;;;;3501:30;;;3565:29;;-1:-1:-1;;3565:29:1;3580:14;;-1:-1:-1;;;;;3565:29:1;;;;;;;;3468:23;3287:324::o;35228:297:0:-;35284:6;-1:-1:-1;;;;;35409:5:0;:34;;35401:87;;;;-1:-1:-1;;;35401:87:0;;35007:2:24;35401:87:0;;;34989:21:24;35046:2;35026:18;;;35019:30;35085:34;35065:18;;;35058:62;-1:-1:-1;;;35136:18:24;;;35129:38;35184:19;;35401:87:0;34805:404:24;35401:87:0;-1:-1:-1;35512:5:0;35228:297::o;26286:216::-;26341:6;-1:-1:-1;;26367:25:0;;;;;:54;;-1:-1:-1;26405:16:0;26396:25;;;26367:54;26359:106;;;;-1:-1:-1;;;26359:106:0;;35416:2:24;26359:106:0;;;35398:21:24;35455:2;35435:18;;;35428:30;35494:34;35474:18;;;35467:62;-1:-1:-1;;;35545:18:24;;;35538:37;35592:19;;26359:106:0;35214:403:24;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14:180:24;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:24;;14:180;-1:-1:-1;14:180:24:o;199:258::-;271:1;281:113;295:6;292:1;289:13;281:113;;;371:11;;;365:18;352:11;;;345:39;317:2;310:10;281:113;;;412:6;409:1;406:13;403:48;;;-1:-1:-1;;447:1:24;429:16;;422:27;199:258::o;462:::-;504:3;542:5;536:12;569:6;564:3;557:19;585:63;641:6;634:4;629:3;625:14;618:4;611:5;607:16;585:63;:::i;:::-;702:2;681:15;-1:-1:-1;;677:29:24;668:39;;;;709:4;664:50;;462:258;-1:-1:-1;;462:258:24:o;921:570::-;1174:3;1163:9;1156:22;1137:4;1195:46;1236:3;1225:9;1221:19;1213:6;1195:46;:::i;:::-;1289:6;1277:19;;;;1272:2;1257:18;;1250:47;-1:-1:-1;1316:12:24;1364:15;;;1359:2;1344:18;;1337:43;1416:15;;;1411:2;1396:18;;1389:43;1469:15;;;1463:3;1448:19;;;1441:44;1187:54;921:570;-1:-1:-1;921:570:24:o;1496:127::-;1557:10;1552:3;1548:20;1545:1;1538:31;1588:4;1585:1;1578:15;1612:4;1609:1;1602:15;1628:275;1699:2;1693:9;1764:2;1745:13;;-1:-1:-1;;1741:27:24;1729:40;;-1:-1:-1;;;;;1784:34:24;;1820:22;;;1781:62;1778:88;;;1846:18;;:::i;:::-;1882:2;1875:22;1628:275;;-1:-1:-1;1628:275:24:o;1908:712::-;1962:5;2015:3;2008:4;2000:6;1996:17;1992:27;1982:55;;2033:1;2030;2023:12;1982:55;2069:6;2056:20;2095:4;-1:-1:-1;;;;;2114:2:24;2111:26;2108:52;;;2140:18;;:::i;:::-;2186:2;2183:1;2179:10;2209:28;2233:2;2229;2225:11;2209:28;:::i;:::-;2271:15;;;2341;;;2337:24;;;2302:12;;;;2373:15;;;2370:35;;;2401:1;2398;2391:12;2370:35;2437:2;2429:6;2425:15;2414:26;;2449:142;2465:6;2460:3;2457:15;2449:142;;;2531:17;;2519:30;;2482:12;;;;2569;;;;2449:142;;;2609:5;1908:712;-1:-1:-1;;;;;;;1908:712:24:o;2625:577::-;2724:6;2732;2740;2793:2;2781:9;2772:7;2768:23;2764:32;2761:52;;;2809:1;2806;2799:12;2761:52;2845:9;2832:23;2822:33;;2906:2;2895:9;2891:18;2878:32;-1:-1:-1;;;;;2925:6:24;2922:30;2919:50;;;2965:1;2962;2955:12;2919:50;2988:61;3041:7;3032:6;3021:9;3017:22;2988:61;:::i;:::-;2978:71;;;3099:2;3088:9;3084:18;3071:32;3146:5;3139:13;3132:21;3125:5;3122:32;3112:60;;3168:1;3165;3158:12;3112:60;3191:5;3181:15;;;2625:577;;;;;:::o;3384:836::-;3672:4;3701:3;3731:2;3720:9;3713:21;3751:45;3792:2;3781:9;3777:18;3769:6;3751:45;:::i;:::-;3839:14;;3832:22;3827:2;3812:18;;3805:50;-1:-1:-1;;3874:12:24;3922:15;;;3917:2;3902:18;;3895:43;3986:4;3974:17;;;;3969:2;3954:18;;3947:45;4041:8;4029:21;;;;4023:3;4008:19;;4001:50;4088:15;;;4082:3;4067:19;;4060:44;4141:15;;;4135:3;4120:19;;4113:44;4206:6;4194:19;;;4188:3;4173:19;;;4166:48;3839:14;3743:53;-1:-1:-1;3384:836:24:o;4417:165::-;4484:20;;4544:12;4533:24;;4523:35;;4513:63;;4572:1;4569;4562:12;4513:63;4417:165;;;:::o;4587:184::-;4645:6;4698:2;4686:9;4677:7;4673:23;4669:32;4666:52;;;4714:1;4711;4704:12;4666:52;4737:28;4755:9;4737:28;:::i;:::-;4727:38;4587:184;-1:-1:-1;;;4587:184:24:o;4887:1175::-;4934:3;4962:6;5003:5;4997:12;5030:2;5025:3;5018:15;5054:45;5095:2;5090:3;5086:12;5072;5054:45;:::i;:::-;5042:57;;;5147:4;5140:5;5136:16;5130:23;5162:49;5205:4;5200:3;5196:14;5180;896:12;885:24;873:37;;820:96;5162:49;;5260:4;5253:5;5249:16;5243:23;5236:4;5231:3;5227:14;5220:47;5316:4;5309:5;5305:16;5299:23;5292:4;5287:3;5283:14;5276:47;5371:4;5364:5;5360:16;5354:23;5386:48;5428:4;5423:3;5419:14;5403;3274:4;3263:16;3251:29;;3207:75;5386:48;;5482:4;5475:5;5471:16;5465:23;5497:49;5540:4;5535:3;5531:14;5515;3363:8;3352:20;3340:33;;3287:92;5497:49;;5594:4;5587:5;5583:16;5577:23;5609:49;5652:4;5647:3;5643:14;5627;-1:-1:-1;;;;;4841:34:24;4829:47;;4776:106;5609:49;;5706:4;5699:5;5695:16;5689:23;5721:49;5764:4;5759:3;5755:14;5739;801:6;790:18;778:31;;725:90;5721:49;-1:-1:-1;5789:6:24;5832:14;;;5826:21;801:6;790:18;5890:12;;;778:31;5922:6;5965:14;;;5959:21;896:12;885:24;;6023:12;;;873:37;5989:47;820:96;6067:1357;6327:4;6375:2;6364:9;6360:18;6405:2;6394:9;6387:21;6428:6;6463;6457:13;6494:6;6486;6479:22;6532:2;6521:9;6517:18;6510:25;;6594:2;6584:6;6581:1;6577:14;6566:9;6562:30;6558:39;6544:53;;6616:4;6655:2;6647:6;6643:15;6676:1;6686:260;6700:6;6697:1;6694:13;6686:260;;;6793:2;6789:7;6777:9;6769:6;6765:22;6761:36;6756:3;6749:49;6821:45;6859:6;6850;6844:13;6821:45;:::i;:::-;6811:55;-1:-1:-1;6924:12:24;;;;6889:15;;;;6722:1;6715:9;6686:260;;;-1:-1:-1;;6982:22:24;;;6962:18;;;6955:50;7058:13;;7080:24;;;7162:15;;;;7122;;;-1:-1:-1;7058:13:24;-1:-1:-1;7197:1:24;7207:189;7223:8;7218:3;7215:17;7207:189;;;7292:15;;7278:30;;7369:17;;;;7330:14;;;;7251:1;7242:11;7207:189;;;-1:-1:-1;7413:5:24;;6067:1357;-1:-1:-1;;;;;;;6067:1357:24:o;7429:348::-;7481:8;7491:6;7545:3;7538:4;7530:6;7526:17;7522:27;7512:55;;7563:1;7560;7553:12;7512:55;-1:-1:-1;7586:20:24;;-1:-1:-1;;;;;7618:30:24;;7615:50;;;7661:1;7658;7651:12;7615:50;7698:4;7690:6;7686:17;7674:29;;7750:3;7743:4;7734:6;7726;7722:19;7718:30;7715:39;7712:59;;;7767:1;7764;7757:12;7712:59;7429:348;;;;;:::o;7782:161::-;7849:20;;7909:8;7898:20;;7888:31;;7878:59;;7933:1;7930;7923:12;7948:159;8015:20;;8075:6;8064:18;;8054:29;;8044:57;;8097:1;8094;8087:12;8112:859;8222:6;8230;8238;8246;8254;8262;8270;8323:3;8311:9;8302:7;8298:23;8294:33;8291:53;;;8340:1;8337;8330:12;8291:53;8380:9;8367:23;-1:-1:-1;;;;;8405:6:24;8402:30;8399:50;;;8445:1;8442;8435:12;8399:50;8484:59;8535:7;8526:6;8515:9;8511:22;8484:59;:::i;:::-;8562:8;;-1:-1:-1;8458:85:24;-1:-1:-1;;8647:2:24;8632:18;;8619:32;8691:4;8680:16;;8670:27;;8660:55;;8711:1;8708;8701:12;8660:55;8734:5;-1:-1:-1;8758:37:24;8791:2;8776:18;;8758:37;:::i;:::-;8748:47;;8814:37;8847:2;8836:9;8832:18;8814:37;:::i;:::-;8804:47;;8870:38;8903:3;8892:9;8888:19;8870:38;:::i;:::-;8860:48;;8927:38;8960:3;8949:9;8945:19;8927:38;:::i;:::-;8917:48;;8112:859;;;;;;;;;;:::o;8976:248::-;9044:6;9052;9105:2;9093:9;9084:7;9080:23;9076:32;9073:52;;;9121:1;9118;9111:12;9073:52;-1:-1:-1;;9144:23:24;;;9214:2;9199:18;;;9186:32;;-1:-1:-1;8976:248:24:o;9411:131::-;-1:-1:-1;;;;;9486:31:24;;9476:42;;9466:70;;9532:1;9529;9522:12;9547:247;9606:6;9659:2;9647:9;9638:7;9634:23;9630:32;9627:52;;;9675:1;9672;9665:12;9627:52;9714:9;9701:23;9733:31;9758:5;9733:31;:::i;9799:531::-;9842:5;9895:3;9888:4;9880:6;9876:17;9872:27;9862:55;;9913:1;9910;9903:12;9862:55;9949:6;9936:20;-1:-1:-1;;;;;9971:2:24;9968:26;9965:52;;;9997:18;;:::i;:::-;10041:55;10084:2;10065:13;;-1:-1:-1;;10061:27:24;10090:4;10057:38;10041:55;:::i;:::-;10121:2;10112:7;10105:19;10167:3;10160:4;10155:2;10147:6;10143:15;10139:26;10136:35;10133:55;;;10184:1;10181;10174:12;10133:55;10249:2;10242:4;10234:6;10230:17;10223:4;10214:7;10210:18;10197:55;10297:1;10272:16;;;10290:4;10268:27;10261:38;;;;10276:7;9799:531;-1:-1:-1;;;9799:531:24:o;10335:462::-;10421:6;10429;10437;10490:2;10478:9;10469:7;10465:23;10461:32;10458:52;;;10506:1;10503;10496:12;10458:52;10546:9;10533:23;-1:-1:-1;;;;;10571:6:24;10568:30;10565:50;;;10611:1;10608;10601:12;10565:50;10634;10676:7;10667:6;10656:9;10652:22;10634:50;:::i;:::-;10624:60;;;10731:2;10720:9;10716:18;10703:32;10693:42;;10754:37;10787:2;10776:9;10772:18;10754:37;:::i;:::-;10744:47;;10335:462;;;;;:::o;10802:316::-;10879:6;10887;10895;10948:2;10936:9;10927:7;10923:23;10919:32;10916:52;;;10964:1;10961;10954:12;10916:52;-1:-1:-1;;10987:23:24;;;11057:2;11042:18;;11029:32;;-1:-1:-1;11108:2:24;11093:18;;;11080:32;;10802:316;-1:-1:-1;10802:316:24:o;11123:1018::-;11471:4;11500:3;11530:2;11519:9;11512:21;11550:45;11591:2;11580:9;11576:18;11568:6;11550:45;:::i;:::-;11614:12;11662:15;;;11657:2;11642:18;;11635:43;11709:2;11694:18;;11687:34;;;;-1:-1:-1;;11752:2:24;11737:18;;11730:34;;;;11813:4;11801:17;;;;11795:3;11780:19;;11773:46;11868:8;11856:21;;;;11850:3;11835:19;;11828:50;-1:-1:-1;;;;;11915:35:24;;;;11909:3;11894:19;;11887:64;11970:6;12013:15;;;12007:3;11992:19;;11985:44;12066:15;12060:3;12045:19;;12038:44;12119:15;;;12113:3;12098:19;;;12091:44;;;;11542:53;11123:1018;-1:-1:-1;11123:1018:24:o;12354:245::-;12523:2;12512:9;12505:21;12486:4;12543:50;12589:2;12578:9;12574:18;12566:6;12543:50;:::i;12604:803::-;12766:4;12795:2;12835;12824:9;12820:18;12865:2;12854:9;12847:21;12888:6;12923;12917:13;12954:6;12946;12939:22;12992:2;12981:9;12977:18;12970:25;;13054:2;13044:6;13041:1;13037:14;13026:9;13022:30;13018:39;13004:53;;13092:2;13084:6;13080:15;13113:1;13123:255;13137:6;13134:1;13131:13;13123:255;;;13230:2;13226:7;13214:9;13206:6;13202:22;13198:36;13193:3;13186:49;13258:40;13291:6;13282;13276:13;13258:40;:::i;:::-;13248:50;-1:-1:-1;13356:12:24;;;;13321:15;;;;13159:1;13152:9;13123:255;;;-1:-1:-1;13395:6:24;;12604:803;-1:-1:-1;;;;;;;12604:803:24:o;13412:774::-;13523:6;13531;13539;13547;13555;13563;13571;13624:3;13612:9;13603:7;13599:23;13595:33;13592:53;;;13641:1;13638;13631:12;13592:53;13681:9;13668:23;-1:-1:-1;;;;;13706:6:24;13703:30;13700:50;;;13746:1;13743;13736:12;13700:50;13785:59;13836:7;13827:6;13816:9;13812:22;13785:59;:::i;:::-;13863:8;;-1:-1:-1;13759:85:24;-1:-1:-1;13917:37:24;;-1:-1:-1;13950:2:24;13935:18;;13917:37;:::i;14472:484::-;14574:6;14582;14590;14643:2;14631:9;14622:7;14618:23;14614:32;14611:52;;;14659:1;14656;14649:12;14611:52;14695:9;14682:23;14672:33;;14752:2;14741:9;14737:18;14724:32;14714:42;;14807:2;14796:9;14792:18;14779:32;-1:-1:-1;;;;;14826:6:24;14823:30;14820:50;;;14866:1;14863;14856:12;14820:50;14889:61;14942:7;14933:6;14922:9;14918:22;14889:61;:::i;:::-;14879:71;;;14472:484;;;;;:::o;14961:322::-;15030:6;15083:2;15071:9;15062:7;15058:23;15054:32;15051:52;;;15099:1;15096;15089:12;15051:52;15139:9;15126:23;-1:-1:-1;;;;;15164:6:24;15161:30;15158:50;;;15204:1;15201;15194:12;15158:50;15227;15269:7;15260:6;15249:9;15245:22;15227:50;:::i;:::-;15217:60;14961:322;-1:-1:-1;;;;14961:322:24:o;15288:643::-;15457:2;15509:21;;;15579:13;;15482:18;;;15601:22;;;15428:4;;15457:2;15680:15;;;;15654:2;15639:18;;;15428:4;15723:182;15737:6;15734:1;15731:13;15723:182;;;15802:13;;15817:6;15798:26;15786:39;;15880:15;;;;15845:12;;;;15759:1;15752:9;15723:182;;;-1:-1:-1;15922:3:24;;15288:643;-1:-1:-1;;;;;;15288:643:24:o;15936:380::-;16015:1;16011:12;;;;16058;;;16079:61;;16133:4;16125:6;16121:17;16111:27;;16079:61;16186:2;16178:6;16175:14;16155:18;16152:38;16149:161;;16232:10;16227:3;16223:20;16220:1;16213:31;16267:4;16264:1;16257:15;16295:4;16292:1;16285:15;16149:161;;15936:380;;;:::o;16321:127::-;16382:10;16377:3;16373:20;16370:1;16363:31;16413:4;16410:1;16403:15;16437:4;16434:1;16427:15;16640:543;16858:13;;16801:3;;16832;;16911:4;16938:15;;;16801:3;16981:175;16995:6;16992:1;16989:13;16981:175;;;17058:13;;17044:28;;17094:14;;;;17131:15;;;;17017:1;17010:9;16981:175;;;-1:-1:-1;17172:5:24;;16640:543;-1:-1:-1;;;;;;16640:543:24:o;17188:443::-;17413:6;17402:9;17395:25;17470:6;17463:14;17456:22;17451:2;17440:9;17436:18;17429:50;17515:6;17510:2;17499:9;17495:18;17488:34;17558:3;17553:2;17542:9;17538:18;17531:31;17376:4;17579:46;17620:3;17609:9;17605:19;17597:6;17579:46;:::i;:::-;17571:54;17188:443;-1:-1:-1;;;;;;17188:443:24:o;17636:184::-;17706:6;17759:2;17747:9;17738:7;17734:23;17730:32;17727:52;;;17775:1;17772;17765:12;17727:52;-1:-1:-1;17798:16:24;;17636:184;-1:-1:-1;17636:184:24:o;17825:251::-;17895:6;17948:2;17936:9;17927:7;17923:23;17919:32;17916:52;;;17964:1;17961;17954:12;17916:52;17996:9;17990:16;18015:31;18040:5;18015:31;:::i;18430:356::-;18632:2;18614:21;;;18651:18;;;18644:30;18710:34;18705:2;18690:18;;18683:62;18777:2;18762:18;;18430:356::o;18791:220::-;18940:2;18929:9;18922:21;18903:4;18960:45;19001:2;18990:9;18986:18;18978:6;18960:45;:::i;19142:772::-;19192:3;19233:5;19227:12;19262:36;19288:9;19262:36;:::i;:::-;19307:19;;;19345:4;19368:1;19385:18;;;19412:146;;;;19572:1;19567:341;;;;19378:530;;19412:146;-1:-1:-1;;19454:24:24;;19440:12;;;19433:46;19526:14;;19519:22;19516:1;19512:30;19503:40;;19499:49;;;-1:-1:-1;19412:146:24;;19567:341;19598:5;19595:1;19588:16;19645:2;19642:1;19632:16;19670:1;19684:174;19698:6;19695:1;19692:13;19684:174;;;19785:14;;19767:11;;;19763:20;;19756:44;19828:16;;;;19713:10;;19684:174;;;19882:11;;19878:20;;;-1:-1:-1;;19378:530:24;;;;;;19142:772;;;;:::o;19919:225::-;20065:2;20054:9;20047:21;20028:4;20085:53;20134:2;20123:9;20119:18;20111:6;20085:53;:::i;20497:545::-;20599:2;20594:3;20591:11;20588:448;;;20635:1;20660:5;20656:2;20649:17;20705:4;20701:2;20691:19;20775:2;20763:10;20759:19;20756:1;20752:27;20746:4;20742:38;20811:4;20799:10;20796:20;20793:47;;;-1:-1:-1;20834:4:24;20793:47;20889:2;20884:3;20880:12;20877:1;20873:20;20867:4;20863:31;20853:41;;20944:82;20962:2;20955:5;20952:13;20944:82;;;21007:17;;;20988:1;20977:13;20944:82;;;20948:3;;;20588:448;20497:545;;;:::o;21218:1352::-;21344:3;21338:10;-1:-1:-1;;;;;21363:6:24;21360:30;21357:56;;;21393:18;;:::i;:::-;21422:97;21512:6;21472:38;21504:4;21498:11;21472:38;:::i;:::-;21466:4;21422:97;:::i;:::-;21574:4;;21638:2;21627:14;;21655:1;21650:663;;;;22357:1;22374:6;22371:89;;;-1:-1:-1;22426:19:24;;;22420:26;22371:89;-1:-1:-1;;21175:1:24;21171:11;;;21167:24;21163:29;21153:40;21199:1;21195:11;;;21150:57;22473:81;;21620:944;;21650:663;19089:1;19082:14;;;19126:4;19113:18;;-1:-1:-1;;21686:20:24;;;21804:236;21818:7;21815:1;21812:14;21804:236;;;21907:19;;;21901:26;21886:42;;21999:27;;;;21967:1;21955:14;;;;21834:19;;21804:236;;;21808:3;22068:6;22059:7;22056:19;22053:201;;;22129:19;;;22123:26;-1:-1:-1;;22212:1:24;22208:14;;;22224:3;22204:24;22200:37;22196:42;22181:58;22166:74;;22053:201;-1:-1:-1;;;;;22300:1:24;22284:14;;;22280:22;22267:36;;-1:-1:-1;21218:1352:24:o;22575:127::-;22636:10;22631:3;22627:20;22624:1;22617:31;22667:4;22664:1;22657:15;22691:4;22688:1;22681:15;22707:128;22747:3;22778:1;22774:6;22771:1;22768:13;22765:39;;;22784:18;;:::i;:::-;-1:-1:-1;22820:9:24;;22707:128::o;22840:217::-;22879:4;22908:6;22964:10;;;;22934;;22986:12;;;22983:38;;;23001:18;;:::i;:::-;23038:13;;22840:217;-1:-1:-1;;;22840:217:24:o;23062:125::-;23102:4;23130:1;23127;23124:8;23121:34;;;23135:18;;:::i;:::-;-1:-1:-1;23172:9:24;;23062:125::o;23192:453::-;23436:12;23428:6;23424:25;23413:9;23406:44;23486:6;23481:2;23470:9;23466:18;23459:34;23529:3;23524:2;23513:9;23509:18;23502:31;23387:4;23550:46;23591:3;23580:9;23576:19;23568:6;23550:46;:::i;:::-;23542:54;;23632:6;23627:2;23616:9;23612:18;23605:34;23192:453;;;;;;;:::o;24343:135::-;24382:3;24403:17;;;24400:43;;24423:18;;:::i;:::-;-1:-1:-1;24470:1:24;24459:13;;24343:135::o;26676:1206::-;-1:-1:-1;;;;;26795:3:24;26792:27;26789:53;;;26822:18;;:::i;:::-;26851:94;26941:3;26901:38;26933:4;26927:11;26901:38;:::i;:::-;26895:4;26851:94;:::i;:::-;26971:1;26996:2;26991:3;26988:11;27013:1;27008:616;;;;27668:1;27685:3;27682:93;;;-1:-1:-1;27741:19:24;;;27728:33;27682:93;-1:-1:-1;;21175:1:24;21171:11;;;21167:24;21163:29;21153:40;21199:1;21195:11;;;21150:57;27788:78;;26981:895;;27008:616;19089:1;19082:14;;;19126:4;19113:18;;-1:-1:-1;;27044:17:24;;;27145:9;27167:229;27181:7;27178:1;27175:14;27167:229;;;27270:19;;;27257:33;27242:49;;27377:4;27362:20;;;;27330:1;27318:14;;;;27197:12;27167:229;;;27171:3;27424;27415:7;27412:16;27409:159;;;27548:1;27544:6;27538:3;27532;27529:1;27525:11;27521:21;27517:34;27513:39;27500:9;27495:3;27491:19;27478:33;27474:79;27466:6;27459:95;27409:159;;;27611:1;27605:3;27602:1;27598:11;27594:19;27588:4;27581:33;26981:895;;26676:1206;;;:::o;28022:1322::-;28244:6;28233:9;28226:25;28287:6;28282:2;28271:9;28267:18;28260:34;28330:2;28325;28314:9;28310:18;28303:30;28207:4;28352:6;28394:2;28389;28378:9;28374:18;28367:30;28420:54;28469:3;28458:9;28454:19;28446:6;28420:54;:::i;:::-;28563:4;28551:17;;28545:24;27998:12;27982:29;896:12;885:24;;28626:3;28611:19;;873:37;-1:-1:-1;28686:4:24;28674:17;;28668:24;28662:3;28647:19;;28640:53;28748:4;28736:17;;28730:24;28724:3;28709:19;;28702:53;28799:4;28787:17;;28781:24;28846:4;28831:20;;28868:3;28853:19;;3251:29;28908:1;28904:17;;;28923:8;28900:32;28949:3;28934:19;;3340:33;28989:2;28985:18;;;-1:-1:-1;;;;;28981:47:24;29045:3;29030:19;;4829:47;29069:6;29110:3;29106:19;;;29102:28;;29132:18;;;778:31;29160:68;29223:3;29212:9;29208:19;29203:2;29191:9;29186:3;29182:19;29178:28;801:6;790:18;778:31;;725:90;29160:68;-1:-1:-1;29263:3:24;29259:19;;;29280:12;29255:38;29310:3;29295:19;;873:37;-1:-1:-1;29332:6:24;28022:1322;-1:-1:-1;;;;;;28022:1322:24:o;30206:300::-;30245:1;-1:-1:-1;;;;;30320:2:24;30317:1;30313:10;30342:3;30332:134;;30388:10;30383:3;30379:20;30376:1;30369:31;30423:4;30420:1;30413:15;30451:4;30448:1;30441:15;30332:134;30484:10;;30480:20;;;;;30206:300;-1:-1:-1;;30206:300:24:o;31465:344::-;31667:2;31649:21;;;31706:2;31686:18;;;31679:30;-1:-1:-1;;;31740:2:24;31725:18;;31718:50;31800:2;31785:18;;31465:344::o;32067:265::-;32106:3;32134:9;;;32159:10;;-1:-1:-1;;;;;32178:27:24;;;32171:35;;32155:52;32152:78;;;32210:18;;:::i;:::-;-1:-1:-1;;;32257:19:24;;;32250:27;;32242:36;;32239:62;;;32281:18;;:::i;:::-;-1:-1:-1;;32317:9:24;;32067:265::o;32744:276::-;32875:3;32913:6;32907:13;32929:53;32975:6;32970:3;32963:4;32955:6;32951:17;32929:53;:::i;:::-;32998:16;;;;;32744:276;-1:-1:-1;;32744:276:24:o;33025:842::-;33153:3;33182:1;33215:6;33209:13;33245:36;33271:9;33245:36;:::i;:::-;33300:1;33317:18;;;33344:133;;;;33491:1;33486:356;;;;33310:532;;33344:133;-1:-1:-1;;33377:24:24;;33365:37;;33450:14;;33443:22;33431:35;;33422:45;;;-1:-1:-1;33344:133:24;;33486:356;33517:6;33514:1;33507:17;33547:4;33592:2;33589:1;33579:16;33617:1;33631:165;33645:6;33642:1;33639:13;33631:165;;;33723:14;;33710:11;;;33703:35;33766:16;;;;33660:10;;33631:165;;;-1:-1:-1;;;33816:16:24;;;;;33858:3;-1:-1:-1;;;;;;33025:842:24:o;33872:928::-;34185:3;34174:9;34167:22;34226:6;34220:3;34209:9;34205:19;34198:35;34148:4;34252:3;34305:6;34297;34292:2;34281:9;34277:18;34264:48;34361:1;34332:22;;;34328:31;;34321:42;34453:12;34503:15;;;34496:4;34481:20;;34474:45;34567:4;34555:17;;;;34550:2;34535:18;;34528:45;-1:-1:-1;34621:8:24;34609:21;;;;34604:2;34589:18;;34582:49;34668:15;;;34662:3;34647:19;;34640:44;34721:15;;;34715:3;34700:19;;34693:44;34786:6;34774:19;;;34768:3;34753:19;;34746:48;34424:2;34403:15;;;-1:-1:-1;;34399:29:24;34384:45;34380:54;;;-1:-1:-1;33872:928:24:o",
  "language": "Solidity",
  "natspec": {
    "errors": {
      "Empty()": [
        {
          "details": "An operation (e.g. {front}) couldn't be completed due to the queue being empty."
        }
      ],
      "OutOfBounds()": [
        {
          "details": "An operation (e.g. {at}) couldn't be completed due to an index being out of bounds."
        }
      ]
    },
    "kind": "dev",
    "methods": {
      "constructor": {
        "details": "Constructor for HOADAO",
        "params": {
          "_nft": "-- contract address for NFTs"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "offset": [
    771,
    23649
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x16A JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8D977672 GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0xD374A217 GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xF2FDE38B GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x4C2 JUMPI DUP1 PUSH4 0xF4739BD9 EQ PUSH2 0x4E2 JUMPI DUP1 PUSH4 0xF713B7ED EQ PUSH2 0x502 JUMPI DUP1 PUSH4 0xFF981099 EQ PUSH2 0x522 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xD374A217 EQ PUSH2 0x442 JUMPI DUP1 PUSH4 0xE95D2347 EQ PUSH2 0x462 JUMPI DUP1 PUSH4 0xF18C51D3 EQ PUSH2 0x4A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8D977672 EQ PUSH2 0x354 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x38A JUMPI DUP1 PUSH4 0x90B293D8 EQ PUSH2 0x3B2 JUMPI DUP1 PUSH4 0x976217CD EQ PUSH2 0x3C8 JUMPI DUP1 PUSH4 0xB2BAD544 EQ PUSH2 0x3F5 JUMPI DUP1 PUSH4 0xBECA3A16 EQ PUSH2 0x422 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6215597B GT PUSH2 0x123 JUMPI DUP1 PUSH4 0x6215597B EQ PUSH2 0x279 JUMPI DUP1 PUSH4 0x69D03738 EQ PUSH2 0x2BF JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2DF JUMPI DUP1 PUSH4 0x72E185CE EQ PUSH2 0x2F4 JUMPI DUP1 PUSH4 0x826B8EBD EQ PUSH2 0x314 JUMPI DUP1 PUSH4 0x8A6655D6 EQ PUSH2 0x334 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x13CF08B EQ PUSH2 0x176 JUMPI DUP1 PUSH4 0x9265CE6 EQ PUSH2 0x1B0 JUMPI DUP1 PUSH4 0x10190EF1 EQ PUSH2 0x1D2 JUMPI DUP1 PUSH4 0x3B47FED2 EQ PUSH2 0x206 JUMPI DUP1 PUSH4 0x4B50F16A EQ PUSH2 0x22B JUMPI DUP1 PUSH4 0x61F9E9A8 EQ PUSH2 0x259 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x171 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x182 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x196 PUSH2 0x191 CALLDATASIZE PUSH1 0x4 PUSH2 0x3417 JUMP JUMPDEST PUSH2 0x54F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3488 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D0 PUSH2 0x1CB CALLDATASIZE PUSH1 0x4 PUSH2 0x3591 JUMP JUMPDEST PUSH2 0x61B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F2 PUSH2 0x1ED CALLDATASIZE PUSH1 0x4 PUSH2 0x3417 JUMP JUMPDEST PUSH2 0x761 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A7 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x35F0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x212 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x21B PUSH2 0x86B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1A7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x237 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x24B PUSH2 0x246 CALLDATASIZE PUSH1 0x4 PUSH2 0x366F JUMP JUMPDEST PUSH2 0x979 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A7 SWAP3 SWAP2 SWAP1 PUSH2 0x375B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x265 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D0 PUSH2 0x274 CALLDATASIZE PUSH1 0x4 PUSH2 0x3863 JUMP JUMPDEST PUSH2 0xE0D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x285 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B1 PUSH2 0x294 CALLDATASIZE PUSH1 0x4 PUSH2 0x3900 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1A7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D0 PUSH2 0x2DA CALLDATASIZE PUSH1 0x4 PUSH2 0x3937 JUMP JUMPDEST PUSH2 0xE77 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D0 PUSH2 0xEC3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x300 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D0 PUSH2 0x30F CALLDATASIZE PUSH1 0x4 PUSH2 0x39C3 JUMP JUMPDEST PUSH2 0xEF9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x320 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B1 PUSH2 0x32F CALLDATASIZE PUSH1 0x4 PUSH2 0x3417 JUMP JUMPDEST PUSH2 0x136F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x340 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D0 PUSH2 0x34F CALLDATASIZE PUSH1 0x4 PUSH2 0x3A19 JUMP JUMPDEST PUSH2 0x1592 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x360 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x374 PUSH2 0x36F CALLDATASIZE PUSH1 0x4 PUSH2 0x3417 JUMP JUMPDEST PUSH2 0x15CB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A7 SWAP11 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3A45 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x396 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1A7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B1 PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3E8 PUSH2 0x3E3 CALLDATASIZE PUSH1 0x4 PUSH2 0x3417 JUMP JUMPDEST PUSH2 0x16CD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A7 SWAP2 SWAP1 PUSH2 0x3AC6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x401 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x415 PUSH2 0x410 CALLDATASIZE PUSH1 0x4 PUSH2 0x366F JUMP JUMPDEST PUSH2 0x180F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A7 SWAP2 SWAP1 PUSH2 0x3AD9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x42E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D0 PUSH2 0x43D CALLDATASIZE PUSH1 0x4 PUSH2 0x3B3B JUMP JUMPDEST PUSH2 0x1BD5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x44E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D0 PUSH2 0x45D CALLDATASIZE PUSH1 0x4 PUSH2 0x3417 JUMP JUMPDEST PUSH2 0x1D35 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x46E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x6 SLOAD PUSH2 0x488 SWAP1 PUSH1 0xF DUP2 DUP2 SIGNEXTEND SWAP2 PUSH1 0x1 PUSH1 0x80 SHL SWAP1 DIV SWAP1 SIGNEXTEND DUP3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xF SWAP4 DUP5 SIGNEXTEND DUP2 MSTORE SWAP2 SWAP1 SWAP3 SIGNEXTEND PUSH1 0x20 DUP3 ADD MSTORE ADD PUSH2 0x1A7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D0 PUSH2 0x4BD CALLDATASIZE PUSH1 0x4 PUSH2 0x3B8B JUMP JUMPDEST PUSH2 0x206C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D0 PUSH2 0x4DD CALLDATASIZE PUSH1 0x4 PUSH2 0x3937 JUMP JUMPDEST PUSH2 0x2A89 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x21B PUSH2 0x4FD CALLDATASIZE PUSH1 0x4 PUSH2 0x3417 JUMP JUMPDEST PUSH2 0x2B24 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x50E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D0 PUSH2 0x51D CALLDATASIZE PUSH1 0x4 PUSH2 0x3BDA JUMP JUMPDEST PUSH2 0x2CF4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x52E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x542 PUSH2 0x53D CALLDATASIZE PUSH1 0x4 PUSH2 0x3417 JUMP JUMPDEST PUSH2 0x2E91 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A7 SWAP2 SWAP1 PUSH2 0x3C16 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP2 SWAP1 PUSH2 0x56A SWAP1 PUSH2 0x3C5E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x596 SWAP1 PUSH2 0x3C5E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x5E3 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5B8 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5E3 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x5C6 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP PUSH1 0x1 DUP4 ADD SLOAD PUSH1 0x3 SWAP1 SWAP4 ADD SLOAD SWAP2 SWAP3 PUSH2 0xFFFF AND SWAP2 PUSH5 0xFFFFFFFFFF DUP1 DUP3 AND SWAP3 POP PUSH6 0x10000000000 DUP3 DIV DUP2 AND SWAP2 PUSH1 0x1 PUSH1 0x50 SHL SWAP1 DIV AND DUP6 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x630 JUMPI PUSH2 0x630 PUSH2 0x3C98 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x64A SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP DUP2 ISZERO PUSH2 0x6D6 JUMPI PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x6D4 JUMPI DUP4 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x67F JUMPI PUSH2 0x67F PUSH2 0x3C98 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x699 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x6C1 JUMPI PUSH2 0x6C1 PUSH2 0x3C98 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0x664 JUMP JUMPDEST POP JUMPDEST PUSH1 0x0 DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x6E9 SWAP2 SWAP1 PUSH2 0x3CAE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH32 0x637CE8D069E382E64EF71CF191623B88C7E307CE252E908E7F2BABBAD0CB81EA DUP2 DUP7 DUP4 EQ DUP7 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x739 JUMPI PUSH2 0x739 PUSH2 0x3C98 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 PUSH1 0x40 MLOAD PUSH2 0x752 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3CE4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x5 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x771 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x794 SWAP1 PUSH2 0x3C5E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x7C0 SWAP1 PUSH2 0x3C5E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x80D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7E2 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x80D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7F0 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP PUSH1 0x2 SWAP1 SWAP4 ADD SLOAD SWAP2 SWAP3 POP POP PUSH1 0xFF DUP1 DUP3 AND SWAP2 PUSH5 0xFFFFFFFFFF PUSH2 0x100 DUP3 DIV DUP2 AND SWAP3 PUSH7 0x1000000000000 DUP4 DIV AND SWAP2 PUSH3 0xFFFFFF PUSH1 0x1 PUSH1 0x38 SHL DUP3 DIV AND SWAP2 PUSH1 0x1 PUSH1 0x50 SHL DUP3 DIV DUP2 AND SWAP2 PUSH1 0x1 PUSH1 0x78 SHL DUP2 DIV SWAP1 SWAP2 AND SWAP1 PUSH2 0xFFFF PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 SWAP2 DIV AND DUP9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 JUMPDEST PUSH1 0xE SLOAD DUP2 GT PUSH2 0x971 JUMPI PUSH1 0x2 SLOAD PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x1038D37 PUSH1 0xE6 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE CALLER SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP3 PUSH4 0x6352211E SWAP3 SWAP2 AND SWAP1 PUSH4 0x40E34DC0 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8D0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8F4 SWAP2 SWAP1 PUSH2 0x3D15 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x912 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x92F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x953 SWAP2 SWAP1 PUSH2 0x3D2E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x969 JUMPI PUSH1 0x1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x870 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH1 0x0 PUSH2 0x997 PUSH1 0x6 SLOAD PUSH1 0xF DUP2 DUP2 SIGNEXTEND PUSH1 0x1 PUSH1 0x80 SHL SWAP1 SWAP3 DIV SWAP1 SIGNEXTEND SUB SWAP1 JUMP JUMPDEST SWAP1 POP PUSH2 0x9A1 PUSH2 0x3379 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0xB29 JUMPI PUSH2 0x9B9 PUSH1 0x6 DUP3 PUSH2 0x2FBB JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP2 MLOAD PUSH2 0x140 DUP2 ADD SWAP1 SWAP3 MSTORE DUP1 SLOAD SWAP3 SWAP6 POP SWAP1 SWAP2 DUP3 SWAP1 DUP3 SWAP1 PUSH2 0x9E7 SWAP1 PUSH2 0x3C5E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xA13 SWAP1 PUSH2 0x3C5E JUMP JUMPDEST DUP1 ISZERO PUSH2 0xA60 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xA35 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xA60 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xA43 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x1 DUP3 ADD SLOAD PUSH5 0xFFFFFFFFFF SWAP1 DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x4 SWAP1 SWAP3 ADD SLOAD PUSH1 0xFF DUP2 AND PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x100 DUP1 DUP3 DIV PUSH3 0xFFFFFF AND PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x20 SHL DUP3 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB AND PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x70 SHL DUP3 DIV PUSH2 0xFFFF SWAP1 DUP2 AND PUSH1 0xE0 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0x80 SHL DUP4 DIV AND SWAP1 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x90 SHL SWAP1 DIV DUP3 AND PUSH2 0x120 SWAP2 DUP3 ADD MSTORE DUP3 ADD MLOAD SWAP2 SWAP6 POP TIMESTAMP SWAP2 AND GT DUP1 ISZERO PUSH2 0xB15 JUMPI POP DUP8 PUSH5 0xFFFFFFFFFF AND DUP5 PUSH1 0xE0 ADD MLOAD PUSH2 0xFFFF AND EQ JUMPDEST ISZERO PUSH2 0xB21 JUMPI DUP2 PUSH1 0x1 ADD SWAP2 POP JUMPDEST PUSH1 0x1 ADD PUSH2 0x9A6 JUMP JUMPDEST POP DUP1 PUSH1 0x0 SUB PUSH2 0xB96 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x0 SWAP2 DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0xB51 PUSH2 0x3379 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0xB49 JUMPI POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x20 DUP1 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP SWAP4 SWAP12 SWAP2 SWAP11 POP SWAP1 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0xBB1 JUMPI PUSH2 0xBB1 PUSH2 0x34CC JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xBEA JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0xBD7 PUSH2 0x3379 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0xBCF JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0xC07 JUMPI PUSH2 0xC07 PUSH2 0x34CC JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xC30 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP8 DUP2 LT ISZERO PUSH2 0xDFD JUMPI PUSH2 0xC49 PUSH1 0x6 DUP3 PUSH2 0x2FBB JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP2 MLOAD PUSH2 0x140 DUP2 ADD SWAP1 SWAP3 MSTORE DUP1 SLOAD SWAP3 SWAP9 POP SWAP1 SWAP2 DUP3 SWAP1 DUP3 SWAP1 PUSH2 0xC77 SWAP1 PUSH2 0x3C5E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xCA3 SWAP1 PUSH2 0x3C5E JUMP JUMPDEST DUP1 ISZERO PUSH2 0xCF0 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xCC5 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xCF0 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xCD3 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x1 DUP3 ADD SLOAD PUSH5 0xFFFFFFFFFF SWAP1 DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x4 SWAP1 SWAP3 ADD SLOAD PUSH1 0xFF DUP2 AND PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x100 DUP1 DUP3 DIV PUSH3 0xFFFFFF AND PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x20 SHL DUP3 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB AND PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x70 SHL DUP3 DIV PUSH2 0xFFFF SWAP1 DUP2 AND PUSH1 0xE0 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0x80 SHL DUP4 DIV AND SWAP1 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x90 SHL SWAP1 DIV DUP3 AND PUSH2 0x120 SWAP2 DUP3 ADD MSTORE DUP3 ADD MLOAD SWAP2 SWAP9 POP TIMESTAMP SWAP2 AND GT DUP1 ISZERO PUSH2 0xDA5 JUMPI POP DUP11 PUSH5 0xFFFFFFFFFF AND DUP8 PUSH1 0xE0 ADD MLOAD PUSH2 0xFFFF AND EQ JUMPDEST ISZERO PUSH2 0xDF5 JUMPI DUP7 DUP4 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0xDBD JUMPI PUSH2 0xDBD PUSH2 0x3C98 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP6 DUP3 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0xDDB JUMPI PUSH2 0xDDB PUSH2 0x3C98 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP4 PUSH1 0x1 ADD SWAP4 POP DUP5 DUP5 GT PUSH2 0xDFD JUMPI JUMPDEST PUSH1 0x1 ADD PUSH2 0xC36 JUMP JUMPDEST POP SWAP1 SWAP10 SWAP1 SWAP9 POP SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xE15 PUSH2 0x86B JUMP JUMPDEST PUSH2 0xE5D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x135D5CDD081899481BDB881D1A1948189BD85C99 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE6E DUP8 DUP8 PUSH1 0x0 DUP9 DUP9 DUP9 DUP9 DUP9 PUSH2 0x302C JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xEA1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE54 SWAP1 PUSH2 0x3D4B JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xEED JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE54 SWAP1 PUSH2 0x3D4B JUMP JUMPDEST PUSH2 0xEF7 PUSH1 0x0 PUSH2 0x31AB JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x5 SLOAD DUP2 LT ISZERO PUSH2 0x1369 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xF17 SWAP2 SWAP1 PUSH2 0x3D80 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x5 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xF40 JUMPI PUSH2 0xF40 PUSH2 0x3C98 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x1 ADD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xF61 SWAP2 SWAP1 PUSH2 0x3E10 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SUB PUSH2 0x1361 JUMPI TIMESTAMP PUSH1 0x5 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xF90 JUMPI PUSH2 0xF90 PUSH2 0x3C98 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD PUSH1 0x2 ADD SLOAD PUSH1 0x1 PUSH1 0x50 SHL SWAP1 DIV PUSH5 0xFFFFFFFFFF AND GT DUP1 ISZERO SWAP1 PUSH2 0xFF4 JUMPI POP PUSH1 0x5 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xFCE JUMPI PUSH2 0xFCE PUSH2 0x3C98 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD PUSH1 0x2 ADD SLOAD PUSH1 0x1 PUSH1 0x78 SHL SWAP1 DIV PUSH5 0xFFFFFFFFFF AND TIMESTAMP GT ISZERO JUMPDEST PUSH2 0x1036 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x13DD5D1CDA5919481D1A5B59481C195C9A5BD9 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xE54 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH2 0x140 ADD PUSH1 0x40 MSTORE DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH5 0xFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP1 SHL DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x1079 JUMPI PUSH2 0x1079 PUSH2 0x3C98 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x2 ADD PUSH1 0x6 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x10B3 JUMPI PUSH2 0x10B3 PUSH2 0x3C98 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x3 SWAP3 SWAP1 SWAP3 MUL SWAP1 SWAP2 ADD PUSH1 0x2 ADD SLOAD PUSH1 0x1 PUSH1 0x38 SHL SWAP1 DIV PUSH3 0xFFFFFF AND DUP4 MSTORE DUP3 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP5 ADD DUP4 SWAP1 MSTORE PUSH1 0x60 DUP5 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 SWAP1 SWAP4 ADD DUP3 SWAP1 MSTORE PUSH1 0xB SLOAD PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x80 SHL SWAP1 DUP2 SWAP1 DIV PUSH1 0xF SIGNEXTEND DUP1 DUP7 MSTORE PUSH1 0x7 DUP6 MSTORE DUP7 DUP7 KECCAK256 DUP5 SWAP1 SSTORE DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 DUP2 AND PUSH1 0x1 SWAP1 SWAP3 ADD AND SWAP1 SWAP2 MUL OR SWAP1 SSTORE DUP3 MSTORE PUSH1 0xA SWAP1 MSTORE KECCAK256 DUP2 MLOAD SWAP2 SWAP3 POP DUP3 SWAP2 DUP2 SWAP1 PUSH2 0x1148 SWAP1 DUP3 PUSH2 0x3E72 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x1 DUP3 DUP2 ADD DUP1 SLOAD PUSH5 0xFFFFFFFFFF NOT AND PUSH5 0xFFFFFFFFFF SWAP4 DUP5 AND OR SWAP1 SSTORE PUSH1 0x40 DUP5 ADD MLOAD PUSH1 0x2 DUP5 ADD SSTORE PUSH1 0x60 DUP5 ADD MLOAD PUSH1 0x3 DUP5 ADD SSTORE PUSH1 0x80 DUP5 ADD MLOAD PUSH1 0x4 SWAP1 SWAP4 ADD DUP1 SLOAD PUSH1 0xA0 DUP7 ADD MLOAD PUSH1 0xC0 DUP8 ADD MLOAD PUSH1 0xE0 DUP9 ADD MLOAD PUSH2 0x100 DUP1 DUP11 ADD MLOAD PUSH2 0x120 SWAP1 SWAP11 ADD MLOAD PUSH1 0xFF SWAP1 SWAP10 AND PUSH4 0xFFFFFFFF NOT SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 OR PUSH3 0xFFFFFF SWAP1 SWAP4 AND SWAP1 SWAP4 MUL SWAP2 SWAP1 SWAP2 OR PUSH5 0x100000000 PUSH1 0x1 PUSH1 0x80 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x20 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 MUL PUSH2 0xFFFF PUSH1 0x70 SHL NOT AND OR PUSH1 0x1 PUSH1 0x70 SHL PUSH2 0xFFFF SWAP3 DUP4 AND MUL OR PUSH7 0xFFFFFFFFFFFFFF PUSH1 0x80 SHL NOT AND PUSH1 0x1 PUSH1 0x80 SHL SWAP2 SWAP1 SWAP7 AND MUL PUSH5 0xFFFFFFFFFF PUSH1 0x90 SHL NOT AND SWAP5 SWAP1 SWAP5 OR PUSH1 0x1 PUSH1 0x90 SHL SWAP4 SWAP1 SWAP3 AND SWAP3 SWAP1 SWAP3 MUL OR SWAP1 SWAP2 SSTORE PUSH1 0xB DUP1 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x1247 SWAP1 DUP5 SWAP1 PUSH2 0x3F47 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x125A SWAP1 POP TIMESTAMP PUSH3 0x15180 PUSH2 0x3F47 JUMP JUMPDEST PUSH1 0x5 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x126D JUMPI PUSH2 0x126D PUSH2 0x3C98 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH5 0xFFFFFFFFFF DUP9 AND DUP5 MSTORE PUSH1 0x3 SWAP1 SWAP3 MUL SWAP1 SWAP2 ADD SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 SWAP2 SWAP1 DUP5 SWAP1 DUP2 LT PUSH2 0x12A8 JUMPI PUSH2 0x12A8 PUSH2 0x3C98 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x2 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND PUSH2 0x12D2 SWAP2 SWAP1 PUSH2 0x3F5F JUMP JUMPDEST PUSH1 0x5 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x12E5 JUMPI PUSH2 0x12E5 PUSH2 0x3C98 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x2 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH2 0xFFFF MUL NOT AND SWAP1 DUP4 PUSH2 0xFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0xBCC1EA15519F3ACFB49E91DE851E553B2C024B9AB85CEE8FFD8FE4E4E0A7876D DUP4 PUSH1 0x1 PUSH1 0xB SLOAD PUSH2 0x1341 SWAP2 SWAP1 PUSH2 0x3F82 JUMP JUMPDEST DUP8 TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0x1353 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3F99 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP PUSH2 0x1369 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0xEFC JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x9 SLOAD DUP3 LT PUSH2 0x13B5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x1B9BC81CDD58DA081C1C9BDC1BDCD85B PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xE54 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0x1 PUSH1 0x50 SHL SWAP1 DIV PUSH5 0xFFFFFFFFFF AND TIMESTAMP GT PUSH2 0x1419 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x766F74696E67207374696C6C20616374697665 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xE54 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0xFFFF AND DUP2 LT ISZERO PUSH2 0x1547 JUMPI DUP3 PUSH1 0x8 PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD DUP3 PUSH1 0x8 DUP2 LT PUSH2 0x1465 JUMPI PUSH2 0x1465 PUSH2 0x3C98 JUMP JUMPDEST PUSH1 0x10 SWAP2 DUP3 DUP3 DIV ADD SWAP2 SWAP1 MOD PUSH1 0x2 MUL SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND PUSH2 0xFFFF AND GT ISZERO PUSH2 0x14E5 JUMPI PUSH1 0x8 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD DUP2 PUSH1 0x8 DUP2 LT PUSH2 0x14B0 JUMPI PUSH2 0x14B0 PUSH2 0x3C98 JUMP JUMPDEST PUSH1 0x10 SWAP2 DUP3 DUP3 DIV ADD SWAP2 SWAP1 MOD PUSH1 0x2 MUL SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND PUSH2 0xFFFF AND SWAP3 POP DUP1 SWAP4 POP DUP2 PUSH1 0x1 SUB PUSH2 0x14E0 JUMPI PUSH1 0x0 SWAP2 POP JUMPDEST PUSH2 0x1535 JUMP JUMPDEST DUP3 PUSH1 0x8 PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD DUP3 PUSH1 0x8 DUP2 LT PUSH2 0x150D JUMPI PUSH2 0x150D PUSH2 0x3C98 JUMP JUMPDEST PUSH1 0x10 SWAP2 DUP3 DUP3 DIV ADD SWAP2 SWAP1 MOD PUSH1 0x2 MUL SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND PUSH2 0xFFFF AND SUB PUSH2 0x1535 JUMPI PUSH1 0x1 SWAP2 POP JUMPDEST DUP1 PUSH2 0x153F DUP2 PUSH2 0x3FD0 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1420 JUMP JUMPDEST POP DUP1 ISZERO PUSH2 0x1589 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x3A3432B932903BB0B99030903A34B297 PUSH1 0x81 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xE54 JUMP JUMPDEST POP SWAP1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x26BAB9BA1031329036B2B6B132B9 PUSH1 0x91 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xE54 JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP2 SWAP1 PUSH2 0x15E6 SWAP1 PUSH2 0x3C5E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1612 SWAP1 PUSH2 0x3C5E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x165F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1634 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x165F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1642 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP PUSH1 0x1 DUP5 ADD SLOAD PUSH1 0x2 DUP6 ADD SLOAD PUSH1 0x3 DUP7 ADD SLOAD PUSH1 0x4 SWAP1 SWAP7 ADD SLOAD SWAP5 SWAP6 PUSH5 0xFFFFFFFFFF SWAP3 DUP4 AND SWAP6 SWAP2 SWAP5 POP SWAP3 POP PUSH1 0xFF DUP2 AND SWAP2 PUSH3 0xFFFFFF PUSH2 0x100 DUP4 DIV AND SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB PUSH1 0x1 PUSH1 0x20 SHL DUP3 DIV AND SWAP2 PUSH2 0xFFFF PUSH1 0x1 PUSH1 0x70 SHL DUP4 DIV DUP2 AND SWAP3 PUSH1 0x1 PUSH1 0x80 SHL DUP2 DIV SWAP1 SWAP2 AND SWAP2 PUSH1 0x1 PUSH1 0x90 SHL SWAP1 SWAP2 DIV AND DUP11 JUMP JUMPDEST PUSH2 0x16D5 PUSH2 0x3379 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP2 MLOAD PUSH2 0x140 DUP2 ADD SWAP1 SWAP3 MSTORE DUP1 SLOAD DUP3 SWAP1 DUP3 SWAP1 PUSH2 0x16FE SWAP1 PUSH2 0x3C5E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x172A SWAP1 PUSH2 0x3C5E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1777 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x174C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1777 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x175A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x1 DUP3 ADD SLOAD PUSH5 0xFFFFFFFFFF SWAP1 DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x4 SWAP1 SWAP3 ADD SLOAD PUSH1 0xFF DUP2 AND PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x100 DUP1 DUP3 DIV PUSH3 0xFFFFFF AND PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x20 SHL DUP3 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB AND PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x70 SHL DUP3 DIV PUSH2 0xFFFF SWAP1 DUP2 AND PUSH1 0xE0 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0x80 SHL DUP4 DIV AND SWAP1 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x90 SHL SWAP1 DIV SWAP1 SWAP2 AND PUSH2 0x120 SWAP1 SWAP2 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x5 SLOAD DUP2 LT ISZERO PUSH2 0x1927 JUMPI TIMESTAMP PUSH1 0x5 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1833 JUMPI PUSH2 0x1833 PUSH2 0x3C98 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH5 0xFFFFFFFFFF DUP10 AND DUP5 MSTORE PUSH1 0x3 SWAP1 SWAP3 MUL SWAP1 SWAP2 ADD SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD LT DUP1 ISZERO PUSH2 0x1897 JUMPI POP TIMESTAMP PUSH1 0x5 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1872 JUMPI PUSH2 0x1872 PUSH2 0x3C98 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD PUSH1 0x2 ADD SLOAD PUSH1 0x1 PUSH1 0x50 SHL SWAP1 DIV PUSH5 0xFFFFFFFFFF AND GT ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x18D6 JUMPI POP TIMESTAMP PUSH1 0x5 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x18B2 JUMPI PUSH2 0x18B2 PUSH2 0x3C98 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD PUSH1 0x2 ADD SLOAD PUSH1 0x1 PUSH1 0x78 SHL SWAP1 DIV PUSH5 0xFFFFFFFFFF AND GT JUMPDEST DUP1 ISZERO PUSH2 0x1913 JUMPI POP PUSH1 0x1 PUSH1 0x5 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x18F2 JUMPI PUSH2 0x18F2 PUSH2 0x3C98 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD PUSH1 0x2 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH2 0xFFFF AND GT JUMPDEST ISZERO PUSH2 0x191F JUMPI DUP2 PUSH1 0x1 ADD SWAP2 POP JUMPDEST PUSH1 0x1 ADD PUSH2 0x1815 JUMP JUMPDEST POP DUP1 PUSH1 0x0 SUB PUSH2 0x1993 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x0 SWAP2 DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x1947 JUMPI SWAP1 POP POP SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1981 JUMPI PUSH2 0x1981 PUSH2 0x3C98 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x19AD JUMPI PUSH2 0x19AD PUSH2 0x34CC JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x19E0 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x19CB JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x5 SLOAD DUP2 LT ISZERO PUSH2 0x1BCB JUMPI TIMESTAMP PUSH1 0x5 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1A05 JUMPI PUSH2 0x1A05 PUSH2 0x3C98 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH5 0xFFFFFFFFFF DUP12 AND DUP5 MSTORE PUSH1 0x3 SWAP1 SWAP3 MUL SWAP1 SWAP2 ADD SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD LT DUP1 ISZERO PUSH2 0x1A69 JUMPI POP TIMESTAMP PUSH1 0x5 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1A44 JUMPI PUSH2 0x1A44 PUSH2 0x3C98 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD PUSH1 0x2 ADD SLOAD PUSH1 0x1 PUSH1 0x50 SHL SWAP1 DIV PUSH5 0xFFFFFFFFFF AND GT ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x1AA8 JUMPI POP TIMESTAMP PUSH1 0x5 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1A84 JUMPI PUSH2 0x1A84 PUSH2 0x3C98 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD PUSH1 0x2 ADD SLOAD PUSH1 0x1 PUSH1 0x78 SHL SWAP1 DIV PUSH5 0xFFFFFFFFFF AND GT JUMPDEST DUP1 ISZERO PUSH2 0x1AE5 JUMPI POP PUSH1 0x1 PUSH1 0x5 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1AC4 JUMPI PUSH2 0x1AC4 PUSH2 0x3C98 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD PUSH1 0x2 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH2 0xFFFF AND GT JUMPDEST ISZERO PUSH2 0x1BC3 JUMPI PUSH1 0x5 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1AFD JUMPI PUSH2 0x1AFD PUSH2 0x3C98 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x1B19 SWAP1 PUSH2 0x3C5E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1B45 SWAP1 PUSH2 0x3C5E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1B92 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1B67 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1B92 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1B75 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1BA9 JUMPI PUSH2 0x1BA9 PUSH2 0x3C98 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP2 PUSH1 0x1 ADD SWAP2 POP DUP4 DUP3 LT ISZERO PUSH2 0x1BCB JUMPI JUMPDEST PUSH1 0x1 ADD PUSH2 0x19E7 JUMP JUMPDEST POP SWAP1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x1BDD PUSH2 0x86B JUMP JUMPDEST PUSH2 0x1C20 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x135D5CDD081899481BDB881D1A1948189BD85C99 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xE54 JUMP JUMPDEST PUSH1 0x1 DUP6 PUSH2 0xFFFF AND GT DUP1 ISZERO PUSH2 0x1C39 JUMPI POP PUSH2 0x101 DUP6 PUSH2 0xFFFF AND LT JUMPDEST PUSH2 0x1C85 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x696E76616C6964206E756D626572206F66206F7074696F6E7300000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xE54 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x9 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1C98 SWAP2 SWAP1 PUSH2 0x3F47 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x9 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 DUP2 ADD DUP1 SLOAD PUSH15 0xFFFFFFFFFFFFFFFFFFFF0000000000 NOT AND PUSH6 0x10000000000 PUSH5 0xFFFFFFFFFF DUP8 DUP2 AND SWAP2 SWAP1 SWAP2 MUL PUSH5 0xFFFFFFFFFF PUSH1 0x50 SHL NOT AND SWAP2 SWAP1 SWAP2 OR PUSH1 0x1 PUSH1 0x50 SHL SWAP2 DUP7 AND SWAP2 SWAP1 SWAP2 MUL OR SWAP1 SSTORE PUSH1 0x1 DUP2 ADD DUP1 SLOAD PUSH2 0xFFFF NOT AND PUSH2 0xFFFF DUP9 AND OR SWAP1 SSTORE DUP1 PUSH2 0x1D17 DUP9 DUP11 DUP4 PUSH2 0x3FE9 JUMP JUMPDEST POP PUSH2 0x1D2B DUP9 DUP9 PUSH1 0x9 SLOAD PUSH1 0x0 DUP10 DUP10 DUP10 DUP10 PUSH2 0x302C JUMP JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D50 PUSH1 0x6 SLOAD PUSH1 0xF DUP2 DUP2 SIGNEXTEND PUSH1 0x1 PUSH1 0x80 SHL SWAP1 SWAP3 DIV SWAP1 SIGNEXTEND SUB SWAP1 JUMP JUMPDEST SWAP1 POP PUSH2 0x1D5A PUSH2 0x3379 JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2065 JUMPI PUSH2 0x1D71 PUSH1 0x6 DUP3 PUSH2 0x2FBB JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP2 MLOAD PUSH2 0x140 DUP2 ADD SWAP1 SWAP3 MSTORE DUP1 SLOAD SWAP3 SWAP5 POP SWAP1 SWAP2 DUP3 SWAP1 DUP3 SWAP1 PUSH2 0x1D9F SWAP1 PUSH2 0x3C5E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1DCB SWAP1 PUSH2 0x3C5E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1E18 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1DED JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1E18 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1DFB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x1 DUP3 ADD SLOAD PUSH5 0xFFFFFFFFFF SWAP1 DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x4 SWAP1 SWAP3 ADD SLOAD PUSH1 0xFF DUP2 AND PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x100 DUP1 DUP3 DIV PUSH3 0xFFFFFF AND PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x20 SHL DUP3 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB AND PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x70 SHL DUP3 DIV PUSH2 0xFFFF SWAP1 DUP2 AND PUSH1 0xE0 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0x80 SHL DUP4 DIV AND SWAP1 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x90 SHL SWAP1 DIV DUP3 AND PUSH2 0x120 SWAP2 DUP3 ADD MSTORE DUP3 ADD MLOAD SWAP2 SWAP5 POP TIMESTAMP SWAP2 AND LT DUP1 ISZERO PUSH2 0x1ECA JUMPI POP DUP5 DUP4 PUSH1 0x20 ADD MLOAD PUSH5 0xFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x1EDF JUMPI POP DUP5 DUP4 PUSH2 0x100 ADD MLOAD PUSH2 0xFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x205D JUMPI PUSH2 0xFFFF DUP6 AND PUSH1 0xE0 DUP5 ADD MSTORE PUSH1 0xC SLOAD PUSH2 0x1EFB SWAP1 TIMESTAMP PUSH2 0x3F47 JUMP JUMPDEST PUSH5 0xFFFFFFFFFF AND PUSH2 0x120 DUP5 ADD MSTORE PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP4 MLOAD DUP5 SWAP2 SWAP1 DUP2 SWAP1 PUSH2 0x1F27 SWAP1 DUP3 PUSH2 0x3E72 JUMP JUMPDEST POP PUSH1 0x20 DUP3 DUP2 ADD MLOAD PUSH1 0x1 DUP4 ADD DUP1 SLOAD PUSH5 0xFFFFFFFFFF NOT AND PUSH5 0xFFFFFFFFFF SWAP3 DUP4 AND OR SWAP1 SSTORE PUSH1 0x40 DUP1 DUP6 ADD MLOAD PUSH1 0x2 DUP6 ADD SSTORE PUSH1 0x60 DUP6 ADD MLOAD PUSH1 0x3 DUP6 ADD SSTORE PUSH1 0x80 DUP6 ADD MLOAD PUSH1 0x4 SWAP1 SWAP5 ADD DUP1 SLOAD PUSH1 0xA0 DUP8 ADD MLOAD PUSH1 0xC0 DUP9 ADD MLOAD PUSH1 0xE0 DUP10 ADD MLOAD PUSH2 0x100 DUP1 DUP12 ADD MLOAD PUSH2 0x120 SWAP1 SWAP12 ADD MLOAD PUSH1 0xFF SWAP1 SWAP11 AND PUSH4 0xFFFFFFFF NOT SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 OR PUSH3 0xFFFFFF SWAP1 SWAP4 AND SWAP1 SWAP4 MUL SWAP2 SWAP1 SWAP2 OR PUSH5 0x100000000 PUSH1 0x1 PUSH1 0x80 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x20 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 MUL PUSH2 0xFFFF PUSH1 0x70 SHL NOT AND OR PUSH1 0x1 PUSH1 0x70 SHL PUSH2 0xFFFF SWAP3 DUP4 AND MUL OR PUSH7 0xFFFFFFFFFFFFFF PUSH1 0x80 SHL NOT AND PUSH1 0x1 PUSH1 0x80 SHL SWAP2 SWAP1 SWAP8 AND MUL PUSH5 0xFFFFFFFFFF PUSH1 0x90 SHL NOT AND SWAP6 SWAP1 SWAP6 OR PUSH1 0x1 PUSH1 0x90 SHL SWAP5 SWAP1 SWAP3 AND SWAP4 SWAP1 SWAP4 MUL OR SWAP1 SWAP3 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0xA SWAP1 SWAP3 MSTORE SWAP1 DUP2 SWAP1 KECCAK256 SWAP1 MLOAD PUSH32 0xF20A22B1AA6D8BA4BF99C845FB1F02F4879BA83155BDE0F82F49CB58675DF268 SWAP2 PUSH2 0x2054 SWAP2 DUP9 SWAP2 DUP7 SWAP2 PUSH2 0x40A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST PUSH1 0x1 ADD PUSH2 0x1D5E JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x31A9108F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE CALLER SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x6352211E SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x20B5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x20D9 SWAP2 SWAP1 PUSH2 0x3D2E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 ISZERO PUSH2 0x210A JUMPI POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH1 0x1 PUSH1 0x70 SHL SWAP1 DIV PUSH2 0xFFFF AND DUP4 EQ JUMPDEST PUSH2 0x2156 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D757374206265206F776E6572206F662061737369676E65642077697A617264 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xE54 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x2164 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP2 MLOAD PUSH2 0x140 DUP2 ADD SWAP1 SWAP3 MSTORE DUP1 SLOAD DUP3 SWAP1 DUP3 SWAP1 PUSH2 0x218C SWAP1 PUSH2 0x3C5E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x21B8 SWAP1 PUSH2 0x3C5E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2205 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x21DA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2205 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x21E8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x1 DUP3 DUP2 ADD SLOAD PUSH5 0xFFFFFFFFFF SWAP1 DUP2 AND PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x2 DUP5 ADD SLOAD PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x4 SWAP1 SWAP4 ADD SLOAD PUSH1 0xFF DUP2 AND PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x100 DUP1 DUP3 DIV PUSH3 0xFFFFFF AND PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0x20 SHL DUP3 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB AND PUSH1 0xC0 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0x70 SHL DUP3 DIV PUSH2 0xFFFF SWAP1 DUP2 AND PUSH1 0xE0 DUP7 ADD MSTORE PUSH1 0x1 PUSH1 0x80 SHL DUP4 DIV DUP2 AND DUP3 DUP7 ADD MSTORE PUSH1 0x1 PUSH1 0x90 SHL SWAP1 SWAP3 DIV SWAP1 SWAP5 AND PUSH2 0x120 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP2 DUP4 ADD MLOAD SWAP3 SWAP4 POP PUSH1 0x0 SWAP3 AND ISZERO PUSH2 0x2322 JUMPI PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x2320 JUMPI DUP5 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x22CB JUMPI PUSH2 0x22CB PUSH2 0x3C98 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x22E5 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x230D JUMPI PUSH2 0x230D PUSH2 0x3C98 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0x22B0 JUMP JUMPDEST POP JUMPDEST PUSH1 0x0 DUP5 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2335 SWAP2 SWAP1 PUSH2 0x3CAE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 DUP2 DUP6 PUSH1 0x40 ADD MLOAD EQ PUSH2 0x2361 JUMPI PUSH1 0x0 PUSH2 0x2364 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH1 0x20 DUP7 DUP2 ADD MLOAD PUSH1 0x40 DUP1 MLOAD DUP13 DUP2 MSTORE PUSH5 0xFFFFFFFFFF SWAP1 SWAP3 AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP2 ADD DUP10 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0xFF SWAP2 SWAP1 SWAP2 AND PUSH1 0x1 DUP2 EQ PUSH1 0x80 DUP4 ADD MSTORE SWAP2 POP PUSH32 0xE3F0E138F100DEAF328BA1DEF71C39DADE8CD971BA0074D935EE648E54532FAE SWAP1 PUSH1 0xA0 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 DUP1 PUSH1 0x1 SUB PUSH2 0x2687 JUMPI PUSH1 0x0 PUSH1 0x2 DUP7 PUSH1 0xC0 ADD MLOAD PUSH2 0x23E7 SWAP2 SWAP1 PUSH2 0x4173 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0xE0 DUP9 ADD MLOAD PUSH1 0x40 MLOAD PUSH4 0x31A9108F PUSH1 0xE1 SHL DUP2 MSTORE PUSH2 0xFFFF SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP3 POP PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x6352211E SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x244A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x246E SWAP2 SWAP1 PUSH2 0x3D2E JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x20 DUP10 ADD MLOAD PUSH1 0xA0 DUP11 ADD MLOAD PUSH1 0x40 MLOAD PUSH4 0x8AD4D6A5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH5 0xFFFFFFFFFF SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH3 0xFFFFFF AND PUSH1 0x24 DUP3 ADD MSTORE SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x8AD4D6A5 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x24D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x24E4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x2 SLOAD PUSH1 0xE0 DUP11 ADD MLOAD PUSH1 0xD SLOAD PUSH1 0x40 MLOAD PUSH4 0x8AD4D6A5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH2 0xFFFF SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP3 POP PUSH4 0x8AD4D6A5 SWAP2 POP PUSH1 0x44 ADD JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2540 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2554 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 POP PUSH2 0x2571 DUP3 DUP3 PUSH2 0x33CD JUMP JUMPDEST POP PUSH1 0x1 DUP2 ADD DUP1 SLOAD PUSH5 0xFFFFFFFFFF NOT AND SWAP1 SSTORE PUSH1 0x0 PUSH1 0x2 DUP3 ADD DUP2 SWAP1 SSTORE PUSH1 0x3 DUP3 ADD DUP2 SWAP1 SSTORE PUSH1 0x4 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xB8 SHL SUB NOT AND SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP6 SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x25EF JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x25F4 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x2616 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE54 SWAP1 PUSH2 0x41A7 JUMP JUMPDEST PUSH1 0x40 MLOAD CALLER SWAP1 DUP6 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2656 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x265B JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP DUP2 PUSH2 0x267E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE54 SWAP1 PUSH2 0x41A7 JUMP JUMPDEST POP POP POP POP PUSH2 0x29F2 JUMP JUMPDEST DUP5 PUSH2 0x100 ADD MLOAD PUSH2 0xFFFF AND PUSH1 0x0 SUB PUSH2 0x27B9 JUMPI PUSH2 0xFFFF DUP9 AND PUSH2 0x100 DUP7 ADD MSTORE PUSH1 0x60 DUP6 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP6 MLOAD DUP7 SWAP2 SWAP1 DUP2 SWAP1 PUSH2 0x26C9 SWAP1 DUP3 PUSH2 0x3E72 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH5 0xFFFFFFFFFF NOT AND PUSH5 0xFFFFFFFFFF SWAP3 DUP4 AND OR SWAP1 SSTORE PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x2 DUP4 ADD SSTORE PUSH1 0x60 DUP4 ADD MLOAD PUSH1 0x3 DUP4 ADD SSTORE PUSH1 0x80 DUP4 ADD MLOAD PUSH1 0x4 SWAP1 SWAP3 ADD DUP1 SLOAD PUSH1 0xA0 DUP6 ADD MLOAD PUSH1 0xC0 DUP7 ADD MLOAD PUSH1 0xE0 DUP8 ADD MLOAD PUSH2 0x100 DUP1 DUP10 ADD MLOAD PUSH2 0x120 SWAP1 SWAP10 ADD MLOAD PUSH1 0xFF SWAP1 SWAP9 AND PUSH4 0xFFFFFFFF NOT SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 OR PUSH3 0xFFFFFF SWAP1 SWAP4 AND SWAP1 SWAP4 MUL SWAP2 SWAP1 SWAP2 OR PUSH5 0x100000000 PUSH1 0x1 PUSH1 0x80 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x20 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 MUL PUSH2 0xFFFF PUSH1 0x70 SHL NOT AND OR PUSH1 0x1 PUSH1 0x70 SHL PUSH2 0xFFFF SWAP3 DUP4 AND MUL OR PUSH7 0xFFFFFFFFFFFFFF PUSH1 0x80 SHL NOT AND PUSH1 0x1 PUSH1 0x80 SHL SWAP2 SWAP1 SWAP6 AND MUL PUSH5 0xFFFFFFFFFF PUSH1 0x90 SHL NOT AND SWAP4 SWAP1 SWAP4 OR PUSH1 0x1 PUSH1 0x90 SHL SWAP3 SWAP1 SWAP2 AND SWAP2 SWAP1 SWAP2 MUL OR SWAP1 SSTORE PUSH1 0x0 SWAP3 POP JUMPDEST DUP2 DUP6 PUSH1 0x60 ADD MLOAD SUB PUSH2 0x290C JUMPI PUSH1 0x0 PUSH1 0x2 DUP7 PUSH1 0xC0 ADD MLOAD PUSH2 0x27D7 SWAP2 SWAP1 PUSH2 0x4173 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x100 DUP9 ADD MLOAD PUSH1 0x40 MLOAD PUSH4 0x31A9108F PUSH1 0xE1 SHL DUP2 MSTORE PUSH2 0xFFFF SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP3 POP PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x6352211E SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x283B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x285F SWAP2 SWAP1 PUSH2 0x3D2E JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x100 DUP10 ADD MLOAD PUSH1 0xD SLOAD PUSH1 0x40 MLOAD PUSH4 0x8AD4D6A5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH2 0xFFFF SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x8AD4D6A5 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x28B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x28CC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x2 SLOAD PUSH1 0xD SLOAD PUSH1 0x40 MLOAD PUSH4 0x8AD4D6A5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP16 SWAP1 MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP3 POP PUSH4 0x8AD4D6A5 SWAP2 POP PUSH1 0x44 ADD PUSH2 0x2526 JUMP JUMPDEST PUSH1 0xC0 DUP6 ADD MLOAD PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 PUSH2 0x2936 DUP3 DUP3 PUSH2 0x33CD JUMP JUMPDEST POP PUSH1 0x1 DUP2 ADD DUP1 SLOAD PUSH5 0xFFFFFFFFFF NOT AND SWAP1 SSTORE PUSH1 0x0 PUSH1 0x2 DUP3 ADD DUP2 SWAP1 SSTORE PUSH1 0x3 DUP3 ADD DUP2 SWAP1 SSTORE PUSH1 0x4 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xB8 SHL SUB NOT AND SWAP1 SSTORE DUP1 PUSH2 0x297D PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x29C7 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x29CC JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x29EE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE54 SWAP1 PUSH2 0x41A7 JUMP JUMPDEST POP POP POP JUMPDEST DUP3 ISZERO PUSH2 0x1D2B JUMPI PUSH1 0x0 PUSH2 0x2A13 PUSH1 0x6 SLOAD PUSH1 0xF DUP2 DUP2 SIGNEXTEND PUSH1 0x1 PUSH1 0x80 SHL SWAP1 SWAP3 DIV SWAP1 SIGNEXTEND SUB SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2A7D JUMPI DUP9 PUSH2 0x2A2C PUSH1 0x6 DUP4 PUSH2 0x2FBB JUMP JUMPDEST SUB PUSH2 0x2A75 JUMPI PUSH1 0x0 PUSH2 0x2A3D PUSH1 0x6 PUSH2 0x31FD JUMP JUMPDEST SWAP1 POP DUP2 ISZERO PUSH2 0x2A73 JUMPI PUSH1 0x6 SLOAD DUP2 SWAP1 PUSH1 0x7 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x2A5E SWAP1 DUP7 SWAP1 PUSH1 0xF SIGNEXTEND PUSH2 0x41D5 JUMP JUMPDEST PUSH1 0xF SIGNEXTEND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SSTORE JUMPDEST POP JUMPDEST PUSH1 0x1 ADD PUSH2 0x2A18 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2AB3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE54 SWAP1 PUSH2 0x3D4B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x2B18 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xE54 JUMP JUMPDEST PUSH2 0x2B21 DUP2 PUSH2 0x31AB JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2B40 PUSH1 0x6 SLOAD PUSH1 0xF DUP2 DUP2 SIGNEXTEND PUSH1 0x1 PUSH1 0x80 SHL SWAP1 SWAP3 DIV SWAP1 SIGNEXTEND SUB SWAP1 JUMP JUMPDEST SWAP1 POP PUSH2 0x2B4A PUSH2 0x3379 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2CE9 JUMPI PUSH1 0xA PUSH1 0x0 PUSH2 0x2B64 PUSH1 0x6 DUP5 PUSH2 0x2FBB JUMP JUMPDEST PUSH1 0x0 SHR DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH2 0x140 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD DUP1 SLOAD PUSH2 0x2B91 SWAP1 PUSH2 0x3C5E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2BBD SWAP1 PUSH2 0x3C5E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2C0A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2BDF JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2C0A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2BED JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x1 DUP3 ADD SLOAD PUSH5 0xFFFFFFFFFF SWAP1 DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x4 SWAP1 SWAP3 ADD SLOAD PUSH1 0xFF DUP2 AND PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x100 DUP1 DUP3 DIV PUSH3 0xFFFFFF AND PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x20 SHL DUP3 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB AND PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x70 SHL DUP3 DIV PUSH2 0xFFFF SWAP1 DUP2 AND PUSH1 0xE0 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0x80 SHL DUP4 DIV AND SWAP1 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x90 SHL SWAP1 DIV DUP3 AND PUSH2 0x120 SWAP2 DUP3 ADD MSTORE DUP3 ADD MLOAD SWAP2 SWAP4 POP TIMESTAMP SWAP2 AND LT DUP1 ISZERO PUSH2 0x2CBC JUMPI POP DUP5 DUP3 PUSH1 0x20 ADD MLOAD PUSH5 0xFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x2CD1 JUMPI POP DUP5 DUP3 PUSH2 0x100 ADD MLOAD PUSH2 0xFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x2CE1 JUMPI POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x2B4D JUMP JUMPDEST POP PUSH1 0x0 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x5 SLOAD DUP2 LT ISZERO PUSH2 0x2E8D JUMPI DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2D12 SWAP2 SWAP1 PUSH2 0x4216 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x5 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x2D3B JUMPI PUSH2 0x2D3B PUSH2 0x3C98 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x1 ADD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2D5C SWAP2 SWAP1 PUSH2 0x4232 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SUB PUSH2 0x2E85 JUMPI PUSH1 0x0 PUSH1 0x5 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x2D8C JUMPI PUSH2 0x2D8C PUSH2 0x3C98 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD SWAP1 POP PUSH1 0x0 PUSH1 0x5 PUSH1 0x1 PUSH1 0x5 DUP1 SLOAD SWAP1 POP PUSH2 0x2DB2 SWAP2 SWAP1 PUSH2 0x3F82 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x2DC2 JUMPI PUSH2 0x2DC2 PUSH2 0x3C98 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD SWAP1 POP DUP1 SWAP2 POP PUSH1 0x5 PUSH1 0x1 PUSH1 0x5 DUP1 SLOAD SWAP1 POP PUSH2 0x2DE9 SWAP2 SWAP1 PUSH2 0x3F82 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x2DF9 JUMPI PUSH2 0x2DF9 PUSH2 0x3C98 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH1 0x0 PUSH2 0x2E19 SWAP2 SWAP1 PUSH2 0x33CD JUMP JUMPDEST POP PUSH1 0x2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xB0 SHL SUB NOT AND SWAP1 SSTORE PUSH1 0x5 DUP1 SLOAD PUSH2 0x2E3B SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x3F82 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x2E4B JUMPI PUSH2 0x2E4B PUSH2 0x3C98 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH1 0x0 PUSH2 0x2E6B SWAP2 SWAP1 PUSH2 0x33CD JUMP JUMPDEST POP PUSH1 0x2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xB0 SHL SUB NOT AND SWAP1 SSTORE POP PUSH2 0x2E8D SWAP1 POP JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x2CF7 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x9 SLOAD DUP3 LT PUSH2 0x2ED7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x1B9BC81CDD58DA081C1C9BDC1BDCD85B PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xE54 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0xFFFF AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2F04 JUMPI PUSH2 0x2F04 PUSH2 0x34CC JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2F2D JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x2FB4 JUMPI PUSH1 0x8 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD DUP2 PUSH1 0x8 DUP2 LT PUSH2 0x2F63 JUMPI PUSH2 0x2F63 PUSH2 0x3C98 JUMP JUMPDEST PUSH1 0x10 SWAP2 DUP3 DUP3 DIV ADD SWAP2 SWAP1 MOD PUSH1 0x2 MUL SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2F8F JUMPI PUSH2 0x2F8F PUSH2 0x3C98 JUMP JUMPDEST PUSH2 0xFFFF SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE DUP1 PUSH2 0x2FAC DUP2 PUSH2 0x3FD0 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2F33 JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2FDE PUSH2 0x2FCA DUP5 PUSH2 0x327C JUMP JUMPDEST DUP6 SLOAD PUSH2 0x2FD9 SWAP2 SWAP1 PUSH1 0xF SIGNEXTEND PUSH2 0x41D5 JUMP JUMPDEST PUSH2 0x32EA JUMP JUMPDEST DUP5 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x80 SHL SWAP1 DIV PUSH1 0xF SWAP1 DUP2 SIGNEXTEND SWAP1 DUP3 SWAP1 SIGNEXTEND SLT PUSH2 0x3011 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2D0483C5 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xF SIGNEXTEND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 SWAP4 SWAP1 SWAP4 ADD PUSH1 0x20 MSTORE POP POP PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP1 DUP4 SSTORE PUSH1 0x0 DUP4 DUP2 MSTORE SWAP2 SWAP3 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0x304F JUMPI PUSH2 0x304F PUSH2 0x3C98 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD SWAP1 POP PUSH1 0x1 DUP2 ADD PUSH2 0x3070 DUP11 DUP13 DUP4 PUSH2 0x3FE9 JUMP JUMPDEST POP PUSH1 0x0 DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP8 DUP2 PUSH1 0x2 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH5 0xFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH5 0xFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP7 DUP2 PUSH1 0x2 ADD PUSH1 0x6 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP DUP6 DUP2 PUSH1 0x2 ADD PUSH1 0x7 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH3 0xFFFFFF MUL NOT AND SWAP1 DUP4 PUSH3 0xFFFFFF AND MUL OR SWAP1 SSTORE POP DUP5 DUP2 PUSH1 0x2 ADD PUSH1 0xA PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH5 0xFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH5 0xFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 DUP2 PUSH1 0x2 ADD PUSH1 0xF PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH5 0xFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH5 0xFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 DUP2 PUSH1 0x2 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH2 0xFFFF MUL NOT AND SWAP1 DUP4 PUSH2 0xFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0x2810025950962E3CD71FD98C2DC111FFBDB2A129B36771DF8D36A7DE2FE3E4E0 DUP11 DUP11 DUP11 DUP11 DUP11 DUP11 DUP11 DUP11 PUSH1 0x40 MLOAD PUSH2 0x3197 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x42A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3218 DUP3 SLOAD PUSH1 0xF DUP2 DUP2 SIGNEXTEND PUSH1 0x1 PUSH1 0x80 SHL SWAP1 SWAP3 DIV SWAP1 SIGNEXTEND SGT ISZERO SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x3236 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1ED95095 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP DUP1 SLOAD PUSH1 0xF SIGNEXTEND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP1 DUP5 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP1 SLOAD SWAP3 SWAP1 SSTORE DUP4 SLOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP3 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP2 SSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xFF SHL SUB DUP3 GT ISZERO PUSH2 0x32E6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53616665436173743A2076616C756520646F65736E27742066697420696E2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x371034B73A191A9B PUSH1 0xC1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xE54 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH16 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT DUP3 SLT DUP1 ISZERO SWAP1 PUSH2 0x331D JUMPI POP PUSH16 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SGT ISZERO JUMPDEST PUSH2 0x32E6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53616665436173743A2076616C756520646F65736E27742066697420696E2031 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x32382062697473 PUSH1 0xC8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xE54 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH2 0x140 DUP2 ADD DUP3 MSTORE PUSH1 0x60 DUP1 DUP3 MSTORE PUSH1 0x0 PUSH1 0x20 DUP4 ADD DUP2 SWAP1 MSTORE SWAP3 DUP3 ADD DUP4 SWAP1 MSTORE DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0xA0 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0xC0 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0xE0 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x100 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x120 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 JUMP JUMPDEST POP DUP1 SLOAD PUSH2 0x33D9 SWAP1 PUSH2 0x3C5E JUMP JUMPDEST PUSH1 0x0 DUP3 SSTORE DUP1 PUSH1 0x1F LT PUSH2 0x33E9 JUMPI POP POP JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0x2B21 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x32E6 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x3403 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3429 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x344B JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x3433 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1369 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x3474 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x3430 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xA0 DUP2 MSTORE PUSH1 0x0 PUSH2 0x349B PUSH1 0xA0 DUP4 ADD DUP9 PUSH2 0x345C JUMP JUMPDEST PUSH2 0xFFFF SWAP7 SWAP1 SWAP7 AND PUSH1 0x20 DUP4 ADD MSTORE POP PUSH5 0xFFFFFFFFFF SWAP4 DUP5 AND PUSH1 0x40 DUP3 ADD MSTORE SWAP2 DUP4 AND PUSH1 0x60 DUP4 ADD MSTORE SWAP1 SWAP2 AND PUSH1 0x80 SWAP1 SWAP2 ADD MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x350A JUMPI PUSH2 0x350A PUSH2 0x34CC JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3523 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT ISZERO PUSH2 0x353E JUMPI PUSH2 0x353E PUSH2 0x34CC JUMP JUMPDEST DUP2 PUSH1 0x5 SHL PUSH2 0x354D DUP3 DUP3 ADD PUSH2 0x34E2 JUMP JUMPDEST SWAP3 DUP4 MSTORE DUP5 DUP2 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP1 DUP8 DUP6 GT ISZERO PUSH2 0x3567 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP8 ADD SWAP3 POP JUMPDEST DUP5 DUP4 LT ISZERO PUSH2 0x3586 JUMPI DUP3 CALLDATALOAD DUP3 MSTORE SWAP2 DUP4 ADD SWAP2 SWAP1 DUP4 ADD SWAP1 PUSH2 0x356D JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x35A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x35C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x35CF DUP7 DUP3 DUP8 ADD PUSH2 0x3512 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x35E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x100 DUP1 DUP4 MSTORE PUSH2 0x3604 DUP2 DUP5 ADD DUP13 PUSH2 0x345C JUMP JUMPDEST SWAP10 ISZERO ISZERO PUSH1 0x20 DUP5 ADD MSTORE POP POP PUSH5 0xFFFFFFFFFF SWAP7 DUP8 AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0xFF SWAP6 SWAP1 SWAP6 AND PUSH1 0x60 DUP7 ADD MSTORE PUSH3 0xFFFFFF SWAP4 SWAP1 SWAP4 AND PUSH1 0x80 DUP6 ADD MSTORE SWAP1 DUP5 AND PUSH1 0xA0 DUP5 ADD MSTORE SWAP1 SWAP3 AND PUSH1 0xC0 DUP3 ADD MSTORE PUSH2 0xFFFF SWAP1 SWAP2 AND PUSH1 0xE0 SWAP1 SWAP2 ADD MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH5 0xFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x366A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3681 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x368A DUP3 PUSH2 0x3655 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x140 DUP3 MLOAD DUP2 DUP6 MSTORE PUSH2 0x36A7 DUP3 DUP7 ADD DUP3 PUSH2 0x345C JUMP JUMPDEST SWAP2 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH2 0x36C2 PUSH1 0x20 DUP7 ADD DUP3 PUSH5 0xFFFFFFFFFF AND SWAP1 MSTORE JUMP JUMPDEST POP PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x60 DUP4 ADD MLOAD PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x80 DUP4 ADD MLOAD PUSH2 0x36EB PUSH1 0x80 DUP7 ADD DUP3 PUSH1 0xFF AND SWAP1 MSTORE JUMP JUMPDEST POP PUSH1 0xA0 DUP4 ADD MLOAD PUSH2 0x3702 PUSH1 0xA0 DUP7 ADD DUP3 PUSH3 0xFFFFFF AND SWAP1 MSTORE JUMP JUMPDEST POP PUSH1 0xC0 DUP4 ADD MLOAD PUSH2 0x371D PUSH1 0xC0 DUP7 ADD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST POP PUSH1 0xE0 DUP4 ADD MLOAD PUSH2 0x3733 PUSH1 0xE0 DUP7 ADD DUP3 PUSH2 0xFFFF AND SWAP1 MSTORE JUMP JUMPDEST POP PUSH2 0x100 DUP4 DUP2 ADD MLOAD PUSH2 0xFFFF AND SWAP1 DUP6 ADD MSTORE PUSH2 0x120 DUP1 DUP5 ADD MLOAD PUSH5 0xFFFFFFFFFF DUP2 AND DUP3 DUP8 ADD MSTORE PUSH2 0x1BCB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD PUSH1 0x40 DUP4 MSTORE DUP1 DUP6 MLOAD DUP1 DUP4 MSTORE PUSH1 0x60 DUP6 ADD SWAP2 POP PUSH1 0x60 DUP2 PUSH1 0x5 SHL DUP7 ADD ADD SWAP3 POP PUSH1 0x20 DUP1 DUP9 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x37B2 JUMPI PUSH1 0x5F NOT DUP9 DUP8 SUB ADD DUP6 MSTORE PUSH2 0x37A0 DUP7 DUP4 MLOAD PUSH2 0x3691 JUMP JUMPDEST SWAP6 POP SWAP4 DUP3 ADD SWAP4 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x3784 JUMP JUMPDEST POP POP DUP6 DUP5 SUB DUP2 DUP8 ADD MSTORE DUP7 MLOAD DUP1 DUP6 MSTORE DUP8 DUP3 ADD SWAP5 DUP3 ADD SWAP4 POP SWAP2 POP PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x37E9 JUMPI DUP5 MLOAD DUP5 MSTORE SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x37CD JUMP JUMPDEST POP SWAP2 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x3808 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x381F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x3837 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH3 0xFFFFFF DUP2 AND DUP2 EQ PUSH2 0x366A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH2 0xFFFF DUP2 AND DUP2 EQ PUSH2 0x366A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xC0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x387E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x3894 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x38A0 DUP11 DUP3 DUP12 ADD PUSH2 0x37F6 JUMP JUMPDEST SWAP1 SWAP9 POP SWAP7 POP POP PUSH1 0x20 DUP9 ADD CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x38BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP5 POP PUSH2 0x38C8 PUSH1 0x40 DUP10 ADD PUSH2 0x383E JUMP JUMPDEST SWAP4 POP PUSH2 0x38D6 PUSH1 0x60 DUP10 ADD PUSH2 0x3655 JUMP JUMPDEST SWAP3 POP PUSH2 0x38E4 PUSH1 0x80 DUP10 ADD PUSH2 0x3655 JUMP JUMPDEST SWAP2 POP PUSH2 0x38F2 PUSH1 0xA0 DUP10 ADD PUSH2 0x3851 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3913 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2B21 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3949 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x368A DUP2 PUSH2 0x3922 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3965 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x397E JUMPI PUSH2 0x397E PUSH2 0x34CC JUMP JUMPDEST PUSH2 0x3991 PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD PUSH2 0x34E2 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x39A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x39D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x39EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x39FA DUP7 DUP3 DUP8 ADD PUSH2 0x3954 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH2 0x3A10 PUSH1 0x40 DUP6 ADD PUSH2 0x3655 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3A2E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP2 CALLDATALOAD SWAP4 PUSH1 0x20 DUP4 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 SWAP1 SWAP3 ADD CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x140 DUP1 DUP4 MSTORE PUSH2 0x3A59 DUP2 DUP5 ADD DUP15 PUSH2 0x345C JUMP JUMPDEST PUSH5 0xFFFFFFFFFF SWAP13 DUP14 AND PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x40 DUP5 ADD SWAP12 SWAP1 SWAP12 MSTORE POP POP PUSH1 0x60 DUP2 ADD SWAP8 SWAP1 SWAP8 MSTORE PUSH1 0xFF SWAP6 SWAP1 SWAP6 AND PUSH1 0x80 DUP8 ADD MSTORE PUSH3 0xFFFFFF SWAP4 SWAP1 SWAP4 AND PUSH1 0xA0 DUP7 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0xC0 DUP6 ADD MSTORE PUSH2 0xFFFF SWAP1 DUP2 AND PUSH1 0xE0 DUP6 ADD MSTORE AND PUSH2 0x100 DUP4 ADD MSTORE SWAP1 SWAP3 AND PUSH2 0x120 SWAP1 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x368A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3691 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 ADD DUP2 DUP5 MSTORE DUP1 DUP6 MLOAD DUP1 DUP4 MSTORE PUSH1 0x40 DUP7 ADD SWAP2 POP PUSH1 0x40 DUP2 PUSH1 0x5 SHL DUP8 ADD ADD SWAP3 POP DUP4 DUP8 ADD PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x3B2E JUMPI PUSH1 0x3F NOT DUP9 DUP7 SUB ADD DUP5 MSTORE PUSH2 0x3B1C DUP6 DUP4 MLOAD PUSH2 0x345C JUMP JUMPDEST SWAP5 POP SWAP3 DUP6 ADD SWAP3 SWAP1 DUP6 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x3B00 JUMP JUMPDEST POP SWAP3 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xC0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x3B56 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x3B6C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3B78 DUP11 DUP3 DUP12 ADD PUSH2 0x37F6 JUMP JUMPDEST SWAP1 SWAP9 POP SWAP7 POP PUSH2 0x38BA SWAP1 POP PUSH1 0x20 DUP10 ADD PUSH2 0x3851 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3BA0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x3BC4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3BD0 DUP7 DUP3 DUP8 ADD PUSH2 0x3512 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3BEC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x3C02 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3C0E DUP5 DUP3 DUP6 ADD PUSH2 0x3954 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3C52 JUMPI DUP4 MLOAD PUSH2 0xFFFF AND DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x3C32 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x3C72 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x3C92 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x0 SWAP1 DUP3 SWAP1 PUSH1 0x20 DUP1 DUP7 ADD DUP5 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3CD8 JUMPI DUP2 MLOAD DUP6 MSTORE SWAP4 DUP3 ADD SWAP4 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x3CBC JUMP JUMPDEST POP SWAP3 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST DUP5 DUP2 MSTORE DUP4 ISZERO ISZERO PUSH1 0x20 DUP3 ADD MSTORE DUP3 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x3D0B PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x345C JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3D27 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3D40 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x368A DUP2 PUSH2 0x3922 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x368A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x345C JUMP JUMPDEST PUSH1 0x0 DUP2 SLOAD PUSH2 0x3DA0 DUP2 PUSH2 0x3C5E JUMP JUMPDEST DUP1 DUP6 MSTORE PUSH1 0x20 PUSH1 0x1 DUP4 DUP2 AND DUP1 ISZERO PUSH2 0x3DBD JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x3DD7 JUMPI PUSH2 0x3E05 JUMP JUMPDEST PUSH1 0xFF NOT DUP6 AND DUP9 DUP5 ADD MSTORE DUP4 ISZERO ISZERO PUSH1 0x5 SHL DUP9 ADD DUP4 ADD SWAP6 POP PUSH2 0x3E05 JUMP JUMPDEST DUP7 PUSH1 0x0 MSTORE DUP3 PUSH1 0x0 KECCAK256 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x3DFD JUMPI DUP2 SLOAD DUP11 DUP3 ADD DUP7 ADD MSTORE SWAP1 DUP4 ADD SWAP1 DUP5 ADD PUSH2 0x3DE2 JUMP JUMPDEST DUP10 ADD DUP5 ADD SWAP7 POP POP JUMPDEST POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x368A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3D93 JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x3E6D JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x3E4A JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3E69 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x3E56 JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x3E8B JUMPI PUSH2 0x3E8B PUSH2 0x34CC JUMP JUMPDEST PUSH2 0x3E9F DUP2 PUSH2 0x3E99 DUP5 SLOAD PUSH2 0x3C5E JUMP JUMPDEST DUP5 PUSH2 0x3E23 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x3ED4 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x3EBC JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x3E69 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x3F03 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x3EE4 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x3F21 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x3F5A JUMPI PUSH2 0x3F5A PUSH2 0x3F31 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFFFF DUP4 DUP2 AND SWAP1 DUP4 AND DUP2 DUP2 LT ISZERO PUSH2 0x3F7A JUMPI PUSH2 0x3F7A PUSH2 0x3F31 JUMP JUMPDEST SUB SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x3F94 JUMPI PUSH2 0x3F94 PUSH2 0x3F31 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH5 0xFFFFFFFFFF DUP6 AND DUP2 MSTORE DUP4 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x80 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x3FBF PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x345C JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x60 DUP4 ADD MSTORE SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x3FE2 JUMPI PUSH2 0x3FE2 PUSH2 0x3F31 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT ISZERO PUSH2 0x4000 JUMPI PUSH2 0x4000 PUSH2 0x34CC JUMP JUMPDEST PUSH2 0x4014 DUP4 PUSH2 0x400E DUP4 SLOAD PUSH2 0x3C5E JUMP JUMPDEST DUP4 PUSH2 0x3E23 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F DUP5 GT PUSH1 0x1 DUP2 EQ PUSH2 0x4048 JUMPI PUSH1 0x0 DUP6 ISZERO PUSH2 0x4030 JUMPI POP DUP4 DUP3 ADD CALLDATALOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP8 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP7 SWAP1 SHL OR DUP4 SSTORE PUSH2 0x2065 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP1 DUP4 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x4079 JUMPI DUP7 DUP6 ADD CALLDATALOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x4059 JUMP JUMPDEST POP DUP7 DUP3 LT ISZERO PUSH2 0x4096 JUMPI PUSH1 0x0 NOT PUSH1 0xF8 DUP9 PUSH1 0x3 SHL AND SHR NOT DUP5 DUP8 ADD CALLDATALOAD AND DUP2 SSTORE JUMPDEST POP POP PUSH1 0x1 DUP6 PUSH1 0x1 SHL ADD DUP4 SSTORE POP POP POP POP POP JUMP JUMPDEST DUP4 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x140 DUP1 PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x40D1 PUSH2 0x1A0 DUP5 ADD DUP6 PUSH2 0x3D93 JUMP JUMPDEST PUSH1 0x1 DUP6 ADD SLOAD PUSH5 0xFFFFFFFFFF AND PUSH5 0xFFFFFFFFFF DUP2 AND PUSH1 0x80 DUP7 ADD MSTORE POP PUSH1 0x2 DUP6 ADD SLOAD PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0x3 DUP6 ADD SLOAD PUSH1 0xC0 DUP6 ADD MSTORE PUSH1 0x4 DUP6 ADD SLOAD PUSH1 0xFF DUP2 AND PUSH1 0xE0 DUP7 ADD MSTORE PUSH1 0x8 DUP2 SWAP1 SHR PUSH3 0xFFFFFF AND PUSH2 0x100 DUP7 ADD MSTORE PUSH1 0x20 DUP2 SWAP1 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB AND PUSH2 0x120 DUP7 ADD MSTORE PUSH2 0xFFFF PUSH1 0x70 DUP3 SWAP1 SHR DUP2 AND DUP5 DUP8 ADD MSTORE PUSH2 0x4155 PUSH2 0x160 DUP8 ADD DUP3 DUP5 PUSH1 0x80 SHR AND PUSH2 0xFFFF AND SWAP1 MSTORE JUMP JUMPDEST POP PUSH1 0x90 DUP2 SWAP1 SHR PUSH5 0xFFFFFFFFFF AND PUSH2 0x180 DUP7 ADD MSTORE POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB DUP1 DUP5 AND DUP1 PUSH2 0x419B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP3 AND SWAP2 SWAP1 SWAP2 DIV SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x14 SWAP1 DUP3 ADD MSTORE PUSH20 0x2330B4B632B2103A379039B2B7321022BA3432B9 PUSH1 0x61 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SLT DUP1 ISZERO PUSH1 0x1 PUSH1 0x1 PUSH1 0xFF SHL SUB DUP5 SWAP1 SUB DUP6 SGT AND ISZERO PUSH2 0x41F7 JUMPI PUSH2 0x41F7 PUSH2 0x3F31 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xFF SHL DUP4 SWAP1 SUB DUP5 SLT DUP2 AND ISZERO PUSH2 0x4210 JUMPI PUSH2 0x4210 PUSH2 0x3F31 JUMP JUMPDEST POP POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x4228 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x3430 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 SLOAD PUSH2 0x4240 DUP2 PUSH2 0x3C5E JUMP JUMPDEST PUSH1 0x1 DUP3 DUP2 AND DUP1 ISZERO PUSH2 0x4258 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x426D JUMPI PUSH2 0x3CD8 JUMP JUMPDEST PUSH1 0xFF NOT DUP5 AND DUP8 MSTORE DUP3 ISZERO ISZERO DUP4 MUL DUP8 ADD SWAP5 POP PUSH2 0x3CD8 JUMP JUMPDEST DUP8 PUSH1 0x0 MSTORE PUSH1 0x20 DUP1 PUSH1 0x0 KECCAK256 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x4293 JUMPI DUP2 SLOAD DUP11 DUP3 ADD MSTORE SWAP1 DUP5 ADD SWAP1 DUP3 ADD PUSH2 0x427A JUMP JUMPDEST POP POP POP SWAP6 SWAP1 SWAP2 ADD SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0xE0 DUP2 MSTORE DUP8 PUSH1 0xE0 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x100 DUP10 DUP12 DUP3 DUP6 ADD CALLDATACOPY PUSH1 0x0 DUP11 DUP5 ADD DUP3 ADD MSTORE PUSH5 0xFFFFFFFFFF SWAP9 DUP10 AND PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0xFF SWAP8 SWAP1 SWAP8 AND PUSH1 0x40 DUP4 ADD MSTORE POP PUSH3 0xFFFFFF SWAP5 SWAP1 SWAP5 AND PUSH1 0x60 DUP6 ADD MSTORE SWAP2 DUP6 AND PUSH1 0x80 DUP5 ADD MSTORE SWAP1 SWAP4 AND PUSH1 0xA0 DUP3 ADD MSTORE PUSH2 0xFFFF SWAP1 SWAP3 AND PUSH1 0xC0 DUP4 ADD MSTORE PUSH1 0x1F SWAP1 SWAP3 ADD PUSH1 0x1F NOT AND ADD ADD SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC4 0xEC EXTCODEHASH 0x21 SDIV 0x2B GAS SWAP10 0x5D 0xE8 0x29 SWAP10 0xAE 0xB6 SMOD 0xB9 0xE3 0x23 0xB6 SWAP8 0x2D 0x4B MSIZE 0xA9 ADD 0xD4 DUP6 BASEFEE 0xF7 OR 0xAB 0xDD PUSH5 0x736F6C6343 STOP ADDMOD 0xF STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        771,
        23649
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        771,
        23649
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        771,
        23649
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5": {
      "fn": null,
      "offset": [
        771,
        23649
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        771,
        23649
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "8": {
      "fn": null,
      "offset": [
        771,
        23649
      ],
      "op": "LT",
      "path": "2"
    },
    "9": {
      "fn": null,
      "offset": [
        771,
        23649
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x16A"
    },
    "12": {
      "fn": null,
      "offset": [
        771,
        23649
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "13": {
      "fn": null,
      "offset": [
        771,
        23649
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        771,
        23649
      ],
      "op": "CALLDATALOAD",
      "path": "2"
    },
    "16": {
      "fn": null,
      "offset": [
        771,
        23649
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        771,
        23649
      ],
      "op": "SHR",
      "path": "2"
    },
    "19": {
      "fn": null,
      "offset": [
        771,
        23649
      ],
      "op": "DUP1",
      "path": "2"
    },
    "20": {
      "fn": null,
      "offset": [
        771,
        23649
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x8D977672"
    },
    "25": {
      "fn": null,
      "offset": [
        771,
        23649
      ],
      "op": "GT",
      "path": "2"
    },
    "26": {
      "fn": null,
      "offset": [
        771,
        23649
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xD1"
    },
    "29": {
      "fn": null,
      "offset": [
        771,
        23649
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "30": {
      "fn": null,
      "offset": [
        771,
        23649
      ],
      "op": "DUP1",
      "path": "2"
    },
    "31": {
      "fn": null,
      "offset": [
        771,
        23649
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xD374A217"
    },
    "36": {
      "fn": null,
      "offset": [
        771,
        23649
      ],
      "op": "GT",
      "path": "2"
    },
    "37": {
      "fn": null,
      "offset": [
        771,
        23649
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x8A"
    },
    "40": {
      "fn": null,
      "offset": [
        771,
        23649
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "41": {
      "fn": null,
      "offset": [
        771,
        23649
      ],
      "op": "DUP1",
      "path": "2"
    },
    "42": {
      "fn": null,
      "offset": [
        771,
        23649
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xF2FDE38B"
    },
    "47": {
      "fn": null,
      "offset": [
        771,
        23649
      ],
      "op": "GT",
      "path": "2"
    },
    "48": {
      "fn": null,
      "offset": [
        771,
        23649
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x64"
    },
    "51": {
      "fn": null,
      "offset": [
        771,
        23649
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "52": {
      "fn": null,
      "offset": [
        771,
        23649
      ],
      "op": "DUP1",
      "path": "2"
    },
    "53": {
      "fn": null,
      "offset": [
        771,
        23649
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xF2FDE38B"
    },
    "58": {
      "fn": null,
      "offset": [
        771,
        23649
      ],
      "op": "EQ",
      "path": "2"
    },
    "59": {
      "fn": null,
      "offset": [
        771,
        23649
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4C2"
    },
    "62": {
      "fn": null,
      "offset": [
        771,
        23649
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "63": {
      "fn": null,
      "offset": [
        771,
        23649
      ],
      "op": "DUP1",
      "path": "2"
    },
    "64": {
      "fn": null,
      "offset": [
        771,
        23649
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xF4739BD9"
    },
    "69": {
      "fn": null,
      "offset": [
        771,
        23649
      ],
      "op": "EQ",
      "path": "2"
    },
    "70": {
      "fn": null,
      "offset": [
        771,
        23649
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4E2"
    },
    "73": {
      "fn": null,
      "offset": [
        771,
        23649
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "74": {
      "fn": null,
      "offset": [
        771,
        23649
      ],
      "op": "DUP1",
      "path": "2"
    },
    "75": {
      "fn": null,
      "offset": [
        771,
        23649
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xF713B7ED"
    },
    "80": {
      "fn": null,
      "offset": [
        771,
        23649
      ],
      "op": "EQ",
      "path": "2"
    },
    "81": {
      "fn": null,
      "offset": [
        771,
        23649
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x502"
    },
    "84": {
      "fn": null,
      "offset": [
        771,
        23649
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "85": {
      "fn": null,
      "offset": [
        771,
        23649
      ],
      "op": "DUP1",
      "path": "2"
    },
    "86": {
      "fn": null,
      "offset": [
        771,
        23649
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xFF981099"
    },
    "91": {
      "fn": null,
      "offset": [
        771,
        23649
      ],
      "op": "EQ",
      "path": "2"
    },
    "92": {
      "fn": null,
      "offset": [
        771,
        23649
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x522"
    },
    "95": {
      "fn": null,
      "offset": [
        771,
        23649
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "96": {
      "fn": null,
      "offset": [
        771,
        23649
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "98": {
      "fn": null,
      "offset": [
        771,
        23649
      ],
      "op": "DUP1",
      "path": "2"
    },
    "99": {
      "fn": null,
      "offset": [
        771,
        23649
      ],
      "op": "REVERT",
      "path": "2"
    },
    "100": {
      "fn": null,
      "offset": [
        771,
        23649
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "101": {
      "fn": null,
      "offset": [
        771,
        23649
      ],
      "op": "DUP1",
      "path": "2"
    },
    "102": {
      "fn": null,
      "offset": [
        771,
        23649
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xD374A217"
    },
    "107": {
      "fn": null,
      "offset": [
        771,
        23649
      ],
      "op": "EQ",
      "path": "2"
    },
    "108": {
      "fn": null,
      "offset": [
        771,
        23649
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x442"
    },
    "111": {
      "fn": null,
      "offset": [
        771,
        23649
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "112": {
      "fn": null,
      "offset": [
        771,
        23649
      ],
      "op": "DUP1",
      "path": "2"
    },
    "113": {
      "fn": null,
      "offset": [
        771,
        23649
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xE95D2347"
    },
    "118": {
      "fn": null,
      "offset": [
        771,
        23649
      ],
      "op": "EQ",
      "path": "2"
    },
    "119": {
      "fn": null,
      "offset": [
        771,
        23649
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x462"
    },
    "122": {
      "fn": null,
      "offset": [
        771,
        23649
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "123": {
      "fn": null,
      "offset": [
        771,
        23649
      ],
      "op": "DUP1",
      "path": "2"
    },
    "124": {
      "fn": null,
      "offset": [
        771,
        23649
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xF18C51D3"
    },
    "129": {
      "fn": null,
      "offset": [
        771,
        23649
      ],
      "op": "EQ",
      "path": "2"
    },
    "130": {
      "fn": null,
      "offset": [
        771,
        23649
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4A2"
    },
    "133": {
      "fn": null,
      "offset": [
        771,
        23649
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "134": {
      "fn": null,
      "offset": [
        771,
        23649
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "136": {
      "fn": null,
      "offset": [
        771,
        23649
      ],
      "op": "DUP1",
      "path": "2"
    },
    "137": {
      "fn": null,
      "offset": [
        771,
        23649
      ],
      "op": "REVERT",
      "path": "2"
    },
    "138": {
      "fn": null,
      "offset": [
        771,
        23649
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "139": {
      "fn": null,
      "offset": [
        771,
        23649
      ],
      "op": "DUP1",
      "path": "2"
    },
    "140": {
      "fn": null,
      "offset": [
        771,
        23649
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x8D977672"
    },
    "145": {
      "fn": null,
      "offset": [
        771,
        23649
      ],
      "op": "EQ",
      "path": "2"
    },
    "146": {
      "fn": null,
      "offset": [
        771,
        23649
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x354"
    },
    "149": {
      "fn": null,
      "offset": [
        771,
        23649
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "150": {
      "fn": null,
      "offset": [
        771,
        23649
      ],
      "op": "DUP1",
      "path": "2"
    },
    "151": {
      "fn": null,
      "offset": [
        771,
        23649
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x8DA5CB5B"
    },
    "156": {
      "fn": null,
      "offset": [
        771,
        23649
      ],
      "op": "EQ",
      "path": "2"
    },
    "157": {
      "fn": null,
      "offset": [
        771,
        23649
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x38A"
    },
    "160": {
      "fn": null,
      "offset": [
        771,
        23649
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "161": {
      "fn": null,
      "offset": [
        771,
        23649
      ],
      "op": "DUP1",
      "path": "2"
    },
    "162": {
      "fn": null,
      "offset": [
        771,
        23649
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x90B293D8"
    },
    "167": {
      "fn": null,
      "offset": [
        771,
        23649
      ],
      "op": "EQ",
      "path": "2"
    },
    "168": {
      "fn": null,
      "offset": [
        771,
        23649
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3B2"
    },
    "171": {
      "fn": null,
      "offset": [
        771,
        23649
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "172": {
      "fn": null,
      "offset": [
        771,
        23649
      ],
      "op": "DUP1",
      "path": "2"
    },
    "173": {
      "fn": null,
      "offset": [
        771,
        23649
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x976217CD"
    },
    "178": {
      "fn": null,
      "offset": [
        771,
        23649
      ],
      "op": "EQ",
      "path": "2"
    },
    "179": {
      "fn": null,
      "offset": [
        771,
        23649
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3C8"
    },
    "182": {
      "fn": null,
      "offset": [
        771,
        23649
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "183": {
      "fn": null,
      "offset": [
        771,
        23649
      ],
      "op": "DUP1",
      "path": "2"
    },
    "184": {
      "fn": null,
      "offset": [
        771,
        23649
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xB2BAD544"
    },
    "189": {
      "fn": null,
      "offset": [
        771,
        23649
      ],
      "op": "EQ",
      "path": "2"
    },
    "190": {
      "fn": null,
      "offset": [
        771,
        23649
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3F5"
    },
    "193": {
      "fn": null,
      "offset": [
        771,
        23649
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "194": {
      "fn": null,
      "offset": [
        771,
        23649
      ],
      "op": "DUP1",
      "path": "2"
    },
    "195": {
      "fn": null,
      "offset": [
        771,
        23649
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xBECA3A16"
    },
    "200": {
      "fn": null,
      "offset": [
        771,
        23649
      ],
      "op": "EQ",
      "path": "2"
    },
    "201": {
      "fn": null,
      "offset": [
        771,
        23649
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x422"
    },
    "204": {
      "fn": null,
      "offset": [
        771,
        23649
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "205": {
      "fn": null,
      "offset": [
        771,
        23649
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "207": {
      "fn": null,
      "offset": [
        771,
        23649
      ],
      "op": "DUP1",
      "path": "2"
    },
    "208": {
      "fn": null,
      "offset": [
        771,
        23649
      ],
      "op": "REVERT",
      "path": "2"
    },
    "209": {
      "fn": null,
      "offset": [
        771,
        23649
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "210": {
      "fn": null,
      "offset": [
        771,
        23649
      ],
      "op": "DUP1",
      "path": "2"
    },
    "211": {
      "fn": null,
      "offset": [
        771,
        23649
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x6215597B"
    },
    "216": {
      "fn": null,
      "offset": [
        771,
        23649
      ],
      "op": "GT",
      "path": "2"
    },
    "217": {
      "fn": null,
      "offset": [
        771,
        23649
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x123"
    },
    "220": {
      "fn": null,
      "offset": [
        771,
        23649
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "221": {
      "fn": null,
      "offset": [
        771,
        23649
      ],
      "op": "DUP1",
      "path": "2"
    },
    "222": {
      "fn": null,
      "offset": [
        771,
        23649
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x6215597B"
    },
    "227": {
      "fn": null,
      "offset": [
        771,
        23649
      ],
      "op": "EQ",
      "path": "2"
    },
    "228": {
      "fn": null,
      "offset": [
        771,
        23649
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x279"
    },
    "231": {
      "fn": null,
      "offset": [
        771,
        23649
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "232": {
      "fn": null,
      "offset": [
        771,
        23649
      ],
      "op": "DUP1",
      "path": "2"
    },
    "233": {
      "fn": null,
      "offset": [
        771,
        23649
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x69D03738"
    },
    "238": {
      "fn": null,
      "offset": [
        771,
        23649
      ],
      "op": "EQ",
      "path": "2"
    },
    "239": {
      "fn": null,
      "offset": [
        771,
        23649
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2BF"
    },
    "242": {
      "fn": null,
      "offset": [
        771,
        23649
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "243": {
      "fn": null,
      "offset": [
        771,
        23649
      ],
      "op": "DUP1",
      "path": "2"
    },
    "244": {
      "fn": null,
      "offset": [
        771,
        23649
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x715018A6"
    },
    "249": {
      "fn": null,
      "offset": [
        771,
        23649
      ],
      "op": "EQ",
      "path": "2"
    },
    "250": {
      "fn": null,
      "offset": [
        771,
        23649
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2DF"
    },
    "253": {
      "fn": null,
      "offset": [
        771,
        23649
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "254": {
      "fn": null,
      "offset": [
        771,
        23649
      ],
      "op": "DUP1",
      "path": "2"
    },
    "255": {
      "fn": null,
      "offset": [
        771,
        23649
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x72E185CE"
    },
    "260": {
      "fn": null,
      "offset": [
        771,
        23649
      ],
      "op": "EQ",
      "path": "2"
    },
    "261": {
      "fn": null,
      "offset": [
        771,
        23649
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2F4"
    },
    "264": {
      "fn": null,
      "offset": [
        771,
        23649
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "265": {
      "fn": null,
      "offset": [
        771,
        23649
      ],
      "op": "DUP1",
      "path": "2"
    },
    "266": {
      "fn": null,
      "offset": [
        771,
        23649
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x826B8EBD"
    },
    "271": {
      "fn": null,
      "offset": [
        771,
        23649
      ],
      "op": "EQ",
      "path": "2"
    },
    "272": {
      "fn": null,
      "offset": [
        771,
        23649
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x314"
    },
    "275": {
      "fn": null,
      "offset": [
        771,
        23649
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "276": {
      "fn": null,
      "offset": [
        771,
        23649
      ],
      "op": "DUP1",
      "path": "2"
    },
    "277": {
      "fn": null,
      "offset": [
        771,
        23649
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x8A6655D6"
    },
    "282": {
      "fn": null,
      "offset": [
        771,
        23649
      ],
      "op": "EQ",
      "path": "2"
    },
    "283": {
      "fn": null,
      "offset": [
        771,
        23649
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x334"
    },
    "286": {
      "fn": null,
      "offset": [
        771,
        23649
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "287": {
      "fn": null,
      "offset": [
        771,
        23649
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "289": {
      "fn": null,
      "offset": [
        771,
        23649
      ],
      "op": "DUP1",
      "path": "2"
    },
    "290": {
      "fn": null,
      "offset": [
        771,
        23649
      ],
      "op": "REVERT",
      "path": "2"
    },
    "291": {
      "fn": null,
      "offset": [
        771,
        23649
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "292": {
      "fn": null,
      "offset": [
        771,
        23649
      ],
      "op": "DUP1",
      "path": "2"
    },
    "293": {
      "fn": null,
      "offset": [
        771,
        23649
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x13CF08B"
    },
    "298": {
      "fn": null,
      "offset": [
        771,
        23649
      ],
      "op": "EQ",
      "path": "2"
    },
    "299": {
      "fn": null,
      "offset": [
        771,
        23649
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x176"
    },
    "302": {
      "fn": null,
      "offset": [
        771,
        23649
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "303": {
      "fn": null,
      "offset": [
        771,
        23649
      ],
      "op": "DUP1",
      "path": "2"
    },
    "304": {
      "fn": null,
      "offset": [
        771,
        23649
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x9265CE6"
    },
    "309": {
      "fn": null,
      "offset": [
        771,
        23649
      ],
      "op": "EQ",
      "path": "2"
    },
    "310": {
      "fn": null,
      "offset": [
        771,
        23649
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1B0"
    },
    "313": {
      "fn": null,
      "offset": [
        771,
        23649
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "314": {
      "fn": null,
      "offset": [
        771,
        23649
      ],
      "op": "DUP1",
      "path": "2"
    },
    "315": {
      "fn": null,
      "offset": [
        771,
        23649
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x10190EF1"
    },
    "320": {
      "fn": null,
      "offset": [
        771,
        23649
      ],
      "op": "EQ",
      "path": "2"
    },
    "321": {
      "fn": null,
      "offset": [
        771,
        23649
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1D2"
    },
    "324": {
      "fn": null,
      "offset": [
        771,
        23649
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "325": {
      "fn": null,
      "offset": [
        771,
        23649
      ],
      "op": "DUP1",
      "path": "2"
    },
    "326": {
      "fn": null,
      "offset": [
        771,
        23649
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x3B47FED2"
    },
    "331": {
      "fn": null,
      "offset": [
        771,
        23649
      ],
      "op": "EQ",
      "path": "2"
    },
    "332": {
      "fn": null,
      "offset": [
        771,
        23649
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x206"
    },
    "335": {
      "fn": null,
      "offset": [
        771,
        23649
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "336": {
      "fn": null,
      "offset": [
        771,
        23649
      ],
      "op": "DUP1",
      "path": "2"
    },
    "337": {
      "fn": null,
      "offset": [
        771,
        23649
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x4B50F16A"
    },
    "342": {
      "fn": null,
      "offset": [
        771,
        23649
      ],
      "op": "EQ",
      "path": "2"
    },
    "343": {
      "fn": null,
      "offset": [
        771,
        23649
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x22B"
    },
    "346": {
      "fn": null,
      "offset": [
        771,
        23649
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "347": {
      "fn": null,
      "offset": [
        771,
        23649
      ],
      "op": "DUP1",
      "path": "2"
    },
    "348": {
      "fn": null,
      "offset": [
        771,
        23649
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x61F9E9A8"
    },
    "353": {
      "fn": null,
      "offset": [
        771,
        23649
      ],
      "op": "EQ",
      "path": "2"
    },
    "354": {
      "fn": null,
      "offset": [
        771,
        23649
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x259"
    },
    "357": {
      "fn": null,
      "offset": [
        771,
        23649
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "358": {
      "fn": null,
      "offset": [
        771,
        23649
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "360": {
      "fn": null,
      "offset": [
        771,
        23649
      ],
      "op": "DUP1",
      "path": "2"
    },
    "361": {
      "fn": null,
      "offset": [
        771,
        23649
      ],
      "op": "REVERT",
      "path": "2"
    },
    "362": {
      "fn": null,
      "offset": [
        771,
        23649
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "363": {
      "fn": null,
      "offset": [
        771,
        23649
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "364": {
      "fn": null,
      "offset": [
        771,
        23649
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x171"
    },
    "367": {
      "fn": null,
      "offset": [
        771,
        23649
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "368": {
      "fn": null,
      "offset": [
        771,
        23649
      ],
      "op": "STOP",
      "path": "2"
    },
    "369": {
      "fn": null,
      "offset": [
        771,
        23649
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "370": {
      "fn": null,
      "offset": [
        771,
        23649
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "372": {
      "fn": null,
      "offset": [
        771,
        23649
      ],
      "op": "DUP1",
      "path": "2"
    },
    "373": {
      "first_revert": true,
      "fn": null,
      "offset": [
        771,
        23649
      ],
      "op": "REVERT",
      "path": "2"
    },
    "374": {
      "offset": [
        2759,
        2805
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "375": {
      "fn": null,
      "offset": [
        2759,
        2805
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "376": {
      "fn": null,
      "offset": [
        2759,
        2805
      ],
      "op": "DUP1",
      "path": "2"
    },
    "377": {
      "fn": null,
      "offset": [
        2759,
        2805
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "378": {
      "fn": null,
      "offset": [
        2759,
        2805
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x182"
    },
    "381": {
      "fn": null,
      "offset": [
        2759,
        2805
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "382": {
      "fn": null,
      "offset": [
        2759,
        2805
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "384": {
      "fn": null,
      "offset": [
        2759,
        2805
      ],
      "op": "DUP1",
      "path": "2"
    },
    "385": {
      "fn": null,
      "offset": [
        2759,
        2805
      ],
      "op": "REVERT",
      "path": "2"
    },
    "386": {
      "fn": null,
      "offset": [
        2759,
        2805
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "387": {
      "op": "POP"
    },
    "388": {
      "offset": [
        2759,
        2805
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x196"
    },
    "391": {
      "fn": null,
      "offset": [
        2759,
        2805
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x191"
    },
    "394": {
      "fn": null,
      "offset": [
        2759,
        2805
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "395": {
      "fn": null,
      "offset": [
        2759,
        2805
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "397": {
      "fn": null,
      "offset": [
        2759,
        2805
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3417"
    },
    "400": {
      "fn": null,
      "jump": "i",
      "offset": [
        2759,
        2805
      ],
      "op": "JUMP",
      "path": "2"
    },
    "401": {
      "fn": null,
      "offset": [
        2759,
        2805
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "402": {
      "fn": null,
      "offset": [
        2759,
        2805
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x54F"
    },
    "405": {
      "fn": null,
      "jump": "i",
      "offset": [
        2759,
        2805
      ],
      "op": "JUMP",
      "path": "2"
    },
    "406": {
      "fn": null,
      "offset": [
        2759,
        2805
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "407": {
      "fn": null,
      "offset": [
        2759,
        2805
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "409": {
      "fn": null,
      "offset": [
        2759,
        2805
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "410": {
      "fn": null,
      "offset": [
        2759,
        2805
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A7"
    },
    "413": {
      "fn": null,
      "offset": [
        2759,
        2805
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "414": {
      "fn": null,
      "offset": [
        2759,
        2805
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "415": {
      "fn": null,
      "offset": [
        2759,
        2805
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "416": {
      "fn": null,
      "offset": [
        2759,
        2805
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "417": {
      "fn": null,
      "offset": [
        2759,
        2805
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "418": {
      "fn": null,
      "offset": [
        2759,
        2805
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "419": {
      "fn": null,
      "offset": [
        2759,
        2805
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3488"
    },
    "422": {
      "fn": null,
      "jump": "i",
      "offset": [
        2759,
        2805
      ],
      "op": "JUMP",
      "path": "2"
    },
    "423": {
      "fn": null,
      "offset": [
        2759,
        2805
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "424": {
      "fn": null,
      "offset": [
        2759,
        2805
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "426": {
      "fn": null,
      "offset": [
        2759,
        2805
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "427": {
      "fn": null,
      "offset": [
        2759,
        2805
      ],
      "op": "DUP1",
      "path": "2"
    },
    "428": {
      "fn": null,
      "offset": [
        2759,
        2805
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "429": {
      "fn": null,
      "offset": [
        2759,
        2805
      ],
      "op": "SUB",
      "path": "2"
    },
    "430": {
      "fn": null,
      "offset": [
        2759,
        2805
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "431": {
      "fn": null,
      "offset": [
        2759,
        2805
      ],
      "op": "RETURN",
      "path": "2"
    },
    "432": {
      "fn": "Governance.testHashing",
      "offset": [
        17522,
        18025
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "433": {
      "fn": "Governance.testHashing",
      "offset": [
        17522,
        18025
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "434": {
      "fn": "Governance.testHashing",
      "offset": [
        17522,
        18025
      ],
      "op": "DUP1",
      "path": "2"
    },
    "435": {
      "fn": "Governance.testHashing",
      "offset": [
        17522,
        18025
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "436": {
      "fn": "Governance.testHashing",
      "offset": [
        17522,
        18025
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1BC"
    },
    "439": {
      "fn": "Governance.testHashing",
      "offset": [
        17522,
        18025
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "440": {
      "fn": "Governance.testHashing",
      "offset": [
        17522,
        18025
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "442": {
      "fn": "Governance.testHashing",
      "offset": [
        17522,
        18025
      ],
      "op": "DUP1",
      "path": "2"
    },
    "443": {
      "fn": "Governance.testHashing",
      "offset": [
        17522,
        18025
      ],
      "op": "REVERT",
      "path": "2"
    },
    "444": {
      "fn": "Governance.testHashing",
      "offset": [
        17522,
        18025
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "445": {
      "op": "POP"
    },
    "446": {
      "fn": "Governance.testHashing",
      "offset": [
        17522,
        18025
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1D0"
    },
    "449": {
      "fn": "Governance.testHashing",
      "offset": [
        17522,
        18025
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1CB"
    },
    "452": {
      "fn": "Governance.testHashing",
      "offset": [
        17522,
        18025
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "453": {
      "fn": "Governance.testHashing",
      "offset": [
        17522,
        18025
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "455": {
      "fn": "Governance.testHashing",
      "offset": [
        17522,
        18025
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3591"
    },
    "458": {
      "fn": "Governance.testHashing",
      "jump": "i",
      "offset": [
        17522,
        18025
      ],
      "op": "JUMP",
      "path": "2"
    },
    "459": {
      "fn": "Governance.testHashing",
      "offset": [
        17522,
        18025
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "460": {
      "fn": "Governance.testHashing",
      "offset": [
        17522,
        18025
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x61B"
    },
    "463": {
      "fn": "Governance.testHashing",
      "jump": "i",
      "offset": [
        17522,
        18025
      ],
      "op": "JUMP",
      "path": "2"
    },
    "464": {
      "fn": "Governance.testHashing",
      "offset": [
        17522,
        18025
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "465": {
      "fn": "Governance.testHashing",
      "offset": [
        17522,
        18025
      ],
      "op": "STOP",
      "path": "2"
    },
    "466": {
      "offset": [
        2445,
        2472
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "467": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "468": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "DUP1",
      "path": "2"
    },
    "469": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "470": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1DE"
    },
    "473": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "474": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "476": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "DUP1",
      "path": "2"
    },
    "477": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "REVERT",
      "path": "2"
    },
    "478": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "479": {
      "op": "POP"
    },
    "480": {
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1F2"
    },
    "483": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1ED"
    },
    "486": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "487": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "489": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3417"
    },
    "492": {
      "fn": "Governance.testHashing",
      "jump": "i",
      "offset": [
        2445,
        2472
      ],
      "op": "JUMP",
      "path": "2"
    },
    "493": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "494": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x761"
    },
    "497": {
      "fn": "Governance.testHashing",
      "jump": "i",
      "offset": [
        2445,
        2472
      ],
      "op": "JUMP",
      "path": "2"
    },
    "498": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "499": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "501": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "502": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A7"
    },
    "505": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "SWAP9",
      "path": "2"
    },
    "506": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "SWAP8",
      "path": "2"
    },
    "507": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "SWAP7",
      "path": "2"
    },
    "508": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "509": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "510": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "511": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "512": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "513": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "514": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x35F0"
    },
    "517": {
      "fn": "Governance.testHashing",
      "jump": "i",
      "offset": [
        2445,
        2472
      ],
      "op": "JUMP",
      "path": "2"
    },
    "518": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4380,
        4673
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "519": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4380,
        4673
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "520": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4380,
        4673
      ],
      "op": "DUP1",
      "path": "2"
    },
    "521": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4380,
        4673
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "522": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4380,
        4673
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x212"
    },
    "525": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4380,
        4673
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "526": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4380,
        4673
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "528": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4380,
        4673
      ],
      "op": "DUP1",
      "path": "2"
    },
    "529": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4380,
        4673
      ],
      "op": "REVERT",
      "path": "2"
    },
    "530": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4380,
        4673
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "531": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4380,
        4673
      ],
      "op": "POP",
      "path": "2"
    },
    "532": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4380,
        4673
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x21B"
    },
    "535": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4380,
        4673
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x86B"
    },
    "538": {
      "fn": "Governance.isCallerOnBoard",
      "jump": "i",
      "offset": [
        4380,
        4673
      ],
      "op": "JUMP",
      "path": "2"
    },
    "539": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4380,
        4673
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "540": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4380,
        4673
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "542": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4380,
        4673
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "543": {
      "op": "SWAP1"
    },
    "544": {
      "op": "ISZERO"
    },
    "545": {
      "op": "ISZERO"
    },
    "546": {
      "op": "DUP2"
    },
    "547": {
      "op": "MSTORE"
    },
    "548": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "550": {
      "op": "ADD"
    },
    "551": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4380,
        4673
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A7"
    },
    "554": {
      "op": "JUMP"
    },
    "555": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7078,
        8687
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "556": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7078,
        8687
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "557": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7078,
        8687
      ],
      "op": "DUP1",
      "path": "2"
    },
    "558": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7078,
        8687
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "559": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7078,
        8687
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x237"
    },
    "562": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7078,
        8687
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "563": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7078,
        8687
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "565": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7078,
        8687
      ],
      "op": "DUP1",
      "path": "2"
    },
    "566": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7078,
        8687
      ],
      "op": "REVERT",
      "path": "2"
    },
    "567": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7078,
        8687
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "568": {
      "op": "POP"
    },
    "569": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7078,
        8687
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x24B"
    },
    "572": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7078,
        8687
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x246"
    },
    "575": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7078,
        8687
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "576": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7078,
        8687
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "578": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7078,
        8687
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x366F"
    },
    "581": {
      "fn": "Governance.getTasksAssignedToWiz",
      "jump": "i",
      "offset": [
        7078,
        8687
      ],
      "op": "JUMP",
      "path": "2"
    },
    "582": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7078,
        8687
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "583": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7078,
        8687
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x979"
    },
    "586": {
      "fn": "Governance.getTasksAssignedToWiz",
      "jump": "i",
      "offset": [
        7078,
        8687
      ],
      "op": "JUMP",
      "path": "2"
    },
    "587": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7078,
        8687
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "588": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7078,
        8687
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "590": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7078,
        8687
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "591": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7078,
        8687
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A7"
    },
    "594": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7078,
        8687
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "595": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7078,
        8687
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "596": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7078,
        8687
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "597": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7078,
        8687
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x375B"
    },
    "600": {
      "fn": "Governance.getTasksAssignedToWiz",
      "jump": "i",
      "offset": [
        7078,
        8687
      ],
      "op": "JUMP",
      "path": "2"
    },
    "601": {
      "fn": "Governance.createTaskType",
      "offset": [
        13832,
        14152
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "602": {
      "fn": "Governance.createTaskType",
      "offset": [
        13832,
        14152
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "603": {
      "fn": "Governance.createTaskType",
      "offset": [
        13832,
        14152
      ],
      "op": "DUP1",
      "path": "2"
    },
    "604": {
      "fn": "Governance.createTaskType",
      "offset": [
        13832,
        14152
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "605": {
      "fn": "Governance.createTaskType",
      "offset": [
        13832,
        14152
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x265"
    },
    "608": {
      "fn": "Governance.createTaskType",
      "offset": [
        13832,
        14152
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "609": {
      "fn": "Governance.createTaskType",
      "offset": [
        13832,
        14152
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "611": {
      "fn": "Governance.createTaskType",
      "offset": [
        13832,
        14152
      ],
      "op": "DUP1",
      "path": "2"
    },
    "612": {
      "fn": "Governance.createTaskType",
      "offset": [
        13832,
        14152
      ],
      "op": "REVERT",
      "path": "2"
    },
    "613": {
      "fn": "Governance.createTaskType",
      "offset": [
        13832,
        14152
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "614": {
      "op": "POP"
    },
    "615": {
      "fn": "Governance.createTaskType",
      "offset": [
        13832,
        14152
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1D0"
    },
    "618": {
      "fn": "Governance.createTaskType",
      "offset": [
        13832,
        14152
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x274"
    },
    "621": {
      "fn": "Governance.createTaskType",
      "offset": [
        13832,
        14152
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "622": {
      "fn": "Governance.createTaskType",
      "offset": [
        13832,
        14152
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "624": {
      "fn": "Governance.createTaskType",
      "offset": [
        13832,
        14152
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3863"
    },
    "627": {
      "fn": "Governance.createTaskType",
      "jump": "i",
      "offset": [
        13832,
        14152
      ],
      "op": "JUMP",
      "path": "2"
    },
    "628": {
      "fn": "Governance.createTaskType",
      "offset": [
        13832,
        14152
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "629": {
      "fn": "Governance.createTaskType",
      "offset": [
        13832,
        14152
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE0D"
    },
    "632": {
      "fn": "Governance.createTaskType",
      "jump": "i",
      "offset": [
        13832,
        14152
      ],
      "op": "JUMP",
      "path": "2"
    },
    "633": {
      "offset": [
        1014,
        1089
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "634": {
      "fn": "Governance.createTaskType",
      "offset": [
        1014,
        1089
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "635": {
      "fn": "Governance.createTaskType",
      "offset": [
        1014,
        1089
      ],
      "op": "DUP1",
      "path": "2"
    },
    "636": {
      "fn": "Governance.createTaskType",
      "offset": [
        1014,
        1089
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "637": {
      "fn": "Governance.createTaskType",
      "offset": [
        1014,
        1089
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x285"
    },
    "640": {
      "fn": "Governance.createTaskType",
      "offset": [
        1014,
        1089
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "641": {
      "fn": "Governance.createTaskType",
      "offset": [
        1014,
        1089
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "643": {
      "fn": "Governance.createTaskType",
      "offset": [
        1014,
        1089
      ],
      "op": "DUP1",
      "path": "2"
    },
    "644": {
      "fn": "Governance.createTaskType",
      "offset": [
        1014,
        1089
      ],
      "op": "REVERT",
      "path": "2"
    },
    "645": {
      "fn": "Governance.createTaskType",
      "offset": [
        1014,
        1089
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "646": {
      "op": "POP"
    },
    "647": {
      "offset": [
        1014,
        1089
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2B1"
    },
    "650": {
      "fn": "Governance.createTaskType",
      "offset": [
        1014,
        1089
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x294"
    },
    "653": {
      "fn": "Governance.createTaskType",
      "offset": [
        1014,
        1089
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "654": {
      "fn": "Governance.createTaskType",
      "offset": [
        1014,
        1089
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "656": {
      "fn": "Governance.createTaskType",
      "offset": [
        1014,
        1089
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3900"
    },
    "659": {
      "fn": "Governance.createTaskType",
      "jump": "i",
      "offset": [
        1014,
        1089
      ],
      "op": "JUMP",
      "path": "2"
    },
    "660": {
      "fn": "Governance.createTaskType",
      "offset": [
        1014,
        1089
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "661": {
      "fn": "Governance.createTaskType",
      "offset": [
        1014,
        1089
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "663": {
      "fn": "Governance.createTaskType",
      "offset": [
        1014,
        1089
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "665": {
      "fn": "Governance.createTaskType",
      "offset": [
        1014,
        1089
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "666": {
      "fn": "Governance.createTaskType",
      "offset": [
        1014,
        1089
      ],
      "op": "DUP2",
      "path": "2"
    },
    "667": {
      "fn": "Governance.createTaskType",
      "offset": [
        1014,
        1089
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "668": {
      "fn": "Governance.createTaskType",
      "offset": [
        1014,
        1089
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "670": {
      "fn": "Governance.createTaskType",
      "offset": [
        1014,
        1089
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "671": {
      "fn": "Governance.createTaskType",
      "offset": [
        1014,
        1089
      ],
      "op": "DUP4",
      "path": "2"
    },
    "672": {
      "fn": "Governance.createTaskType",
      "offset": [
        1014,
        1089
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "673": {
      "fn": "Governance.createTaskType",
      "offset": [
        1014,
        1089
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "675": {
      "fn": "Governance.createTaskType",
      "offset": [
        1014,
        1089
      ],
      "op": "DUP1",
      "path": "2"
    },
    "676": {
      "fn": "Governance.createTaskType",
      "offset": [
        1014,
        1089
      ],
      "op": "DUP5",
      "path": "2"
    },
    "677": {
      "fn": "Governance.createTaskType",
      "offset": [
        1014,
        1089
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "678": {
      "fn": "Governance.createTaskType",
      "offset": [
        1014,
        1089
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "679": {
      "fn": "Governance.createTaskType",
      "offset": [
        1014,
        1089
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "680": {
      "fn": "Governance.createTaskType",
      "offset": [
        1014,
        1089
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "681": {
      "fn": "Governance.createTaskType",
      "offset": [
        1014,
        1089
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "682": {
      "fn": "Governance.createTaskType",
      "offset": [
        1014,
        1089
      ],
      "op": "DUP3",
      "path": "2"
    },
    "683": {
      "fn": "Governance.createTaskType",
      "offset": [
        1014,
        1089
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "684": {
      "fn": "Governance.createTaskType",
      "offset": [
        1014,
        1089
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "685": {
      "fn": "Governance.createTaskType",
      "offset": [
        1014,
        1089
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "686": {
      "fn": "Governance.createTaskType",
      "offset": [
        1014,
        1089
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "687": {
      "fn": "Governance.createTaskType",
      "offset": [
        1014,
        1089
      ],
      "op": "DUP2",
      "path": "2"
    },
    "688": {
      "fn": "Governance.createTaskType",
      "offset": [
        1014,
        1089
      ],
      "op": "JUMP",
      "path": "2"
    },
    "689": {
      "fn": "Governance.createTaskType",
      "offset": [
        1014,
        1089
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "690": {
      "fn": "Governance.createTaskType",
      "offset": [
        1014,
        1089
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "692": {
      "fn": "Governance.createTaskType",
      "offset": [
        1014,
        1089
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "693": {
      "op": "SWAP1"
    },
    "694": {
      "op": "DUP2"
    },
    "695": {
      "op": "MSTORE"
    },
    "696": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "698": {
      "op": "ADD"
    },
    "699": {
      "offset": [
        1014,
        1089
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A7"
    },
    "702": {
      "op": "JUMP"
    },
    "703": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        10373,
        10474
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "704": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        10373,
        10474
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "705": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        10373,
        10474
      ],
      "op": "DUP1",
      "path": "2"
    },
    "706": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        10373,
        10474
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "707": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        10373,
        10474
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2CB"
    },
    "710": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        10373,
        10474
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "711": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        10373,
        10474
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "713": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        10373,
        10474
      ],
      "op": "DUP1",
      "path": "2"
    },
    "714": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        10373,
        10474
      ],
      "op": "REVERT",
      "path": "2"
    },
    "715": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        10373,
        10474
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "716": {
      "op": "POP"
    },
    "717": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        10373,
        10474
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1D0"
    },
    "720": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        10373,
        10474
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2DA"
    },
    "723": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        10373,
        10474
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "724": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        10373,
        10474
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "726": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        10373,
        10474
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3937"
    },
    "729": {
      "fn": "Governance.setNFTAddress",
      "jump": "i",
      "offset": [
        10373,
        10474
      ],
      "op": "JUMP",
      "path": "2"
    },
    "730": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        10373,
        10474
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "731": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        10373,
        10474
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE77"
    },
    "734": {
      "fn": "Governance.setNFTAddress",
      "jump": "i",
      "offset": [
        10373,
        10474
      ],
      "op": "JUMP",
      "path": "2"
    },
    "735": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "736": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "737": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "DUP1",
      "path": "12"
    },
    "738": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "739": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2EB"
    },
    "742": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "743": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "745": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "DUP1",
      "path": "12"
    },
    "746": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "REVERT",
      "path": "12"
    },
    "747": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "748": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "POP",
      "path": "12"
    },
    "749": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1D0"
    },
    "752": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xEC3"
    },
    "755": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1652,
        1746
      ],
      "op": "JUMP",
      "path": "12"
    },
    "756": {
      "fn": "Governance.completeTask",
      "offset": [
        16230,
        17516
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "757": {
      "fn": "Governance.completeTask",
      "offset": [
        16230,
        17516
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "758": {
      "fn": "Governance.completeTask",
      "offset": [
        16230,
        17516
      ],
      "op": "DUP1",
      "path": "2"
    },
    "759": {
      "fn": "Governance.completeTask",
      "offset": [
        16230,
        17516
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "760": {
      "fn": "Governance.completeTask",
      "offset": [
        16230,
        17516
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x300"
    },
    "763": {
      "fn": "Governance.completeTask",
      "offset": [
        16230,
        17516
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "764": {
      "fn": "Governance.completeTask",
      "offset": [
        16230,
        17516
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "766": {
      "fn": "Governance.completeTask",
      "offset": [
        16230,
        17516
      ],
      "op": "DUP1",
      "path": "2"
    },
    "767": {
      "fn": "Governance.completeTask",
      "offset": [
        16230,
        17516
      ],
      "op": "REVERT",
      "path": "2"
    },
    "768": {
      "fn": "Governance.completeTask",
      "offset": [
        16230,
        17516
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "769": {
      "op": "POP"
    },
    "770": {
      "fn": "Governance.completeTask",
      "offset": [
        16230,
        17516
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1D0"
    },
    "773": {
      "fn": "Governance.completeTask",
      "offset": [
        16230,
        17516
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x30F"
    },
    "776": {
      "fn": "Governance.completeTask",
      "offset": [
        16230,
        17516
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "777": {
      "fn": "Governance.completeTask",
      "offset": [
        16230,
        17516
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "779": {
      "fn": "Governance.completeTask",
      "offset": [
        16230,
        17516
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x39C3"
    },
    "782": {
      "fn": "Governance.completeTask",
      "jump": "i",
      "offset": [
        16230,
        17516
      ],
      "op": "JUMP",
      "path": "2"
    },
    "783": {
      "fn": "Governance.completeTask",
      "offset": [
        16230,
        17516
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "784": {
      "fn": "Governance.completeTask",
      "offset": [
        16230,
        17516
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xEF9"
    },
    "787": {
      "fn": "Governance.completeTask",
      "jump": "i",
      "offset": [
        16230,
        17516
      ],
      "op": "JUMP",
      "path": "2"
    },
    "788": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5367,
        6336
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "789": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5367,
        6336
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "790": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5367,
        6336
      ],
      "op": "DUP1",
      "path": "2"
    },
    "791": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5367,
        6336
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "792": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5367,
        6336
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x320"
    },
    "795": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5367,
        6336
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "796": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5367,
        6336
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "798": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5367,
        6336
      ],
      "op": "DUP1",
      "path": "2"
    },
    "799": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5367,
        6336
      ],
      "op": "REVERT",
      "path": "2"
    },
    "800": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5367,
        6336
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "801": {
      "op": "POP"
    },
    "802": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5367,
        6336
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2B1"
    },
    "805": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5367,
        6336
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x32F"
    },
    "808": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5367,
        6336
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "809": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5367,
        6336
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "811": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5367,
        6336
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3417"
    },
    "814": {
      "fn": "Governance.getWinningVote",
      "jump": "i",
      "offset": [
        5367,
        6336
      ],
      "op": "JUMP",
      "path": "2"
    },
    "815": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5367,
        6336
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "816": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5367,
        6336
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x136F"
    },
    "819": {
      "fn": "Governance.getWinningVote",
      "jump": "i",
      "offset": [
        5367,
        6336
      ],
      "op": "JUMP",
      "path": "2"
    },
    "820": {
      "fn": "Governance.vote",
      "offset": [
        12353,
        13017
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "821": {
      "fn": "Governance.vote",
      "offset": [
        12353,
        13017
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "822": {
      "fn": "Governance.vote",
      "offset": [
        12353,
        13017
      ],
      "op": "DUP1",
      "path": "2"
    },
    "823": {
      "fn": "Governance.vote",
      "offset": [
        12353,
        13017
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "824": {
      "fn": "Governance.vote",
      "offset": [
        12353,
        13017
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x340"
    },
    "827": {
      "fn": "Governance.vote",
      "offset": [
        12353,
        13017
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "828": {
      "fn": "Governance.vote",
      "offset": [
        12353,
        13017
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "830": {
      "fn": "Governance.vote",
      "offset": [
        12353,
        13017
      ],
      "op": "DUP1",
      "path": "2"
    },
    "831": {
      "fn": "Governance.vote",
      "offset": [
        12353,
        13017
      ],
      "op": "REVERT",
      "path": "2"
    },
    "832": {
      "fn": "Governance.vote",
      "offset": [
        12353,
        13017
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "833": {
      "op": "POP"
    },
    "834": {
      "fn": "Governance.vote",
      "offset": [
        12353,
        13017
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1D0"
    },
    "837": {
      "fn": "Governance.vote",
      "offset": [
        12353,
        13017
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x34F"
    },
    "840": {
      "fn": "Governance.vote",
      "offset": [
        12353,
        13017
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "841": {
      "fn": "Governance.vote",
      "offset": [
        12353,
        13017
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "843": {
      "fn": "Governance.vote",
      "offset": [
        12353,
        13017
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3A19"
    },
    "846": {
      "fn": "Governance.vote",
      "jump": "i",
      "offset": [
        12353,
        13017
      ],
      "op": "JUMP",
      "path": "2"
    },
    "847": {
      "fn": "Governance.vote",
      "offset": [
        12353,
        13017
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "848": {
      "fn": "Governance.vote",
      "offset": [
        12353,
        13017
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1592"
    },
    "851": {
      "fn": "Governance.vote",
      "jump": "i",
      "offset": [
        12353,
        13017
      ],
      "op": "JUMP",
      "path": "2"
    },
    "852": {
      "offset": [
        2840,
        2878
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "853": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "854": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "DUP1",
      "path": "2"
    },
    "855": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "856": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x360"
    },
    "859": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "860": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "862": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "DUP1",
      "path": "2"
    },
    "863": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "REVERT",
      "path": "2"
    },
    "864": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "865": {
      "op": "POP"
    },
    "866": {
      "offset": [
        2840,
        2878
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x374"
    },
    "869": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x36F"
    },
    "872": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "873": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "875": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3417"
    },
    "878": {
      "fn": "Governance.vote",
      "jump": "i",
      "offset": [
        2840,
        2878
      ],
      "op": "JUMP",
      "path": "2"
    },
    "879": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "880": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x15CB"
    },
    "883": {
      "fn": "Governance.vote",
      "jump": "i",
      "offset": [
        2840,
        2878
      ],
      "op": "JUMP",
      "path": "2"
    },
    "884": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "885": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "887": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "888": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A7"
    },
    "891": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP11",
      "path": "2"
    },
    "892": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP10",
      "path": "2"
    },
    "893": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP9",
      "path": "2"
    },
    "894": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP8",
      "path": "2"
    },
    "895": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP7",
      "path": "2"
    },
    "896": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "897": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "898": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "899": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "900": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "901": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "902": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3A45"
    },
    "905": {
      "fn": "Governance.vote",
      "jump": "i",
      "offset": [
        2840,
        2878
      ],
      "op": "JUMP",
      "path": "2"
    },
    "906": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "907": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "908": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "DUP1",
      "path": "12"
    },
    "909": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "910": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x396"
    },
    "913": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "914": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "916": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "DUP1",
      "path": "12"
    },
    "917": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "REVERT",
      "path": "12"
    },
    "918": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "919": {
      "op": "POP"
    },
    "920": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 0,
      "value": "0x1"
    },
    "922": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "923": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "925": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "926": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "928": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "930": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "932": {
      "op": "SHL"
    },
    "933": {
      "op": "SUB"
    },
    "934": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "935": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "936": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "AND",
      "path": "12"
    },
    "937": {
      "op": "DUP2"
    },
    "938": {
      "op": "MSTORE"
    },
    "939": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "941": {
      "op": "ADD"
    },
    "942": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1A7"
    },
    "945": {
      "op": "JUMP"
    },
    "946": {
      "offset": [
        2884,
        2918
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "947": {
      "fn": "Ownable.owner",
      "offset": [
        2884,
        2918
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "948": {
      "fn": "Ownable.owner",
      "offset": [
        2884,
        2918
      ],
      "op": "DUP1",
      "path": "2"
    },
    "949": {
      "fn": "Ownable.owner",
      "offset": [
        2884,
        2918
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "950": {
      "fn": "Ownable.owner",
      "offset": [
        2884,
        2918
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3BE"
    },
    "953": {
      "fn": "Ownable.owner",
      "offset": [
        2884,
        2918
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "954": {
      "fn": "Ownable.owner",
      "offset": [
        2884,
        2918
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "956": {
      "fn": "Ownable.owner",
      "offset": [
        2884,
        2918
      ],
      "op": "DUP1",
      "path": "2"
    },
    "957": {
      "fn": "Ownable.owner",
      "offset": [
        2884,
        2918
      ],
      "op": "REVERT",
      "path": "2"
    },
    "958": {
      "fn": "Ownable.owner",
      "offset": [
        2884,
        2918
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "959": {
      "fn": "Ownable.owner",
      "offset": [
        2884,
        2918
      ],
      "op": "POP",
      "path": "2"
    },
    "960": {
      "fn": "Ownable.owner",
      "offset": [
        2884,
        2918
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2B1"
    },
    "963": {
      "fn": "Ownable.owner",
      "offset": [
        2884,
        2918
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xB"
    },
    "965": {
      "fn": "Ownable.owner",
      "offset": [
        2884,
        2918
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "966": {
      "fn": "Ownable.owner",
      "offset": [
        2884,
        2918
      ],
      "op": "DUP2",
      "path": "2"
    },
    "967": {
      "fn": "Ownable.owner",
      "offset": [
        2884,
        2918
      ],
      "op": "JUMP",
      "path": "2"
    },
    "968": {
      "fn": "Governance.getTaskById",
      "offset": [
        4854,
        4966
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "969": {
      "fn": "Governance.getTaskById",
      "offset": [
        4854,
        4966
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "970": {
      "fn": "Governance.getTaskById",
      "offset": [
        4854,
        4966
      ],
      "op": "DUP1",
      "path": "2"
    },
    "971": {
      "fn": "Governance.getTaskById",
      "offset": [
        4854,
        4966
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "972": {
      "fn": "Governance.getTaskById",
      "offset": [
        4854,
        4966
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3D4"
    },
    "975": {
      "fn": "Governance.getTaskById",
      "offset": [
        4854,
        4966
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "976": {
      "fn": "Governance.getTaskById",
      "offset": [
        4854,
        4966
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "978": {
      "fn": "Governance.getTaskById",
      "offset": [
        4854,
        4966
      ],
      "op": "DUP1",
      "path": "2"
    },
    "979": {
      "fn": "Governance.getTaskById",
      "offset": [
        4854,
        4966
      ],
      "op": "REVERT",
      "path": "2"
    },
    "980": {
      "fn": "Governance.getTaskById",
      "offset": [
        4854,
        4966
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "981": {
      "op": "POP"
    },
    "982": {
      "fn": "Governance.getTaskById",
      "offset": [
        4854,
        4966
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3E8"
    },
    "985": {
      "fn": "Governance.getTaskById",
      "offset": [
        4854,
        4966
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3E3"
    },
    "988": {
      "fn": "Governance.getTaskById",
      "offset": [
        4854,
        4966
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "989": {
      "fn": "Governance.getTaskById",
      "offset": [
        4854,
        4966
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "991": {
      "fn": "Governance.getTaskById",
      "offset": [
        4854,
        4966
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3417"
    },
    "994": {
      "fn": "Governance.getTaskById",
      "jump": "i",
      "offset": [
        4854,
        4966
      ],
      "op": "JUMP",
      "path": "2"
    },
    "995": {
      "fn": "Governance.getTaskById",
      "offset": [
        4854,
        4966
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "996": {
      "fn": "Governance.getTaskById",
      "offset": [
        4854,
        4966
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x16CD"
    },
    "999": {
      "fn": "Governance.getTaskById",
      "jump": "i",
      "offset": [
        4854,
        4966
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1000": {
      "fn": "Governance.getTaskById",
      "offset": [
        4854,
        4966
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1001": {
      "fn": "Governance.getTaskById",
      "offset": [
        4854,
        4966
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1003": {
      "fn": "Governance.getTaskById",
      "offset": [
        4854,
        4966
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1004": {
      "fn": "Governance.getTaskById",
      "offset": [
        4854,
        4966
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A7"
    },
    "1007": {
      "fn": "Governance.getTaskById",
      "offset": [
        4854,
        4966
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1008": {
      "fn": "Governance.getTaskById",
      "offset": [
        4854,
        4966
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1009": {
      "fn": "Governance.getTaskById",
      "offset": [
        4854,
        4966
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3AC6"
    },
    "1012": {
      "fn": "Governance.getTaskById",
      "jump": "i",
      "offset": [
        4854,
        4966
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1013": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8763,
        10263
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1014": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8763,
        10263
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "1015": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8763,
        10263
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1016": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8763,
        10263
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1017": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8763,
        10263
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x401"
    },
    "1020": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8763,
        10263
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1021": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8763,
        10263
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1023": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8763,
        10263
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1024": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8763,
        10263
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1025": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8763,
        10263
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1026": {
      "op": "POP"
    },
    "1027": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8763,
        10263
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x415"
    },
    "1030": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8763,
        10263
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x410"
    },
    "1033": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8763,
        10263
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1034": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8763,
        10263
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1036": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8763,
        10263
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x366F"
    },
    "1039": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        8763,
        10263
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1040": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8763,
        10263
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1041": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8763,
        10263
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x180F"
    },
    "1044": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        8763,
        10263
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1045": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8763,
        10263
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1046": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8763,
        10263
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1048": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8763,
        10263
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1049": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8763,
        10263
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A7"
    },
    "1052": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8763,
        10263
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1053": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8763,
        10263
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1054": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8763,
        10263
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3AD9"
    },
    "1057": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        8763,
        10263
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1058": {
      "fn": "Governance.createProposal",
      "offset": [
        13063,
        13825
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1059": {
      "fn": "Governance.createProposal",
      "offset": [
        13063,
        13825
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "1060": {
      "fn": "Governance.createProposal",
      "offset": [
        13063,
        13825
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1061": {
      "fn": "Governance.createProposal",
      "offset": [
        13063,
        13825
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1062": {
      "fn": "Governance.createProposal",
      "offset": [
        13063,
        13825
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x42E"
    },
    "1065": {
      "fn": "Governance.createProposal",
      "offset": [
        13063,
        13825
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1066": {
      "fn": "Governance.createProposal",
      "offset": [
        13063,
        13825
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1068": {
      "fn": "Governance.createProposal",
      "offset": [
        13063,
        13825
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1069": {
      "fn": "Governance.createProposal",
      "offset": [
        13063,
        13825
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1070": {
      "fn": "Governance.createProposal",
      "offset": [
        13063,
        13825
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1071": {
      "op": "POP"
    },
    "1072": {
      "fn": "Governance.createProposal",
      "offset": [
        13063,
        13825
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1D0"
    },
    "1075": {
      "fn": "Governance.createProposal",
      "offset": [
        13063,
        13825
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x43D"
    },
    "1078": {
      "fn": "Governance.createProposal",
      "offset": [
        13063,
        13825
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1079": {
      "fn": "Governance.createProposal",
      "offset": [
        13063,
        13825
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1081": {
      "fn": "Governance.createProposal",
      "offset": [
        13063,
        13825
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3B3B"
    },
    "1084": {
      "fn": "Governance.createProposal",
      "jump": "i",
      "offset": [
        13063,
        13825
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1085": {
      "fn": "Governance.createProposal",
      "offset": [
        13063,
        13825
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1086": {
      "fn": "Governance.createProposal",
      "offset": [
        13063,
        13825
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1BD5"
    },
    "1089": {
      "fn": "Governance.createProposal",
      "jump": "i",
      "offset": [
        13063,
        13825
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1090": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15096,
        16224
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1091": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15096,
        16224
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "1092": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15096,
        16224
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1093": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15096,
        16224
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1094": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15096,
        16224
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x44E"
    },
    "1097": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15096,
        16224
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1098": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15096,
        16224
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1100": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15096,
        16224
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1101": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15096,
        16224
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1102": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15096,
        16224
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1103": {
      "op": "POP"
    },
    "1104": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15096,
        16224
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1D0"
    },
    "1107": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15096,
        16224
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x45D"
    },
    "1110": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15096,
        16224
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1111": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15096,
        16224
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1113": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15096,
        16224
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3417"
    },
    "1116": {
      "fn": "Governance.claimRandomTaskForVerification",
      "jump": "i",
      "offset": [
        15096,
        16224
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1117": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15096,
        16224
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1118": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15096,
        16224
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1D35"
    },
    "1121": {
      "fn": "Governance.claimRandomTaskForVerification",
      "jump": "i",
      "offset": [
        15096,
        16224
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1122": {
      "offset": [
        2582,
        2643
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1123": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        2582,
        2643
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "1124": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        2582,
        2643
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1125": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        2582,
        2643
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1126": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        2582,
        2643
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x46E"
    },
    "1129": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        2582,
        2643
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1130": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        2582,
        2643
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1132": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        2582,
        2643
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1133": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        2582,
        2643
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1134": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        2582,
        2643
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1135": {
      "op": "POP"
    },
    "1136": {
      "offset": [
        2582,
        2643
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x6"
    },
    "1138": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        2582,
        2643
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1139": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        2582,
        2643
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x488"
    },
    "1142": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        2582,
        2643
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1143": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        2582,
        2643
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xF"
    },
    "1145": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        2582,
        2643
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1146": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        2582,
        2643
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1147": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        2582,
        2643
      ],
      "op": "SIGNEXTEND",
      "path": "2"
    },
    "1148": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        2582,
        2643
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1149": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1151": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1153": {
      "op": "SHL"
    },
    "1154": {
      "offset": [
        2582,
        2643
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1155": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        2582,
        2643
      ],
      "op": "DIV",
      "path": "2"
    },
    "1156": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        2582,
        2643
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1157": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        2582,
        2643
      ],
      "op": "SIGNEXTEND",
      "path": "2"
    },
    "1158": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        2582,
        2643
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1159": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        2582,
        2643
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1160": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        2582,
        2643
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1161": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        2582,
        2643
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1163": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        2582,
        2643
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1164": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        2582,
        2643
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1165": {
      "op": "PUSH1",
      "value": "0xF"
    },
    "1167": {
      "op": "SWAP4"
    },
    "1168": {
      "op": "DUP5"
    },
    "1169": {
      "op": "SIGNEXTEND"
    },
    "1170": {
      "op": "DUP2"
    },
    "1171": {
      "op": "MSTORE"
    },
    "1172": {
      "op": "SWAP2"
    },
    "1173": {
      "op": "SWAP1"
    },
    "1174": {
      "op": "SWAP3"
    },
    "1175": {
      "op": "SIGNEXTEND"
    },
    "1176": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1178": {
      "op": "DUP3"
    },
    "1179": {
      "op": "ADD"
    },
    "1180": {
      "op": "MSTORE"
    },
    "1181": {
      "op": "ADD"
    },
    "1182": {
      "offset": [
        2582,
        2643
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A7"
    },
    "1185": {
      "op": "JUMP"
    },
    "1186": {
      "fn": "Governance.submitVerification",
      "offset": [
        18731,
        22939
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1187": {
      "fn": "Governance.submitVerification",
      "offset": [
        18731,
        22939
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "1188": {
      "fn": "Governance.submitVerification",
      "offset": [
        18731,
        22939
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1189": {
      "fn": "Governance.submitVerification",
      "offset": [
        18731,
        22939
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1190": {
      "fn": "Governance.submitVerification",
      "offset": [
        18731,
        22939
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4AE"
    },
    "1193": {
      "fn": "Governance.submitVerification",
      "offset": [
        18731,
        22939
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1194": {
      "fn": "Governance.submitVerification",
      "offset": [
        18731,
        22939
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1196": {
      "fn": "Governance.submitVerification",
      "offset": [
        18731,
        22939
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1197": {
      "fn": "Governance.submitVerification",
      "offset": [
        18731,
        22939
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1198": {
      "fn": "Governance.submitVerification",
      "offset": [
        18731,
        22939
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1199": {
      "op": "POP"
    },
    "1200": {
      "fn": "Governance.submitVerification",
      "offset": [
        18731,
        22939
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1D0"
    },
    "1203": {
      "fn": "Governance.submitVerification",
      "offset": [
        18731,
        22939
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4BD"
    },
    "1206": {
      "fn": "Governance.submitVerification",
      "offset": [
        18731,
        22939
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1207": {
      "fn": "Governance.submitVerification",
      "offset": [
        18731,
        22939
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1209": {
      "fn": "Governance.submitVerification",
      "offset": [
        18731,
        22939
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3B8B"
    },
    "1212": {
      "fn": "Governance.submitVerification",
      "jump": "i",
      "offset": [
        18731,
        22939
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1213": {
      "fn": "Governance.submitVerification",
      "offset": [
        18731,
        22939
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1214": {
      "fn": "Governance.submitVerification",
      "offset": [
        18731,
        22939
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x206C"
    },
    "1217": {
      "fn": "Governance.submitVerification",
      "jump": "i",
      "offset": [
        18731,
        22939
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1218": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1219": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "1220": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1221": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "1222": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x4CE"
    },
    "1225": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "1226": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1228": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1229": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "REVERT",
      "path": "12"
    },
    "1230": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1231": {
      "op": "POP"
    },
    "1232": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1D0"
    },
    "1235": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x4DD"
    },
    "1238": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "1239": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "1241": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3937"
    },
    "1244": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1901,
        2093
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1245": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1246": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2A89"
    },
    "1249": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1901,
        2093
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1250": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6383,
        7071
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1251": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6383,
        7071
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "1252": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6383,
        7071
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1253": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6383,
        7071
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1254": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6383,
        7071
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4EE"
    },
    "1257": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6383,
        7071
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1258": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6383,
        7071
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1260": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6383,
        7071
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1261": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6383,
        7071
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1262": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6383,
        7071
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1263": {
      "op": "POP"
    },
    "1264": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6383,
        7071
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x21B"
    },
    "1267": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6383,
        7071
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4FD"
    },
    "1270": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6383,
        7071
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1271": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6383,
        7071
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1273": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6383,
        7071
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3417"
    },
    "1276": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "jump": "i",
      "offset": [
        6383,
        7071
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1277": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6383,
        7071
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1278": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6383,
        7071
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2B24"
    },
    "1281": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "jump": "i",
      "offset": [
        6383,
        7071
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1282": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10600,
        11821
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1283": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10600,
        11821
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "1284": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10600,
        11821
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1285": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10600,
        11821
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1286": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10600,
        11821
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x50E"
    },
    "1289": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10600,
        11821
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1290": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10600,
        11821
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1292": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10600,
        11821
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1293": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10600,
        11821
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1294": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10600,
        11821
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1295": {
      "op": "POP"
    },
    "1296": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10600,
        11821
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1D0"
    },
    "1299": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10600,
        11821
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x51D"
    },
    "1302": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10600,
        11821
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1303": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10600,
        11821
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1305": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10600,
        11821
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3BDA"
    },
    "1308": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "jump": "i",
      "offset": [
        10600,
        11821
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1309": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10600,
        11821
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1310": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10600,
        11821
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2CF4"
    },
    "1313": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "jump": "i",
      "offset": [
        10600,
        11821
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1314": {
      "fn": "Governance.getVotes",
      "offset": [
        4972,
        5361
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1315": {
      "fn": "Governance.getVotes",
      "offset": [
        4972,
        5361
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "1316": {
      "fn": "Governance.getVotes",
      "offset": [
        4972,
        5361
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1317": {
      "fn": "Governance.getVotes",
      "offset": [
        4972,
        5361
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1318": {
      "fn": "Governance.getVotes",
      "offset": [
        4972,
        5361
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x52E"
    },
    "1321": {
      "fn": "Governance.getVotes",
      "offset": [
        4972,
        5361
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1322": {
      "fn": "Governance.getVotes",
      "offset": [
        4972,
        5361
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1324": {
      "fn": "Governance.getVotes",
      "offset": [
        4972,
        5361
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1325": {
      "fn": "Governance.getVotes",
      "offset": [
        4972,
        5361
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1326": {
      "fn": "Governance.getVotes",
      "offset": [
        4972,
        5361
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1327": {
      "op": "POP"
    },
    "1328": {
      "fn": "Governance.getVotes",
      "offset": [
        4972,
        5361
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x542"
    },
    "1331": {
      "fn": "Governance.getVotes",
      "offset": [
        4972,
        5361
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x53D"
    },
    "1334": {
      "fn": "Governance.getVotes",
      "offset": [
        4972,
        5361
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1335": {
      "fn": "Governance.getVotes",
      "offset": [
        4972,
        5361
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1337": {
      "fn": "Governance.getVotes",
      "offset": [
        4972,
        5361
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3417"
    },
    "1340": {
      "fn": "Governance.getVotes",
      "jump": "i",
      "offset": [
        4972,
        5361
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1341": {
      "fn": "Governance.getVotes",
      "offset": [
        4972,
        5361
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1342": {
      "fn": "Governance.getVotes",
      "offset": [
        4972,
        5361
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2E91"
    },
    "1345": {
      "fn": "Governance.getVotes",
      "jump": "i",
      "offset": [
        4972,
        5361
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1346": {
      "fn": "Governance.getVotes",
      "offset": [
        4972,
        5361
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1347": {
      "fn": "Governance.getVotes",
      "offset": [
        4972,
        5361
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1349": {
      "fn": "Governance.getVotes",
      "offset": [
        4972,
        5361
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1350": {
      "fn": "Governance.getVotes",
      "offset": [
        4972,
        5361
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A7"
    },
    "1353": {
      "fn": "Governance.getVotes",
      "offset": [
        4972,
        5361
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1354": {
      "fn": "Governance.getVotes",
      "offset": [
        4972,
        5361
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1355": {
      "fn": "Governance.getVotes",
      "offset": [
        4972,
        5361
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3C16"
    },
    "1358": {
      "fn": "Governance.getVotes",
      "jump": "i",
      "offset": [
        4972,
        5361
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1359": {
      "offset": [
        2759,
        2805
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1360": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x8"
    },
    "1362": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1364": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1365": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1367": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1368": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1369": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1370": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1372": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1373": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1374": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1375": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1376": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1377": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1378": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x56A"
    },
    "1381": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1382": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3C5E"
    },
    "1385": {
      "fn": "Governance.getVotes",
      "jump": "i",
      "offset": [
        2759,
        2805
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1386": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1387": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1388": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "1390": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "ADD",
      "path": "2"
    },
    "1391": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1393": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1394": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1395": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "DIV",
      "path": "2"
    },
    "1396": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "MUL",
      "path": "2"
    },
    "1397": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1399": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "ADD",
      "path": "2"
    },
    "1400": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1402": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1403": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1404": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1405": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "ADD",
      "path": "2"
    },
    "1406": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1408": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1409": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1410": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1411": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1412": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1413": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1414": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1415": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1416": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1418": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "ADD",
      "path": "2"
    },
    "1419": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1420": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1421": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1422": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x596"
    },
    "1425": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1426": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3C5E"
    },
    "1429": {
      "fn": "Governance.getVotes",
      "jump": "i",
      "offset": [
        2759,
        2805
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1430": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1431": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1432": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1433": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5E3"
    },
    "1436": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1437": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1438": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "1440": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "LT",
      "path": "2"
    },
    "1441": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5B8"
    },
    "1444": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1445": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "1448": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1449": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1450": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1451": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "DIV",
      "path": "2"
    },
    "1452": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "MUL",
      "path": "2"
    },
    "1453": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1454": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1455": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1456": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1458": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "ADD",
      "path": "2"
    },
    "1459": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1460": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5E3"
    },
    "1463": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1464": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1465": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1466": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "ADD",
      "path": "2"
    },
    "1467": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1468": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1469": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1471": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1472": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1474": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1476": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1477": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1478": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1479": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1480": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1481": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1482": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1483": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1484": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "1486": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "ADD",
      "path": "2"
    },
    "1487": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1488": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1490": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "ADD",
      "path": "2"
    },
    "1491": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1492": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1493": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "GT",
      "path": "2"
    },
    "1494": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5C6"
    },
    "1497": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1498": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1499": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1500": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "SUB",
      "path": "2"
    },
    "1501": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "1503": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "AND",
      "path": "2"
    },
    "1504": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1505": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "ADD",
      "path": "2"
    },
    "1506": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1507": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1508": {
      "op": "POP"
    },
    "1509": {
      "op": "POP"
    },
    "1510": {
      "op": "POP"
    },
    "1511": {
      "op": "POP"
    },
    "1512": {
      "offset": [
        2759,
        2805
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "1514": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1515": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "ADD",
      "path": "2"
    },
    "1516": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1517": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "1519": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1520": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "1521": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "ADD",
      "path": "2"
    },
    "1522": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1523": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1524": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1525": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "1528": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "AND",
      "path": "2"
    },
    "1529": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1530": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "1536": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1537": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1538": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "AND",
      "path": "2"
    },
    "1539": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1540": {
      "op": "POP"
    },
    "1541": {
      "offset": [
        2759,
        2805
      ],
      "op": "PUSH6",
      "path": "2",
      "value": "0x10000000000"
    },
    "1548": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1549": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "DIV",
      "path": "2"
    },
    "1550": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1551": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "AND",
      "path": "2"
    },
    "1552": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1553": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1555": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "1557": {
      "op": "SHL"
    },
    "1558": {
      "offset": [
        2759,
        2805
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1559": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "DIV",
      "path": "2"
    },
    "1560": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "AND",
      "path": "2"
    },
    "1561": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "DUP6",
      "path": "2"
    },
    "1562": {
      "fn": "Governance.getVotes",
      "jump": "o",
      "offset": [
        2759,
        2805
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1563": {
      "fn": "Governance.testHashing",
      "offset": [
        17522,
        18025
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1564": {
      "fn": "Governance.testHashing",
      "offset": [
        17623,
        17645
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1566": {
      "fn": "Governance.testHashing",
      "offset": [
        17665,
        17672
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1567": {
      "fn": "Governance.testHashing",
      "offset": [
        17673,
        17674
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1569": {
      "fn": "Governance.testHashing",
      "offset": [
        17665,
        17675
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1570": {
      "fn": "Governance.testHashing",
      "offset": [
        17665,
        17675
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1571": {
      "fn": "Governance.testHashing",
      "offset": [
        17665,
        17675
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1572": {
      "fn": "Governance.testHashing",
      "offset": [
        17665,
        17675
      ],
      "op": "LT",
      "path": "2"
    },
    "1573": {
      "fn": "Governance.testHashing",
      "offset": [
        17665,
        17675
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x630"
    },
    "1576": {
      "fn": "Governance.testHashing",
      "offset": [
        17665,
        17675
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1577": {
      "fn": "Governance.testHashing",
      "offset": [
        17665,
        17675
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x630"
    },
    "1580": {
      "fn": "Governance.testHashing",
      "offset": [
        17665,
        17675
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3C98"
    },
    "1583": {
      "fn": "Governance.testHashing",
      "jump": "i",
      "offset": [
        17665,
        17675
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1584": {
      "fn": "Governance.testHashing",
      "offset": [
        17665,
        17675
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1585": {
      "fn": "Governance.testHashing",
      "offset": [
        17665,
        17675
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1587": {
      "fn": "Governance.testHashing",
      "offset": [
        17665,
        17675
      ],
      "op": "MUL",
      "path": "2"
    },
    "1588": {
      "fn": "Governance.testHashing",
      "offset": [
        17665,
        17675
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1590": {
      "fn": "Governance.testHashing",
      "offset": [
        17665,
        17675
      ],
      "op": "ADD",
      "path": "2"
    },
    "1591": {
      "fn": "Governance.testHashing",
      "offset": [
        17665,
        17675
      ],
      "op": "ADD",
      "path": "2"
    },
    "1592": {
      "fn": "Governance.testHashing",
      "offset": [
        17665,
        17675
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1593": {
      "fn": "Governance.testHashing",
      "offset": [
        17648,
        17676
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1595": {
      "fn": "Governance.testHashing",
      "offset": [
        17648,
        17676
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1596": {
      "fn": "Governance.testHashing",
      "offset": [
        17648,
        17676
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1598": {
      "fn": "Governance.testHashing",
      "offset": [
        17648,
        17676
      ],
      "op": "ADD",
      "path": "2"
    },
    "1599": {
      "fn": "Governance.testHashing",
      "offset": [
        17648,
        17676
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x64A"
    },
    "1602": {
      "fn": "Governance.testHashing",
      "offset": [
        17648,
        17676
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1603": {
      "op": "DUP2"
    },
    "1604": {
      "op": "MSTORE"
    },
    "1605": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1607": {
      "op": "ADD"
    },
    "1608": {
      "op": "SWAP1"
    },
    "1609": {
      "op": "JUMP"
    },
    "1610": {
      "fn": "Governance.testHashing",
      "offset": [
        17648,
        17676
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1611": {
      "fn": "Governance.testHashing",
      "offset": [
        17648,
        17676
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1613": {
      "fn": "Governance.testHashing",
      "offset": [
        17648,
        17676
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1614": {
      "fn": "Governance.testHashing",
      "offset": [
        17648,
        17676
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1616": {
      "fn": "Governance.testHashing",
      "offset": [
        17648,
        17676
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1617": {
      "fn": "Governance.testHashing",
      "offset": [
        17648,
        17676
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1618": {
      "fn": "Governance.testHashing",
      "offset": [
        17648,
        17676
      ],
      "op": "SUB",
      "path": "2"
    },
    "1619": {
      "fn": "Governance.testHashing",
      "offset": [
        17648,
        17676
      ],
      "op": "SUB",
      "path": "2"
    },
    "1620": {
      "fn": "Governance.testHashing",
      "offset": [
        17648,
        17676
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1621": {
      "fn": "Governance.testHashing",
      "offset": [
        17648,
        17676
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1622": {
      "fn": "Governance.testHashing",
      "offset": [
        17648,
        17676
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1623": {
      "fn": "Governance.testHashing",
      "offset": [
        17648,
        17676
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1625": {
      "fn": "Governance.testHashing",
      "offset": [
        17648,
        17676
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1626": {
      "fn": "Governance.testHashing",
      "offset": [
        17623,
        17676
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1627": {
      "fn": "Governance.testHashing",
      "offset": [
        17623,
        17676
      ],
      "op": "POP",
      "path": "2"
    },
    "1628": {
      "branch": 126,
      "fn": "Governance.testHashing",
      "offset": [
        17689,
        17697
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1629": {
      "fn": "Governance.testHashing",
      "offset": [
        17686,
        17879
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1630": {
      "fn": "Governance.testHashing",
      "offset": [
        17686,
        17879
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6D6"
    },
    "1633": {
      "branch": 126,
      "fn": "Governance.testHashing",
      "offset": [
        17686,
        17879
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1634": {
      "fn": "Governance.testHashing",
      "offset": [
        17717,
        17726
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1636": {
      "fn": "Governance.testHashing",
      "offset": [
        17713,
        17869
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1637": {
      "fn": "Governance.testHashing",
      "offset": [
        17736,
        17743
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1638": {
      "fn": "Governance.testHashing",
      "offset": [
        17736,
        17750
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1639": {
      "fn": "Governance.testHashing",
      "offset": [
        17732,
        17733
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1640": {
      "fn": "Governance.testHashing",
      "offset": [
        17732,
        17750
      ],
      "op": "LT",
      "path": "2"
    },
    "1641": {
      "fn": "Governance.testHashing",
      "offset": [
        17713,
        17869
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1642": {
      "fn": "Governance.testHashing",
      "offset": [
        17713,
        17869
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6D4"
    },
    "1645": {
      "fn": "Governance.testHashing",
      "offset": [
        17713,
        17869
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1646": {
      "fn": "Governance.testHashing",
      "offset": [
        17810,
        17817
      ],
      "op": "DUP4",
      "path": "2",
      "statement": 1
    },
    "1647": {
      "fn": "Governance.testHashing",
      "offset": [
        17818,
        17819
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1648": {
      "fn": "Governance.testHashing",
      "offset": [
        17810,
        17820
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1649": {
      "fn": "Governance.testHashing",
      "offset": [
        17810,
        17820
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1650": {
      "fn": "Governance.testHashing",
      "offset": [
        17810,
        17820
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1651": {
      "fn": "Governance.testHashing",
      "offset": [
        17810,
        17820
      ],
      "op": "LT",
      "path": "2"
    },
    "1652": {
      "fn": "Governance.testHashing",
      "offset": [
        17810,
        17820
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x67F"
    },
    "1655": {
      "fn": "Governance.testHashing",
      "offset": [
        17810,
        17820
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1656": {
      "fn": "Governance.testHashing",
      "offset": [
        17810,
        17820
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x67F"
    },
    "1659": {
      "fn": "Governance.testHashing",
      "offset": [
        17810,
        17820
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3C98"
    },
    "1662": {
      "fn": "Governance.testHashing",
      "jump": "i",
      "offset": [
        17810,
        17820
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1663": {
      "fn": "Governance.testHashing",
      "offset": [
        17810,
        17820
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1664": {
      "fn": "Governance.testHashing",
      "offset": [
        17810,
        17820
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1666": {
      "fn": "Governance.testHashing",
      "offset": [
        17810,
        17820
      ],
      "op": "MUL",
      "path": "2"
    },
    "1667": {
      "fn": "Governance.testHashing",
      "offset": [
        17810,
        17820
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1669": {
      "fn": "Governance.testHashing",
      "offset": [
        17810,
        17820
      ],
      "op": "ADD",
      "path": "2"
    },
    "1670": {
      "fn": "Governance.testHashing",
      "offset": [
        17810,
        17820
      ],
      "op": "ADD",
      "path": "2"
    },
    "1671": {
      "fn": "Governance.testHashing",
      "offset": [
        17810,
        17820
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1672": {
      "fn": "Governance.testHashing",
      "offset": [
        17793,
        17821
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1674": {
      "fn": "Governance.testHashing",
      "offset": [
        17793,
        17821
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1675": {
      "fn": "Governance.testHashing",
      "offset": [
        17793,
        17821
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1677": {
      "fn": "Governance.testHashing",
      "offset": [
        17793,
        17821
      ],
      "op": "ADD",
      "path": "2"
    },
    "1678": {
      "fn": "Governance.testHashing",
      "offset": [
        17793,
        17821
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x699"
    },
    "1681": {
      "fn": "Governance.testHashing",
      "offset": [
        17793,
        17821
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1682": {
      "op": "DUP2"
    },
    "1683": {
      "op": "MSTORE"
    },
    "1684": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1686": {
      "op": "ADD"
    },
    "1687": {
      "op": "SWAP1"
    },
    "1688": {
      "op": "JUMP"
    },
    "1689": {
      "fn": "Governance.testHashing",
      "offset": [
        17793,
        17821
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1690": {
      "fn": "Governance.testHashing",
      "offset": [
        17793,
        17821
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1692": {
      "fn": "Governance.testHashing",
      "offset": [
        17793,
        17821
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1693": {
      "fn": "Governance.testHashing",
      "offset": [
        17793,
        17821
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1695": {
      "fn": "Governance.testHashing",
      "offset": [
        17793,
        17821
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1696": {
      "fn": "Governance.testHashing",
      "offset": [
        17793,
        17821
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1697": {
      "fn": "Governance.testHashing",
      "offset": [
        17793,
        17821
      ],
      "op": "SUB",
      "path": "2"
    },
    "1698": {
      "fn": "Governance.testHashing",
      "offset": [
        17793,
        17821
      ],
      "op": "SUB",
      "path": "2"
    },
    "1699": {
      "fn": "Governance.testHashing",
      "offset": [
        17793,
        17821
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1700": {
      "fn": "Governance.testHashing",
      "offset": [
        17793,
        17821
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1701": {
      "fn": "Governance.testHashing",
      "offset": [
        17793,
        17821
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1702": {
      "fn": "Governance.testHashing",
      "offset": [
        17793,
        17821
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1704": {
      "fn": "Governance.testHashing",
      "offset": [
        17793,
        17821
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1705": {
      "fn": "Governance.testHashing",
      "offset": [
        17783,
        17822
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1706": {
      "fn": "Governance.testHashing",
      "offset": [
        17783,
        17822
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1707": {
      "fn": "Governance.testHashing",
      "offset": [
        17783,
        17822
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1708": {
      "fn": "Governance.testHashing",
      "offset": [
        17783,
        17822
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1710": {
      "fn": "Governance.testHashing",
      "offset": [
        17783,
        17822
      ],
      "op": "ADD",
      "path": "2"
    },
    "1711": {
      "fn": "Governance.testHashing",
      "offset": [
        17783,
        17822
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1712": {
      "fn": "Governance.testHashing",
      "offset": [
        17770,
        17777
      ],
      "op": "DUP5",
      "path": "2"
    },
    "1713": {
      "fn": "Governance.testHashing",
      "offset": [
        17778,
        17779
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1714": {
      "fn": "Governance.testHashing",
      "offset": [
        17770,
        17780
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1715": {
      "fn": "Governance.testHashing",
      "offset": [
        17770,
        17780
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1716": {
      "fn": "Governance.testHashing",
      "offset": [
        17770,
        17780
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1717": {
      "fn": "Governance.testHashing",
      "offset": [
        17770,
        17780
      ],
      "op": "LT",
      "path": "2"
    },
    "1718": {
      "fn": "Governance.testHashing",
      "offset": [
        17770,
        17780
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6C1"
    },
    "1721": {
      "fn": "Governance.testHashing",
      "offset": [
        17770,
        17780
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1722": {
      "fn": "Governance.testHashing",
      "offset": [
        17770,
        17780
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6C1"
    },
    "1725": {
      "fn": "Governance.testHashing",
      "offset": [
        17770,
        17780
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3C98"
    },
    "1728": {
      "fn": "Governance.testHashing",
      "jump": "i",
      "offset": [
        17770,
        17780
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1729": {
      "fn": "Governance.testHashing",
      "offset": [
        17770,
        17780
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1730": {
      "fn": "Governance.testHashing",
      "offset": [
        17770,
        17780
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1732": {
      "fn": "Governance.testHashing",
      "offset": [
        17770,
        17780
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1733": {
      "fn": "Governance.testHashing",
      "offset": [
        17770,
        17780
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1734": {
      "fn": "Governance.testHashing",
      "offset": [
        17770,
        17780
      ],
      "op": "MUL",
      "path": "2"
    },
    "1735": {
      "fn": "Governance.testHashing",
      "offset": [
        17770,
        17780
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1736": {
      "fn": "Governance.testHashing",
      "offset": [
        17770,
        17780
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1737": {
      "fn": "Governance.testHashing",
      "offset": [
        17770,
        17780
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1738": {
      "fn": "Governance.testHashing",
      "offset": [
        17770,
        17780
      ],
      "op": "ADD",
      "path": "2"
    },
    "1739": {
      "fn": "Governance.testHashing",
      "offset": [
        17770,
        17780
      ],
      "op": "ADD",
      "path": "2"
    },
    "1740": {
      "fn": "Governance.testHashing",
      "offset": [
        17770,
        17822
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1741": {
      "fn": "Governance.testHashing",
      "offset": [
        17850,
        17853
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 2,
      "value": "0x1"
    },
    "1743": {
      "fn": "Governance.testHashing",
      "offset": [
        17850,
        17853
      ],
      "op": "ADD",
      "path": "2"
    },
    "1744": {
      "fn": "Governance.testHashing",
      "offset": [
        17713,
        17869
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x664"
    },
    "1747": {
      "fn": "Governance.testHashing",
      "offset": [
        17713,
        17869
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1748": {
      "fn": "Governance.testHashing",
      "offset": [
        17713,
        17869
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1749": {
      "fn": "Governance.testHashing",
      "offset": [
        17713,
        17869
      ],
      "op": "POP",
      "path": "2"
    },
    "1750": {
      "fn": "Governance.testHashing",
      "offset": [
        17686,
        17879
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1751": {
      "fn": "Governance.testHashing",
      "offset": [
        17888,
        17902
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1753": {
      "fn": "Governance.testHashing",
      "offset": [
        17932,
        17939
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1754": {
      "fn": "Governance.testHashing",
      "offset": [
        17915,
        17940
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1756": {
      "fn": "Governance.testHashing",
      "offset": [
        17915,
        17940
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1757": {
      "fn": "Governance.testHashing",
      "offset": [
        17915,
        17940
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1759": {
      "fn": "Governance.testHashing",
      "offset": [
        17915,
        17940
      ],
      "op": "ADD",
      "path": "2"
    },
    "1760": {
      "fn": "Governance.testHashing",
      "offset": [
        17915,
        17940
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6E9"
    },
    "1763": {
      "fn": "Governance.testHashing",
      "offset": [
        17915,
        17940
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1764": {
      "fn": "Governance.testHashing",
      "offset": [
        17915,
        17940
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1765": {
      "fn": "Governance.testHashing",
      "offset": [
        17915,
        17940
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3CAE"
    },
    "1768": {
      "fn": "Governance.testHashing",
      "jump": "i",
      "offset": [
        17915,
        17940
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1769": {
      "fn": "Governance.testHashing",
      "offset": [
        17915,
        17940
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1770": {
      "fn": "Governance.testHashing",
      "offset": [
        17915,
        17940
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1772": {
      "fn": "Governance.testHashing",
      "offset": [
        17915,
        17940
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1773": {
      "fn": "Governance.testHashing",
      "offset": [
        17915,
        17940
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1775": {
      "fn": "Governance.testHashing",
      "offset": [
        17915,
        17940
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1776": {
      "fn": "Governance.testHashing",
      "offset": [
        17915,
        17940
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1777": {
      "fn": "Governance.testHashing",
      "offset": [
        17915,
        17940
      ],
      "op": "SUB",
      "path": "2"
    },
    "1778": {
      "fn": "Governance.testHashing",
      "offset": [
        17915,
        17940
      ],
      "op": "SUB",
      "path": "2"
    },
    "1779": {
      "fn": "Governance.testHashing",
      "offset": [
        17915,
        17940
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1780": {
      "fn": "Governance.testHashing",
      "offset": [
        17915,
        17940
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1781": {
      "fn": "Governance.testHashing",
      "offset": [
        17915,
        17940
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1782": {
      "fn": "Governance.testHashing",
      "offset": [
        17915,
        17940
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1784": {
      "fn": "Governance.testHashing",
      "offset": [
        17915,
        17940
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1785": {
      "fn": "Governance.testHashing",
      "offset": [
        17905,
        17941
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1786": {
      "fn": "Governance.testHashing",
      "offset": [
        17905,
        17941
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1787": {
      "fn": "Governance.testHashing",
      "offset": [
        17905,
        17941
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1788": {
      "fn": "Governance.testHashing",
      "offset": [
        17905,
        17941
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1790": {
      "fn": "Governance.testHashing",
      "offset": [
        17905,
        17941
      ],
      "op": "ADD",
      "path": "2"
    },
    "1791": {
      "fn": "Governance.testHashing",
      "offset": [
        17905,
        17941
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1792": {
      "fn": "Governance.testHashing",
      "offset": [
        17888,
        17941
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1793": {
      "fn": "Governance.testHashing",
      "offset": [
        17888,
        17941
      ],
      "op": "POP",
      "path": "2"
    },
    "1794": {
      "fn": "Governance.testHashing",
      "offset": [
        17956,
        18018
      ],
      "op": "PUSH32",
      "path": "2",
      "statement": 3,
      "value": "0x637CE8D069E382E64EF71CF191623B88C7E307CE252E908E7F2BABBAD0CB81EA"
    },
    "1827": {
      "fn": "Governance.testHashing",
      "offset": [
        17968,
        17974
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1828": {
      "fn": "Governance.testHashing",
      "offset": [
        17984,
        17994
      ],
      "op": "DUP7",
      "path": "2"
    },
    "1829": {
      "fn": "Governance.testHashing",
      "offset": [
        17976,
        17982
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1830": {
      "fn": "Governance.testHashing",
      "offset": [
        17976,
        17994
      ],
      "op": "EQ",
      "path": "2"
    },
    "1831": {
      "fn": "Governance.testHashing",
      "offset": [
        17996,
        18003
      ],
      "op": "DUP7",
      "path": "2"
    },
    "1832": {
      "fn": "Governance.testHashing",
      "offset": [
        18004,
        18005
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1834": {
      "fn": "Governance.testHashing",
      "offset": [
        17996,
        18006
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1835": {
      "fn": "Governance.testHashing",
      "offset": [
        17996,
        18006
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1836": {
      "fn": "Governance.testHashing",
      "offset": [
        17996,
        18006
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1837": {
      "fn": "Governance.testHashing",
      "offset": [
        17996,
        18006
      ],
      "op": "LT",
      "path": "2"
    },
    "1838": {
      "fn": "Governance.testHashing",
      "offset": [
        17996,
        18006
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x739"
    },
    "1841": {
      "fn": "Governance.testHashing",
      "offset": [
        17996,
        18006
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1842": {
      "fn": "Governance.testHashing",
      "offset": [
        17996,
        18006
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x739"
    },
    "1845": {
      "fn": "Governance.testHashing",
      "offset": [
        17996,
        18006
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3C98"
    },
    "1848": {
      "fn": "Governance.testHashing",
      "jump": "i",
      "offset": [
        17996,
        18006
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1849": {
      "fn": "Governance.testHashing",
      "offset": [
        17996,
        18006
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1850": {
      "fn": "Governance.testHashing",
      "offset": [
        17996,
        18006
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1852": {
      "fn": "Governance.testHashing",
      "offset": [
        17996,
        18006
      ],
      "op": "MUL",
      "path": "2"
    },
    "1853": {
      "fn": "Governance.testHashing",
      "offset": [
        17996,
        18006
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1855": {
      "fn": "Governance.testHashing",
      "offset": [
        17996,
        18006
      ],
      "op": "ADD",
      "path": "2"
    },
    "1856": {
      "fn": "Governance.testHashing",
      "offset": [
        17996,
        18006
      ],
      "op": "ADD",
      "path": "2"
    },
    "1857": {
      "fn": "Governance.testHashing",
      "offset": [
        17996,
        18006
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1858": {
      "fn": "Governance.testHashing",
      "offset": [
        18008,
        18017
      ],
      "op": "DUP6",
      "path": "2"
    },
    "1859": {
      "fn": "Governance.testHashing",
      "offset": [
        17956,
        18018
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1861": {
      "fn": "Governance.testHashing",
      "offset": [
        17956,
        18018
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1862": {
      "fn": "Governance.testHashing",
      "offset": [
        17956,
        18018
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x752"
    },
    "1865": {
      "fn": "Governance.testHashing",
      "offset": [
        17956,
        18018
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "1866": {
      "fn": "Governance.testHashing",
      "offset": [
        17956,
        18018
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "1867": {
      "fn": "Governance.testHashing",
      "offset": [
        17956,
        18018
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1868": {
      "fn": "Governance.testHashing",
      "offset": [
        17956,
        18018
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1869": {
      "fn": "Governance.testHashing",
      "offset": [
        17956,
        18018
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1870": {
      "fn": "Governance.testHashing",
      "offset": [
        17956,
        18018
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3CE4"
    },
    "1873": {
      "fn": "Governance.testHashing",
      "jump": "i",
      "offset": [
        17956,
        18018
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1874": {
      "fn": "Governance.testHashing",
      "offset": [
        17956,
        18018
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1875": {
      "fn": "Governance.testHashing",
      "offset": [
        17956,
        18018
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1877": {
      "fn": "Governance.testHashing",
      "offset": [
        17956,
        18018
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1878": {
      "fn": "Governance.testHashing",
      "offset": [
        17956,
        18018
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1879": {
      "fn": "Governance.testHashing",
      "offset": [
        17956,
        18018
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1880": {
      "fn": "Governance.testHashing",
      "offset": [
        17956,
        18018
      ],
      "op": "SUB",
      "path": "2"
    },
    "1881": {
      "fn": "Governance.testHashing",
      "offset": [
        17956,
        18018
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1882": {
      "fn": "Governance.testHashing",
      "offset": [
        17956,
        18018
      ],
      "op": "LOG1",
      "path": "2"
    },
    "1883": {
      "fn": "Governance.testHashing",
      "offset": [
        17613,
        18025
      ],
      "op": "POP",
      "path": "2"
    },
    "1884": {
      "fn": "Governance.testHashing",
      "offset": [
        17613,
        18025
      ],
      "op": "POP",
      "path": "2"
    },
    "1885": {
      "fn": "Governance.testHashing",
      "offset": [
        17522,
        18025
      ],
      "op": "POP",
      "path": "2"
    },
    "1886": {
      "fn": "Governance.testHashing",
      "offset": [
        17522,
        18025
      ],
      "op": "POP",
      "path": "2"
    },
    "1887": {
      "fn": "Governance.testHashing",
      "offset": [
        17522,
        18025
      ],
      "op": "POP",
      "path": "2"
    },
    "1888": {
      "fn": "Governance.testHashing",
      "jump": "o",
      "offset": [
        17522,
        18025
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1889": {
      "offset": [
        2445,
        2472
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1890": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "1892": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1893": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1894": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1895": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1896": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "LT",
      "path": "2"
    },
    "1897": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x771"
    },
    "1900": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1901": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1903": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1904": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1905": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1906": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1907": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1909": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1910": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1912": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1914": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1915": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1916": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "1918": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "MUL",
      "path": "2"
    },
    "1919": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "ADD",
      "path": "2"
    },
    "1920": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1922": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1923": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "POP",
      "path": "2"
    },
    "1924": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1925": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "POP",
      "path": "2"
    },
    "1926": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1927": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "1929": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "ADD",
      "path": "2"
    },
    "1930": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1931": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1932": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x794"
    },
    "1935": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1936": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3C5E"
    },
    "1939": {
      "fn": "Governance.testHashing",
      "jump": "i",
      "offset": [
        2445,
        2472
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1940": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1941": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1942": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "1944": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "ADD",
      "path": "2"
    },
    "1945": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1947": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1948": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1949": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "DIV",
      "path": "2"
    },
    "1950": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "MUL",
      "path": "2"
    },
    "1951": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1953": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "ADD",
      "path": "2"
    },
    "1954": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1956": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1957": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1958": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1959": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "ADD",
      "path": "2"
    },
    "1960": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1962": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1963": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1964": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1965": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1966": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1967": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1968": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1969": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1970": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1972": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "ADD",
      "path": "2"
    },
    "1973": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1974": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1975": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1976": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7C0"
    },
    "1979": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1980": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3C5E"
    },
    "1983": {
      "fn": "Governance.testHashing",
      "jump": "i",
      "offset": [
        2445,
        2472
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1984": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1985": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1986": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1987": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x80D"
    },
    "1990": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1991": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1992": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "1994": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "LT",
      "path": "2"
    },
    "1995": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7E2"
    },
    "1998": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1999": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "2002": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2003": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2004": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2005": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "DIV",
      "path": "2"
    },
    "2006": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "MUL",
      "path": "2"
    },
    "2007": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2008": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2009": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2010": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2012": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "ADD",
      "path": "2"
    },
    "2013": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2014": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x80D"
    },
    "2017": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2018": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2019": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2020": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "ADD",
      "path": "2"
    },
    "2021": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2022": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2023": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2025": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2026": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2028": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2030": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2031": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2032": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2033": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2034": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2035": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2036": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2037": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2038": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "2040": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "ADD",
      "path": "2"
    },
    "2041": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2042": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2044": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "ADD",
      "path": "2"
    },
    "2045": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2046": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2047": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "GT",
      "path": "2"
    },
    "2048": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7F0"
    },
    "2051": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2052": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2053": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2054": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "SUB",
      "path": "2"
    },
    "2055": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "2057": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "AND",
      "path": "2"
    },
    "2058": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2059": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "ADD",
      "path": "2"
    },
    "2060": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2061": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2062": {
      "op": "POP"
    },
    "2063": {
      "op": "POP"
    },
    "2064": {
      "op": "POP"
    },
    "2065": {
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "2067": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2068": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "2069": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "ADD",
      "path": "2"
    },
    "2070": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2071": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2072": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2073": {
      "op": "POP"
    },
    "2074": {
      "op": "POP"
    },
    "2075": {
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "2077": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2078": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2079": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "AND",
      "path": "2"
    },
    "2080": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2081": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "2087": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "2090": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2091": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "DIV",
      "path": "2"
    },
    "2092": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2093": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "AND",
      "path": "2"
    },
    "2094": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2095": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH7",
      "path": "2",
      "value": "0x1000000000000"
    },
    "2103": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2104": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "DIV",
      "path": "2"
    },
    "2105": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "AND",
      "path": "2"
    },
    "2106": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2107": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH3",
      "path": "2",
      "value": "0xFFFFFF"
    },
    "2111": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2113": {
      "op": "PUSH1",
      "value": "0x38"
    },
    "2115": {
      "op": "SHL"
    },
    "2116": {
      "offset": [
        2445,
        2472
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2117": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "DIV",
      "path": "2"
    },
    "2118": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "AND",
      "path": "2"
    },
    "2119": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2120": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2122": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "2124": {
      "op": "SHL"
    },
    "2125": {
      "offset": [
        2445,
        2472
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2126": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "DIV",
      "path": "2"
    },
    "2127": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2128": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "AND",
      "path": "2"
    },
    "2129": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2130": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2132": {
      "op": "PUSH1",
      "value": "0x78"
    },
    "2134": {
      "op": "SHL"
    },
    "2135": {
      "offset": [
        2445,
        2472
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2136": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "DIV",
      "path": "2"
    },
    "2137": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2138": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2139": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "AND",
      "path": "2"
    },
    "2140": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2141": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "2144": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2146": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2148": {
      "op": "SHL"
    },
    "2149": {
      "offset": [
        2445,
        2472
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2150": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2151": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "DIV",
      "path": "2"
    },
    "2152": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "AND",
      "path": "2"
    },
    "2153": {
      "fn": "Governance.testHashing",
      "offset": [
        2445,
        2472
      ],
      "op": "DUP9",
      "path": "2"
    },
    "2154": {
      "fn": "Governance.testHashing",
      "jump": "o",
      "offset": [
        2445,
        2472
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2155": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4380,
        4673
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2156": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4428,
        4432
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2158": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4459,
        4460
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "2160": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4444,
        4645
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2161": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4467,
        4477
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE"
    },
    "2163": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4467,
        4477
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2164": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4462,
        4463
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2165": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4462,
        4477
      ],
      "op": "GT",
      "path": "2"
    },
    "2166": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4444,
        4645
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x971"
    },
    "2169": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4444,
        4645
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2170": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4506
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "2172": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4506
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2173": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4526
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "2175": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4526
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2176": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4546
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2178": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4546
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2179": {
      "op": "PUSH4",
      "value": "0x1038D37"
    },
    "2184": {
      "op": "PUSH1",
      "value": "0xE6"
    },
    "2186": {
      "op": "SHL"
    },
    "2187": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4546
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2188": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4546
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2189": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4546
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2191": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4546
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2192": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4546
      ],
      "op": "ADD",
      "path": "2"
    },
    "2193": {
      "op": "DUP5"
    },
    "2194": {
      "op": "SWAP1"
    },
    "2195": {
      "op": "MSTORE"
    },
    "2196": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4551,
        4561
      ],
      "op": "CALLER",
      "path": "2"
    },
    "2197": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4551,
        4561
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2198": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2200": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2202": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2204": {
      "op": "SHL"
    },
    "2205": {
      "op": "SUB"
    },
    "2206": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4506
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2207": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4506
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2208": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4506
      ],
      "op": "AND",
      "path": "2"
    },
    "2209": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4506
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2210": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4514
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x6352211E"
    },
    "2215": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4514
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2216": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4526
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2217": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4526
      ],
      "op": "AND",
      "path": "2"
    },
    "2218": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4526
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2219": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4543
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x40E34DC0"
    },
    "2224": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4543
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2225": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2227": {
      "op": "ADD"
    },
    "2228": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4546
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2230": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4546
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2232": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4546
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2233": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4546
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2234": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4546
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2235": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4546
      ],
      "op": "SUB",
      "path": "2"
    },
    "2236": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4546
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2237": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4546
      ],
      "op": "DUP7",
      "path": "2"
    },
    "2238": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4546
      ],
      "op": "GAS",
      "path": "2"
    },
    "2239": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4546
      ],
      "op": "STATICCALL",
      "path": "2"
    },
    "2240": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4546
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2241": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4546
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2242": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4546
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2243": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4546
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x8D0"
    },
    "2246": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4546
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2247": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4546
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "2248": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4546
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2250": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4546
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2251": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4546
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "2252": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4546
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "2253": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4546
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2255": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4546
      ],
      "op": "REVERT",
      "path": "2"
    },
    "2256": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4546
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2257": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4546
      ],
      "op": "POP",
      "path": "2"
    },
    "2258": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4546
      ],
      "op": "POP",
      "path": "2"
    },
    "2259": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4546
      ],
      "op": "POP",
      "path": "2"
    },
    "2260": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4546
      ],
      "op": "POP",
      "path": "2"
    },
    "2261": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4546
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2263": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4546
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2264": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4546
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "2265": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4546
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "2267": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4546
      ],
      "op": "NOT",
      "path": "2"
    },
    "2268": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4546
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "2270": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4546
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2271": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4546
      ],
      "op": "ADD",
      "path": "2"
    },
    "2272": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4546
      ],
      "op": "AND",
      "path": "2"
    },
    "2273": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4546
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2274": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4546
      ],
      "op": "ADD",
      "path": "2"
    },
    "2275": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4546
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2276": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4546
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2278": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4546
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2279": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4546
      ],
      "op": "POP",
      "path": "2"
    },
    "2280": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4546
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2281": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4546
      ],
      "op": "ADD",
      "path": "2"
    },
    "2282": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4546
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2283": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4546
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x8F4"
    },
    "2286": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4546
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2287": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4546
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2288": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4546
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3D15"
    },
    "2291": {
      "fn": "Governance.isCallerOnBoard",
      "jump": "i",
      "offset": [
        4515,
        4546
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2292": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4546
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2293": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2295": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2296": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2297": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xFFFFFFFF"
    },
    "2302": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "AND",
      "path": "2"
    },
    "2303": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE0"
    },
    "2305": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "SHL",
      "path": "2"
    },
    "2306": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2307": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2308": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2310": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "ADD",
      "path": "2"
    },
    "2311": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x912"
    },
    "2314": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2315": {
      "op": "DUP2"
    },
    "2316": {
      "op": "MSTORE"
    },
    "2317": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2319": {
      "op": "ADD"
    },
    "2320": {
      "op": "SWAP1"
    },
    "2321": {
      "op": "JUMP"
    },
    "2322": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2323": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2325": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2327": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2328": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2329": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2330": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "SUB",
      "path": "2"
    },
    "2331": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2332": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "DUP7",
      "path": "2"
    },
    "2333": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "GAS",
      "path": "2"
    },
    "2334": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "STATICCALL",
      "path": "2"
    },
    "2335": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2336": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2337": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2338": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x92F"
    },
    "2341": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2342": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "2343": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2345": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2346": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "2347": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "2348": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2350": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "REVERT",
      "path": "2"
    },
    "2351": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2352": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "POP",
      "path": "2"
    },
    "2353": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "POP",
      "path": "2"
    },
    "2354": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "POP",
      "path": "2"
    },
    "2355": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "POP",
      "path": "2"
    },
    "2356": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2358": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2359": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "2360": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "2362": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "NOT",
      "path": "2"
    },
    "2363": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "2365": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2366": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "ADD",
      "path": "2"
    },
    "2367": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "AND",
      "path": "2"
    },
    "2368": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2369": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "ADD",
      "path": "2"
    },
    "2370": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2371": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2373": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2374": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "POP",
      "path": "2"
    },
    "2375": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2376": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "ADD",
      "path": "2"
    },
    "2377": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2378": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x953"
    },
    "2381": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2382": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2383": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3D2E"
    },
    "2386": {
      "fn": "Governance.isCallerOnBoard",
      "jump": "i",
      "offset": [
        4496,
        4547
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2387": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2388": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2390": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2392": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2394": {
      "op": "SHL"
    },
    "2395": {
      "op": "SUB"
    },
    "2396": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4561
      ],
      "op": "AND",
      "path": "2"
    },
    "2397": {
      "branch": 127,
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4561
      ],
      "op": "SUB",
      "path": "2"
    },
    "2398": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4493,
        4607
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x969"
    },
    "2401": {
      "branch": 127,
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4493,
        4607
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2402": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4588,
        4592
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 4,
      "value": "0x1"
    },
    "2404": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4581,
        4592
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2405": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4581,
        4592
      ],
      "op": "POP",
      "path": "2"
    },
    "2406": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4581,
        4592
      ],
      "op": "POP",
      "path": "2"
    },
    "2407": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4380,
        4673
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2408": {
      "fn": "Governance.isCallerOnBoard",
      "jump": "o",
      "offset": [
        4380,
        4673
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2409": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4493,
        4607
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2410": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4630,
        4633
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 5,
      "value": "0x1"
    },
    "2412": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4630,
        4633
      ],
      "op": "ADD",
      "path": "2"
    },
    "2413": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4444,
        4645
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x870"
    },
    "2416": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4444,
        4645
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2417": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4444,
        4645
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2418": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4444,
        4645
      ],
      "op": "POP",
      "path": "2"
    },
    "2419": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4661,
        4666
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 6,
      "value": "0x0"
    },
    "2421": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4654,
        4666
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2422": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4654,
        4666
      ],
      "op": "POP",
      "path": "2"
    },
    "2423": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4380,
        4673
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2424": {
      "fn": "Governance.isCallerOnBoard",
      "jump": "o",
      "offset": [
        4380,
        4673
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2425": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7078,
        8687
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2426": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7147,
        7160
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "2428": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7162,
        7178
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2429": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7190,
        7217
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2431": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7220,
        7269
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x997"
    },
    "2434": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7244,
        7268
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x6"
    },
    "2436": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5676,
        5688
      ],
      "op": "SLOAD",
      "path": "1",
      "statement": 7
    },
    "2437": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5676,
        5688
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xF"
    },
    "2439": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5676,
        5688
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2440": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5676,
        5688
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2441": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5676,
        5688
      ],
      "op": "SIGNEXTEND",
      "path": "1"
    },
    "2442": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2444": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2446": {
      "op": "SHL"
    },
    "2447": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5655,
        5665
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2448": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5655,
        5665
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "2449": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5655,
        5665
      ],
      "op": "DIV",
      "path": "1"
    },
    "2450": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5655,
        5665
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2451": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5655,
        5665
      ],
      "op": "SIGNEXTEND",
      "path": "1"
    },
    "2452": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5648,
        5689
      ],
      "op": "SUB",
      "path": "1"
    },
    "2453": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5648,
        5689
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2454": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5344,
        5707
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2455": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7220,
        7269
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2456": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7190,
        7269
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2457": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7190,
        7269
      ],
      "op": "POP",
      "path": "2"
    },
    "2458": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7279,
        7297
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x9A1"
    },
    "2461": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7279,
        7297
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3379"
    },
    "2464": {
      "fn": "Governance.getTasksAssignedToWiz",
      "jump": "i",
      "offset": [
        7279,
        7297
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2465": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7279,
        7297
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2466": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7307,
        7321
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2468": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7307,
        7321
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2469": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7307,
        7321
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2470": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7357,
        7709
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2471": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7379,
        7398
      ],
      "op": "DUP5",
      "path": "2"
    },
    "2472": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7375,
        7376
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2473": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7375,
        7398
      ],
      "op": "LT",
      "path": "2"
    },
    "2474": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7357,
        7709
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2475": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7357,
        7709
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB29"
    },
    "2478": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7357,
        7709
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2479": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7432,
        7480
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 8,
      "value": "0x9B9"
    },
    "2482": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7452,
        7476
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x6"
    },
    "2484": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7478,
        7479
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2485": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7432,
        7451
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2FBB"
    },
    "2488": {
      "fn": "Governance.getTasksAssignedToWiz",
      "jump": "i",
      "offset": [
        7432,
        7480
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2489": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7432,
        7480
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2490": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7424,
        7481
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2492": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7504,
        7517
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 9
    },
    "2493": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7504,
        7517
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2494": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7504,
        7517
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2495": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7504,
        7509
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA"
    },
    "2497": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7504,
        7517
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2499": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7504,
        7517
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2500": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7504,
        7517
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2502": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7504,
        7517
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2503": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7504,
        7517
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2504": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7504,
        7517
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2505": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7504,
        7517
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2506": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2507": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2508": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x140"
    },
    "2511": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2512": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "ADD",
      "path": "2"
    },
    "2513": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2514": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2515": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2516": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2517": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2518": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7424,
        7481
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2519": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7424,
        7481
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "2520": {
      "op": "POP"
    },
    "2521": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2522": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2523": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2524": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2525": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7504,
        7517
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2526": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7504,
        7517
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2527": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x9E7"
    },
    "2530": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2531": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3C5E"
    },
    "2534": {
      "fn": "Governance.getTasksAssignedToWiz",
      "jump": "i",
      "offset": [
        7495,
        7517
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2535": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2536": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2537": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "2539": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "ADD",
      "path": "2"
    },
    "2540": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2542": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2543": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2544": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "DIV",
      "path": "2"
    },
    "2545": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "MUL",
      "path": "2"
    },
    "2546": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2548": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "ADD",
      "path": "2"
    },
    "2549": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2551": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2552": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2553": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2554": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "ADD",
      "path": "2"
    },
    "2555": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2557": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2558": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2559": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2560": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2561": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2562": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2563": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2564": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2565": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2567": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "ADD",
      "path": "2"
    },
    "2568": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2569": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2570": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2571": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA13"
    },
    "2574": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2575": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3C5E"
    },
    "2578": {
      "fn": "Governance.getTasksAssignedToWiz",
      "jump": "i",
      "offset": [
        7495,
        7517
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2579": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2580": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2581": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2582": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA60"
    },
    "2585": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2586": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2587": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "2589": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "LT",
      "path": "2"
    },
    "2590": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA35"
    },
    "2593": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2594": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "2597": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2598": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2599": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2600": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "DIV",
      "path": "2"
    },
    "2601": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "MUL",
      "path": "2"
    },
    "2602": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2603": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2604": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2605": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2607": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "ADD",
      "path": "2"
    },
    "2608": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2609": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA60"
    },
    "2612": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2613": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2614": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2615": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "ADD",
      "path": "2"
    },
    "2616": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2617": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2618": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2620": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2621": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2623": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2625": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2626": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2627": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2628": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2629": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2630": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2631": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2632": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2633": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "2635": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "ADD",
      "path": "2"
    },
    "2636": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2637": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2639": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "ADD",
      "path": "2"
    },
    "2640": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2641": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2642": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "GT",
      "path": "2"
    },
    "2643": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA43"
    },
    "2646": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2647": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2648": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2649": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "SUB",
      "path": "2"
    },
    "2650": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "2652": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "AND",
      "path": "2"
    },
    "2653": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2654": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "ADD",
      "path": "2"
    },
    "2655": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2656": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2657": {
      "op": "POP"
    },
    "2658": {
      "op": "POP"
    },
    "2659": {
      "op": "POP"
    },
    "2660": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2661": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2662": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2663": {
      "op": "POP"
    },
    "2664": {
      "op": "POP"
    },
    "2665": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "2667": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2668": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "ADD",
      "path": "2"
    },
    "2669": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2670": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "2676": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2677": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2678": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "AND",
      "path": "2"
    },
    "2679": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2681": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2682": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "ADD",
      "path": "2"
    },
    "2683": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2684": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "2686": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2687": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "ADD",
      "path": "2"
    },
    "2688": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2689": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2691": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2692": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "ADD",
      "path": "2"
    },
    "2693": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2694": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "2696": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2697": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "ADD",
      "path": "2"
    },
    "2698": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2699": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "2701": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2702": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "ADD",
      "path": "2"
    },
    "2703": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2704": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2706": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2707": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2708": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "ADD",
      "path": "2"
    },
    "2709": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2710": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "2712": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2713": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "AND",
      "path": "2"
    },
    "2714": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x80"
    },
    "2716": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2717": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "ADD",
      "path": "2"
    },
    "2718": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2719": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "2722": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2723": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2724": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "DIV",
      "path": "2"
    },
    "2725": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "PUSH3",
      "path": "2",
      "value": "0xFFFFFF"
    },
    "2729": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "AND",
      "path": "2"
    },
    "2730": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA0"
    },
    "2732": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "DUP5",
      "path": "2"
    },
    "2733": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "ADD",
      "path": "2"
    },
    "2734": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2735": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2737": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2739": {
      "op": "SHL"
    },
    "2740": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2741": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "DIV",
      "path": "2"
    },
    "2742": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2744": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2746": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "2748": {
      "op": "SHL"
    },
    "2749": {
      "op": "SUB"
    },
    "2750": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "AND",
      "path": "2"
    },
    "2751": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xC0"
    },
    "2753": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "DUP5",
      "path": "2"
    },
    "2754": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "ADD",
      "path": "2"
    },
    "2755": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2756": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2758": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "2760": {
      "op": "SHL"
    },
    "2761": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2762": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "DIV",
      "path": "2"
    },
    "2763": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "2766": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2767": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2768": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "AND",
      "path": "2"
    },
    "2769": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE0"
    },
    "2771": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "DUP6",
      "path": "2"
    },
    "2772": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "ADD",
      "path": "2"
    },
    "2773": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2774": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2776": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2778": {
      "op": "SHL"
    },
    "2779": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2780": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "DIV",
      "path": "2"
    },
    "2781": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "AND",
      "path": "2"
    },
    "2782": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2783": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2784": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "ADD",
      "path": "2"
    },
    "2785": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2786": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2788": {
      "op": "PUSH1",
      "value": "0x90"
    },
    "2790": {
      "op": "SHL"
    },
    "2791": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2792": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "DIV",
      "path": "2"
    },
    "2793": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2794": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "AND",
      "path": "2"
    },
    "2795": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x120"
    },
    "2798": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2799": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2800": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "ADD",
      "path": "2"
    },
    "2801": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7495,
        7517
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2802": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7535,
        7571
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2803": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7535,
        7571
      ],
      "op": "ADD",
      "path": "2"
    },
    "2804": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7535,
        7571
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2805": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7535,
        7571
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2806": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7535,
        7571
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "2807": {
      "op": "POP"
    },
    "2808": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7574,
        7589
      ],
      "op": "TIMESTAMP",
      "path": "2"
    },
    "2809": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7535,
        7589
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2810": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7535,
        7589
      ],
      "op": "AND",
      "path": "2"
    },
    "2811": {
      "branch": 128,
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7535,
        7589
      ],
      "op": "GT",
      "path": "2"
    },
    "2812": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7535,
        7619
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2813": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7535,
        7619
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2814": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7535,
        7619
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB15"
    },
    "2817": {
      "branch": 128,
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7535,
        7619
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2818": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7535,
        7619
      ],
      "op": "POP",
      "path": "2"
    },
    "2819": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7613,
        7619
      ],
      "op": "DUP8",
      "path": "2"
    },
    "2820": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7593,
        7619
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "2826": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7593,
        7619
      ],
      "op": "AND",
      "path": "2"
    },
    "2827": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7593,
        7599
      ],
      "op": "DUP5",
      "path": "2"
    },
    "2828": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7593,
        7610
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE0"
    },
    "2830": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7593,
        7610
      ],
      "op": "ADD",
      "path": "2"
    },
    "2831": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7593,
        7610
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2832": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7593,
        7619
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "2835": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7593,
        7619
      ],
      "op": "AND",
      "path": "2"
    },
    "2836": {
      "branch": 129,
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7593,
        7619
      ],
      "op": "EQ",
      "path": "2"
    },
    "2837": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7535,
        7619
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2838": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7531,
        7671
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2839": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7531,
        7671
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB21"
    },
    "2842": {
      "branch": 129,
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7531,
        7671
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2843": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7648,
        7655
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 10
    },
    "2844": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7648,
        7655
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "2846": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7648,
        7655
      ],
      "op": "ADD",
      "path": "2"
    },
    "2847": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7648,
        7655
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2848": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7648,
        7655
      ],
      "op": "POP",
      "path": "2"
    },
    "2849": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7531,
        7671
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2850": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7694,
        7697
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 11,
      "value": "0x1"
    },
    "2852": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7694,
        7697
      ],
      "op": "ADD",
      "path": "2"
    },
    "2853": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7357,
        7709
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x9A6"
    },
    "2856": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7357,
        7709
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2857": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7357,
        7709
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2858": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7357,
        7709
      ],
      "op": "POP",
      "path": "2"
    },
    "2859": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7766,
        7771
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2860": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7773,
        7774
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2862": {
      "branch": 130,
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7766,
        7774
      ],
      "op": "SUB",
      "path": "2"
    },
    "2863": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7762,
        8011
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB96"
    },
    "2866": {
      "branch": 130,
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7762,
        8011
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2867": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7814,
        7827
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2869": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7814,
        7827
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2870": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7814,
        7827
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2871": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7825,
        7826
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "2873": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7814,
        7827
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2874": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7814,
        7827
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2875": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7814,
        7827
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2876": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7814,
        7827
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2877": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7814,
        7827
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2878": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7814,
        7827
      ],
      "op": "ADD",
      "path": "2"
    },
    "2879": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7814,
        7827
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2880": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7814,
        7827
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2881": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7814,
        7827
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2882": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7790,
        7812
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2884": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7790,
        7812
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2885": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7814,
        7827
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2886": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7814,
        7827
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2888": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7814,
        7827
      ],
      "op": "ADD",
      "path": "2"
    },
    "2889": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7814,
        7827
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2890": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7814,
        7827
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB51"
    },
    "2893": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7814,
        7827
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3379"
    },
    "2896": {
      "fn": "Governance.getTasksAssignedToWiz",
      "jump": "i",
      "offset": [
        7814,
        7827
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2897": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7814,
        7827
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2898": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7814,
        7827
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2899": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7814,
        7827
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2900": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7814,
        7827
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2902": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7814,
        7827
      ],
      "op": "ADD",
      "path": "2"
    },
    "2903": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7814,
        7827
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2904": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7814,
        7827
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "2906": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7814,
        7827
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2907": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7814,
        7827
      ],
      "op": "SUB",
      "path": "2"
    },
    "2908": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7814,
        7827
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2909": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7814,
        7827
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2910": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7814,
        7827
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB49"
    },
    "2913": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7814,
        7827
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2914": {
      "op": "POP"
    },
    "2915": {
      "op": "POP"
    },
    "2916": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7872,
        7888
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2918": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7872,
        7888
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2919": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7872,
        7888
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2920": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7886,
        7887
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "2922": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7872,
        7888
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2923": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7872,
        7888
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2924": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7872,
        7888
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2925": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7872,
        7888
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2926": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7872,
        7888
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2927": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7872,
        7888
      ],
      "op": "ADD",
      "path": "2"
    },
    "2928": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7872,
        7888
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2929": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7872,
        7888
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2930": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7872,
        7888
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2931": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7790,
        7827
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2932": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7790,
        7827
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2933": {
      "op": "POP"
    },
    "2934": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7841,
        7870
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2936": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7841,
        7870
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2937": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7872,
        7888
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2938": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7872,
        7888
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2940": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7872,
        7888
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2941": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7872,
        7888
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2942": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7872,
        7888
      ],
      "op": "ADD",
      "path": "2"
    },
    "2943": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7872,
        7888
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2944": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7872,
        7888
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2945": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7872,
        7888
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "2946": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7872,
        7888
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2947": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7872,
        7888
      ],
      "op": "CALLDATACOPY",
      "path": "2"
    },
    "2948": {
      "op": "POP"
    },
    "2949": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7977,
        7985
      ],
      "op": "SWAP4",
      "path": "2",
      "statement": 12
    },
    "2950": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7977,
        7985
      ],
      "op": "SWAP12",
      "path": "2"
    },
    "2951": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7977,
        7985
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2952": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7977,
        7985
      ],
      "op": "SWAP11",
      "path": "2"
    },
    "2953": {
      "op": "POP"
    },
    "2954": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7977,
        7985
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2955": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7977,
        7985
      ],
      "op": "SWAP9",
      "path": "2"
    },
    "2956": {
      "op": "POP"
    },
    "2957": {
      "op": "POP"
    },
    "2958": {
      "op": "POP"
    },
    "2959": {
      "op": "POP"
    },
    "2960": {
      "op": "POP"
    },
    "2961": {
      "op": "POP"
    },
    "2962": {
      "op": "POP"
    },
    "2963": {
      "op": "POP"
    },
    "2964": {
      "op": "POP"
    },
    "2965": {
      "fn": "Governance.getTasksAssignedToWiz",
      "jump": "o",
      "offset": [
        7078,
        8687
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2966": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7762,
        8011
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2967": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8021,
        8036
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2969": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8050,
        8071
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2970": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8085,
        8090
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2971": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2973": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2975": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2977": {
      "op": "SHL"
    },
    "2978": {
      "op": "SUB"
    },
    "2979": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8074,
        8091
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2980": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8074,
        8091
      ],
      "op": "GT",
      "path": "2"
    },
    "2981": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8074,
        8091
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2982": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8074,
        8091
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xBB1"
    },
    "2985": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8074,
        8091
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2986": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8074,
        8091
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xBB1"
    },
    "2989": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8074,
        8091
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x34CC"
    },
    "2992": {
      "fn": "Governance.getTasksAssignedToWiz",
      "jump": "i",
      "offset": [
        8074,
        8091
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2993": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8074,
        8091
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2994": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8074,
        8091
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2996": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8074,
        8091
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2997": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8074,
        8091
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2998": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8074,
        8091
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2999": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8074,
        8091
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3000": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8074,
        8091
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3001": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8074,
        8091
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3002": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8074,
        8091
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3004": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8074,
        8091
      ],
      "op": "MUL",
      "path": "2"
    },
    "3005": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8074,
        8091
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3007": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8074,
        8091
      ],
      "op": "ADD",
      "path": "2"
    },
    "3008": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8074,
        8091
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3009": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8074,
        8091
      ],
      "op": "ADD",
      "path": "2"
    },
    "3010": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8074,
        8091
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3012": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8074,
        8091
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3013": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8074,
        8091
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3014": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8074,
        8091
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3015": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8074,
        8091
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xBEA"
    },
    "3018": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8074,
        8091
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3019": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8074,
        8091
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3020": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8074,
        8091
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3022": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8074,
        8091
      ],
      "op": "ADD",
      "path": "2"
    },
    "3023": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8074,
        8091
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3024": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8074,
        8091
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xBD7"
    },
    "3027": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8074,
        8091
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3379"
    },
    "3030": {
      "fn": "Governance.getTasksAssignedToWiz",
      "jump": "i",
      "offset": [
        8074,
        8091
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3031": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8074,
        8091
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3032": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8074,
        8091
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3033": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8074,
        8091
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3034": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8074,
        8091
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3036": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8074,
        8091
      ],
      "op": "ADD",
      "path": "2"
    },
    "3037": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8074,
        8091
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3038": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8074,
        8091
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "3040": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8074,
        8091
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3041": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8074,
        8091
      ],
      "op": "SUB",
      "path": "2"
    },
    "3042": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8074,
        8091
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3043": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8074,
        8091
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3044": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8074,
        8091
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xBCF"
    },
    "3047": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8074,
        8091
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3048": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8074,
        8091
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3049": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8074,
        8091
      ],
      "op": "POP",
      "path": "2"
    },
    "3050": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8074,
        8091
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3051": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8074,
        8091
      ],
      "op": "POP",
      "path": "2"
    },
    "3052": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8050,
        8091
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3053": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8050,
        8091
      ],
      "op": "POP",
      "path": "2"
    },
    "3054": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8101,
        8127
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3056": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8144,
        8149
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3057": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3059": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3061": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3063": {
      "op": "SHL"
    },
    "3064": {
      "op": "SUB"
    },
    "3065": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8130,
        8150
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3066": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8130,
        8150
      ],
      "op": "GT",
      "path": "2"
    },
    "3067": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8130,
        8150
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3068": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8130,
        8150
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC07"
    },
    "3071": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8130,
        8150
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3072": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8130,
        8150
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC07"
    },
    "3075": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8130,
        8150
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x34CC"
    },
    "3078": {
      "fn": "Governance.getTasksAssignedToWiz",
      "jump": "i",
      "offset": [
        8130,
        8150
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3079": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8130,
        8150
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3080": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8130,
        8150
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3082": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8130,
        8150
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3083": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8130,
        8150
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3084": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8130,
        8150
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3085": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8130,
        8150
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3086": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8130,
        8150
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3087": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8130,
        8150
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3088": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8130,
        8150
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3090": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8130,
        8150
      ],
      "op": "MUL",
      "path": "2"
    },
    "3091": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8130,
        8150
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3093": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8130,
        8150
      ],
      "op": "ADD",
      "path": "2"
    },
    "3094": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8130,
        8150
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3095": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8130,
        8150
      ],
      "op": "ADD",
      "path": "2"
    },
    "3096": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8130,
        8150
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3098": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8130,
        8150
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3099": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8130,
        8150
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3100": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8130,
        8150
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3101": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8130,
        8150
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC30"
    },
    "3104": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8130,
        8150
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3105": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8130,
        8150
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3106": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8130,
        8150
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3108": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8130,
        8150
      ],
      "op": "ADD",
      "path": "2"
    },
    "3109": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8130,
        8150
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3111": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8130,
        8150
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3112": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8130,
        8150
      ],
      "op": "MUL",
      "path": "2"
    },
    "3113": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8130,
        8150
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3114": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8130,
        8150
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "3115": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8130,
        8150
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3116": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8130,
        8150
      ],
      "op": "CALLDATACOPY",
      "path": "2"
    },
    "3117": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8130,
        8150
      ],
      "op": "ADD",
      "path": "2"
    },
    "3118": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8130,
        8150
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3119": {
      "op": "POP"
    },
    "3120": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8130,
        8150
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3121": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8130,
        8150
      ],
      "op": "POP",
      "path": "2"
    },
    "3122": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8101,
        8150
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3123": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8101,
        8150
      ],
      "op": "POP",
      "path": "2"
    },
    "3124": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8164,
        8173
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3126": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8160,
        8644
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3127": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8182,
        8201
      ],
      "op": "DUP8",
      "path": "2"
    },
    "3128": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8178,
        8179
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3129": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8178,
        8201
      ],
      "op": "LT",
      "path": "2"
    },
    "3130": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8160,
        8644
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3131": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8160,
        8644
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xDFD"
    },
    "3134": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8160,
        8644
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3135": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8235,
        8283
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 13,
      "value": "0xC49"
    },
    "3138": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8255,
        8279
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x6"
    },
    "3140": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8281,
        8282
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3141": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8235,
        8254
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2FBB"
    },
    "3144": {
      "fn": "Governance.getTasksAssignedToWiz",
      "jump": "i",
      "offset": [
        8235,
        8283
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3145": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8235,
        8283
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3146": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8227,
        8284
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3148": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8307,
        8320
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 14
    },
    "3149": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8307,
        8320
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3150": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8307,
        8320
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3151": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8307,
        8312
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA"
    },
    "3153": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8307,
        8320
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3155": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8307,
        8320
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3156": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8307,
        8320
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3158": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8307,
        8320
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3159": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8307,
        8320
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3160": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8307,
        8320
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3161": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8307,
        8320
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "3162": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3163": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3164": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x140"
    },
    "3167": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3168": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "ADD",
      "path": "2"
    },
    "3169": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3170": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3171": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3172": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3173": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3174": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8227,
        8284
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3175": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8227,
        8284
      ],
      "op": "SWAP9",
      "path": "2"
    },
    "3176": {
      "op": "POP"
    },
    "3177": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3178": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3179": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3180": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3181": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8307,
        8320
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3182": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8307,
        8320
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3183": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC77"
    },
    "3186": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3187": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3C5E"
    },
    "3190": {
      "fn": "Governance.getTasksAssignedToWiz",
      "jump": "i",
      "offset": [
        8298,
        8320
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3191": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3192": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3193": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "3195": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "ADD",
      "path": "2"
    },
    "3196": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3198": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3199": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3200": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "DIV",
      "path": "2"
    },
    "3201": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "MUL",
      "path": "2"
    },
    "3202": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3204": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "ADD",
      "path": "2"
    },
    "3205": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3207": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3208": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3209": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3210": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "ADD",
      "path": "2"
    },
    "3211": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3213": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3214": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3215": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3216": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3217": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3218": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3219": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3220": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3221": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3223": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "ADD",
      "path": "2"
    },
    "3224": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3225": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3226": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3227": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xCA3"
    },
    "3230": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3231": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3C5E"
    },
    "3234": {
      "fn": "Governance.getTasksAssignedToWiz",
      "jump": "i",
      "offset": [
        8298,
        8320
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3235": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3236": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3237": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3238": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xCF0"
    },
    "3241": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3242": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3243": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "3245": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "LT",
      "path": "2"
    },
    "3246": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xCC5"
    },
    "3249": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3250": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "3253": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3254": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3255": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3256": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "DIV",
      "path": "2"
    },
    "3257": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "MUL",
      "path": "2"
    },
    "3258": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3259": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3260": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3261": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3263": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "ADD",
      "path": "2"
    },
    "3264": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3265": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xCF0"
    },
    "3268": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3269": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3270": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3271": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "ADD",
      "path": "2"
    },
    "3272": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3273": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3274": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3276": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3277": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3279": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3281": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "3282": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3283": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3284": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3285": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3286": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3287": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3288": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3289": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "3291": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "ADD",
      "path": "2"
    },
    "3292": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3293": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3295": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "ADD",
      "path": "2"
    },
    "3296": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3297": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3298": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "GT",
      "path": "2"
    },
    "3299": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xCD3"
    },
    "3302": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3303": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3304": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3305": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "SUB",
      "path": "2"
    },
    "3306": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "3308": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "AND",
      "path": "2"
    },
    "3309": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3310": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "ADD",
      "path": "2"
    },
    "3311": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3312": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3313": {
      "op": "POP"
    },
    "3314": {
      "op": "POP"
    },
    "3315": {
      "op": "POP"
    },
    "3316": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3317": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3318": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3319": {
      "op": "POP"
    },
    "3320": {
      "op": "POP"
    },
    "3321": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "3323": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3324": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "ADD",
      "path": "2"
    },
    "3325": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3326": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "3332": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3333": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3334": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "AND",
      "path": "2"
    },
    "3335": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3337": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3338": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "ADD",
      "path": "2"
    },
    "3339": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3340": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "3342": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3343": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "ADD",
      "path": "2"
    },
    "3344": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3345": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3347": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3348": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "ADD",
      "path": "2"
    },
    "3349": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3350": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "3352": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3353": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "ADD",
      "path": "2"
    },
    "3354": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3355": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "3357": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3358": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "ADD",
      "path": "2"
    },
    "3359": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3360": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3362": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3363": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3364": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "ADD",
      "path": "2"
    },
    "3365": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3366": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "3368": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3369": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "AND",
      "path": "2"
    },
    "3370": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x80"
    },
    "3372": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3373": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "ADD",
      "path": "2"
    },
    "3374": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3375": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "3378": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3379": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3380": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "DIV",
      "path": "2"
    },
    "3381": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "PUSH3",
      "path": "2",
      "value": "0xFFFFFF"
    },
    "3385": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "AND",
      "path": "2"
    },
    "3386": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA0"
    },
    "3388": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "DUP5",
      "path": "2"
    },
    "3389": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "ADD",
      "path": "2"
    },
    "3390": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3391": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3393": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3395": {
      "op": "SHL"
    },
    "3396": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3397": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "DIV",
      "path": "2"
    },
    "3398": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3400": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3402": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "3404": {
      "op": "SHL"
    },
    "3405": {
      "op": "SUB"
    },
    "3406": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "AND",
      "path": "2"
    },
    "3407": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xC0"
    },
    "3409": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "DUP5",
      "path": "2"
    },
    "3410": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "ADD",
      "path": "2"
    },
    "3411": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3412": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3414": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "3416": {
      "op": "SHL"
    },
    "3417": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3418": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "DIV",
      "path": "2"
    },
    "3419": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "3422": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3423": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3424": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "AND",
      "path": "2"
    },
    "3425": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE0"
    },
    "3427": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "DUP6",
      "path": "2"
    },
    "3428": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "ADD",
      "path": "2"
    },
    "3429": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3430": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3432": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3434": {
      "op": "SHL"
    },
    "3435": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3436": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "DIV",
      "path": "2"
    },
    "3437": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "AND",
      "path": "2"
    },
    "3438": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3439": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3440": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "ADD",
      "path": "2"
    },
    "3441": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3442": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3444": {
      "op": "PUSH1",
      "value": "0x90"
    },
    "3446": {
      "op": "SHL"
    },
    "3447": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3448": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "DIV",
      "path": "2"
    },
    "3449": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3450": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "AND",
      "path": "2"
    },
    "3451": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x120"
    },
    "3454": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3455": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3456": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "ADD",
      "path": "2"
    },
    "3457": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8298,
        8320
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3458": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8338,
        8374
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3459": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8338,
        8374
      ],
      "op": "ADD",
      "path": "2"
    },
    "3460": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8338,
        8374
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3461": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8338,
        8374
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3462": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8338,
        8374
      ],
      "op": "SWAP9",
      "path": "2"
    },
    "3463": {
      "op": "POP"
    },
    "3464": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8377,
        8392
      ],
      "op": "TIMESTAMP",
      "path": "2"
    },
    "3465": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8338,
        8392
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3466": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8338,
        8392
      ],
      "op": "AND",
      "path": "2"
    },
    "3467": {
      "branch": 131,
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8338,
        8392
      ],
      "op": "GT",
      "path": "2"
    },
    "3468": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8338,
        8422
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3469": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8338,
        8422
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3470": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8338,
        8422
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xDA5"
    },
    "3473": {
      "branch": 131,
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8338,
        8422
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3474": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8338,
        8422
      ],
      "op": "POP",
      "path": "2"
    },
    "3475": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8416,
        8422
      ],
      "op": "DUP11",
      "path": "2"
    },
    "3476": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8396,
        8422
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "3482": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8396,
        8422
      ],
      "op": "AND",
      "path": "2"
    },
    "3483": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8396,
        8402
      ],
      "op": "DUP8",
      "path": "2"
    },
    "3484": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8396,
        8413
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE0"
    },
    "3486": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8396,
        8413
      ],
      "op": "ADD",
      "path": "2"
    },
    "3487": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8396,
        8413
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3488": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8396,
        8422
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "3491": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8396,
        8422
      ],
      "op": "AND",
      "path": "2"
    },
    "3492": {
      "branch": 132,
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8396,
        8422
      ],
      "op": "EQ",
      "path": "2"
    },
    "3493": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8338,
        8422
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3494": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8334,
        8606
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3495": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8334,
        8606
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xDF5"
    },
    "3498": {
      "branch": 132,
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8334,
        8606
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3499": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8460,
        8466
      ],
      "op": "DUP7",
      "path": "2",
      "statement": 15
    },
    "3500": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8441,
        8448
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3501": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8449,
        8456
      ],
      "op": "DUP6",
      "path": "2"
    },
    "3502": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8441,
        8457
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3503": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8441,
        8457
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3504": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8441,
        8457
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3505": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8441,
        8457
      ],
      "op": "LT",
      "path": "2"
    },
    "3506": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8441,
        8457
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xDBD"
    },
    "3509": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8441,
        8457
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3510": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8441,
        8457
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xDBD"
    },
    "3513": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8441,
        8457
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3C98"
    },
    "3516": {
      "fn": "Governance.getTasksAssignedToWiz",
      "jump": "i",
      "offset": [
        8441,
        8457
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3517": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8441,
        8457
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3518": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8441,
        8457
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3520": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8441,
        8457
      ],
      "op": "MUL",
      "path": "2"
    },
    "3521": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8441,
        8457
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3523": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8441,
        8457
      ],
      "op": "ADD",
      "path": "2"
    },
    "3524": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8441,
        8457
      ],
      "op": "ADD",
      "path": "2"
    },
    "3525": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8441,
        8466
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3526": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8441,
        8466
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3527": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8441,
        8466
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3528": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8441,
        8466
      ],
      "op": "POP",
      "path": "2"
    },
    "3529": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8505,
        8511
      ],
      "op": "DUP6",
      "path": "2",
      "statement": 16
    },
    "3530": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8484,
        8493
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3531": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8494,
        8501
      ],
      "op": "DUP6",
      "path": "2"
    },
    "3532": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8484,
        8502
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3533": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8484,
        8502
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3534": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8484,
        8502
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3535": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8484,
        8502
      ],
      "op": "LT",
      "path": "2"
    },
    "3536": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8484,
        8502
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xDDB"
    },
    "3539": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8484,
        8502
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3540": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8484,
        8502
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xDDB"
    },
    "3543": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8484,
        8502
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3C98"
    },
    "3546": {
      "fn": "Governance.getTasksAssignedToWiz",
      "jump": "i",
      "offset": [
        8484,
        8502
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3547": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8484,
        8502
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3548": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8484,
        8502
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3550": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8484,
        8502
      ],
      "op": "MUL",
      "path": "2"
    },
    "3551": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8484,
        8502
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3553": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8484,
        8502
      ],
      "op": "ADD",
      "path": "2"
    },
    "3554": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8484,
        8502
      ],
      "op": "ADD",
      "path": "2"
    },
    "3555": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8484,
        8511
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3556": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8484,
        8511
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3557": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8484,
        8511
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3558": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8484,
        8511
      ],
      "op": "POP",
      "path": "2"
    },
    "3559": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8484,
        8511
      ],
      "op": "POP",
      "path": "2"
    },
    "3560": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8539,
        8548
      ],
      "op": "DUP4",
      "path": "2",
      "statement": 17
    },
    "3561": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8539,
        8548
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "3563": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8539,
        8548
      ],
      "op": "ADD",
      "path": "2"
    },
    "3564": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8539,
        8548
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "3565": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8539,
        8548
      ],
      "op": "POP",
      "path": "2"
    },
    "3566": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8578,
        8583
      ],
      "op": "DUP5",
      "path": "2"
    },
    "3567": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8570,
        8577
      ],
      "op": "DUP5",
      "path": "2"
    },
    "3568": {
      "branch": 133,
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8570,
        8583
      ],
      "op": "GT",
      "path": "2"
    },
    "3569": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8585,
        8590
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 18,
      "value": "0xDFD"
    },
    "3572": {
      "branch": 133,
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8567,
        8592
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3573": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8567,
        8592
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3574": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8629,
        8632
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 19,
      "value": "0x1"
    },
    "3576": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8629,
        8632
      ],
      "op": "ADD",
      "path": "2"
    },
    "3577": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8160,
        8644
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC36"
    },
    "3580": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8160,
        8644
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3581": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8160,
        8644
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3582": {
      "op": "POP"
    },
    "3583": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8661,
        8668
      ],
      "op": "SWAP1",
      "path": "2",
      "statement": 20
    },
    "3584": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8661,
        8668
      ],
      "op": "SWAP10",
      "path": "2"
    },
    "3585": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8670,
        8679
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3586": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8670,
        8679
      ],
      "op": "SWAP9",
      "path": "2"
    },
    "3587": {
      "op": "POP"
    },
    "3588": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7078,
        8687
      ],
      "op": "SWAP7",
      "path": "2"
    },
    "3589": {
      "op": "POP"
    },
    "3590": {
      "op": "POP"
    },
    "3591": {
      "op": "POP"
    },
    "3592": {
      "op": "POP"
    },
    "3593": {
      "op": "POP"
    },
    "3594": {
      "op": "POP"
    },
    "3595": {
      "op": "POP"
    },
    "3596": {
      "fn": "Governance.getTasksAssignedToWiz",
      "jump": "o",
      "offset": [
        7078,
        8687
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3597": {
      "fn": "Governance.createTaskType",
      "offset": [
        13832,
        14152
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3598": {
      "offset": [
        23513,
        23530
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE15"
    },
    "3601": {
      "offset": [
        23513,
        23528
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x86B"
    },
    "3604": {
      "jump": "i",
      "offset": [
        23513,
        23530
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3605": {
      "fn": "Governance.createTaskType",
      "offset": [
        23513,
        23530
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3606": {
      "offset": [
        23505,
        23555
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE5D"
    },
    "3609": {
      "offset": [
        23505,
        23555
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3610": {
      "fn": "Governance.createTaskType",
      "offset": [
        23505,
        23555
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3612": {
      "fn": "Governance.createTaskType",
      "offset": [
        23505,
        23555
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3613": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3617": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3619": {
      "op": "SHL"
    },
    "3620": {
      "offset": [
        23505,
        23555
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3621": {
      "fn": "Governance.createTaskType",
      "offset": [
        23505,
        23555
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3622": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3624": {
      "offset": [
        23505,
        23555
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3626": {
      "fn": "Governance.createTaskType",
      "offset": [
        23505,
        23555
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3627": {
      "fn": "Governance.createTaskType",
      "offset": [
        23505,
        23555
      ],
      "op": "ADD",
      "path": "2"
    },
    "3628": {
      "op": "MSTORE"
    },
    "3629": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "3631": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3633": {
      "op": "DUP3"
    },
    "3634": {
      "op": "ADD"
    },
    "3635": {
      "op": "MSTORE"
    },
    "3636": {
      "op": "PUSH20",
      "value": "0x135D5CDD081899481BDB881D1A1948189BD85C99"
    },
    "3657": {
      "op": "PUSH1",
      "value": "0x62"
    },
    "3659": {
      "op": "SHL"
    },
    "3660": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3662": {
      "op": "DUP3"
    },
    "3663": {
      "op": "ADD"
    },
    "3664": {
      "op": "MSTORE"
    },
    "3665": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3667": {
      "op": "ADD"
    },
    "3668": {
      "offset": [
        23505,
        23555
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3669": {
      "fn": "Governance.createTaskType",
      "offset": [
        23505,
        23555
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3671": {
      "fn": "Governance.createTaskType",
      "offset": [
        23505,
        23555
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3672": {
      "fn": "Governance.createTaskType",
      "offset": [
        23505,
        23555
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3673": {
      "fn": "Governance.createTaskType",
      "offset": [
        23505,
        23555
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3674": {
      "fn": "Governance.createTaskType",
      "offset": [
        23505,
        23555
      ],
      "op": "SUB",
      "path": "2"
    },
    "3675": {
      "fn": "Governance.createTaskType",
      "offset": [
        23505,
        23555
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3676": {
      "fn": "Governance.createTaskType",
      "offset": [
        23505,
        23555
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "2"
    },
    "3677": {
      "fn": "Governance.createTaskType",
      "offset": [
        23505,
        23555
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3678": {
      "fn": "Governance.createTaskType",
      "offset": [
        14039,
        14145
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 21,
      "value": "0xE6E"
    },
    "3681": {
      "fn": "Governance.createTaskType",
      "offset": [
        14055,
        14064
      ],
      "op": "DUP8",
      "path": "2"
    },
    "3682": {
      "fn": "Governance.createTaskType",
      "offset": [
        14055,
        14064
      ],
      "op": "DUP8",
      "path": "2"
    },
    "3683": {
      "fn": "Governance.createTaskType",
      "offset": [
        14066,
        14067
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3685": {
      "fn": "Governance.createTaskType",
      "offset": [
        14069,
        14085
      ],
      "op": "DUP9",
      "path": "2"
    },
    "3686": {
      "fn": "Governance.createTaskType",
      "offset": [
        14087,
        14097
      ],
      "op": "DUP9",
      "path": "2"
    },
    "3687": {
      "fn": "Governance.createTaskType",
      "offset": [
        14099,
        14112
      ],
      "op": "DUP9",
      "path": "2"
    },
    "3688": {
      "fn": "Governance.createTaskType",
      "offset": [
        14114,
        14127
      ],
      "op": "DUP9",
      "path": "2"
    },
    "3689": {
      "fn": "Governance.createTaskType",
      "offset": [
        14129,
        14144
      ],
      "op": "DUP9",
      "path": "2"
    },
    "3690": {
      "fn": "Governance.createTaskType",
      "offset": [
        14039,
        14054
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x302C"
    },
    "3693": {
      "fn": "Governance.createTaskType",
      "jump": "i",
      "offset": [
        14039,
        14145
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3694": {
      "fn": "Governance.createTaskType",
      "offset": [
        14039,
        14145
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3695": {
      "fn": "Governance.createTaskType",
      "offset": [
        13832,
        14152
      ],
      "op": "POP",
      "path": "2"
    },
    "3696": {
      "fn": "Governance.createTaskType",
      "offset": [
        13832,
        14152
      ],
      "op": "POP",
      "path": "2"
    },
    "3697": {
      "fn": "Governance.createTaskType",
      "offset": [
        13832,
        14152
      ],
      "op": "POP",
      "path": "2"
    },
    "3698": {
      "fn": "Governance.createTaskType",
      "offset": [
        13832,
        14152
      ],
      "op": "POP",
      "path": "2"
    },
    "3699": {
      "fn": "Governance.createTaskType",
      "offset": [
        13832,
        14152
      ],
      "op": "POP",
      "path": "2"
    },
    "3700": {
      "fn": "Governance.createTaskType",
      "offset": [
        13832,
        14152
      ],
      "op": "POP",
      "path": "2"
    },
    "3701": {
      "fn": "Governance.createTaskType",
      "offset": [
        13832,
        14152
      ],
      "op": "POP",
      "path": "2"
    },
    "3702": {
      "fn": "Governance.createTaskType",
      "jump": "o",
      "offset": [
        13832,
        14152
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3703": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        10373,
        10474
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3704": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "3706": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "3707": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3709": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3711": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3713": {
      "op": "SHL"
    },
    "3714": {
      "op": "SUB"
    },
    "3715": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "AND",
      "path": "12"
    },
    "3716": {
      "fn": "Context._msgSender",
      "offset": [
        679,
        689
      ],
      "op": "CALLER",
      "path": "6",
      "statement": 22
    },
    "3717": {
      "offset": [
        1221,
        1244
      ],
      "op": "EQ",
      "path": "12"
    },
    "3718": {
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xEA1"
    },
    "3721": {
      "offset": [
        1213,
        1281
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "3722": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "3724": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "3725": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3729": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3731": {
      "op": "SHL"
    },
    "3732": {
      "offset": [
        1213,
        1281
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3733": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "3734": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "3736": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "ADD",
      "path": "12"
    },
    "3737": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xE54"
    },
    "3740": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3741": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3D4B"
    },
    "3744": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1213,
        1281
      ],
      "op": "JUMP",
      "path": "12"
    },
    "3745": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3746": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        10440,
        10450
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 23,
      "value": "0x2"
    },
    "3748": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        10440,
        10467
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3749": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        10440,
        10467
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3750": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3752": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3754": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3756": {
      "op": "SHL"
    },
    "3757": {
      "op": "SUB"
    },
    "3758": {
      "op": "NOT"
    },
    "3759": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        10440,
        10467
      ],
      "op": "AND",
      "path": "2"
    },
    "3760": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3762": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3764": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3766": {
      "op": "SHL"
    },
    "3767": {
      "op": "SUB"
    },
    "3768": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        10440,
        10467
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3769": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        10440,
        10467
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3770": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        10440,
        10467
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3771": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        10440,
        10467
      ],
      "op": "AND",
      "path": "2"
    },
    "3772": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        10440,
        10467
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3773": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        10440,
        10467
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3774": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        10440,
        10467
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3775": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        10440,
        10467
      ],
      "op": "OR",
      "path": "2"
    },
    "3776": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        10440,
        10467
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3777": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        10440,
        10467
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "3778": {
      "fn": "Governance.setNFTAddress",
      "jump": "o",
      "offset": [
        10373,
        10474
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3779": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3780": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "3782": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "3783": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3785": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3787": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3789": {
      "op": "SHL"
    },
    "3790": {
      "op": "SUB"
    },
    "3791": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "AND",
      "path": "12"
    },
    "3792": {
      "fn": "Context._msgSender",
      "offset": [
        679,
        689
      ],
      "op": "CALLER",
      "path": "6"
    },
    "3793": {
      "offset": [
        1221,
        1244
      ],
      "op": "EQ",
      "path": "12"
    },
    "3794": {
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xEED"
    },
    "3797": {
      "offset": [
        1213,
        1281
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "3798": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "3800": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "3801": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3805": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3807": {
      "op": "SHL"
    },
    "3808": {
      "offset": [
        1213,
        1281
      ],
      "op": "DUP2",
      "path": "12"
    },
    "3809": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "3810": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "3812": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "ADD",
      "path": "12"
    },
    "3813": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xE54"
    },
    "3816": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "3817": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3D4B"
    },
    "3820": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1213,
        1281
      ],
      "op": "JUMP",
      "path": "12"
    },
    "3821": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3822": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1717,
        1738
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 24,
      "value": "0xEF7"
    },
    "3825": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1735,
        1736
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "3827": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1717,
        1726
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x31AB"
    },
    "3830": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1717,
        1738
      ],
      "op": "JUMP",
      "path": "12"
    },
    "3831": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1717,
        1738
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "3832": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        1652,
        1746
      ],
      "op": "JUMP",
      "path": "12"
    },
    "3833": {
      "fn": "Governance.completeTask",
      "offset": [
        16230,
        17516
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3834": {
      "fn": "Governance.completeTask",
      "offset": [
        16414,
        16423
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3836": {
      "fn": "Governance.completeTask",
      "offset": [
        16410,
        17490
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3837": {
      "fn": "Governance.completeTask",
      "offset": [
        16431,
        16440
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "3839": {
      "fn": "Governance.completeTask",
      "offset": [
        16431,
        16447
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3840": {
      "fn": "Governance.completeTask",
      "offset": [
        16429,
        16447
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3841": {
      "fn": "Governance.completeTask",
      "offset": [
        16429,
        16447
      ],
      "op": "LT",
      "path": "2"
    },
    "3842": {
      "fn": "Governance.completeTask",
      "offset": [
        16410,
        17490
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3843": {
      "fn": "Governance.completeTask",
      "offset": [
        16410,
        17490
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1369"
    },
    "3846": {
      "fn": "Governance.completeTask",
      "offset": [
        16410,
        17490
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3847": {
      "fn": "Governance.completeTask",
      "offset": [
        16535,
        16544
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3848": {
      "fn": "Governance.completeTask",
      "offset": [
        16524,
        16545
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3850": {
      "fn": "Governance.completeTask",
      "offset": [
        16524,
        16545
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3851": {
      "fn": "Governance.completeTask",
      "offset": [
        16524,
        16545
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3853": {
      "fn": "Governance.completeTask",
      "offset": [
        16524,
        16545
      ],
      "op": "ADD",
      "path": "2"
    },
    "3854": {
      "fn": "Governance.completeTask",
      "offset": [
        16524,
        16545
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF17"
    },
    "3857": {
      "fn": "Governance.completeTask",
      "offset": [
        16524,
        16545
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3858": {
      "fn": "Governance.completeTask",
      "offset": [
        16524,
        16545
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3859": {
      "fn": "Governance.completeTask",
      "offset": [
        16524,
        16545
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3D80"
    },
    "3862": {
      "fn": "Governance.completeTask",
      "jump": "i",
      "offset": [
        16524,
        16545
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3863": {
      "fn": "Governance.completeTask",
      "offset": [
        16524,
        16545
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3864": {
      "fn": "Governance.completeTask",
      "offset": [
        16524,
        16545
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3866": {
      "fn": "Governance.completeTask",
      "offset": [
        16524,
        16545
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3867": {
      "fn": "Governance.completeTask",
      "offset": [
        16524,
        16545
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3869": {
      "fn": "Governance.completeTask",
      "offset": [
        16524,
        16545
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3870": {
      "fn": "Governance.completeTask",
      "offset": [
        16524,
        16545
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3871": {
      "fn": "Governance.completeTask",
      "offset": [
        16524,
        16545
      ],
      "op": "SUB",
      "path": "2"
    },
    "3872": {
      "fn": "Governance.completeTask",
      "offset": [
        16524,
        16545
      ],
      "op": "SUB",
      "path": "2"
    },
    "3873": {
      "fn": "Governance.completeTask",
      "offset": [
        16524,
        16545
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3874": {
      "fn": "Governance.completeTask",
      "offset": [
        16524,
        16545
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3875": {
      "fn": "Governance.completeTask",
      "offset": [
        16524,
        16545
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3876": {
      "fn": "Governance.completeTask",
      "offset": [
        16524,
        16545
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3878": {
      "fn": "Governance.completeTask",
      "offset": [
        16524,
        16545
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3879": {
      "fn": "Governance.completeTask",
      "offset": [
        16514,
        16546
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3880": {
      "fn": "Governance.completeTask",
      "offset": [
        16514,
        16546
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3881": {
      "fn": "Governance.completeTask",
      "offset": [
        16514,
        16546
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3882": {
      "fn": "Governance.completeTask",
      "offset": [
        16514,
        16546
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3884": {
      "fn": "Governance.completeTask",
      "offset": [
        16514,
        16546
      ],
      "op": "ADD",
      "path": "2"
    },
    "3885": {
      "fn": "Governance.completeTask",
      "offset": [
        16514,
        16546
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "3886": {
      "fn": "Governance.completeTask",
      "offset": [
        16487,
        16496
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "3888": {
      "fn": "Governance.completeTask",
      "offset": [
        16497,
        16498
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3889": {
      "fn": "Governance.completeTask",
      "offset": [
        16487,
        16499
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3890": {
      "fn": "Governance.completeTask",
      "offset": [
        16487,
        16499
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3891": {
      "fn": "Governance.completeTask",
      "offset": [
        16487,
        16499
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3892": {
      "fn": "Governance.completeTask",
      "offset": [
        16487,
        16499
      ],
      "op": "LT",
      "path": "2"
    },
    "3893": {
      "fn": "Governance.completeTask",
      "offset": [
        16487,
        16499
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF40"
    },
    "3896": {
      "fn": "Governance.completeTask",
      "offset": [
        16487,
        16499
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3897": {
      "fn": "Governance.completeTask",
      "offset": [
        16487,
        16499
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF40"
    },
    "3900": {
      "fn": "Governance.completeTask",
      "offset": [
        16487,
        16499
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3C98"
    },
    "3903": {
      "fn": "Governance.completeTask",
      "jump": "i",
      "offset": [
        16487,
        16499
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3904": {
      "fn": "Governance.completeTask",
      "offset": [
        16487,
        16499
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3905": {
      "fn": "Governance.completeTask",
      "offset": [
        16487,
        16499
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3906": {
      "fn": "Governance.completeTask",
      "offset": [
        16487,
        16499
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3908": {
      "fn": "Governance.completeTask",
      "offset": [
        16487,
        16499
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3909": {
      "fn": "Governance.completeTask",
      "offset": [
        16487,
        16499
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3911": {
      "fn": "Governance.completeTask",
      "offset": [
        16487,
        16499
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3913": {
      "fn": "Governance.completeTask",
      "offset": [
        16487,
        16499
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "3914": {
      "fn": "Governance.completeTask",
      "offset": [
        16487,
        16499
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3915": {
      "fn": "Governance.completeTask",
      "offset": [
        16487,
        16499
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "3917": {
      "fn": "Governance.completeTask",
      "offset": [
        16487,
        16499
      ],
      "op": "MUL",
      "path": "2"
    },
    "3918": {
      "fn": "Governance.completeTask",
      "offset": [
        16487,
        16499
      ],
      "op": "ADD",
      "path": "2"
    },
    "3919": {
      "fn": "Governance.completeTask",
      "offset": [
        16487,
        16508
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "3921": {
      "fn": "Governance.completeTask",
      "offset": [
        16487,
        16508
      ],
      "op": "ADD",
      "path": "2"
    },
    "3922": {
      "fn": "Governance.completeTask",
      "offset": [
        16476,
        16509
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3924": {
      "fn": "Governance.completeTask",
      "offset": [
        16476,
        16509
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3925": {
      "fn": "Governance.completeTask",
      "offset": [
        16476,
        16509
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3927": {
      "fn": "Governance.completeTask",
      "offset": [
        16476,
        16509
      ],
      "op": "ADD",
      "path": "2"
    },
    "3928": {
      "fn": "Governance.completeTask",
      "offset": [
        16476,
        16509
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF61"
    },
    "3931": {
      "fn": "Governance.completeTask",
      "offset": [
        16476,
        16509
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3932": {
      "fn": "Governance.completeTask",
      "offset": [
        16476,
        16509
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3933": {
      "fn": "Governance.completeTask",
      "offset": [
        16476,
        16509
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3E10"
    },
    "3936": {
      "fn": "Governance.completeTask",
      "jump": "i",
      "offset": [
        16476,
        16509
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3937": {
      "fn": "Governance.completeTask",
      "offset": [
        16476,
        16509
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3938": {
      "fn": "Governance.completeTask",
      "offset": [
        16476,
        16509
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3940": {
      "fn": "Governance.completeTask",
      "offset": [
        16476,
        16509
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3941": {
      "fn": "Governance.completeTask",
      "offset": [
        16476,
        16509
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3943": {
      "fn": "Governance.completeTask",
      "offset": [
        16476,
        16509
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3944": {
      "fn": "Governance.completeTask",
      "offset": [
        16476,
        16509
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3945": {
      "fn": "Governance.completeTask",
      "offset": [
        16476,
        16509
      ],
      "op": "SUB",
      "path": "2"
    },
    "3946": {
      "fn": "Governance.completeTask",
      "offset": [
        16476,
        16509
      ],
      "op": "SUB",
      "path": "2"
    },
    "3947": {
      "fn": "Governance.completeTask",
      "offset": [
        16476,
        16509
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3948": {
      "fn": "Governance.completeTask",
      "offset": [
        16476,
        16509
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3949": {
      "fn": "Governance.completeTask",
      "offset": [
        16476,
        16509
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3950": {
      "fn": "Governance.completeTask",
      "offset": [
        16476,
        16509
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3952": {
      "fn": "Governance.completeTask",
      "offset": [
        16476,
        16509
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3953": {
      "fn": "Governance.completeTask",
      "offset": [
        16466,
        16510
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3954": {
      "fn": "Governance.completeTask",
      "offset": [
        16466,
        16510
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3955": {
      "fn": "Governance.completeTask",
      "offset": [
        16466,
        16510
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3956": {
      "fn": "Governance.completeTask",
      "offset": [
        16466,
        16510
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3958": {
      "fn": "Governance.completeTask",
      "offset": [
        16466,
        16510
      ],
      "op": "ADD",
      "path": "2"
    },
    "3959": {
      "fn": "Governance.completeTask",
      "offset": [
        16466,
        16510
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "3960": {
      "branch": 134,
      "fn": "Governance.completeTask",
      "offset": [
        16466,
        16546
      ],
      "op": "SUB",
      "path": "2"
    },
    "3961": {
      "fn": "Governance.completeTask",
      "offset": [
        16463,
        17452
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1361"
    },
    "3964": {
      "branch": 134,
      "fn": "Governance.completeTask",
      "offset": [
        16463,
        17452
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3965": {
      "fn": "Governance.completeTask",
      "offset": [
        16662,
        16677
      ],
      "op": "TIMESTAMP",
      "path": "2",
      "statement": 25
    },
    "3966": {
      "fn": "Governance.completeTask",
      "offset": [
        16633,
        16642
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "3968": {
      "fn": "Governance.completeTask",
      "offset": [
        16643,
        16644
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3969": {
      "fn": "Governance.completeTask",
      "offset": [
        16633,
        16645
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3970": {
      "fn": "Governance.completeTask",
      "offset": [
        16633,
        16645
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3971": {
      "fn": "Governance.completeTask",
      "offset": [
        16633,
        16645
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3972": {
      "fn": "Governance.completeTask",
      "offset": [
        16633,
        16645
      ],
      "op": "LT",
      "path": "2"
    },
    "3973": {
      "fn": "Governance.completeTask",
      "offset": [
        16633,
        16645
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF90"
    },
    "3976": {
      "fn": "Governance.completeTask",
      "offset": [
        16633,
        16645
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3977": {
      "fn": "Governance.completeTask",
      "offset": [
        16633,
        16645
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF90"
    },
    "3980": {
      "fn": "Governance.completeTask",
      "offset": [
        16633,
        16645
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3C98"
    },
    "3983": {
      "fn": "Governance.completeTask",
      "jump": "i",
      "offset": [
        16633,
        16645
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3984": {
      "fn": "Governance.completeTask",
      "offset": [
        16633,
        16645
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3985": {
      "fn": "Governance.completeTask",
      "offset": [
        16633,
        16645
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3987": {
      "fn": "Governance.completeTask",
      "offset": [
        16633,
        16645
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3988": {
      "fn": "Governance.completeTask",
      "offset": [
        16633,
        16645
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3989": {
      "fn": "Governance.completeTask",
      "offset": [
        16633,
        16645
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3990": {
      "fn": "Governance.completeTask",
      "offset": [
        16633,
        16645
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3992": {
      "fn": "Governance.completeTask",
      "offset": [
        16633,
        16645
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3993": {
      "fn": "Governance.completeTask",
      "offset": [
        16633,
        16645
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3994": {
      "fn": "Governance.completeTask",
      "offset": [
        16633,
        16645
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "3995": {
      "fn": "Governance.completeTask",
      "offset": [
        16633,
        16645
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "3997": {
      "fn": "Governance.completeTask",
      "offset": [
        16633,
        16645
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3998": {
      "fn": "Governance.completeTask",
      "offset": [
        16633,
        16645
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3999": {
      "fn": "Governance.completeTask",
      "offset": [
        16633,
        16645
      ],
      "op": "MUL",
      "path": "2"
    },
    "4000": {
      "fn": "Governance.completeTask",
      "offset": [
        16633,
        16645
      ],
      "op": "ADD",
      "path": "2"
    },
    "4001": {
      "fn": "Governance.completeTask",
      "offset": [
        16633,
        16658
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "4003": {
      "fn": "Governance.completeTask",
      "offset": [
        16633,
        16658
      ],
      "op": "ADD",
      "path": "2"
    },
    "4004": {
      "fn": "Governance.completeTask",
      "offset": [
        16633,
        16658
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4005": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4007": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "4009": {
      "op": "SHL"
    },
    "4010": {
      "fn": "Governance.completeTask",
      "offset": [
        16633,
        16658
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4011": {
      "fn": "Governance.completeTask",
      "offset": [
        16633,
        16658
      ],
      "op": "DIV",
      "path": "2"
    },
    "4012": {
      "fn": "Governance.completeTask",
      "offset": [
        16633,
        16658
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "4018": {
      "fn": "Governance.completeTask",
      "offset": [
        16633,
        16658
      ],
      "op": "AND",
      "path": "2"
    },
    "4019": {
      "fn": "Governance.completeTask",
      "offset": [
        16633,
        16677
      ],
      "op": "GT",
      "path": "2"
    },
    "4020": {
      "fn": "Governance.completeTask",
      "offset": [
        16633,
        16677
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4021": {
      "fn": "Governance.completeTask",
      "offset": [
        16633,
        16677
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "4022": {
      "branch": 135,
      "fn": "Governance.completeTask",
      "offset": [
        16633,
        16677
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4023": {
      "fn": "Governance.completeTask",
      "offset": [
        16633,
        16725
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFF4"
    },
    "4026": {
      "branch": 135,
      "fn": "Governance.completeTask",
      "offset": [
        16633,
        16725
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4027": {
      "fn": "Governance.completeTask",
      "offset": [
        16633,
        16725
      ],
      "op": "POP",
      "path": "2"
    },
    "4028": {
      "fn": "Governance.completeTask",
      "offset": [
        16700,
        16709
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "4030": {
      "fn": "Governance.completeTask",
      "offset": [
        16710,
        16711
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4031": {
      "fn": "Governance.completeTask",
      "offset": [
        16700,
        16712
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4032": {
      "fn": "Governance.completeTask",
      "offset": [
        16700,
        16712
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4033": {
      "fn": "Governance.completeTask",
      "offset": [
        16700,
        16712
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4034": {
      "fn": "Governance.completeTask",
      "offset": [
        16700,
        16712
      ],
      "op": "LT",
      "path": "2"
    },
    "4035": {
      "fn": "Governance.completeTask",
      "offset": [
        16700,
        16712
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFCE"
    },
    "4038": {
      "fn": "Governance.completeTask",
      "offset": [
        16700,
        16712
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4039": {
      "fn": "Governance.completeTask",
      "offset": [
        16700,
        16712
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFCE"
    },
    "4042": {
      "fn": "Governance.completeTask",
      "offset": [
        16700,
        16712
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3C98"
    },
    "4045": {
      "fn": "Governance.completeTask",
      "jump": "i",
      "offset": [
        16700,
        16712
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4046": {
      "fn": "Governance.completeTask",
      "offset": [
        16700,
        16712
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4047": {
      "fn": "Governance.completeTask",
      "offset": [
        16700,
        16712
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4049": {
      "fn": "Governance.completeTask",
      "offset": [
        16700,
        16712
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4050": {
      "fn": "Governance.completeTask",
      "offset": [
        16700,
        16712
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4051": {
      "fn": "Governance.completeTask",
      "offset": [
        16700,
        16712
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4052": {
      "fn": "Governance.completeTask",
      "offset": [
        16700,
        16712
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4054": {
      "fn": "Governance.completeTask",
      "offset": [
        16700,
        16712
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4055": {
      "fn": "Governance.completeTask",
      "offset": [
        16700,
        16712
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4056": {
      "fn": "Governance.completeTask",
      "offset": [
        16700,
        16712
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "4057": {
      "fn": "Governance.completeTask",
      "offset": [
        16700,
        16712
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "4059": {
      "fn": "Governance.completeTask",
      "offset": [
        16700,
        16712
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4060": {
      "fn": "Governance.completeTask",
      "offset": [
        16700,
        16712
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4061": {
      "fn": "Governance.completeTask",
      "offset": [
        16700,
        16712
      ],
      "op": "MUL",
      "path": "2"
    },
    "4062": {
      "fn": "Governance.completeTask",
      "offset": [
        16700,
        16712
      ],
      "op": "ADD",
      "path": "2"
    },
    "4063": {
      "fn": "Governance.completeTask",
      "offset": [
        16700,
        16725
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "4065": {
      "fn": "Governance.completeTask",
      "offset": [
        16700,
        16725
      ],
      "op": "ADD",
      "path": "2"
    },
    "4066": {
      "fn": "Governance.completeTask",
      "offset": [
        16700,
        16725
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4067": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4069": {
      "op": "PUSH1",
      "value": "0x78"
    },
    "4071": {
      "op": "SHL"
    },
    "4072": {
      "fn": "Governance.completeTask",
      "offset": [
        16700,
        16725
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4073": {
      "fn": "Governance.completeTask",
      "offset": [
        16700,
        16725
      ],
      "op": "DIV",
      "path": "2"
    },
    "4074": {
      "fn": "Governance.completeTask",
      "offset": [
        16700,
        16725
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "4080": {
      "fn": "Governance.completeTask",
      "offset": [
        16700,
        16725
      ],
      "op": "AND",
      "path": "2"
    },
    "4081": {
      "fn": "Governance.completeTask",
      "offset": [
        16681,
        16696
      ],
      "op": "TIMESTAMP",
      "path": "2"
    },
    "4082": {
      "fn": "Governance.completeTask",
      "offset": [
        16681,
        16725
      ],
      "op": "GT",
      "path": "2"
    },
    "4083": {
      "branch": 136,
      "fn": "Governance.completeTask",
      "offset": [
        16681,
        16725
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "4084": {
      "fn": "Governance.completeTask",
      "offset": [
        16633,
        16725
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4085": {
      "fn": "Governance.completeTask",
      "offset": [
        16625,
        16749
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1036"
    },
    "4088": {
      "branch": 136,
      "fn": "Governance.completeTask",
      "offset": [
        16625,
        16749
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4089": {
      "fn": "Governance.completeTask",
      "offset": [
        16625,
        16749
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4091": {
      "fn": "Governance.completeTask",
      "offset": [
        16625,
        16749
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4092": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4096": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4098": {
      "op": "SHL"
    },
    "4099": {
      "fn": "Governance.completeTask",
      "offset": [
        16625,
        16749
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4100": {
      "fn": "Governance.completeTask",
      "offset": [
        16625,
        16749
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4101": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4103": {
      "fn": "Governance.completeTask",
      "offset": [
        16625,
        16749
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "4105": {
      "fn": "Governance.completeTask",
      "offset": [
        16625,
        16749
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4106": {
      "fn": "Governance.completeTask",
      "offset": [
        16625,
        16749
      ],
      "op": "ADD",
      "path": "2"
    },
    "4107": {
      "op": "MSTORE"
    },
    "4108": {
      "op": "PUSH1",
      "value": "0x13"
    },
    "4110": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4112": {
      "op": "DUP3"
    },
    "4113": {
      "op": "ADD"
    },
    "4114": {
      "op": "MSTORE"
    },
    "4115": {
      "op": "PUSH19",
      "value": "0x13DD5D1CDA5919481D1A5B59481C195C9A5BD9"
    },
    "4135": {
      "op": "PUSH1",
      "value": "0x6A"
    },
    "4137": {
      "op": "SHL"
    },
    "4138": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4140": {
      "op": "DUP3"
    },
    "4141": {
      "op": "ADD"
    },
    "4142": {
      "op": "MSTORE"
    },
    "4143": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4145": {
      "op": "ADD"
    },
    "4146": {
      "fn": "Governance.completeTask",
      "offset": [
        16625,
        16749
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE54"
    },
    "4149": {
      "op": "JUMP"
    },
    "4150": {
      "fn": "Governance.completeTask",
      "offset": [
        16625,
        16749
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4151": {
      "fn": "Governance.completeTask",
      "offset": [
        16802,
        16820
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4153": {
      "fn": "Governance.completeTask",
      "offset": [
        16823,
        16921
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4155": {
      "fn": "Governance.completeTask",
      "offset": [
        16823,
        16921
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4156": {
      "fn": "Governance.completeTask",
      "offset": [
        16823,
        16921
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4157": {
      "fn": "Governance.completeTask",
      "offset": [
        16823,
        16921
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x140"
    },
    "4160": {
      "fn": "Governance.completeTask",
      "offset": [
        16823,
        16921
      ],
      "op": "ADD",
      "path": "2"
    },
    "4161": {
      "fn": "Governance.completeTask",
      "offset": [
        16823,
        16921
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4163": {
      "fn": "Governance.completeTask",
      "offset": [
        16823,
        16921
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4164": {
      "fn": "Governance.completeTask",
      "offset": [
        16823,
        16921
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4165": {
      "fn": "Governance.completeTask",
      "offset": [
        16828,
        16837
      ],
      "op": "DUP7",
      "path": "2"
    },
    "4166": {
      "fn": "Governance.completeTask",
      "offset": [
        16823,
        16921
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4167": {
      "fn": "Governance.completeTask",
      "offset": [
        16823,
        16921
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4168": {
      "fn": "Governance.completeTask",
      "offset": [
        16823,
        16921
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4170": {
      "fn": "Governance.completeTask",
      "offset": [
        16823,
        16921
      ],
      "op": "ADD",
      "path": "2"
    },
    "4171": {
      "fn": "Governance.completeTask",
      "offset": [
        16838,
        16844
      ],
      "op": "DUP5",
      "path": "2"
    },
    "4172": {
      "fn": "Governance.completeTask",
      "offset": [
        16823,
        16921
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "4178": {
      "fn": "Governance.completeTask",
      "offset": [
        16823,
        16921
      ],
      "op": "AND",
      "path": "2"
    },
    "4179": {
      "fn": "Governance.completeTask",
      "offset": [
        16823,
        16921
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4180": {
      "fn": "Governance.completeTask",
      "offset": [
        16823,
        16921
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4181": {
      "fn": "Governance.completeTask",
      "offset": [
        16823,
        16921
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4183": {
      "fn": "Governance.completeTask",
      "offset": [
        16823,
        16921
      ],
      "op": "ADD",
      "path": "2"
    },
    "4184": {
      "fn": "Governance.completeTask",
      "offset": [
        16846,
        16851
      ],
      "op": "DUP6",
      "path": "2"
    },
    "4185": {
      "fn": "Governance.completeTask",
      "offset": [
        16823,
        16921
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4186": {
      "fn": "Governance.completeTask",
      "offset": [
        16823,
        16921
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4187": {
      "fn": "Governance.completeTask",
      "offset": [
        16823,
        16921
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4189": {
      "fn": "Governance.completeTask",
      "offset": [
        16823,
        16921
      ],
      "op": "ADD",
      "path": "2"
    },
    "4190": {
      "fn": "Governance.completeTask",
      "offset": [
        16853,
        16854
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4192": {
      "fn": "Governance.completeTask",
      "offset": [
        16823,
        16921
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4193": {
      "fn": "Governance.completeTask",
      "offset": [
        16823,
        16921
      ],
      "op": "SHL",
      "path": "2"
    },
    "4194": {
      "fn": "Governance.completeTask",
      "offset": [
        16823,
        16921
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4195": {
      "fn": "Governance.completeTask",
      "offset": [
        16823,
        16921
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4196": {
      "fn": "Governance.completeTask",
      "offset": [
        16823,
        16921
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4198": {
      "fn": "Governance.completeTask",
      "offset": [
        16823,
        16921
      ],
      "op": "ADD",
      "path": "2"
    },
    "4199": {
      "fn": "Governance.completeTask",
      "offset": [
        16856,
        16865
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "4201": {
      "fn": "Governance.completeTask",
      "offset": [
        16866,
        16867
      ],
      "op": "DUP5",
      "path": "2"
    },
    "4202": {
      "fn": "Governance.completeTask",
      "offset": [
        16856,
        16868
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4203": {
      "fn": "Governance.completeTask",
      "offset": [
        16856,
        16868
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4204": {
      "fn": "Governance.completeTask",
      "offset": [
        16856,
        16868
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4205": {
      "fn": "Governance.completeTask",
      "offset": [
        16856,
        16868
      ],
      "op": "LT",
      "path": "2"
    },
    "4206": {
      "fn": "Governance.completeTask",
      "offset": [
        16856,
        16868
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1079"
    },
    "4209": {
      "fn": "Governance.completeTask",
      "offset": [
        16856,
        16868
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4210": {
      "fn": "Governance.completeTask",
      "offset": [
        16856,
        16868
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1079"
    },
    "4213": {
      "fn": "Governance.completeTask",
      "offset": [
        16856,
        16868
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3C98"
    },
    "4216": {
      "fn": "Governance.completeTask",
      "jump": "i",
      "offset": [
        16856,
        16868
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4217": {
      "fn": "Governance.completeTask",
      "offset": [
        16856,
        16868
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4218": {
      "fn": "Governance.completeTask",
      "offset": [
        16856,
        16868
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4219": {
      "fn": "Governance.completeTask",
      "offset": [
        16856,
        16868
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4221": {
      "fn": "Governance.completeTask",
      "offset": [
        16856,
        16868
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4222": {
      "fn": "Governance.completeTask",
      "offset": [
        16856,
        16868
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4224": {
      "fn": "Governance.completeTask",
      "offset": [
        16856,
        16868
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4226": {
      "fn": "Governance.completeTask",
      "offset": [
        16856,
        16868
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "4227": {
      "fn": "Governance.completeTask",
      "offset": [
        16856,
        16868
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4228": {
      "fn": "Governance.completeTask",
      "offset": [
        16856,
        16868
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "4230": {
      "fn": "Governance.completeTask",
      "offset": [
        16856,
        16868
      ],
      "op": "MUL",
      "path": "2"
    },
    "4231": {
      "fn": "Governance.completeTask",
      "offset": [
        16856,
        16868
      ],
      "op": "ADD",
      "path": "2"
    },
    "4232": {
      "fn": "Governance.completeTask",
      "offset": [
        16856,
        16884
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "4234": {
      "fn": "Governance.completeTask",
      "offset": [
        16856,
        16884
      ],
      "op": "ADD",
      "path": "2"
    },
    "4235": {
      "fn": "Governance.completeTask",
      "offset": [
        16856,
        16884
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x6"
    },
    "4237": {
      "fn": "Governance.completeTask",
      "offset": [
        16856,
        16884
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4238": {
      "fn": "Governance.completeTask",
      "offset": [
        16856,
        16884
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4239": {
      "fn": "Governance.completeTask",
      "offset": [
        16856,
        16884
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4240": {
      "fn": "Governance.completeTask",
      "offset": [
        16856,
        16884
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "4243": {
      "fn": "Governance.completeTask",
      "offset": [
        16856,
        16884
      ],
      "op": "EXP",
      "path": "2"
    },
    "4244": {
      "fn": "Governance.completeTask",
      "offset": [
        16856,
        16884
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4245": {
      "fn": "Governance.completeTask",
      "offset": [
        16856,
        16884
      ],
      "op": "DIV",
      "path": "2"
    },
    "4246": {
      "fn": "Governance.completeTask",
      "offset": [
        16856,
        16884
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "4248": {
      "fn": "Governance.completeTask",
      "offset": [
        16856,
        16884
      ],
      "op": "AND",
      "path": "2"
    },
    "4249": {
      "fn": "Governance.completeTask",
      "offset": [
        16823,
        16921
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "4251": {
      "fn": "Governance.completeTask",
      "offset": [
        16823,
        16921
      ],
      "op": "AND",
      "path": "2"
    },
    "4252": {
      "fn": "Governance.completeTask",
      "offset": [
        16823,
        16921
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4253": {
      "fn": "Governance.completeTask",
      "offset": [
        16823,
        16921
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4254": {
      "fn": "Governance.completeTask",
      "offset": [
        16823,
        16921
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4256": {
      "fn": "Governance.completeTask",
      "offset": [
        16823,
        16921
      ],
      "op": "ADD",
      "path": "2"
    },
    "4257": {
      "fn": "Governance.completeTask",
      "offset": [
        16886,
        16895
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "4259": {
      "fn": "Governance.completeTask",
      "offset": [
        16896,
        16897
      ],
      "op": "DUP5",
      "path": "2"
    },
    "4260": {
      "fn": "Governance.completeTask",
      "offset": [
        16886,
        16898
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4261": {
      "fn": "Governance.completeTask",
      "offset": [
        16886,
        16898
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4262": {
      "fn": "Governance.completeTask",
      "offset": [
        16886,
        16898
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4263": {
      "fn": "Governance.completeTask",
      "offset": [
        16886,
        16898
      ],
      "op": "LT",
      "path": "2"
    },
    "4264": {
      "fn": "Governance.completeTask",
      "offset": [
        16886,
        16898
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x10B3"
    },
    "4267": {
      "fn": "Governance.completeTask",
      "offset": [
        16886,
        16898
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4268": {
      "fn": "Governance.completeTask",
      "offset": [
        16886,
        16898
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x10B3"
    },
    "4271": {
      "fn": "Governance.completeTask",
      "offset": [
        16886,
        16898
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3C98"
    },
    "4274": {
      "fn": "Governance.completeTask",
      "jump": "i",
      "offset": [
        16886,
        16898
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4275": {
      "fn": "Governance.completeTask",
      "offset": [
        16886,
        16898
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4276": {
      "fn": "Governance.completeTask",
      "offset": [
        16886,
        16898
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4278": {
      "fn": "Governance.completeTask",
      "offset": [
        16886,
        16898
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4279": {
      "fn": "Governance.completeTask",
      "offset": [
        16886,
        16898
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4280": {
      "fn": "Governance.completeTask",
      "offset": [
        16886,
        16898
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4281": {
      "fn": "Governance.completeTask",
      "offset": [
        16886,
        16898
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4283": {
      "fn": "Governance.completeTask",
      "offset": [
        16886,
        16898
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4284": {
      "fn": "Governance.completeTask",
      "offset": [
        16886,
        16898
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4285": {
      "fn": "Governance.completeTask",
      "offset": [
        16886,
        16898
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "4286": {
      "fn": "Governance.completeTask",
      "offset": [
        16886,
        16898
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "4288": {
      "fn": "Governance.completeTask",
      "offset": [
        16886,
        16898
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "4289": {
      "fn": "Governance.completeTask",
      "offset": [
        16886,
        16898
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4290": {
      "fn": "Governance.completeTask",
      "offset": [
        16886,
        16898
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "4291": {
      "fn": "Governance.completeTask",
      "offset": [
        16886,
        16898
      ],
      "op": "MUL",
      "path": "2"
    },
    "4292": {
      "fn": "Governance.completeTask",
      "offset": [
        16886,
        16898
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4293": {
      "fn": "Governance.completeTask",
      "offset": [
        16886,
        16898
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4294": {
      "fn": "Governance.completeTask",
      "offset": [
        16886,
        16898
      ],
      "op": "ADD",
      "path": "2"
    },
    "4295": {
      "fn": "Governance.completeTask",
      "offset": [
        16886,
        16908
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "4297": {
      "fn": "Governance.completeTask",
      "offset": [
        16886,
        16908
      ],
      "op": "ADD",
      "path": "2"
    },
    "4298": {
      "fn": "Governance.completeTask",
      "offset": [
        16886,
        16908
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4299": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4301": {
      "op": "PUSH1",
      "value": "0x38"
    },
    "4303": {
      "op": "SHL"
    },
    "4304": {
      "fn": "Governance.completeTask",
      "offset": [
        16886,
        16908
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4305": {
      "fn": "Governance.completeTask",
      "offset": [
        16886,
        16908
      ],
      "op": "DIV",
      "path": "2"
    },
    "4306": {
      "fn": "Governance.completeTask",
      "offset": [
        16886,
        16908
      ],
      "op": "PUSH3",
      "path": "2",
      "value": "0xFFFFFF"
    },
    "4310": {
      "fn": "Governance.completeTask",
      "offset": [
        16886,
        16908
      ],
      "op": "AND",
      "path": "2"
    },
    "4311": {
      "fn": "Governance.completeTask",
      "offset": [
        16823,
        16921
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4312": {
      "fn": "Governance.completeTask",
      "offset": [
        16823,
        16921
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4313": {
      "fn": "Governance.completeTask",
      "offset": [
        16823,
        16921
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4314": {
      "fn": "Governance.completeTask",
      "offset": [
        16823,
        16921
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4315": {
      "fn": "Governance.completeTask",
      "offset": [
        16823,
        16921
      ],
      "op": "ADD",
      "path": "2"
    },
    "4316": {
      "fn": "Governance.completeTask",
      "offset": [
        16823,
        16921
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4317": {
      "fn": "Governance.completeTask",
      "offset": [
        16823,
        16921
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4318": {
      "fn": "Governance.completeTask",
      "offset": [
        16823,
        16921
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4319": {
      "fn": "Governance.completeTask",
      "offset": [
        16823,
        16921
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4321": {
      "fn": "Governance.completeTask",
      "offset": [
        16823,
        16921
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4322": {
      "fn": "Governance.completeTask",
      "offset": [
        16823,
        16921
      ],
      "op": "DUP5",
      "path": "2"
    },
    "4323": {
      "fn": "Governance.completeTask",
      "offset": [
        16823,
        16921
      ],
      "op": "ADD",
      "path": "2"
    },
    "4324": {
      "fn": "Governance.completeTask",
      "offset": [
        16823,
        16921
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4325": {
      "fn": "Governance.completeTask",
      "offset": [
        16823,
        16921
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4326": {
      "fn": "Governance.completeTask",
      "offset": [
        16823,
        16921
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4327": {
      "fn": "Governance.completeTask",
      "offset": [
        16823,
        16921
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "4329": {
      "fn": "Governance.completeTask",
      "offset": [
        16823,
        16921
      ],
      "op": "DUP5",
      "path": "2"
    },
    "4330": {
      "fn": "Governance.completeTask",
      "offset": [
        16823,
        16921
      ],
      "op": "ADD",
      "path": "2"
    },
    "4331": {
      "fn": "Governance.completeTask",
      "offset": [
        16823,
        16921
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4332": {
      "fn": "Governance.completeTask",
      "offset": [
        16823,
        16921
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4333": {
      "fn": "Governance.completeTask",
      "offset": [
        16823,
        16921
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4334": {
      "fn": "Governance.completeTask",
      "offset": [
        16823,
        16921
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x80"
    },
    "4336": {
      "fn": "Governance.completeTask",
      "offset": [
        16823,
        16921
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4337": {
      "fn": "Governance.completeTask",
      "offset": [
        16823,
        16921
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "4338": {
      "fn": "Governance.completeTask",
      "offset": [
        16823,
        16921
      ],
      "op": "ADD",
      "path": "2"
    },
    "4339": {
      "fn": "Governance.completeTask",
      "offset": [
        16823,
        16921
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4340": {
      "fn": "Governance.completeTask",
      "offset": [
        16823,
        16921
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4341": {
      "fn": "Governance.completeTask",
      "offset": [
        16823,
        16921
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4342": {
      "fn": "Governance.completeTask",
      "offset": [
        16999,
        17018
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 26,
      "value": "0xB"
    },
    "4344": {
      "fn": "Governance.completeTask",
      "offset": [
        16999,
        17018
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4345": {
      "fn": "Governance.completeTask",
      "offset": [
        16965,
        16989
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x6"
    },
    "4347": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2187,
        2197
      ],
      "op": "DUP1",
      "path": "1"
    },
    "4348": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2187,
        2197
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "4349": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4351": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4353": {
      "op": "SHL"
    },
    "4354": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2187,
        2197
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4355": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2187,
        2197
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4356": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2187,
        2197
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4357": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2187,
        2197
      ],
      "op": "DIV",
      "path": "1"
    },
    "4358": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2187,
        2197
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xF"
    },
    "4360": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2187,
        2197
      ],
      "op": "SIGNEXTEND",
      "path": "1"
    },
    "4361": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2207,
        2229
      ],
      "op": "DUP1",
      "path": "1",
      "statement": 27
    },
    "4362": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2207,
        2229
      ],
      "op": "DUP7",
      "path": "1"
    },
    "4363": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2207,
        2229
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4364": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2207,
        2218
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x7"
    },
    "4366": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2207,
        2229
      ],
      "op": "DUP6",
      "path": "1"
    },
    "4367": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2207,
        2229
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4368": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2207,
        2229
      ],
      "op": "DUP7",
      "path": "1"
    },
    "4369": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2207,
        2229
      ],
      "op": "DUP7",
      "path": "1"
    },
    "4370": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2207,
        2229
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "4371": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2207,
        2237
      ],
      "op": "DUP5",
      "path": "1"
    },
    "4372": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2207,
        2237
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4373": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2207,
        2237
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "4374": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2271,
        2297
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 28
    },
    "4375": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2271,
        2297
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "4376": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4378": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4380": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4382": {
      "op": "SHL"
    },
    "4383": {
      "op": "SUB"
    },
    "4384": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2271,
        2297
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4385": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2271,
        2297
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4386": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2271,
        2297
      ],
      "op": "AND",
      "path": "1"
    },
    "4387": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2207,
        2218
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "4389": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2284,
        2297
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4390": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2284,
        2297
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "4391": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2284,
        2297
      ],
      "op": "ADD",
      "path": "1"
    },
    "4392": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2271,
        2297
      ],
      "op": "AND",
      "path": "1"
    },
    "4393": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2271,
        2297
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4394": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2271,
        2297
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "4395": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2271,
        2297
      ],
      "op": "MUL",
      "path": "1"
    },
    "4396": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2271,
        2297
      ],
      "op": "OR",
      "path": "1"
    },
    "4397": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2271,
        2297
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4398": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2271,
        2297
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "4399": {
      "fn": "Governance.completeTask",
      "offset": [
        17038,
        17064
      ],
      "op": "DUP3",
      "path": "2",
      "statement": 29
    },
    "4400": {
      "fn": "Governance.completeTask",
      "offset": [
        17038,
        17064
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4401": {
      "fn": "Governance.completeTask",
      "offset": [
        17038,
        17043
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA"
    },
    "4403": {
      "fn": "Governance.completeTask",
      "offset": [
        17038,
        17064
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4404": {
      "fn": "Governance.completeTask",
      "offset": [
        17038,
        17064
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4405": {
      "fn": "Governance.completeTask",
      "offset": [
        17038,
        17064
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "4406": {
      "fn": "Governance.completeTask",
      "offset": [
        17038,
        17073
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4407": {
      "fn": "Governance.completeTask",
      "offset": [
        17038,
        17073
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4408": {
      "fn": "Governance.completeTask",
      "offset": [
        17038,
        17073
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4409": {
      "fn": "Governance.completeTask",
      "offset": [
        17038,
        17073
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "4410": {
      "op": "POP"
    },
    "4411": {
      "fn": "Governance.completeTask",
      "offset": [
        17038,
        17073
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4412": {
      "fn": "Governance.completeTask",
      "offset": [
        17038,
        17073
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4413": {
      "fn": "Governance.completeTask",
      "offset": [
        17038,
        17064
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4414": {
      "fn": "Governance.completeTask",
      "offset": [
        17038,
        17064
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4415": {
      "fn": "Governance.completeTask",
      "offset": [
        17038,
        17073
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1148"
    },
    "4418": {
      "fn": "Governance.completeTask",
      "offset": [
        17038,
        17073
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4419": {
      "fn": "Governance.completeTask",
      "offset": [
        17038,
        17064
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4420": {
      "fn": "Governance.completeTask",
      "offset": [
        17038,
        17073
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3E72"
    },
    "4423": {
      "fn": "Governance.completeTask",
      "jump": "i",
      "offset": [
        17038,
        17073
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4424": {
      "fn": "Governance.completeTask",
      "offset": [
        17038,
        17073
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4425": {
      "op": "POP"
    },
    "4426": {
      "fn": "Governance.completeTask",
      "offset": [
        17038,
        17073
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4428": {
      "fn": "Governance.completeTask",
      "offset": [
        17038,
        17073
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4429": {
      "fn": "Governance.completeTask",
      "offset": [
        17038,
        17073
      ],
      "op": "ADD",
      "path": "2"
    },
    "4430": {
      "fn": "Governance.completeTask",
      "offset": [
        17038,
        17073
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4431": {
      "fn": "Governance.completeTask",
      "offset": [
        17038,
        17073
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "4433": {
      "fn": "Governance.completeTask",
      "offset": [
        17038,
        17073
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4434": {
      "fn": "Governance.completeTask",
      "offset": [
        17038,
        17073
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4435": {
      "fn": "Governance.completeTask",
      "offset": [
        17038,
        17073
      ],
      "op": "ADD",
      "path": "2"
    },
    "4436": {
      "fn": "Governance.completeTask",
      "offset": [
        17038,
        17073
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4437": {
      "fn": "Governance.completeTask",
      "offset": [
        17038,
        17073
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4438": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "4444": {
      "op": "NOT"
    },
    "4445": {
      "fn": "Governance.completeTask",
      "offset": [
        17038,
        17073
      ],
      "op": "AND",
      "path": "2"
    },
    "4446": {
      "fn": "Governance.completeTask",
      "offset": [
        17038,
        17073
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "4452": {
      "fn": "Governance.completeTask",
      "offset": [
        17038,
        17073
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "4453": {
      "fn": "Governance.completeTask",
      "offset": [
        17038,
        17073
      ],
      "op": "DUP5",
      "path": "2"
    },
    "4454": {
      "fn": "Governance.completeTask",
      "offset": [
        17038,
        17073
      ],
      "op": "AND",
      "path": "2"
    },
    "4455": {
      "fn": "Governance.completeTask",
      "offset": [
        17038,
        17073
      ],
      "op": "OR",
      "path": "2"
    },
    "4456": {
      "fn": "Governance.completeTask",
      "offset": [
        17038,
        17073
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4457": {
      "fn": "Governance.completeTask",
      "offset": [
        17038,
        17073
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "4458": {
      "fn": "Governance.completeTask",
      "offset": [
        17038,
        17073
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4460": {
      "fn": "Governance.completeTask",
      "offset": [
        17038,
        17073
      ],
      "op": "DUP5",
      "path": "2"
    },
    "4461": {
      "fn": "Governance.completeTask",
      "offset": [
        17038,
        17073
      ],
      "op": "ADD",
      "path": "2"
    },
    "4462": {
      "fn": "Governance.completeTask",
      "offset": [
        17038,
        17073
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4463": {
      "fn": "Governance.completeTask",
      "offset": [
        17038,
        17073
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "4465": {
      "fn": "Governance.completeTask",
      "offset": [
        17038,
        17073
      ],
      "op": "DUP5",
      "path": "2"
    },
    "4466": {
      "fn": "Governance.completeTask",
      "offset": [
        17038,
        17073
      ],
      "op": "ADD",
      "path": "2"
    },
    "4467": {
      "fn": "Governance.completeTask",
      "offset": [
        17038,
        17073
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "4468": {
      "fn": "Governance.completeTask",
      "offset": [
        17038,
        17073
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "4470": {
      "fn": "Governance.completeTask",
      "offset": [
        17038,
        17073
      ],
      "op": "DUP5",
      "path": "2"
    },
    "4471": {
      "fn": "Governance.completeTask",
      "offset": [
        17038,
        17073
      ],
      "op": "ADD",
      "path": "2"
    },
    "4472": {
      "fn": "Governance.completeTask",
      "offset": [
        17038,
        17073
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4473": {
      "fn": "Governance.completeTask",
      "offset": [
        17038,
        17073
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "4475": {
      "fn": "Governance.completeTask",
      "offset": [
        17038,
        17073
      ],
      "op": "DUP5",
      "path": "2"
    },
    "4476": {
      "fn": "Governance.completeTask",
      "offset": [
        17038,
        17073
      ],
      "op": "ADD",
      "path": "2"
    },
    "4477": {
      "fn": "Governance.completeTask",
      "offset": [
        17038,
        17073
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "4478": {
      "fn": "Governance.completeTask",
      "offset": [
        17038,
        17073
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x80"
    },
    "4480": {
      "fn": "Governance.completeTask",
      "offset": [
        17038,
        17073
      ],
      "op": "DUP5",
      "path": "2"
    },
    "4481": {
      "fn": "Governance.completeTask",
      "offset": [
        17038,
        17073
      ],
      "op": "ADD",
      "path": "2"
    },
    "4482": {
      "fn": "Governance.completeTask",
      "offset": [
        17038,
        17073
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4483": {
      "fn": "Governance.completeTask",
      "offset": [
        17038,
        17073
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "4485": {
      "fn": "Governance.completeTask",
      "offset": [
        17038,
        17073
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4486": {
      "fn": "Governance.completeTask",
      "offset": [
        17038,
        17073
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "4487": {
      "fn": "Governance.completeTask",
      "offset": [
        17038,
        17073
      ],
      "op": "ADD",
      "path": "2"
    },
    "4488": {
      "fn": "Governance.completeTask",
      "offset": [
        17038,
        17073
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4489": {
      "fn": "Governance.completeTask",
      "offset": [
        17038,
        17073
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4490": {
      "fn": "Governance.completeTask",
      "offset": [
        17038,
        17073
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA0"
    },
    "4492": {
      "fn": "Governance.completeTask",
      "offset": [
        17038,
        17073
      ],
      "op": "DUP7",
      "path": "2"
    },
    "4493": {
      "fn": "Governance.completeTask",
      "offset": [
        17038,
        17073
      ],
      "op": "ADD",
      "path": "2"
    },
    "4494": {
      "fn": "Governance.completeTask",
      "offset": [
        17038,
        17073
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4495": {
      "fn": "Governance.completeTask",
      "offset": [
        17038,
        17073
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xC0"
    },
    "4497": {
      "fn": "Governance.completeTask",
      "offset": [
        17038,
        17073
      ],
      "op": "DUP8",
      "path": "2"
    },
    "4498": {
      "fn": "Governance.completeTask",
      "offset": [
        17038,
        17073
      ],
      "op": "ADD",
      "path": "2"
    },
    "4499": {
      "fn": "Governance.completeTask",
      "offset": [
        17038,
        17073
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4500": {
      "fn": "Governance.completeTask",
      "offset": [
        17038,
        17073
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE0"
    },
    "4502": {
      "fn": "Governance.completeTask",
      "offset": [
        17038,
        17073
      ],
      "op": "DUP9",
      "path": "2"
    },
    "4503": {
      "fn": "Governance.completeTask",
      "offset": [
        17038,
        17073
      ],
      "op": "ADD",
      "path": "2"
    },
    "4504": {
      "fn": "Governance.completeTask",
      "offset": [
        17038,
        17073
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4505": {
      "fn": "Governance.completeTask",
      "offset": [
        17038,
        17073
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "4508": {
      "fn": "Governance.completeTask",
      "offset": [
        17038,
        17073
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4509": {
      "fn": "Governance.completeTask",
      "offset": [
        17038,
        17073
      ],
      "op": "DUP11",
      "path": "2"
    },
    "4510": {
      "fn": "Governance.completeTask",
      "offset": [
        17038,
        17073
      ],
      "op": "ADD",
      "path": "2"
    },
    "4511": {
      "fn": "Governance.completeTask",
      "offset": [
        17038,
        17073
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4512": {
      "fn": "Governance.completeTask",
      "offset": [
        17038,
        17073
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x120"
    },
    "4515": {
      "fn": "Governance.completeTask",
      "offset": [
        17038,
        17073
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4516": {
      "fn": "Governance.completeTask",
      "offset": [
        17038,
        17073
      ],
      "op": "SWAP11",
      "path": "2"
    },
    "4517": {
      "fn": "Governance.completeTask",
      "offset": [
        17038,
        17073
      ],
      "op": "ADD",
      "path": "2"
    },
    "4518": {
      "fn": "Governance.completeTask",
      "offset": [
        17038,
        17073
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4519": {
      "fn": "Governance.completeTask",
      "offset": [
        17038,
        17073
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "4521": {
      "fn": "Governance.completeTask",
      "offset": [
        17038,
        17073
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4522": {
      "fn": "Governance.completeTask",
      "offset": [
        17038,
        17073
      ],
      "op": "SWAP10",
      "path": "2"
    },
    "4523": {
      "fn": "Governance.completeTask",
      "offset": [
        17038,
        17073
      ],
      "op": "AND",
      "path": "2"
    },
    "4524": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "4529": {
      "op": "NOT"
    },
    "4530": {
      "fn": "Governance.completeTask",
      "offset": [
        17038,
        17073
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4531": {
      "fn": "Governance.completeTask",
      "offset": [
        17038,
        17073
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "4532": {
      "fn": "Governance.completeTask",
      "offset": [
        17038,
        17073
      ],
      "op": "AND",
      "path": "2"
    },
    "4533": {
      "fn": "Governance.completeTask",
      "offset": [
        17038,
        17073
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "4534": {
      "fn": "Governance.completeTask",
      "offset": [
        17038,
        17073
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4535": {
      "fn": "Governance.completeTask",
      "offset": [
        17038,
        17073
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "4536": {
      "fn": "Governance.completeTask",
      "offset": [
        17038,
        17073
      ],
      "op": "OR",
      "path": "2"
    },
    "4537": {
      "fn": "Governance.completeTask",
      "offset": [
        17038,
        17073
      ],
      "op": "PUSH3",
      "path": "2",
      "value": "0xFFFFFF"
    },
    "4541": {
      "fn": "Governance.completeTask",
      "offset": [
        17038,
        17073
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4542": {
      "fn": "Governance.completeTask",
      "offset": [
        17038,
        17073
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "4543": {
      "fn": "Governance.completeTask",
      "offset": [
        17038,
        17073
      ],
      "op": "AND",
      "path": "2"
    },
    "4544": {
      "fn": "Governance.completeTask",
      "offset": [
        17038,
        17073
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4545": {
      "fn": "Governance.completeTask",
      "offset": [
        17038,
        17073
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "4546": {
      "fn": "Governance.completeTask",
      "offset": [
        17038,
        17073
      ],
      "op": "MUL",
      "path": "2"
    },
    "4547": {
      "fn": "Governance.completeTask",
      "offset": [
        17038,
        17073
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4548": {
      "fn": "Governance.completeTask",
      "offset": [
        17038,
        17073
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4549": {
      "fn": "Governance.completeTask",
      "offset": [
        17038,
        17073
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4550": {
      "fn": "Governance.completeTask",
      "offset": [
        17038,
        17073
      ],
      "op": "OR",
      "path": "2"
    },
    "4551": {
      "op": "PUSH5",
      "value": "0x100000000"
    },
    "4557": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4559": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4561": {
      "op": "SHL"
    },
    "4562": {
      "op": "SUB"
    },
    "4563": {
      "op": "NOT"
    },
    "4564": {
      "fn": "Governance.completeTask",
      "offset": [
        17038,
        17073
      ],
      "op": "AND",
      "path": "2"
    },
    "4565": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4567": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4569": {
      "op": "SHL"
    },
    "4570": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4572": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4574": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "4576": {
      "op": "SHL"
    },
    "4577": {
      "op": "SUB"
    },
    "4578": {
      "fn": "Governance.completeTask",
      "offset": [
        17038,
        17073
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4579": {
      "fn": "Governance.completeTask",
      "offset": [
        17038,
        17073
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "4580": {
      "fn": "Governance.completeTask",
      "offset": [
        17038,
        17073
      ],
      "op": "AND",
      "path": "2"
    },
    "4581": {
      "fn": "Governance.completeTask",
      "offset": [
        17038,
        17073
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4582": {
      "fn": "Governance.completeTask",
      "offset": [
        17038,
        17073
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4583": {
      "fn": "Governance.completeTask",
      "offset": [
        17038,
        17073
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4584": {
      "fn": "Governance.completeTask",
      "offset": [
        17038,
        17073
      ],
      "op": "MUL",
      "path": "2"
    },
    "4585": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "4588": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "4590": {
      "op": "SHL"
    },
    "4591": {
      "op": "NOT"
    },
    "4592": {
      "fn": "Governance.completeTask",
      "offset": [
        17038,
        17073
      ],
      "op": "AND",
      "path": "2"
    },
    "4593": {
      "fn": "Governance.completeTask",
      "offset": [
        17038,
        17073
      ],
      "op": "OR",
      "path": "2"
    },
    "4594": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4596": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "4598": {
      "op": "SHL"
    },
    "4599": {
      "fn": "Governance.completeTask",
      "offset": [
        17038,
        17073
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "4602": {
      "fn": "Governance.completeTask",
      "offset": [
        17038,
        17073
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "4603": {
      "fn": "Governance.completeTask",
      "offset": [
        17038,
        17073
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4604": {
      "fn": "Governance.completeTask",
      "offset": [
        17038,
        17073
      ],
      "op": "AND",
      "path": "2"
    },
    "4605": {
      "fn": "Governance.completeTask",
      "offset": [
        17038,
        17073
      ],
      "op": "MUL",
      "path": "2"
    },
    "4606": {
      "fn": "Governance.completeTask",
      "offset": [
        17038,
        17073
      ],
      "op": "OR",
      "path": "2"
    },
    "4607": {
      "op": "PUSH7",
      "value": "0xFFFFFFFFFFFFFF"
    },
    "4615": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4617": {
      "op": "SHL"
    },
    "4618": {
      "op": "NOT"
    },
    "4619": {
      "fn": "Governance.completeTask",
      "offset": [
        17038,
        17073
      ],
      "op": "AND",
      "path": "2"
    },
    "4620": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4622": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4624": {
      "op": "SHL"
    },
    "4625": {
      "fn": "Governance.completeTask",
      "offset": [
        17038,
        17073
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4626": {
      "fn": "Governance.completeTask",
      "offset": [
        17038,
        17073
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4627": {
      "fn": "Governance.completeTask",
      "offset": [
        17038,
        17073
      ],
      "op": "SWAP7",
      "path": "2"
    },
    "4628": {
      "fn": "Governance.completeTask",
      "offset": [
        17038,
        17073
      ],
      "op": "AND",
      "path": "2"
    },
    "4629": {
      "fn": "Governance.completeTask",
      "offset": [
        17038,
        17073
      ],
      "op": "MUL",
      "path": "2"
    },
    "4630": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "4636": {
      "op": "PUSH1",
      "value": "0x90"
    },
    "4638": {
      "op": "SHL"
    },
    "4639": {
      "op": "NOT"
    },
    "4640": {
      "fn": "Governance.completeTask",
      "offset": [
        17038,
        17073
      ],
      "op": "AND",
      "path": "2"
    },
    "4641": {
      "fn": "Governance.completeTask",
      "offset": [
        17038,
        17073
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "4642": {
      "fn": "Governance.completeTask",
      "offset": [
        17038,
        17073
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4643": {
      "fn": "Governance.completeTask",
      "offset": [
        17038,
        17073
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "4644": {
      "fn": "Governance.completeTask",
      "offset": [
        17038,
        17073
      ],
      "op": "OR",
      "path": "2"
    },
    "4645": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4647": {
      "op": "PUSH1",
      "value": "0x90"
    },
    "4649": {
      "op": "SHL"
    },
    "4650": {
      "fn": "Governance.completeTask",
      "offset": [
        17038,
        17073
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "4651": {
      "fn": "Governance.completeTask",
      "offset": [
        17038,
        17073
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4652": {
      "fn": "Governance.completeTask",
      "offset": [
        17038,
        17073
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "4653": {
      "fn": "Governance.completeTask",
      "offset": [
        17038,
        17073
      ],
      "op": "AND",
      "path": "2"
    },
    "4654": {
      "fn": "Governance.completeTask",
      "offset": [
        17038,
        17073
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "4655": {
      "fn": "Governance.completeTask",
      "offset": [
        17038,
        17073
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4656": {
      "fn": "Governance.completeTask",
      "offset": [
        17038,
        17073
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "4657": {
      "fn": "Governance.completeTask",
      "offset": [
        17038,
        17073
      ],
      "op": "MUL",
      "path": "2"
    },
    "4658": {
      "fn": "Governance.completeTask",
      "offset": [
        17038,
        17073
      ],
      "op": "OR",
      "path": "2"
    },
    "4659": {
      "fn": "Governance.completeTask",
      "offset": [
        17038,
        17073
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4660": {
      "fn": "Governance.completeTask",
      "offset": [
        17038,
        17073
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4661": {
      "fn": "Governance.completeTask",
      "offset": [
        17038,
        17073
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "4662": {
      "fn": "Governance.completeTask",
      "offset": [
        17091,
        17110
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 30,
      "value": "0xB"
    },
    "4664": {
      "fn": "Governance.completeTask",
      "offset": [
        17091,
        17113
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4665": {
      "fn": "Governance.completeTask",
      "offset": [
        17091,
        17113
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4666": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4668": {
      "op": "SWAP1"
    },
    "4669": {
      "fn": "Governance.completeTask",
      "offset": [
        17091,
        17113
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1247"
    },
    "4672": {
      "fn": "Governance.completeTask",
      "offset": [
        17091,
        17113
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4673": {
      "fn": "Governance.completeTask",
      "offset": [
        17038,
        17073
      ],
      "op": "DUP5",
      "path": "2"
    },
    "4674": {
      "fn": "Governance.completeTask",
      "offset": [
        17038,
        17073
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4675": {
      "fn": "Governance.completeTask",
      "offset": [
        17091,
        17113
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3F47"
    },
    "4678": {
      "fn": "Governance.completeTask",
      "jump": "i",
      "offset": [
        17091,
        17113
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4679": {
      "fn": "Governance.completeTask",
      "offset": [
        17091,
        17113
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4680": {
      "fn": "Governance.completeTask",
      "offset": [
        17091,
        17113
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4681": {
      "fn": "Governance.completeTask",
      "offset": [
        17091,
        17113
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4682": {
      "fn": "Governance.completeTask",
      "offset": [
        17091,
        17113
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "4683": {
      "op": "POP"
    },
    "4684": {
      "fn": "Governance.completeTask",
      "offset": [
        17215,
        17239
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 31,
      "value": "0x125A"
    },
    "4687": {
      "fn": "Governance.completeTask",
      "offset": [
        17215,
        17239
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4688": {
      "op": "POP"
    },
    "4689": {
      "fn": "Governance.completeTask",
      "offset": [
        17215,
        17230
      ],
      "op": "TIMESTAMP",
      "path": "2"
    },
    "4690": {
      "fn": "Governance.completeTask",
      "offset": [
        17233,
        17239
      ],
      "op": "PUSH3",
      "path": "2",
      "value": "0x15180"
    },
    "4694": {
      "fn": "Governance.completeTask",
      "offset": [
        17215,
        17239
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3F47"
    },
    "4697": {
      "fn": "Governance.completeTask",
      "jump": "i",
      "offset": [
        17215,
        17239
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4698": {
      "fn": "Governance.completeTask",
      "offset": [
        17215,
        17239
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4699": {
      "fn": "Governance.completeTask",
      "offset": [
        17168,
        17177
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "4701": {
      "fn": "Governance.completeTask",
      "offset": [
        17178,
        17179
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4702": {
      "fn": "Governance.completeTask",
      "offset": [
        17168,
        17180
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4703": {
      "fn": "Governance.completeTask",
      "offset": [
        17168,
        17180
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4704": {
      "fn": "Governance.completeTask",
      "offset": [
        17168,
        17180
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4705": {
      "fn": "Governance.completeTask",
      "offset": [
        17168,
        17180
      ],
      "op": "LT",
      "path": "2"
    },
    "4706": {
      "fn": "Governance.completeTask",
      "offset": [
        17168,
        17180
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x126D"
    },
    "4709": {
      "fn": "Governance.completeTask",
      "offset": [
        17168,
        17180
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4710": {
      "fn": "Governance.completeTask",
      "offset": [
        17168,
        17180
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x126D"
    },
    "4713": {
      "fn": "Governance.completeTask",
      "offset": [
        17168,
        17180
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3C98"
    },
    "4716": {
      "fn": "Governance.completeTask",
      "jump": "i",
      "offset": [
        17168,
        17180
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4717": {
      "fn": "Governance.completeTask",
      "offset": [
        17168,
        17180
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4718": {
      "fn": "Governance.completeTask",
      "offset": [
        17168,
        17180
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4720": {
      "fn": "Governance.completeTask",
      "offset": [
        17168,
        17180
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4721": {
      "fn": "Governance.completeTask",
      "offset": [
        17168,
        17180
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4722": {
      "fn": "Governance.completeTask",
      "offset": [
        17168,
        17180
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4723": {
      "fn": "Governance.completeTask",
      "offset": [
        17168,
        17180
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4725": {
      "fn": "Governance.completeTask",
      "offset": [
        17168,
        17180
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4726": {
      "fn": "Governance.completeTask",
      "offset": [
        17168,
        17180
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4727": {
      "fn": "Governance.completeTask",
      "offset": [
        17168,
        17180
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "4728": {
      "fn": "Governance.completeTask",
      "offset": [
        17168,
        17212
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "4734": {
      "fn": "Governance.completeTask",
      "offset": [
        17168,
        17212
      ],
      "op": "DUP9",
      "path": "2"
    },
    "4735": {
      "fn": "Governance.completeTask",
      "offset": [
        17168,
        17212
      ],
      "op": "AND",
      "path": "2"
    },
    "4736": {
      "fn": "Governance.completeTask",
      "offset": [
        17168,
        17212
      ],
      "op": "DUP5",
      "path": "2"
    },
    "4737": {
      "fn": "Governance.completeTask",
      "offset": [
        17168,
        17212
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4738": {
      "fn": "Governance.completeTask",
      "offset": [
        17168,
        17180
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "4740": {
      "fn": "Governance.completeTask",
      "offset": [
        17168,
        17180
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4741": {
      "fn": "Governance.completeTask",
      "offset": [
        17168,
        17180
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "4742": {
      "fn": "Governance.completeTask",
      "offset": [
        17168,
        17180
      ],
      "op": "MUL",
      "path": "2"
    },
    "4743": {
      "fn": "Governance.completeTask",
      "offset": [
        17168,
        17180
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4744": {
      "fn": "Governance.completeTask",
      "offset": [
        17168,
        17180
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4745": {
      "fn": "Governance.completeTask",
      "offset": [
        17168,
        17180
      ],
      "op": "ADD",
      "path": "2"
    },
    "4746": {
      "fn": "Governance.completeTask",
      "offset": [
        17168,
        17212
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4747": {
      "fn": "Governance.completeTask",
      "offset": [
        17168,
        17212
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4748": {
      "fn": "Governance.completeTask",
      "offset": [
        17168,
        17212
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4750": {
      "fn": "Governance.completeTask",
      "offset": [
        17168,
        17212
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4751": {
      "fn": "Governance.completeTask",
      "offset": [
        17168,
        17212
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "4752": {
      "fn": "Governance.completeTask",
      "offset": [
        17168,
        17239
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "4753": {
      "fn": "Governance.completeTask",
      "offset": [
        17287,
        17296
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 32,
      "value": "0x5"
    },
    "4755": {
      "fn": "Governance.completeTask",
      "offset": [
        17287,
        17299
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4756": {
      "fn": "Governance.completeTask",
      "offset": [
        17287,
        17299
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4757": {
      "fn": "Governance.completeTask",
      "offset": [
        17317,
        17318
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "4759": {
      "fn": "Governance.completeTask",
      "offset": [
        17317,
        17318
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4760": {
      "fn": "Governance.completeTask",
      "offset": [
        17287,
        17296
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4761": {
      "fn": "Governance.completeTask",
      "offset": [
        17297,
        17298
      ],
      "op": "DUP5",
      "path": "2"
    },
    "4762": {
      "fn": "Governance.completeTask",
      "offset": [
        17297,
        17298
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4763": {
      "fn": "Governance.completeTask",
      "offset": [
        17287,
        17299
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4764": {
      "fn": "Governance.completeTask",
      "offset": [
        17287,
        17299
      ],
      "op": "LT",
      "path": "2"
    },
    "4765": {
      "fn": "Governance.completeTask",
      "offset": [
        17287,
        17299
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x12A8"
    },
    "4768": {
      "fn": "Governance.completeTask",
      "offset": [
        17287,
        17299
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4769": {
      "fn": "Governance.completeTask",
      "offset": [
        17287,
        17299
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x12A8"
    },
    "4772": {
      "fn": "Governance.completeTask",
      "offset": [
        17287,
        17299
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3C98"
    },
    "4775": {
      "fn": "Governance.completeTask",
      "jump": "i",
      "offset": [
        17287,
        17299
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4776": {
      "fn": "Governance.completeTask",
      "offset": [
        17287,
        17299
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4777": {
      "fn": "Governance.completeTask",
      "offset": [
        17287,
        17299
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4778": {
      "fn": "Governance.completeTask",
      "offset": [
        17287,
        17299
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4780": {
      "fn": "Governance.completeTask",
      "offset": [
        17287,
        17299
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4781": {
      "fn": "Governance.completeTask",
      "offset": [
        17287,
        17299
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4783": {
      "fn": "Governance.completeTask",
      "offset": [
        17287,
        17299
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4785": {
      "fn": "Governance.completeTask",
      "offset": [
        17287,
        17299
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "4786": {
      "fn": "Governance.completeTask",
      "offset": [
        17287,
        17299
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4787": {
      "fn": "Governance.completeTask",
      "offset": [
        17287,
        17299
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "4789": {
      "fn": "Governance.completeTask",
      "offset": [
        17287,
        17299
      ],
      "op": "MUL",
      "path": "2"
    },
    "4790": {
      "fn": "Governance.completeTask",
      "offset": [
        17287,
        17299
      ],
      "op": "ADD",
      "path": "2"
    },
    "4791": {
      "fn": "Governance.completeTask",
      "offset": [
        17287,
        17314
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "4793": {
      "fn": "Governance.completeTask",
      "offset": [
        17287,
        17314
      ],
      "op": "ADD",
      "path": "2"
    },
    "4794": {
      "fn": "Governance.completeTask",
      "offset": [
        17287,
        17314
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x14"
    },
    "4796": {
      "fn": "Governance.completeTask",
      "offset": [
        17287,
        17314
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4797": {
      "fn": "Governance.completeTask",
      "offset": [
        17287,
        17314
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4798": {
      "fn": "Governance.completeTask",
      "offset": [
        17287,
        17314
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4799": {
      "fn": "Governance.completeTask",
      "offset": [
        17287,
        17314
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "4802": {
      "fn": "Governance.completeTask",
      "offset": [
        17287,
        17314
      ],
      "op": "EXP",
      "path": "2"
    },
    "4803": {
      "fn": "Governance.completeTask",
      "offset": [
        17287,
        17314
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4804": {
      "fn": "Governance.completeTask",
      "offset": [
        17287,
        17314
      ],
      "op": "DIV",
      "path": "2"
    },
    "4805": {
      "fn": "Governance.completeTask",
      "offset": [
        17287,
        17314
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "4808": {
      "fn": "Governance.completeTask",
      "offset": [
        17287,
        17314
      ],
      "op": "AND",
      "path": "2"
    },
    "4809": {
      "fn": "Governance.completeTask",
      "offset": [
        17287,
        17318
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x12D2"
    },
    "4812": {
      "fn": "Governance.completeTask",
      "offset": [
        17287,
        17318
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4813": {
      "fn": "Governance.completeTask",
      "offset": [
        17287,
        17318
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4814": {
      "fn": "Governance.completeTask",
      "offset": [
        17287,
        17318
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3F5F"
    },
    "4817": {
      "fn": "Governance.completeTask",
      "jump": "i",
      "offset": [
        17287,
        17318
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4818": {
      "fn": "Governance.completeTask",
      "offset": [
        17287,
        17318
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4819": {
      "fn": "Governance.completeTask",
      "offset": [
        17257,
        17266
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "4821": {
      "fn": "Governance.completeTask",
      "offset": [
        17267,
        17268
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4822": {
      "fn": "Governance.completeTask",
      "offset": [
        17257,
        17269
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4823": {
      "fn": "Governance.completeTask",
      "offset": [
        17257,
        17269
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4824": {
      "fn": "Governance.completeTask",
      "offset": [
        17257,
        17269
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4825": {
      "fn": "Governance.completeTask",
      "offset": [
        17257,
        17269
      ],
      "op": "LT",
      "path": "2"
    },
    "4826": {
      "fn": "Governance.completeTask",
      "offset": [
        17257,
        17269
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x12E5"
    },
    "4829": {
      "fn": "Governance.completeTask",
      "offset": [
        17257,
        17269
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4830": {
      "fn": "Governance.completeTask",
      "offset": [
        17257,
        17269
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x12E5"
    },
    "4833": {
      "fn": "Governance.completeTask",
      "offset": [
        17257,
        17269
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3C98"
    },
    "4836": {
      "fn": "Governance.completeTask",
      "jump": "i",
      "offset": [
        17257,
        17269
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4837": {
      "fn": "Governance.completeTask",
      "offset": [
        17257,
        17269
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4838": {
      "fn": "Governance.completeTask",
      "offset": [
        17257,
        17269
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4839": {
      "fn": "Governance.completeTask",
      "offset": [
        17257,
        17269
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4841": {
      "fn": "Governance.completeTask",
      "offset": [
        17257,
        17269
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4842": {
      "fn": "Governance.completeTask",
      "offset": [
        17257,
        17269
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4844": {
      "fn": "Governance.completeTask",
      "offset": [
        17257,
        17269
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4846": {
      "fn": "Governance.completeTask",
      "offset": [
        17257,
        17269
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "4847": {
      "fn": "Governance.completeTask",
      "offset": [
        17257,
        17269
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4848": {
      "fn": "Governance.completeTask",
      "offset": [
        17257,
        17269
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "4850": {
      "fn": "Governance.completeTask",
      "offset": [
        17257,
        17269
      ],
      "op": "MUL",
      "path": "2"
    },
    "4851": {
      "fn": "Governance.completeTask",
      "offset": [
        17257,
        17269
      ],
      "op": "ADD",
      "path": "2"
    },
    "4852": {
      "fn": "Governance.completeTask",
      "offset": [
        17257,
        17284
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "4854": {
      "fn": "Governance.completeTask",
      "offset": [
        17257,
        17284
      ],
      "op": "ADD",
      "path": "2"
    },
    "4855": {
      "fn": "Governance.completeTask",
      "offset": [
        17257,
        17284
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x14"
    },
    "4857": {
      "fn": "Governance.completeTask",
      "offset": [
        17257,
        17318
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "4860": {
      "fn": "Governance.completeTask",
      "offset": [
        17257,
        17318
      ],
      "op": "EXP",
      "path": "2"
    },
    "4861": {
      "fn": "Governance.completeTask",
      "offset": [
        17257,
        17318
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4862": {
      "fn": "Governance.completeTask",
      "offset": [
        17257,
        17318
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4863": {
      "fn": "Governance.completeTask",
      "offset": [
        17257,
        17318
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4864": {
      "fn": "Governance.completeTask",
      "offset": [
        17257,
        17318
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "4867": {
      "fn": "Governance.completeTask",
      "offset": [
        17257,
        17318
      ],
      "op": "MUL",
      "path": "2"
    },
    "4868": {
      "fn": "Governance.completeTask",
      "offset": [
        17257,
        17318
      ],
      "op": "NOT",
      "path": "2"
    },
    "4869": {
      "fn": "Governance.completeTask",
      "offset": [
        17257,
        17318
      ],
      "op": "AND",
      "path": "2"
    },
    "4870": {
      "fn": "Governance.completeTask",
      "offset": [
        17257,
        17318
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4871": {
      "fn": "Governance.completeTask",
      "offset": [
        17257,
        17318
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4872": {
      "fn": "Governance.completeTask",
      "offset": [
        17257,
        17318
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "4875": {
      "fn": "Governance.completeTask",
      "offset": [
        17257,
        17318
      ],
      "op": "AND",
      "path": "2"
    },
    "4876": {
      "fn": "Governance.completeTask",
      "offset": [
        17257,
        17318
      ],
      "op": "MUL",
      "path": "2"
    },
    "4877": {
      "fn": "Governance.completeTask",
      "offset": [
        17257,
        17318
      ],
      "op": "OR",
      "path": "2"
    },
    "4878": {
      "fn": "Governance.completeTask",
      "offset": [
        17257,
        17318
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4879": {
      "fn": "Governance.completeTask",
      "offset": [
        17257,
        17318
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "4880": {
      "fn": "Governance.completeTask",
      "offset": [
        17257,
        17318
      ],
      "op": "POP",
      "path": "2"
    },
    "4881": {
      "fn": "Governance.completeTask",
      "offset": [
        17342,
        17414
      ],
      "op": "PUSH32",
      "path": "2",
      "statement": 33,
      "value": "0xBCC1EA15519F3ACFB49E91DE851E553B2C024B9AB85CEE8FFD8FE4E4E0A7876D"
    },
    "4914": {
      "fn": "Governance.completeTask",
      "offset": [
        17356,
        17362
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4915": {
      "fn": "Governance.completeTask",
      "offset": [
        17384,
        17385
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "4917": {
      "fn": "Governance.completeTask",
      "offset": [
        17363,
        17382
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xB"
    },
    "4919": {
      "fn": "Governance.completeTask",
      "offset": [
        17363,
        17382
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4920": {
      "fn": "Governance.completeTask",
      "offset": [
        17363,
        17385
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1341"
    },
    "4923": {
      "fn": "Governance.completeTask",
      "offset": [
        17363,
        17385
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4924": {
      "fn": "Governance.completeTask",
      "offset": [
        17363,
        17385
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4925": {
      "fn": "Governance.completeTask",
      "offset": [
        17363,
        17385
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3F82"
    },
    "4928": {
      "fn": "Governance.completeTask",
      "jump": "i",
      "offset": [
        17363,
        17385
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4929": {
      "fn": "Governance.completeTask",
      "offset": [
        17363,
        17385
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4930": {
      "fn": "Governance.completeTask",
      "offset": [
        17387,
        17396
      ],
      "op": "DUP8",
      "path": "2"
    },
    "4931": {
      "fn": "Governance.completeTask",
      "offset": [
        17398,
        17413
      ],
      "op": "TIMESTAMP",
      "path": "2"
    },
    "4932": {
      "fn": "Governance.completeTask",
      "offset": [
        17342,
        17414
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4934": {
      "fn": "Governance.completeTask",
      "offset": [
        17342,
        17414
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4935": {
      "fn": "Governance.completeTask",
      "offset": [
        17342,
        17414
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1353"
    },
    "4938": {
      "fn": "Governance.completeTask",
      "offset": [
        17342,
        17414
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "4939": {
      "fn": "Governance.completeTask",
      "offset": [
        17342,
        17414
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "4940": {
      "fn": "Governance.completeTask",
      "offset": [
        17342,
        17414
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "4941": {
      "fn": "Governance.completeTask",
      "offset": [
        17342,
        17414
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4942": {
      "fn": "Governance.completeTask",
      "offset": [
        17342,
        17414
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4943": {
      "fn": "Governance.completeTask",
      "offset": [
        17342,
        17414
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3F99"
    },
    "4946": {
      "fn": "Governance.completeTask",
      "jump": "i",
      "offset": [
        17342,
        17414
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4947": {
      "fn": "Governance.completeTask",
      "offset": [
        17342,
        17414
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4948": {
      "fn": "Governance.completeTask",
      "offset": [
        17342,
        17414
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4950": {
      "fn": "Governance.completeTask",
      "offset": [
        17342,
        17414
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4951": {
      "fn": "Governance.completeTask",
      "offset": [
        17342,
        17414
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4952": {
      "fn": "Governance.completeTask",
      "offset": [
        17342,
        17414
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4953": {
      "fn": "Governance.completeTask",
      "offset": [
        17342,
        17414
      ],
      "op": "SUB",
      "path": "2"
    },
    "4954": {
      "fn": "Governance.completeTask",
      "offset": [
        17342,
        17414
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4955": {
      "fn": "Governance.completeTask",
      "offset": [
        17342,
        17414
      ],
      "op": "LOG1",
      "path": "2"
    },
    "4956": {
      "fn": "Governance.completeTask",
      "offset": [
        17432,
        17437
      ],
      "op": "POP",
      "path": "2",
      "statement": 34
    },
    "4957": {
      "fn": "Governance.completeTask",
      "offset": [
        17432,
        17437
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1369"
    },
    "4960": {
      "fn": "Governance.completeTask",
      "offset": [
        17432,
        17437
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4961": {
      "fn": "Governance.completeTask",
      "offset": [
        16463,
        17452
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4962": {
      "fn": "Governance.completeTask",
      "offset": [
        17475,
        17478
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 35,
      "value": "0x1"
    },
    "4964": {
      "fn": "Governance.completeTask",
      "offset": [
        17475,
        17478
      ],
      "op": "ADD",
      "path": "2"
    },
    "4965": {
      "fn": "Governance.completeTask",
      "offset": [
        16410,
        17490
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xEFC"
    },
    "4968": {
      "fn": "Governance.completeTask",
      "offset": [
        16410,
        17490
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4969": {
      "fn": "Governance.completeTask",
      "offset": [
        16410,
        17490
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4970": {
      "fn": "Governance.completeTask",
      "offset": [
        16410,
        17490
      ],
      "op": "POP",
      "path": "2"
    },
    "4971": {
      "fn": "Governance.completeTask",
      "offset": [
        16230,
        17516
      ],
      "op": "POP",
      "path": "2"
    },
    "4972": {
      "fn": "Governance.completeTask",
      "offset": [
        16230,
        17516
      ],
      "op": "POP",
      "path": "2"
    },
    "4973": {
      "fn": "Governance.completeTask",
      "offset": [
        16230,
        17516
      ],
      "op": "POP",
      "path": "2"
    },
    "4974": {
      "fn": "Governance.completeTask",
      "jump": "o",
      "offset": [
        16230,
        17516
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4975": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5367,
        6336
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4976": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5434,
        5441
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4978": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5475,
        5489
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 36,
      "value": "0x9"
    },
    "4980": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5475,
        5489
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4981": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5462,
        5472
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4982": {
      "branch": 137,
      "fn": "Governance.getWinningVote",
      "offset": [
        5462,
        5489
      ],
      "op": "LT",
      "path": "2"
    },
    "4983": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5454,
        5510
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x13B5"
    },
    "4986": {
      "branch": 137,
      "fn": "Governance.getWinningVote",
      "offset": [
        5454,
        5510
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4987": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5454,
        5510
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4989": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5454,
        5510
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4990": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4994": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4996": {
      "op": "SHL"
    },
    "4997": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5454,
        5510
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4998": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5454,
        5510
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4999": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5001": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5454,
        5510
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "5003": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5454,
        5510
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5004": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5454,
        5510
      ],
      "op": "ADD",
      "path": "2"
    },
    "5005": {
      "op": "MSTORE"
    },
    "5006": {
      "op": "PUSH1",
      "value": "0x10"
    },
    "5008": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5010": {
      "op": "DUP3"
    },
    "5011": {
      "op": "ADD"
    },
    "5012": {
      "op": "MSTORE"
    },
    "5013": {
      "op": "PUSH16",
      "value": "0x1B9BC81CDD58DA081C1C9BDC1BDCD85B"
    },
    "5030": {
      "op": "PUSH1",
      "value": "0x82"
    },
    "5032": {
      "op": "SHL"
    },
    "5033": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5035": {
      "op": "DUP3"
    },
    "5036": {
      "op": "ADD"
    },
    "5037": {
      "op": "MSTORE"
    },
    "5038": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5040": {
      "op": "ADD"
    },
    "5041": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5454,
        5510
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE54"
    },
    "5044": {
      "op": "JUMP"
    },
    "5045": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5454,
        5510
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5046": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5547,
        5568
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 37,
      "value": "0x0"
    },
    "5048": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5547,
        5568
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5049": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5547,
        5568
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5050": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5547,
        5568
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5051": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5547,
        5556
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x8"
    },
    "5053": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5547,
        5568
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5055": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5547,
        5568
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5056": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5547,
        5568
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5058": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5547,
        5568
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5059": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5547,
        5568
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "5060": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5547,
        5581
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "5062": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5547,
        5581
      ],
      "op": "ADD",
      "path": "2"
    },
    "5063": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5547,
        5581
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5064": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5066": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "5068": {
      "op": "SHL"
    },
    "5069": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5547,
        5581
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5070": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5547,
        5581
      ],
      "op": "DIV",
      "path": "2"
    },
    "5071": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5547,
        5581
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "5077": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5547,
        5581
      ],
      "op": "AND",
      "path": "2"
    },
    "5078": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5529,
        5544
      ],
      "op": "TIMESTAMP",
      "path": "2"
    },
    "5079": {
      "branch": 138,
      "fn": "Governance.getWinningVote",
      "offset": [
        5529,
        5581
      ],
      "op": "GT",
      "path": "2"
    },
    "5080": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5520,
        5605
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1419"
    },
    "5083": {
      "branch": 138,
      "fn": "Governance.getWinningVote",
      "offset": [
        5520,
        5605
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5084": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5520,
        5605
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5086": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5520,
        5605
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5087": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5091": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5093": {
      "op": "SHL"
    },
    "5094": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5520,
        5605
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5095": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5520,
        5605
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5096": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5098": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5520,
        5605
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "5100": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5520,
        5605
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5101": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5520,
        5605
      ],
      "op": "ADD",
      "path": "2"
    },
    "5102": {
      "op": "MSTORE"
    },
    "5103": {
      "op": "PUSH1",
      "value": "0x13"
    },
    "5105": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5107": {
      "op": "DUP3"
    },
    "5108": {
      "op": "ADD"
    },
    "5109": {
      "op": "MSTORE"
    },
    "5110": {
      "op": "PUSH19",
      "value": "0x766F74696E67207374696C6C20616374697665"
    },
    "5130": {
      "op": "PUSH1",
      "value": "0x68"
    },
    "5132": {
      "op": "SHL"
    },
    "5133": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5135": {
      "op": "DUP3"
    },
    "5136": {
      "op": "ADD"
    },
    "5137": {
      "op": "MSTORE"
    },
    "5138": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5140": {
      "op": "ADD"
    },
    "5141": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5520,
        5605
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE54"
    },
    "5144": {
      "op": "JUMP"
    },
    "5145": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5520,
        5605
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5146": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5725,
        5744
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5148": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5754,
        5779
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5149": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5789,
        5800
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5151": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5816,
        5825
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5152": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5812,
        6257
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5153": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5832,
        5853
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5155": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5832,
        5853
      ],
      "op": "DUP7",
      "path": "2"
    },
    "5156": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5832,
        5853
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5157": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5832,
        5853
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5158": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5832,
        5841
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x8"
    },
    "5160": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5832,
        5853
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5162": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5832,
        5853
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5163": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5832,
        5853
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5165": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5832,
        5853
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5166": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5832,
        5853
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "5167": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5832,
        5869
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "5169": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5832,
        5869
      ],
      "op": "ADD",
      "path": "2"
    },
    "5170": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5832,
        5869
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5171": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5832,
        5869
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "5174": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5832,
        5869
      ],
      "op": "AND",
      "path": "2"
    },
    "5175": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5829,
        5869
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5176": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5829,
        5869
      ],
      "op": "LT",
      "path": "2"
    },
    "5177": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5812,
        6257
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "5178": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5812,
        6257
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1547"
    },
    "5181": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5812,
        6257
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5182": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5961,
        5978
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5183": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5928,
        5937
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x8"
    },
    "5185": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5928,
        5949
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5187": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5938,
        5948
      ],
      "op": "DUP9",
      "path": "2"
    },
    "5188": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5928,
        5949
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5189": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5928,
        5949
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5190": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5928,
        5949
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5192": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5928,
        5949
      ],
      "op": "ADD",
      "path": "2"
    },
    "5193": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5928,
        5949
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5194": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5928,
        5949
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5195": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5928,
        5949
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5196": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5928,
        5949
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5198": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5928,
        5949
      ],
      "op": "ADD",
      "path": "2"
    },
    "5199": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5928,
        5949
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5201": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5928,
        5949
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "5202": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5928,
        5955
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "5204": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5928,
        5955
      ],
      "op": "ADD",
      "path": "2"
    },
    "5205": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5956,
        5957
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5206": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5928,
        5958
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x8"
    },
    "5208": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5928,
        5958
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5209": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5928,
        5958
      ],
      "op": "LT",
      "path": "2"
    },
    "5210": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5928,
        5958
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1465"
    },
    "5213": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5928,
        5958
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5214": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5928,
        5958
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1465"
    },
    "5217": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5928,
        5958
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3C98"
    },
    "5220": {
      "fn": "Governance.getWinningVote",
      "jump": "i",
      "offset": [
        5928,
        5958
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5221": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5928,
        5958
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5222": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5928,
        5958
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x10"
    },
    "5224": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5928,
        5958
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5225": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5928,
        5958
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5226": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5928,
        5958
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5227": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5928,
        5958
      ],
      "op": "DIV",
      "path": "2"
    },
    "5228": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5928,
        5958
      ],
      "op": "ADD",
      "path": "2"
    },
    "5229": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5928,
        5958
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5230": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5928,
        5958
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5231": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5928,
        5958
      ],
      "op": "MOD",
      "path": "2"
    },
    "5232": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5928,
        5958
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "5234": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5928,
        5958
      ],
      "op": "MUL",
      "path": "2"
    },
    "5235": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5928,
        5958
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5236": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5928,
        5958
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5237": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5928,
        5958
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5238": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5928,
        5958
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "5241": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5928,
        5958
      ],
      "op": "EXP",
      "path": "2"
    },
    "5242": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5928,
        5958
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5243": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5928,
        5958
      ],
      "op": "DIV",
      "path": "2"
    },
    "5244": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5928,
        5958
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "5247": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5928,
        5958
      ],
      "op": "AND",
      "path": "2"
    },
    "5248": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5928,
        5978
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "5251": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5928,
        5978
      ],
      "op": "AND",
      "path": "2"
    },
    "5252": {
      "branch": 139,
      "fn": "Governance.getWinningVote",
      "offset": [
        5928,
        5978
      ],
      "op": "GT",
      "path": "2"
    },
    "5253": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5925,
        6247
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "5254": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5925,
        6247
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x14E5"
    },
    "5257": {
      "branch": 139,
      "fn": "Governance.getWinningVote",
      "offset": [
        5925,
        6247
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5258": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6018,
        6027
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 38,
      "value": "0x8"
    },
    "5260": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6018,
        6039
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5262": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6028,
        6038
      ],
      "op": "DUP8",
      "path": "2"
    },
    "5263": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6018,
        6039
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5264": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6018,
        6039
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5265": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6018,
        6039
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5267": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6018,
        6039
      ],
      "op": "ADD",
      "path": "2"
    },
    "5268": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6018,
        6039
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5269": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6018,
        6039
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5270": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6018,
        6039
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5271": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6018,
        6039
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5273": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6018,
        6039
      ],
      "op": "ADD",
      "path": "2"
    },
    "5274": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6018,
        6039
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5276": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6018,
        6039
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "5277": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6018,
        6045
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "5279": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6018,
        6045
      ],
      "op": "ADD",
      "path": "2"
    },
    "5280": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6046,
        6047
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5281": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6018,
        6048
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x8"
    },
    "5283": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6018,
        6048
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5284": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6018,
        6048
      ],
      "op": "LT",
      "path": "2"
    },
    "5285": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6018,
        6048
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x14B0"
    },
    "5288": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6018,
        6048
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5289": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6018,
        6048
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x14B0"
    },
    "5292": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6018,
        6048
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3C98"
    },
    "5295": {
      "fn": "Governance.getWinningVote",
      "jump": "i",
      "offset": [
        6018,
        6048
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5296": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6018,
        6048
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5297": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6018,
        6048
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x10"
    },
    "5299": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6018,
        6048
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5300": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6018,
        6048
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5301": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6018,
        6048
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5302": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6018,
        6048
      ],
      "op": "DIV",
      "path": "2"
    },
    "5303": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6018,
        6048
      ],
      "op": "ADD",
      "path": "2"
    },
    "5304": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6018,
        6048
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5305": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6018,
        6048
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5306": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6018,
        6048
      ],
      "op": "MOD",
      "path": "2"
    },
    "5307": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6018,
        6048
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "5309": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6018,
        6048
      ],
      "op": "MUL",
      "path": "2"
    },
    "5310": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6018,
        6048
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5311": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6018,
        6048
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5312": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6018,
        6048
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5313": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6018,
        6048
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "5316": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6018,
        6048
      ],
      "op": "EXP",
      "path": "2"
    },
    "5317": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6018,
        6048
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5318": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6018,
        6048
      ],
      "op": "DIV",
      "path": "2"
    },
    "5319": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6018,
        6048
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "5322": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6018,
        6048
      ],
      "op": "AND",
      "path": "2"
    },
    "5323": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5998,
        6048
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "5326": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5998,
        6048
      ],
      "op": "AND",
      "path": "2"
    },
    "5327": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5998,
        6048
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "5328": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5998,
        6048
      ],
      "op": "POP",
      "path": "2"
    },
    "5329": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6080,
        6081
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 39
    },
    "5330": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6066,
        6081
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "5331": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6066,
        6081
      ],
      "op": "POP",
      "path": "2"
    },
    "5332": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6103,
        6106
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5333": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6108,
        6109
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "5335": {
      "branch": 140,
      "fn": "Governance.getWinningVote",
      "offset": [
        6103,
        6109
      ],
      "op": "SUB",
      "path": "2"
    },
    "5336": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6099,
        6122
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x14E0"
    },
    "5339": {
      "branch": 140,
      "fn": "Governance.getWinningVote",
      "offset": [
        6099,
        6122
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5340": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6119,
        6120
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 40,
      "value": "0x0"
    },
    "5342": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6113,
        6120
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5343": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6113,
        6120
      ],
      "op": "POP",
      "path": "2"
    },
    "5344": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6099,
        6122
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5345": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5925,
        6247
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1535"
    },
    "5348": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5925,
        6247
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5349": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5925,
        6247
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5350": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6191,
        6208
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5351": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6157,
        6166
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x8"
    },
    "5353": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6157,
        6178
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5355": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6167,
        6177
      ],
      "op": "DUP9",
      "path": "2"
    },
    "5356": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6157,
        6178
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5357": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6157,
        6178
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5358": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6157,
        6178
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5360": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6157,
        6178
      ],
      "op": "ADD",
      "path": "2"
    },
    "5361": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6157,
        6178
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5362": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6157,
        6178
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5363": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6157,
        6178
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5364": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6157,
        6178
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5366": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6157,
        6178
      ],
      "op": "ADD",
      "path": "2"
    },
    "5367": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6157,
        6178
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5369": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6157,
        6178
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "5370": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6157,
        6184
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "5372": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6157,
        6184
      ],
      "op": "ADD",
      "path": "2"
    },
    "5373": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6185,
        6186
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5374": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6157,
        6187
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x8"
    },
    "5376": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6157,
        6187
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5377": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6157,
        6187
      ],
      "op": "LT",
      "path": "2"
    },
    "5378": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6157,
        6187
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x150D"
    },
    "5381": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6157,
        6187
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5382": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6157,
        6187
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x150D"
    },
    "5385": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6157,
        6187
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3C98"
    },
    "5388": {
      "fn": "Governance.getWinningVote",
      "jump": "i",
      "offset": [
        6157,
        6187
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5389": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6157,
        6187
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5390": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6157,
        6187
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x10"
    },
    "5392": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6157,
        6187
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5393": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6157,
        6187
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5394": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6157,
        6187
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5395": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6157,
        6187
      ],
      "op": "DIV",
      "path": "2"
    },
    "5396": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6157,
        6187
      ],
      "op": "ADD",
      "path": "2"
    },
    "5397": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6157,
        6187
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5398": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6157,
        6187
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5399": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6157,
        6187
      ],
      "op": "MOD",
      "path": "2"
    },
    "5400": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6157,
        6187
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "5402": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6157,
        6187
      ],
      "op": "MUL",
      "path": "2"
    },
    "5403": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6157,
        6187
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5404": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6157,
        6187
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5405": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6157,
        6187
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5406": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6157,
        6187
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "5409": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6157,
        6187
      ],
      "op": "EXP",
      "path": "2"
    },
    "5410": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6157,
        6187
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5411": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6157,
        6187
      ],
      "op": "DIV",
      "path": "2"
    },
    "5412": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6157,
        6187
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "5415": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6157,
        6187
      ],
      "op": "AND",
      "path": "2"
    },
    "5416": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6157,
        6208
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "5419": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6157,
        6208
      ],
      "op": "AND",
      "path": "2"
    },
    "5420": {
      "branch": 141,
      "fn": "Governance.getWinningVote",
      "offset": [
        6157,
        6208
      ],
      "op": "SUB",
      "path": "2"
    },
    "5421": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6154,
        6247
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1535"
    },
    "5424": {
      "branch": 141,
      "fn": "Governance.getWinningVote",
      "offset": [
        6154,
        6247
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5425": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6231,
        6232
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 41,
      "value": "0x1"
    },
    "5427": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6227,
        6232
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5428": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6227,
        6232
      ],
      "op": "POP",
      "path": "2"
    },
    "5429": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6154,
        6247
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5430": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5871,
        5874
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 42
    },
    "5431": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5871,
        5874
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x153F"
    },
    "5434": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5871,
        5874
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5435": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5871,
        5874
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3FD0"
    },
    "5438": {
      "fn": "Governance.getWinningVote",
      "jump": "i",
      "offset": [
        5871,
        5874
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5439": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5871,
        5874
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5440": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5871,
        5874
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5441": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5871,
        5874
      ],
      "op": "POP",
      "path": "2"
    },
    "5442": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5871,
        5874
      ],
      "op": "POP",
      "path": "2"
    },
    "5443": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5812,
        6257
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1420"
    },
    "5446": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5812,
        6257
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5447": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5812,
        6257
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5448": {
      "op": "POP"
    },
    "5449": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6274,
        6280
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 43
    },
    "5450": {
      "branch": 142,
      "fn": "Governance.getWinningVote",
      "offset": [
        6274,
        6280
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "5451": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6266,
        6301
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1589"
    },
    "5454": {
      "branch": 142,
      "fn": "Governance.getWinningVote",
      "offset": [
        6266,
        6301
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5455": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6266,
        6301
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5457": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6266,
        6301
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5458": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5462": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5464": {
      "op": "SHL"
    },
    "5465": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6266,
        6301
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5466": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6266,
        6301
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5467": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5469": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6266,
        6301
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "5471": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6266,
        6301
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5472": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6266,
        6301
      ],
      "op": "ADD",
      "path": "2"
    },
    "5473": {
      "op": "MSTORE"
    },
    "5474": {
      "op": "PUSH1",
      "value": "0x10"
    },
    "5476": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5478": {
      "op": "DUP3"
    },
    "5479": {
      "op": "ADD"
    },
    "5480": {
      "op": "MSTORE"
    },
    "5481": {
      "op": "PUSH16",
      "value": "0x3A3432B932903BB0B99030903A34B297"
    },
    "5498": {
      "op": "PUSH1",
      "value": "0x81"
    },
    "5500": {
      "op": "SHL"
    },
    "5501": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5503": {
      "op": "DUP3"
    },
    "5504": {
      "op": "ADD"
    },
    "5505": {
      "op": "MSTORE"
    },
    "5506": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5508": {
      "op": "ADD"
    },
    "5509": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6266,
        6301
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE54"
    },
    "5512": {
      "op": "JUMP"
    },
    "5513": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6266,
        6301
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5514": {
      "op": "POP"
    },
    "5515": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6318,
        6329
      ],
      "op": "SWAP1",
      "path": "2",
      "statement": 44
    },
    "5516": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6318,
        6329
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "5517": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5367,
        6336
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "5518": {
      "op": "POP"
    },
    "5519": {
      "op": "POP"
    },
    "5520": {
      "op": "POP"
    },
    "5521": {
      "fn": "Governance.getWinningVote",
      "jump": "o",
      "offset": [
        5367,
        6336
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5522": {
      "fn": "Governance.vote",
      "offset": [
        12353,
        13017
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5523": {
      "offset": [
        23341,
        23372
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5525": {
      "fn": "Governance.vote",
      "offset": [
        23341,
        23372
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5526": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5530": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5532": {
      "op": "SHL"
    },
    "5533": {
      "offset": [
        23341,
        23372
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5534": {
      "fn": "Governance.vote",
      "offset": [
        23341,
        23372
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5535": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5537": {
      "offset": [
        23341,
        23372
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "5539": {
      "fn": "Governance.vote",
      "offset": [
        23341,
        23372
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5540": {
      "fn": "Governance.vote",
      "offset": [
        23341,
        23372
      ],
      "op": "ADD",
      "path": "2"
    },
    "5541": {
      "op": "MSTORE"
    },
    "5542": {
      "op": "PUSH1",
      "value": "0xE"
    },
    "5544": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5546": {
      "op": "DUP3"
    },
    "5547": {
      "op": "ADD"
    },
    "5548": {
      "op": "MSTORE"
    },
    "5549": {
      "op": "PUSH14",
      "value": "0x26BAB9BA1031329036B2B6B132B9"
    },
    "5564": {
      "op": "PUSH1",
      "value": "0x91"
    },
    "5566": {
      "op": "SHL"
    },
    "5567": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5569": {
      "op": "DUP3"
    },
    "5570": {
      "op": "ADD"
    },
    "5571": {
      "op": "MSTORE"
    },
    "5572": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5574": {
      "op": "ADD"
    },
    "5575": {
      "offset": [
        23341,
        23372
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE54"
    },
    "5578": {
      "op": "JUMP"
    },
    "5579": {
      "offset": [
        2840,
        2878
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5580": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA"
    },
    "5582": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5584": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5585": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5587": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5588": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5589": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5590": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5592": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5593": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "5594": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5595": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5596": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5597": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5598": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x15E6"
    },
    "5601": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5602": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3C5E"
    },
    "5605": {
      "fn": "Governance.vote",
      "jump": "i",
      "offset": [
        2840,
        2878
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5606": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5607": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5608": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "5610": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "ADD",
      "path": "2"
    },
    "5611": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5613": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5614": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5615": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "DIV",
      "path": "2"
    },
    "5616": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "MUL",
      "path": "2"
    },
    "5617": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5619": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "ADD",
      "path": "2"
    },
    "5620": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5622": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5623": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5624": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5625": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "ADD",
      "path": "2"
    },
    "5626": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5628": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5629": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5630": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "5631": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5632": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5633": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5634": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5635": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5636": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5638": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "ADD",
      "path": "2"
    },
    "5639": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5640": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5641": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5642": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1612"
    },
    "5645": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5646": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3C5E"
    },
    "5649": {
      "fn": "Governance.vote",
      "jump": "i",
      "offset": [
        2840,
        2878
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5650": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5651": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5652": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "5653": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x165F"
    },
    "5656": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5657": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5658": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "5660": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "LT",
      "path": "2"
    },
    "5661": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1634"
    },
    "5664": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5665": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "5668": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5669": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5670": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5671": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "DIV",
      "path": "2"
    },
    "5672": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "MUL",
      "path": "2"
    },
    "5673": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5674": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5675": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5676": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5678": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "ADD",
      "path": "2"
    },
    "5679": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5680": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x165F"
    },
    "5683": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5684": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5685": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5686": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "ADD",
      "path": "2"
    },
    "5687": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5688": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5689": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5691": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5692": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5694": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5696": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "5697": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5698": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5699": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5700": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5701": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5702": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5703": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5704": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "5706": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "ADD",
      "path": "2"
    },
    "5707": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5708": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5710": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "ADD",
      "path": "2"
    },
    "5711": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5712": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5713": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "GT",
      "path": "2"
    },
    "5714": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1642"
    },
    "5717": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5718": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5719": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5720": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SUB",
      "path": "2"
    },
    "5721": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "5723": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "AND",
      "path": "2"
    },
    "5724": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5725": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "ADD",
      "path": "2"
    },
    "5726": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5727": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5728": {
      "op": "POP"
    },
    "5729": {
      "op": "POP"
    },
    "5730": {
      "op": "POP"
    },
    "5731": {
      "offset": [
        2840,
        2878
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "5733": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "DUP5",
      "path": "2"
    },
    "5734": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "ADD",
      "path": "2"
    },
    "5735": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5736": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "5738": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "DUP6",
      "path": "2"
    },
    "5739": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "ADD",
      "path": "2"
    },
    "5740": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5741": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "5743": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "DUP7",
      "path": "2"
    },
    "5744": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "ADD",
      "path": "2"
    },
    "5745": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5746": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "5748": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5749": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP7",
      "path": "2"
    },
    "5750": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "ADD",
      "path": "2"
    },
    "5751": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5752": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "5753": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "5754": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "5760": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "5761": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5762": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "AND",
      "path": "2"
    },
    "5763": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "5764": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5765": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "5766": {
      "op": "POP"
    },
    "5767": {
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "5768": {
      "op": "POP"
    },
    "5769": {
      "offset": [
        2840,
        2878
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "5771": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5772": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "AND",
      "path": "2"
    },
    "5773": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5774": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "PUSH3",
      "path": "2",
      "value": "0xFFFFFF"
    },
    "5778": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "5781": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5782": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "DIV",
      "path": "2"
    },
    "5783": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "AND",
      "path": "2"
    },
    "5784": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5785": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5787": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5789": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "5791": {
      "op": "SHL"
    },
    "5792": {
      "op": "SUB"
    },
    "5793": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5795": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5797": {
      "op": "SHL"
    },
    "5798": {
      "offset": [
        2840,
        2878
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5799": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "DIV",
      "path": "2"
    },
    "5800": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "AND",
      "path": "2"
    },
    "5801": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5802": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "5805": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5807": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "5809": {
      "op": "SHL"
    },
    "5810": {
      "offset": [
        2840,
        2878
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5811": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "DIV",
      "path": "2"
    },
    "5812": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5813": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "AND",
      "path": "2"
    },
    "5814": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "5815": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5817": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5819": {
      "op": "SHL"
    },
    "5820": {
      "offset": [
        2840,
        2878
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5821": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "DIV",
      "path": "2"
    },
    "5822": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5823": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5824": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "AND",
      "path": "2"
    },
    "5825": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5826": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5828": {
      "op": "PUSH1",
      "value": "0x90"
    },
    "5830": {
      "op": "SHL"
    },
    "5831": {
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5832": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5833": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "DIV",
      "path": "2"
    },
    "5834": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "AND",
      "path": "2"
    },
    "5835": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "DUP11",
      "path": "2"
    },
    "5836": {
      "fn": "Governance.vote",
      "jump": "o",
      "offset": [
        2840,
        2878
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5837": {
      "fn": "Governance.getTaskById",
      "offset": [
        4854,
        4966
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5838": {
      "fn": "Governance.getTaskById",
      "offset": [
        4915,
        4926
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x16D5"
    },
    "5841": {
      "fn": "Governance.getTaskById",
      "offset": [
        4915,
        4926
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3379"
    },
    "5844": {
      "fn": "Governance.getTaskById",
      "jump": "i",
      "offset": [
        4915,
        4926
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5845": {
      "fn": "Governance.getTaskById",
      "offset": [
        4915,
        4926
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5846": {
      "fn": "Governance.getTaskById",
      "offset": [
        4945,
        4959
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 45,
      "value": "0x0"
    },
    "5848": {
      "fn": "Governance.getTaskById",
      "offset": [
        4945,
        4959
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5849": {
      "fn": "Governance.getTaskById",
      "offset": [
        4945,
        4959
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5850": {
      "fn": "Governance.getTaskById",
      "offset": [
        4945,
        4959
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5851": {
      "fn": "Governance.getTaskById",
      "offset": [
        4945,
        4950
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA"
    },
    "5853": {
      "fn": "Governance.getTaskById",
      "offset": [
        4945,
        4959
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5855": {
      "fn": "Governance.getTaskById",
      "offset": [
        4945,
        4959
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5856": {
      "fn": "Governance.getTaskById",
      "offset": [
        4945,
        4959
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5858": {
      "fn": "Governance.getTaskById",
      "offset": [
        4945,
        4959
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5859": {
      "fn": "Governance.getTaskById",
      "offset": [
        4945,
        4959
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5860": {
      "fn": "Governance.getTaskById",
      "offset": [
        4945,
        4959
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5861": {
      "fn": "Governance.getTaskById",
      "offset": [
        4945,
        4959
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "5862": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5863": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5864": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x140"
    },
    "5867": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5868": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "ADD",
      "path": "2"
    },
    "5869": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5870": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "5871": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5872": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5873": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5874": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5875": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5876": {
      "fn": "Governance.getTaskById",
      "offset": [
        4945,
        4959
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5877": {
      "fn": "Governance.getTaskById",
      "offset": [
        4945,
        4959
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5878": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x16FE"
    },
    "5881": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5882": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3C5E"
    },
    "5885": {
      "fn": "Governance.getTaskById",
      "jump": "i",
      "offset": [
        4938,
        4959
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5886": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5887": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5888": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "5890": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "ADD",
      "path": "2"
    },
    "5891": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5893": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5894": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5895": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "DIV",
      "path": "2"
    },
    "5896": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "MUL",
      "path": "2"
    },
    "5897": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5899": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "ADD",
      "path": "2"
    },
    "5900": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5902": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5903": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5904": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5905": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "ADD",
      "path": "2"
    },
    "5906": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5908": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5909": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5910": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "5911": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5912": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5913": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5914": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5915": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5916": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5918": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "ADD",
      "path": "2"
    },
    "5919": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5920": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5921": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5922": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x172A"
    },
    "5925": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5926": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3C5E"
    },
    "5929": {
      "fn": "Governance.getTaskById",
      "jump": "i",
      "offset": [
        4938,
        4959
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5930": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5931": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5932": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "5933": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1777"
    },
    "5936": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5937": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5938": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "5940": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "LT",
      "path": "2"
    },
    "5941": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x174C"
    },
    "5944": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5945": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "5948": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5949": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5950": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5951": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "DIV",
      "path": "2"
    },
    "5952": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "MUL",
      "path": "2"
    },
    "5953": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5954": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5955": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5956": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5958": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "ADD",
      "path": "2"
    },
    "5959": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5960": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1777"
    },
    "5963": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5964": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5965": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5966": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "ADD",
      "path": "2"
    },
    "5967": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5968": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5969": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5971": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5972": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5974": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5976": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "5977": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5978": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5979": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5980": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5981": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5982": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5983": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5984": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "5986": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "ADD",
      "path": "2"
    },
    "5987": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5988": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5990": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "ADD",
      "path": "2"
    },
    "5991": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5992": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5993": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "GT",
      "path": "2"
    },
    "5994": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x175A"
    },
    "5997": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5998": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5999": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6000": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "SUB",
      "path": "2"
    },
    "6001": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "6003": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "AND",
      "path": "2"
    },
    "6004": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6005": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "ADD",
      "path": "2"
    },
    "6006": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6007": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6008": {
      "op": "POP"
    },
    "6009": {
      "op": "POP"
    },
    "6010": {
      "op": "POP"
    },
    "6011": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6012": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6013": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6014": {
      "op": "POP"
    },
    "6015": {
      "op": "POP"
    },
    "6016": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "6018": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6019": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "ADD",
      "path": "2"
    },
    "6020": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6021": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "6027": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6028": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6029": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "AND",
      "path": "2"
    },
    "6030": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6032": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6033": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "ADD",
      "path": "2"
    },
    "6034": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6035": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "6037": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6038": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "ADD",
      "path": "2"
    },
    "6039": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6040": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6042": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6043": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "ADD",
      "path": "2"
    },
    "6044": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6045": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "6047": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6048": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "ADD",
      "path": "2"
    },
    "6049": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6050": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "6052": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6053": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "ADD",
      "path": "2"
    },
    "6054": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6055": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "6057": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6058": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "6059": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "ADD",
      "path": "2"
    },
    "6060": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6061": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "6063": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6064": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "AND",
      "path": "2"
    },
    "6065": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x80"
    },
    "6067": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6068": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "ADD",
      "path": "2"
    },
    "6069": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6070": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "6073": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6074": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6075": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "DIV",
      "path": "2"
    },
    "6076": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "PUSH3",
      "path": "2",
      "value": "0xFFFFFF"
    },
    "6080": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "AND",
      "path": "2"
    },
    "6081": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA0"
    },
    "6083": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "DUP5",
      "path": "2"
    },
    "6084": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "ADD",
      "path": "2"
    },
    "6085": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6086": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6088": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6090": {
      "op": "SHL"
    },
    "6091": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6092": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "DIV",
      "path": "2"
    },
    "6093": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6095": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6097": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "6099": {
      "op": "SHL"
    },
    "6100": {
      "op": "SUB"
    },
    "6101": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "AND",
      "path": "2"
    },
    "6102": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xC0"
    },
    "6104": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "DUP5",
      "path": "2"
    },
    "6105": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "ADD",
      "path": "2"
    },
    "6106": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6107": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6109": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "6111": {
      "op": "SHL"
    },
    "6112": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6113": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "DIV",
      "path": "2"
    },
    "6114": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "6117": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6118": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6119": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "AND",
      "path": "2"
    },
    "6120": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE0"
    },
    "6122": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "DUP6",
      "path": "2"
    },
    "6123": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "ADD",
      "path": "2"
    },
    "6124": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6125": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6127": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6129": {
      "op": "SHL"
    },
    "6130": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6131": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "DIV",
      "path": "2"
    },
    "6132": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "AND",
      "path": "2"
    },
    "6133": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6134": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6135": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "ADD",
      "path": "2"
    },
    "6136": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6137": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6139": {
      "op": "PUSH1",
      "value": "0x90"
    },
    "6141": {
      "op": "SHL"
    },
    "6142": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6143": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "DIV",
      "path": "2"
    },
    "6144": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6145": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6146": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "AND",
      "path": "2"
    },
    "6147": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x120"
    },
    "6150": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6151": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6152": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "ADD",
      "path": "2"
    },
    "6153": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6154": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "6155": {
      "fn": "Governance.getTaskById",
      "offset": [
        4938,
        4959
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6156": {
      "op": "POP"
    },
    "6157": {
      "op": "POP"
    },
    "6158": {
      "fn": "Governance.getTaskById",
      "jump": "o",
      "offset": [
        4854,
        4966
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6159": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8763,
        10263
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6160": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8834,
        8849
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "6162": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8861,
        8874
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6164": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8861,
        8874
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6165": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8884,
        9428
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6166": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8904,
        8913
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "6168": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8904,
        8920
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6169": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8901,
        8920
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6170": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8901,
        8920
      ],
      "op": "LT",
      "path": "2"
    },
    "6171": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8884,
        9428
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "6172": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8884,
        9428
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1927"
    },
    "6175": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8884,
        9428
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6176": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8986,
        9001
      ],
      "op": "TIMESTAMP",
      "path": "2"
    },
    "6177": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8939,
        8948
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "6179": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8949,
        8950
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6180": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8939,
        8951
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6181": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8939,
        8951
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6182": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8939,
        8951
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6183": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8939,
        8951
      ],
      "op": "LT",
      "path": "2"
    },
    "6184": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8939,
        8951
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1833"
    },
    "6187": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8939,
        8951
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6188": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8939,
        8951
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1833"
    },
    "6191": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8939,
        8951
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3C98"
    },
    "6194": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        8939,
        8951
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6195": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8939,
        8951
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6196": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8939,
        8951
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6198": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8939,
        8951
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6199": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8939,
        8951
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6200": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8939,
        8951
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6201": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8939,
        8951
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6203": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8939,
        8951
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6204": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8939,
        8951
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6205": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8939,
        8951
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "6206": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8939,
        8983
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "6212": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8939,
        8983
      ],
      "op": "DUP10",
      "path": "2"
    },
    "6213": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8939,
        8983
      ],
      "op": "AND",
      "path": "2"
    },
    "6214": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8939,
        8983
      ],
      "op": "DUP5",
      "path": "2"
    },
    "6215": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8939,
        8983
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6216": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8939,
        8951
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "6218": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8939,
        8951
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6219": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8939,
        8951
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "6220": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8939,
        8951
      ],
      "op": "MUL",
      "path": "2"
    },
    "6221": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8939,
        8951
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6222": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8939,
        8951
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6223": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8939,
        8951
      ],
      "op": "ADD",
      "path": "2"
    },
    "6224": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8939,
        8983
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6225": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8939,
        8983
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6226": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8939,
        8983
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6228": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8939,
        8983
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6229": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8939,
        8983
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "6230": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8939,
        8983
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6231": {
      "branch": 143,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8939,
        9001
      ],
      "op": "LT",
      "path": "2"
    },
    "6232": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8939,
        9061
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6233": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8939,
        9061
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "6234": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8939,
        9061
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1897"
    },
    "6237": {
      "branch": 143,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8939,
        9061
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6238": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8939,
        9061
      ],
      "op": "POP",
      "path": "2"
    },
    "6239": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9046,
        9061
      ],
      "op": "TIMESTAMP",
      "path": "2"
    },
    "6240": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9017,
        9026
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "6242": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9027,
        9028
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6243": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9017,
        9029
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6244": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9017,
        9029
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6245": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9017,
        9029
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6246": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9017,
        9029
      ],
      "op": "LT",
      "path": "2"
    },
    "6247": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9017,
        9029
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1872"
    },
    "6250": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9017,
        9029
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6251": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9017,
        9029
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1872"
    },
    "6254": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9017,
        9029
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3C98"
    },
    "6257": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        9017,
        9029
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6258": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9017,
        9029
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6259": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9017,
        9029
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6261": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9017,
        9029
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6262": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9017,
        9029
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6263": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9017,
        9029
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6264": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9017,
        9029
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6266": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9017,
        9029
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6267": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9017,
        9029
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6268": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9017,
        9029
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "6269": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9017,
        9029
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "6271": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9017,
        9029
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6272": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9017,
        9029
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6273": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9017,
        9029
      ],
      "op": "MUL",
      "path": "2"
    },
    "6274": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9017,
        9029
      ],
      "op": "ADD",
      "path": "2"
    },
    "6275": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9017,
        9042
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "6277": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9017,
        9042
      ],
      "op": "ADD",
      "path": "2"
    },
    "6278": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9017,
        9042
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6279": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6281": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "6283": {
      "op": "SHL"
    },
    "6284": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9017,
        9042
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6285": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9017,
        9042
      ],
      "op": "DIV",
      "path": "2"
    },
    "6286": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9017,
        9042
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "6292": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9017,
        9042
      ],
      "op": "AND",
      "path": "2"
    },
    "6293": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9017,
        9061
      ],
      "op": "GT",
      "path": "2"
    },
    "6294": {
      "branch": 144,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9017,
        9061
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "6295": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8939,
        9061
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6296": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8939,
        9108
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6297": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8939,
        9108
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "6298": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8939,
        9108
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x18D6"
    },
    "6301": {
      "branch": 144,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8939,
        9108
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6302": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8939,
        9108
      ],
      "op": "POP",
      "path": "2"
    },
    "6303": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9093,
        9108
      ],
      "op": "TIMESTAMP",
      "path": "2"
    },
    "6304": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9065,
        9074
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "6306": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9075,
        9076
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6307": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9065,
        9077
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6308": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9065,
        9077
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6309": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9065,
        9077
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6310": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9065,
        9077
      ],
      "op": "LT",
      "path": "2"
    },
    "6311": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9065,
        9077
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x18B2"
    },
    "6314": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9065,
        9077
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6315": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9065,
        9077
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x18B2"
    },
    "6318": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9065,
        9077
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3C98"
    },
    "6321": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        9065,
        9077
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6322": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9065,
        9077
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6323": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9065,
        9077
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6325": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9065,
        9077
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6326": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9065,
        9077
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6327": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9065,
        9077
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6328": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9065,
        9077
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6330": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9065,
        9077
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6331": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9065,
        9077
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6332": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9065,
        9077
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "6333": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9065,
        9077
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "6335": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9065,
        9077
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6336": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9065,
        9077
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6337": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9065,
        9077
      ],
      "op": "MUL",
      "path": "2"
    },
    "6338": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9065,
        9077
      ],
      "op": "ADD",
      "path": "2"
    },
    "6339": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9065,
        9090
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "6341": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9065,
        9090
      ],
      "op": "ADD",
      "path": "2"
    },
    "6342": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9065,
        9090
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6343": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6345": {
      "op": "PUSH1",
      "value": "0x78"
    },
    "6347": {
      "op": "SHL"
    },
    "6348": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9065,
        9090
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6349": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9065,
        9090
      ],
      "op": "DIV",
      "path": "2"
    },
    "6350": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9065,
        9090
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "6356": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9065,
        9090
      ],
      "op": "AND",
      "path": "2"
    },
    "6357": {
      "branch": 145,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9065,
        9108
      ],
      "op": "GT",
      "path": "2"
    },
    "6358": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8939,
        9108
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6359": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8939,
        9155
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6360": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8939,
        9155
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "6361": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8939,
        9155
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1913"
    },
    "6364": {
      "branch": 145,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8939,
        9155
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6365": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8939,
        9155
      ],
      "op": "POP",
      "path": "2"
    },
    "6366": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9154,
        9155
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "6368": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9124,
        9133
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "6370": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9134,
        9135
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6371": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9124,
        9136
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6372": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9124,
        9136
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6373": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9124,
        9136
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6374": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9124,
        9136
      ],
      "op": "LT",
      "path": "2"
    },
    "6375": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9124,
        9136
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x18F2"
    },
    "6378": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9124,
        9136
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6379": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9124,
        9136
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x18F2"
    },
    "6382": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9124,
        9136
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3C98"
    },
    "6385": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        9124,
        9136
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6386": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9124,
        9136
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6387": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9124,
        9136
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6389": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9124,
        9136
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6390": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9124,
        9136
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6391": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9124,
        9136
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6392": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9124,
        9136
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6394": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9124,
        9136
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6395": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9124,
        9136
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6396": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9124,
        9136
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "6397": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9124,
        9136
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "6399": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9124,
        9136
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6400": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9124,
        9136
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6401": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9124,
        9136
      ],
      "op": "MUL",
      "path": "2"
    },
    "6402": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9124,
        9136
      ],
      "op": "ADD",
      "path": "2"
    },
    "6403": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9124,
        9151
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "6405": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9124,
        9151
      ],
      "op": "ADD",
      "path": "2"
    },
    "6406": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9124,
        9151
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6407": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6409": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6411": {
      "op": "SHL"
    },
    "6412": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9124,
        9151
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6413": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9124,
        9151
      ],
      "op": "DIV",
      "path": "2"
    },
    "6414": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9124,
        9151
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "6417": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9124,
        9151
      ],
      "op": "AND",
      "path": "2"
    },
    "6418": {
      "branch": 146,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9124,
        9155
      ],
      "op": "GT",
      "path": "2"
    },
    "6419": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8939,
        9155
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6420": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8936,
        9221
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "6421": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8936,
        9221
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x191F"
    },
    "6424": {
      "branch": 146,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8936,
        9221
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6425": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9198,
        9205
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 46
    },
    "6426": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9198,
        9205
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "6428": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9198,
        9205
      ],
      "op": "ADD",
      "path": "2"
    },
    "6429": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9198,
        9205
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6430": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9198,
        9205
      ],
      "op": "POP",
      "path": "2"
    },
    "6431": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8936,
        9221
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6432": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9413,
        9416
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 47,
      "value": "0x1"
    },
    "6434": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9413,
        9416
      ],
      "op": "ADD",
      "path": "2"
    },
    "6435": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8884,
        9428
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1815"
    },
    "6438": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8884,
        9428
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6439": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8884,
        9428
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6440": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8884,
        9428
      ],
      "op": "POP",
      "path": "2"
    },
    "6441": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9485,
        9490
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6442": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9492,
        9493
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6444": {
      "branch": 147,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9485,
        9493
      ],
      "op": "SUB",
      "path": "2"
    },
    "6445": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9481,
        9620
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1993"
    },
    "6448": {
      "branch": 147,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9481,
        9620
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6449": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9535,
        9550
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6451": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9535,
        9550
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6452": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9535,
        9550
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6453": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9548,
        9549
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "6455": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9535,
        9550
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6456": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9535,
        9550
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6457": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9535,
        9550
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6458": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9535,
        9550
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6459": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9535,
        9550
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6460": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9535,
        9550
      ],
      "op": "ADD",
      "path": "2"
    },
    "6461": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9535,
        9550
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6462": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9535,
        9550
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "6463": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9535,
        9550
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6464": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9509,
        9533
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6466": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9509,
        9533
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6467": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9535,
        9550
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6468": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9535,
        9550
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6470": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9535,
        9550
      ],
      "op": "ADD",
      "path": "2"
    },
    "6471": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9535,
        9550
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6472": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9535,
        9550
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "6474": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9535,
        9550
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6475": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9535,
        9550
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6476": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9535,
        9550
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6478": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9535,
        9550
      ],
      "op": "ADD",
      "path": "2"
    },
    "6479": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9535,
        9550
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6480": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9535,
        9550
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "6482": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9535,
        9550
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6483": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9535,
        9550
      ],
      "op": "SUB",
      "path": "2"
    },
    "6484": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9535,
        9550
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6485": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9535,
        9550
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6486": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9535,
        9550
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1947"
    },
    "6489": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9535,
        9550
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6490": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9535,
        9550
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6491": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9535,
        9550
      ],
      "op": "POP",
      "path": "2"
    },
    "6492": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9535,
        9550
      ],
      "op": "POP",
      "path": "2"
    },
    "6493": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9509,
        9550
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6494": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9509,
        9550
      ],
      "op": "POP",
      "path": "2"
    },
    "6495": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9564,
        9580
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 48,
      "value": "0x40"
    },
    "6497": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9564,
        9580
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6498": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9564,
        9580
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6499": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9564,
        9580
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6501": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9564,
        9580
      ],
      "op": "ADD",
      "path": "2"
    },
    "6502": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9564,
        9580
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6504": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9564,
        9580
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6505": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9564,
        9580
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6506": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9564,
        9580
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6508": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9564,
        9580
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6509": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9564,
        9580
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6510": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9564,
        9580
      ],
      "op": "POP",
      "path": "2"
    },
    "6511": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9564,
        9572
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6512": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9573,
        9574
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6514": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9564,
        9575
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6515": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9564,
        9575
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6516": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9564,
        9575
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6517": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9564,
        9575
      ],
      "op": "LT",
      "path": "2"
    },
    "6518": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9564,
        9575
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1981"
    },
    "6521": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9564,
        9575
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6522": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9564,
        9575
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1981"
    },
    "6525": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9564,
        9575
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3C98"
    },
    "6528": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        9564,
        9575
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6529": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9564,
        9575
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6530": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9564,
        9575
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6532": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9564,
        9575
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6533": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9564,
        9575
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6534": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9564,
        9575
      ],
      "op": "MUL",
      "path": "2"
    },
    "6535": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9564,
        9575
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6536": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9564,
        9575
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6537": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9564,
        9575
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6538": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9564,
        9575
      ],
      "op": "ADD",
      "path": "2"
    },
    "6539": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9564,
        9575
      ],
      "op": "ADD",
      "path": "2"
    },
    "6540": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9564,
        9580
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6541": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9601,
        9609
      ],
      "op": "SWAP4",
      "path": "2",
      "statement": 49
    },
    "6542": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8763,
        10263
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "6543": {
      "op": "POP"
    },
    "6544": {
      "op": "POP"
    },
    "6545": {
      "op": "POP"
    },
    "6546": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "o",
      "offset": [
        8763,
        10263
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6547": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9481,
        9620
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6548": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9630,
        9653
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6550": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9669,
        9674
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6551": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6553": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6555": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6557": {
      "op": "SHL"
    },
    "6558": {
      "op": "SUB"
    },
    "6559": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9656,
        9675
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6560": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9656,
        9675
      ],
      "op": "GT",
      "path": "2"
    },
    "6561": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9656,
        9675
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "6562": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9656,
        9675
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x19AD"
    },
    "6565": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9656,
        9675
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6566": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9656,
        9675
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x19AD"
    },
    "6569": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9656,
        9675
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x34CC"
    },
    "6572": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        9656,
        9675
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6573": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9656,
        9675
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6574": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9656,
        9675
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6576": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9656,
        9675
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6577": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9656,
        9675
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6578": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9656,
        9675
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6579": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9656,
        9675
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6580": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9656,
        9675
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6581": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9656,
        9675
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6582": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9656,
        9675
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6584": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9656,
        9675
      ],
      "op": "MUL",
      "path": "2"
    },
    "6585": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9656,
        9675
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6587": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9656,
        9675
      ],
      "op": "ADD",
      "path": "2"
    },
    "6588": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9656,
        9675
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6589": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9656,
        9675
      ],
      "op": "ADD",
      "path": "2"
    },
    "6590": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9656,
        9675
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6592": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9656,
        9675
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6593": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9656,
        9675
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6594": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9656,
        9675
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "6595": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9656,
        9675
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x19E0"
    },
    "6598": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9656,
        9675
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6599": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9656,
        9675
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6600": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9656,
        9675
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6602": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9656,
        9675
      ],
      "op": "ADD",
      "path": "2"
    },
    "6603": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9656,
        9675
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6604": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9656,
        9675
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "6606": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9656,
        9675
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6607": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9656,
        9675
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6608": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9656,
        9675
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6610": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9656,
        9675
      ],
      "op": "ADD",
      "path": "2"
    },
    "6611": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9656,
        9675
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6612": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9656,
        9675
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "6614": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9656,
        9675
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6615": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9656,
        9675
      ],
      "op": "SUB",
      "path": "2"
    },
    "6616": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9656,
        9675
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6617": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9656,
        9675
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6618": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9656,
        9675
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x19CB"
    },
    "6621": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9656,
        9675
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6622": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9656,
        9675
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6623": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9656,
        9675
      ],
      "op": "POP",
      "path": "2"
    },
    "6624": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9656,
        9675
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6625": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9656,
        9675
      ],
      "op": "POP",
      "path": "2"
    },
    "6626": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9630,
        9675
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6627": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9630,
        9675
      ],
      "op": "POP",
      "path": "2"
    },
    "6628": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9685,
        9700
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6630": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9718,
        9727
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6631": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9714,
        10233
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6632": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9734,
        9743
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "6634": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9734,
        9750
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6635": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9731,
        9750
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6636": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9731,
        9750
      ],
      "op": "LT",
      "path": "2"
    },
    "6637": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9714,
        10233
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "6638": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9714,
        10233
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1BCB"
    },
    "6641": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9714,
        10233
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6642": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9816,
        9831
      ],
      "op": "TIMESTAMP",
      "path": "2"
    },
    "6643": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9769,
        9778
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "6645": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9779,
        9780
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6646": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9769,
        9781
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6647": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9769,
        9781
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6648": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9769,
        9781
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6649": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9769,
        9781
      ],
      "op": "LT",
      "path": "2"
    },
    "6650": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9769,
        9781
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A05"
    },
    "6653": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9769,
        9781
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6654": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9769,
        9781
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A05"
    },
    "6657": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9769,
        9781
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3C98"
    },
    "6660": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        9769,
        9781
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6661": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9769,
        9781
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6662": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9769,
        9781
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6664": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9769,
        9781
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6665": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9769,
        9781
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6666": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9769,
        9781
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6667": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9769,
        9781
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6669": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9769,
        9781
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6670": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9769,
        9781
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6671": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9769,
        9781
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "6672": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9769,
        9813
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "6678": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9769,
        9813
      ],
      "op": "DUP12",
      "path": "2"
    },
    "6679": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9769,
        9813
      ],
      "op": "AND",
      "path": "2"
    },
    "6680": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9769,
        9813
      ],
      "op": "DUP5",
      "path": "2"
    },
    "6681": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9769,
        9813
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6682": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9769,
        9781
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "6684": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9769,
        9781
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6685": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9769,
        9781
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "6686": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9769,
        9781
      ],
      "op": "MUL",
      "path": "2"
    },
    "6687": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9769,
        9781
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6688": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9769,
        9781
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6689": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9769,
        9781
      ],
      "op": "ADD",
      "path": "2"
    },
    "6690": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9769,
        9813
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6691": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9769,
        9813
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6692": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9769,
        9813
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6694": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9769,
        9813
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6695": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9769,
        9813
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "6696": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9769,
        9813
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6697": {
      "branch": 148,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9769,
        9831
      ],
      "op": "LT",
      "path": "2"
    },
    "6698": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9769,
        9891
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6699": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9769,
        9891
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "6700": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9769,
        9891
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A69"
    },
    "6703": {
      "branch": 148,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9769,
        9891
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6704": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9769,
        9891
      ],
      "op": "POP",
      "path": "2"
    },
    "6705": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9876,
        9891
      ],
      "op": "TIMESTAMP",
      "path": "2"
    },
    "6706": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9847,
        9856
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "6708": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9857,
        9858
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6709": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9847,
        9859
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6710": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9847,
        9859
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6711": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9847,
        9859
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6712": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9847,
        9859
      ],
      "op": "LT",
      "path": "2"
    },
    "6713": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9847,
        9859
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A44"
    },
    "6716": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9847,
        9859
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6717": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9847,
        9859
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A44"
    },
    "6720": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9847,
        9859
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3C98"
    },
    "6723": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        9847,
        9859
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6724": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9847,
        9859
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6725": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9847,
        9859
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6727": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9847,
        9859
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6728": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9847,
        9859
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6729": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9847,
        9859
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6730": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9847,
        9859
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6732": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9847,
        9859
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6733": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9847,
        9859
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6734": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9847,
        9859
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "6735": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9847,
        9859
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "6737": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9847,
        9859
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6738": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9847,
        9859
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6739": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9847,
        9859
      ],
      "op": "MUL",
      "path": "2"
    },
    "6740": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9847,
        9859
      ],
      "op": "ADD",
      "path": "2"
    },
    "6741": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9847,
        9872
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "6743": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9847,
        9872
      ],
      "op": "ADD",
      "path": "2"
    },
    "6744": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9847,
        9872
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6745": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6747": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "6749": {
      "op": "SHL"
    },
    "6750": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9847,
        9872
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6751": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9847,
        9872
      ],
      "op": "DIV",
      "path": "2"
    },
    "6752": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9847,
        9872
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "6758": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9847,
        9872
      ],
      "op": "AND",
      "path": "2"
    },
    "6759": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9847,
        9891
      ],
      "op": "GT",
      "path": "2"
    },
    "6760": {
      "branch": 149,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9847,
        9891
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "6761": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9769,
        9891
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6762": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9769,
        9938
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6763": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9769,
        9938
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "6764": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9769,
        9938
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1AA8"
    },
    "6767": {
      "branch": 149,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9769,
        9938
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6768": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9769,
        9938
      ],
      "op": "POP",
      "path": "2"
    },
    "6769": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9923,
        9938
      ],
      "op": "TIMESTAMP",
      "path": "2"
    },
    "6770": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9895,
        9904
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "6772": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9905,
        9906
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6773": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9895,
        9907
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6774": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9895,
        9907
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6775": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9895,
        9907
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6776": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9895,
        9907
      ],
      "op": "LT",
      "path": "2"
    },
    "6777": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9895,
        9907
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A84"
    },
    "6780": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9895,
        9907
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6781": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9895,
        9907
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A84"
    },
    "6784": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9895,
        9907
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3C98"
    },
    "6787": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        9895,
        9907
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6788": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9895,
        9907
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6789": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9895,
        9907
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6791": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9895,
        9907
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6792": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9895,
        9907
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6793": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9895,
        9907
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6794": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9895,
        9907
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6796": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9895,
        9907
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6797": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9895,
        9907
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6798": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9895,
        9907
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "6799": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9895,
        9907
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "6801": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9895,
        9907
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6802": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9895,
        9907
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6803": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9895,
        9907
      ],
      "op": "MUL",
      "path": "2"
    },
    "6804": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9895,
        9907
      ],
      "op": "ADD",
      "path": "2"
    },
    "6805": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9895,
        9920
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "6807": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9895,
        9920
      ],
      "op": "ADD",
      "path": "2"
    },
    "6808": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9895,
        9920
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6809": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6811": {
      "op": "PUSH1",
      "value": "0x78"
    },
    "6813": {
      "op": "SHL"
    },
    "6814": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9895,
        9920
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6815": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9895,
        9920
      ],
      "op": "DIV",
      "path": "2"
    },
    "6816": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9895,
        9920
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "6822": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9895,
        9920
      ],
      "op": "AND",
      "path": "2"
    },
    "6823": {
      "branch": 150,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9895,
        9938
      ],
      "op": "GT",
      "path": "2"
    },
    "6824": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9769,
        9938
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6825": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9769,
        9985
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6826": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9769,
        9985
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "6827": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9769,
        9985
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1AE5"
    },
    "6830": {
      "branch": 150,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9769,
        9985
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6831": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9769,
        9985
      ],
      "op": "POP",
      "path": "2"
    },
    "6832": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9984,
        9985
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "6834": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9954,
        9963
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "6836": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9964,
        9965
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6837": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9954,
        9966
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6838": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9954,
        9966
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6839": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9954,
        9966
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6840": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9954,
        9966
      ],
      "op": "LT",
      "path": "2"
    },
    "6841": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9954,
        9966
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1AC4"
    },
    "6844": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9954,
        9966
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6845": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9954,
        9966
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1AC4"
    },
    "6848": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9954,
        9966
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3C98"
    },
    "6851": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        9954,
        9966
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6852": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9954,
        9966
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6853": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9954,
        9966
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6855": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9954,
        9966
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6856": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9954,
        9966
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6857": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9954,
        9966
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6858": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9954,
        9966
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6860": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9954,
        9966
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6861": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9954,
        9966
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6862": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9954,
        9966
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "6863": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9954,
        9966
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "6865": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9954,
        9966
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6866": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9954,
        9966
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6867": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9954,
        9966
      ],
      "op": "MUL",
      "path": "2"
    },
    "6868": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9954,
        9966
      ],
      "op": "ADD",
      "path": "2"
    },
    "6869": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9954,
        9981
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "6871": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9954,
        9981
      ],
      "op": "ADD",
      "path": "2"
    },
    "6872": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9954,
        9981
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6873": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6875": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6877": {
      "op": "SHL"
    },
    "6878": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9954,
        9981
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6879": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9954,
        9981
      ],
      "op": "DIV",
      "path": "2"
    },
    "6880": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9954,
        9981
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "6883": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9954,
        9981
      ],
      "op": "AND",
      "path": "2"
    },
    "6884": {
      "branch": 151,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9954,
        9985
      ],
      "op": "GT",
      "path": "2"
    },
    "6885": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9769,
        9985
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6886": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9766,
        10195
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "6887": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9766,
        10195
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1BC3"
    },
    "6890": {
      "branch": 151,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9766,
        10195
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6891": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10037,
        10046
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 50,
      "value": "0x5"
    },
    "6893": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10047,
        10048
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6894": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10037,
        10049
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6895": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10037,
        10049
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6896": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10037,
        10049
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6897": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10037,
        10049
      ],
      "op": "LT",
      "path": "2"
    },
    "6898": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10037,
        10049
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1AFD"
    },
    "6901": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10037,
        10049
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6902": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10037,
        10049
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1AFD"
    },
    "6905": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10037,
        10049
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3C98"
    },
    "6908": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        10037,
        10049
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6909": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10037,
        10049
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6910": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10037,
        10049
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6911": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10037,
        10049
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6913": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10037,
        10049
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6914": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10037,
        10049
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6916": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10037,
        10049
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6918": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10037,
        10049
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "6919": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10037,
        10049
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6920": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10037,
        10049
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "6922": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10037,
        10049
      ],
      "op": "MUL",
      "path": "2"
    },
    "6923": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10037,
        10049
      ],
      "op": "ADD",
      "path": "2"
    },
    "6924": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10037,
        10058
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "6926": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10037,
        10058
      ],
      "op": "ADD",
      "path": "2"
    },
    "6927": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10018,
        10058
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6928": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10018,
        10058
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6929": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10018,
        10058
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1B19"
    },
    "6932": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10018,
        10058
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6933": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10018,
        10058
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3C5E"
    },
    "6936": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        10018,
        10058
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6937": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10018,
        10058
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6938": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10018,
        10058
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6939": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10018,
        10058
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "6941": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10018,
        10058
      ],
      "op": "ADD",
      "path": "2"
    },
    "6942": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10018,
        10058
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6944": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10018,
        10058
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6945": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10018,
        10058
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6946": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10018,
        10058
      ],
      "op": "DIV",
      "path": "2"
    },
    "6947": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10018,
        10058
      ],
      "op": "MUL",
      "path": "2"
    },
    "6948": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10018,
        10058
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6950": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10018,
        10058
      ],
      "op": "ADD",
      "path": "2"
    },
    "6951": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10018,
        10058
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6953": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10018,
        10058
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6954": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10018,
        10058
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6955": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10018,
        10058
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6956": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10018,
        10058
      ],
      "op": "ADD",
      "path": "2"
    },
    "6957": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10018,
        10058
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6959": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10018,
        10058
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6960": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10018,
        10058
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6961": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10018,
        10058
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "6962": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10018,
        10058
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6963": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10018,
        10058
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6964": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10018,
        10058
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6965": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10018,
        10058
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6966": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10018,
        10058
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6967": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10018,
        10058
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6969": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10018,
        10058
      ],
      "op": "ADD",
      "path": "2"
    },
    "6970": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10018,
        10058
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6971": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10018,
        10058
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6972": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10018,
        10058
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6973": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10018,
        10058
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1B45"
    },
    "6976": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10018,
        10058
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6977": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10018,
        10058
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3C5E"
    },
    "6980": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        10018,
        10058
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6981": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10018,
        10058
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6982": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10018,
        10058
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6983": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10018,
        10058
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "6984": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10018,
        10058
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1B92"
    },
    "6987": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10018,
        10058
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6988": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10018,
        10058
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6989": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10018,
        10058
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "6991": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10018,
        10058
      ],
      "op": "LT",
      "path": "2"
    },
    "6992": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10018,
        10058
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1B67"
    },
    "6995": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10018,
        10058
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6996": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10018,
        10058
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "6999": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10018,
        10058
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7000": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10018,
        10058
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7001": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10018,
        10058
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7002": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10018,
        10058
      ],
      "op": "DIV",
      "path": "2"
    },
    "7003": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10018,
        10058
      ],
      "op": "MUL",
      "path": "2"
    },
    "7004": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10018,
        10058
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7005": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10018,
        10058
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7006": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10018,
        10058
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7007": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10018,
        10058
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7009": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10018,
        10058
      ],
      "op": "ADD",
      "path": "2"
    },
    "7010": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10018,
        10058
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7011": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10018,
        10058
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1B92"
    },
    "7014": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10018,
        10058
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7015": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10018,
        10058
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7016": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10018,
        10058
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7017": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10018,
        10058
      ],
      "op": "ADD",
      "path": "2"
    },
    "7018": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10018,
        10058
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7019": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10018,
        10058
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7020": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10018,
        10058
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7022": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10018,
        10058
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7023": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10018,
        10058
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7025": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10018,
        10058
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7027": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10018,
        10058
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "7028": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10018,
        10058
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7029": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10018,
        10058
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7030": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10018,
        10058
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7031": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10018,
        10058
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7032": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10018,
        10058
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7033": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10018,
        10058
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7034": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10018,
        10058
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7035": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10018,
        10058
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "7037": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10018,
        10058
      ],
      "op": "ADD",
      "path": "2"
    },
    "7038": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10018,
        10058
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7039": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10018,
        10058
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7041": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10018,
        10058
      ],
      "op": "ADD",
      "path": "2"
    },
    "7042": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10018,
        10058
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7043": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10018,
        10058
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7044": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10018,
        10058
      ],
      "op": "GT",
      "path": "2"
    },
    "7045": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10018,
        10058
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1B75"
    },
    "7048": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10018,
        10058
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7049": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10018,
        10058
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7050": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10018,
        10058
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7051": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10018,
        10058
      ],
      "op": "SUB",
      "path": "2"
    },
    "7052": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10018,
        10058
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "7054": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10018,
        10058
      ],
      "op": "AND",
      "path": "2"
    },
    "7055": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10018,
        10058
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7056": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10018,
        10058
      ],
      "op": "ADD",
      "path": "2"
    },
    "7057": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10018,
        10058
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7058": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10018,
        10058
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7059": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10018,
        10058
      ],
      "op": "POP",
      "path": "2"
    },
    "7060": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10018,
        10058
      ],
      "op": "POP",
      "path": "2"
    },
    "7061": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10018,
        10058
      ],
      "op": "POP",
      "path": "2"
    },
    "7062": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10018,
        10058
      ],
      "op": "POP",
      "path": "2"
    },
    "7063": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10018,
        10058
      ],
      "op": "POP",
      "path": "2"
    },
    "7064": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10018,
        10025
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7065": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10026,
        10033
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7066": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10018,
        10034
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7067": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10018,
        10034
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7068": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10018,
        10034
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7069": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10018,
        10034
      ],
      "op": "LT",
      "path": "2"
    },
    "7070": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10018,
        10034
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1BA9"
    },
    "7073": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10018,
        10034
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7074": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10018,
        10034
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1BA9"
    },
    "7077": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10018,
        10034
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3C98"
    },
    "7080": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        10018,
        10034
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7081": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10018,
        10034
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7082": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10018,
        10034
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7084": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10018,
        10034
      ],
      "op": "MUL",
      "path": "2"
    },
    "7085": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10018,
        10034
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7087": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10018,
        10034
      ],
      "op": "ADD",
      "path": "2"
    },
    "7088": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10018,
        10034
      ],
      "op": "ADD",
      "path": "2"
    },
    "7089": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10018,
        10058
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7090": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10018,
        10058
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7091": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10018,
        10058
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7092": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10018,
        10058
      ],
      "op": "POP",
      "path": "2"
    },
    "7093": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10086,
        10095
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 51
    },
    "7094": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10086,
        10095
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "7096": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10086,
        10095
      ],
      "op": "ADD",
      "path": "2"
    },
    "7097": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10086,
        10095
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7098": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10086,
        10095
      ],
      "op": "POP",
      "path": "2"
    },
    "7099": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10128,
        10133
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7100": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10117,
        10124
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7101": {
      "branch": 152,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10117,
        10133
      ],
      "op": "LT",
      "path": "2"
    },
    "7102": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10114,
        10181
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "7103": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10157,
        10162
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 52,
      "value": "0x1BCB"
    },
    "7106": {
      "branch": 152,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10114,
        10181
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7107": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10114,
        10181
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7108": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10218,
        10221
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 53,
      "value": "0x1"
    },
    "7110": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10218,
        10221
      ],
      "op": "ADD",
      "path": "2"
    },
    "7111": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9714,
        10233
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x19E7"
    },
    "7114": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9714,
        10233
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7115": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9714,
        10233
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7116": {
      "op": "POP"
    },
    "7117": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10249,
        10256
      ],
      "op": "SWAP1",
      "path": "2",
      "statement": 54
    },
    "7118": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10249,
        10256
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "7119": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        8763,
        10263
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "7120": {
      "op": "POP"
    },
    "7121": {
      "op": "POP"
    },
    "7122": {
      "op": "POP"
    },
    "7123": {
      "op": "POP"
    },
    "7124": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "o",
      "offset": [
        8763,
        10263
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7125": {
      "fn": "Governance.createProposal",
      "offset": [
        13063,
        13825
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7126": {
      "offset": [
        23513,
        23530
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1BDD"
    },
    "7129": {
      "offset": [
        23513,
        23528
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x86B"
    },
    "7132": {
      "jump": "i",
      "offset": [
        23513,
        23530
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7133": {
      "branch": 153,
      "fn": "Governance.createProposal",
      "offset": [
        23513,
        23530
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7134": {
      "offset": [
        23505,
        23555
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1C20"
    },
    "7137": {
      "branch": 153,
      "offset": [
        23505,
        23555
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7138": {
      "fn": "Governance.createProposal",
      "offset": [
        23505,
        23555
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7140": {
      "fn": "Governance.createProposal",
      "offset": [
        23505,
        23555
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7141": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7145": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7147": {
      "op": "SHL"
    },
    "7148": {
      "offset": [
        23505,
        23555
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7149": {
      "fn": "Governance.createProposal",
      "offset": [
        23505,
        23555
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7150": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7152": {
      "offset": [
        23505,
        23555
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "7154": {
      "fn": "Governance.createProposal",
      "offset": [
        23505,
        23555
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7155": {
      "fn": "Governance.createProposal",
      "offset": [
        23505,
        23555
      ],
      "op": "ADD",
      "path": "2"
    },
    "7156": {
      "op": "MSTORE"
    },
    "7157": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "7159": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7161": {
      "op": "DUP3"
    },
    "7162": {
      "op": "ADD"
    },
    "7163": {
      "op": "MSTORE"
    },
    "7164": {
      "op": "PUSH20",
      "value": "0x135D5CDD081899481BDB881D1A1948189BD85C99"
    },
    "7185": {
      "op": "PUSH1",
      "value": "0x62"
    },
    "7187": {
      "op": "SHL"
    },
    "7188": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7190": {
      "op": "DUP3"
    },
    "7191": {
      "op": "ADD"
    },
    "7192": {
      "op": "MSTORE"
    },
    "7193": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7195": {
      "op": "ADD"
    },
    "7196": {
      "offset": [
        23505,
        23555
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE54"
    },
    "7199": {
      "op": "JUMP"
    },
    "7200": {
      "offset": [
        23505,
        23555
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7201": {
      "fn": "Governance.createProposal",
      "offset": [
        13282,
        13283
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 55,
      "value": "0x1"
    },
    "7203": {
      "fn": "Governance.createProposal",
      "offset": [
        13263,
        13279
      ],
      "op": "DUP6",
      "path": "2"
    },
    "7204": {
      "fn": "Governance.createProposal",
      "offset": [
        13263,
        13283
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "7207": {
      "fn": "Governance.createProposal",
      "offset": [
        13263,
        13283
      ],
      "op": "AND",
      "path": "2"
    },
    "7208": {
      "branch": 154,
      "fn": "Governance.createProposal",
      "offset": [
        13263,
        13283
      ],
      "op": "GT",
      "path": "2"
    },
    "7209": {
      "fn": "Governance.createProposal",
      "offset": [
        13263,
        13309
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7210": {
      "fn": "Governance.createProposal",
      "offset": [
        13263,
        13309
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "7211": {
      "fn": "Governance.createProposal",
      "offset": [
        13263,
        13309
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1C39"
    },
    "7214": {
      "branch": 154,
      "fn": "Governance.createProposal",
      "offset": [
        13263,
        13309
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7215": {
      "fn": "Governance.createProposal",
      "offset": [
        13263,
        13309
      ],
      "op": "POP",
      "path": "2"
    },
    "7216": {
      "fn": "Governance.createProposal",
      "offset": [
        13306,
        13309
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x101"
    },
    "7219": {
      "fn": "Governance.createProposal",
      "offset": [
        13287,
        13303
      ],
      "op": "DUP6",
      "path": "2"
    },
    "7220": {
      "fn": "Governance.createProposal",
      "offset": [
        13287,
        13309
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "7223": {
      "fn": "Governance.createProposal",
      "offset": [
        13287,
        13309
      ],
      "op": "AND",
      "path": "2"
    },
    "7224": {
      "branch": 155,
      "fn": "Governance.createProposal",
      "offset": [
        13287,
        13309
      ],
      "op": "LT",
      "path": "2"
    },
    "7225": {
      "fn": "Governance.createProposal",
      "offset": [
        13263,
        13309
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7226": {
      "fn": "Governance.createProposal",
      "offset": [
        13255,
        13339
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1C85"
    },
    "7229": {
      "branch": 155,
      "fn": "Governance.createProposal",
      "offset": [
        13255,
        13339
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7230": {
      "fn": "Governance.createProposal",
      "offset": [
        13255,
        13339
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7232": {
      "fn": "Governance.createProposal",
      "offset": [
        13255,
        13339
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7233": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7237": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7239": {
      "op": "SHL"
    },
    "7240": {
      "fn": "Governance.createProposal",
      "offset": [
        13255,
        13339
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7241": {
      "fn": "Governance.createProposal",
      "offset": [
        13255,
        13339
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7242": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7244": {
      "fn": "Governance.createProposal",
      "offset": [
        13255,
        13339
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "7246": {
      "fn": "Governance.createProposal",
      "offset": [
        13255,
        13339
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7247": {
      "fn": "Governance.createProposal",
      "offset": [
        13255,
        13339
      ],
      "op": "ADD",
      "path": "2"
    },
    "7248": {
      "op": "MSTORE"
    },
    "7249": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "7251": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7253": {
      "op": "DUP3"
    },
    "7254": {
      "op": "ADD"
    },
    "7255": {
      "op": "MSTORE"
    },
    "7256": {
      "op": "PUSH32",
      "value": "0x696E76616C6964206E756D626572206F66206F7074696F6E7300000000000000"
    },
    "7289": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7291": {
      "op": "DUP3"
    },
    "7292": {
      "op": "ADD"
    },
    "7293": {
      "op": "MSTORE"
    },
    "7294": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7296": {
      "op": "ADD"
    },
    "7297": {
      "fn": "Governance.createProposal",
      "offset": [
        13255,
        13339
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE54"
    },
    "7300": {
      "op": "JUMP"
    },
    "7301": {
      "fn": "Governance.createProposal",
      "offset": [
        13255,
        13339
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7302": {
      "fn": "Governance.createProposal",
      "offset": [
        13367,
        13368
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 56,
      "value": "0x1"
    },
    "7304": {
      "fn": "Governance.createProposal",
      "offset": [
        13349,
        13363
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x9"
    },
    "7306": {
      "fn": "Governance.createProposal",
      "offset": [
        13349,
        13363
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7308": {
      "fn": "Governance.createProposal",
      "offset": [
        13349,
        13368
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7309": {
      "fn": "Governance.createProposal",
      "offset": [
        13349,
        13368
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7310": {
      "fn": "Governance.createProposal",
      "offset": [
        13349,
        13368
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7311": {
      "fn": "Governance.createProposal",
      "offset": [
        13349,
        13368
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1C98"
    },
    "7314": {
      "fn": "Governance.createProposal",
      "offset": [
        13349,
        13368
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7315": {
      "fn": "Governance.createProposal",
      "offset": [
        13349,
        13368
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7316": {
      "fn": "Governance.createProposal",
      "offset": [
        13349,
        13368
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3F47"
    },
    "7319": {
      "fn": "Governance.createProposal",
      "jump": "i",
      "offset": [
        13349,
        13368
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7320": {
      "fn": "Governance.createProposal",
      "offset": [
        13349,
        13368
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7321": {
      "fn": "Governance.createProposal",
      "offset": [
        13349,
        13368
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7322": {
      "fn": "Governance.createProposal",
      "offset": [
        13349,
        13368
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7323": {
      "fn": "Governance.createProposal",
      "offset": [
        13349,
        13368
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "7324": {
      "op": "POP"
    },
    "7325": {
      "op": "POP"
    },
    "7326": {
      "fn": "Governance.createProposal",
      "offset": [
        13439,
        13453
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x9"
    },
    "7328": {
      "fn": "Governance.createProposal",
      "offset": [
        13439,
        13453
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7329": {
      "fn": "Governance.createProposal",
      "offset": [
        13399,
        13426
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7331": {
      "fn": "Governance.createProposal",
      "offset": [
        13429,
        13454
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7332": {
      "fn": "Governance.createProposal",
      "offset": [
        13429,
        13454
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7333": {
      "fn": "Governance.createProposal",
      "offset": [
        13429,
        13454
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7334": {
      "fn": "Governance.createProposal",
      "offset": [
        13429,
        13438
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x8"
    },
    "7336": {
      "fn": "Governance.createProposal",
      "offset": [
        13429,
        13454
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7338": {
      "fn": "Governance.createProposal",
      "offset": [
        13429,
        13454
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7339": {
      "fn": "Governance.createProposal",
      "offset": [
        13429,
        13454
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7341": {
      "fn": "Governance.createProposal",
      "offset": [
        13429,
        13454
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7342": {
      "fn": "Governance.createProposal",
      "offset": [
        13429,
        13454
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "7343": {
      "fn": "Governance.createProposal",
      "offset": [
        13468,
        13491
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 57,
      "value": "0x3"
    },
    "7345": {
      "fn": "Governance.createProposal",
      "offset": [
        13468,
        13491
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7346": {
      "fn": "Governance.createProposal",
      "offset": [
        13468,
        13491
      ],
      "op": "ADD",
      "path": "2"
    },
    "7347": {
      "fn": "Governance.createProposal",
      "offset": [
        13468,
        13507
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7348": {
      "fn": "Governance.createProposal",
      "offset": [
        13468,
        13507
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7349": {
      "op": "PUSH15",
      "value": "0xFFFFFFFFFFFFFFFFFFFF0000000000"
    },
    "7365": {
      "op": "NOT"
    },
    "7366": {
      "fn": "Governance.createProposal",
      "offset": [
        13521,
        13560
      ],
      "op": "AND",
      "path": "2",
      "statement": 58
    },
    "7367": {
      "fn": "Governance.createProposal",
      "offset": [
        13468,
        13507
      ],
      "op": "PUSH6",
      "path": "2",
      "value": "0x10000000000"
    },
    "7374": {
      "fn": "Governance.createProposal",
      "offset": [
        13468,
        13507
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "7380": {
      "fn": "Governance.createProposal",
      "offset": [
        13468,
        13507
      ],
      "op": "DUP8",
      "path": "2"
    },
    "7381": {
      "fn": "Governance.createProposal",
      "offset": [
        13468,
        13507
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7382": {
      "fn": "Governance.createProposal",
      "offset": [
        13468,
        13507
      ],
      "op": "AND",
      "path": "2"
    },
    "7383": {
      "fn": "Governance.createProposal",
      "offset": [
        13468,
        13507
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7384": {
      "fn": "Governance.createProposal",
      "offset": [
        13468,
        13507
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7385": {
      "fn": "Governance.createProposal",
      "offset": [
        13468,
        13507
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7386": {
      "fn": "Governance.createProposal",
      "offset": [
        13468,
        13507
      ],
      "op": "MUL",
      "path": "2"
    },
    "7387": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "7393": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "7395": {
      "op": "SHL"
    },
    "7396": {
      "op": "NOT"
    },
    "7397": {
      "fn": "Governance.createProposal",
      "offset": [
        13521,
        13560
      ],
      "op": "AND",
      "path": "2"
    },
    "7398": {
      "fn": "Governance.createProposal",
      "offset": [
        13521,
        13560
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7399": {
      "fn": "Governance.createProposal",
      "offset": [
        13521,
        13560
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7400": {
      "fn": "Governance.createProposal",
      "offset": [
        13521,
        13560
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7401": {
      "fn": "Governance.createProposal",
      "offset": [
        13521,
        13560
      ],
      "op": "OR",
      "path": "2"
    },
    "7402": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7404": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "7406": {
      "op": "SHL"
    },
    "7407": {
      "fn": "Governance.createProposal",
      "offset": [
        13521,
        13560
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7408": {
      "fn": "Governance.createProposal",
      "offset": [
        13521,
        13560
      ],
      "op": "DUP7",
      "path": "2"
    },
    "7409": {
      "fn": "Governance.createProposal",
      "offset": [
        13521,
        13560
      ],
      "op": "AND",
      "path": "2"
    },
    "7410": {
      "fn": "Governance.createProposal",
      "offset": [
        13521,
        13560
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7411": {
      "fn": "Governance.createProposal",
      "offset": [
        13521,
        13560
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7412": {
      "fn": "Governance.createProposal",
      "offset": [
        13521,
        13560
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7413": {
      "fn": "Governance.createProposal",
      "offset": [
        13521,
        13560
      ],
      "op": "MUL",
      "path": "2"
    },
    "7414": {
      "fn": "Governance.createProposal",
      "offset": [
        13521,
        13560
      ],
      "op": "OR",
      "path": "2"
    },
    "7415": {
      "fn": "Governance.createProposal",
      "offset": [
        13521,
        13560
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7416": {
      "fn": "Governance.createProposal",
      "offset": [
        13521,
        13560
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "7417": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7419": {
      "fn": "Governance.createProposal",
      "offset": [
        13574,
        13600
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 59
    },
    "7420": {
      "fn": "Governance.createProposal",
      "offset": [
        13574,
        13600
      ],
      "op": "ADD",
      "path": "2"
    },
    "7421": {
      "fn": "Governance.createProposal",
      "offset": [
        13574,
        13619
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7422": {
      "fn": "Governance.createProposal",
      "offset": [
        13574,
        13619
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7423": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "7426": {
      "op": "NOT"
    },
    "7427": {
      "fn": "Governance.createProposal",
      "offset": [
        13574,
        13619
      ],
      "op": "AND",
      "path": "2"
    },
    "7428": {
      "fn": "Governance.createProposal",
      "offset": [
        13574,
        13619
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "7431": {
      "fn": "Governance.createProposal",
      "offset": [
        13574,
        13619
      ],
      "op": "DUP9",
      "path": "2"
    },
    "7432": {
      "fn": "Governance.createProposal",
      "offset": [
        13574,
        13619
      ],
      "op": "AND",
      "path": "2"
    },
    "7433": {
      "fn": "Governance.createProposal",
      "offset": [
        13574,
        13619
      ],
      "op": "OR",
      "path": "2"
    },
    "7434": {
      "fn": "Governance.createProposal",
      "offset": [
        13574,
        13619
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7435": {
      "fn": "Governance.createProposal",
      "offset": [
        13574,
        13619
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "7436": {
      "fn": "Governance.createProposal",
      "offset": [
        13429,
        13454
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7437": {
      "fn": "Governance.createProposal",
      "offset": [
        13633,
        13664
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 60,
      "value": "0x1D17"
    },
    "7440": {
      "fn": "Governance.createProposal",
      "offset": [
        13655,
        13664
      ],
      "op": "DUP9",
      "path": "2"
    },
    "7441": {
      "fn": "Governance.createProposal",
      "offset": [
        13655,
        13664
      ],
      "op": "DUP11",
      "path": "2"
    },
    "7442": {
      "fn": "Governance.createProposal",
      "offset": [
        13429,
        13454
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7443": {
      "fn": "Governance.createProposal",
      "offset": [
        13633,
        13664
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3FE9"
    },
    "7446": {
      "fn": "Governance.createProposal",
      "jump": "i",
      "offset": [
        13633,
        13664
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7447": {
      "fn": "Governance.createProposal",
      "offset": [
        13633,
        13664
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7448": {
      "fn": "Governance.createProposal",
      "offset": [
        13633,
        13664
      ],
      "op": "POP",
      "path": "2"
    },
    "7449": {
      "fn": "Governance.createProposal",
      "offset": [
        13675,
        13787
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 61,
      "value": "0x1D2B"
    },
    "7452": {
      "fn": "Governance.createProposal",
      "offset": [
        13691,
        13700
      ],
      "op": "DUP9",
      "path": "2"
    },
    "7453": {
      "fn": "Governance.createProposal",
      "offset": [
        13691,
        13700
      ],
      "op": "DUP9",
      "path": "2"
    },
    "7454": {
      "fn": "Governance.createProposal",
      "offset": [
        13709,
        13723
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x9"
    },
    "7456": {
      "fn": "Governance.createProposal",
      "offset": [
        13709,
        13723
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7457": {
      "fn": "Governance.createProposal",
      "offset": [
        13726,
        13727
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7459": {
      "fn": "Governance.createProposal",
      "offset": [
        13729,
        13739
      ],
      "op": "DUP10",
      "path": "2"
    },
    "7460": {
      "fn": "Governance.createProposal",
      "offset": [
        13741,
        13754
      ],
      "op": "DUP10",
      "path": "2"
    },
    "7461": {
      "fn": "Governance.createProposal",
      "offset": [
        13756,
        13769
      ],
      "op": "DUP10",
      "path": "2"
    },
    "7462": {
      "fn": "Governance.createProposal",
      "offset": [
        13771,
        13786
      ],
      "op": "DUP10",
      "path": "2"
    },
    "7463": {
      "fn": "Governance.createProposal",
      "offset": [
        13675,
        13690
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x302C"
    },
    "7466": {
      "fn": "Governance.createProposal",
      "jump": "i",
      "offset": [
        13675,
        13787
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7467": {
      "fn": "Governance.createProposal",
      "offset": [
        13675,
        13787
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7468": {
      "fn": "Governance.createProposal",
      "offset": [
        13245,
        13825
      ],
      "op": "POP",
      "path": "2"
    },
    "7469": {
      "fn": "Governance.createProposal",
      "offset": [
        13063,
        13825
      ],
      "op": "POP",
      "path": "2"
    },
    "7470": {
      "fn": "Governance.createProposal",
      "offset": [
        13063,
        13825
      ],
      "op": "POP",
      "path": "2"
    },
    "7471": {
      "fn": "Governance.createProposal",
      "offset": [
        13063,
        13825
      ],
      "op": "POP",
      "path": "2"
    },
    "7472": {
      "fn": "Governance.createProposal",
      "offset": [
        13063,
        13825
      ],
      "op": "POP",
      "path": "2"
    },
    "7473": {
      "fn": "Governance.createProposal",
      "offset": [
        13063,
        13825
      ],
      "op": "POP",
      "path": "2"
    },
    "7474": {
      "fn": "Governance.createProposal",
      "offset": [
        13063,
        13825
      ],
      "op": "POP",
      "path": "2"
    },
    "7475": {
      "fn": "Governance.createProposal",
      "offset": [
        13063,
        13825
      ],
      "op": "POP",
      "path": "2"
    },
    "7476": {
      "fn": "Governance.createProposal",
      "jump": "o",
      "offset": [
        13063,
        13825
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7477": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15096,
        16224
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7478": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15171,
        15198
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7480": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15201,
        15250
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1D50"
    },
    "7483": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15225,
        15249
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x6"
    },
    "7485": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5676,
        5688
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "7486": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5676,
        5688
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xF"
    },
    "7488": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5676,
        5688
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7489": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5676,
        5688
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7490": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5676,
        5688
      ],
      "op": "SIGNEXTEND",
      "path": "1"
    },
    "7491": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7493": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7495": {
      "op": "SHL"
    },
    "7496": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5655,
        5665
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7497": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5655,
        5665
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "7498": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5655,
        5665
      ],
      "op": "DIV",
      "path": "1"
    },
    "7499": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5655,
        5665
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7500": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5655,
        5665
      ],
      "op": "SIGNEXTEND",
      "path": "1"
    },
    "7501": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5648,
        5689
      ],
      "op": "SUB",
      "path": "1"
    },
    "7502": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5648,
        5689
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7503": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5344,
        5707
      ],
      "op": "JUMP",
      "path": "1"
    },
    "7504": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15201,
        15250
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7505": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15171,
        15250
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7506": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15171,
        15250
      ],
      "op": "POP",
      "path": "2"
    },
    "7507": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15260,
        15278
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1D5A"
    },
    "7510": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15260,
        15278
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3379"
    },
    "7513": {
      "fn": "Governance.claimRandomTaskForVerification",
      "jump": "i",
      "offset": [
        15260,
        15278
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7514": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15260,
        15278
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7515": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15288,
        15302
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7517": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15288,
        15302
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7518": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15399,
        16165
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7519": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15421,
        15440
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7520": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15417,
        15418
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7521": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15417,
        15440
      ],
      "op": "LT",
      "path": "2"
    },
    "7522": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15399,
        16165
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "7523": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15399,
        16165
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2065"
    },
    "7526": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15399,
        16165
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7527": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15474,
        15522
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 62,
      "value": "0x1D71"
    },
    "7530": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15494,
        15518
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x6"
    },
    "7532": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15520,
        15521
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7533": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15474,
        15493
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2FBB"
    },
    "7536": {
      "fn": "Governance.claimRandomTaskForVerification",
      "jump": "i",
      "offset": [
        15474,
        15522
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7537": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15474,
        15522
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7538": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15466,
        15523
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7540": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15546,
        15559
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 63
    },
    "7541": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15546,
        15559
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7542": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15546,
        15559
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7543": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15546,
        15551
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA"
    },
    "7545": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15546,
        15559
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7547": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15546,
        15559
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7548": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15546,
        15559
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7550": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15546,
        15559
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7551": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15546,
        15559
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7552": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15546,
        15559
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7553": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15546,
        15559
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "7554": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7555": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7556": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x140"
    },
    "7559": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7560": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "ADD",
      "path": "2"
    },
    "7561": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7562": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "7563": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7564": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7565": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7566": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15466,
        15523
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "7567": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15466,
        15523
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "7568": {
      "op": "POP"
    },
    "7569": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7570": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7571": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7572": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7573": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15546,
        15559
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7574": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15546,
        15559
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7575": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1D9F"
    },
    "7578": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7579": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3C5E"
    },
    "7582": {
      "fn": "Governance.claimRandomTaskForVerification",
      "jump": "i",
      "offset": [
        15537,
        15559
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7583": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7584": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7585": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "7587": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "ADD",
      "path": "2"
    },
    "7588": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7590": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7591": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7592": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "DIV",
      "path": "2"
    },
    "7593": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "MUL",
      "path": "2"
    },
    "7594": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7596": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "ADD",
      "path": "2"
    },
    "7597": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7599": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7600": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7601": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7602": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "ADD",
      "path": "2"
    },
    "7603": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7605": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7606": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7607": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "7608": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7609": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7610": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7611": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7612": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7613": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7615": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "ADD",
      "path": "2"
    },
    "7616": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7617": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7618": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7619": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1DCB"
    },
    "7622": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7623": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3C5E"
    },
    "7626": {
      "fn": "Governance.claimRandomTaskForVerification",
      "jump": "i",
      "offset": [
        15537,
        15559
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7627": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7628": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7629": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "7630": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1E18"
    },
    "7633": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7634": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7635": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "7637": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "LT",
      "path": "2"
    },
    "7638": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1DED"
    },
    "7641": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7642": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "7645": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7646": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7647": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7648": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "DIV",
      "path": "2"
    },
    "7649": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "MUL",
      "path": "2"
    },
    "7650": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7651": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7652": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7653": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7655": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "ADD",
      "path": "2"
    },
    "7656": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7657": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1E18"
    },
    "7660": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7661": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7662": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7663": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "ADD",
      "path": "2"
    },
    "7664": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7665": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7666": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7668": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7669": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7671": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7673": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "7674": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7675": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7676": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7677": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7678": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7679": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7680": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7681": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "7683": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "ADD",
      "path": "2"
    },
    "7684": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7685": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7687": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "ADD",
      "path": "2"
    },
    "7688": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7689": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7690": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "GT",
      "path": "2"
    },
    "7691": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1DFB"
    },
    "7694": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7695": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7696": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7697": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "SUB",
      "path": "2"
    },
    "7698": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "7700": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "AND",
      "path": "2"
    },
    "7701": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7702": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "ADD",
      "path": "2"
    },
    "7703": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7704": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7705": {
      "op": "POP"
    },
    "7706": {
      "op": "POP"
    },
    "7707": {
      "op": "POP"
    },
    "7708": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7709": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7710": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7711": {
      "op": "POP"
    },
    "7712": {
      "op": "POP"
    },
    "7713": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "7715": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7716": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "ADD",
      "path": "2"
    },
    "7717": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7718": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "7724": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7725": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7726": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "AND",
      "path": "2"
    },
    "7727": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7729": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7730": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "ADD",
      "path": "2"
    },
    "7731": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7732": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "7734": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7735": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "ADD",
      "path": "2"
    },
    "7736": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7737": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7739": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7740": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "ADD",
      "path": "2"
    },
    "7741": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7742": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "7744": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7745": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "ADD",
      "path": "2"
    },
    "7746": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7747": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "7749": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7750": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "ADD",
      "path": "2"
    },
    "7751": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7752": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "7754": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7755": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "7756": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "ADD",
      "path": "2"
    },
    "7757": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7758": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "7760": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7761": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "AND",
      "path": "2"
    },
    "7762": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x80"
    },
    "7764": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7765": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "ADD",
      "path": "2"
    },
    "7766": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7767": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "7770": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7771": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7772": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "DIV",
      "path": "2"
    },
    "7773": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "PUSH3",
      "path": "2",
      "value": "0xFFFFFF"
    },
    "7777": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "AND",
      "path": "2"
    },
    "7778": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA0"
    },
    "7780": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "DUP5",
      "path": "2"
    },
    "7781": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "ADD",
      "path": "2"
    },
    "7782": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7783": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7785": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7787": {
      "op": "SHL"
    },
    "7788": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7789": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "DIV",
      "path": "2"
    },
    "7790": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7792": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7794": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "7796": {
      "op": "SHL"
    },
    "7797": {
      "op": "SUB"
    },
    "7798": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "AND",
      "path": "2"
    },
    "7799": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xC0"
    },
    "7801": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "DUP5",
      "path": "2"
    },
    "7802": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "ADD",
      "path": "2"
    },
    "7803": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7804": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7806": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "7808": {
      "op": "SHL"
    },
    "7809": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7810": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "DIV",
      "path": "2"
    },
    "7811": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "7814": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7815": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7816": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "AND",
      "path": "2"
    },
    "7817": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE0"
    },
    "7819": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "DUP6",
      "path": "2"
    },
    "7820": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "ADD",
      "path": "2"
    },
    "7821": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7822": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7824": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7826": {
      "op": "SHL"
    },
    "7827": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7828": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "DIV",
      "path": "2"
    },
    "7829": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "AND",
      "path": "2"
    },
    "7830": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7831": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7832": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "ADD",
      "path": "2"
    },
    "7833": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7834": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7836": {
      "op": "PUSH1",
      "value": "0x90"
    },
    "7838": {
      "op": "SHL"
    },
    "7839": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7840": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "DIV",
      "path": "2"
    },
    "7841": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7842": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "AND",
      "path": "2"
    },
    "7843": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x120"
    },
    "7846": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7847": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7848": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "ADD",
      "path": "2"
    },
    "7849": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15559
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7850": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15577,
        15613
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7851": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15577,
        15613
      ],
      "op": "ADD",
      "path": "2"
    },
    "7852": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15577,
        15613
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7853": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15577,
        15613
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7854": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15577,
        15613
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "7855": {
      "op": "POP"
    },
    "7856": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15616,
        15631
      ],
      "op": "TIMESTAMP",
      "path": "2"
    },
    "7857": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15577,
        15631
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7858": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15577,
        15631
      ],
      "op": "AND",
      "path": "2"
    },
    "7859": {
      "branch": 156,
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15577,
        15631
      ],
      "op": "LT",
      "path": "2"
    },
    "7860": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15577,
        15657
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7861": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15577,
        15657
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "7862": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15577,
        15657
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1ECA"
    },
    "7865": {
      "branch": 156,
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15577,
        15657
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7866": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15577,
        15657
      ],
      "op": "POP",
      "path": "2"
    },
    "7867": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15651,
        15657
      ],
      "op": "DUP5",
      "path": "2"
    },
    "7868": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15635,
        15641
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7869": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15635,
        15647
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7871": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15635,
        15647
      ],
      "op": "ADD",
      "path": "2"
    },
    "7872": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15635,
        15647
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7873": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15635,
        15657
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "7879": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15635,
        15657
      ],
      "op": "AND",
      "path": "2"
    },
    "7880": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15635,
        15657
      ],
      "op": "EQ",
      "path": "2"
    },
    "7881": {
      "branch": 157,
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15635,
        15657
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "7882": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15577,
        15657
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7883": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15577,
        15686
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7884": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15577,
        15686
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "7885": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15577,
        15686
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1EDF"
    },
    "7888": {
      "branch": 157,
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15577,
        15686
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7889": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15577,
        15686
      ],
      "op": "POP",
      "path": "2"
    },
    "7890": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15680,
        15686
      ],
      "op": "DUP5",
      "path": "2"
    },
    "7891": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15661,
        15667
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7892": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15661,
        15677
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "7895": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15661,
        15677
      ],
      "op": "ADD",
      "path": "2"
    },
    "7896": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15661,
        15677
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7897": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15661,
        15686
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "7900": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15661,
        15686
      ],
      "op": "AND",
      "path": "2"
    },
    "7901": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15661,
        15686
      ],
      "op": "EQ",
      "path": "2"
    },
    "7902": {
      "branch": 158,
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15661,
        15686
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "7903": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15577,
        15686
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7904": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15573,
        16127
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "7905": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15573,
        16127
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x205D"
    },
    "7908": {
      "branch": 158,
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15573,
        16127
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7909": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15865,
        15899
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 64,
      "value": "0xFFFF"
    },
    "7912": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15865,
        15899
      ],
      "op": "DUP6",
      "path": "2"
    },
    "7913": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15865,
        15899
      ],
      "op": "AND",
      "path": "2"
    },
    "7914": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15865,
        15882
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE0"
    },
    "7916": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15865,
        15882
      ],
      "op": "DUP5",
      "path": "2"
    },
    "7917": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15865,
        15882
      ],
      "op": "ADD",
      "path": "2"
    },
    "7918": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15865,
        15899
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7919": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15981,
        15997
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 65,
      "value": "0xC"
    },
    "7921": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15981,
        15997
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7922": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15963,
        15997
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1EFB"
    },
    "7925": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15963,
        15997
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7926": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15963,
        15978
      ],
      "op": "TIMESTAMP",
      "path": "2"
    },
    "7927": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15963,
        15997
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3F47"
    },
    "7930": {
      "fn": "Governance.claimRandomTaskForVerification",
      "jump": "i",
      "offset": [
        15963,
        15997
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7931": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15963,
        15997
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7932": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15917,
        15998
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "7938": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15917,
        15998
      ],
      "op": "AND",
      "path": "2"
    },
    "7939": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15917,
        15953
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x120"
    },
    "7942": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15917,
        15953
      ],
      "op": "DUP5",
      "path": "2"
    },
    "7943": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15917,
        15953
      ],
      "op": "ADD",
      "path": "2"
    },
    "7944": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15917,
        15998
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7945": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16016,
        16029
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 66,
      "value": "0x0"
    },
    "7947": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16016,
        16029
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7948": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16016,
        16029
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7949": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16016,
        16029
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7950": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16016,
        16021
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA"
    },
    "7952": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16016,
        16029
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7954": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16016,
        16029
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7955": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16016,
        16029
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7957": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16016,
        16029
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7958": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16016,
        16029
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "7959": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16016,
        16038
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7960": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16016,
        16038
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7961": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15917,
        15923
      ],
      "op": "DUP5",
      "path": "2"
    },
    "7962": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15917,
        15923
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7963": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16016,
        16029
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7964": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16016,
        16029
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7965": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16016,
        16029
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7966": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16016,
        16038
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1F27"
    },
    "7969": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16016,
        16038
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7970": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16016,
        16029
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7971": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16016,
        16038
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3E72"
    },
    "7974": {
      "fn": "Governance.claimRandomTaskForVerification",
      "jump": "i",
      "offset": [
        16016,
        16038
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7975": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16016,
        16038
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7976": {
      "op": "POP"
    },
    "7977": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16016,
        16038
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7979": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16016,
        16038
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7980": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16016,
        16038
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7981": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16016,
        16038
      ],
      "op": "ADD",
      "path": "2"
    },
    "7982": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16016,
        16038
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7983": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16016,
        16038
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "7985": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16016,
        16038
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7986": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16016,
        16038
      ],
      "op": "ADD",
      "path": "2"
    },
    "7987": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16016,
        16038
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7988": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16016,
        16038
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7989": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "7995": {
      "op": "NOT"
    },
    "7996": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16016,
        16038
      ],
      "op": "AND",
      "path": "2"
    },
    "7997": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16016,
        16038
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "8003": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16016,
        16038
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "8004": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16016,
        16038
      ],
      "op": "DUP4",
      "path": "2"
    },
    "8005": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16016,
        16038
      ],
      "op": "AND",
      "path": "2"
    },
    "8006": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16016,
        16038
      ],
      "op": "OR",
      "path": "2"
    },
    "8007": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16016,
        16038
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8008": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16016,
        16038
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "8009": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16016,
        16038
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8011": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16016,
        16038
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8012": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16016,
        16038
      ],
      "op": "DUP6",
      "path": "2"
    },
    "8013": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16016,
        16038
      ],
      "op": "ADD",
      "path": "2"
    },
    "8014": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16016,
        16038
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8015": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16016,
        16038
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "8017": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16016,
        16038
      ],
      "op": "DUP6",
      "path": "2"
    },
    "8018": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16016,
        16038
      ],
      "op": "ADD",
      "path": "2"
    },
    "8019": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16016,
        16038
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "8020": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16016,
        16038
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "8022": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16016,
        16038
      ],
      "op": "DUP6",
      "path": "2"
    },
    "8023": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16016,
        16038
      ],
      "op": "ADD",
      "path": "2"
    },
    "8024": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16016,
        16038
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8025": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16016,
        16038
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "8027": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16016,
        16038
      ],
      "op": "DUP6",
      "path": "2"
    },
    "8028": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16016,
        16038
      ],
      "op": "ADD",
      "path": "2"
    },
    "8029": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16016,
        16038
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "8030": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16016,
        16038
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x80"
    },
    "8032": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16016,
        16038
      ],
      "op": "DUP6",
      "path": "2"
    },
    "8033": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16016,
        16038
      ],
      "op": "ADD",
      "path": "2"
    },
    "8034": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16016,
        16038
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8035": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16016,
        16038
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "8037": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16016,
        16038
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8038": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16016,
        16038
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "8039": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16016,
        16038
      ],
      "op": "ADD",
      "path": "2"
    },
    "8040": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16016,
        16038
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8041": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16016,
        16038
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8042": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16016,
        16038
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA0"
    },
    "8044": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16016,
        16038
      ],
      "op": "DUP8",
      "path": "2"
    },
    "8045": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16016,
        16038
      ],
      "op": "ADD",
      "path": "2"
    },
    "8046": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16016,
        16038
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8047": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16016,
        16038
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xC0"
    },
    "8049": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16016,
        16038
      ],
      "op": "DUP9",
      "path": "2"
    },
    "8050": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16016,
        16038
      ],
      "op": "ADD",
      "path": "2"
    },
    "8051": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16016,
        16038
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8052": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16016,
        16038
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE0"
    },
    "8054": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16016,
        16038
      ],
      "op": "DUP10",
      "path": "2"
    },
    "8055": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16016,
        16038
      ],
      "op": "ADD",
      "path": "2"
    },
    "8056": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16016,
        16038
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8057": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16016,
        16038
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "8060": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16016,
        16038
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8061": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16016,
        16038
      ],
      "op": "DUP12",
      "path": "2"
    },
    "8062": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16016,
        16038
      ],
      "op": "ADD",
      "path": "2"
    },
    "8063": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16016,
        16038
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8064": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16016,
        16038
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x120"
    },
    "8067": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16016,
        16038
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8068": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16016,
        16038
      ],
      "op": "SWAP12",
      "path": "2"
    },
    "8069": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16016,
        16038
      ],
      "op": "ADD",
      "path": "2"
    },
    "8070": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16016,
        16038
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8071": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16016,
        16038
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "8073": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16016,
        16038
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8074": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16016,
        16038
      ],
      "op": "SWAP11",
      "path": "2"
    },
    "8075": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16016,
        16038
      ],
      "op": "AND",
      "path": "2"
    },
    "8076": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "8081": {
      "op": "NOT"
    },
    "8082": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16016,
        16038
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8083": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16016,
        16038
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "8084": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16016,
        16038
      ],
      "op": "AND",
      "path": "2"
    },
    "8085": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16016,
        16038
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "8086": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16016,
        16038
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8087": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16016,
        16038
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "8088": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16016,
        16038
      ],
      "op": "OR",
      "path": "2"
    },
    "8089": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16016,
        16038
      ],
      "op": "PUSH3",
      "path": "2",
      "value": "0xFFFFFF"
    },
    "8093": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16016,
        16038
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8094": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16016,
        16038
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "8095": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16016,
        16038
      ],
      "op": "AND",
      "path": "2"
    },
    "8096": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16016,
        16038
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8097": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16016,
        16038
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "8098": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16016,
        16038
      ],
      "op": "MUL",
      "path": "2"
    },
    "8099": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16016,
        16038
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8100": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16016,
        16038
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8101": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16016,
        16038
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8102": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16016,
        16038
      ],
      "op": "OR",
      "path": "2"
    },
    "8103": {
      "op": "PUSH5",
      "value": "0x100000000"
    },
    "8109": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8111": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "8113": {
      "op": "SHL"
    },
    "8114": {
      "op": "SUB"
    },
    "8115": {
      "op": "NOT"
    },
    "8116": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16016,
        16038
      ],
      "op": "AND",
      "path": "2"
    },
    "8117": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8119": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8121": {
      "op": "SHL"
    },
    "8122": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8124": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8126": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "8128": {
      "op": "SHL"
    },
    "8129": {
      "op": "SUB"
    },
    "8130": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16016,
        16038
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8131": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16016,
        16038
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "8132": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16016,
        16038
      ],
      "op": "AND",
      "path": "2"
    },
    "8133": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16016,
        16038
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8134": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16016,
        16038
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8135": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16016,
        16038
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8136": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16016,
        16038
      ],
      "op": "MUL",
      "path": "2"
    },
    "8137": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "8140": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "8142": {
      "op": "SHL"
    },
    "8143": {
      "op": "NOT"
    },
    "8144": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16016,
        16038
      ],
      "op": "AND",
      "path": "2"
    },
    "8145": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16016,
        16038
      ],
      "op": "OR",
      "path": "2"
    },
    "8146": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8148": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "8150": {
      "op": "SHL"
    },
    "8151": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16016,
        16038
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "8154": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16016,
        16038
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "8155": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16016,
        16038
      ],
      "op": "DUP4",
      "path": "2"
    },
    "8156": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16016,
        16038
      ],
      "op": "AND",
      "path": "2"
    },
    "8157": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16016,
        16038
      ],
      "op": "MUL",
      "path": "2"
    },
    "8158": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16016,
        16038
      ],
      "op": "OR",
      "path": "2"
    },
    "8159": {
      "op": "PUSH7",
      "value": "0xFFFFFFFFFFFFFF"
    },
    "8167": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "8169": {
      "op": "SHL"
    },
    "8170": {
      "op": "NOT"
    },
    "8171": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16016,
        16038
      ],
      "op": "AND",
      "path": "2"
    },
    "8172": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8174": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "8176": {
      "op": "SHL"
    },
    "8177": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16016,
        16038
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8178": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16016,
        16038
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8179": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16016,
        16038
      ],
      "op": "SWAP8",
      "path": "2"
    },
    "8180": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16016,
        16038
      ],
      "op": "AND",
      "path": "2"
    },
    "8181": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16016,
        16038
      ],
      "op": "MUL",
      "path": "2"
    },
    "8182": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "8188": {
      "op": "PUSH1",
      "value": "0x90"
    },
    "8190": {
      "op": "SHL"
    },
    "8191": {
      "op": "NOT"
    },
    "8192": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16016,
        16038
      ],
      "op": "AND",
      "path": "2"
    },
    "8193": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16016,
        16038
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "8194": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16016,
        16038
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8195": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16016,
        16038
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "8196": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16016,
        16038
      ],
      "op": "OR",
      "path": "2"
    },
    "8197": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8199": {
      "op": "PUSH1",
      "value": "0x90"
    },
    "8201": {
      "op": "SHL"
    },
    "8202": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16016,
        16038
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "8203": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16016,
        16038
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8204": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16016,
        16038
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "8205": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16016,
        16038
      ],
      "op": "AND",
      "path": "2"
    },
    "8206": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16016,
        16038
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "8207": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16016,
        16038
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8208": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16016,
        16038
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "8209": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16016,
        16038
      ],
      "op": "MUL",
      "path": "2"
    },
    "8210": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16016,
        16038
      ],
      "op": "OR",
      "path": "2"
    },
    "8211": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16016,
        16038
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8212": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16016,
        16038
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "8213": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16016,
        16038
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "8214": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8216": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16098,
        16111
      ],
      "op": "DUP5",
      "path": "2",
      "statement": 67
    },
    "8217": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16098,
        16111
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8218": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16098,
        16111
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8219": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16098,
        16103
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA"
    },
    "8221": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16098,
        16111
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8222": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16098,
        16111
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "8223": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16098,
        16111
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8224": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16098,
        16111
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8225": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16098,
        16111
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8226": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16098,
        16111
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8227": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16098,
        16111
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "8228": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16061,
        16112
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8229": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16061,
        16112
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8230": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16061,
        16112
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0xF20A22B1AA6D8BA4BF99C845FB1F02F4879BA83155BDE0F82F49CB58675DF268"
    },
    "8263": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16061,
        16112
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8264": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16061,
        16112
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2054"
    },
    "8267": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16061,
        16112
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8268": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16082,
        16088
      ],
      "op": "DUP9",
      "path": "2"
    },
    "8269": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16082,
        16088
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8270": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16098,
        16111
      ],
      "op": "DUP7",
      "path": "2"
    },
    "8271": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16098,
        16111
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8272": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16061,
        16112
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x40A8"
    },
    "8275": {
      "fn": "Governance.claimRandomTaskForVerification",
      "jump": "i",
      "offset": [
        16061,
        16112
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8276": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16061,
        16112
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8277": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16061,
        16112
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8279": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16061,
        16112
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8280": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16061,
        16112
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8281": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16061,
        16112
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8282": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16061,
        16112
      ],
      "op": "SUB",
      "path": "2"
    },
    "8283": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16061,
        16112
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8284": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16061,
        16112
      ],
      "op": "LOG1",
      "path": "2"
    },
    "8285": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15573,
        16127
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8286": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16150,
        16153
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 68,
      "value": "0x1"
    },
    "8288": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16150,
        16153
      ],
      "op": "ADD",
      "path": "2"
    },
    "8289": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15399,
        16165
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1D5E"
    },
    "8292": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15399,
        16165
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8293": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15399,
        16165
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8294": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15399,
        16165
      ],
      "op": "POP",
      "path": "2"
    },
    "8295": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15161,
        16224
      ],
      "op": "POP",
      "path": "2"
    },
    "8296": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15161,
        16224
      ],
      "op": "POP",
      "path": "2"
    },
    "8297": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15161,
        16224
      ],
      "op": "POP",
      "path": "2"
    },
    "8298": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15096,
        16224
      ],
      "op": "POP",
      "path": "2"
    },
    "8299": {
      "fn": "Governance.claimRandomTaskForVerification",
      "jump": "o",
      "offset": [
        15096,
        16224
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8300": {
      "fn": "Governance.submitVerification",
      "offset": [
        18731,
        22939
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8301": {
      "fn": "Governance.submitVerification",
      "offset": [
        18895,
        18905
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 69,
      "value": "0x2"
    },
    "8303": {
      "fn": "Governance.submitVerification",
      "offset": [
        18895,
        18905
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8304": {
      "fn": "Governance.submitVerification",
      "offset": [
        18895,
        18921
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8306": {
      "fn": "Governance.submitVerification",
      "offset": [
        18895,
        18921
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8307": {
      "op": "PUSH4",
      "value": "0x31A9108F"
    },
    "8312": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "8314": {
      "op": "SHL"
    },
    "8315": {
      "fn": "Governance.submitVerification",
      "offset": [
        18895,
        18921
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8316": {
      "fn": "Governance.submitVerification",
      "offset": [
        18895,
        18921
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8317": {
      "fn": "Governance.submitVerification",
      "offset": [
        18895,
        18921
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "8319": {
      "fn": "Governance.submitVerification",
      "offset": [
        18895,
        18921
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8320": {
      "fn": "Governance.submitVerification",
      "offset": [
        18895,
        18921
      ],
      "op": "ADD",
      "path": "2"
    },
    "8321": {
      "op": "DUP6"
    },
    "8322": {
      "op": "SWAP1"
    },
    "8323": {
      "op": "MSTORE"
    },
    "8324": {
      "fn": "Governance.submitVerification",
      "offset": [
        18925,
        18935
      ],
      "op": "CALLER",
      "path": "2"
    },
    "8325": {
      "fn": "Governance.submitVerification",
      "offset": [
        18925,
        18935
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8326": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8328": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8330": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8332": {
      "op": "SHL"
    },
    "8333": {
      "op": "SUB"
    },
    "8334": {
      "fn": "Governance.submitVerification",
      "offset": [
        18895,
        18905
      ],
      "op": "AND",
      "path": "2"
    },
    "8335": {
      "fn": "Governance.submitVerification",
      "offset": [
        18895,
        18905
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8336": {
      "fn": "Governance.submitVerification",
      "offset": [
        18895,
        18913
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x6352211E"
    },
    "8341": {
      "fn": "Governance.submitVerification",
      "offset": [
        18895,
        18913
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8342": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8344": {
      "op": "ADD"
    },
    "8345": {
      "fn": "Governance.submitVerification",
      "offset": [
        18895,
        18921
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8347": {
      "fn": "Governance.submitVerification",
      "offset": [
        18895,
        18921
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8349": {
      "fn": "Governance.submitVerification",
      "offset": [
        18895,
        18921
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8350": {
      "fn": "Governance.submitVerification",
      "offset": [
        18895,
        18921
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8351": {
      "fn": "Governance.submitVerification",
      "offset": [
        18895,
        18921
      ],
      "op": "DUP4",
      "path": "2"
    },
    "8352": {
      "fn": "Governance.submitVerification",
      "offset": [
        18895,
        18921
      ],
      "op": "SUB",
      "path": "2"
    },
    "8353": {
      "fn": "Governance.submitVerification",
      "offset": [
        18895,
        18921
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8354": {
      "fn": "Governance.submitVerification",
      "offset": [
        18895,
        18921
      ],
      "op": "DUP7",
      "path": "2"
    },
    "8355": {
      "fn": "Governance.submitVerification",
      "offset": [
        18895,
        18921
      ],
      "op": "GAS",
      "path": "2"
    },
    "8356": {
      "fn": "Governance.submitVerification",
      "offset": [
        18895,
        18921
      ],
      "op": "STATICCALL",
      "path": "2"
    },
    "8357": {
      "fn": "Governance.submitVerification",
      "offset": [
        18895,
        18921
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "8358": {
      "fn": "Governance.submitVerification",
      "offset": [
        18895,
        18921
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8359": {
      "fn": "Governance.submitVerification",
      "offset": [
        18895,
        18921
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "8360": {
      "fn": "Governance.submitVerification",
      "offset": [
        18895,
        18921
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x20B5"
    },
    "8363": {
      "fn": "Governance.submitVerification",
      "offset": [
        18895,
        18921
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "8364": {
      "fn": "Governance.submitVerification",
      "offset": [
        18895,
        18921
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "8365": {
      "fn": "Governance.submitVerification",
      "offset": [
        18895,
        18921
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8367": {
      "fn": "Governance.submitVerification",
      "offset": [
        18895,
        18921
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8368": {
      "fn": "Governance.submitVerification",
      "offset": [
        18895,
        18921
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "8369": {
      "fn": "Governance.submitVerification",
      "offset": [
        18895,
        18921
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "8370": {
      "fn": "Governance.submitVerification",
      "offset": [
        18895,
        18921
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8372": {
      "fn": "Governance.submitVerification",
      "offset": [
        18895,
        18921
      ],
      "op": "REVERT",
      "path": "2"
    },
    "8373": {
      "fn": "Governance.submitVerification",
      "offset": [
        18895,
        18921
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8374": {
      "fn": "Governance.submitVerification",
      "offset": [
        18895,
        18921
      ],
      "op": "POP",
      "path": "2"
    },
    "8375": {
      "fn": "Governance.submitVerification",
      "offset": [
        18895,
        18921
      ],
      "op": "POP",
      "path": "2"
    },
    "8376": {
      "fn": "Governance.submitVerification",
      "offset": [
        18895,
        18921
      ],
      "op": "POP",
      "path": "2"
    },
    "8377": {
      "fn": "Governance.submitVerification",
      "offset": [
        18895,
        18921
      ],
      "op": "POP",
      "path": "2"
    },
    "8378": {
      "fn": "Governance.submitVerification",
      "offset": [
        18895,
        18921
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8380": {
      "fn": "Governance.submitVerification",
      "offset": [
        18895,
        18921
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8381": {
      "fn": "Governance.submitVerification",
      "offset": [
        18895,
        18921
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "8382": {
      "fn": "Governance.submitVerification",
      "offset": [
        18895,
        18921
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "8384": {
      "fn": "Governance.submitVerification",
      "offset": [
        18895,
        18921
      ],
      "op": "NOT",
      "path": "2"
    },
    "8385": {
      "fn": "Governance.submitVerification",
      "offset": [
        18895,
        18921
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "8387": {
      "fn": "Governance.submitVerification",
      "offset": [
        18895,
        18921
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8388": {
      "fn": "Governance.submitVerification",
      "offset": [
        18895,
        18921
      ],
      "op": "ADD",
      "path": "2"
    },
    "8389": {
      "fn": "Governance.submitVerification",
      "offset": [
        18895,
        18921
      ],
      "op": "AND",
      "path": "2"
    },
    "8390": {
      "fn": "Governance.submitVerification",
      "offset": [
        18895,
        18921
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8391": {
      "fn": "Governance.submitVerification",
      "offset": [
        18895,
        18921
      ],
      "op": "ADD",
      "path": "2"
    },
    "8392": {
      "fn": "Governance.submitVerification",
      "offset": [
        18895,
        18921
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8393": {
      "fn": "Governance.submitVerification",
      "offset": [
        18895,
        18921
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8395": {
      "fn": "Governance.submitVerification",
      "offset": [
        18895,
        18921
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8396": {
      "fn": "Governance.submitVerification",
      "offset": [
        18895,
        18921
      ],
      "op": "POP",
      "path": "2"
    },
    "8397": {
      "fn": "Governance.submitVerification",
      "offset": [
        18895,
        18921
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8398": {
      "fn": "Governance.submitVerification",
      "offset": [
        18895,
        18921
      ],
      "op": "ADD",
      "path": "2"
    },
    "8399": {
      "fn": "Governance.submitVerification",
      "offset": [
        18895,
        18921
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8400": {
      "fn": "Governance.submitVerification",
      "offset": [
        18895,
        18921
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x20D9"
    },
    "8403": {
      "fn": "Governance.submitVerification",
      "offset": [
        18895,
        18921
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8404": {
      "fn": "Governance.submitVerification",
      "offset": [
        18895,
        18921
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8405": {
      "fn": "Governance.submitVerification",
      "offset": [
        18895,
        18921
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3D2E"
    },
    "8408": {
      "fn": "Governance.submitVerification",
      "jump": "i",
      "offset": [
        18895,
        18921
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8409": {
      "fn": "Governance.submitVerification",
      "offset": [
        18895,
        18921
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8410": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8412": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8414": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8416": {
      "op": "SHL"
    },
    "8417": {
      "op": "SUB"
    },
    "8418": {
      "fn": "Governance.submitVerification",
      "offset": [
        18895,
        18935
      ],
      "op": "AND",
      "path": "2"
    },
    "8419": {
      "branch": 159,
      "fn": "Governance.submitVerification",
      "offset": [
        18895,
        18935
      ],
      "op": "EQ",
      "path": "2"
    },
    "8420": {
      "fn": "Governance.submitVerification",
      "offset": [
        18895,
        18972
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8421": {
      "fn": "Governance.submitVerification",
      "offset": [
        18895,
        18972
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "8422": {
      "fn": "Governance.submitVerification",
      "offset": [
        18895,
        18972
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x210A"
    },
    "8425": {
      "branch": 159,
      "fn": "Governance.submitVerification",
      "offset": [
        18895,
        18972
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "8426": {
      "op": "POP"
    },
    "8427": {
      "fn": "Governance.submitVerification",
      "offset": [
        18939,
        18953
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8429": {
      "fn": "Governance.submitVerification",
      "offset": [
        18939,
        18953
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8430": {
      "fn": "Governance.submitVerification",
      "offset": [
        18939,
        18953
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8431": {
      "fn": "Governance.submitVerification",
      "offset": [
        18939,
        18953
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8432": {
      "fn": "Governance.submitVerification",
      "offset": [
        18939,
        18944
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA"
    },
    "8434": {
      "fn": "Governance.submitVerification",
      "offset": [
        18939,
        18953
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8436": {
      "fn": "Governance.submitVerification",
      "offset": [
        18939,
        18953
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8437": {
      "fn": "Governance.submitVerification",
      "offset": [
        18939,
        18953
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8439": {
      "fn": "Governance.submitVerification",
      "offset": [
        18939,
        18953
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8440": {
      "fn": "Governance.submitVerification",
      "offset": [
        18939,
        18953
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "8441": {
      "fn": "Governance.submitVerification",
      "offset": [
        18939,
        18964
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "8443": {
      "fn": "Governance.submitVerification",
      "offset": [
        18939,
        18964
      ],
      "op": "ADD",
      "path": "2"
    },
    "8444": {
      "fn": "Governance.submitVerification",
      "offset": [
        18939,
        18964
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8445": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8447": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "8449": {
      "op": "SHL"
    },
    "8450": {
      "fn": "Governance.submitVerification",
      "offset": [
        18939,
        18964
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8451": {
      "fn": "Governance.submitVerification",
      "offset": [
        18939,
        18964
      ],
      "op": "DIV",
      "path": "2"
    },
    "8452": {
      "fn": "Governance.submitVerification",
      "offset": [
        18939,
        18964
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "8455": {
      "fn": "Governance.submitVerification",
      "offset": [
        18939,
        18964
      ],
      "op": "AND",
      "path": "2"
    },
    "8456": {
      "fn": "Governance.submitVerification",
      "offset": [
        18939,
        18972
      ],
      "op": "DUP4",
      "path": "2"
    },
    "8457": {
      "branch": 160,
      "fn": "Governance.submitVerification",
      "offset": [
        18939,
        18972
      ],
      "op": "EQ",
      "path": "2"
    },
    "8458": {
      "fn": "Governance.submitVerification",
      "offset": [
        18895,
        18972
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8459": {
      "fn": "Governance.submitVerification",
      "offset": [
        18887,
        19009
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2156"
    },
    "8462": {
      "branch": 160,
      "fn": "Governance.submitVerification",
      "offset": [
        18887,
        19009
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "8463": {
      "fn": "Governance.submitVerification",
      "offset": [
        18887,
        19009
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8465": {
      "fn": "Governance.submitVerification",
      "offset": [
        18887,
        19009
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8466": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8470": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8472": {
      "op": "SHL"
    },
    "8473": {
      "fn": "Governance.submitVerification",
      "offset": [
        18887,
        19009
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8474": {
      "fn": "Governance.submitVerification",
      "offset": [
        18887,
        19009
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8475": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8477": {
      "fn": "Governance.submitVerification",
      "offset": [
        18887,
        19009
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "8479": {
      "fn": "Governance.submitVerification",
      "offset": [
        18887,
        19009
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8480": {
      "fn": "Governance.submitVerification",
      "offset": [
        18887,
        19009
      ],
      "op": "ADD",
      "path": "2"
    },
    "8481": {
      "op": "DUP2"
    },
    "8482": {
      "op": "SWAP1"
    },
    "8483": {
      "op": "MSTORE"
    },
    "8484": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8486": {
      "op": "DUP3"
    },
    "8487": {
      "op": "ADD"
    },
    "8488": {
      "op": "MSTORE"
    },
    "8489": {
      "op": "PUSH32",
      "value": "0x4D757374206265206F776E6572206F662061737369676E65642077697A617264"
    },
    "8522": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8524": {
      "op": "DUP3"
    },
    "8525": {
      "op": "ADD"
    },
    "8526": {
      "op": "MSTORE"
    },
    "8527": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8529": {
      "op": "ADD"
    },
    "8530": {
      "fn": "Governance.submitVerification",
      "offset": [
        18887,
        19009
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE54"
    },
    "8533": {
      "op": "JUMP"
    },
    "8534": {
      "fn": "Governance.submitVerification",
      "offset": [
        18887,
        19009
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8535": {
      "fn": "Governance.submitVerification",
      "offset": [
        19044,
        19045
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 70,
      "value": "0x0"
    },
    "8537": {
      "fn": "Governance.submitVerification",
      "offset": [
        19027,
        19034
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8538": {
      "fn": "Governance.submitVerification",
      "offset": [
        19027,
        19041
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8539": {
      "branch": 161,
      "fn": "Governance.submitVerification",
      "offset": [
        19027,
        19045
      ],
      "op": "GT",
      "path": "2"
    },
    "8540": {
      "fn": "Governance.submitVerification",
      "offset": [
        19019,
        19046
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2164"
    },
    "8543": {
      "branch": 161,
      "fn": "Governance.submitVerification",
      "offset": [
        19019,
        19046
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "8544": {
      "fn": "Governance.submitVerification",
      "offset": [
        19019,
        19046
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8546": {
      "fn": "Governance.submitVerification",
      "offset": [
        19019,
        19046
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8547": {
      "fn": "Governance.submitVerification",
      "offset": [
        19019,
        19046
      ],
      "op": "REVERT",
      "path": "2"
    },
    "8548": {
      "fn": "Governance.submitVerification",
      "offset": [
        19019,
        19046
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8549": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19075
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8551": {
      "fn": "Governance.submitVerification",
      "offset": [
        19078,
        19092
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8552": {
      "fn": "Governance.submitVerification",
      "offset": [
        19078,
        19092
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8553": {
      "fn": "Governance.submitVerification",
      "offset": [
        19078,
        19092
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8554": {
      "fn": "Governance.submitVerification",
      "offset": [
        19078,
        19083
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA"
    },
    "8556": {
      "fn": "Governance.submitVerification",
      "offset": [
        19078,
        19092
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8558": {
      "fn": "Governance.submitVerification",
      "offset": [
        19078,
        19092
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8559": {
      "fn": "Governance.submitVerification",
      "offset": [
        19078,
        19092
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8561": {
      "fn": "Governance.submitVerification",
      "offset": [
        19078,
        19092
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8562": {
      "fn": "Governance.submitVerification",
      "offset": [
        19078,
        19092
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8563": {
      "fn": "Governance.submitVerification",
      "offset": [
        19078,
        19092
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "8564": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8565": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8566": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x140"
    },
    "8569": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8570": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "ADD",
      "path": "2"
    },
    "8571": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8572": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "8573": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8574": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8575": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8576": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8577": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8578": {
      "fn": "Governance.submitVerification",
      "offset": [
        19078,
        19092
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8579": {
      "fn": "Governance.submitVerification",
      "offset": [
        19078,
        19092
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8580": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x218C"
    },
    "8583": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8584": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3C5E"
    },
    "8587": {
      "fn": "Governance.submitVerification",
      "jump": "i",
      "offset": [
        19057,
        19092
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8588": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8589": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8590": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "8592": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "ADD",
      "path": "2"
    },
    "8593": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8595": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8596": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8597": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "DIV",
      "path": "2"
    },
    "8598": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "MUL",
      "path": "2"
    },
    "8599": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8601": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "ADD",
      "path": "2"
    },
    "8602": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8604": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8605": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8606": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8607": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "ADD",
      "path": "2"
    },
    "8608": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8610": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8611": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8612": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "8613": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8614": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8615": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8616": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8617": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8618": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8620": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "ADD",
      "path": "2"
    },
    "8621": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8622": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8623": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8624": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x21B8"
    },
    "8627": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8628": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3C5E"
    },
    "8631": {
      "fn": "Governance.submitVerification",
      "jump": "i",
      "offset": [
        19057,
        19092
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8632": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8633": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8634": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "8635": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2205"
    },
    "8638": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "8639": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8640": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "8642": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "LT",
      "path": "2"
    },
    "8643": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x21DA"
    },
    "8646": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "8647": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "8650": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8651": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "DUP4",
      "path": "2"
    },
    "8652": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8653": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "DIV",
      "path": "2"
    },
    "8654": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "MUL",
      "path": "2"
    },
    "8655": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "DUP4",
      "path": "2"
    },
    "8656": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8657": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8658": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8660": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "ADD",
      "path": "2"
    },
    "8661": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8662": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2205"
    },
    "8665": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8666": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8667": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8668": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "ADD",
      "path": "2"
    },
    "8669": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8670": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8671": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8673": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8674": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8676": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8678": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "8679": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8680": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8681": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8682": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8683": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8684": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8685": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8686": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "8688": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "ADD",
      "path": "2"
    },
    "8689": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8690": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8692": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "ADD",
      "path": "2"
    },
    "8693": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8694": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "DUP4",
      "path": "2"
    },
    "8695": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "GT",
      "path": "2"
    },
    "8696": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x21E8"
    },
    "8699": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "8700": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8701": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8702": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "SUB",
      "path": "2"
    },
    "8703": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "8705": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "AND",
      "path": "2"
    },
    "8706": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8707": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "ADD",
      "path": "2"
    },
    "8708": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8709": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8710": {
      "op": "POP"
    },
    "8711": {
      "op": "POP"
    },
    "8712": {
      "op": "POP"
    },
    "8713": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8714": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "DUP4",
      "path": "2"
    },
    "8715": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8716": {
      "op": "POP"
    },
    "8717": {
      "op": "POP"
    },
    "8718": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "8720": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8721": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8722": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "ADD",
      "path": "2"
    },
    "8723": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8724": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "8730": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8731": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8732": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "AND",
      "path": "2"
    },
    "8733": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8735": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "DUP5",
      "path": "2"
    },
    "8736": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "ADD",
      "path": "2"
    },
    "8737": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8738": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "8740": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "DUP5",
      "path": "2"
    },
    "8741": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "ADD",
      "path": "2"
    },
    "8742": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8743": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8745": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "DUP5",
      "path": "2"
    },
    "8746": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "ADD",
      "path": "2"
    },
    "8747": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8748": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "8750": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "DUP5",
      "path": "2"
    },
    "8751": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "ADD",
      "path": "2"
    },
    "8752": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8753": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "8755": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "DUP5",
      "path": "2"
    },
    "8756": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "ADD",
      "path": "2"
    },
    "8757": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8758": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "8760": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8761": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "8762": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "ADD",
      "path": "2"
    },
    "8763": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8764": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "8766": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8767": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "AND",
      "path": "2"
    },
    "8768": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x80"
    },
    "8770": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "DUP5",
      "path": "2"
    },
    "8771": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "ADD",
      "path": "2"
    },
    "8772": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8773": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "8776": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8777": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8778": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "DIV",
      "path": "2"
    },
    "8779": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "PUSH3",
      "path": "2",
      "value": "0xFFFFFF"
    },
    "8783": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "AND",
      "path": "2"
    },
    "8784": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA0"
    },
    "8786": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "DUP6",
      "path": "2"
    },
    "8787": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "ADD",
      "path": "2"
    },
    "8788": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8789": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8791": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8793": {
      "op": "SHL"
    },
    "8794": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8795": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "DIV",
      "path": "2"
    },
    "8796": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8798": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8800": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "8802": {
      "op": "SHL"
    },
    "8803": {
      "op": "SUB"
    },
    "8804": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "AND",
      "path": "2"
    },
    "8805": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xC0"
    },
    "8807": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "DUP6",
      "path": "2"
    },
    "8808": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "ADD",
      "path": "2"
    },
    "8809": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8810": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8812": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "8814": {
      "op": "SHL"
    },
    "8815": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8816": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "DIV",
      "path": "2"
    },
    "8817": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "8820": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8821": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8822": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "AND",
      "path": "2"
    },
    "8823": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE0"
    },
    "8825": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "DUP7",
      "path": "2"
    },
    "8826": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "ADD",
      "path": "2"
    },
    "8827": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8828": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8830": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "8832": {
      "op": "SHL"
    },
    "8833": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "DUP4",
      "path": "2"
    },
    "8834": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "DIV",
      "path": "2"
    },
    "8835": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8836": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "AND",
      "path": "2"
    },
    "8837": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8838": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "DUP7",
      "path": "2"
    },
    "8839": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "ADD",
      "path": "2"
    },
    "8840": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8841": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8843": {
      "op": "PUSH1",
      "value": "0x90"
    },
    "8845": {
      "op": "SHL"
    },
    "8846": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8847": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "8848": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "DIV",
      "path": "2"
    },
    "8849": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8850": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "8851": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "AND",
      "path": "2"
    },
    "8852": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x120"
    },
    "8855": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8856": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "8857": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "ADD",
      "path": "2"
    },
    "8858": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "8859": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8860": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "8861": {
      "fn": "Governance.submitVerification",
      "offset": [
        19057,
        19092
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8862": {
      "fn": "Governance.submitVerification",
      "offset": [
        19214,
        19230
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8863": {
      "fn": "Governance.submitVerification",
      "offset": [
        19214,
        19230
      ],
      "op": "DUP4",
      "path": "2"
    },
    "8864": {
      "fn": "Governance.submitVerification",
      "offset": [
        19214,
        19230
      ],
      "op": "ADD",
      "path": "2"
    },
    "8865": {
      "fn": "Governance.submitVerification",
      "offset": [
        19214,
        19230
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8866": {
      "fn": "Governance.submitVerification",
      "offset": [
        19214,
        19230
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "8867": {
      "fn": "Governance.submitVerification",
      "offset": [
        19214,
        19230
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "8868": {
      "op": "POP"
    },
    "8869": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8871": {
      "op": "SWAP3"
    },
    "8872": {
      "fn": "Governance.submitVerification",
      "offset": [
        19214,
        19234
      ],
      "op": "AND",
      "path": "2"
    },
    "8873": {
      "branch": 162,
      "fn": "Governance.submitVerification",
      "offset": [
        19214,
        19234
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "8874": {
      "fn": "Governance.submitVerification",
      "offset": [
        19211,
        19416
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2322"
    },
    "8877": {
      "branch": 162,
      "fn": "Governance.submitVerification",
      "offset": [
        19211,
        19416
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "8878": {
      "fn": "Governance.submitVerification",
      "offset": [
        19254,
        19263
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8880": {
      "fn": "Governance.submitVerification",
      "offset": [
        19250,
        19406
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8881": {
      "fn": "Governance.submitVerification",
      "offset": [
        19273,
        19280
      ],
      "op": "DUP5",
      "path": "2"
    },
    "8882": {
      "fn": "Governance.submitVerification",
      "offset": [
        19273,
        19287
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8883": {
      "fn": "Governance.submitVerification",
      "offset": [
        19269,
        19270
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8884": {
      "fn": "Governance.submitVerification",
      "offset": [
        19269,
        19287
      ],
      "op": "LT",
      "path": "2"
    },
    "8885": {
      "fn": "Governance.submitVerification",
      "offset": [
        19250,
        19406
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "8886": {
      "fn": "Governance.submitVerification",
      "offset": [
        19250,
        19406
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2320"
    },
    "8889": {
      "fn": "Governance.submitVerification",
      "offset": [
        19250,
        19406
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "8890": {
      "fn": "Governance.submitVerification",
      "offset": [
        19347,
        19354
      ],
      "op": "DUP5",
      "path": "2",
      "statement": 71
    },
    "8891": {
      "fn": "Governance.submitVerification",
      "offset": [
        19355,
        19356
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8892": {
      "fn": "Governance.submitVerification",
      "offset": [
        19347,
        19357
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8893": {
      "fn": "Governance.submitVerification",
      "offset": [
        19347,
        19357
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8894": {
      "fn": "Governance.submitVerification",
      "offset": [
        19347,
        19357
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8895": {
      "fn": "Governance.submitVerification",
      "offset": [
        19347,
        19357
      ],
      "op": "LT",
      "path": "2"
    },
    "8896": {
      "fn": "Governance.submitVerification",
      "offset": [
        19347,
        19357
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x22CB"
    },
    "8899": {
      "fn": "Governance.submitVerification",
      "offset": [
        19347,
        19357
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "8900": {
      "fn": "Governance.submitVerification",
      "offset": [
        19347,
        19357
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x22CB"
    },
    "8903": {
      "fn": "Governance.submitVerification",
      "offset": [
        19347,
        19357
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3C98"
    },
    "8906": {
      "fn": "Governance.submitVerification",
      "jump": "i",
      "offset": [
        19347,
        19357
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8907": {
      "fn": "Governance.submitVerification",
      "offset": [
        19347,
        19357
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8908": {
      "fn": "Governance.submitVerification",
      "offset": [
        19347,
        19357
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8910": {
      "fn": "Governance.submitVerification",
      "offset": [
        19347,
        19357
      ],
      "op": "MUL",
      "path": "2"
    },
    "8911": {
      "fn": "Governance.submitVerification",
      "offset": [
        19347,
        19357
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8913": {
      "fn": "Governance.submitVerification",
      "offset": [
        19347,
        19357
      ],
      "op": "ADD",
      "path": "2"
    },
    "8914": {
      "fn": "Governance.submitVerification",
      "offset": [
        19347,
        19357
      ],
      "op": "ADD",
      "path": "2"
    },
    "8915": {
      "fn": "Governance.submitVerification",
      "offset": [
        19347,
        19357
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8916": {
      "fn": "Governance.submitVerification",
      "offset": [
        19330,
        19358
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8918": {
      "fn": "Governance.submitVerification",
      "offset": [
        19330,
        19358
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8919": {
      "fn": "Governance.submitVerification",
      "offset": [
        19330,
        19358
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8921": {
      "fn": "Governance.submitVerification",
      "offset": [
        19330,
        19358
      ],
      "op": "ADD",
      "path": "2"
    },
    "8922": {
      "fn": "Governance.submitVerification",
      "offset": [
        19330,
        19358
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x22E5"
    },
    "8925": {
      "fn": "Governance.submitVerification",
      "offset": [
        19330,
        19358
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8926": {
      "op": "DUP2"
    },
    "8927": {
      "op": "MSTORE"
    },
    "8928": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8930": {
      "op": "ADD"
    },
    "8931": {
      "op": "SWAP1"
    },
    "8932": {
      "op": "JUMP"
    },
    "8933": {
      "fn": "Governance.submitVerification",
      "offset": [
        19330,
        19358
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8934": {
      "fn": "Governance.submitVerification",
      "offset": [
        19330,
        19358
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8936": {
      "fn": "Governance.submitVerification",
      "offset": [
        19330,
        19358
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8937": {
      "fn": "Governance.submitVerification",
      "offset": [
        19330,
        19358
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8939": {
      "fn": "Governance.submitVerification",
      "offset": [
        19330,
        19358
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8940": {
      "fn": "Governance.submitVerification",
      "offset": [
        19330,
        19358
      ],
      "op": "DUP4",
      "path": "2"
    },
    "8941": {
      "fn": "Governance.submitVerification",
      "offset": [
        19330,
        19358
      ],
      "op": "SUB",
      "path": "2"
    },
    "8942": {
      "fn": "Governance.submitVerification",
      "offset": [
        19330,
        19358
      ],
      "op": "SUB",
      "path": "2"
    },
    "8943": {
      "fn": "Governance.submitVerification",
      "offset": [
        19330,
        19358
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8944": {
      "fn": "Governance.submitVerification",
      "offset": [
        19330,
        19358
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8945": {
      "fn": "Governance.submitVerification",
      "offset": [
        19330,
        19358
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8946": {
      "fn": "Governance.submitVerification",
      "offset": [
        19330,
        19358
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8948": {
      "fn": "Governance.submitVerification",
      "offset": [
        19330,
        19358
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8949": {
      "fn": "Governance.submitVerification",
      "offset": [
        19320,
        19359
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8950": {
      "fn": "Governance.submitVerification",
      "offset": [
        19320,
        19359
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8951": {
      "fn": "Governance.submitVerification",
      "offset": [
        19320,
        19359
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8952": {
      "fn": "Governance.submitVerification",
      "offset": [
        19320,
        19359
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8954": {
      "fn": "Governance.submitVerification",
      "offset": [
        19320,
        19359
      ],
      "op": "ADD",
      "path": "2"
    },
    "8955": {
      "fn": "Governance.submitVerification",
      "offset": [
        19320,
        19359
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "8956": {
      "fn": "Governance.submitVerification",
      "offset": [
        19307,
        19314
      ],
      "op": "DUP6",
      "path": "2"
    },
    "8957": {
      "fn": "Governance.submitVerification",
      "offset": [
        19315,
        19316
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8958": {
      "fn": "Governance.submitVerification",
      "offset": [
        19307,
        19317
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8959": {
      "fn": "Governance.submitVerification",
      "offset": [
        19307,
        19317
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8960": {
      "fn": "Governance.submitVerification",
      "offset": [
        19307,
        19317
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8961": {
      "fn": "Governance.submitVerification",
      "offset": [
        19307,
        19317
      ],
      "op": "LT",
      "path": "2"
    },
    "8962": {
      "fn": "Governance.submitVerification",
      "offset": [
        19307,
        19317
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x230D"
    },
    "8965": {
      "fn": "Governance.submitVerification",
      "offset": [
        19307,
        19317
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "8966": {
      "fn": "Governance.submitVerification",
      "offset": [
        19307,
        19317
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x230D"
    },
    "8969": {
      "fn": "Governance.submitVerification",
      "offset": [
        19307,
        19317
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3C98"
    },
    "8972": {
      "fn": "Governance.submitVerification",
      "jump": "i",
      "offset": [
        19307,
        19317
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8973": {
      "fn": "Governance.submitVerification",
      "offset": [
        19307,
        19317
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8974": {
      "fn": "Governance.submitVerification",
      "offset": [
        19307,
        19317
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8976": {
      "fn": "Governance.submitVerification",
      "offset": [
        19307,
        19317
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8977": {
      "fn": "Governance.submitVerification",
      "offset": [
        19307,
        19317
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8978": {
      "fn": "Governance.submitVerification",
      "offset": [
        19307,
        19317
      ],
      "op": "MUL",
      "path": "2"
    },
    "8979": {
      "fn": "Governance.submitVerification",
      "offset": [
        19307,
        19317
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8980": {
      "fn": "Governance.submitVerification",
      "offset": [
        19307,
        19317
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8981": {
      "fn": "Governance.submitVerification",
      "offset": [
        19307,
        19317
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8982": {
      "fn": "Governance.submitVerification",
      "offset": [
        19307,
        19317
      ],
      "op": "ADD",
      "path": "2"
    },
    "8983": {
      "fn": "Governance.submitVerification",
      "offset": [
        19307,
        19317
      ],
      "op": "ADD",
      "path": "2"
    },
    "8984": {
      "fn": "Governance.submitVerification",
      "offset": [
        19307,
        19359
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8985": {
      "fn": "Governance.submitVerification",
      "offset": [
        19387,
        19390
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 72,
      "value": "0x1"
    },
    "8987": {
      "fn": "Governance.submitVerification",
      "offset": [
        19387,
        19390
      ],
      "op": "ADD",
      "path": "2"
    },
    "8988": {
      "fn": "Governance.submitVerification",
      "offset": [
        19250,
        19406
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x22B0"
    },
    "8991": {
      "fn": "Governance.submitVerification",
      "offset": [
        19250,
        19406
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8992": {
      "fn": "Governance.submitVerification",
      "offset": [
        19250,
        19406
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8993": {
      "fn": "Governance.submitVerification",
      "offset": [
        19250,
        19406
      ],
      "op": "POP",
      "path": "2"
    },
    "8994": {
      "fn": "Governance.submitVerification",
      "offset": [
        19211,
        19416
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8995": {
      "fn": "Governance.submitVerification",
      "offset": [
        19425,
        19439
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8997": {
      "fn": "Governance.submitVerification",
      "offset": [
        19469,
        19476
      ],
      "op": "DUP5",
      "path": "2"
    },
    "8998": {
      "fn": "Governance.submitVerification",
      "offset": [
        19452,
        19477
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9000": {
      "fn": "Governance.submitVerification",
      "offset": [
        19452,
        19477
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9001": {
      "fn": "Governance.submitVerification",
      "offset": [
        19452,
        19477
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "9003": {
      "fn": "Governance.submitVerification",
      "offset": [
        19452,
        19477
      ],
      "op": "ADD",
      "path": "2"
    },
    "9004": {
      "fn": "Governance.submitVerification",
      "offset": [
        19452,
        19477
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2335"
    },
    "9007": {
      "fn": "Governance.submitVerification",
      "offset": [
        19452,
        19477
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9008": {
      "fn": "Governance.submitVerification",
      "offset": [
        19452,
        19477
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9009": {
      "fn": "Governance.submitVerification",
      "offset": [
        19452,
        19477
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3CAE"
    },
    "9012": {
      "fn": "Governance.submitVerification",
      "jump": "i",
      "offset": [
        19452,
        19477
      ],
      "op": "JUMP",
      "path": "2"
    },
    "9013": {
      "fn": "Governance.submitVerification",
      "offset": [
        19452,
        19477
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9014": {
      "fn": "Governance.submitVerification",
      "offset": [
        19452,
        19477
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9016": {
      "fn": "Governance.submitVerification",
      "offset": [
        19452,
        19477
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9017": {
      "fn": "Governance.submitVerification",
      "offset": [
        19452,
        19477
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "9019": {
      "fn": "Governance.submitVerification",
      "offset": [
        19452,
        19477
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9020": {
      "fn": "Governance.submitVerification",
      "offset": [
        19452,
        19477
      ],
      "op": "DUP4",
      "path": "2"
    },
    "9021": {
      "fn": "Governance.submitVerification",
      "offset": [
        19452,
        19477
      ],
      "op": "SUB",
      "path": "2"
    },
    "9022": {
      "fn": "Governance.submitVerification",
      "offset": [
        19452,
        19477
      ],
      "op": "SUB",
      "path": "2"
    },
    "9023": {
      "fn": "Governance.submitVerification",
      "offset": [
        19452,
        19477
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9024": {
      "fn": "Governance.submitVerification",
      "offset": [
        19452,
        19477
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9025": {
      "fn": "Governance.submitVerification",
      "offset": [
        19452,
        19477
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9026": {
      "fn": "Governance.submitVerification",
      "offset": [
        19452,
        19477
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9028": {
      "fn": "Governance.submitVerification",
      "offset": [
        19452,
        19477
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9029": {
      "fn": "Governance.submitVerification",
      "offset": [
        19442,
        19478
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9030": {
      "fn": "Governance.submitVerification",
      "offset": [
        19442,
        19478
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9031": {
      "fn": "Governance.submitVerification",
      "offset": [
        19442,
        19478
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9032": {
      "fn": "Governance.submitVerification",
      "offset": [
        19442,
        19478
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "9034": {
      "fn": "Governance.submitVerification",
      "offset": [
        19442,
        19478
      ],
      "op": "ADD",
      "path": "2"
    },
    "9035": {
      "fn": "Governance.submitVerification",
      "offset": [
        19442,
        19478
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "9036": {
      "fn": "Governance.submitVerification",
      "offset": [
        19425,
        19478
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9037": {
      "fn": "Governance.submitVerification",
      "offset": [
        19425,
        19478
      ],
      "op": "POP",
      "path": "2"
    },
    "9038": {
      "fn": "Governance.submitVerification",
      "offset": [
        19489,
        19508
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9040": {
      "fn": "Governance.submitVerification",
      "offset": [
        19526,
        19532
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9041": {
      "fn": "Governance.submitVerification",
      "offset": [
        19511,
        19517
      ],
      "op": "DUP6",
      "path": "2"
    },
    "9042": {
      "fn": "Governance.submitVerification",
      "offset": [
        19511,
        19522
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9044": {
      "fn": "Governance.submitVerification",
      "offset": [
        19511,
        19522
      ],
      "op": "ADD",
      "path": "2"
    },
    "9045": {
      "fn": "Governance.submitVerification",
      "offset": [
        19511,
        19522
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9046": {
      "branch": 163,
      "fn": "Governance.submitVerification",
      "offset": [
        19511,
        19532
      ],
      "op": "EQ",
      "path": "2"
    },
    "9047": {
      "fn": "Governance.submitVerification",
      "offset": [
        19511,
        19540
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2361"
    },
    "9050": {
      "branch": 163,
      "fn": "Governance.submitVerification",
      "offset": [
        19511,
        19540
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "9051": {
      "fn": "Governance.submitVerification",
      "offset": [
        19539,
        19540
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9053": {
      "fn": "Governance.submitVerification",
      "offset": [
        19511,
        19540
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2364"
    },
    "9056": {
      "fn": "Governance.submitVerification",
      "offset": [
        19511,
        19540
      ],
      "op": "JUMP",
      "path": "2"
    },
    "9057": {
      "fn": "Governance.submitVerification",
      "offset": [
        19511,
        19540
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9058": {
      "fn": "Governance.submitVerification",
      "offset": [
        19535,
        19536
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "9060": {
      "fn": "Governance.submitVerification",
      "offset": [
        19511,
        19540
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9061": {
      "fn": "Governance.submitVerification",
      "offset": [
        19586,
        19598
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 73,
      "value": "0x20"
    },
    "9063": {
      "fn": "Governance.submitVerification",
      "offset": [
        19586,
        19598
      ],
      "op": "DUP7",
      "path": "2"
    },
    "9064": {
      "fn": "Governance.submitVerification",
      "offset": [
        19586,
        19598
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9065": {
      "fn": "Governance.submitVerification",
      "offset": [
        19586,
        19598
      ],
      "op": "ADD",
      "path": "2"
    },
    "9066": {
      "fn": "Governance.submitVerification",
      "offset": [
        19586,
        19598
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9067": {
      "fn": "Governance.submitVerification",
      "offset": [
        19556,
        19632
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9069": {
      "fn": "Governance.submitVerification",
      "offset": [
        19556,
        19632
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9070": {
      "fn": "Governance.submitVerification",
      "offset": [
        19556,
        19632
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9071": {
      "op": "DUP13"
    },
    "9072": {
      "op": "DUP2"
    },
    "9073": {
      "op": "MSTORE"
    },
    "9074": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "9080": {
      "op": "SWAP1"
    },
    "9081": {
      "op": "SWAP3"
    },
    "9082": {
      "op": "AND"
    },
    "9083": {
      "op": "SWAP3"
    },
    "9084": {
      "op": "DUP3"
    },
    "9085": {
      "op": "ADD"
    },
    "9086": {
      "op": "SWAP3"
    },
    "9087": {
      "op": "SWAP1"
    },
    "9088": {
      "op": "SWAP3"
    },
    "9089": {
      "op": "MSTORE"
    },
    "9090": {
      "op": "SWAP1"
    },
    "9091": {
      "op": "DUP2"
    },
    "9092": {
      "op": "ADD"
    },
    "9093": {
      "op": "DUP10"
    },
    "9094": {
      "op": "SWAP1"
    },
    "9095": {
      "op": "MSTORE"
    },
    "9096": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "9098": {
      "op": "DUP2"
    },
    "9099": {
      "op": "ADD"
    },
    "9100": {
      "op": "DUP5"
    },
    "9101": {
      "op": "SWAP1"
    },
    "9102": {
      "op": "MSTORE"
    },
    "9103": {
      "fn": "Governance.submitVerification",
      "offset": [
        19489,
        19540
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "9105": {
      "fn": "Governance.submitVerification",
      "offset": [
        19489,
        19540
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9106": {
      "fn": "Governance.submitVerification",
      "offset": [
        19489,
        19540
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9107": {
      "fn": "Governance.submitVerification",
      "offset": [
        19489,
        19540
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9108": {
      "fn": "Governance.submitVerification",
      "offset": [
        19489,
        19540
      ],
      "op": "AND",
      "path": "2"
    },
    "9109": {
      "fn": "Governance.submitVerification",
      "offset": [
        19630,
        19631
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "9111": {
      "fn": "Governance.submitVerification",
      "offset": [
        19617,
        19631
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9112": {
      "fn": "Governance.submitVerification",
      "offset": [
        19617,
        19631
      ],
      "op": "EQ",
      "path": "2"
    },
    "9113": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "9115": {
      "op": "DUP4"
    },
    "9116": {
      "op": "ADD"
    },
    "9117": {
      "op": "MSTORE"
    },
    "9118": {
      "fn": "Governance.submitVerification",
      "offset": [
        19489,
        19540
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9119": {
      "op": "POP"
    },
    "9120": {
      "fn": "Governance.submitVerification",
      "offset": [
        19556,
        19632
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0xE3F0E138F100DEAF328BA1DEF71C39DADE8CD971BA0074D935EE648E54532FAE"
    },
    "9153": {
      "fn": "Governance.submitVerification",
      "offset": [
        19556,
        19632
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9154": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9156": {
      "op": "ADD"
    },
    "9157": {
      "fn": "Governance.submitVerification",
      "offset": [
        19556,
        19632
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9159": {
      "fn": "Governance.submitVerification",
      "offset": [
        19556,
        19632
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9160": {
      "fn": "Governance.submitVerification",
      "offset": [
        19556,
        19632
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9161": {
      "fn": "Governance.submitVerification",
      "offset": [
        19556,
        19632
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9162": {
      "fn": "Governance.submitVerification",
      "offset": [
        19556,
        19632
      ],
      "op": "SUB",
      "path": "2"
    },
    "9163": {
      "fn": "Governance.submitVerification",
      "offset": [
        19556,
        19632
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9164": {
      "fn": "Governance.submitVerification",
      "offset": [
        19556,
        19632
      ],
      "op": "LOG1",
      "path": "2"
    },
    "9165": {
      "fn": "Governance.submitVerification",
      "offset": [
        19647,
        19658
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9166": {
      "fn": "Governance.submitVerification",
      "offset": [
        19661,
        19662
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "9168": {
      "branch": 164,
      "fn": "Governance.submitVerification",
      "offset": [
        19647,
        19662
      ],
      "op": "SUB",
      "path": "2"
    },
    "9169": {
      "fn": "Governance.submitVerification",
      "offset": [
        19643,
        22140
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2687"
    },
    "9172": {
      "branch": 164,
      "fn": "Governance.submitVerification",
      "offset": [
        19643,
        22140
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "9173": {
      "fn": "Governance.submitVerification",
      "offset": [
        19741,
        19754
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9175": {
      "fn": "Governance.submitVerification",
      "offset": [
        19772,
        19773
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "9177": {
      "fn": "Governance.submitVerification",
      "offset": [
        19757,
        19763
      ],
      "op": "DUP7",
      "path": "2"
    },
    "9178": {
      "fn": "Governance.submitVerification",
      "offset": [
        19757,
        19771
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xC0"
    },
    "9180": {
      "fn": "Governance.submitVerification",
      "offset": [
        19757,
        19771
      ],
      "op": "ADD",
      "path": "2"
    },
    "9181": {
      "fn": "Governance.submitVerification",
      "offset": [
        19757,
        19771
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9182": {
      "fn": "Governance.submitVerification",
      "offset": [
        19757,
        19773
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x23E7"
    },
    "9185": {
      "fn": "Governance.submitVerification",
      "offset": [
        19757,
        19773
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9186": {
      "fn": "Governance.submitVerification",
      "offset": [
        19757,
        19773
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9187": {
      "fn": "Governance.submitVerification",
      "offset": [
        19757,
        19773
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4173"
    },
    "9190": {
      "fn": "Governance.submitVerification",
      "jump": "i",
      "offset": [
        19757,
        19773
      ],
      "op": "JUMP",
      "path": "2"
    },
    "9191": {
      "fn": "Governance.submitVerification",
      "offset": [
        19757,
        19773
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9192": {
      "fn": "Governance.submitVerification",
      "offset": [
        19827,
        19837
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "9194": {
      "fn": "Governance.submitVerification",
      "offset": [
        19827,
        19837
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "9195": {
      "fn": "Governance.submitVerification",
      "offset": [
        19846,
        19863
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE0"
    },
    "9197": {
      "fn": "Governance.submitVerification",
      "offset": [
        19846,
        19863
      ],
      "op": "DUP9",
      "path": "2"
    },
    "9198": {
      "fn": "Governance.submitVerification",
      "offset": [
        19846,
        19863
      ],
      "op": "ADD",
      "path": "2"
    },
    "9199": {
      "fn": "Governance.submitVerification",
      "offset": [
        19846,
        19863
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9200": {
      "fn": "Governance.submitVerification",
      "offset": [
        19827,
        19864
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9202": {
      "fn": "Governance.submitVerification",
      "offset": [
        19827,
        19864
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9203": {
      "op": "PUSH4",
      "value": "0x31A9108F"
    },
    "9208": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "9210": {
      "op": "SHL"
    },
    "9211": {
      "fn": "Governance.submitVerification",
      "offset": [
        19827,
        19864
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9212": {
      "fn": "Governance.submitVerification",
      "offset": [
        19827,
        19864
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9213": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "9216": {
      "op": "SWAP1"
    },
    "9217": {
      "op": "SWAP2"
    },
    "9218": {
      "op": "AND"
    },
    "9219": {
      "fn": "Governance.submitVerification",
      "offset": [
        19827,
        19864
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "9221": {
      "fn": "Governance.submitVerification",
      "offset": [
        19827,
        19864
      ],
      "op": "DUP3",
      "path": "2"
    },
    "9222": {
      "fn": "Governance.submitVerification",
      "offset": [
        19827,
        19864
      ],
      "op": "ADD",
      "path": "2"
    },
    "9223": {
      "op": "MSTORE"
    },
    "9224": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9226": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9228": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "9230": {
      "op": "SHL"
    },
    "9231": {
      "op": "SUB"
    },
    "9232": {
      "fn": "Governance.submitVerification",
      "offset": [
        19741,
        19773
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "9233": {
      "fn": "Governance.submitVerification",
      "offset": [
        19741,
        19773
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9234": {
      "fn": "Governance.submitVerification",
      "offset": [
        19741,
        19773
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "9235": {
      "fn": "Governance.submitVerification",
      "offset": [
        19741,
        19773
      ],
      "op": "AND",
      "path": "2"
    },
    "9236": {
      "fn": "Governance.submitVerification",
      "offset": [
        19741,
        19773
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "9237": {
      "op": "POP"
    },
    "9238": {
      "fn": "Governance.submitVerification",
      "offset": [
        19787,
        19816
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9240": {
      "fn": "Governance.submitVerification",
      "offset": [
        19787,
        19816
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9241": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9243": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9245": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9247": {
      "op": "SHL"
    },
    "9248": {
      "op": "SUB"
    },
    "9249": {
      "fn": "Governance.submitVerification",
      "offset": [
        19827,
        19837
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9250": {
      "fn": "Governance.submitVerification",
      "offset": [
        19827,
        19837
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9251": {
      "fn": "Governance.submitVerification",
      "offset": [
        19827,
        19837
      ],
      "op": "AND",
      "path": "2"
    },
    "9252": {
      "fn": "Governance.submitVerification",
      "offset": [
        19827,
        19837
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9253": {
      "fn": "Governance.submitVerification",
      "offset": [
        19827,
        19845
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x6352211E"
    },
    "9258": {
      "fn": "Governance.submitVerification",
      "offset": [
        19827,
        19845
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9259": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9261": {
      "op": "ADD"
    },
    "9262": {
      "fn": "Governance.submitVerification",
      "offset": [
        19827,
        19864
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "9264": {
      "fn": "Governance.submitVerification",
      "offset": [
        19827,
        19864
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9266": {
      "fn": "Governance.submitVerification",
      "offset": [
        19827,
        19864
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9267": {
      "fn": "Governance.submitVerification",
      "offset": [
        19827,
        19864
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9268": {
      "fn": "Governance.submitVerification",
      "offset": [
        19827,
        19864
      ],
      "op": "DUP4",
      "path": "2"
    },
    "9269": {
      "fn": "Governance.submitVerification",
      "offset": [
        19827,
        19864
      ],
      "op": "SUB",
      "path": "2"
    },
    "9270": {
      "fn": "Governance.submitVerification",
      "offset": [
        19827,
        19864
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9271": {
      "fn": "Governance.submitVerification",
      "offset": [
        19827,
        19864
      ],
      "op": "DUP7",
      "path": "2"
    },
    "9272": {
      "fn": "Governance.submitVerification",
      "offset": [
        19827,
        19864
      ],
      "op": "GAS",
      "path": "2"
    },
    "9273": {
      "fn": "Governance.submitVerification",
      "offset": [
        19827,
        19864
      ],
      "op": "STATICCALL",
      "path": "2"
    },
    "9274": {
      "fn": "Governance.submitVerification",
      "offset": [
        19827,
        19864
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "9275": {
      "fn": "Governance.submitVerification",
      "offset": [
        19827,
        19864
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9276": {
      "fn": "Governance.submitVerification",
      "offset": [
        19827,
        19864
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "9277": {
      "fn": "Governance.submitVerification",
      "offset": [
        19827,
        19864
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x244A"
    },
    "9280": {
      "fn": "Governance.submitVerification",
      "offset": [
        19827,
        19864
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "9281": {
      "fn": "Governance.submitVerification",
      "offset": [
        19827,
        19864
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "9282": {
      "fn": "Governance.submitVerification",
      "offset": [
        19827,
        19864
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9284": {
      "fn": "Governance.submitVerification",
      "offset": [
        19827,
        19864
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9285": {
      "fn": "Governance.submitVerification",
      "offset": [
        19827,
        19864
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "9286": {
      "fn": "Governance.submitVerification",
      "offset": [
        19827,
        19864
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "9287": {
      "fn": "Governance.submitVerification",
      "offset": [
        19827,
        19864
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9289": {
      "fn": "Governance.submitVerification",
      "offset": [
        19827,
        19864
      ],
      "op": "REVERT",
      "path": "2"
    },
    "9290": {
      "fn": "Governance.submitVerification",
      "offset": [
        19827,
        19864
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9291": {
      "fn": "Governance.submitVerification",
      "offset": [
        19827,
        19864
      ],
      "op": "POP",
      "path": "2"
    },
    "9292": {
      "fn": "Governance.submitVerification",
      "offset": [
        19827,
        19864
      ],
      "op": "POP",
      "path": "2"
    },
    "9293": {
      "fn": "Governance.submitVerification",
      "offset": [
        19827,
        19864
      ],
      "op": "POP",
      "path": "2"
    },
    "9294": {
      "fn": "Governance.submitVerification",
      "offset": [
        19827,
        19864
      ],
      "op": "POP",
      "path": "2"
    },
    "9295": {
      "fn": "Governance.submitVerification",
      "offset": [
        19827,
        19864
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9297": {
      "fn": "Governance.submitVerification",
      "offset": [
        19827,
        19864
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9298": {
      "fn": "Governance.submitVerification",
      "offset": [
        19827,
        19864
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "9299": {
      "fn": "Governance.submitVerification",
      "offset": [
        19827,
        19864
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "9301": {
      "fn": "Governance.submitVerification",
      "offset": [
        19827,
        19864
      ],
      "op": "NOT",
      "path": "2"
    },
    "9302": {
      "fn": "Governance.submitVerification",
      "offset": [
        19827,
        19864
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "9304": {
      "fn": "Governance.submitVerification",
      "offset": [
        19827,
        19864
      ],
      "op": "DUP3",
      "path": "2"
    },
    "9305": {
      "fn": "Governance.submitVerification",
      "offset": [
        19827,
        19864
      ],
      "op": "ADD",
      "path": "2"
    },
    "9306": {
      "fn": "Governance.submitVerification",
      "offset": [
        19827,
        19864
      ],
      "op": "AND",
      "path": "2"
    },
    "9307": {
      "fn": "Governance.submitVerification",
      "offset": [
        19827,
        19864
      ],
      "op": "DUP3",
      "path": "2"
    },
    "9308": {
      "fn": "Governance.submitVerification",
      "offset": [
        19827,
        19864
      ],
      "op": "ADD",
      "path": "2"
    },
    "9309": {
      "fn": "Governance.submitVerification",
      "offset": [
        19827,
        19864
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9310": {
      "fn": "Governance.submitVerification",
      "offset": [
        19827,
        19864
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9312": {
      "fn": "Governance.submitVerification",
      "offset": [
        19827,
        19864
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9313": {
      "fn": "Governance.submitVerification",
      "offset": [
        19827,
        19864
      ],
      "op": "POP",
      "path": "2"
    },
    "9314": {
      "fn": "Governance.submitVerification",
      "offset": [
        19827,
        19864
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9315": {
      "fn": "Governance.submitVerification",
      "offset": [
        19827,
        19864
      ],
      "op": "ADD",
      "path": "2"
    },
    "9316": {
      "fn": "Governance.submitVerification",
      "offset": [
        19827,
        19864
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9317": {
      "fn": "Governance.submitVerification",
      "offset": [
        19827,
        19864
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x246E"
    },
    "9320": {
      "fn": "Governance.submitVerification",
      "offset": [
        19827,
        19864
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9321": {
      "fn": "Governance.submitVerification",
      "offset": [
        19827,
        19864
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9322": {
      "fn": "Governance.submitVerification",
      "offset": [
        19827,
        19864
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3D2E"
    },
    "9325": {
      "fn": "Governance.submitVerification",
      "jump": "i",
      "offset": [
        19827,
        19864
      ],
      "op": "JUMP",
      "path": "2"
    },
    "9326": {
      "fn": "Governance.submitVerification",
      "offset": [
        19827,
        19864
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9327": {
      "fn": "Governance.submitVerification",
      "offset": [
        19933,
        19943
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 74,
      "value": "0x2"
    },
    "9329": {
      "fn": "Governance.submitVerification",
      "offset": [
        19933,
        19943
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "9330": {
      "fn": "Governance.submitVerification",
      "offset": [
        19955,
        19967
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "9332": {
      "fn": "Governance.submitVerification",
      "offset": [
        19955,
        19967
      ],
      "op": "DUP10",
      "path": "2"
    },
    "9333": {
      "fn": "Governance.submitVerification",
      "offset": [
        19955,
        19967
      ],
      "op": "ADD",
      "path": "2"
    },
    "9334": {
      "fn": "Governance.submitVerification",
      "offset": [
        19955,
        19967
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9335": {
      "fn": "Governance.submitVerification",
      "offset": [
        19969,
        19985
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA0"
    },
    "9337": {
      "fn": "Governance.submitVerification",
      "offset": [
        19969,
        19985
      ],
      "op": "DUP11",
      "path": "2"
    },
    "9338": {
      "fn": "Governance.submitVerification",
      "offset": [
        19969,
        19985
      ],
      "op": "ADD",
      "path": "2"
    },
    "9339": {
      "fn": "Governance.submitVerification",
      "offset": [
        19969,
        19985
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9340": {
      "fn": "Governance.submitVerification",
      "offset": [
        19933,
        19986
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9342": {
      "fn": "Governance.submitVerification",
      "offset": [
        19933,
        19986
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9343": {
      "op": "PUSH4",
      "value": "0x8AD4D6A5"
    },
    "9348": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9350": {
      "op": "SHL"
    },
    "9351": {
      "fn": "Governance.submitVerification",
      "offset": [
        19933,
        19986
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9352": {
      "fn": "Governance.submitVerification",
      "offset": [
        19933,
        19986
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9353": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "9359": {
      "op": "SWAP1"
    },
    "9360": {
      "op": "SWAP3"
    },
    "9361": {
      "op": "AND"
    },
    "9362": {
      "fn": "Governance.submitVerification",
      "offset": [
        19933,
        19986
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "9364": {
      "fn": "Governance.submitVerification",
      "offset": [
        19933,
        19986
      ],
      "op": "DUP4",
      "path": "2"
    },
    "9365": {
      "fn": "Governance.submitVerification",
      "offset": [
        19933,
        19986
      ],
      "op": "ADD",
      "path": "2"
    },
    "9366": {
      "op": "MSTORE"
    },
    "9367": {
      "op": "PUSH3",
      "value": "0xFFFFFF"
    },
    "9371": {
      "op": "AND"
    },
    "9372": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9374": {
      "op": "DUP3"
    },
    "9375": {
      "op": "ADD"
    },
    "9376": {
      "op": "MSTORE"
    },
    "9377": {
      "fn": "Governance.submitVerification",
      "offset": [
        19787,
        19865
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9378": {
      "fn": "Governance.submitVerification",
      "offset": [
        19787,
        19865
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "9379": {
      "op": "POP"
    },
    "9380": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9382": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9384": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9386": {
      "op": "SHL"
    },
    "9387": {
      "op": "SUB"
    },
    "9388": {
      "fn": "Governance.submitVerification",
      "offset": [
        19933,
        19943
      ],
      "op": "AND",
      "path": "2"
    },
    "9389": {
      "fn": "Governance.submitVerification",
      "offset": [
        19933,
        19943
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9390": {
      "fn": "Governance.submitVerification",
      "offset": [
        19933,
        19954
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x8AD4D6A5"
    },
    "9395": {
      "fn": "Governance.submitVerification",
      "offset": [
        19933,
        19954
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9396": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9398": {
      "op": "ADD"
    },
    "9399": {
      "fn": "Governance.submitVerification",
      "offset": [
        19933,
        19986
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9401": {
      "fn": "Governance.submitVerification",
      "offset": [
        19933,
        19986
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9403": {
      "fn": "Governance.submitVerification",
      "offset": [
        19933,
        19986
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9404": {
      "fn": "Governance.submitVerification",
      "offset": [
        19933,
        19986
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9405": {
      "fn": "Governance.submitVerification",
      "offset": [
        19933,
        19986
      ],
      "op": "DUP4",
      "path": "2"
    },
    "9406": {
      "fn": "Governance.submitVerification",
      "offset": [
        19933,
        19986
      ],
      "op": "SUB",
      "path": "2"
    },
    "9407": {
      "fn": "Governance.submitVerification",
      "offset": [
        19933,
        19986
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9408": {
      "fn": "Governance.submitVerification",
      "offset": [
        19933,
        19986
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9410": {
      "fn": "Governance.submitVerification",
      "offset": [
        19933,
        19986
      ],
      "op": "DUP8",
      "path": "2"
    },
    "9411": {
      "fn": "Governance.submitVerification",
      "offset": [
        19933,
        19986
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9412": {
      "fn": "Governance.submitVerification",
      "offset": [
        19933,
        19986
      ],
      "op": "EXTCODESIZE",
      "path": "2"
    },
    "9413": {
      "fn": "Governance.submitVerification",
      "offset": [
        19933,
        19986
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "9414": {
      "fn": "Governance.submitVerification",
      "offset": [
        19933,
        19986
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9415": {
      "fn": "Governance.submitVerification",
      "offset": [
        19933,
        19986
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "9416": {
      "fn": "Governance.submitVerification",
      "offset": [
        19933,
        19986
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x24D0"
    },
    "9419": {
      "fn": "Governance.submitVerification",
      "offset": [
        19933,
        19986
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "9420": {
      "fn": "Governance.submitVerification",
      "offset": [
        19933,
        19986
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9422": {
      "fn": "Governance.submitVerification",
      "offset": [
        19933,
        19986
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9423": {
      "fn": "Governance.submitVerification",
      "offset": [
        19933,
        19986
      ],
      "op": "REVERT",
      "path": "2"
    },
    "9424": {
      "fn": "Governance.submitVerification",
      "offset": [
        19933,
        19986
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9425": {
      "fn": "Governance.submitVerification",
      "offset": [
        19933,
        19986
      ],
      "op": "POP",
      "path": "2"
    },
    "9426": {
      "fn": "Governance.submitVerification",
      "offset": [
        19933,
        19986
      ],
      "op": "GAS",
      "path": "2"
    },
    "9427": {
      "fn": "Governance.submitVerification",
      "offset": [
        19933,
        19986
      ],
      "op": "CALL",
      "path": "2"
    },
    "9428": {
      "fn": "Governance.submitVerification",
      "offset": [
        19933,
        19986
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "9429": {
      "fn": "Governance.submitVerification",
      "offset": [
        19933,
        19986
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9430": {
      "fn": "Governance.submitVerification",
      "offset": [
        19933,
        19986
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "9431": {
      "fn": "Governance.submitVerification",
      "offset": [
        19933,
        19986
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x24E4"
    },
    "9434": {
      "fn": "Governance.submitVerification",
      "offset": [
        19933,
        19986
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "9435": {
      "fn": "Governance.submitVerification",
      "offset": [
        19933,
        19986
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "9436": {
      "fn": "Governance.submitVerification",
      "offset": [
        19933,
        19986
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9438": {
      "fn": "Governance.submitVerification",
      "offset": [
        19933,
        19986
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9439": {
      "fn": "Governance.submitVerification",
      "offset": [
        19933,
        19986
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "9440": {
      "fn": "Governance.submitVerification",
      "offset": [
        19933,
        19986
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "9441": {
      "fn": "Governance.submitVerification",
      "offset": [
        19933,
        19986
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9443": {
      "fn": "Governance.submitVerification",
      "offset": [
        19933,
        19986
      ],
      "op": "REVERT",
      "path": "2"
    },
    "9444": {
      "fn": "Governance.submitVerification",
      "offset": [
        19933,
        19986
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9445": {
      "op": "POP"
    },
    "9446": {
      "op": "POP"
    },
    "9447": {
      "fn": "Governance.submitVerification",
      "offset": [
        20000,
        20010
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 75,
      "value": "0x2"
    },
    "9449": {
      "fn": "Governance.submitVerification",
      "offset": [
        20000,
        20010
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "9450": {
      "fn": "Governance.submitVerification",
      "offset": [
        20022,
        20039
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE0"
    },
    "9452": {
      "fn": "Governance.submitVerification",
      "offset": [
        20022,
        20039
      ],
      "op": "DUP11",
      "path": "2"
    },
    "9453": {
      "fn": "Governance.submitVerification",
      "offset": [
        20022,
        20039
      ],
      "op": "ADD",
      "path": "2"
    },
    "9454": {
      "fn": "Governance.submitVerification",
      "offset": [
        20022,
        20039
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9455": {
      "fn": "Governance.submitVerification",
      "offset": [
        20041,
        20066
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xD"
    },
    "9457": {
      "fn": "Governance.submitVerification",
      "offset": [
        20041,
        20066
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "9458": {
      "fn": "Governance.submitVerification",
      "offset": [
        20000,
        20067
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9460": {
      "fn": "Governance.submitVerification",
      "offset": [
        20000,
        20067
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9461": {
      "op": "PUSH4",
      "value": "0x8AD4D6A5"
    },
    "9466": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9468": {
      "op": "SHL"
    },
    "9469": {
      "fn": "Governance.submitVerification",
      "offset": [
        20000,
        20067
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9470": {
      "fn": "Governance.submitVerification",
      "offset": [
        20000,
        20067
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9471": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "9474": {
      "op": "SWAP1"
    },
    "9475": {
      "op": "SWAP3"
    },
    "9476": {
      "op": "AND"
    },
    "9477": {
      "fn": "Governance.submitVerification",
      "offset": [
        20000,
        20067
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "9479": {
      "fn": "Governance.submitVerification",
      "offset": [
        20000,
        20067
      ],
      "op": "DUP4",
      "path": "2"
    },
    "9480": {
      "fn": "Governance.submitVerification",
      "offset": [
        20000,
        20067
      ],
      "op": "ADD",
      "path": "2"
    },
    "9481": {
      "op": "MSTORE"
    },
    "9482": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9484": {
      "op": "DUP3"
    },
    "9485": {
      "op": "ADD"
    },
    "9486": {
      "op": "MSTORE"
    },
    "9487": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9489": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9491": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9493": {
      "op": "SHL"
    },
    "9494": {
      "op": "SUB"
    },
    "9495": {
      "fn": "Governance.submitVerification",
      "offset": [
        20000,
        20010
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9496": {
      "fn": "Governance.submitVerification",
      "offset": [
        20000,
        20010
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9497": {
      "fn": "Governance.submitVerification",
      "offset": [
        20000,
        20010
      ],
      "op": "AND",
      "path": "2"
    },
    "9498": {
      "fn": "Governance.submitVerification",
      "offset": [
        20000,
        20010
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "9499": {
      "op": "POP"
    },
    "9500": {
      "fn": "Governance.submitVerification",
      "offset": [
        20000,
        20021
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x8AD4D6A5"
    },
    "9505": {
      "fn": "Governance.submitVerification",
      "offset": [
        20000,
        20021
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9506": {
      "op": "POP"
    },
    "9507": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9509": {
      "op": "ADD"
    },
    "9510": {
      "fn": "Governance.submitVerification",
      "offset": [
        20000,
        20067
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9511": {
      "fn": "Governance.submitVerification",
      "offset": [
        20000,
        20067
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9513": {
      "fn": "Governance.submitVerification",
      "offset": [
        20000,
        20067
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9515": {
      "fn": "Governance.submitVerification",
      "offset": [
        20000,
        20067
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9516": {
      "fn": "Governance.submitVerification",
      "offset": [
        20000,
        20067
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9517": {
      "fn": "Governance.submitVerification",
      "offset": [
        20000,
        20067
      ],
      "op": "DUP4",
      "path": "2"
    },
    "9518": {
      "fn": "Governance.submitVerification",
      "offset": [
        20000,
        20067
      ],
      "op": "SUB",
      "path": "2"
    },
    "9519": {
      "fn": "Governance.submitVerification",
      "offset": [
        20000,
        20067
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9520": {
      "fn": "Governance.submitVerification",
      "offset": [
        20000,
        20067
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9522": {
      "fn": "Governance.submitVerification",
      "offset": [
        20000,
        20067
      ],
      "op": "DUP8",
      "path": "2"
    },
    "9523": {
      "fn": "Governance.submitVerification",
      "offset": [
        20000,
        20067
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9524": {
      "fn": "Governance.submitVerification",
      "offset": [
        20000,
        20067
      ],
      "op": "EXTCODESIZE",
      "path": "2"
    },
    "9525": {
      "fn": "Governance.submitVerification",
      "offset": [
        20000,
        20067
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "9526": {
      "fn": "Governance.submitVerification",
      "offset": [
        20000,
        20067
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9527": {
      "fn": "Governance.submitVerification",
      "offset": [
        20000,
        20067
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "9528": {
      "fn": "Governance.submitVerification",
      "offset": [
        20000,
        20067
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2540"
    },
    "9531": {
      "fn": "Governance.submitVerification",
      "offset": [
        20000,
        20067
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "9532": {
      "fn": "Governance.submitVerification",
      "offset": [
        20000,
        20067
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9534": {
      "fn": "Governance.submitVerification",
      "offset": [
        20000,
        20067
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9535": {
      "fn": "Governance.submitVerification",
      "offset": [
        20000,
        20067
      ],
      "op": "REVERT",
      "path": "2"
    },
    "9536": {
      "fn": "Governance.submitVerification",
      "offset": [
        20000,
        20067
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9537": {
      "fn": "Governance.submitVerification",
      "offset": [
        20000,
        20067
      ],
      "op": "POP",
      "path": "2"
    },
    "9538": {
      "fn": "Governance.submitVerification",
      "offset": [
        20000,
        20067
      ],
      "op": "GAS",
      "path": "2"
    },
    "9539": {
      "fn": "Governance.submitVerification",
      "offset": [
        20000,
        20067
      ],
      "op": "CALL",
      "path": "2"
    },
    "9540": {
      "fn": "Governance.submitVerification",
      "offset": [
        20000,
        20067
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "9541": {
      "fn": "Governance.submitVerification",
      "offset": [
        20000,
        20067
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9542": {
      "fn": "Governance.submitVerification",
      "offset": [
        20000,
        20067
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "9543": {
      "fn": "Governance.submitVerification",
      "offset": [
        20000,
        20067
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2554"
    },
    "9546": {
      "fn": "Governance.submitVerification",
      "offset": [
        20000,
        20067
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "9547": {
      "fn": "Governance.submitVerification",
      "offset": [
        20000,
        20067
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "9548": {
      "fn": "Governance.submitVerification",
      "offset": [
        20000,
        20067
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9550": {
      "fn": "Governance.submitVerification",
      "offset": [
        20000,
        20067
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9551": {
      "fn": "Governance.submitVerification",
      "offset": [
        20000,
        20067
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "9552": {
      "fn": "Governance.submitVerification",
      "offset": [
        20000,
        20067
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "9553": {
      "fn": "Governance.submitVerification",
      "offset": [
        20000,
        20067
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9555": {
      "fn": "Governance.submitVerification",
      "offset": [
        20000,
        20067
      ],
      "op": "REVERT",
      "path": "2"
    },
    "9556": {
      "fn": "Governance.submitVerification",
      "offset": [
        20000,
        20067
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9557": {
      "op": "POP"
    },
    "9558": {
      "op": "POP"
    },
    "9559": {
      "op": "POP"
    },
    "9560": {
      "fn": "Governance.submitVerification",
      "offset": [
        20151,
        20165
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 76,
      "value": "0x0"
    },
    "9562": {
      "fn": "Governance.submitVerification",
      "offset": [
        20151,
        20165
      ],
      "op": "DUP11",
      "path": "2"
    },
    "9563": {
      "fn": "Governance.submitVerification",
      "offset": [
        20151,
        20165
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9564": {
      "fn": "Governance.submitVerification",
      "offset": [
        20151,
        20165
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9565": {
      "fn": "Governance.submitVerification",
      "offset": [
        20151,
        20156
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA"
    },
    "9567": {
      "fn": "Governance.submitVerification",
      "offset": [
        20151,
        20165
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "9569": {
      "fn": "Governance.submitVerification",
      "offset": [
        20151,
        20165
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9570": {
      "fn": "Governance.submitVerification",
      "offset": [
        20151,
        20165
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9572": {
      "fn": "Governance.submitVerification",
      "offset": [
        20151,
        20165
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9573": {
      "fn": "Governance.submitVerification",
      "offset": [
        20151,
        20165
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "9574": {
      "fn": "Governance.submitVerification",
      "offset": [
        20151,
        20165
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9575": {
      "op": "POP"
    },
    "9576": {
      "fn": "Governance.submitVerification",
      "offset": [
        20144,
        20165
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2571"
    },
    "9579": {
      "fn": "Governance.submitVerification",
      "offset": [
        20151,
        20165
      ],
      "op": "DUP3",
      "path": "2"
    },
    "9580": {
      "fn": "Governance.submitVerification",
      "offset": [
        20151,
        20165
      ],
      "op": "DUP3",
      "path": "2"
    },
    "9581": {
      "fn": "Governance.submitVerification",
      "offset": [
        20144,
        20165
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x33CD"
    },
    "9584": {
      "fn": "Governance.submitVerification",
      "jump": "i",
      "offset": [
        20144,
        20165
      ],
      "op": "JUMP",
      "path": "2"
    },
    "9585": {
      "fn": "Governance.submitVerification",
      "offset": [
        20144,
        20165
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9586": {
      "op": "POP"
    },
    "9587": {
      "fn": "Governance.submitVerification",
      "offset": [
        20144,
        20165
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "9589": {
      "fn": "Governance.submitVerification",
      "offset": [
        20144,
        20165
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9590": {
      "fn": "Governance.submitVerification",
      "offset": [
        20144,
        20165
      ],
      "op": "ADD",
      "path": "2"
    },
    "9591": {
      "fn": "Governance.submitVerification",
      "offset": [
        20144,
        20165
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9592": {
      "fn": "Governance.submitVerification",
      "offset": [
        20144,
        20165
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "9593": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "9599": {
      "op": "NOT"
    },
    "9600": {
      "fn": "Governance.submitVerification",
      "offset": [
        20144,
        20165
      ],
      "op": "AND",
      "path": "2"
    },
    "9601": {
      "fn": "Governance.submitVerification",
      "offset": [
        20144,
        20165
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9602": {
      "fn": "Governance.submitVerification",
      "offset": [
        20144,
        20165
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "9603": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9605": {
      "fn": "Governance.submitVerification",
      "offset": [
        20144,
        20165
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "9607": {
      "fn": "Governance.submitVerification",
      "offset": [
        20144,
        20165
      ],
      "op": "DUP3",
      "path": "2"
    },
    "9608": {
      "fn": "Governance.submitVerification",
      "offset": [
        20144,
        20165
      ],
      "op": "ADD",
      "path": "2"
    },
    "9609": {
      "fn": "Governance.submitVerification",
      "offset": [
        20144,
        20165
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9610": {
      "fn": "Governance.submitVerification",
      "offset": [
        20144,
        20165
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9611": {
      "fn": "Governance.submitVerification",
      "offset": [
        20144,
        20165
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "9612": {
      "fn": "Governance.submitVerification",
      "offset": [
        20144,
        20165
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "9614": {
      "fn": "Governance.submitVerification",
      "offset": [
        20144,
        20165
      ],
      "op": "DUP3",
      "path": "2"
    },
    "9615": {
      "fn": "Governance.submitVerification",
      "offset": [
        20144,
        20165
      ],
      "op": "ADD",
      "path": "2"
    },
    "9616": {
      "fn": "Governance.submitVerification",
      "offset": [
        20144,
        20165
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9617": {
      "fn": "Governance.submitVerification",
      "offset": [
        20144,
        20165
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9618": {
      "fn": "Governance.submitVerification",
      "offset": [
        20144,
        20165
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "9619": {
      "fn": "Governance.submitVerification",
      "offset": [
        20144,
        20165
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "9621": {
      "fn": "Governance.submitVerification",
      "offset": [
        20144,
        20165
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9622": {
      "fn": "Governance.submitVerification",
      "offset": [
        20144,
        20165
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9623": {
      "fn": "Governance.submitVerification",
      "offset": [
        20144,
        20165
      ],
      "op": "ADD",
      "path": "2"
    },
    "9624": {
      "fn": "Governance.submitVerification",
      "offset": [
        20144,
        20165
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9625": {
      "fn": "Governance.submitVerification",
      "offset": [
        20144,
        20165
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "9626": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9628": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9630": {
      "op": "PUSH1",
      "value": "0xB8"
    },
    "9632": {
      "op": "SHL"
    },
    "9633": {
      "op": "SUB"
    },
    "9634": {
      "op": "NOT"
    },
    "9635": {
      "fn": "Governance.submitVerification",
      "offset": [
        20144,
        20165
      ],
      "op": "AND",
      "path": "2"
    },
    "9636": {
      "fn": "Governance.submitVerification",
      "offset": [
        20144,
        20165
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9637": {
      "fn": "Governance.submitVerification",
      "offset": [
        20144,
        20165
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "9638": {
      "fn": "Governance.submitVerification",
      "offset": [
        20251,
        20287
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9640": {
      "fn": "Governance.submitVerification",
      "offset": [
        20251,
        20287
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9641": {
      "op": "DUP2"
    },
    "9642": {
      "op": "SWAP1"
    },
    "9643": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9645": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9647": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9649": {
      "op": "SHL"
    },
    "9650": {
      "op": "SUB"
    },
    "9651": {
      "fn": "Governance.submitVerification",
      "offset": [
        20251,
        20269
      ],
      "op": "DUP5",
      "path": "2"
    },
    "9652": {
      "fn": "Governance.submitVerification",
      "offset": [
        20251,
        20269
      ],
      "op": "AND",
      "path": "2"
    },
    "9653": {
      "fn": "Governance.submitVerification",
      "offset": [
        20251,
        20269
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9654": {
      "fn": "Governance.submitVerification",
      "offset": [
        20277,
        20282
      ],
      "op": "DUP6",
      "path": "2"
    },
    "9655": {
      "fn": "Governance.submitVerification",
      "offset": [
        20277,
        20282
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9656": {
      "op": "DUP4"
    },
    "9657": {
      "fn": "Governance.submitVerification",
      "offset": [
        20251,
        20287
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9658": {
      "op": "DUP2"
    },
    "9659": {
      "fn": "Governance.submitVerification",
      "offset": [
        20251,
        20287
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9660": {
      "fn": "Governance.submitVerification",
      "offset": [
        20277,
        20282
      ],
      "op": "DUP6",
      "path": "2"
    },
    "9661": {
      "fn": "Governance.submitVerification",
      "offset": [
        20251,
        20269
      ],
      "op": "DUP8",
      "path": "2"
    },
    "9662": {
      "fn": "Governance.submitVerification",
      "offset": [
        20251,
        20287
      ],
      "op": "GAS",
      "path": "2"
    },
    "9663": {
      "fn": "Governance.submitVerification",
      "offset": [
        20251,
        20287
      ],
      "op": "CALL",
      "path": "2"
    },
    "9664": {
      "fn": "Governance.submitVerification",
      "offset": [
        20251,
        20287
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "9665": {
      "fn": "Governance.submitVerification",
      "offset": [
        20251,
        20287
      ],
      "op": "POP",
      "path": "2"
    },
    "9666": {
      "fn": "Governance.submitVerification",
      "offset": [
        20251,
        20287
      ],
      "op": "POP",
      "path": "2"
    },
    "9667": {
      "fn": "Governance.submitVerification",
      "offset": [
        20251,
        20287
      ],
      "op": "POP",
      "path": "2"
    },
    "9668": {
      "fn": "Governance.submitVerification",
      "offset": [
        20251,
        20287
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "9669": {
      "fn": "Governance.submitVerification",
      "offset": [
        20251,
        20287
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9670": {
      "fn": "Governance.submitVerification",
      "offset": [
        20251,
        20287
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9672": {
      "fn": "Governance.submitVerification",
      "offset": [
        20251,
        20287
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9673": {
      "fn": "Governance.submitVerification",
      "offset": [
        20251,
        20287
      ],
      "op": "EQ",
      "path": "2"
    },
    "9674": {
      "fn": "Governance.submitVerification",
      "offset": [
        20251,
        20287
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x25EF"
    },
    "9677": {
      "fn": "Governance.submitVerification",
      "offset": [
        20251,
        20287
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "9678": {
      "fn": "Governance.submitVerification",
      "offset": [
        20251,
        20287
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9680": {
      "fn": "Governance.submitVerification",
      "offset": [
        20251,
        20287
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9681": {
      "fn": "Governance.submitVerification",
      "offset": [
        20251,
        20287
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9682": {
      "fn": "Governance.submitVerification",
      "offset": [
        20251,
        20287
      ],
      "op": "POP",
      "path": "2"
    },
    "9683": {
      "fn": "Governance.submitVerification",
      "offset": [
        20251,
        20287
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "9685": {
      "fn": "Governance.submitVerification",
      "offset": [
        20251,
        20287
      ],
      "op": "NOT",
      "path": "2"
    },
    "9686": {
      "fn": "Governance.submitVerification",
      "offset": [
        20251,
        20287
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3F"
    },
    "9688": {
      "fn": "Governance.submitVerification",
      "offset": [
        20251,
        20287
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "9689": {
      "fn": "Governance.submitVerification",
      "offset": [
        20251,
        20287
      ],
      "op": "ADD",
      "path": "2"
    },
    "9690": {
      "fn": "Governance.submitVerification",
      "offset": [
        20251,
        20287
      ],
      "op": "AND",
      "path": "2"
    },
    "9691": {
      "fn": "Governance.submitVerification",
      "offset": [
        20251,
        20287
      ],
      "op": "DUP3",
      "path": "2"
    },
    "9692": {
      "fn": "Governance.submitVerification",
      "offset": [
        20251,
        20287
      ],
      "op": "ADD",
      "path": "2"
    },
    "9693": {
      "fn": "Governance.submitVerification",
      "offset": [
        20251,
        20287
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9695": {
      "fn": "Governance.submitVerification",
      "offset": [
        20251,
        20287
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9696": {
      "fn": "Governance.submitVerification",
      "offset": [
        20251,
        20287
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "9697": {
      "fn": "Governance.submitVerification",
      "offset": [
        20251,
        20287
      ],
      "op": "DUP3",
      "path": "2"
    },
    "9698": {
      "fn": "Governance.submitVerification",
      "offset": [
        20251,
        20287
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9699": {
      "fn": "Governance.submitVerification",
      "offset": [
        20251,
        20287
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "9700": {
      "fn": "Governance.submitVerification",
      "offset": [
        20251,
        20287
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9702": {
      "fn": "Governance.submitVerification",
      "offset": [
        20251,
        20287
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "9704": {
      "fn": "Governance.submitVerification",
      "offset": [
        20251,
        20287
      ],
      "op": "DUP5",
      "path": "2"
    },
    "9705": {
      "fn": "Governance.submitVerification",
      "offset": [
        20251,
        20287
      ],
      "op": "ADD",
      "path": "2"
    },
    "9706": {
      "fn": "Governance.submitVerification",
      "offset": [
        20251,
        20287
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "9707": {
      "fn": "Governance.submitVerification",
      "offset": [
        20251,
        20287
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x25F4"
    },
    "9710": {
      "fn": "Governance.submitVerification",
      "offset": [
        20251,
        20287
      ],
      "op": "JUMP",
      "path": "2"
    },
    "9711": {
      "fn": "Governance.submitVerification",
      "offset": [
        20251,
        20287
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9712": {
      "fn": "Governance.submitVerification",
      "offset": [
        20251,
        20287
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "9714": {
      "fn": "Governance.submitVerification",
      "offset": [
        20251,
        20287
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9715": {
      "fn": "Governance.submitVerification",
      "offset": [
        20251,
        20287
      ],
      "op": "POP",
      "path": "2"
    },
    "9716": {
      "fn": "Governance.submitVerification",
      "offset": [
        20251,
        20287
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9717": {
      "fn": "Governance.submitVerification",
      "offset": [
        20251,
        20287
      ],
      "op": "POP",
      "path": "2"
    },
    "9718": {
      "fn": "Governance.submitVerification",
      "offset": [
        20218,
        20287
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9719": {
      "fn": "Governance.submitVerification",
      "offset": [
        20218,
        20287
      ],
      "op": "POP",
      "path": "2"
    },
    "9720": {
      "fn": "Governance.submitVerification",
      "offset": [
        20218,
        20287
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9721": {
      "fn": "Governance.submitVerification",
      "offset": [
        20218,
        20287
      ],
      "op": "POP",
      "path": "2"
    },
    "9722": {
      "branch": 165,
      "fn": "Governance.submitVerification",
      "offset": [
        20309,
        20313
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 77
    },
    "9723": {
      "fn": "Governance.submitVerification",
      "offset": [
        20301,
        20338
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2616"
    },
    "9726": {
      "branch": 165,
      "fn": "Governance.submitVerification",
      "offset": [
        20301,
        20338
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "9727": {
      "fn": "Governance.submitVerification",
      "offset": [
        20301,
        20338
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9729": {
      "fn": "Governance.submitVerification",
      "offset": [
        20301,
        20338
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9730": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9734": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9736": {
      "op": "SHL"
    },
    "9737": {
      "fn": "Governance.submitVerification",
      "offset": [
        20301,
        20338
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9738": {
      "fn": "Governance.submitVerification",
      "offset": [
        20301,
        20338
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9739": {
      "fn": "Governance.submitVerification",
      "offset": [
        20301,
        20338
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "9741": {
      "fn": "Governance.submitVerification",
      "offset": [
        20301,
        20338
      ],
      "op": "ADD",
      "path": "2"
    },
    "9742": {
      "fn": "Governance.submitVerification",
      "offset": [
        20301,
        20338
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE54"
    },
    "9745": {
      "fn": "Governance.submitVerification",
      "offset": [
        20301,
        20338
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9746": {
      "fn": "Governance.submitVerification",
      "offset": [
        20301,
        20338
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x41A7"
    },
    "9749": {
      "fn": "Governance.submitVerification",
      "jump": "i",
      "offset": [
        20301,
        20338
      ],
      "op": "JUMP",
      "path": "2"
    },
    "9750": {
      "fn": "Governance.submitVerification",
      "offset": [
        20301,
        20338
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9751": {
      "fn": "Governance.submitVerification",
      "offset": [
        20400,
        20433
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 78,
      "value": "0x40"
    },
    "9753": {
      "fn": "Governance.submitVerification",
      "offset": [
        20400,
        20433
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9754": {
      "fn": "Governance.submitVerification",
      "offset": [
        20400,
        20410
      ],
      "op": "CALLER",
      "path": "2"
    },
    "9755": {
      "fn": "Governance.submitVerification",
      "offset": [
        20400,
        20410
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9756": {
      "fn": "Governance.submitVerification",
      "offset": [
        20423,
        20428
      ],
      "op": "DUP6",
      "path": "2"
    },
    "9757": {
      "fn": "Governance.submitVerification",
      "offset": [
        20423,
        20428
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9758": {
      "fn": "Governance.submitVerification",
      "offset": [
        20400,
        20433
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9760": {
      "fn": "Governance.submitVerification",
      "offset": [
        20400,
        20433
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9761": {
      "fn": "Governance.submitVerification",
      "offset": [
        20400,
        20433
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9762": {
      "fn": "Governance.submitVerification",
      "offset": [
        20400,
        20433
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9763": {
      "fn": "Governance.submitVerification",
      "offset": [
        20423,
        20428
      ],
      "op": "DUP6",
      "path": "2"
    },
    "9764": {
      "fn": "Governance.submitVerification",
      "offset": [
        20400,
        20410
      ],
      "op": "DUP8",
      "path": "2"
    },
    "9765": {
      "fn": "Governance.submitVerification",
      "offset": [
        20400,
        20433
      ],
      "op": "GAS",
      "path": "2"
    },
    "9766": {
      "fn": "Governance.submitVerification",
      "offset": [
        20400,
        20433
      ],
      "op": "CALL",
      "path": "2"
    },
    "9767": {
      "fn": "Governance.submitVerification",
      "offset": [
        20400,
        20433
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "9768": {
      "fn": "Governance.submitVerification",
      "offset": [
        20400,
        20433
      ],
      "op": "POP",
      "path": "2"
    },
    "9769": {
      "fn": "Governance.submitVerification",
      "offset": [
        20400,
        20433
      ],
      "op": "POP",
      "path": "2"
    },
    "9770": {
      "fn": "Governance.submitVerification",
      "offset": [
        20400,
        20433
      ],
      "op": "POP",
      "path": "2"
    },
    "9771": {
      "fn": "Governance.submitVerification",
      "offset": [
        20400,
        20433
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "9772": {
      "fn": "Governance.submitVerification",
      "offset": [
        20400,
        20433
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9773": {
      "fn": "Governance.submitVerification",
      "offset": [
        20400,
        20433
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9775": {
      "fn": "Governance.submitVerification",
      "offset": [
        20400,
        20433
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9776": {
      "fn": "Governance.submitVerification",
      "offset": [
        20400,
        20433
      ],
      "op": "EQ",
      "path": "2"
    },
    "9777": {
      "fn": "Governance.submitVerification",
      "offset": [
        20400,
        20433
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2656"
    },
    "9780": {
      "fn": "Governance.submitVerification",
      "offset": [
        20400,
        20433
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "9781": {
      "fn": "Governance.submitVerification",
      "offset": [
        20400,
        20433
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9783": {
      "fn": "Governance.submitVerification",
      "offset": [
        20400,
        20433
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9784": {
      "fn": "Governance.submitVerification",
      "offset": [
        20400,
        20433
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9785": {
      "fn": "Governance.submitVerification",
      "offset": [
        20400,
        20433
      ],
      "op": "POP",
      "path": "2"
    },
    "9786": {
      "fn": "Governance.submitVerification",
      "offset": [
        20400,
        20433
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "9788": {
      "fn": "Governance.submitVerification",
      "offset": [
        20400,
        20433
      ],
      "op": "NOT",
      "path": "2"
    },
    "9789": {
      "fn": "Governance.submitVerification",
      "offset": [
        20400,
        20433
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3F"
    },
    "9791": {
      "fn": "Governance.submitVerification",
      "offset": [
        20400,
        20433
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "9792": {
      "fn": "Governance.submitVerification",
      "offset": [
        20400,
        20433
      ],
      "op": "ADD",
      "path": "2"
    },
    "9793": {
      "fn": "Governance.submitVerification",
      "offset": [
        20400,
        20433
      ],
      "op": "AND",
      "path": "2"
    },
    "9794": {
      "fn": "Governance.submitVerification",
      "offset": [
        20400,
        20433
      ],
      "op": "DUP3",
      "path": "2"
    },
    "9795": {
      "fn": "Governance.submitVerification",
      "offset": [
        20400,
        20433
      ],
      "op": "ADD",
      "path": "2"
    },
    "9796": {
      "fn": "Governance.submitVerification",
      "offset": [
        20400,
        20433
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9798": {
      "fn": "Governance.submitVerification",
      "offset": [
        20400,
        20433
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9799": {
      "fn": "Governance.submitVerification",
      "offset": [
        20400,
        20433
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "9800": {
      "fn": "Governance.submitVerification",
      "offset": [
        20400,
        20433
      ],
      "op": "DUP3",
      "path": "2"
    },
    "9801": {
      "fn": "Governance.submitVerification",
      "offset": [
        20400,
        20433
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9802": {
      "fn": "Governance.submitVerification",
      "offset": [
        20400,
        20433
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "9803": {
      "fn": "Governance.submitVerification",
      "offset": [
        20400,
        20433
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9805": {
      "fn": "Governance.submitVerification",
      "offset": [
        20400,
        20433
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "9807": {
      "fn": "Governance.submitVerification",
      "offset": [
        20400,
        20433
      ],
      "op": "DUP5",
      "path": "2"
    },
    "9808": {
      "fn": "Governance.submitVerification",
      "offset": [
        20400,
        20433
      ],
      "op": "ADD",
      "path": "2"
    },
    "9809": {
      "fn": "Governance.submitVerification",
      "offset": [
        20400,
        20433
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "9810": {
      "fn": "Governance.submitVerification",
      "offset": [
        20400,
        20433
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x265B"
    },
    "9813": {
      "fn": "Governance.submitVerification",
      "offset": [
        20400,
        20433
      ],
      "op": "JUMP",
      "path": "2"
    },
    "9814": {
      "fn": "Governance.submitVerification",
      "offset": [
        20400,
        20433
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9815": {
      "fn": "Governance.submitVerification",
      "offset": [
        20400,
        20433
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "9817": {
      "fn": "Governance.submitVerification",
      "offset": [
        20400,
        20433
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9818": {
      "fn": "Governance.submitVerification",
      "offset": [
        20400,
        20433
      ],
      "op": "POP",
      "path": "2"
    },
    "9819": {
      "fn": "Governance.submitVerification",
      "offset": [
        20400,
        20433
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9820": {
      "op": "POP"
    },
    "9821": {
      "fn": "Governance.submitVerification",
      "offset": [
        20385,
        20433
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9822": {
      "fn": "Governance.submitVerification",
      "offset": [
        20385,
        20433
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "9823": {
      "op": "POP"
    },
    "9824": {
      "fn": "Governance.submitVerification",
      "offset": [
        20385,
        20433
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9825": {
      "op": "POP"
    },
    "9826": {
      "fn": "Governance.submitVerification",
      "offset": [
        20385,
        20433
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9827": {
      "fn": "Governance.submitVerification",
      "offset": [
        20447,
        20484
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 79,
      "value": "0x267E"
    },
    "9830": {
      "fn": "Governance.submitVerification",
      "offset": [
        20447,
        20484
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "9831": {
      "fn": "Governance.submitVerification",
      "offset": [
        20447,
        20484
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9833": {
      "fn": "Governance.submitVerification",
      "offset": [
        20447,
        20484
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9834": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9838": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9840": {
      "op": "SHL"
    },
    "9841": {
      "fn": "Governance.submitVerification",
      "offset": [
        20447,
        20484
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9842": {
      "fn": "Governance.submitVerification",
      "offset": [
        20447,
        20484
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9843": {
      "fn": "Governance.submitVerification",
      "offset": [
        20447,
        20484
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "9845": {
      "fn": "Governance.submitVerification",
      "offset": [
        20447,
        20484
      ],
      "op": "ADD",
      "path": "2"
    },
    "9846": {
      "fn": "Governance.submitVerification",
      "offset": [
        20447,
        20484
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE54"
    },
    "9849": {
      "fn": "Governance.submitVerification",
      "offset": [
        20447,
        20484
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9850": {
      "fn": "Governance.submitVerification",
      "offset": [
        20447,
        20484
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x41A7"
    },
    "9853": {
      "fn": "Governance.submitVerification",
      "jump": "i",
      "offset": [
        20447,
        20484
      ],
      "op": "JUMP",
      "path": "2"
    },
    "9854": {
      "fn": "Governance.submitVerification",
      "offset": [
        20447,
        20484
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9855": {
      "fn": "Governance.submitVerification",
      "offset": [
        19663,
        20496
      ],
      "op": "POP",
      "path": "2"
    },
    "9856": {
      "fn": "Governance.submitVerification",
      "offset": [
        19663,
        20496
      ],
      "op": "POP",
      "path": "2"
    },
    "9857": {
      "fn": "Governance.submitVerification",
      "offset": [
        19663,
        20496
      ],
      "op": "POP",
      "path": "2"
    },
    "9858": {
      "fn": "Governance.submitVerification",
      "offset": [
        19663,
        20496
      ],
      "op": "POP",
      "path": "2"
    },
    "9859": {
      "fn": "Governance.submitVerification",
      "offset": [
        19643,
        22140
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x29F2"
    },
    "9862": {
      "fn": "Governance.submitVerification",
      "offset": [
        19643,
        22140
      ],
      "op": "JUMP",
      "path": "2"
    },
    "9863": {
      "fn": "Governance.submitVerification",
      "offset": [
        19643,
        22140
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9864": {
      "fn": "Governance.submitVerification",
      "offset": [
        20600,
        20606
      ],
      "op": "DUP5",
      "path": "2"
    },
    "9865": {
      "fn": "Governance.submitVerification",
      "offset": [
        20600,
        20616
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "9868": {
      "fn": "Governance.submitVerification",
      "offset": [
        20600,
        20616
      ],
      "op": "ADD",
      "path": "2"
    },
    "9869": {
      "fn": "Governance.submitVerification",
      "offset": [
        20600,
        20616
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9870": {
      "fn": "Governance.submitVerification",
      "offset": [
        20600,
        20619
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "9873": {
      "fn": "Governance.submitVerification",
      "offset": [
        20600,
        20619
      ],
      "op": "AND",
      "path": "2"
    },
    "9874": {
      "fn": "Governance.submitVerification",
      "offset": [
        20618,
        20619
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9876": {
      "branch": 166,
      "fn": "Governance.submitVerification",
      "offset": [
        20600,
        20619
      ],
      "op": "SUB",
      "path": "2"
    },
    "9877": {
      "fn": "Governance.submitVerification",
      "offset": [
        20597,
        20808
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x27B9"
    },
    "9880": {
      "branch": 166,
      "fn": "Governance.submitVerification",
      "offset": [
        20597,
        20808
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "9881": {
      "fn": "Governance.submitVerification",
      "offset": [
        20638,
        20669
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 80,
      "value": "0xFFFF"
    },
    "9884": {
      "fn": "Governance.submitVerification",
      "offset": [
        20638,
        20669
      ],
      "op": "DUP9",
      "path": "2"
    },
    "9885": {
      "fn": "Governance.submitVerification",
      "offset": [
        20638,
        20669
      ],
      "op": "AND",
      "path": "2"
    },
    "9886": {
      "fn": "Governance.submitVerification",
      "offset": [
        20638,
        20654
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "9889": {
      "fn": "Governance.submitVerification",
      "offset": [
        20638,
        20654
      ],
      "op": "DUP7",
      "path": "2"
    },
    "9890": {
      "fn": "Governance.submitVerification",
      "offset": [
        20638,
        20654
      ],
      "op": "ADD",
      "path": "2"
    },
    "9891": {
      "fn": "Governance.submitVerification",
      "offset": [
        20638,
        20669
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9892": {
      "fn": "Governance.submitVerification",
      "offset": [
        20687,
        20705
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 81,
      "value": "0x60"
    },
    "9894": {
      "fn": "Governance.submitVerification",
      "offset": [
        20687,
        20705
      ],
      "op": "DUP6",
      "path": "2"
    },
    "9895": {
      "fn": "Governance.submitVerification",
      "offset": [
        20687,
        20705
      ],
      "op": "ADD",
      "path": "2"
    },
    "9896": {
      "fn": "Governance.submitVerification",
      "offset": [
        20687,
        20712
      ],
      "op": "DUP3",
      "path": "2"
    },
    "9897": {
      "fn": "Governance.submitVerification",
      "offset": [
        20687,
        20712
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9898": {
      "fn": "Governance.submitVerification",
      "offset": [
        20687,
        20712
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9899": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9901": {
      "fn": "Governance.submitVerification",
      "offset": [
        20730,
        20744
      ],
      "op": "DUP8",
      "path": "2",
      "statement": 82
    },
    "9902": {
      "fn": "Governance.submitVerification",
      "offset": [
        20730,
        20744
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9903": {
      "fn": "Governance.submitVerification",
      "offset": [
        20730,
        20744
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9904": {
      "fn": "Governance.submitVerification",
      "offset": [
        20730,
        20735
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA"
    },
    "9906": {
      "fn": "Governance.submitVerification",
      "offset": [
        20730,
        20744
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "9908": {
      "fn": "Governance.submitVerification",
      "offset": [
        20730,
        20744
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9909": {
      "fn": "Governance.submitVerification",
      "offset": [
        20730,
        20744
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9911": {
      "fn": "Governance.submitVerification",
      "offset": [
        20730,
        20744
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9912": {
      "fn": "Governance.submitVerification",
      "offset": [
        20730,
        20744
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "9913": {
      "fn": "Governance.submitVerification",
      "offset": [
        20730,
        20753
      ],
      "op": "DUP6",
      "path": "2"
    },
    "9914": {
      "fn": "Governance.submitVerification",
      "offset": [
        20730,
        20753
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9915": {
      "fn": "Governance.submitVerification",
      "offset": [
        20638,
        20644
      ],
      "op": "DUP7",
      "path": "2"
    },
    "9916": {
      "fn": "Governance.submitVerification",
      "offset": [
        20638,
        20644
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9917": {
      "fn": "Governance.submitVerification",
      "offset": [
        20730,
        20744
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9918": {
      "fn": "Governance.submitVerification",
      "offset": [
        20730,
        20744
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9919": {
      "fn": "Governance.submitVerification",
      "offset": [
        20730,
        20744
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9920": {
      "fn": "Governance.submitVerification",
      "offset": [
        20730,
        20753
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x26C9"
    },
    "9923": {
      "fn": "Governance.submitVerification",
      "offset": [
        20730,
        20753
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9924": {
      "fn": "Governance.submitVerification",
      "offset": [
        20730,
        20744
      ],
      "op": "DUP3",
      "path": "2"
    },
    "9925": {
      "fn": "Governance.submitVerification",
      "offset": [
        20730,
        20753
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3E72"
    },
    "9928": {
      "fn": "Governance.submitVerification",
      "jump": "i",
      "offset": [
        20730,
        20753
      ],
      "op": "JUMP",
      "path": "2"
    },
    "9929": {
      "fn": "Governance.submitVerification",
      "offset": [
        20730,
        20753
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9930": {
      "op": "POP"
    },
    "9931": {
      "fn": "Governance.submitVerification",
      "offset": [
        20730,
        20753
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "9933": {
      "fn": "Governance.submitVerification",
      "offset": [
        20730,
        20753
      ],
      "op": "DUP3",
      "path": "2"
    },
    "9934": {
      "fn": "Governance.submitVerification",
      "offset": [
        20730,
        20753
      ],
      "op": "ADD",
      "path": "2"
    },
    "9935": {
      "fn": "Governance.submitVerification",
      "offset": [
        20730,
        20753
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9936": {
      "fn": "Governance.submitVerification",
      "offset": [
        20730,
        20753
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "9938": {
      "fn": "Governance.submitVerification",
      "offset": [
        20730,
        20753
      ],
      "op": "DUP3",
      "path": "2"
    },
    "9939": {
      "fn": "Governance.submitVerification",
      "offset": [
        20730,
        20753
      ],
      "op": "ADD",
      "path": "2"
    },
    "9940": {
      "fn": "Governance.submitVerification",
      "offset": [
        20730,
        20753
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9941": {
      "fn": "Governance.submitVerification",
      "offset": [
        20730,
        20753
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "9942": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "9948": {
      "op": "NOT"
    },
    "9949": {
      "fn": "Governance.submitVerification",
      "offset": [
        20730,
        20753
      ],
      "op": "AND",
      "path": "2"
    },
    "9950": {
      "fn": "Governance.submitVerification",
      "offset": [
        20730,
        20753
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "9956": {
      "fn": "Governance.submitVerification",
      "offset": [
        20730,
        20753
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "9957": {
      "fn": "Governance.submitVerification",
      "offset": [
        20730,
        20753
      ],
      "op": "DUP4",
      "path": "2"
    },
    "9958": {
      "fn": "Governance.submitVerification",
      "offset": [
        20730,
        20753
      ],
      "op": "AND",
      "path": "2"
    },
    "9959": {
      "fn": "Governance.submitVerification",
      "offset": [
        20730,
        20753
      ],
      "op": "OR",
      "path": "2"
    },
    "9960": {
      "fn": "Governance.submitVerification",
      "offset": [
        20730,
        20753
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9961": {
      "fn": "Governance.submitVerification",
      "offset": [
        20730,
        20753
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "9962": {
      "fn": "Governance.submitVerification",
      "offset": [
        20730,
        20753
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9964": {
      "fn": "Governance.submitVerification",
      "offset": [
        20730,
        20753
      ],
      "op": "DUP4",
      "path": "2"
    },
    "9965": {
      "fn": "Governance.submitVerification",
      "offset": [
        20730,
        20753
      ],
      "op": "ADD",
      "path": "2"
    },
    "9966": {
      "fn": "Governance.submitVerification",
      "offset": [
        20730,
        20753
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9967": {
      "fn": "Governance.submitVerification",
      "offset": [
        20730,
        20753
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "9969": {
      "fn": "Governance.submitVerification",
      "offset": [
        20730,
        20753
      ],
      "op": "DUP4",
      "path": "2"
    },
    "9970": {
      "fn": "Governance.submitVerification",
      "offset": [
        20730,
        20753
      ],
      "op": "ADD",
      "path": "2"
    },
    "9971": {
      "fn": "Governance.submitVerification",
      "offset": [
        20730,
        20753
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "9972": {
      "fn": "Governance.submitVerification",
      "offset": [
        20730,
        20753
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "9974": {
      "fn": "Governance.submitVerification",
      "offset": [
        20730,
        20753
      ],
      "op": "DUP4",
      "path": "2"
    },
    "9975": {
      "fn": "Governance.submitVerification",
      "offset": [
        20730,
        20753
      ],
      "op": "ADD",
      "path": "2"
    },
    "9976": {
      "fn": "Governance.submitVerification",
      "offset": [
        20730,
        20753
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9977": {
      "fn": "Governance.submitVerification",
      "offset": [
        20730,
        20753
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "9979": {
      "fn": "Governance.submitVerification",
      "offset": [
        20730,
        20753
      ],
      "op": "DUP4",
      "path": "2"
    },
    "9980": {
      "fn": "Governance.submitVerification",
      "offset": [
        20730,
        20753
      ],
      "op": "ADD",
      "path": "2"
    },
    "9981": {
      "fn": "Governance.submitVerification",
      "offset": [
        20730,
        20753
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "9982": {
      "fn": "Governance.submitVerification",
      "offset": [
        20730,
        20753
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x80"
    },
    "9984": {
      "fn": "Governance.submitVerification",
      "offset": [
        20730,
        20753
      ],
      "op": "DUP4",
      "path": "2"
    },
    "9985": {
      "fn": "Governance.submitVerification",
      "offset": [
        20730,
        20753
      ],
      "op": "ADD",
      "path": "2"
    },
    "9986": {
      "fn": "Governance.submitVerification",
      "offset": [
        20730,
        20753
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9987": {
      "fn": "Governance.submitVerification",
      "offset": [
        20730,
        20753
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "9989": {
      "fn": "Governance.submitVerification",
      "offset": [
        20730,
        20753
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9990": {
      "fn": "Governance.submitVerification",
      "offset": [
        20730,
        20753
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "9991": {
      "fn": "Governance.submitVerification",
      "offset": [
        20730,
        20753
      ],
      "op": "ADD",
      "path": "2"
    },
    "9992": {
      "fn": "Governance.submitVerification",
      "offset": [
        20730,
        20753
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9993": {
      "fn": "Governance.submitVerification",
      "offset": [
        20730,
        20753
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "9994": {
      "fn": "Governance.submitVerification",
      "offset": [
        20730,
        20753
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA0"
    },
    "9996": {
      "fn": "Governance.submitVerification",
      "offset": [
        20730,
        20753
      ],
      "op": "DUP6",
      "path": "2"
    },
    "9997": {
      "fn": "Governance.submitVerification",
      "offset": [
        20730,
        20753
      ],
      "op": "ADD",
      "path": "2"
    },
    "9998": {
      "fn": "Governance.submitVerification",
      "offset": [
        20730,
        20753
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9999": {
      "fn": "Governance.submitVerification",
      "offset": [
        20730,
        20753
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xC0"
    },
    "10001": {
      "fn": "Governance.submitVerification",
      "offset": [
        20730,
        20753
      ],
      "op": "DUP7",
      "path": "2"
    },
    "10002": {
      "fn": "Governance.submitVerification",
      "offset": [
        20730,
        20753
      ],
      "op": "ADD",
      "path": "2"
    },
    "10003": {
      "fn": "Governance.submitVerification",
      "offset": [
        20730,
        20753
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "10004": {
      "fn": "Governance.submitVerification",
      "offset": [
        20730,
        20753
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE0"
    },
    "10006": {
      "fn": "Governance.submitVerification",
      "offset": [
        20730,
        20753
      ],
      "op": "DUP8",
      "path": "2"
    },
    "10007": {
      "fn": "Governance.submitVerification",
      "offset": [
        20730,
        20753
      ],
      "op": "ADD",
      "path": "2"
    },
    "10008": {
      "fn": "Governance.submitVerification",
      "offset": [
        20730,
        20753
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "10009": {
      "fn": "Governance.submitVerification",
      "offset": [
        20730,
        20753
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "10012": {
      "fn": "Governance.submitVerification",
      "offset": [
        20730,
        20753
      ],
      "op": "DUP1",
      "path": "2"
    },
    "10013": {
      "fn": "Governance.submitVerification",
      "offset": [
        20730,
        20753
      ],
      "op": "DUP10",
      "path": "2"
    },
    "10014": {
      "fn": "Governance.submitVerification",
      "offset": [
        20730,
        20753
      ],
      "op": "ADD",
      "path": "2"
    },
    "10015": {
      "fn": "Governance.submitVerification",
      "offset": [
        20730,
        20753
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "10016": {
      "fn": "Governance.submitVerification",
      "offset": [
        20730,
        20753
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x120"
    },
    "10019": {
      "fn": "Governance.submitVerification",
      "offset": [
        20730,
        20753
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10020": {
      "fn": "Governance.submitVerification",
      "offset": [
        20730,
        20753
      ],
      "op": "SWAP10",
      "path": "2"
    },
    "10021": {
      "fn": "Governance.submitVerification",
      "offset": [
        20730,
        20753
      ],
      "op": "ADD",
      "path": "2"
    },
    "10022": {
      "fn": "Governance.submitVerification",
      "offset": [
        20730,
        20753
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "10023": {
      "fn": "Governance.submitVerification",
      "offset": [
        20730,
        20753
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "10025": {
      "fn": "Governance.submitVerification",
      "offset": [
        20730,
        20753
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10026": {
      "fn": "Governance.submitVerification",
      "offset": [
        20730,
        20753
      ],
      "op": "SWAP9",
      "path": "2"
    },
    "10027": {
      "fn": "Governance.submitVerification",
      "offset": [
        20730,
        20753
      ],
      "op": "AND",
      "path": "2"
    },
    "10028": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "10033": {
      "op": "NOT"
    },
    "10034": {
      "fn": "Governance.submitVerification",
      "offset": [
        20730,
        20753
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10035": {
      "fn": "Governance.submitVerification",
      "offset": [
        20730,
        20753
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "10036": {
      "fn": "Governance.submitVerification",
      "offset": [
        20730,
        20753
      ],
      "op": "AND",
      "path": "2"
    },
    "10037": {
      "fn": "Governance.submitVerification",
      "offset": [
        20730,
        20753
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "10038": {
      "fn": "Governance.submitVerification",
      "offset": [
        20730,
        20753
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10039": {
      "fn": "Governance.submitVerification",
      "offset": [
        20730,
        20753
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "10040": {
      "fn": "Governance.submitVerification",
      "offset": [
        20730,
        20753
      ],
      "op": "OR",
      "path": "2"
    },
    "10041": {
      "fn": "Governance.submitVerification",
      "offset": [
        20730,
        20753
      ],
      "op": "PUSH3",
      "path": "2",
      "value": "0xFFFFFF"
    },
    "10045": {
      "fn": "Governance.submitVerification",
      "offset": [
        20730,
        20753
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10046": {
      "fn": "Governance.submitVerification",
      "offset": [
        20730,
        20753
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "10047": {
      "fn": "Governance.submitVerification",
      "offset": [
        20730,
        20753
      ],
      "op": "AND",
      "path": "2"
    },
    "10048": {
      "fn": "Governance.submitVerification",
      "offset": [
        20730,
        20753
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10049": {
      "fn": "Governance.submitVerification",
      "offset": [
        20730,
        20753
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "10050": {
      "fn": "Governance.submitVerification",
      "offset": [
        20730,
        20753
      ],
      "op": "MUL",
      "path": "2"
    },
    "10051": {
      "fn": "Governance.submitVerification",
      "offset": [
        20730,
        20753
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "10052": {
      "fn": "Governance.submitVerification",
      "offset": [
        20730,
        20753
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10053": {
      "fn": "Governance.submitVerification",
      "offset": [
        20730,
        20753
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "10054": {
      "fn": "Governance.submitVerification",
      "offset": [
        20730,
        20753
      ],
      "op": "OR",
      "path": "2"
    },
    "10055": {
      "op": "PUSH5",
      "value": "0x100000000"
    },
    "10061": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10063": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "10065": {
      "op": "SHL"
    },
    "10066": {
      "op": "SUB"
    },
    "10067": {
      "op": "NOT"
    },
    "10068": {
      "fn": "Governance.submitVerification",
      "offset": [
        20730,
        20753
      ],
      "op": "AND",
      "path": "2"
    },
    "10069": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10071": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10073": {
      "op": "SHL"
    },
    "10074": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10076": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10078": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "10080": {
      "op": "SHL"
    },
    "10081": {
      "op": "SUB"
    },
    "10082": {
      "fn": "Governance.submitVerification",
      "offset": [
        20730,
        20753
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10083": {
      "fn": "Governance.submitVerification",
      "offset": [
        20730,
        20753
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "10084": {
      "fn": "Governance.submitVerification",
      "offset": [
        20730,
        20753
      ],
      "op": "AND",
      "path": "2"
    },
    "10085": {
      "fn": "Governance.submitVerification",
      "offset": [
        20730,
        20753
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "10086": {
      "fn": "Governance.submitVerification",
      "offset": [
        20730,
        20753
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10087": {
      "fn": "Governance.submitVerification",
      "offset": [
        20730,
        20753
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "10088": {
      "fn": "Governance.submitVerification",
      "offset": [
        20730,
        20753
      ],
      "op": "MUL",
      "path": "2"
    },
    "10089": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "10092": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "10094": {
      "op": "SHL"
    },
    "10095": {
      "op": "NOT"
    },
    "10096": {
      "fn": "Governance.submitVerification",
      "offset": [
        20730,
        20753
      ],
      "op": "AND",
      "path": "2"
    },
    "10097": {
      "fn": "Governance.submitVerification",
      "offset": [
        20730,
        20753
      ],
      "op": "OR",
      "path": "2"
    },
    "10098": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10100": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "10102": {
      "op": "SHL"
    },
    "10103": {
      "fn": "Governance.submitVerification",
      "offset": [
        20730,
        20753
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "10106": {
      "fn": "Governance.submitVerification",
      "offset": [
        20730,
        20753
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "10107": {
      "fn": "Governance.submitVerification",
      "offset": [
        20730,
        20753
      ],
      "op": "DUP4",
      "path": "2"
    },
    "10108": {
      "fn": "Governance.submitVerification",
      "offset": [
        20730,
        20753
      ],
      "op": "AND",
      "path": "2"
    },
    "10109": {
      "fn": "Governance.submitVerification",
      "offset": [
        20730,
        20753
      ],
      "op": "MUL",
      "path": "2"
    },
    "10110": {
      "fn": "Governance.submitVerification",
      "offset": [
        20730,
        20753
      ],
      "op": "OR",
      "path": "2"
    },
    "10111": {
      "op": "PUSH7",
      "value": "0xFFFFFFFFFFFFFF"
    },
    "10119": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "10121": {
      "op": "SHL"
    },
    "10122": {
      "op": "NOT"
    },
    "10123": {
      "fn": "Governance.submitVerification",
      "offset": [
        20730,
        20753
      ],
      "op": "AND",
      "path": "2"
    },
    "10124": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10126": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "10128": {
      "op": "SHL"
    },
    "10129": {
      "fn": "Governance.submitVerification",
      "offset": [
        20730,
        20753
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "10130": {
      "fn": "Governance.submitVerification",
      "offset": [
        20730,
        20753
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10131": {
      "fn": "Governance.submitVerification",
      "offset": [
        20730,
        20753
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "10132": {
      "fn": "Governance.submitVerification",
      "offset": [
        20730,
        20753
      ],
      "op": "AND",
      "path": "2"
    },
    "10133": {
      "fn": "Governance.submitVerification",
      "offset": [
        20730,
        20753
      ],
      "op": "MUL",
      "path": "2"
    },
    "10134": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "10140": {
      "op": "PUSH1",
      "value": "0x90"
    },
    "10142": {
      "op": "SHL"
    },
    "10143": {
      "op": "NOT"
    },
    "10144": {
      "fn": "Governance.submitVerification",
      "offset": [
        20730,
        20753
      ],
      "op": "AND",
      "path": "2"
    },
    "10145": {
      "fn": "Governance.submitVerification",
      "offset": [
        20730,
        20753
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "10146": {
      "fn": "Governance.submitVerification",
      "offset": [
        20730,
        20753
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10147": {
      "fn": "Governance.submitVerification",
      "offset": [
        20730,
        20753
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "10148": {
      "fn": "Governance.submitVerification",
      "offset": [
        20730,
        20753
      ],
      "op": "OR",
      "path": "2"
    },
    "10149": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10151": {
      "op": "PUSH1",
      "value": "0x90"
    },
    "10153": {
      "op": "SHL"
    },
    "10154": {
      "fn": "Governance.submitVerification",
      "offset": [
        20730,
        20753
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "10155": {
      "fn": "Governance.submitVerification",
      "offset": [
        20730,
        20753
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10156": {
      "fn": "Governance.submitVerification",
      "offset": [
        20730,
        20753
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "10157": {
      "fn": "Governance.submitVerification",
      "offset": [
        20730,
        20753
      ],
      "op": "AND",
      "path": "2"
    },
    "10158": {
      "fn": "Governance.submitVerification",
      "offset": [
        20730,
        20753
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "10159": {
      "fn": "Governance.submitVerification",
      "offset": [
        20730,
        20753
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10160": {
      "fn": "Governance.submitVerification",
      "offset": [
        20730,
        20753
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "10161": {
      "fn": "Governance.submitVerification",
      "offset": [
        20730,
        20753
      ],
      "op": "MUL",
      "path": "2"
    },
    "10162": {
      "fn": "Governance.submitVerification",
      "offset": [
        20730,
        20753
      ],
      "op": "OR",
      "path": "2"
    },
    "10163": {
      "fn": "Governance.submitVerification",
      "offset": [
        20730,
        20753
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10164": {
      "fn": "Governance.submitVerification",
      "offset": [
        20730,
        20753
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "10165": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10167": {
      "op": "SWAP3"
    },
    "10168": {
      "op": "POP"
    },
    "10169": {
      "fn": "Governance.submitVerification",
      "offset": [
        20597,
        20808
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10170": {
      "fn": "Governance.submitVerification",
      "offset": [
        20904,
        20910
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10171": {
      "fn": "Governance.submitVerification",
      "offset": [
        20884,
        20890
      ],
      "op": "DUP6",
      "path": "2"
    },
    "10172": {
      "fn": "Governance.submitVerification",
      "offset": [
        20884,
        20902
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "10174": {
      "fn": "Governance.submitVerification",
      "offset": [
        20884,
        20902
      ],
      "op": "ADD",
      "path": "2"
    },
    "10175": {
      "fn": "Governance.submitVerification",
      "offset": [
        20884,
        20902
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "10176": {
      "branch": 167,
      "fn": "Governance.submitVerification",
      "offset": [
        20884,
        20910
      ],
      "op": "SUB",
      "path": "2"
    },
    "10177": {
      "fn": "Governance.submitVerification",
      "offset": [
        20881,
        22130
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x290C"
    },
    "10180": {
      "branch": 167,
      "fn": "Governance.submitVerification",
      "offset": [
        20881,
        22130
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "10181": {
      "fn": "Governance.submitVerification",
      "offset": [
        20929,
        20942
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "10183": {
      "fn": "Governance.submitVerification",
      "offset": [
        20960,
        20961
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "10185": {
      "fn": "Governance.submitVerification",
      "offset": [
        20945,
        20951
      ],
      "op": "DUP7",
      "path": "2"
    },
    "10186": {
      "fn": "Governance.submitVerification",
      "offset": [
        20945,
        20959
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xC0"
    },
    "10188": {
      "fn": "Governance.submitVerification",
      "offset": [
        20945,
        20959
      ],
      "op": "ADD",
      "path": "2"
    },
    "10189": {
      "fn": "Governance.submitVerification",
      "offset": [
        20945,
        20959
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "10190": {
      "fn": "Governance.submitVerification",
      "offset": [
        20945,
        20961
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x27D7"
    },
    "10193": {
      "fn": "Governance.submitVerification",
      "offset": [
        20945,
        20961
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "10194": {
      "fn": "Governance.submitVerification",
      "offset": [
        20945,
        20961
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10195": {
      "fn": "Governance.submitVerification",
      "offset": [
        20945,
        20961
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4173"
    },
    "10198": {
      "fn": "Governance.submitVerification",
      "jump": "i",
      "offset": [
        20945,
        20961
      ],
      "op": "JUMP",
      "path": "2"
    },
    "10199": {
      "fn": "Governance.submitVerification",
      "offset": [
        20945,
        20961
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10200": {
      "fn": "Governance.submitVerification",
      "offset": [
        21017,
        21027
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "10202": {
      "fn": "Governance.submitVerification",
      "offset": [
        21017,
        21027
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "10203": {
      "fn": "Governance.submitVerification",
      "offset": [
        21017,
        21027
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "10206": {
      "fn": "Governance.submitVerification",
      "offset": [
        21036,
        21052
      ],
      "op": "DUP9",
      "path": "2"
    },
    "10207": {
      "fn": "Governance.submitVerification",
      "offset": [
        21036,
        21052
      ],
      "op": "ADD",
      "path": "2"
    },
    "10208": {
      "fn": "Governance.submitVerification",
      "offset": [
        21036,
        21052
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "10209": {
      "fn": "Governance.submitVerification",
      "offset": [
        21017,
        21053
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "10211": {
      "fn": "Governance.submitVerification",
      "offset": [
        21017,
        21053
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "10212": {
      "op": "PUSH4",
      "value": "0x31A9108F"
    },
    "10217": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "10219": {
      "op": "SHL"
    },
    "10220": {
      "fn": "Governance.submitVerification",
      "offset": [
        21017,
        21053
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10221": {
      "fn": "Governance.submitVerification",
      "offset": [
        21017,
        21053
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10222": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "10225": {
      "op": "SWAP1"
    },
    "10226": {
      "op": "SWAP2"
    },
    "10227": {
      "op": "AND"
    },
    "10228": {
      "fn": "Governance.submitVerification",
      "offset": [
        21017,
        21053
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "10230": {
      "fn": "Governance.submitVerification",
      "offset": [
        21017,
        21053
      ],
      "op": "DUP3",
      "path": "2"
    },
    "10231": {
      "fn": "Governance.submitVerification",
      "offset": [
        21017,
        21053
      ],
      "op": "ADD",
      "path": "2"
    },
    "10232": {
      "op": "MSTORE"
    },
    "10233": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10235": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10237": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "10239": {
      "op": "SHL"
    },
    "10240": {
      "op": "SUB"
    },
    "10241": {
      "fn": "Governance.submitVerification",
      "offset": [
        20929,
        20961
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "10242": {
      "fn": "Governance.submitVerification",
      "offset": [
        20929,
        20961
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10243": {
      "fn": "Governance.submitVerification",
      "offset": [
        20929,
        20961
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "10244": {
      "fn": "Governance.submitVerification",
      "offset": [
        20929,
        20961
      ],
      "op": "AND",
      "path": "2"
    },
    "10245": {
      "fn": "Governance.submitVerification",
      "offset": [
        20929,
        20961
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "10246": {
      "op": "POP"
    },
    "10247": {
      "fn": "Governance.submitVerification",
      "offset": [
        20979,
        21006
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "10249": {
      "fn": "Governance.submitVerification",
      "offset": [
        20979,
        21006
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "10250": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10252": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10254": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10256": {
      "op": "SHL"
    },
    "10257": {
      "op": "SUB"
    },
    "10258": {
      "fn": "Governance.submitVerification",
      "offset": [
        21017,
        21027
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10259": {
      "fn": "Governance.submitVerification",
      "offset": [
        21017,
        21027
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "10260": {
      "fn": "Governance.submitVerification",
      "offset": [
        21017,
        21027
      ],
      "op": "AND",
      "path": "2"
    },
    "10261": {
      "fn": "Governance.submitVerification",
      "offset": [
        21017,
        21027
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10262": {
      "fn": "Governance.submitVerification",
      "offset": [
        21017,
        21035
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x6352211E"
    },
    "10267": {
      "fn": "Governance.submitVerification",
      "offset": [
        21017,
        21035
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10268": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10270": {
      "op": "ADD"
    },
    "10271": {
      "fn": "Governance.submitVerification",
      "offset": [
        21017,
        21053
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "10273": {
      "fn": "Governance.submitVerification",
      "offset": [
        21017,
        21053
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "10275": {
      "fn": "Governance.submitVerification",
      "offset": [
        21017,
        21053
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "10276": {
      "fn": "Governance.submitVerification",
      "offset": [
        21017,
        21053
      ],
      "op": "DUP1",
      "path": "2"
    },
    "10277": {
      "fn": "Governance.submitVerification",
      "offset": [
        21017,
        21053
      ],
      "op": "DUP4",
      "path": "2"
    },
    "10278": {
      "fn": "Governance.submitVerification",
      "offset": [
        21017,
        21053
      ],
      "op": "SUB",
      "path": "2"
    },
    "10279": {
      "fn": "Governance.submitVerification",
      "offset": [
        21017,
        21053
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10280": {
      "fn": "Governance.submitVerification",
      "offset": [
        21017,
        21053
      ],
      "op": "DUP7",
      "path": "2"
    },
    "10281": {
      "fn": "Governance.submitVerification",
      "offset": [
        21017,
        21053
      ],
      "op": "GAS",
      "path": "2"
    },
    "10282": {
      "fn": "Governance.submitVerification",
      "offset": [
        21017,
        21053
      ],
      "op": "STATICCALL",
      "path": "2"
    },
    "10283": {
      "fn": "Governance.submitVerification",
      "offset": [
        21017,
        21053
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "10284": {
      "fn": "Governance.submitVerification",
      "offset": [
        21017,
        21053
      ],
      "op": "DUP1",
      "path": "2"
    },
    "10285": {
      "fn": "Governance.submitVerification",
      "offset": [
        21017,
        21053
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "10286": {
      "fn": "Governance.submitVerification",
      "offset": [
        21017,
        21053
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x283B"
    },
    "10289": {
      "fn": "Governance.submitVerification",
      "offset": [
        21017,
        21053
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "10290": {
      "fn": "Governance.submitVerification",
      "offset": [
        21017,
        21053
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "10291": {
      "fn": "Governance.submitVerification",
      "offset": [
        21017,
        21053
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "10293": {
      "fn": "Governance.submitVerification",
      "offset": [
        21017,
        21053
      ],
      "op": "DUP1",
      "path": "2"
    },
    "10294": {
      "fn": "Governance.submitVerification",
      "offset": [
        21017,
        21053
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "10295": {
      "fn": "Governance.submitVerification",
      "offset": [
        21017,
        21053
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "10296": {
      "fn": "Governance.submitVerification",
      "offset": [
        21017,
        21053
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "10298": {
      "fn": "Governance.submitVerification",
      "offset": [
        21017,
        21053
      ],
      "op": "REVERT",
      "path": "2"
    },
    "10299": {
      "fn": "Governance.submitVerification",
      "offset": [
        21017,
        21053
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10300": {
      "fn": "Governance.submitVerification",
      "offset": [
        21017,
        21053
      ],
      "op": "POP",
      "path": "2"
    },
    "10301": {
      "fn": "Governance.submitVerification",
      "offset": [
        21017,
        21053
      ],
      "op": "POP",
      "path": "2"
    },
    "10302": {
      "fn": "Governance.submitVerification",
      "offset": [
        21017,
        21053
      ],
      "op": "POP",
      "path": "2"
    },
    "10303": {
      "fn": "Governance.submitVerification",
      "offset": [
        21017,
        21053
      ],
      "op": "POP",
      "path": "2"
    },
    "10304": {
      "fn": "Governance.submitVerification",
      "offset": [
        21017,
        21053
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "10306": {
      "fn": "Governance.submitVerification",
      "offset": [
        21017,
        21053
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "10307": {
      "fn": "Governance.submitVerification",
      "offset": [
        21017,
        21053
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "10308": {
      "fn": "Governance.submitVerification",
      "offset": [
        21017,
        21053
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "10310": {
      "fn": "Governance.submitVerification",
      "offset": [
        21017,
        21053
      ],
      "op": "NOT",
      "path": "2"
    },
    "10311": {
      "fn": "Governance.submitVerification",
      "offset": [
        21017,
        21053
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "10313": {
      "fn": "Governance.submitVerification",
      "offset": [
        21017,
        21053
      ],
      "op": "DUP3",
      "path": "2"
    },
    "10314": {
      "fn": "Governance.submitVerification",
      "offset": [
        21017,
        21053
      ],
      "op": "ADD",
      "path": "2"
    },
    "10315": {
      "fn": "Governance.submitVerification",
      "offset": [
        21017,
        21053
      ],
      "op": "AND",
      "path": "2"
    },
    "10316": {
      "fn": "Governance.submitVerification",
      "offset": [
        21017,
        21053
      ],
      "op": "DUP3",
      "path": "2"
    },
    "10317": {
      "fn": "Governance.submitVerification",
      "offset": [
        21017,
        21053
      ],
      "op": "ADD",
      "path": "2"
    },
    "10318": {
      "fn": "Governance.submitVerification",
      "offset": [
        21017,
        21053
      ],
      "op": "DUP1",
      "path": "2"
    },
    "10319": {
      "fn": "Governance.submitVerification",
      "offset": [
        21017,
        21053
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "10321": {
      "fn": "Governance.submitVerification",
      "offset": [
        21017,
        21053
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10322": {
      "fn": "Governance.submitVerification",
      "offset": [
        21017,
        21053
      ],
      "op": "POP",
      "path": "2"
    },
    "10323": {
      "fn": "Governance.submitVerification",
      "offset": [
        21017,
        21053
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10324": {
      "fn": "Governance.submitVerification",
      "offset": [
        21017,
        21053
      ],
      "op": "ADD",
      "path": "2"
    },
    "10325": {
      "fn": "Governance.submitVerification",
      "offset": [
        21017,
        21053
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10326": {
      "fn": "Governance.submitVerification",
      "offset": [
        21017,
        21053
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x285F"
    },
    "10329": {
      "fn": "Governance.submitVerification",
      "offset": [
        21017,
        21053
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "10330": {
      "fn": "Governance.submitVerification",
      "offset": [
        21017,
        21053
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10331": {
      "fn": "Governance.submitVerification",
      "offset": [
        21017,
        21053
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3D2E"
    },
    "10334": {
      "fn": "Governance.submitVerification",
      "jump": "i",
      "offset": [
        21017,
        21053
      ],
      "op": "JUMP",
      "path": "2"
    },
    "10335": {
      "fn": "Governance.submitVerification",
      "offset": [
        21017,
        21053
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10336": {
      "fn": "Governance.submitVerification",
      "offset": [
        21073,
        21083
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 83,
      "value": "0x2"
    },
    "10338": {
      "fn": "Governance.submitVerification",
      "offset": [
        21073,
        21083
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "10339": {
      "fn": "Governance.submitVerification",
      "offset": [
        21073,
        21083
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "10342": {
      "fn": "Governance.submitVerification",
      "offset": [
        21095,
        21111
      ],
      "op": "DUP10",
      "path": "2"
    },
    "10343": {
      "fn": "Governance.submitVerification",
      "offset": [
        21095,
        21111
      ],
      "op": "ADD",
      "path": "2"
    },
    "10344": {
      "fn": "Governance.submitVerification",
      "offset": [
        21095,
        21111
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "10345": {
      "fn": "Governance.submitVerification",
      "offset": [
        21113,
        21138
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xD"
    },
    "10347": {
      "fn": "Governance.submitVerification",
      "offset": [
        21113,
        21138
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "10348": {
      "fn": "Governance.submitVerification",
      "offset": [
        21073,
        21139
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "10350": {
      "fn": "Governance.submitVerification",
      "offset": [
        21073,
        21139
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "10351": {
      "op": "PUSH4",
      "value": "0x8AD4D6A5"
    },
    "10356": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10358": {
      "op": "SHL"
    },
    "10359": {
      "fn": "Governance.submitVerification",
      "offset": [
        21073,
        21139
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10360": {
      "fn": "Governance.submitVerification",
      "offset": [
        21073,
        21139
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10361": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "10364": {
      "op": "SWAP1"
    },
    "10365": {
      "op": "SWAP3"
    },
    "10366": {
      "op": "AND"
    },
    "10367": {
      "fn": "Governance.submitVerification",
      "offset": [
        21073,
        21139
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "10369": {
      "fn": "Governance.submitVerification",
      "offset": [
        21073,
        21139
      ],
      "op": "DUP4",
      "path": "2"
    },
    "10370": {
      "fn": "Governance.submitVerification",
      "offset": [
        21073,
        21139
      ],
      "op": "ADD",
      "path": "2"
    },
    "10371": {
      "op": "MSTORE"
    },
    "10372": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10374": {
      "op": "DUP3"
    },
    "10375": {
      "op": "ADD"
    },
    "10376": {
      "op": "MSTORE"
    },
    "10377": {
      "fn": "Governance.submitVerification",
      "offset": [
        20979,
        21054
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "10378": {
      "fn": "Governance.submitVerification",
      "offset": [
        20979,
        21054
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "10379": {
      "op": "POP"
    },
    "10380": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10382": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10384": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10386": {
      "op": "SHL"
    },
    "10387": {
      "op": "SUB"
    },
    "10388": {
      "fn": "Governance.submitVerification",
      "offset": [
        21073,
        21083
      ],
      "op": "AND",
      "path": "2"
    },
    "10389": {
      "fn": "Governance.submitVerification",
      "offset": [
        21073,
        21083
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10390": {
      "fn": "Governance.submitVerification",
      "offset": [
        21073,
        21094
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x8AD4D6A5"
    },
    "10395": {
      "fn": "Governance.submitVerification",
      "offset": [
        21073,
        21094
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10396": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "10398": {
      "op": "ADD"
    },
    "10399": {
      "fn": "Governance.submitVerification",
      "offset": [
        21073,
        21139
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "10401": {
      "fn": "Governance.submitVerification",
      "offset": [
        21073,
        21139
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "10403": {
      "fn": "Governance.submitVerification",
      "offset": [
        21073,
        21139
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "10404": {
      "fn": "Governance.submitVerification",
      "offset": [
        21073,
        21139
      ],
      "op": "DUP1",
      "path": "2"
    },
    "10405": {
      "fn": "Governance.submitVerification",
      "offset": [
        21073,
        21139
      ],
      "op": "DUP4",
      "path": "2"
    },
    "10406": {
      "fn": "Governance.submitVerification",
      "offset": [
        21073,
        21139
      ],
      "op": "SUB",
      "path": "2"
    },
    "10407": {
      "fn": "Governance.submitVerification",
      "offset": [
        21073,
        21139
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10408": {
      "fn": "Governance.submitVerification",
      "offset": [
        21073,
        21139
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "10410": {
      "fn": "Governance.submitVerification",
      "offset": [
        21073,
        21139
      ],
      "op": "DUP8",
      "path": "2"
    },
    "10411": {
      "fn": "Governance.submitVerification",
      "offset": [
        21073,
        21139
      ],
      "op": "DUP1",
      "path": "2"
    },
    "10412": {
      "fn": "Governance.submitVerification",
      "offset": [
        21073,
        21139
      ],
      "op": "EXTCODESIZE",
      "path": "2"
    },
    "10413": {
      "fn": "Governance.submitVerification",
      "offset": [
        21073,
        21139
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "10414": {
      "fn": "Governance.submitVerification",
      "offset": [
        21073,
        21139
      ],
      "op": "DUP1",
      "path": "2"
    },
    "10415": {
      "fn": "Governance.submitVerification",
      "offset": [
        21073,
        21139
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "10416": {
      "fn": "Governance.submitVerification",
      "offset": [
        21073,
        21139
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x28B8"
    },
    "10419": {
      "fn": "Governance.submitVerification",
      "offset": [
        21073,
        21139
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "10420": {
      "fn": "Governance.submitVerification",
      "offset": [
        21073,
        21139
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "10422": {
      "fn": "Governance.submitVerification",
      "offset": [
        21073,
        21139
      ],
      "op": "DUP1",
      "path": "2"
    },
    "10423": {
      "fn": "Governance.submitVerification",
      "offset": [
        21073,
        21139
      ],
      "op": "REVERT",
      "path": "2"
    },
    "10424": {
      "fn": "Governance.submitVerification",
      "offset": [
        21073,
        21139
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10425": {
      "fn": "Governance.submitVerification",
      "offset": [
        21073,
        21139
      ],
      "op": "POP",
      "path": "2"
    },
    "10426": {
      "fn": "Governance.submitVerification",
      "offset": [
        21073,
        21139
      ],
      "op": "GAS",
      "path": "2"
    },
    "10427": {
      "fn": "Governance.submitVerification",
      "offset": [
        21073,
        21139
      ],
      "op": "CALL",
      "path": "2"
    },
    "10428": {
      "fn": "Governance.submitVerification",
      "offset": [
        21073,
        21139
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "10429": {
      "fn": "Governance.submitVerification",
      "offset": [
        21073,
        21139
      ],
      "op": "DUP1",
      "path": "2"
    },
    "10430": {
      "fn": "Governance.submitVerification",
      "offset": [
        21073,
        21139
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "10431": {
      "fn": "Governance.submitVerification",
      "offset": [
        21073,
        21139
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x28CC"
    },
    "10434": {
      "fn": "Governance.submitVerification",
      "offset": [
        21073,
        21139
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "10435": {
      "fn": "Governance.submitVerification",
      "offset": [
        21073,
        21139
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "10436": {
      "fn": "Governance.submitVerification",
      "offset": [
        21073,
        21139
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "10438": {
      "fn": "Governance.submitVerification",
      "offset": [
        21073,
        21139
      ],
      "op": "DUP1",
      "path": "2"
    },
    "10439": {
      "fn": "Governance.submitVerification",
      "offset": [
        21073,
        21139
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "10440": {
      "fn": "Governance.submitVerification",
      "offset": [
        21073,
        21139
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "10441": {
      "fn": "Governance.submitVerification",
      "offset": [
        21073,
        21139
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "10443": {
      "fn": "Governance.submitVerification",
      "offset": [
        21073,
        21139
      ],
      "op": "REVERT",
      "path": "2"
    },
    "10444": {
      "fn": "Governance.submitVerification",
      "offset": [
        21073,
        21139
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10445": {
      "op": "POP"
    },
    "10446": {
      "op": "POP"
    },
    "10447": {
      "fn": "Governance.submitVerification",
      "offset": [
        21157,
        21167
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 84,
      "value": "0x2"
    },
    "10449": {
      "fn": "Governance.submitVerification",
      "offset": [
        21157,
        21167
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "10450": {
      "fn": "Governance.submitVerification",
      "offset": [
        21187,
        21212
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xD"
    },
    "10452": {
      "fn": "Governance.submitVerification",
      "offset": [
        21187,
        21212
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "10453": {
      "fn": "Governance.submitVerification",
      "offset": [
        21157,
        21213
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "10455": {
      "fn": "Governance.submitVerification",
      "offset": [
        21157,
        21213
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "10456": {
      "op": "PUSH4",
      "value": "0x8AD4D6A5"
    },
    "10461": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10463": {
      "op": "SHL"
    },
    "10464": {
      "fn": "Governance.submitVerification",
      "offset": [
        21157,
        21213
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10465": {
      "fn": "Governance.submitVerification",
      "offset": [
        21157,
        21213
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10466": {
      "fn": "Governance.submitVerification",
      "offset": [
        21157,
        21213
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "10468": {
      "fn": "Governance.submitVerification",
      "offset": [
        21157,
        21213
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10469": {
      "fn": "Governance.submitVerification",
      "offset": [
        21157,
        21213
      ],
      "op": "ADD",
      "path": "2"
    },
    "10470": {
      "op": "DUP16"
    },
    "10471": {
      "op": "SWAP1"
    },
    "10472": {
      "op": "MSTORE"
    },
    "10473": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10475": {
      "op": "DUP2"
    },
    "10476": {
      "op": "ADD"
    },
    "10477": {
      "op": "SWAP2"
    },
    "10478": {
      "op": "SWAP1"
    },
    "10479": {
      "op": "SWAP2"
    },
    "10480": {
      "op": "MSTORE"
    },
    "10481": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10483": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10485": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10487": {
      "op": "SHL"
    },
    "10488": {
      "op": "SUB"
    },
    "10489": {
      "fn": "Governance.submitVerification",
      "offset": [
        21157,
        21167
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10490": {
      "fn": "Governance.submitVerification",
      "offset": [
        21157,
        21167
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "10491": {
      "fn": "Governance.submitVerification",
      "offset": [
        21157,
        21167
      ],
      "op": "AND",
      "path": "2"
    },
    "10492": {
      "fn": "Governance.submitVerification",
      "offset": [
        21157,
        21167
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "10493": {
      "op": "POP"
    },
    "10494": {
      "fn": "Governance.submitVerification",
      "offset": [
        21157,
        21178
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x8AD4D6A5"
    },
    "10499": {
      "fn": "Governance.submitVerification",
      "offset": [
        21157,
        21178
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "10500": {
      "op": "POP"
    },
    "10501": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "10503": {
      "op": "ADD"
    },
    "10504": {
      "fn": "Governance.submitVerification",
      "offset": [
        21157,
        21213
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2526"
    },
    "10507": {
      "op": "JUMP"
    },
    "10508": {
      "fn": "Governance.submitVerification",
      "offset": [
        20881,
        22130
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10509": {
      "fn": "Governance.submitVerification",
      "offset": [
        21845,
        21859
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xC0"
    },
    "10511": {
      "fn": "Governance.submitVerification",
      "offset": [
        21845,
        21859
      ],
      "op": "DUP6",
      "path": "2"
    },
    "10512": {
      "fn": "Governance.submitVerification",
      "offset": [
        21845,
        21859
      ],
      "op": "ADD",
      "path": "2"
    },
    "10513": {
      "fn": "Governance.submitVerification",
      "offset": [
        21845,
        21859
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "10514": {
      "fn": "Governance.submitVerification",
      "offset": [
        21829,
        21842
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "10516": {
      "fn": "Governance.submitVerification",
      "offset": [
        21884,
        21898
      ],
      "op": "DUP9",
      "path": "2",
      "statement": 85
    },
    "10517": {
      "fn": "Governance.submitVerification",
      "offset": [
        21884,
        21898
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10518": {
      "fn": "Governance.submitVerification",
      "offset": [
        21884,
        21898
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10519": {
      "fn": "Governance.submitVerification",
      "offset": [
        21884,
        21889
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA"
    },
    "10521": {
      "fn": "Governance.submitVerification",
      "offset": [
        21884,
        21898
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "10523": {
      "fn": "Governance.submitVerification",
      "offset": [
        21884,
        21898
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10524": {
      "fn": "Governance.submitVerification",
      "offset": [
        21884,
        21898
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "10526": {
      "fn": "Governance.submitVerification",
      "offset": [
        21884,
        21898
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10527": {
      "fn": "Governance.submitVerification",
      "offset": [
        21884,
        21898
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "10528": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10530": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10532": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "10534": {
      "op": "SHL"
    },
    "10535": {
      "op": "SUB"
    },
    "10536": {
      "fn": "Governance.submitVerification",
      "offset": [
        21829,
        21859
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10537": {
      "fn": "Governance.submitVerification",
      "offset": [
        21829,
        21859
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "10538": {
      "fn": "Governance.submitVerification",
      "offset": [
        21829,
        21859
      ],
      "op": "AND",
      "path": "2"
    },
    "10539": {
      "fn": "Governance.submitVerification",
      "offset": [
        21829,
        21859
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "10540": {
      "fn": "Governance.submitVerification",
      "offset": [
        21884,
        21898
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10541": {
      "fn": "Governance.submitVerification",
      "offset": [
        21877,
        21898
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2936"
    },
    "10544": {
      "fn": "Governance.submitVerification",
      "offset": [
        21884,
        21898
      ],
      "op": "DUP3",
      "path": "2"
    },
    "10545": {
      "fn": "Governance.submitVerification",
      "offset": [
        21829,
        21842
      ],
      "op": "DUP3",
      "path": "2"
    },
    "10546": {
      "fn": "Governance.submitVerification",
      "offset": [
        21877,
        21898
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x33CD"
    },
    "10549": {
      "fn": "Governance.submitVerification",
      "jump": "i",
      "offset": [
        21877,
        21898
      ],
      "op": "JUMP",
      "path": "2"
    },
    "10550": {
      "fn": "Governance.submitVerification",
      "offset": [
        21877,
        21898
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10551": {
      "op": "POP"
    },
    "10552": {
      "fn": "Governance.submitVerification",
      "offset": [
        21877,
        21898
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "10554": {
      "fn": "Governance.submitVerification",
      "offset": [
        21877,
        21898
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10555": {
      "fn": "Governance.submitVerification",
      "offset": [
        21877,
        21898
      ],
      "op": "ADD",
      "path": "2"
    },
    "10556": {
      "fn": "Governance.submitVerification",
      "offset": [
        21877,
        21898
      ],
      "op": "DUP1",
      "path": "2"
    },
    "10557": {
      "fn": "Governance.submitVerification",
      "offset": [
        21877,
        21898
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "10558": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "10564": {
      "op": "NOT"
    },
    "10565": {
      "fn": "Governance.submitVerification",
      "offset": [
        21877,
        21898
      ],
      "op": "AND",
      "path": "2"
    },
    "10566": {
      "fn": "Governance.submitVerification",
      "offset": [
        21877,
        21898
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10567": {
      "fn": "Governance.submitVerification",
      "offset": [
        21877,
        21898
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "10568": {
      "fn": "Governance.submitVerification",
      "offset": [
        21877,
        21898
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "10570": {
      "fn": "Governance.submitVerification",
      "offset": [
        21877,
        21898
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "10572": {
      "fn": "Governance.submitVerification",
      "offset": [
        21877,
        21898
      ],
      "op": "DUP3",
      "path": "2"
    },
    "10573": {
      "fn": "Governance.submitVerification",
      "offset": [
        21877,
        21898
      ],
      "op": "ADD",
      "path": "2"
    },
    "10574": {
      "fn": "Governance.submitVerification",
      "offset": [
        21877,
        21898
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10575": {
      "fn": "Governance.submitVerification",
      "offset": [
        21877,
        21898
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10576": {
      "fn": "Governance.submitVerification",
      "offset": [
        21877,
        21898
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "10577": {
      "fn": "Governance.submitVerification",
      "offset": [
        21877,
        21898
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "10579": {
      "fn": "Governance.submitVerification",
      "offset": [
        21877,
        21898
      ],
      "op": "DUP3",
      "path": "2"
    },
    "10580": {
      "fn": "Governance.submitVerification",
      "offset": [
        21877,
        21898
      ],
      "op": "ADD",
      "path": "2"
    },
    "10581": {
      "fn": "Governance.submitVerification",
      "offset": [
        21877,
        21898
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10582": {
      "fn": "Governance.submitVerification",
      "offset": [
        21877,
        21898
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10583": {
      "fn": "Governance.submitVerification",
      "offset": [
        21877,
        21898
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "10584": {
      "fn": "Governance.submitVerification",
      "offset": [
        21877,
        21898
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "10586": {
      "fn": "Governance.submitVerification",
      "offset": [
        21877,
        21898
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10587": {
      "fn": "Governance.submitVerification",
      "offset": [
        21877,
        21898
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "10588": {
      "fn": "Governance.submitVerification",
      "offset": [
        21877,
        21898
      ],
      "op": "ADD",
      "path": "2"
    },
    "10589": {
      "fn": "Governance.submitVerification",
      "offset": [
        21877,
        21898
      ],
      "op": "DUP1",
      "path": "2"
    },
    "10590": {
      "fn": "Governance.submitVerification",
      "offset": [
        21877,
        21898
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "10591": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10593": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10595": {
      "op": "PUSH1",
      "value": "0xB8"
    },
    "10597": {
      "op": "SHL"
    },
    "10598": {
      "op": "SUB"
    },
    "10599": {
      "op": "NOT"
    },
    "10600": {
      "fn": "Governance.submitVerification",
      "offset": [
        21877,
        21898
      ],
      "op": "AND",
      "path": "2"
    },
    "10601": {
      "fn": "Governance.submitVerification",
      "offset": [
        21877,
        21898
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10602": {
      "fn": "Governance.submitVerification",
      "offset": [
        21877,
        21898
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "10603": {
      "fn": "Governance.submitVerification",
      "offset": [
        21877,
        21898
      ],
      "op": "DUP1",
      "path": "2"
    },
    "10604": {
      "fn": "Governance.submitVerification",
      "offset": [
        21949,
        21956
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x297D"
    },
    "10607": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "10609": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "10610": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10612": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10614": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10616": {
      "op": "SHL"
    },
    "10617": {
      "op": "SUB"
    },
    "10618": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "AND",
      "path": "12"
    },
    "10619": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10620": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "JUMP",
      "path": "12"
    },
    "10621": {
      "fn": "Governance.submitVerification",
      "offset": [
        21949,
        21956
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10622": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10624": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10626": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10628": {
      "op": "SHL"
    },
    "10629": {
      "op": "SUB"
    },
    "10630": {
      "fn": "Governance.submitVerification",
      "offset": [
        21949,
        21961
      ],
      "op": "AND",
      "path": "2"
    },
    "10631": {
      "fn": "Governance.submitVerification",
      "offset": [
        21969,
        21974
      ],
      "op": "DUP4",
      "path": "2"
    },
    "10632": {
      "fn": "Governance.submitVerification",
      "offset": [
        21949,
        21979
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "10634": {
      "fn": "Governance.submitVerification",
      "offset": [
        21949,
        21979
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "10635": {
      "fn": "Governance.submitVerification",
      "offset": [
        21949,
        21979
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "10637": {
      "fn": "Governance.submitVerification",
      "offset": [
        21949,
        21979
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "10639": {
      "fn": "Governance.submitVerification",
      "offset": [
        21949,
        21979
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "10640": {
      "fn": "Governance.submitVerification",
      "offset": [
        21949,
        21979
      ],
      "op": "DUP1",
      "path": "2"
    },
    "10641": {
      "fn": "Governance.submitVerification",
      "offset": [
        21949,
        21979
      ],
      "op": "DUP4",
      "path": "2"
    },
    "10642": {
      "fn": "Governance.submitVerification",
      "offset": [
        21949,
        21979
      ],
      "op": "SUB",
      "path": "2"
    },
    "10643": {
      "fn": "Governance.submitVerification",
      "offset": [
        21949,
        21979
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10644": {
      "fn": "Governance.submitVerification",
      "offset": [
        21949,
        21979
      ],
      "op": "DUP6",
      "path": "2"
    },
    "10645": {
      "fn": "Governance.submitVerification",
      "offset": [
        21949,
        21979
      ],
      "op": "DUP8",
      "path": "2"
    },
    "10646": {
      "fn": "Governance.submitVerification",
      "offset": [
        21949,
        21979
      ],
      "op": "GAS",
      "path": "2"
    },
    "10647": {
      "fn": "Governance.submitVerification",
      "offset": [
        21949,
        21979
      ],
      "op": "CALL",
      "path": "2"
    },
    "10648": {
      "fn": "Governance.submitVerification",
      "offset": [
        21949,
        21979
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "10649": {
      "fn": "Governance.submitVerification",
      "offset": [
        21949,
        21979
      ],
      "op": "POP",
      "path": "2"
    },
    "10650": {
      "fn": "Governance.submitVerification",
      "offset": [
        21949,
        21979
      ],
      "op": "POP",
      "path": "2"
    },
    "10651": {
      "fn": "Governance.submitVerification",
      "offset": [
        21949,
        21979
      ],
      "op": "POP",
      "path": "2"
    },
    "10652": {
      "fn": "Governance.submitVerification",
      "offset": [
        21949,
        21979
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "10653": {
      "fn": "Governance.submitVerification",
      "offset": [
        21949,
        21979
      ],
      "op": "DUP1",
      "path": "2"
    },
    "10654": {
      "fn": "Governance.submitVerification",
      "offset": [
        21949,
        21979
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "10656": {
      "fn": "Governance.submitVerification",
      "offset": [
        21949,
        21979
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10657": {
      "fn": "Governance.submitVerification",
      "offset": [
        21949,
        21979
      ],
      "op": "EQ",
      "path": "2"
    },
    "10658": {
      "fn": "Governance.submitVerification",
      "offset": [
        21949,
        21979
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x29C7"
    },
    "10661": {
      "fn": "Governance.submitVerification",
      "offset": [
        21949,
        21979
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "10662": {
      "fn": "Governance.submitVerification",
      "offset": [
        21949,
        21979
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "10664": {
      "fn": "Governance.submitVerification",
      "offset": [
        21949,
        21979
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "10665": {
      "fn": "Governance.submitVerification",
      "offset": [
        21949,
        21979
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "10666": {
      "fn": "Governance.submitVerification",
      "offset": [
        21949,
        21979
      ],
      "op": "POP",
      "path": "2"
    },
    "10667": {
      "fn": "Governance.submitVerification",
      "offset": [
        21949,
        21979
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "10669": {
      "fn": "Governance.submitVerification",
      "offset": [
        21949,
        21979
      ],
      "op": "NOT",
      "path": "2"
    },
    "10670": {
      "fn": "Governance.submitVerification",
      "offset": [
        21949,
        21979
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3F"
    },
    "10672": {
      "fn": "Governance.submitVerification",
      "offset": [
        21949,
        21979
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "10673": {
      "fn": "Governance.submitVerification",
      "offset": [
        21949,
        21979
      ],
      "op": "ADD",
      "path": "2"
    },
    "10674": {
      "fn": "Governance.submitVerification",
      "offset": [
        21949,
        21979
      ],
      "op": "AND",
      "path": "2"
    },
    "10675": {
      "fn": "Governance.submitVerification",
      "offset": [
        21949,
        21979
      ],
      "op": "DUP3",
      "path": "2"
    },
    "10676": {
      "fn": "Governance.submitVerification",
      "offset": [
        21949,
        21979
      ],
      "op": "ADD",
      "path": "2"
    },
    "10677": {
      "fn": "Governance.submitVerification",
      "offset": [
        21949,
        21979
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "10679": {
      "fn": "Governance.submitVerification",
      "offset": [
        21949,
        21979
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10680": {
      "fn": "Governance.submitVerification",
      "offset": [
        21949,
        21979
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "10681": {
      "fn": "Governance.submitVerification",
      "offset": [
        21949,
        21979
      ],
      "op": "DUP3",
      "path": "2"
    },
    "10682": {
      "fn": "Governance.submitVerification",
      "offset": [
        21949,
        21979
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10683": {
      "fn": "Governance.submitVerification",
      "offset": [
        21949,
        21979
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "10684": {
      "fn": "Governance.submitVerification",
      "offset": [
        21949,
        21979
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "10686": {
      "fn": "Governance.submitVerification",
      "offset": [
        21949,
        21979
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "10688": {
      "fn": "Governance.submitVerification",
      "offset": [
        21949,
        21979
      ],
      "op": "DUP5",
      "path": "2"
    },
    "10689": {
      "fn": "Governance.submitVerification",
      "offset": [
        21949,
        21979
      ],
      "op": "ADD",
      "path": "2"
    },
    "10690": {
      "fn": "Governance.submitVerification",
      "offset": [
        21949,
        21979
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "10691": {
      "fn": "Governance.submitVerification",
      "offset": [
        21949,
        21979
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x29CC"
    },
    "10694": {
      "fn": "Governance.submitVerification",
      "offset": [
        21949,
        21979
      ],
      "op": "JUMP",
      "path": "2"
    },
    "10695": {
      "fn": "Governance.submitVerification",
      "offset": [
        21949,
        21979
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10696": {
      "fn": "Governance.submitVerification",
      "offset": [
        21949,
        21979
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "10698": {
      "fn": "Governance.submitVerification",
      "offset": [
        21949,
        21979
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "10699": {
      "fn": "Governance.submitVerification",
      "offset": [
        21949,
        21979
      ],
      "op": "POP",
      "path": "2"
    },
    "10700": {
      "fn": "Governance.submitVerification",
      "offset": [
        21949,
        21979
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10701": {
      "fn": "Governance.submitVerification",
      "offset": [
        21949,
        21979
      ],
      "op": "POP",
      "path": "2"
    },
    "10702": {
      "fn": "Governance.submitVerification",
      "offset": [
        21916,
        21979
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "10703": {
      "fn": "Governance.submitVerification",
      "offset": [
        21916,
        21979
      ],
      "op": "POP",
      "path": "2"
    },
    "10704": {
      "fn": "Governance.submitVerification",
      "offset": [
        21916,
        21979
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "10705": {
      "fn": "Governance.submitVerification",
      "offset": [
        21916,
        21979
      ],
      "op": "POP",
      "path": "2"
    },
    "10706": {
      "branch": 168,
      "fn": "Governance.submitVerification",
      "offset": [
        22055,
        22059
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 86
    },
    "10707": {
      "fn": "Governance.submitVerification",
      "offset": [
        22047,
        22084
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x29EE"
    },
    "10710": {
      "branch": 168,
      "fn": "Governance.submitVerification",
      "offset": [
        22047,
        22084
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "10711": {
      "fn": "Governance.submitVerification",
      "offset": [
        22047,
        22084
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "10713": {
      "fn": "Governance.submitVerification",
      "offset": [
        22047,
        22084
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "10714": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10718": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10720": {
      "op": "SHL"
    },
    "10721": {
      "fn": "Governance.submitVerification",
      "offset": [
        22047,
        22084
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10722": {
      "fn": "Governance.submitVerification",
      "offset": [
        22047,
        22084
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10723": {
      "fn": "Governance.submitVerification",
      "offset": [
        22047,
        22084
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "10725": {
      "fn": "Governance.submitVerification",
      "offset": [
        22047,
        22084
      ],
      "op": "ADD",
      "path": "2"
    },
    "10726": {
      "fn": "Governance.submitVerification",
      "offset": [
        22047,
        22084
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE54"
    },
    "10729": {
      "fn": "Governance.submitVerification",
      "offset": [
        22047,
        22084
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10730": {
      "fn": "Governance.submitVerification",
      "offset": [
        22047,
        22084
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x41A7"
    },
    "10733": {
      "fn": "Governance.submitVerification",
      "jump": "i",
      "offset": [
        22047,
        22084
      ],
      "op": "JUMP",
      "path": "2"
    },
    "10734": {
      "fn": "Governance.submitVerification",
      "offset": [
        22047,
        22084
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10735": {
      "fn": "Governance.submitVerification",
      "offset": [
        21723,
        22130
      ],
      "op": "POP",
      "path": "2"
    },
    "10736": {
      "fn": "Governance.submitVerification",
      "offset": [
        21723,
        22130
      ],
      "op": "POP",
      "path": "2"
    },
    "10737": {
      "fn": "Governance.submitVerification",
      "offset": [
        21723,
        22130
      ],
      "op": "POP",
      "path": "2"
    },
    "10738": {
      "fn": "Governance.submitVerification",
      "offset": [
        20881,
        22130
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10739": {
      "branch": 169,
      "fn": "Governance.submitVerification",
      "offset": [
        22204,
        22218
      ],
      "op": "DUP3",
      "path": "2"
    },
    "10740": {
      "fn": "Governance.submitVerification",
      "offset": [
        22201,
        22932
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "10741": {
      "fn": "Governance.submitVerification",
      "offset": [
        22201,
        22932
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1D2B"
    },
    "10744": {
      "branch": 169,
      "fn": "Governance.submitVerification",
      "offset": [
        22201,
        22932
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "10745": {
      "fn": "Governance.submitVerification",
      "offset": [
        22233,
        22260
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "10747": {
      "fn": "Governance.submitVerification",
      "offset": [
        22263,
        22312
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2A13"
    },
    "10750": {
      "fn": "Governance.submitVerification",
      "offset": [
        22287,
        22311
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x6"
    },
    "10752": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5676,
        5688
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "10753": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5676,
        5688
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xF"
    },
    "10755": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5676,
        5688
      ],
      "op": "DUP2",
      "path": "1"
    },
    "10756": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5676,
        5688
      ],
      "op": "DUP2",
      "path": "1"
    },
    "10757": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5676,
        5688
      ],
      "op": "SIGNEXTEND",
      "path": "1"
    },
    "10758": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10760": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "10762": {
      "op": "SHL"
    },
    "10763": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5655,
        5665
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "10764": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5655,
        5665
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "10765": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5655,
        5665
      ],
      "op": "DIV",
      "path": "1"
    },
    "10766": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5655,
        5665
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "10767": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5655,
        5665
      ],
      "op": "SIGNEXTEND",
      "path": "1"
    },
    "10768": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5648,
        5689
      ],
      "op": "SUB",
      "path": "1"
    },
    "10769": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5648,
        5689
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "10770": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5344,
        5707
      ],
      "op": "JUMP",
      "path": "1"
    },
    "10771": {
      "fn": "Governance.submitVerification",
      "offset": [
        22263,
        22312
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10772": {
      "fn": "Governance.submitVerification",
      "offset": [
        22233,
        22312
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10773": {
      "fn": "Governance.submitVerification",
      "offset": [
        22233,
        22312
      ],
      "op": "POP",
      "path": "2"
    },
    "10774": {
      "fn": "Governance.submitVerification",
      "offset": [
        22414,
        22423
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "10776": {
      "fn": "Governance.submitVerification",
      "offset": [
        22410,
        22922
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10777": {
      "fn": "Governance.submitVerification",
      "offset": [
        22432,
        22451
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10778": {
      "fn": "Governance.submitVerification",
      "offset": [
        22428,
        22429
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10779": {
      "fn": "Governance.submitVerification",
      "offset": [
        22428,
        22451
      ],
      "op": "LT",
      "path": "2"
    },
    "10780": {
      "fn": "Governance.submitVerification",
      "offset": [
        22410,
        22922
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "10781": {
      "fn": "Governance.submitVerification",
      "offset": [
        22410,
        22922
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2A7D"
    },
    "10784": {
      "fn": "Governance.submitVerification",
      "offset": [
        22410,
        22922
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "10785": {
      "fn": "Governance.submitVerification",
      "offset": [
        22535,
        22542
      ],
      "op": "DUP9",
      "path": "2"
    },
    "10786": {
      "fn": "Governance.submitVerification",
      "offset": [
        22484,
        22532
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2A2C"
    },
    "10789": {
      "fn": "Governance.submitVerification",
      "offset": [
        22504,
        22528
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x6"
    },
    "10791": {
      "fn": "Governance.submitVerification",
      "offset": [
        22530,
        22531
      ],
      "op": "DUP4",
      "path": "2"
    },
    "10792": {
      "fn": "Governance.submitVerification",
      "offset": [
        22484,
        22503
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2FBB"
    },
    "10795": {
      "fn": "Governance.submitVerification",
      "jump": "i",
      "offset": [
        22484,
        22532
      ],
      "op": "JUMP",
      "path": "2"
    },
    "10796": {
      "fn": "Governance.submitVerification",
      "offset": [
        22484,
        22532
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10797": {
      "branch": 170,
      "fn": "Governance.submitVerification",
      "offset": [
        22476,
        22542
      ],
      "op": "SUB",
      "path": "2"
    },
    "10798": {
      "fn": "Governance.submitVerification",
      "offset": [
        22472,
        22876
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2A75"
    },
    "10801": {
      "branch": 170,
      "fn": "Governance.submitVerification",
      "offset": [
        22472,
        22876
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "10802": {
      "fn": "Governance.submitVerification",
      "offset": [
        22565,
        22582
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "10804": {
      "fn": "Governance.submitVerification",
      "offset": [
        22585,
        22636
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2A3D"
    },
    "10807": {
      "fn": "Governance.submitVerification",
      "offset": [
        22611,
        22635
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x6"
    },
    "10809": {
      "fn": "Governance.submitVerification",
      "offset": [
        22585,
        22610
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x31FD"
    },
    "10812": {
      "fn": "Governance.submitVerification",
      "jump": "i",
      "offset": [
        22585,
        22636
      ],
      "op": "JUMP",
      "path": "2"
    },
    "10813": {
      "fn": "Governance.submitVerification",
      "offset": [
        22585,
        22636
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10814": {
      "fn": "Governance.submitVerification",
      "offset": [
        22565,
        22636
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10815": {
      "op": "POP"
    },
    "10816": {
      "fn": "Governance.submitVerification",
      "offset": [
        22661,
        22665
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10817": {
      "branch": 171,
      "fn": "Governance.submitVerification",
      "offset": [
        22661,
        22665
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "10818": {
      "fn": "Governance.submitVerification",
      "offset": [
        22658,
        22858
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2A73"
    },
    "10821": {
      "branch": 171,
      "fn": "Governance.submitVerification",
      "offset": [
        22658,
        22858
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "10822": {
      "fn": "Governance.submitVerification",
      "offset": [
        22743,
        22767
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 87,
      "value": "0x6"
    },
    "10824": {
      "fn": "Governance.submitVerification",
      "offset": [
        22781,
        22812
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "10825": {
      "fn": "Governance.submitVerification",
      "offset": [
        22826,
        22835
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10826": {
      "fn": "Governance.submitVerification",
      "offset": [
        22826,
        22835
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10827": {
      "fn": "Governance.submitVerification",
      "offset": [
        22743,
        22773
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "10829": {
      "fn": "Governance.submitVerification",
      "offset": [
        22743,
        22773
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10830": {
      "fn": "Governance.submitVerification",
      "offset": [
        22743,
        22823
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "10832": {
      "fn": "Governance.submitVerification",
      "offset": [
        22743,
        22823
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10833": {
      "fn": "Governance.submitVerification",
      "offset": [
        22781,
        22821
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2A5E"
    },
    "10836": {
      "fn": "Governance.submitVerification",
      "offset": [
        22781,
        22821
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10837": {
      "fn": "Governance.submitVerification",
      "offset": [
        22819,
        22820
      ],
      "op": "DUP7",
      "path": "2"
    },
    "10838": {
      "fn": "Governance.submitVerification",
      "offset": [
        22819,
        22820
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10839": {
      "fn": "Governance.submitVerification",
      "offset": [
        22781,
        22812
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xF"
    },
    "10841": {
      "fn": "Governance.submitVerification",
      "offset": [
        22781,
        22812
      ],
      "op": "SIGNEXTEND",
      "path": "2"
    },
    "10842": {
      "fn": "Governance.submitVerification",
      "offset": [
        22781,
        22821
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x41D5"
    },
    "10845": {
      "fn": "Governance.submitVerification",
      "jump": "i",
      "offset": [
        22781,
        22821
      ],
      "op": "JUMP",
      "path": "2"
    },
    "10846": {
      "fn": "Governance.submitVerification",
      "offset": [
        22781,
        22821
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10847": {
      "fn": "Governance.submitVerification",
      "offset": [
        22743,
        22823
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xF"
    },
    "10849": {
      "fn": "Governance.submitVerification",
      "offset": [
        22743,
        22823
      ],
      "op": "SIGNEXTEND",
      "path": "2"
    },
    "10850": {
      "fn": "Governance.submitVerification",
      "offset": [
        22743,
        22823
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10851": {
      "fn": "Governance.submitVerification",
      "offset": [
        22743,
        22823
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10852": {
      "fn": "Governance.submitVerification",
      "offset": [
        22743,
        22823
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "10854": {
      "fn": "Governance.submitVerification",
      "offset": [
        22743,
        22823
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10855": {
      "fn": "Governance.submitVerification",
      "offset": [
        22743,
        22823
      ],
      "op": "ADD",
      "path": "2"
    },
    "10856": {
      "fn": "Governance.submitVerification",
      "offset": [
        22743,
        22823
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "10857": {
      "fn": "Governance.submitVerification",
      "offset": [
        22743,
        22823
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10858": {
      "fn": "Governance.submitVerification",
      "offset": [
        22743,
        22823
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "10859": {
      "fn": "Governance.submitVerification",
      "offset": [
        22743,
        22823
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10860": {
      "fn": "Governance.submitVerification",
      "offset": [
        22743,
        22823
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "10862": {
      "fn": "Governance.submitVerification",
      "offset": [
        22743,
        22823
      ],
      "op": "ADD",
      "path": "2"
    },
    "10863": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10865": {
      "fn": "Governance.submitVerification",
      "offset": [
        22743,
        22823
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "10866": {
      "fn": "Governance.submitVerification",
      "offset": [
        22743,
        22835
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "10867": {
      "fn": "Governance.submitVerification",
      "offset": [
        22658,
        22858
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10868": {
      "fn": "Governance.submitVerification",
      "offset": [
        22543,
        22876
      ],
      "op": "POP",
      "path": "2"
    },
    "10869": {
      "fn": "Governance.submitVerification",
      "offset": [
        22472,
        22876
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10870": {
      "fn": "Governance.submitVerification",
      "offset": [
        22903,
        22906
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 88,
      "value": "0x1"
    },
    "10872": {
      "fn": "Governance.submitVerification",
      "offset": [
        22903,
        22906
      ],
      "op": "ADD",
      "path": "2"
    },
    "10873": {
      "fn": "Governance.submitVerification",
      "offset": [
        22410,
        22922
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2A18"
    },
    "10876": {
      "fn": "Governance.submitVerification",
      "offset": [
        22410,
        22922
      ],
      "op": "JUMP",
      "path": "2"
    },
    "10877": {
      "fn": "Governance.submitVerification",
      "offset": [
        22410,
        22922
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10878": {
      "fn": "Governance.submitVerification",
      "offset": [
        22410,
        22922
      ],
      "op": "POP",
      "path": "2"
    },
    "10879": {
      "fn": "Governance.submitVerification",
      "offset": [
        22219,
        22932
      ],
      "op": "POP",
      "path": "2"
    },
    "10880": {
      "fn": "Governance.submitVerification",
      "offset": [
        18827,
        22939
      ],
      "op": "POP",
      "path": "2"
    },
    "10881": {
      "fn": "Governance.submitVerification",
      "offset": [
        18827,
        22939
      ],
      "op": "POP",
      "path": "2"
    },
    "10882": {
      "fn": "Governance.submitVerification",
      "offset": [
        18827,
        22939
      ],
      "op": "POP",
      "path": "2"
    },
    "10883": {
      "fn": "Governance.submitVerification",
      "offset": [
        18827,
        22939
      ],
      "op": "POP",
      "path": "2"
    },
    "10884": {
      "fn": "Governance.submitVerification",
      "offset": [
        18827,
        22939
      ],
      "op": "POP",
      "path": "2"
    },
    "10885": {
      "fn": "Governance.submitVerification",
      "offset": [
        18731,
        22939
      ],
      "op": "POP",
      "path": "2"
    },
    "10886": {
      "fn": "Governance.submitVerification",
      "offset": [
        18731,
        22939
      ],
      "op": "POP",
      "path": "2"
    },
    "10887": {
      "fn": "Governance.submitVerification",
      "offset": [
        18731,
        22939
      ],
      "op": "POP",
      "path": "2"
    },
    "10888": {
      "fn": "Governance.submitVerification",
      "jump": "o",
      "offset": [
        18731,
        22939
      ],
      "op": "JUMP",
      "path": "2"
    },
    "10889": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10890": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "10892": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "10893": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10895": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10897": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10899": {
      "op": "SHL"
    },
    "10900": {
      "op": "SUB"
    },
    "10901": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "AND",
      "path": "12"
    },
    "10902": {
      "fn": "Context._msgSender",
      "offset": [
        679,
        689
      ],
      "op": "CALLER",
      "path": "6"
    },
    "10903": {
      "offset": [
        1221,
        1244
      ],
      "op": "EQ",
      "path": "12"
    },
    "10904": {
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2AB3"
    },
    "10907": {
      "offset": [
        1213,
        1281
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "10908": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "10910": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "10911": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10915": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10917": {
      "op": "SHL"
    },
    "10918": {
      "offset": [
        1213,
        1281
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10919": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "10920": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "10922": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "ADD",
      "path": "12"
    },
    "10923": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xE54"
    },
    "10926": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "10927": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x3D4B"
    },
    "10930": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1213,
        1281
      ],
      "op": "JUMP",
      "path": "12"
    },
    "10931": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "10932": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10934": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10936": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10938": {
      "op": "SHL"
    },
    "10939": {
      "op": "SUB"
    },
    "10940": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1990,
        2012
      ],
      "op": "DUP2",
      "path": "12",
      "statement": 89
    },
    "10941": {
      "branch": 179,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1990,
        2012
      ],
      "op": "AND",
      "path": "12"
    },
    "10942": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2B18"
    },
    "10945": {
      "branch": 179,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "10946": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "10948": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "10949": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10953": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10955": {
      "op": "SHL"
    },
    "10956": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "DUP2",
      "path": "12"
    },
    "10957": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "10958": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10960": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "10962": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "DUP3",
      "path": "12"
    },
    "10963": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "ADD",
      "path": "12"
    },
    "10964": {
      "op": "MSTORE"
    },
    "10965": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "10967": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10969": {
      "op": "DUP3"
    },
    "10970": {
      "op": "ADD"
    },
    "10971": {
      "op": "MSTORE"
    },
    "10972": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
    },
    "11005": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "11007": {
      "op": "DUP3"
    },
    "11008": {
      "op": "ADD"
    },
    "11009": {
      "op": "MSTORE"
    },
    "11010": {
      "op": "PUSH6",
      "value": "0x646472657373"
    },
    "11017": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "11019": {
      "op": "SHL"
    },
    "11020": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "11022": {
      "op": "DUP3"
    },
    "11023": {
      "op": "ADD"
    },
    "11024": {
      "op": "MSTORE"
    },
    "11025": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "11027": {
      "op": "ADD"
    },
    "11028": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xE54"
    },
    "11031": {
      "op": "JUMP"
    },
    "11032": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "11033": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2066,
        2085
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 90,
      "value": "0x2B21"
    },
    "11036": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2076,
        2084
      ],
      "op": "DUP2",
      "path": "12"
    },
    "11037": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2066,
        2075
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x31AB"
    },
    "11040": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2066,
        2085
      ],
      "op": "JUMP",
      "path": "12"
    },
    "11041": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2066,
        2085
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "11042": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "POP",
      "path": "12"
    },
    "11043": {
      "fn": "Ownable.transferOwnership",
      "jump": "o",
      "offset": [
        1901,
        2093
      ],
      "op": "JUMP",
      "path": "12"
    },
    "11044": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6383,
        7071
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11045": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6458,
        6462
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "11047": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6474,
        6501
      ],
      "op": "DUP1",
      "path": "2"
    },
    "11048": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6504,
        6553
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2B40"
    },
    "11051": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6528,
        6552
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x6"
    },
    "11053": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5676,
        5688
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "11054": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5676,
        5688
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xF"
    },
    "11056": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5676,
        5688
      ],
      "op": "DUP2",
      "path": "1"
    },
    "11057": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5676,
        5688
      ],
      "op": "DUP2",
      "path": "1"
    },
    "11058": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5676,
        5688
      ],
      "op": "SIGNEXTEND",
      "path": "1"
    },
    "11059": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11061": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "11063": {
      "op": "SHL"
    },
    "11064": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5655,
        5665
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "11065": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5655,
        5665
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "11066": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5655,
        5665
      ],
      "op": "DIV",
      "path": "1"
    },
    "11067": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5655,
        5665
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "11068": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5655,
        5665
      ],
      "op": "SIGNEXTEND",
      "path": "1"
    },
    "11069": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5648,
        5689
      ],
      "op": "SUB",
      "path": "1"
    },
    "11070": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5648,
        5689
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "11071": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5344,
        5707
      ],
      "op": "JUMP",
      "path": "1"
    },
    "11072": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6504,
        6553
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11073": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6474,
        6553
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11074": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6474,
        6553
      ],
      "op": "POP",
      "path": "2"
    },
    "11075": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6563,
        6581
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2B4A"
    },
    "11078": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6563,
        6581
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3379"
    },
    "11081": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "jump": "i",
      "offset": [
        6563,
        6581
      ],
      "op": "JUMP",
      "path": "2"
    },
    "11082": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6563,
        6581
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11083": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6707,
        6716
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "11085": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6703,
        7043
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11086": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6725,
        6744
      ],
      "op": "DUP3",
      "path": "2"
    },
    "11087": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6721,
        6722
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11088": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6721,
        6744
      ],
      "op": "LT",
      "path": "2"
    },
    "11089": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6703,
        7043
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "11090": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6703,
        7043
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2CE9"
    },
    "11093": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6703,
        7043
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "11094": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6770,
        6775
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 91,
      "value": "0xA"
    },
    "11096": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6770,
        6833
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "11098": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6784,
        6831
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2B64"
    },
    "11101": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6804,
        6828
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x6"
    },
    "11103": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6829,
        6830
      ],
      "op": "DUP5",
      "path": "2"
    },
    "11104": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6784,
        6803
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2FBB"
    },
    "11107": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "jump": "i",
      "offset": [
        6784,
        6831
      ],
      "op": "JUMP",
      "path": "2"
    },
    "11108": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6784,
        6831
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11109": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6776,
        6832
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "11111": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6776,
        6832
      ],
      "op": "SHR",
      "path": "2"
    },
    "11112": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6770,
        6833
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11113": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6770,
        6833
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11114": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6770,
        6833
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "11116": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6770,
        6833
      ],
      "op": "ADD",
      "path": "2"
    },
    "11117": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6770,
        6833
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11118": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6770,
        6833
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11119": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6770,
        6833
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11120": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6770,
        6833
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "11122": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6770,
        6833
      ],
      "op": "ADD",
      "path": "2"
    },
    "11123": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6770,
        6833
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "11125": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6770,
        6833
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "11126": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "11128": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "11129": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "DUP1",
      "path": "2"
    },
    "11130": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x140"
    },
    "11133": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "ADD",
      "path": "2"
    },
    "11134": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "11136": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11137": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11138": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11139": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "11141": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "DUP3",
      "path": "2"
    },
    "11142": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "ADD",
      "path": "2"
    },
    "11143": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "DUP1",
      "path": "2"
    },
    "11144": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "11145": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2B91"
    },
    "11148": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11149": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3C5E"
    },
    "11152": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "jump": "i",
      "offset": [
        6761,
        6833
      ],
      "op": "JUMP",
      "path": "2"
    },
    "11153": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11154": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "DUP1",
      "path": "2"
    },
    "11155": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "11157": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "ADD",
      "path": "2"
    },
    "11158": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "11160": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "DUP1",
      "path": "2"
    },
    "11161": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "11162": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "DIV",
      "path": "2"
    },
    "11163": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "MUL",
      "path": "2"
    },
    "11164": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "11166": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "ADD",
      "path": "2"
    },
    "11167": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "11169": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "11170": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11171": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11172": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "ADD",
      "path": "2"
    },
    "11173": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "11175": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11176": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "DUP1",
      "path": "2"
    },
    "11177": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "11178": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "11179": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11180": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11181": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11182": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11183": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "11185": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "ADD",
      "path": "2"
    },
    "11186": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "DUP3",
      "path": "2"
    },
    "11187": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "DUP1",
      "path": "2"
    },
    "11188": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "11189": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2BBD"
    },
    "11192": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11193": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3C5E"
    },
    "11196": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "jump": "i",
      "offset": [
        6761,
        6833
      ],
      "op": "JUMP",
      "path": "2"
    },
    "11197": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11198": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "DUP1",
      "path": "2"
    },
    "11199": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "11200": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2C0A"
    },
    "11203": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "11204": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "DUP1",
      "path": "2"
    },
    "11205": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "11207": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "LT",
      "path": "2"
    },
    "11208": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2BDF"
    },
    "11211": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "11212": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "11215": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "DUP1",
      "path": "2"
    },
    "11216": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "DUP4",
      "path": "2"
    },
    "11217": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "11218": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "DIV",
      "path": "2"
    },
    "11219": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "MUL",
      "path": "2"
    },
    "11220": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "DUP4",
      "path": "2"
    },
    "11221": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11222": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "11223": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "11225": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "ADD",
      "path": "2"
    },
    "11226": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "11227": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2C0A"
    },
    "11230": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "JUMP",
      "path": "2"
    },
    "11231": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11232": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "DUP3",
      "path": "2"
    },
    "11233": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "ADD",
      "path": "2"
    },
    "11234": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "11235": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11236": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "11238": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11239": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "11241": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "11243": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "11244": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11245": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11246": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11247": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "11248": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11249": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11250": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11251": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "11253": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "ADD",
      "path": "2"
    },
    "11254": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11255": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "11257": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "ADD",
      "path": "2"
    },
    "11258": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "DUP1",
      "path": "2"
    },
    "11259": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "DUP4",
      "path": "2"
    },
    "11260": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "GT",
      "path": "2"
    },
    "11261": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2BED"
    },
    "11264": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "11265": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "DUP3",
      "path": "2"
    },
    "11266": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11267": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "SUB",
      "path": "2"
    },
    "11268": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "11270": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "AND",
      "path": "2"
    },
    "11271": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "DUP3",
      "path": "2"
    },
    "11272": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "ADD",
      "path": "2"
    },
    "11273": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "11274": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11275": {
      "op": "POP"
    },
    "11276": {
      "op": "POP"
    },
    "11277": {
      "op": "POP"
    },
    "11278": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "11279": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "DUP4",
      "path": "2"
    },
    "11280": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11281": {
      "op": "POP"
    },
    "11282": {
      "op": "POP"
    },
    "11283": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "11285": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "DUP3",
      "path": "2"
    },
    "11286": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "ADD",
      "path": "2"
    },
    "11287": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "11288": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "11294": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11295": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11296": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "AND",
      "path": "2"
    },
    "11297": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "11299": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "DUP4",
      "path": "2"
    },
    "11300": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "ADD",
      "path": "2"
    },
    "11301": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11302": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "11304": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "DUP4",
      "path": "2"
    },
    "11305": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "ADD",
      "path": "2"
    },
    "11306": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "11307": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "11309": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "DUP4",
      "path": "2"
    },
    "11310": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "ADD",
      "path": "2"
    },
    "11311": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11312": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "11314": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "DUP4",
      "path": "2"
    },
    "11315": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "ADD",
      "path": "2"
    },
    "11316": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "11317": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "11319": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "DUP4",
      "path": "2"
    },
    "11320": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "ADD",
      "path": "2"
    },
    "11321": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11322": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "11324": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11325": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "11326": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "ADD",
      "path": "2"
    },
    "11327": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "11328": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "11330": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11331": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "AND",
      "path": "2"
    },
    "11332": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x80"
    },
    "11334": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "DUP4",
      "path": "2"
    },
    "11335": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "ADD",
      "path": "2"
    },
    "11336": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11337": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "11340": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "DUP1",
      "path": "2"
    },
    "11341": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "DUP3",
      "path": "2"
    },
    "11342": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "DIV",
      "path": "2"
    },
    "11343": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "PUSH3",
      "path": "2",
      "value": "0xFFFFFF"
    },
    "11347": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "AND",
      "path": "2"
    },
    "11348": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA0"
    },
    "11350": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "DUP5",
      "path": "2"
    },
    "11351": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "ADD",
      "path": "2"
    },
    "11352": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11353": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11355": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11357": {
      "op": "SHL"
    },
    "11358": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "DUP3",
      "path": "2"
    },
    "11359": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "DIV",
      "path": "2"
    },
    "11360": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11362": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11364": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "11366": {
      "op": "SHL"
    },
    "11367": {
      "op": "SUB"
    },
    "11368": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "AND",
      "path": "2"
    },
    "11369": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xC0"
    },
    "11371": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "DUP5",
      "path": "2"
    },
    "11372": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "ADD",
      "path": "2"
    },
    "11373": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11374": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11376": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "11378": {
      "op": "SHL"
    },
    "11379": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "DUP3",
      "path": "2"
    },
    "11380": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "DIV",
      "path": "2"
    },
    "11381": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "11384": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11385": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11386": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "AND",
      "path": "2"
    },
    "11387": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE0"
    },
    "11389": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "DUP6",
      "path": "2"
    },
    "11390": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "ADD",
      "path": "2"
    },
    "11391": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11392": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11394": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "11396": {
      "op": "SHL"
    },
    "11397": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "DUP4",
      "path": "2"
    },
    "11398": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "DIV",
      "path": "2"
    },
    "11399": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "AND",
      "path": "2"
    },
    "11400": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11401": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "DUP4",
      "path": "2"
    },
    "11402": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "ADD",
      "path": "2"
    },
    "11403": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11404": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11406": {
      "op": "PUSH1",
      "value": "0x90"
    },
    "11408": {
      "op": "SHL"
    },
    "11409": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11410": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "DIV",
      "path": "2"
    },
    "11411": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "DUP3",
      "path": "2"
    },
    "11412": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "AND",
      "path": "2"
    },
    "11413": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x120"
    },
    "11416": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "11417": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "DUP3",
      "path": "2"
    },
    "11418": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "ADD",
      "path": "2"
    },
    "11419": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6761,
        6833
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11420": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6851,
        6887
      ],
      "op": "DUP3",
      "path": "2"
    },
    "11421": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6851,
        6887
      ],
      "op": "ADD",
      "path": "2"
    },
    "11422": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6851,
        6887
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "11423": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6851,
        6887
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "11424": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6851,
        6887
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "11425": {
      "op": "POP"
    },
    "11426": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6890,
        6905
      ],
      "op": "TIMESTAMP",
      "path": "2"
    },
    "11427": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6851,
        6905
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "11428": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6851,
        6905
      ],
      "op": "AND",
      "path": "2"
    },
    "11429": {
      "branch": 172,
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6851,
        6905
      ],
      "op": "LT",
      "path": "2"
    },
    "11430": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6851,
        6931
      ],
      "op": "DUP1",
      "path": "2"
    },
    "11431": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6851,
        6931
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "11432": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6851,
        6931
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2CBC"
    },
    "11435": {
      "branch": 172,
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6851,
        6931
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "11436": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6851,
        6931
      ],
      "op": "POP",
      "path": "2"
    },
    "11437": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6925,
        6931
      ],
      "op": "DUP5",
      "path": "2"
    },
    "11438": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6909,
        6915
      ],
      "op": "DUP3",
      "path": "2"
    },
    "11439": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6909,
        6921
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "11441": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6909,
        6921
      ],
      "op": "ADD",
      "path": "2"
    },
    "11442": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6909,
        6921
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "11443": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6909,
        6931
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "11449": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6909,
        6931
      ],
      "op": "AND",
      "path": "2"
    },
    "11450": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6909,
        6931
      ],
      "op": "EQ",
      "path": "2"
    },
    "11451": {
      "branch": 173,
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6909,
        6931
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "11452": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6851,
        6931
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11453": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6851,
        6960
      ],
      "op": "DUP1",
      "path": "2"
    },
    "11454": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6851,
        6960
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "11455": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6851,
        6960
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2CD1"
    },
    "11458": {
      "branch": 173,
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6851,
        6960
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "11459": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6851,
        6960
      ],
      "op": "POP",
      "path": "2"
    },
    "11460": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6954,
        6960
      ],
      "op": "DUP5",
      "path": "2"
    },
    "11461": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6935,
        6941
      ],
      "op": "DUP3",
      "path": "2"
    },
    "11462": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6935,
        6951
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "11465": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6935,
        6951
      ],
      "op": "ADD",
      "path": "2"
    },
    "11466": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6935,
        6951
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "11467": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6935,
        6960
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "11470": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6935,
        6960
      ],
      "op": "AND",
      "path": "2"
    },
    "11471": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6935,
        6960
      ],
      "op": "EQ",
      "path": "2"
    },
    "11472": {
      "branch": 174,
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6935,
        6960
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "11473": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6851,
        6960
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11474": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6847,
        7005
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "11475": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6847,
        7005
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2CE1"
    },
    "11478": {
      "branch": 174,
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6847,
        7005
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "11479": {
      "op": "POP"
    },
    "11480": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6986,
        6990
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 92,
      "value": "0x1"
    },
    "11482": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6986,
        6990
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "11483": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6383,
        7071
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "11484": {
      "op": "POP"
    },
    "11485": {
      "op": "POP"
    },
    "11486": {
      "op": "POP"
    },
    "11487": {
      "op": "POP"
    },
    "11488": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "jump": "o",
      "offset": [
        6383,
        7071
      ],
      "op": "JUMP",
      "path": "2"
    },
    "11489": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6847,
        7005
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11490": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7028,
        7031
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 93,
      "value": "0x1"
    },
    "11492": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7028,
        7031
      ],
      "op": "ADD",
      "path": "2"
    },
    "11493": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6703,
        7043
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2B4D"
    },
    "11496": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6703,
        7043
      ],
      "op": "JUMP",
      "path": "2"
    },
    "11497": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6703,
        7043
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11498": {
      "op": "POP"
    },
    "11499": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7059,
        7064
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 94,
      "value": "0x0"
    },
    "11501": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7059,
        7064
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "11502": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6383,
        7071
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "11503": {
      "op": "POP"
    },
    "11504": {
      "op": "POP"
    },
    "11505": {
      "op": "POP"
    },
    "11506": {
      "op": "POP"
    },
    "11507": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "jump": "o",
      "offset": [
        6383,
        7071
      ],
      "op": "JUMP",
      "path": "2"
    },
    "11508": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10600,
        11821
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11509": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10682,
        10691
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "11511": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10678,
        11815
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11512": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10697,
        10706
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "11514": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10697,
        10713
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "11515": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10695,
        10713
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11516": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10695,
        10713
      ],
      "op": "LT",
      "path": "2"
    },
    "11517": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10678,
        11815
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "11518": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10678,
        11815
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2E8D"
    },
    "11521": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10678,
        11815
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "11522": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10813,
        10822
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11523": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10796,
        10823
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "11525": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10796,
        10823
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "11526": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10796,
        10823
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "11528": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10796,
        10823
      ],
      "op": "ADD",
      "path": "2"
    },
    "11529": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10796,
        10823
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2D12"
    },
    "11532": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10796,
        10823
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "11533": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10796,
        10823
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11534": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10796,
        10823
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4216"
    },
    "11537": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "jump": "i",
      "offset": [
        10796,
        10823
      ],
      "op": "JUMP",
      "path": "2"
    },
    "11538": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10796,
        10823
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11539": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10796,
        10823
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "11541": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10796,
        10823
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "11542": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10796,
        10823
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "11544": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10796,
        10823
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11545": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10796,
        10823
      ],
      "op": "DUP4",
      "path": "2"
    },
    "11546": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10796,
        10823
      ],
      "op": "SUB",
      "path": "2"
    },
    "11547": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10796,
        10823
      ],
      "op": "SUB",
      "path": "2"
    },
    "11548": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10796,
        10823
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11549": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10796,
        10823
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11550": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10796,
        10823
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11551": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10796,
        10823
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "11553": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10796,
        10823
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11554": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10786,
        10824
      ],
      "op": "DUP1",
      "path": "2"
    },
    "11555": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10786,
        10824
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "11556": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10786,
        10824
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11557": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10786,
        10824
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "11559": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10786,
        10824
      ],
      "op": "ADD",
      "path": "2"
    },
    "11560": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10786,
        10824
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "11561": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10759,
        10768
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "11563": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10769,
        10770
      ],
      "op": "DUP3",
      "path": "2"
    },
    "11564": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10759,
        10771
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11565": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10759,
        10771
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "11566": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10759,
        10771
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11567": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10759,
        10771
      ],
      "op": "LT",
      "path": "2"
    },
    "11568": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10759,
        10771
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2D3B"
    },
    "11571": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10759,
        10771
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "11572": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10759,
        10771
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2D3B"
    },
    "11575": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10759,
        10771
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3C98"
    },
    "11578": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "jump": "i",
      "offset": [
        10759,
        10771
      ],
      "op": "JUMP",
      "path": "2"
    },
    "11579": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10759,
        10771
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11580": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10759,
        10771
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11581": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10759,
        10771
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "11583": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10759,
        10771
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11584": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10759,
        10771
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "11586": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10759,
        10771
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "11588": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10759,
        10771
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "11589": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10759,
        10771
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11590": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10759,
        10771
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "11592": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10759,
        10771
      ],
      "op": "MUL",
      "path": "2"
    },
    "11593": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10759,
        10771
      ],
      "op": "ADD",
      "path": "2"
    },
    "11594": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10759,
        10780
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "11596": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10759,
        10780
      ],
      "op": "ADD",
      "path": "2"
    },
    "11597": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10742,
        10781
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "11599": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10742,
        10781
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "11600": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10742,
        10781
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "11602": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10742,
        10781
      ],
      "op": "ADD",
      "path": "2"
    },
    "11603": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10742,
        10781
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2D5C"
    },
    "11606": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10742,
        10781
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "11607": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10742,
        10781
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11608": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10742,
        10781
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4232"
    },
    "11611": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "jump": "i",
      "offset": [
        10742,
        10781
      ],
      "op": "JUMP",
      "path": "2"
    },
    "11612": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10742,
        10781
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11613": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10742,
        10781
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "11615": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10742,
        10781
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "11616": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10742,
        10781
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "11618": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10742,
        10781
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11619": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10742,
        10781
      ],
      "op": "DUP4",
      "path": "2"
    },
    "11620": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10742,
        10781
      ],
      "op": "SUB",
      "path": "2"
    },
    "11621": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10742,
        10781
      ],
      "op": "SUB",
      "path": "2"
    },
    "11622": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10742,
        10781
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11623": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10742,
        10781
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11624": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10742,
        10781
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11625": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10742,
        10781
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "11627": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10742,
        10781
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11628": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10732,
        10782
      ],
      "op": "DUP1",
      "path": "2"
    },
    "11629": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10732,
        10782
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "11630": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10732,
        10782
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11631": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10732,
        10782
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "11633": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10732,
        10782
      ],
      "op": "ADD",
      "path": "2"
    },
    "11634": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10732,
        10782
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "11635": {
      "branch": 175,
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10732,
        10824
      ],
      "op": "SUB",
      "path": "2"
    },
    "11636": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10729,
        11777
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2E85"
    },
    "11639": {
      "branch": 175,
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10729,
        11777
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "11640": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10907,
        10934
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "11642": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10937,
        10946
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "11644": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10947,
        10948
      ],
      "op": "DUP3",
      "path": "2"
    },
    "11645": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10937,
        10949
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11646": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10937,
        10949
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "11647": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10937,
        10949
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11648": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10937,
        10949
      ],
      "op": "LT",
      "path": "2"
    },
    "11649": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10937,
        10949
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2D8C"
    },
    "11652": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10937,
        10949
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "11653": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10937,
        10949
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2D8C"
    },
    "11656": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10937,
        10949
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3C98"
    },
    "11659": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "jump": "i",
      "offset": [
        10937,
        10949
      ],
      "op": "JUMP",
      "path": "2"
    },
    "11660": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10937,
        10949
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11661": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10937,
        10949
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11662": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10937,
        10949
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "11664": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10937,
        10949
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11665": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10937,
        10949
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "11667": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10937,
        10949
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "11669": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10937,
        10949
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "11670": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10937,
        10949
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11671": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10937,
        10949
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "11673": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10937,
        10949
      ],
      "op": "MUL",
      "path": "2"
    },
    "11674": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10937,
        10949
      ],
      "op": "ADD",
      "path": "2"
    },
    "11675": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10907,
        10949
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11676": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10907,
        10949
      ],
      "op": "POP",
      "path": "2"
    },
    "11677": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10967,
        11001
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "11679": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11004,
        11013
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "11681": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11031,
        11032
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "11683": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11014,
        11023
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "11685": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11014,
        11030
      ],
      "op": "DUP1",
      "path": "2"
    },
    "11686": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11014,
        11030
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "11687": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11014,
        11030
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11688": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11014,
        11030
      ],
      "op": "POP",
      "path": "2"
    },
    "11689": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11014,
        11032
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2DB2"
    },
    "11692": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11014,
        11032
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "11693": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11014,
        11032
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11694": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11014,
        11032
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3F82"
    },
    "11697": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "jump": "i",
      "offset": [
        11014,
        11032
      ],
      "op": "JUMP",
      "path": "2"
    },
    "11698": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11014,
        11032
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11699": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11004,
        11033
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11700": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11004,
        11033
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "11701": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11004,
        11033
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11702": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11004,
        11033
      ],
      "op": "LT",
      "path": "2"
    },
    "11703": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11004,
        11033
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2DC2"
    },
    "11706": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11004,
        11033
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "11707": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11004,
        11033
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2DC2"
    },
    "11710": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11004,
        11033
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3C98"
    },
    "11713": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "jump": "i",
      "offset": [
        11004,
        11033
      ],
      "op": "JUMP",
      "path": "2"
    },
    "11714": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11004,
        11033
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11715": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11004,
        11033
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11716": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11004,
        11033
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "11718": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11004,
        11033
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11719": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11004,
        11033
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "11721": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11004,
        11033
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "11723": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11004,
        11033
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "11724": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11004,
        11033
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11725": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11004,
        11033
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "11727": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11004,
        11033
      ],
      "op": "MUL",
      "path": "2"
    },
    "11728": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11004,
        11033
      ],
      "op": "ADD",
      "path": "2"
    },
    "11729": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10967,
        11033
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11730": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10967,
        11033
      ],
      "op": "POP",
      "path": "2"
    },
    "11731": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11162,
        11179
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 95
    },
    "11732": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11149,
        11179
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "11733": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11149,
        11179
      ],
      "op": "POP",
      "path": "2"
    },
    "11734": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11204,
        11213
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 96,
      "value": "0x5"
    },
    "11736": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11231,
        11232
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "11738": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11214,
        11223
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "11740": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11214,
        11230
      ],
      "op": "DUP1",
      "path": "2"
    },
    "11741": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11214,
        11230
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "11742": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11214,
        11230
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11743": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11214,
        11230
      ],
      "op": "POP",
      "path": "2"
    },
    "11744": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11214,
        11232
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2DE9"
    },
    "11747": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11214,
        11232
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "11748": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11214,
        11232
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11749": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11214,
        11232
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3F82"
    },
    "11752": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "jump": "i",
      "offset": [
        11214,
        11232
      ],
      "op": "JUMP",
      "path": "2"
    },
    "11753": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11214,
        11232
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11754": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11204,
        11233
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11755": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11204,
        11233
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "11756": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11204,
        11233
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11757": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11204,
        11233
      ],
      "op": "LT",
      "path": "2"
    },
    "11758": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11204,
        11233
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2DF9"
    },
    "11761": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11204,
        11233
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "11762": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11204,
        11233
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2DF9"
    },
    "11765": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11204,
        11233
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3C98"
    },
    "11768": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "jump": "i",
      "offset": [
        11204,
        11233
      ],
      "op": "JUMP",
      "path": "2"
    },
    "11769": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11204,
        11233
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11770": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11204,
        11233
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11771": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11204,
        11233
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "11773": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11204,
        11233
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11774": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11204,
        11233
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "11776": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11204,
        11233
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "11778": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11204,
        11233
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "11779": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11204,
        11233
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11780": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11204,
        11233
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "11782": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11204,
        11233
      ],
      "op": "MUL",
      "path": "2"
    },
    "11783": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11204,
        11233
      ],
      "op": "ADD",
      "path": "2"
    },
    "11784": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11204,
        11233
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "11786": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11197,
        11233
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "11788": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11197,
        11233
      ],
      "op": "DUP3",
      "path": "2"
    },
    "11789": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11197,
        11233
      ],
      "op": "ADD",
      "path": "2"
    },
    "11790": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11197,
        11233
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "11792": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11197,
        11233
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2E19"
    },
    "11795": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11197,
        11233
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "11796": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11197,
        11233
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11797": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11197,
        11233
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x33CD"
    },
    "11800": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "jump": "i",
      "offset": [
        11197,
        11233
      ],
      "op": "JUMP",
      "path": "2"
    },
    "11801": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11197,
        11233
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11802": {
      "op": "POP"
    },
    "11803": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11197,
        11233
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "11805": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11197,
        11233
      ],
      "op": "ADD",
      "path": "2"
    },
    "11806": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11197,
        11233
      ],
      "op": "DUP1",
      "path": "2"
    },
    "11807": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11197,
        11233
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "11808": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11810": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11812": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "11814": {
      "op": "SHL"
    },
    "11815": {
      "op": "SUB"
    },
    "11816": {
      "op": "NOT"
    },
    "11817": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11197,
        11233
      ],
      "op": "AND",
      "path": "2"
    },
    "11818": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11197,
        11233
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11819": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11197,
        11233
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "11820": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11710,
        11719
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 97,
      "value": "0x5"
    },
    "11822": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11720,
        11736
      ],
      "op": "DUP1",
      "path": "2"
    },
    "11823": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11720,
        11736
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "11824": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11720,
        11738
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2E3B"
    },
    "11827": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11720,
        11738
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11828": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11197,
        11233
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "11830": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11197,
        11233
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11831": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11720,
        11738
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3F82"
    },
    "11834": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "jump": "i",
      "offset": [
        11720,
        11738
      ],
      "op": "JUMP",
      "path": "2"
    },
    "11835": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11720,
        11738
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11836": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11710,
        11739
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11837": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11710,
        11739
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "11838": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11710,
        11739
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11839": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11710,
        11739
      ],
      "op": "LT",
      "path": "2"
    },
    "11840": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11710,
        11739
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2E4B"
    },
    "11843": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11710,
        11739
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "11844": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11710,
        11739
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2E4B"
    },
    "11847": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11710,
        11739
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3C98"
    },
    "11850": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "jump": "i",
      "offset": [
        11710,
        11739
      ],
      "op": "JUMP",
      "path": "2"
    },
    "11851": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11710,
        11739
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11852": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11710,
        11739
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11853": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11710,
        11739
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "11855": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11710,
        11739
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11856": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11710,
        11739
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "11858": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11710,
        11739
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "11860": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11710,
        11739
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "11861": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11710,
        11739
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11862": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11710,
        11739
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "11864": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11710,
        11739
      ],
      "op": "MUL",
      "path": "2"
    },
    "11865": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11710,
        11739
      ],
      "op": "ADD",
      "path": "2"
    },
    "11866": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11710,
        11739
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "11868": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11703,
        11739
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "11870": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11703,
        11739
      ],
      "op": "DUP3",
      "path": "2"
    },
    "11871": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11703,
        11739
      ],
      "op": "ADD",
      "path": "2"
    },
    "11872": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11703,
        11739
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "11874": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11703,
        11739
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2E6B"
    },
    "11877": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11703,
        11739
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "11878": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11703,
        11739
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11879": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11703,
        11739
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x33CD"
    },
    "11882": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "jump": "i",
      "offset": [
        11703,
        11739
      ],
      "op": "JUMP",
      "path": "2"
    },
    "11883": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11703,
        11739
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11884": {
      "op": "POP"
    },
    "11885": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11703,
        11739
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "11887": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11703,
        11739
      ],
      "op": "ADD",
      "path": "2"
    },
    "11888": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11703,
        11739
      ],
      "op": "DUP1",
      "path": "2"
    },
    "11889": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11703,
        11739
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "11890": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11892": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11894": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "11896": {
      "op": "SHL"
    },
    "11897": {
      "op": "SUB"
    },
    "11898": {
      "op": "NOT"
    },
    "11899": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11703,
        11739
      ],
      "op": "AND",
      "path": "2"
    },
    "11900": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11703,
        11739
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11901": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11703,
        11739
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "11902": {
      "op": "POP"
    },
    "11903": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11757,
        11762
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 98,
      "value": "0x2E8D"
    },
    "11906": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11757,
        11762
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11907": {
      "op": "POP"
    },
    "11908": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11757,
        11762
      ],
      "op": "JUMP",
      "path": "2"
    },
    "11909": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10729,
        11777
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11910": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11800,
        11803
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 99,
      "value": "0x1"
    },
    "11912": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11800,
        11803
      ],
      "op": "ADD",
      "path": "2"
    },
    "11913": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10678,
        11815
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2CF7"
    },
    "11916": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10678,
        11815
      ],
      "op": "JUMP",
      "path": "2"
    },
    "11917": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10678,
        11815
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11918": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10678,
        11815
      ],
      "op": "POP",
      "path": "2"
    },
    "11919": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10600,
        11821
      ],
      "op": "POP",
      "path": "2"
    },
    "11920": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "jump": "o",
      "offset": [
        10600,
        11821
      ],
      "op": "JUMP",
      "path": "2"
    },
    "11921": {
      "fn": "Governance.getVotes",
      "offset": [
        4972,
        5361
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11922": {
      "fn": "Governance.getVotes",
      "offset": [
        5033,
        5048
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "11924": {
      "fn": "Governance.getVotes",
      "offset": [
        5081,
        5095
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 100,
      "value": "0x9"
    },
    "11926": {
      "fn": "Governance.getVotes",
      "offset": [
        5081,
        5095
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "11927": {
      "fn": "Governance.getVotes",
      "offset": [
        5068,
        5078
      ],
      "op": "DUP3",
      "path": "2"
    },
    "11928": {
      "branch": 176,
      "fn": "Governance.getVotes",
      "offset": [
        5068,
        5095
      ],
      "op": "LT",
      "path": "2"
    },
    "11929": {
      "fn": "Governance.getVotes",
      "offset": [
        5060,
        5116
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2ED7"
    },
    "11932": {
      "branch": 176,
      "fn": "Governance.getVotes",
      "offset": [
        5060,
        5116
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "11933": {
      "fn": "Governance.getVotes",
      "offset": [
        5060,
        5116
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "11935": {
      "fn": "Governance.getVotes",
      "offset": [
        5060,
        5116
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "11936": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11940": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11942": {
      "op": "SHL"
    },
    "11943": {
      "fn": "Governance.getVotes",
      "offset": [
        5060,
        5116
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11944": {
      "fn": "Governance.getVotes",
      "offset": [
        5060,
        5116
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11945": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11947": {
      "fn": "Governance.getVotes",
      "offset": [
        5060,
        5116
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "11949": {
      "fn": "Governance.getVotes",
      "offset": [
        5060,
        5116
      ],
      "op": "DUP3",
      "path": "2"
    },
    "11950": {
      "fn": "Governance.getVotes",
      "offset": [
        5060,
        5116
      ],
      "op": "ADD",
      "path": "2"
    },
    "11951": {
      "op": "MSTORE"
    },
    "11952": {
      "op": "PUSH1",
      "value": "0x10"
    },
    "11954": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11956": {
      "op": "DUP3"
    },
    "11957": {
      "op": "ADD"
    },
    "11958": {
      "op": "MSTORE"
    },
    "11959": {
      "op": "PUSH16",
      "value": "0x1B9BC81CDD58DA081C1C9BDC1BDCD85B"
    },
    "11976": {
      "op": "PUSH1",
      "value": "0x82"
    },
    "11978": {
      "op": "SHL"
    },
    "11979": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "11981": {
      "op": "DUP3"
    },
    "11982": {
      "op": "ADD"
    },
    "11983": {
      "op": "MSTORE"
    },
    "11984": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "11986": {
      "op": "ADD"
    },
    "11987": {
      "fn": "Governance.getVotes",
      "offset": [
        5060,
        5116
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE54"
    },
    "11990": {
      "op": "JUMP"
    },
    "11991": {
      "fn": "Governance.getVotes",
      "offset": [
        5060,
        5116
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11992": {
      "fn": "Governance.getVotes",
      "offset": [
        5126,
        5151
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "11994": {
      "fn": "Governance.getVotes",
      "offset": [
        5167,
        5188
      ],
      "op": "DUP3",
      "path": "2"
    },
    "11995": {
      "fn": "Governance.getVotes",
      "offset": [
        5167,
        5188
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11996": {
      "fn": "Governance.getVotes",
      "offset": [
        5167,
        5188
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11997": {
      "fn": "Governance.getVotes",
      "offset": [
        5167,
        5176
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x8"
    },
    "11999": {
      "fn": "Governance.getVotes",
      "offset": [
        5167,
        5188
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "12001": {
      "fn": "Governance.getVotes",
      "offset": [
        5167,
        5188
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "12002": {
      "fn": "Governance.getVotes",
      "offset": [
        5167,
        5188
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "12004": {
      "fn": "Governance.getVotes",
      "offset": [
        5167,
        5188
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12005": {
      "fn": "Governance.getVotes",
      "offset": [
        5167,
        5188
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "12006": {
      "fn": "Governance.getVotes",
      "offset": [
        5167,
        5204
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "12008": {
      "fn": "Governance.getVotes",
      "offset": [
        5167,
        5204
      ],
      "op": "ADD",
      "path": "2"
    },
    "12009": {
      "fn": "Governance.getVotes",
      "offset": [
        5167,
        5204
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "12010": {
      "fn": "Governance.getVotes",
      "offset": [
        5167,
        5204
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "12013": {
      "fn": "Governance.getVotes",
      "offset": [
        5167,
        5204
      ],
      "op": "AND",
      "path": "2"
    },
    "12014": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12016": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12018": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12020": {
      "op": "SHL"
    },
    "12021": {
      "op": "SUB"
    },
    "12022": {
      "fn": "Governance.getVotes",
      "offset": [
        5154,
        5205
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12023": {
      "fn": "Governance.getVotes",
      "offset": [
        5154,
        5205
      ],
      "op": "GT",
      "path": "2"
    },
    "12024": {
      "fn": "Governance.getVotes",
      "offset": [
        5154,
        5205
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "12025": {
      "fn": "Governance.getVotes",
      "offset": [
        5154,
        5205
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2F04"
    },
    "12028": {
      "fn": "Governance.getVotes",
      "offset": [
        5154,
        5205
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "12029": {
      "fn": "Governance.getVotes",
      "offset": [
        5154,
        5205
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2F04"
    },
    "12032": {
      "fn": "Governance.getVotes",
      "offset": [
        5154,
        5205
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x34CC"
    },
    "12035": {
      "fn": "Governance.getVotes",
      "jump": "i",
      "offset": [
        5154,
        5205
      ],
      "op": "JUMP",
      "path": "2"
    },
    "12036": {
      "fn": "Governance.getVotes",
      "offset": [
        5154,
        5205
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12037": {
      "fn": "Governance.getVotes",
      "offset": [
        5154,
        5205
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "12039": {
      "fn": "Governance.getVotes",
      "offset": [
        5154,
        5205
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "12040": {
      "fn": "Governance.getVotes",
      "offset": [
        5154,
        5205
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12041": {
      "fn": "Governance.getVotes",
      "offset": [
        5154,
        5205
      ],
      "op": "DUP1",
      "path": "2"
    },
    "12042": {
      "fn": "Governance.getVotes",
      "offset": [
        5154,
        5205
      ],
      "op": "DUP3",
      "path": "2"
    },
    "12043": {
      "fn": "Governance.getVotes",
      "offset": [
        5154,
        5205
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "12044": {
      "fn": "Governance.getVotes",
      "offset": [
        5154,
        5205
      ],
      "op": "DUP1",
      "path": "2"
    },
    "12045": {
      "fn": "Governance.getVotes",
      "offset": [
        5154,
        5205
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "12047": {
      "fn": "Governance.getVotes",
      "offset": [
        5154,
        5205
      ],
      "op": "MUL",
      "path": "2"
    },
    "12048": {
      "fn": "Governance.getVotes",
      "offset": [
        5154,
        5205
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "12050": {
      "fn": "Governance.getVotes",
      "offset": [
        5154,
        5205
      ],
      "op": "ADD",
      "path": "2"
    },
    "12051": {
      "fn": "Governance.getVotes",
      "offset": [
        5154,
        5205
      ],
      "op": "DUP3",
      "path": "2"
    },
    "12052": {
      "fn": "Governance.getVotes",
      "offset": [
        5154,
        5205
      ],
      "op": "ADD",
      "path": "2"
    },
    "12053": {
      "fn": "Governance.getVotes",
      "offset": [
        5154,
        5205
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "12055": {
      "fn": "Governance.getVotes",
      "offset": [
        5154,
        5205
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "12056": {
      "fn": "Governance.getVotes",
      "offset": [
        5154,
        5205
      ],
      "op": "DUP1",
      "path": "2"
    },
    "12057": {
      "fn": "Governance.getVotes",
      "offset": [
        5154,
        5205
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "12058": {
      "fn": "Governance.getVotes",
      "offset": [
        5154,
        5205
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2F2D"
    },
    "12061": {
      "fn": "Governance.getVotes",
      "offset": [
        5154,
        5205
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "12062": {
      "fn": "Governance.getVotes",
      "offset": [
        5154,
        5205
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12063": {
      "fn": "Governance.getVotes",
      "offset": [
        5154,
        5205
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "12065": {
      "fn": "Governance.getVotes",
      "offset": [
        5154,
        5205
      ],
      "op": "ADD",
      "path": "2"
    },
    "12066": {
      "fn": "Governance.getVotes",
      "offset": [
        5154,
        5205
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "12068": {
      "fn": "Governance.getVotes",
      "offset": [
        5154,
        5205
      ],
      "op": "DUP3",
      "path": "2"
    },
    "12069": {
      "fn": "Governance.getVotes",
      "offset": [
        5154,
        5205
      ],
      "op": "MUL",
      "path": "2"
    },
    "12070": {
      "fn": "Governance.getVotes",
      "offset": [
        5154,
        5205
      ],
      "op": "DUP1",
      "path": "2"
    },
    "12071": {
      "fn": "Governance.getVotes",
      "offset": [
        5154,
        5205
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "12072": {
      "fn": "Governance.getVotes",
      "offset": [
        5154,
        5205
      ],
      "op": "DUP4",
      "path": "2"
    },
    "12073": {
      "fn": "Governance.getVotes",
      "offset": [
        5154,
        5205
      ],
      "op": "CALLDATACOPY",
      "path": "2"
    },
    "12074": {
      "fn": "Governance.getVotes",
      "offset": [
        5154,
        5205
      ],
      "op": "ADD",
      "path": "2"
    },
    "12075": {
      "fn": "Governance.getVotes",
      "offset": [
        5154,
        5205
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12076": {
      "op": "POP"
    },
    "12077": {
      "fn": "Governance.getVotes",
      "offset": [
        5154,
        5205
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12078": {
      "fn": "Governance.getVotes",
      "offset": [
        5154,
        5205
      ],
      "op": "POP",
      "path": "2"
    },
    "12079": {
      "fn": "Governance.getVotes",
      "offset": [
        5126,
        5205
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12080": {
      "fn": "Governance.getVotes",
      "offset": [
        5126,
        5205
      ],
      "op": "POP",
      "path": "2"
    },
    "12081": {
      "fn": "Governance.getVotes",
      "offset": [
        5219,
        5228
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "12083": {
      "fn": "Governance.getVotes",
      "offset": [
        5215,
        5329
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12084": {
      "fn": "Governance.getVotes",
      "offset": [
        5237,
        5246
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12085": {
      "fn": "Governance.getVotes",
      "offset": [
        5237,
        5253
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "12086": {
      "fn": "Governance.getVotes",
      "offset": [
        5234,
        5235
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12087": {
      "fn": "Governance.getVotes",
      "offset": [
        5234,
        5253
      ],
      "op": "LT",
      "path": "2"
    },
    "12088": {
      "fn": "Governance.getVotes",
      "offset": [
        5215,
        5329
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "12089": {
      "fn": "Governance.getVotes",
      "offset": [
        5215,
        5329
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2FB4"
    },
    "12092": {
      "fn": "Governance.getVotes",
      "offset": [
        5215,
        5329
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "12093": {
      "fn": "Governance.getVotes",
      "offset": [
        5288,
        5297
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 101,
      "value": "0x8"
    },
    "12095": {
      "fn": "Governance.getVotes",
      "offset": [
        5288,
        5309
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "12097": {
      "fn": "Governance.getVotes",
      "offset": [
        5298,
        5308
      ],
      "op": "DUP6",
      "path": "2"
    },
    "12098": {
      "fn": "Governance.getVotes",
      "offset": [
        5288,
        5309
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12099": {
      "fn": "Governance.getVotes",
      "offset": [
        5288,
        5309
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "12100": {
      "fn": "Governance.getVotes",
      "offset": [
        5288,
        5309
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "12102": {
      "fn": "Governance.getVotes",
      "offset": [
        5288,
        5309
      ],
      "op": "ADD",
      "path": "2"
    },
    "12103": {
      "fn": "Governance.getVotes",
      "offset": [
        5288,
        5309
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12104": {
      "fn": "Governance.getVotes",
      "offset": [
        5288,
        5309
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12105": {
      "fn": "Governance.getVotes",
      "offset": [
        5288,
        5309
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "12106": {
      "fn": "Governance.getVotes",
      "offset": [
        5288,
        5309
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "12108": {
      "fn": "Governance.getVotes",
      "offset": [
        5288,
        5309
      ],
      "op": "ADD",
      "path": "2"
    },
    "12109": {
      "fn": "Governance.getVotes",
      "offset": [
        5288,
        5309
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "12111": {
      "fn": "Governance.getVotes",
      "offset": [
        5288,
        5309
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "12112": {
      "fn": "Governance.getVotes",
      "offset": [
        5288,
        5315
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "12114": {
      "fn": "Governance.getVotes",
      "offset": [
        5288,
        5315
      ],
      "op": "ADD",
      "path": "2"
    },
    "12115": {
      "fn": "Governance.getVotes",
      "offset": [
        5316,
        5317
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12116": {
      "fn": "Governance.getVotes",
      "offset": [
        5288,
        5318
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x8"
    },
    "12118": {
      "fn": "Governance.getVotes",
      "offset": [
        5288,
        5318
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12119": {
      "fn": "Governance.getVotes",
      "offset": [
        5288,
        5318
      ],
      "op": "LT",
      "path": "2"
    },
    "12120": {
      "fn": "Governance.getVotes",
      "offset": [
        5288,
        5318
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2F63"
    },
    "12123": {
      "fn": "Governance.getVotes",
      "offset": [
        5288,
        5318
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "12124": {
      "fn": "Governance.getVotes",
      "offset": [
        5288,
        5318
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2F63"
    },
    "12127": {
      "fn": "Governance.getVotes",
      "offset": [
        5288,
        5318
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3C98"
    },
    "12130": {
      "fn": "Governance.getVotes",
      "jump": "i",
      "offset": [
        5288,
        5318
      ],
      "op": "JUMP",
      "path": "2"
    },
    "12131": {
      "fn": "Governance.getVotes",
      "offset": [
        5288,
        5318
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12132": {
      "fn": "Governance.getVotes",
      "offset": [
        5288,
        5318
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x10"
    },
    "12134": {
      "fn": "Governance.getVotes",
      "offset": [
        5288,
        5318
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "12135": {
      "fn": "Governance.getVotes",
      "offset": [
        5288,
        5318
      ],
      "op": "DUP3",
      "path": "2"
    },
    "12136": {
      "fn": "Governance.getVotes",
      "offset": [
        5288,
        5318
      ],
      "op": "DUP3",
      "path": "2"
    },
    "12137": {
      "fn": "Governance.getVotes",
      "offset": [
        5288,
        5318
      ],
      "op": "DIV",
      "path": "2"
    },
    "12138": {
      "fn": "Governance.getVotes",
      "offset": [
        5288,
        5318
      ],
      "op": "ADD",
      "path": "2"
    },
    "12139": {
      "fn": "Governance.getVotes",
      "offset": [
        5288,
        5318
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "12140": {
      "fn": "Governance.getVotes",
      "offset": [
        5288,
        5318
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12141": {
      "fn": "Governance.getVotes",
      "offset": [
        5288,
        5318
      ],
      "op": "MOD",
      "path": "2"
    },
    "12142": {
      "fn": "Governance.getVotes",
      "offset": [
        5288,
        5318
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "12144": {
      "fn": "Governance.getVotes",
      "offset": [
        5288,
        5318
      ],
      "op": "MUL",
      "path": "2"
    },
    "12145": {
      "fn": "Governance.getVotes",
      "offset": [
        5288,
        5318
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12146": {
      "fn": "Governance.getVotes",
      "offset": [
        5288,
        5318
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "12147": {
      "fn": "Governance.getVotes",
      "offset": [
        5288,
        5318
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12148": {
      "fn": "Governance.getVotes",
      "offset": [
        5288,
        5318
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "12151": {
      "fn": "Governance.getVotes",
      "offset": [
        5288,
        5318
      ],
      "op": "EXP",
      "path": "2"
    },
    "12152": {
      "fn": "Governance.getVotes",
      "offset": [
        5288,
        5318
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12153": {
      "fn": "Governance.getVotes",
      "offset": [
        5288,
        5318
      ],
      "op": "DIV",
      "path": "2"
    },
    "12154": {
      "fn": "Governance.getVotes",
      "offset": [
        5288,
        5318
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "12157": {
      "fn": "Governance.getVotes",
      "offset": [
        5288,
        5318
      ],
      "op": "AND",
      "path": "2"
    },
    "12158": {
      "fn": "Governance.getVotes",
      "offset": [
        5273,
        5282
      ],
      "op": "DUP3",
      "path": "2"
    },
    "12159": {
      "fn": "Governance.getVotes",
      "offset": [
        5283,
        5284
      ],
      "op": "DUP3",
      "path": "2"
    },
    "12160": {
      "fn": "Governance.getVotes",
      "offset": [
        5273,
        5285
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12161": {
      "fn": "Governance.getVotes",
      "offset": [
        5273,
        5285
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "12162": {
      "fn": "Governance.getVotes",
      "offset": [
        5273,
        5285
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12163": {
      "fn": "Governance.getVotes",
      "offset": [
        5273,
        5285
      ],
      "op": "LT",
      "path": "2"
    },
    "12164": {
      "fn": "Governance.getVotes",
      "offset": [
        5273,
        5285
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2F8F"
    },
    "12167": {
      "fn": "Governance.getVotes",
      "offset": [
        5273,
        5285
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "12168": {
      "fn": "Governance.getVotes",
      "offset": [
        5273,
        5285
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2F8F"
    },
    "12171": {
      "fn": "Governance.getVotes",
      "offset": [
        5273,
        5285
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3C98"
    },
    "12174": {
      "fn": "Governance.getVotes",
      "jump": "i",
      "offset": [
        5273,
        5285
      ],
      "op": "JUMP",
      "path": "2"
    },
    "12175": {
      "fn": "Governance.getVotes",
      "offset": [
        5273,
        5285
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12176": {
      "fn": "Governance.getVotes",
      "offset": [
        5273,
        5318
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "12179": {
      "fn": "Governance.getVotes",
      "offset": [
        5273,
        5318
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12180": {
      "fn": "Governance.getVotes",
      "offset": [
        5273,
        5318
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "12181": {
      "fn": "Governance.getVotes",
      "offset": [
        5273,
        5318
      ],
      "op": "AND",
      "path": "2"
    },
    "12182": {
      "fn": "Governance.getVotes",
      "offset": [
        5273,
        5285
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "12184": {
      "fn": "Governance.getVotes",
      "offset": [
        5273,
        5285
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "12185": {
      "fn": "Governance.getVotes",
      "offset": [
        5273,
        5285
      ],
      "op": "DUP4",
      "path": "2"
    },
    "12186": {
      "fn": "Governance.getVotes",
      "offset": [
        5273,
        5285
      ],
      "op": "MUL",
      "path": "2"
    },
    "12187": {
      "fn": "Governance.getVotes",
      "offset": [
        5273,
        5285
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "12188": {
      "fn": "Governance.getVotes",
      "offset": [
        5273,
        5285
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12189": {
      "fn": "Governance.getVotes",
      "offset": [
        5273,
        5285
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "12190": {
      "fn": "Governance.getVotes",
      "offset": [
        5273,
        5285
      ],
      "op": "ADD",
      "path": "2"
    },
    "12191": {
      "fn": "Governance.getVotes",
      "offset": [
        5273,
        5285
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12192": {
      "fn": "Governance.getVotes",
      "offset": [
        5273,
        5285
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "12193": {
      "fn": "Governance.getVotes",
      "offset": [
        5273,
        5285
      ],
      "op": "ADD",
      "path": "2"
    },
    "12194": {
      "fn": "Governance.getVotes",
      "offset": [
        5273,
        5318
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "12195": {
      "fn": "Governance.getVotes",
      "offset": [
        5255,
        5258
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 102
    },
    "12196": {
      "fn": "Governance.getVotes",
      "offset": [
        5255,
        5258
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2FAC"
    },
    "12199": {
      "fn": "Governance.getVotes",
      "offset": [
        5255,
        5258
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12200": {
      "fn": "Governance.getVotes",
      "offset": [
        5255,
        5258
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3FD0"
    },
    "12203": {
      "fn": "Governance.getVotes",
      "jump": "i",
      "offset": [
        5255,
        5258
      ],
      "op": "JUMP",
      "path": "2"
    },
    "12204": {
      "fn": "Governance.getVotes",
      "offset": [
        5255,
        5258
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12205": {
      "fn": "Governance.getVotes",
      "offset": [
        5255,
        5258
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "12206": {
      "fn": "Governance.getVotes",
      "offset": [
        5255,
        5258
      ],
      "op": "POP",
      "path": "2"
    },
    "12207": {
      "fn": "Governance.getVotes",
      "offset": [
        5255,
        5258
      ],
      "op": "POP",
      "path": "2"
    },
    "12208": {
      "fn": "Governance.getVotes",
      "offset": [
        5215,
        5329
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2F33"
    },
    "12211": {
      "fn": "Governance.getVotes",
      "offset": [
        5215,
        5329
      ],
      "op": "JUMP",
      "path": "2"
    },
    "12212": {
      "fn": "Governance.getVotes",
      "offset": [
        5215,
        5329
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12213": {
      "op": "POP"
    },
    "12214": {
      "fn": "Governance.getVotes",
      "offset": [
        5345,
        5354
      ],
      "op": "SWAP3",
      "path": "2",
      "statement": 103
    },
    "12215": {
      "fn": "Governance.getVotes",
      "offset": [
        4972,
        5361
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "12216": {
      "op": "POP"
    },
    "12217": {
      "op": "POP"
    },
    "12218": {
      "fn": "Governance.getVotes",
      "jump": "o",
      "offset": [
        4972,
        5361
      ],
      "op": "JUMP",
      "path": "2"
    },
    "12219": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4598,
        4922
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "12220": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4676,
        4689
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "12222": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4750,
        4760
      ],
      "op": "DUP1",
      "path": "1"
    },
    "12223": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4763,
        4829
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2FDE"
    },
    "12226": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4804,
        4828
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2FCA"
    },
    "12229": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4822,
        4827
      ],
      "op": "DUP5",
      "path": "1"
    },
    "12230": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4804,
        4821
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x327C"
    },
    "12233": {
      "fn": "DoubleEndedQueue.at",
      "jump": "i",
      "offset": [
        4804,
        4828
      ],
      "op": "JUMP",
      "path": "1"
    },
    "12234": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4804,
        4828
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "12235": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4788,
        4800
      ],
      "op": "DUP6",
      "path": "1"
    },
    "12236": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4788,
        4800
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "12237": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4781,
        4828
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2FD9"
    },
    "12240": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4781,
        4828
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "12241": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4781,
        4828
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "12242": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4788,
        4800
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xF"
    },
    "12244": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4788,
        4800
      ],
      "op": "SIGNEXTEND",
      "path": "1"
    },
    "12245": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4781,
        4828
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x41D5"
    },
    "12248": {
      "fn": "DoubleEndedQueue.at",
      "jump": "i",
      "offset": [
        4781,
        4828
      ],
      "op": "JUMP",
      "path": "1"
    },
    "12249": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4781,
        4828
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "12250": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4763,
        4780
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x32EA"
    },
    "12253": {
      "fn": "DoubleEndedQueue.at",
      "jump": "i",
      "offset": [
        4763,
        4829
      ],
      "op": "JUMP",
      "path": "1"
    },
    "12254": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4763,
        4829
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "12255": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4850,
        4860
      ],
      "op": "DUP5",
      "path": "1",
      "statement": 104
    },
    "12256": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4850,
        4860
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "12257": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4750,
        4829
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "12258": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4750,
        4829
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "12259": {
      "op": "POP"
    },
    "12260": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12262": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "12264": {
      "op": "SHL"
    },
    "12265": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4850,
        4860
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "12266": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4850,
        4860
      ],
      "op": "DIV",
      "path": "1"
    },
    "12267": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4850,
        4860
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xF"
    },
    "12269": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4850,
        4860
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "12270": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4850,
        4860
      ],
      "op": "DUP2",
      "path": "1"
    },
    "12271": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4850,
        4860
      ],
      "op": "SIGNEXTEND",
      "path": "1"
    },
    "12272": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4843,
        4860
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "12273": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4843,
        4860
      ],
      "op": "DUP3",
      "path": "1"
    },
    "12274": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4843,
        4860
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "12275": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4843,
        4860
      ],
      "op": "SIGNEXTEND",
      "path": "1"
    },
    "12276": {
      "branch": 177,
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4843,
        4860
      ],
      "op": "SLT",
      "path": "1"
    },
    "12277": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4839,
        4882
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3011"
    },
    "12280": {
      "branch": 177,
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4839,
        4882
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "12281": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4869,
        4882
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "12283": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4869,
        4882
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "12284": {
      "op": "PUSH4",
      "value": "0x2D0483C5"
    },
    "12289": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "12291": {
      "op": "SHL"
    },
    "12292": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4869,
        4882
      ],
      "op": "DUP2",
      "path": "1"
    },
    "12293": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4869,
        4882
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "12294": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4869,
        4882
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "12296": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4869,
        4882
      ],
      "op": "ADD",
      "path": "1"
    },
    "12297": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4869,
        4882
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "12299": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4869,
        4882
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "12300": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4869,
        4882
      ],
      "op": "DUP1",
      "path": "1"
    },
    "12301": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4869,
        4882
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "12302": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4869,
        4882
      ],
      "op": "SUB",
      "path": "1"
    },
    "12303": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4869,
        4882
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "12304": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4869,
        4882
      ],
      "op": "REVERT",
      "path": "1"
    },
    "12305": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4839,
        4882
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "12306": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4915
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 105,
      "value": "0xF"
    },
    "12308": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4915
      ],
      "op": "SIGNEXTEND",
      "path": "1"
    },
    "12309": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4915
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "12311": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4915
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "12312": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4915
      ],
      "op": "DUP2",
      "path": "1"
    },
    "12313": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4915
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "12314": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4910
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "12316": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4910
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "12317": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4910
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "12318": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4910
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "12319": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4910
      ],
      "op": "ADD",
      "path": "1"
    },
    "12320": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4915
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "12322": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4915
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "12323": {
      "op": "POP"
    },
    "12324": {
      "op": "POP"
    },
    "12325": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4915
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "12327": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4915
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "12328": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4915
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "12329": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4915
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "12330": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4915
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "12331": {
      "fn": "DoubleEndedQueue.at",
      "jump": "o",
      "offset": [
        4598,
        4922
      ],
      "op": "JUMP",
      "path": "1"
    },
    "12332": {
      "fn": "Governance._createTaskType",
      "offset": [
        14158,
        15089
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12333": {
      "fn": "Governance._createTaskType",
      "offset": [
        14399,
        14408
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "12335": {
      "fn": "Governance._createTaskType",
      "offset": [
        14399,
        14415
      ],
      "op": "DUP1",
      "path": "2"
    },
    "12336": {
      "fn": "Governance._createTaskType",
      "offset": [
        14399,
        14415
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "12337": {
      "fn": "Governance._createTaskType",
      "offset": [
        14425,
        14441
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 106,
      "value": "0x1"
    },
    "12339": {
      "fn": "Governance._createTaskType",
      "offset": [
        14425,
        14441
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12340": {
      "fn": "Governance._createTaskType",
      "offset": [
        14425,
        14441
      ],
      "op": "ADD",
      "path": "2"
    },
    "12341": {
      "fn": "Governance._createTaskType",
      "offset": [
        14425,
        14441
      ],
      "op": "DUP1",
      "path": "2"
    },
    "12342": {
      "fn": "Governance._createTaskType",
      "offset": [
        14425,
        14441
      ],
      "op": "DUP4",
      "path": "2"
    },
    "12343": {
      "fn": "Governance._createTaskType",
      "offset": [
        14425,
        14441
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "12344": {
      "fn": "Governance._createTaskType",
      "offset": [
        14373,
        14396
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "12346": {
      "fn": "Governance._createTaskType",
      "offset": [
        14425,
        14441
      ],
      "op": "DUP4",
      "path": "2"
    },
    "12347": {
      "fn": "Governance._createTaskType",
      "offset": [
        14425,
        14441
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12348": {
      "fn": "Governance._createTaskType",
      "offset": [
        14425,
        14441
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "12349": {
      "fn": "Governance._createTaskType",
      "offset": [
        14399,
        14415
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "12350": {
      "fn": "Governance._createTaskType",
      "offset": [
        14399,
        14415
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "12351": {
      "fn": "Governance._createTaskType",
      "offset": [
        14399,
        14408
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12352": {
      "fn": "Governance._createTaskType",
      "offset": [
        14399,
        14415
      ],
      "op": "DUP4",
      "path": "2"
    },
    "12353": {
      "fn": "Governance._createTaskType",
      "offset": [
        14399,
        14415
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12354": {
      "fn": "Governance._createTaskType",
      "offset": [
        14482,
        14508
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12355": {
      "fn": "Governance._createTaskType",
      "offset": [
        14482,
        14508
      ],
      "op": "LT",
      "path": "2"
    },
    "12356": {
      "fn": "Governance._createTaskType",
      "offset": [
        14482,
        14508
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x304F"
    },
    "12359": {
      "fn": "Governance._createTaskType",
      "offset": [
        14482,
        14508
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "12360": {
      "fn": "Governance._createTaskType",
      "offset": [
        14482,
        14508
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x304F"
    },
    "12363": {
      "fn": "Governance._createTaskType",
      "offset": [
        14482,
        14508
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3C98"
    },
    "12366": {
      "fn": "Governance._createTaskType",
      "jump": "i",
      "offset": [
        14482,
        14508
      ],
      "op": "JUMP",
      "path": "2"
    },
    "12367": {
      "fn": "Governance._createTaskType",
      "offset": [
        14482,
        14508
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12368": {
      "fn": "Governance._createTaskType",
      "offset": [
        14482,
        14508
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "12370": {
      "fn": "Governance._createTaskType",
      "offset": [
        14482,
        14508
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "12371": {
      "fn": "Governance._createTaskType",
      "offset": [
        14482,
        14508
      ],
      "op": "DUP3",
      "path": "2"
    },
    "12372": {
      "fn": "Governance._createTaskType",
      "offset": [
        14482,
        14508
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "12373": {
      "fn": "Governance._createTaskType",
      "offset": [
        14482,
        14508
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "12375": {
      "fn": "Governance._createTaskType",
      "offset": [
        14482,
        14508
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12376": {
      "fn": "Governance._createTaskType",
      "offset": [
        14482,
        14508
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "12377": {
      "fn": "Governance._createTaskType",
      "offset": [
        14482,
        14508
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "12378": {
      "fn": "Governance._createTaskType",
      "offset": [
        14482,
        14508
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "12380": {
      "fn": "Governance._createTaskType",
      "offset": [
        14482,
        14508
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12381": {
      "fn": "Governance._createTaskType",
      "offset": [
        14482,
        14508
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "12382": {
      "fn": "Governance._createTaskType",
      "offset": [
        14482,
        14508
      ],
      "op": "MUL",
      "path": "2"
    },
    "12383": {
      "fn": "Governance._createTaskType",
      "offset": [
        14482,
        14508
      ],
      "op": "ADD",
      "path": "2"
    },
    "12384": {
      "fn": "Governance._createTaskType",
      "offset": [
        14482,
        14508
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12385": {
      "op": "POP"
    },
    "12386": {
      "fn": "Governance._createTaskType",
      "offset": [
        14522,
        14542
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 107,
      "value": "0x1"
    },
    "12388": {
      "fn": "Governance._createTaskType",
      "offset": [
        14522,
        14542
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12389": {
      "fn": "Governance._createTaskType",
      "offset": [
        14522,
        14542
      ],
      "op": "ADD",
      "path": "2"
    },
    "12390": {
      "fn": "Governance._createTaskType",
      "offset": [
        14522,
        14553
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3070"
    },
    "12393": {
      "fn": "Governance._createTaskType",
      "offset": [
        14544,
        14553
      ],
      "op": "DUP11",
      "path": "2"
    },
    "12394": {
      "fn": "Governance._createTaskType",
      "offset": [
        14544,
        14553
      ],
      "op": "DUP13",
      "path": "2"
    },
    "12395": {
      "fn": "Governance._createTaskType",
      "offset": [
        14522,
        14542
      ],
      "op": "DUP4",
      "path": "2"
    },
    "12396": {
      "fn": "Governance._createTaskType",
      "offset": [
        14522,
        14553
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3FE9"
    },
    "12399": {
      "fn": "Governance._createTaskType",
      "jump": "i",
      "offset": [
        14522,
        14553
      ],
      "op": "JUMP",
      "path": "2"
    },
    "12400": {
      "fn": "Governance._createTaskType",
      "offset": [
        14522,
        14553
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12401": {
      "fn": "Governance._createTaskType",
      "offset": [
        14522,
        14553
      ],
      "op": "POP",
      "path": "2"
    },
    "12402": {
      "fn": "Governance._createTaskType",
      "offset": [
        14588,
        14593
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 108,
      "value": "0x0"
    },
    "12404": {
      "fn": "Governance._createTaskType",
      "offset": [
        14567,
        14578
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12405": {
      "fn": "Governance._createTaskType",
      "offset": [
        14567,
        14585
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "12407": {
      "fn": "Governance._createTaskType",
      "offset": [
        14567,
        14585
      ],
      "op": "ADD",
      "path": "2"
    },
    "12408": {
      "fn": "Governance._createTaskType",
      "offset": [
        14567,
        14585
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "12410": {
      "fn": "Governance._createTaskType",
      "offset": [
        14567,
        14593
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "12413": {
      "fn": "Governance._createTaskType",
      "offset": [
        14567,
        14593
      ],
      "op": "EXP",
      "path": "2"
    },
    "12414": {
      "fn": "Governance._createTaskType",
      "offset": [
        14567,
        14593
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12415": {
      "fn": "Governance._createTaskType",
      "offset": [
        14567,
        14593
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "12416": {
      "fn": "Governance._createTaskType",
      "offset": [
        14567,
        14593
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12417": {
      "fn": "Governance._createTaskType",
      "offset": [
        14567,
        14593
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "12419": {
      "fn": "Governance._createTaskType",
      "offset": [
        14567,
        14593
      ],
      "op": "MUL",
      "path": "2"
    },
    "12420": {
      "fn": "Governance._createTaskType",
      "offset": [
        14567,
        14593
      ],
      "op": "NOT",
      "path": "2"
    },
    "12421": {
      "fn": "Governance._createTaskType",
      "offset": [
        14567,
        14593
      ],
      "op": "AND",
      "path": "2"
    },
    "12422": {
      "fn": "Governance._createTaskType",
      "offset": [
        14567,
        14593
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12423": {
      "fn": "Governance._createTaskType",
      "offset": [
        14567,
        14593
      ],
      "op": "DUP4",
      "path": "2"
    },
    "12424": {
      "fn": "Governance._createTaskType",
      "offset": [
        14567,
        14593
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "12425": {
      "fn": "Governance._createTaskType",
      "offset": [
        14567,
        14593
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "12426": {
      "fn": "Governance._createTaskType",
      "offset": [
        14567,
        14593
      ],
      "op": "MUL",
      "path": "2"
    },
    "12427": {
      "fn": "Governance._createTaskType",
      "offset": [
        14567,
        14593
      ],
      "op": "OR",
      "path": "2"
    },
    "12428": {
      "fn": "Governance._createTaskType",
      "offset": [
        14567,
        14593
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12429": {
      "fn": "Governance._createTaskType",
      "offset": [
        14567,
        14593
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "12430": {
      "fn": "Governance._createTaskType",
      "offset": [
        14567,
        14593
      ],
      "op": "POP",
      "path": "2"
    },
    "12431": {
      "fn": "Governance._createTaskType",
      "offset": [
        14632,
        14643
      ],
      "op": "DUP8",
      "path": "2",
      "statement": 109
    },
    "12432": {
      "fn": "Governance._createTaskType",
      "offset": [
        14607,
        14618
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12433": {
      "fn": "Governance._createTaskType",
      "offset": [
        14607,
        14629
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "12435": {
      "fn": "Governance._createTaskType",
      "offset": [
        14607,
        14629
      ],
      "op": "ADD",
      "path": "2"
    },
    "12436": {
      "fn": "Governance._createTaskType",
      "offset": [
        14607,
        14629
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "12438": {
      "fn": "Governance._createTaskType",
      "offset": [
        14607,
        14643
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "12441": {
      "fn": "Governance._createTaskType",
      "offset": [
        14607,
        14643
      ],
      "op": "EXP",
      "path": "2"
    },
    "12442": {
      "fn": "Governance._createTaskType",
      "offset": [
        14607,
        14643
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12443": {
      "fn": "Governance._createTaskType",
      "offset": [
        14607,
        14643
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "12444": {
      "fn": "Governance._createTaskType",
      "offset": [
        14607,
        14643
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12445": {
      "fn": "Governance._createTaskType",
      "offset": [
        14607,
        14643
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "12451": {
      "fn": "Governance._createTaskType",
      "offset": [
        14607,
        14643
      ],
      "op": "MUL",
      "path": "2"
    },
    "12452": {
      "fn": "Governance._createTaskType",
      "offset": [
        14607,
        14643
      ],
      "op": "NOT",
      "path": "2"
    },
    "12453": {
      "fn": "Governance._createTaskType",
      "offset": [
        14607,
        14643
      ],
      "op": "AND",
      "path": "2"
    },
    "12454": {
      "fn": "Governance._createTaskType",
      "offset": [
        14607,
        14643
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12455": {
      "fn": "Governance._createTaskType",
      "offset": [
        14607,
        14643
      ],
      "op": "DUP4",
      "path": "2"
    },
    "12456": {
      "fn": "Governance._createTaskType",
      "offset": [
        14607,
        14643
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "12462": {
      "fn": "Governance._createTaskType",
      "offset": [
        14607,
        14643
      ],
      "op": "AND",
      "path": "2"
    },
    "12463": {
      "fn": "Governance._createTaskType",
      "offset": [
        14607,
        14643
      ],
      "op": "MUL",
      "path": "2"
    },
    "12464": {
      "fn": "Governance._createTaskType",
      "offset": [
        14607,
        14643
      ],
      "op": "OR",
      "path": "2"
    },
    "12465": {
      "fn": "Governance._createTaskType",
      "offset": [
        14607,
        14643
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12466": {
      "fn": "Governance._createTaskType",
      "offset": [
        14607,
        14643
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "12467": {
      "fn": "Governance._createTaskType",
      "offset": [
        14607,
        14643
      ],
      "op": "POP",
      "path": "2"
    },
    "12468": {
      "fn": "Governance._createTaskType",
      "offset": [
        14687,
        14703
      ],
      "op": "DUP7",
      "path": "2",
      "statement": 110
    },
    "12469": {
      "fn": "Governance._createTaskType",
      "offset": [
        14657,
        14668
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12470": {
      "fn": "Governance._createTaskType",
      "offset": [
        14657,
        14684
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "12472": {
      "fn": "Governance._createTaskType",
      "offset": [
        14657,
        14684
      ],
      "op": "ADD",
      "path": "2"
    },
    "12473": {
      "fn": "Governance._createTaskType",
      "offset": [
        14657,
        14684
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x6"
    },
    "12475": {
      "fn": "Governance._createTaskType",
      "offset": [
        14657,
        14703
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "12478": {
      "fn": "Governance._createTaskType",
      "offset": [
        14657,
        14703
      ],
      "op": "EXP",
      "path": "2"
    },
    "12479": {
      "fn": "Governance._createTaskType",
      "offset": [
        14657,
        14703
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12480": {
      "fn": "Governance._createTaskType",
      "offset": [
        14657,
        14703
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "12481": {
      "fn": "Governance._createTaskType",
      "offset": [
        14657,
        14703
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12482": {
      "fn": "Governance._createTaskType",
      "offset": [
        14657,
        14703
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "12484": {
      "fn": "Governance._createTaskType",
      "offset": [
        14657,
        14703
      ],
      "op": "MUL",
      "path": "2"
    },
    "12485": {
      "fn": "Governance._createTaskType",
      "offset": [
        14657,
        14703
      ],
      "op": "NOT",
      "path": "2"
    },
    "12486": {
      "fn": "Governance._createTaskType",
      "offset": [
        14657,
        14703
      ],
      "op": "AND",
      "path": "2"
    },
    "12487": {
      "fn": "Governance._createTaskType",
      "offset": [
        14657,
        14703
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12488": {
      "fn": "Governance._createTaskType",
      "offset": [
        14657,
        14703
      ],
      "op": "DUP4",
      "path": "2"
    },
    "12489": {
      "fn": "Governance._createTaskType",
      "offset": [
        14657,
        14703
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "12491": {
      "fn": "Governance._createTaskType",
      "offset": [
        14657,
        14703
      ],
      "op": "AND",
      "path": "2"
    },
    "12492": {
      "fn": "Governance._createTaskType",
      "offset": [
        14657,
        14703
      ],
      "op": "MUL",
      "path": "2"
    },
    "12493": {
      "fn": "Governance._createTaskType",
      "offset": [
        14657,
        14703
      ],
      "op": "OR",
      "path": "2"
    },
    "12494": {
      "fn": "Governance._createTaskType",
      "offset": [
        14657,
        14703
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12495": {
      "fn": "Governance._createTaskType",
      "offset": [
        14657,
        14703
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "12496": {
      "fn": "Governance._createTaskType",
      "offset": [
        14657,
        14703
      ],
      "op": "POP",
      "path": "2"
    },
    "12497": {
      "fn": "Governance._createTaskType",
      "offset": [
        14741,
        14751
      ],
      "op": "DUP6",
      "path": "2",
      "statement": 111
    },
    "12498": {
      "fn": "Governance._createTaskType",
      "offset": [
        14717,
        14728
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12499": {
      "fn": "Governance._createTaskType",
      "offset": [
        14717,
        14738
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "12501": {
      "fn": "Governance._createTaskType",
      "offset": [
        14717,
        14738
      ],
      "op": "ADD",
      "path": "2"
    },
    "12502": {
      "fn": "Governance._createTaskType",
      "offset": [
        14717,
        14738
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "12504": {
      "fn": "Governance._createTaskType",
      "offset": [
        14717,
        14751
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "12507": {
      "fn": "Governance._createTaskType",
      "offset": [
        14717,
        14751
      ],
      "op": "EXP",
      "path": "2"
    },
    "12508": {
      "fn": "Governance._createTaskType",
      "offset": [
        14717,
        14751
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12509": {
      "fn": "Governance._createTaskType",
      "offset": [
        14717,
        14751
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "12510": {
      "fn": "Governance._createTaskType",
      "offset": [
        14717,
        14751
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12511": {
      "fn": "Governance._createTaskType",
      "offset": [
        14717,
        14751
      ],
      "op": "PUSH3",
      "path": "2",
      "value": "0xFFFFFF"
    },
    "12515": {
      "fn": "Governance._createTaskType",
      "offset": [
        14717,
        14751
      ],
      "op": "MUL",
      "path": "2"
    },
    "12516": {
      "fn": "Governance._createTaskType",
      "offset": [
        14717,
        14751
      ],
      "op": "NOT",
      "path": "2"
    },
    "12517": {
      "fn": "Governance._createTaskType",
      "offset": [
        14717,
        14751
      ],
      "op": "AND",
      "path": "2"
    },
    "12518": {
      "fn": "Governance._createTaskType",
      "offset": [
        14717,
        14751
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12519": {
      "fn": "Governance._createTaskType",
      "offset": [
        14717,
        14751
      ],
      "op": "DUP4",
      "path": "2"
    },
    "12520": {
      "fn": "Governance._createTaskType",
      "offset": [
        14717,
        14751
      ],
      "op": "PUSH3",
      "path": "2",
      "value": "0xFFFFFF"
    },
    "12524": {
      "fn": "Governance._createTaskType",
      "offset": [
        14717,
        14751
      ],
      "op": "AND",
      "path": "2"
    },
    "12525": {
      "fn": "Governance._createTaskType",
      "offset": [
        14717,
        14751
      ],
      "op": "MUL",
      "path": "2"
    },
    "12526": {
      "fn": "Governance._createTaskType",
      "offset": [
        14717,
        14751
      ],
      "op": "OR",
      "path": "2"
    },
    "12527": {
      "fn": "Governance._createTaskType",
      "offset": [
        14717,
        14751
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12528": {
      "fn": "Governance._createTaskType",
      "offset": [
        14717,
        14751
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "12529": {
      "fn": "Governance._createTaskType",
      "offset": [
        14717,
        14751
      ],
      "op": "POP",
      "path": "2"
    },
    "12530": {
      "fn": "Governance._createTaskType",
      "offset": [
        14792,
        14805
      ],
      "op": "DUP5",
      "path": "2",
      "statement": 112
    },
    "12531": {
      "fn": "Governance._createTaskType",
      "offset": [
        14765,
        14776
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12532": {
      "fn": "Governance._createTaskType",
      "offset": [
        14765,
        14789
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "12534": {
      "fn": "Governance._createTaskType",
      "offset": [
        14765,
        14789
      ],
      "op": "ADD",
      "path": "2"
    },
    "12535": {
      "fn": "Governance._createTaskType",
      "offset": [
        14765,
        14789
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA"
    },
    "12537": {
      "fn": "Governance._createTaskType",
      "offset": [
        14765,
        14805
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "12540": {
      "fn": "Governance._createTaskType",
      "offset": [
        14765,
        14805
      ],
      "op": "EXP",
      "path": "2"
    },
    "12541": {
      "fn": "Governance._createTaskType",
      "offset": [
        14765,
        14805
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12542": {
      "fn": "Governance._createTaskType",
      "offset": [
        14765,
        14805
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "12543": {
      "fn": "Governance._createTaskType",
      "offset": [
        14765,
        14805
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12544": {
      "fn": "Governance._createTaskType",
      "offset": [
        14765,
        14805
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "12550": {
      "fn": "Governance._createTaskType",
      "offset": [
        14765,
        14805
      ],
      "op": "MUL",
      "path": "2"
    },
    "12551": {
      "fn": "Governance._createTaskType",
      "offset": [
        14765,
        14805
      ],
      "op": "NOT",
      "path": "2"
    },
    "12552": {
      "fn": "Governance._createTaskType",
      "offset": [
        14765,
        14805
      ],
      "op": "AND",
      "path": "2"
    },
    "12553": {
      "fn": "Governance._createTaskType",
      "offset": [
        14765,
        14805
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12554": {
      "fn": "Governance._createTaskType",
      "offset": [
        14765,
        14805
      ],
      "op": "DUP4",
      "path": "2"
    },
    "12555": {
      "fn": "Governance._createTaskType",
      "offset": [
        14765,
        14805
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "12561": {
      "fn": "Governance._createTaskType",
      "offset": [
        14765,
        14805
      ],
      "op": "AND",
      "path": "2"
    },
    "12562": {
      "fn": "Governance._createTaskType",
      "offset": [
        14765,
        14805
      ],
      "op": "MUL",
      "path": "2"
    },
    "12563": {
      "fn": "Governance._createTaskType",
      "offset": [
        14765,
        14805
      ],
      "op": "OR",
      "path": "2"
    },
    "12564": {
      "fn": "Governance._createTaskType",
      "offset": [
        14765,
        14805
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12565": {
      "fn": "Governance._createTaskType",
      "offset": [
        14765,
        14805
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "12566": {
      "fn": "Governance._createTaskType",
      "offset": [
        14765,
        14805
      ],
      "op": "POP",
      "path": "2"
    },
    "12567": {
      "fn": "Governance._createTaskType",
      "offset": [
        14846,
        14859
      ],
      "op": "DUP4",
      "path": "2",
      "statement": 113
    },
    "12568": {
      "fn": "Governance._createTaskType",
      "offset": [
        14819,
        14830
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12569": {
      "fn": "Governance._createTaskType",
      "offset": [
        14819,
        14843
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "12571": {
      "fn": "Governance._createTaskType",
      "offset": [
        14819,
        14843
      ],
      "op": "ADD",
      "path": "2"
    },
    "12572": {
      "fn": "Governance._createTaskType",
      "offset": [
        14819,
        14843
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xF"
    },
    "12574": {
      "fn": "Governance._createTaskType",
      "offset": [
        14819,
        14859
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "12577": {
      "fn": "Governance._createTaskType",
      "offset": [
        14819,
        14859
      ],
      "op": "EXP",
      "path": "2"
    },
    "12578": {
      "fn": "Governance._createTaskType",
      "offset": [
        14819,
        14859
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12579": {
      "fn": "Governance._createTaskType",
      "offset": [
        14819,
        14859
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "12580": {
      "fn": "Governance._createTaskType",
      "offset": [
        14819,
        14859
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12581": {
      "fn": "Governance._createTaskType",
      "offset": [
        14819,
        14859
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "12587": {
      "fn": "Governance._createTaskType",
      "offset": [
        14819,
        14859
      ],
      "op": "MUL",
      "path": "2"
    },
    "12588": {
      "fn": "Governance._createTaskType",
      "offset": [
        14819,
        14859
      ],
      "op": "NOT",
      "path": "2"
    },
    "12589": {
      "fn": "Governance._createTaskType",
      "offset": [
        14819,
        14859
      ],
      "op": "AND",
      "path": "2"
    },
    "12590": {
      "fn": "Governance._createTaskType",
      "offset": [
        14819,
        14859
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12591": {
      "fn": "Governance._createTaskType",
      "offset": [
        14819,
        14859
      ],
      "op": "DUP4",
      "path": "2"
    },
    "12592": {
      "fn": "Governance._createTaskType",
      "offset": [
        14819,
        14859
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "12598": {
      "fn": "Governance._createTaskType",
      "offset": [
        14819,
        14859
      ],
      "op": "AND",
      "path": "2"
    },
    "12599": {
      "fn": "Governance._createTaskType",
      "offset": [
        14819,
        14859
      ],
      "op": "MUL",
      "path": "2"
    },
    "12600": {
      "fn": "Governance._createTaskType",
      "offset": [
        14819,
        14859
      ],
      "op": "OR",
      "path": "2"
    },
    "12601": {
      "fn": "Governance._createTaskType",
      "offset": [
        14819,
        14859
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12602": {
      "fn": "Governance._createTaskType",
      "offset": [
        14819,
        14859
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "12603": {
      "fn": "Governance._createTaskType",
      "offset": [
        14819,
        14859
      ],
      "op": "POP",
      "path": "2"
    },
    "12604": {
      "fn": "Governance._createTaskType",
      "offset": [
        14902,
        14917
      ],
      "op": "DUP3",
      "path": "2",
      "statement": 114
    },
    "12605": {
      "fn": "Governance._createTaskType",
      "offset": [
        14873,
        14884
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12606": {
      "fn": "Governance._createTaskType",
      "offset": [
        14873,
        14899
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "12608": {
      "fn": "Governance._createTaskType",
      "offset": [
        14873,
        14899
      ],
      "op": "ADD",
      "path": "2"
    },
    "12609": {
      "fn": "Governance._createTaskType",
      "offset": [
        14873,
        14899
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x14"
    },
    "12611": {
      "fn": "Governance._createTaskType",
      "offset": [
        14873,
        14917
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "12614": {
      "fn": "Governance._createTaskType",
      "offset": [
        14873,
        14917
      ],
      "op": "EXP",
      "path": "2"
    },
    "12615": {
      "fn": "Governance._createTaskType",
      "offset": [
        14873,
        14917
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12616": {
      "fn": "Governance._createTaskType",
      "offset": [
        14873,
        14917
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "12617": {
      "fn": "Governance._createTaskType",
      "offset": [
        14873,
        14917
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12618": {
      "fn": "Governance._createTaskType",
      "offset": [
        14873,
        14917
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "12621": {
      "fn": "Governance._createTaskType",
      "offset": [
        14873,
        14917
      ],
      "op": "MUL",
      "path": "2"
    },
    "12622": {
      "fn": "Governance._createTaskType",
      "offset": [
        14873,
        14917
      ],
      "op": "NOT",
      "path": "2"
    },
    "12623": {
      "fn": "Governance._createTaskType",
      "offset": [
        14873,
        14917
      ],
      "op": "AND",
      "path": "2"
    },
    "12624": {
      "fn": "Governance._createTaskType",
      "offset": [
        14873,
        14917
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12625": {
      "fn": "Governance._createTaskType",
      "offset": [
        14873,
        14917
      ],
      "op": "DUP4",
      "path": "2"
    },
    "12626": {
      "fn": "Governance._createTaskType",
      "offset": [
        14873,
        14917
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "12629": {
      "fn": "Governance._createTaskType",
      "offset": [
        14873,
        14917
      ],
      "op": "AND",
      "path": "2"
    },
    "12630": {
      "fn": "Governance._createTaskType",
      "offset": [
        14873,
        14917
      ],
      "op": "MUL",
      "path": "2"
    },
    "12631": {
      "fn": "Governance._createTaskType",
      "offset": [
        14873,
        14917
      ],
      "op": "OR",
      "path": "2"
    },
    "12632": {
      "fn": "Governance._createTaskType",
      "offset": [
        14873,
        14917
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12633": {
      "fn": "Governance._createTaskType",
      "offset": [
        14873,
        14917
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "12634": {
      "fn": "Governance._createTaskType",
      "offset": [
        14873,
        14917
      ],
      "op": "POP",
      "path": "2"
    },
    "12635": {
      "fn": "Governance._createTaskType",
      "offset": [
        14963,
        15082
      ],
      "op": "PUSH32",
      "path": "2",
      "statement": 115,
      "value": "0x2810025950962E3CD71FD98C2DC111FFBDB2A129B36771DF8D36A7DE2FE3E4E0"
    },
    "12668": {
      "fn": "Governance._createTaskType",
      "offset": [
        14982,
        14991
      ],
      "op": "DUP11",
      "path": "2"
    },
    "12669": {
      "fn": "Governance._createTaskType",
      "offset": [
        14982,
        14991
      ],
      "op": "DUP11",
      "path": "2"
    },
    "12670": {
      "fn": "Governance._createTaskType",
      "offset": [
        14993,
        15004
      ],
      "op": "DUP11",
      "path": "2"
    },
    "12671": {
      "fn": "Governance._createTaskType",
      "offset": [
        15006,
        15022
      ],
      "op": "DUP11",
      "path": "2"
    },
    "12672": {
      "fn": "Governance._createTaskType",
      "offset": [
        15024,
        15034
      ],
      "op": "DUP11",
      "path": "2"
    },
    "12673": {
      "fn": "Governance._createTaskType",
      "offset": [
        15036,
        15049
      ],
      "op": "DUP11",
      "path": "2"
    },
    "12674": {
      "fn": "Governance._createTaskType",
      "offset": [
        15051,
        15064
      ],
      "op": "DUP11",
      "path": "2"
    },
    "12675": {
      "fn": "Governance._createTaskType",
      "offset": [
        15066,
        15081
      ],
      "op": "DUP11",
      "path": "2"
    },
    "12676": {
      "fn": "Governance._createTaskType",
      "offset": [
        14963,
        15082
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "12678": {
      "fn": "Governance._createTaskType",
      "offset": [
        14963,
        15082
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "12679": {
      "fn": "Governance._createTaskType",
      "offset": [
        14963,
        15082
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3197"
    },
    "12682": {
      "fn": "Governance._createTaskType",
      "offset": [
        14963,
        15082
      ],
      "op": "SWAP9",
      "path": "2"
    },
    "12683": {
      "fn": "Governance._createTaskType",
      "offset": [
        14963,
        15082
      ],
      "op": "SWAP8",
      "path": "2"
    },
    "12684": {
      "fn": "Governance._createTaskType",
      "offset": [
        14963,
        15082
      ],
      "op": "SWAP7",
      "path": "2"
    },
    "12685": {
      "fn": "Governance._createTaskType",
      "offset": [
        14963,
        15082
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "12686": {
      "fn": "Governance._createTaskType",
      "offset": [
        14963,
        15082
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "12687": {
      "fn": "Governance._createTaskType",
      "offset": [
        14963,
        15082
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "12688": {
      "fn": "Governance._createTaskType",
      "offset": [
        14963,
        15082
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "12689": {
      "fn": "Governance._createTaskType",
      "offset": [
        14963,
        15082
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "12690": {
      "fn": "Governance._createTaskType",
      "offset": [
        14963,
        15082
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12691": {
      "fn": "Governance._createTaskType",
      "offset": [
        14963,
        15082
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x42A4"
    },
    "12694": {
      "fn": "Governance._createTaskType",
      "jump": "i",
      "offset": [
        14963,
        15082
      ],
      "op": "JUMP",
      "path": "2"
    },
    "12695": {
      "fn": "Governance._createTaskType",
      "offset": [
        14963,
        15082
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12696": {
      "fn": "Governance._createTaskType",
      "offset": [
        14963,
        15082
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "12698": {
      "fn": "Governance._createTaskType",
      "offset": [
        14963,
        15082
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "12699": {
      "fn": "Governance._createTaskType",
      "offset": [
        14963,
        15082
      ],
      "op": "DUP1",
      "path": "2"
    },
    "12700": {
      "fn": "Governance._createTaskType",
      "offset": [
        14963,
        15082
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "12701": {
      "fn": "Governance._createTaskType",
      "offset": [
        14963,
        15082
      ],
      "op": "SUB",
      "path": "2"
    },
    "12702": {
      "fn": "Governance._createTaskType",
      "offset": [
        14963,
        15082
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12703": {
      "fn": "Governance._createTaskType",
      "offset": [
        14963,
        15082
      ],
      "op": "LOG1",
      "path": "2"
    },
    "12704": {
      "fn": "Governance._createTaskType",
      "offset": [
        14363,
        15089
      ],
      "op": "POP",
      "path": "2"
    },
    "12705": {
      "fn": "Governance._createTaskType",
      "offset": [
        14363,
        15089
      ],
      "op": "POP",
      "path": "2"
    },
    "12706": {
      "fn": "Governance._createTaskType",
      "offset": [
        14158,
        15089
      ],
      "op": "POP",
      "path": "2"
    },
    "12707": {
      "fn": "Governance._createTaskType",
      "offset": [
        14158,
        15089
      ],
      "op": "POP",
      "path": "2"
    },
    "12708": {
      "fn": "Governance._createTaskType",
      "offset": [
        14158,
        15089
      ],
      "op": "POP",
      "path": "2"
    },
    "12709": {
      "fn": "Governance._createTaskType",
      "offset": [
        14158,
        15089
      ],
      "op": "POP",
      "path": "2"
    },
    "12710": {
      "fn": "Governance._createTaskType",
      "offset": [
        14158,
        15089
      ],
      "op": "POP",
      "path": "2"
    },
    "12711": {
      "fn": "Governance._createTaskType",
      "offset": [
        14158,
        15089
      ],
      "op": "POP",
      "path": "2"
    },
    "12712": {
      "fn": "Governance._createTaskType",
      "offset": [
        14158,
        15089
      ],
      "op": "POP",
      "path": "2"
    },
    "12713": {
      "fn": "Governance._createTaskType",
      "offset": [
        14158,
        15089
      ],
      "op": "POP",
      "path": "2"
    },
    "12714": {
      "fn": "Governance._createTaskType",
      "jump": "o",
      "offset": [
        14158,
        15089
      ],
      "op": "JUMP",
      "path": "2"
    },
    "12715": {
      "fn": "Ownable._setOwner",
      "offset": [
        2101,
        2274
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "12716": {
      "fn": "Ownable._setOwner",
      "offset": [
        2176,
        2182
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "12718": {
      "fn": "Ownable._setOwner",
      "offset": [
        2176,
        2182
      ],
      "op": "DUP1",
      "path": "12"
    },
    "12719": {
      "fn": "Ownable._setOwner",
      "offset": [
        2176,
        2182
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "12720": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12722": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12724": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12726": {
      "op": "SHL"
    },
    "12727": {
      "op": "SUB"
    },
    "12728": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "DUP4",
      "path": "12",
      "statement": 116
    },
    "12729": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "DUP2",
      "path": "12"
    },
    "12730": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "AND",
      "path": "12"
    },
    "12731": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12733": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12735": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12737": {
      "op": "SHL"
    },
    "12738": {
      "op": "SUB"
    },
    "12739": {
      "op": "NOT"
    },
    "12740": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "DUP4",
      "path": "12"
    },
    "12741": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "AND",
      "path": "12"
    },
    "12742": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "DUP2",
      "path": "12"
    },
    "12743": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "OR",
      "path": "12"
    },
    "12744": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "12745": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "12746": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "12747": {
      "fn": "Ownable._setOwner",
      "offset": [
        2226,
        2266
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 117,
      "value": "0x40"
    },
    "12749": {
      "fn": "Ownable._setOwner",
      "offset": [
        2226,
        2266
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "12750": {
      "fn": "Ownable._setOwner",
      "offset": [
        2176,
        2182
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "12751": {
      "fn": "Ownable._setOwner",
      "offset": [
        2176,
        2182
      ],
      "op": "AND",
      "path": "12"
    },
    "12752": {
      "fn": "Ownable._setOwner",
      "offset": [
        2176,
        2182
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "12753": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "12754": {
      "fn": "Ownable._setOwner",
      "offset": [
        2176,
        2182
      ],
      "op": "DUP3",
      "path": "12"
    },
    "12755": {
      "fn": "Ownable._setOwner",
      "offset": [
        2176,
        2182
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "12756": {
      "fn": "Ownable._setOwner",
      "offset": [
        2226,
        2266
      ],
      "op": "PUSH32",
      "path": "12",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "12789": {
      "fn": "Ownable._setOwner",
      "offset": [
        2226,
        2266
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "12790": {
      "fn": "Ownable._setOwner",
      "offset": [
        2157,
        2173
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "12792": {
      "fn": "Ownable._setOwner",
      "offset": [
        2157,
        2173
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "12793": {
      "fn": "Ownable._setOwner",
      "offset": [
        2226,
        2266
      ],
      "op": "LOG3",
      "path": "12"
    },
    "12794": {
      "fn": "Ownable._setOwner",
      "offset": [
        2146,
        2274
      ],
      "op": "POP",
      "path": "12"
    },
    "12795": {
      "fn": "Ownable._setOwner",
      "offset": [
        2101,
        2274
      ],
      "op": "POP",
      "path": "12"
    },
    "12796": {
      "fn": "Ownable._setOwner",
      "jump": "o",
      "offset": [
        2101,
        2274
      ],
      "op": "JUMP",
      "path": "12"
    },
    "12797": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3287,
        3611
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "12798": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3351,
        3364
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "12800": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3380,
        3392
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 118,
      "value": "0x3218"
    },
    "12803": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3386,
        3391
      ],
      "op": "DUP3",
      "path": "1"
    },
    "12804": {
      "fn": "DoubleEndedQueue.empty",
      "offset": [
        5880,
        5892
      ],
      "op": "SLOAD",
      "path": "1",
      "statement": 119
    },
    "12805": {
      "fn": "DoubleEndedQueue.empty",
      "offset": [
        5880,
        5892
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xF"
    },
    "12807": {
      "fn": "DoubleEndedQueue.empty",
      "offset": [
        5880,
        5892
      ],
      "op": "DUP2",
      "path": "1"
    },
    "12808": {
      "fn": "DoubleEndedQueue.empty",
      "offset": [
        5880,
        5892
      ],
      "op": "DUP2",
      "path": "1"
    },
    "12809": {
      "fn": "DoubleEndedQueue.empty",
      "offset": [
        5880,
        5892
      ],
      "op": "SIGNEXTEND",
      "path": "1"
    },
    "12810": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12812": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "12814": {
      "op": "SHL"
    },
    "12815": {
      "fn": "DoubleEndedQueue.empty",
      "offset": [
        5866,
        5876
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "12816": {
      "fn": "DoubleEndedQueue.empty",
      "offset": [
        5866,
        5876
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "12817": {
      "fn": "DoubleEndedQueue.empty",
      "offset": [
        5866,
        5876
      ],
      "op": "DIV",
      "path": "1"
    },
    "12818": {
      "fn": "DoubleEndedQueue.empty",
      "offset": [
        5866,
        5876
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "12819": {
      "fn": "DoubleEndedQueue.empty",
      "offset": [
        5866,
        5876
      ],
      "op": "SIGNEXTEND",
      "path": "1"
    },
    "12820": {
      "fn": "DoubleEndedQueue.empty",
      "offset": [
        5866,
        5892
      ],
      "op": "SGT",
      "path": "1"
    },
    "12821": {
      "fn": "DoubleEndedQueue.empty",
      "offset": [
        5866,
        5892
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "12822": {
      "fn": "DoubleEndedQueue.empty",
      "offset": [
        5866,
        5892
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "12823": {
      "fn": "DoubleEndedQueue.empty",
      "offset": [
        5777,
        5899
      ],
      "op": "JUMP",
      "path": "1"
    },
    "12824": {
      "branch": 178,
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3380,
        3392
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "12825": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3376,
        3408
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "12826": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3376,
        3408
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3236"
    },
    "12829": {
      "branch": 178,
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3376,
        3408
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "12830": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3401,
        3408
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "12832": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3401,
        3408
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "12833": {
      "op": "PUSH4",
      "value": "0x1ED95095"
    },
    "12838": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "12840": {
      "op": "SHL"
    },
    "12841": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3401,
        3408
      ],
      "op": "DUP2",
      "path": "1"
    },
    "12842": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3401,
        3408
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "12843": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3401,
        3408
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "12845": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3401,
        3408
      ],
      "op": "ADD",
      "path": "1"
    },
    "12846": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3401,
        3408
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "12848": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3401,
        3408
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "12849": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3401,
        3408
      ],
      "op": "DUP1",
      "path": "1"
    },
    "12850": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3401,
        3408
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "12851": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3401,
        3408
      ],
      "op": "SUB",
      "path": "1"
    },
    "12852": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3401,
        3408
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "12853": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3401,
        3408
      ],
      "op": "REVERT",
      "path": "1"
    },
    "12854": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3376,
        3408
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "12855": {
      "op": "POP"
    },
    "12856": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3438,
        3450
      ],
      "op": "DUP1",
      "path": "1"
    },
    "12857": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3438,
        3450
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "12858": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3438,
        3450
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xF"
    },
    "12860": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3438,
        3450
      ],
      "op": "SIGNEXTEND",
      "path": "1"
    },
    "12861": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3418,
        3435
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "12863": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3468,
        3491
      ],
      "op": "DUP2",
      "path": "1",
      "statement": 120
    },
    "12864": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3468,
        3491
      ],
      "op": "DUP2",
      "path": "1"
    },
    "12865": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3468,
        3491
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "12866": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3438,
        3450
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "12868": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3468,
        3479
      ],
      "op": "DUP1",
      "path": "1"
    },
    "12869": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3468,
        3479
      ],
      "op": "DUP5",
      "path": "1"
    },
    "12870": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3468,
        3479
      ],
      "op": "ADD",
      "path": "1"
    },
    "12871": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3468,
        3491
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "12873": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3468,
        3491
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "12874": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3468,
        3491
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "12876": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3468,
        3491
      ],
      "op": "DUP3",
      "path": "1"
    },
    "12877": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3468,
        3491
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "12878": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3468,
        3491
      ],
      "op": "DUP1",
      "path": "1"
    },
    "12879": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3468,
        3491
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "12880": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3501,
        3531
      ],
      "op": "SWAP3",
      "path": "1",
      "statement": 121
    },
    "12881": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3501,
        3531
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "12882": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3501,
        3531
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "12883": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3565,
        3594
      ],
      "op": "DUP4",
      "path": "1",
      "statement": 122
    },
    "12884": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3565,
        3594
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "12885": {
      "op": "PUSH16",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "12902": {
      "op": "NOT"
    },
    "12903": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3565,
        3594
      ],
      "op": "AND",
      "path": "1"
    },
    "12904": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3580,
        3594
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "12905": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3580,
        3594
      ],
      "op": "ADD",
      "path": "1"
    },
    "12906": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12908": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12910": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "12912": {
      "op": "SHL"
    },
    "12913": {
      "op": "SUB"
    },
    "12914": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3565,
        3594
      ],
      "op": "AND",
      "path": "1"
    },
    "12915": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3565,
        3594
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "12916": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3565,
        3594
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "12917": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3565,
        3594
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "12918": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3565,
        3594
      ],
      "op": "OR",
      "path": "1"
    },
    "12919": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3565,
        3594
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "12920": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3565,
        3594
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "12921": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3565,
        3594
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "12922": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3468,
        3491
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "12923": {
      "fn": "DoubleEndedQueue.popFront",
      "jump": "o",
      "offset": [
        3287,
        3611
      ],
      "op": "JUMP",
      "path": "1"
    },
    "12924": {
      "fn": "SafeCast.toInt256",
      "offset": [
        35228,
        35525
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "12925": {
      "fn": "SafeCast.toInt256",
      "offset": [
        35284,
        35290
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "12927": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12929": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12931": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "12933": {
      "op": "SHL"
    },
    "12934": {
      "op": "SUB"
    },
    "12935": {
      "fn": "SafeCast.toInt256",
      "offset": [
        35409,
        35414
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 123
    },
    "12936": {
      "fn": "SafeCast.toInt256",
      "offset": [
        35409,
        35443
      ],
      "op": "GT",
      "path": "0"
    },
    "12937": {
      "branch": 180,
      "fn": "SafeCast.toInt256",
      "offset": [
        35409,
        35443
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "12938": {
      "fn": "SafeCast.toInt256",
      "offset": [
        35401,
        35488
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x32E6"
    },
    "12941": {
      "branch": 180,
      "fn": "SafeCast.toInt256",
      "offset": [
        35401,
        35488
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "12942": {
      "fn": "SafeCast.toInt256",
      "offset": [
        35401,
        35488
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "12944": {
      "fn": "SafeCast.toInt256",
      "offset": [
        35401,
        35488
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "12945": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "12949": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "12951": {
      "op": "SHL"
    },
    "12952": {
      "fn": "SafeCast.toInt256",
      "offset": [
        35401,
        35488
      ],
      "op": "DUP2",
      "path": "0"
    },
    "12953": {
      "fn": "SafeCast.toInt256",
      "offset": [
        35401,
        35488
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "12954": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12956": {
      "fn": "SafeCast.toInt256",
      "offset": [
        35401,
        35488
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "12958": {
      "fn": "SafeCast.toInt256",
      "offset": [
        35401,
        35488
      ],
      "op": "DUP3",
      "path": "0"
    },
    "12959": {
      "fn": "SafeCast.toInt256",
      "offset": [
        35401,
        35488
      ],
      "op": "ADD",
      "path": "0"
    },
    "12960": {
      "op": "MSTORE"
    },
    "12961": {
      "op": "PUSH1",
      "value": "0x28"
    },
    "12963": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "12965": {
      "op": "DUP3"
    },
    "12966": {
      "op": "ADD"
    },
    "12967": {
      "op": "MSTORE"
    },
    "12968": {
      "op": "PUSH32",
      "value": "0x53616665436173743A2076616C756520646F65736E27742066697420696E2061"
    },
    "13001": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "13003": {
      "op": "DUP3"
    },
    "13004": {
      "op": "ADD"
    },
    "13005": {
      "op": "MSTORE"
    },
    "13006": {
      "op": "PUSH8",
      "value": "0x371034B73A191A9B"
    },
    "13015": {
      "op": "PUSH1",
      "value": "0xC1"
    },
    "13017": {
      "op": "SHL"
    },
    "13018": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "13020": {
      "op": "DUP3"
    },
    "13021": {
      "op": "ADD"
    },
    "13022": {
      "op": "MSTORE"
    },
    "13023": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "13025": {
      "op": "ADD"
    },
    "13026": {
      "fn": "SafeCast.toInt256",
      "offset": [
        35401,
        35488
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE54"
    },
    "13029": {
      "op": "JUMP"
    },
    "13030": {
      "fn": "SafeCast.toInt256",
      "offset": [
        35401,
        35488
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "13031": {
      "op": "POP"
    },
    "13032": {
      "fn": "SafeCast.toInt256",
      "offset": [
        35512,
        35517
      ],
      "op": "SWAP1",
      "path": "0",
      "statement": 124
    },
    "13033": {
      "fn": "SafeCast.toInt256",
      "jump": "o",
      "offset": [
        35228,
        35525
      ],
      "op": "JUMP",
      "path": "0"
    },
    "13034": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26286,
        26502
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "13035": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26341,
        26347
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "13037": {
      "op": "PUSH16",
      "value": "0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "13054": {
      "op": "NOT"
    },
    "13055": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26367,
        26392
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 125
    },
    "13056": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26367,
        26392
      ],
      "op": "SLT",
      "path": "0"
    },
    "13057": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26367,
        26392
      ],
      "op": "DUP1",
      "path": "0"
    },
    "13058": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26367,
        26392
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "13059": {
      "branch": 181,
      "fn": "SafeCast.toInt128",
      "offset": [
        26367,
        26392
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "13060": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26367,
        26421
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x331D"
    },
    "13063": {
      "branch": 181,
      "fn": "SafeCast.toInt128",
      "offset": [
        26367,
        26421
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "13064": {
      "op": "POP"
    },
    "13065": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26405,
        26421
      ],
      "op": "PUSH16",
      "path": "0",
      "value": "0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "13082": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26396,
        26421
      ],
      "op": "DUP3",
      "path": "0"
    },
    "13083": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26396,
        26421
      ],
      "op": "SGT",
      "path": "0"
    },
    "13084": {
      "branch": 182,
      "fn": "SafeCast.toInt128",
      "offset": [
        26396,
        26421
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "13085": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26367,
        26421
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "13086": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26359,
        26465
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x32E6"
    },
    "13089": {
      "branch": 182,
      "fn": "SafeCast.toInt128",
      "offset": [
        26359,
        26465
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "13090": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26359,
        26465
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "13092": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26359,
        26465
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "13093": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "13097": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "13099": {
      "op": "SHL"
    },
    "13100": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26359,
        26465
      ],
      "op": "DUP2",
      "path": "0"
    },
    "13101": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26359,
        26465
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "13102": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13104": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26359,
        26465
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "13106": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26359,
        26465
      ],
      "op": "DUP3",
      "path": "0"
    },
    "13107": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26359,
        26465
      ],
      "op": "ADD",
      "path": "0"
    },
    "13108": {
      "op": "MSTORE"
    },
    "13109": {
      "op": "PUSH1",
      "value": "0x27"
    },
    "13111": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "13113": {
      "op": "DUP3"
    },
    "13114": {
      "op": "ADD"
    },
    "13115": {
      "op": "MSTORE"
    },
    "13116": {
      "op": "PUSH32",
      "value": "0x53616665436173743A2076616C756520646F65736E27742066697420696E2031"
    },
    "13149": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "13151": {
      "op": "DUP3"
    },
    "13152": {
      "op": "ADD"
    },
    "13153": {
      "op": "MSTORE"
    },
    "13154": {
      "op": "PUSH7",
      "value": "0x32382062697473"
    },
    "13162": {
      "op": "PUSH1",
      "value": "0xC8"
    },
    "13164": {
      "op": "SHL"
    },
    "13165": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "13167": {
      "op": "DUP3"
    },
    "13168": {
      "op": "ADD"
    },
    "13169": {
      "op": "MSTORE"
    },
    "13170": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "13172": {
      "op": "ADD"
    },
    "13173": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26359,
        26465
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE54"
    },
    "13176": {
      "op": "JUMP"
    },
    "13177": {
      "op": "JUMPDEST"
    },
    "13178": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13180": {
      "op": "DUP1"
    },
    "13181": {
      "op": "MLOAD"
    },
    "13182": {
      "op": "PUSH2",
      "value": "0x140"
    },
    "13185": {
      "op": "DUP2"
    },
    "13186": {
      "op": "ADD"
    },
    "13187": {
      "op": "DUP3"
    },
    "13188": {
      "op": "MSTORE"
    },
    "13189": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "13191": {
      "op": "DUP1"
    },
    "13192": {
      "op": "DUP3"
    },
    "13193": {
      "op": "MSTORE"
    },
    "13194": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13196": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13198": {
      "op": "DUP4"
    },
    "13199": {
      "op": "ADD"
    },
    "13200": {
      "op": "DUP2"
    },
    "13201": {
      "op": "SWAP1"
    },
    "13202": {
      "op": "MSTORE"
    },
    "13203": {
      "op": "SWAP3"
    },
    "13204": {
      "op": "DUP3"
    },
    "13205": {
      "op": "ADD"
    },
    "13206": {
      "op": "DUP4"
    },
    "13207": {
      "op": "SWAP1"
    },
    "13208": {
      "op": "MSTORE"
    },
    "13209": {
      "op": "DUP2"
    },
    "13210": {
      "op": "ADD"
    },
    "13211": {
      "op": "DUP3"
    },
    "13212": {
      "op": "SWAP1"
    },
    "13213": {
      "op": "MSTORE"
    },
    "13214": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "13216": {
      "op": "DUP2"
    },
    "13217": {
      "op": "ADD"
    },
    "13218": {
      "op": "DUP3"
    },
    "13219": {
      "op": "SWAP1"
    },
    "13220": {
      "op": "MSTORE"
    },
    "13221": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13223": {
      "op": "DUP2"
    },
    "13224": {
      "op": "ADD"
    },
    "13225": {
      "op": "DUP3"
    },
    "13226": {
      "op": "SWAP1"
    },
    "13227": {
      "op": "MSTORE"
    },
    "13228": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "13230": {
      "op": "DUP2"
    },
    "13231": {
      "op": "ADD"
    },
    "13232": {
      "op": "DUP3"
    },
    "13233": {
      "op": "SWAP1"
    },
    "13234": {
      "op": "MSTORE"
    },
    "13235": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "13237": {
      "op": "DUP2"
    },
    "13238": {
      "op": "ADD"
    },
    "13239": {
      "op": "DUP3"
    },
    "13240": {
      "op": "SWAP1"
    },
    "13241": {
      "op": "MSTORE"
    },
    "13242": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "13245": {
      "op": "DUP2"
    },
    "13246": {
      "op": "ADD"
    },
    "13247": {
      "op": "DUP3"
    },
    "13248": {
      "op": "SWAP1"
    },
    "13249": {
      "op": "MSTORE"
    },
    "13250": {
      "op": "PUSH2",
      "value": "0x120"
    },
    "13253": {
      "op": "DUP2"
    },
    "13254": {
      "op": "ADD"
    },
    "13255": {
      "op": "SWAP2"
    },
    "13256": {
      "op": "SWAP1"
    },
    "13257": {
      "op": "SWAP2"
    },
    "13258": {
      "op": "MSTORE"
    },
    "13259": {
      "op": "SWAP1"
    },
    "13260": {
      "jump": "o",
      "op": "JUMP"
    },
    "13261": {
      "op": "JUMPDEST"
    },
    "13262": {
      "op": "POP"
    },
    "13263": {
      "op": "DUP1"
    },
    "13264": {
      "op": "SLOAD"
    },
    "13265": {
      "op": "PUSH2",
      "value": "0x33D9"
    },
    "13268": {
      "op": "SWAP1"
    },
    "13269": {
      "op": "PUSH2",
      "value": "0x3C5E"
    },
    "13272": {
      "jump": "i",
      "op": "JUMP"
    },
    "13273": {
      "op": "JUMPDEST"
    },
    "13274": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13276": {
      "op": "DUP3"
    },
    "13277": {
      "op": "SSTORE"
    },
    "13278": {
      "op": "DUP1"
    },
    "13279": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "13281": {
      "op": "LT"
    },
    "13282": {
      "op": "PUSH2",
      "value": "0x33E9"
    },
    "13285": {
      "op": "JUMPI"
    },
    "13286": {
      "op": "POP"
    },
    "13287": {
      "op": "POP"
    },
    "13288": {
      "jump": "o",
      "op": "JUMP"
    },
    "13289": {
      "op": "JUMPDEST"
    },
    "13290": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "13292": {
      "op": "ADD"
    },
    "13293": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13295": {
      "op": "SWAP1"
    },
    "13296": {
      "op": "DIV"
    },
    "13297": {
      "op": "SWAP1"
    },
    "13298": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13300": {
      "op": "MSTORE"
    },
    "13301": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13303": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13305": {
      "op": "KECCAK256"
    },
    "13306": {
      "op": "SWAP1"
    },
    "13307": {
      "op": "DUP2"
    },
    "13308": {
      "op": "ADD"
    },
    "13309": {
      "op": "SWAP1"
    },
    "13310": {
      "op": "PUSH2",
      "value": "0x2B21"
    },
    "13313": {
      "op": "SWAP2"
    },
    "13314": {
      "op": "SWAP1"
    },
    "13315": {
      "op": "JUMPDEST"
    },
    "13316": {
      "op": "DUP1"
    },
    "13317": {
      "op": "DUP3"
    },
    "13318": {
      "op": "GT"
    },
    "13319": {
      "op": "ISZERO"
    },
    "13320": {
      "op": "PUSH2",
      "value": "0x32E6"
    },
    "13323": {
      "op": "JUMPI"
    },
    "13324": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13326": {
      "op": "DUP2"
    },
    "13327": {
      "op": "SSTORE"
    },
    "13328": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13330": {
      "op": "ADD"
    },
    "13331": {
      "op": "PUSH2",
      "value": "0x3403"
    },
    "13334": {
      "op": "JUMP"
    },
    "13335": {
      "op": "JUMPDEST"
    },
    "13336": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13338": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13340": {
      "op": "DUP3"
    },
    "13341": {
      "op": "DUP5"
    },
    "13342": {
      "op": "SUB"
    },
    "13343": {
      "op": "SLT"
    },
    "13344": {
      "op": "ISZERO"
    },
    "13345": {
      "op": "PUSH2",
      "value": "0x3429"
    },
    "13348": {
      "op": "JUMPI"
    },
    "13349": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13351": {
      "op": "DUP1"
    },
    "13352": {
      "op": "REVERT"
    },
    "13353": {
      "op": "JUMPDEST"
    },
    "13354": {
      "op": "POP"
    },
    "13355": {
      "op": "CALLDATALOAD"
    },
    "13356": {
      "op": "SWAP2"
    },
    "13357": {
      "op": "SWAP1"
    },
    "13358": {
      "op": "POP"
    },
    "13359": {
      "jump": "o",
      "op": "JUMP"
    },
    "13360": {
      "op": "JUMPDEST"
    },
    "13361": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13363": {
      "op": "JUMPDEST"
    },
    "13364": {
      "op": "DUP4"
    },
    "13365": {
      "op": "DUP2"
    },
    "13366": {
      "op": "LT"
    },
    "13367": {
      "op": "ISZERO"
    },
    "13368": {
      "op": "PUSH2",
      "value": "0x344B"
    },
    "13371": {
      "op": "JUMPI"
    },
    "13372": {
      "op": "DUP2"
    },
    "13373": {
      "op": "DUP2"
    },
    "13374": {
      "op": "ADD"
    },
    "13375": {
      "op": "MLOAD"
    },
    "13376": {
      "op": "DUP4"
    },
    "13377": {
      "op": "DUP3"
    },
    "13378": {
      "op": "ADD"
    },
    "13379": {
      "op": "MSTORE"
    },
    "13380": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13382": {
      "op": "ADD"
    },
    "13383": {
      "op": "PUSH2",
      "value": "0x3433"
    },
    "13386": {
      "op": "JUMP"
    },
    "13387": {
      "op": "JUMPDEST"
    },
    "13388": {
      "op": "DUP4"
    },
    "13389": {
      "op": "DUP2"
    },
    "13390": {
      "op": "GT"
    },
    "13391": {
      "op": "ISZERO"
    },
    "13392": {
      "op": "PUSH2",
      "value": "0x1369"
    },
    "13395": {
      "op": "JUMPI"
    },
    "13396": {
      "op": "POP"
    },
    "13397": {
      "op": "POP"
    },
    "13398": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13400": {
      "op": "SWAP2"
    },
    "13401": {
      "op": "ADD"
    },
    "13402": {
      "op": "MSTORE"
    },
    "13403": {
      "jump": "o",
      "op": "JUMP"
    },
    "13404": {
      "op": "JUMPDEST"
    },
    "13405": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13407": {
      "op": "DUP2"
    },
    "13408": {
      "op": "MLOAD"
    },
    "13409": {
      "op": "DUP1"
    },
    "13410": {
      "op": "DUP5"
    },
    "13411": {
      "op": "MSTORE"
    },
    "13412": {
      "op": "PUSH2",
      "value": "0x3474"
    },
    "13415": {
      "op": "DUP2"
    },
    "13416": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13418": {
      "op": "DUP7"
    },
    "13419": {
      "op": "ADD"
    },
    "13420": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13422": {
      "op": "DUP7"
    },
    "13423": {
      "op": "ADD"
    },
    "13424": {
      "op": "PUSH2",
      "value": "0x3430"
    },
    "13427": {
      "jump": "i",
      "op": "JUMP"
    },
    "13428": {
      "op": "JUMPDEST"
    },
    "13429": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "13431": {
      "op": "ADD"
    },
    "13432": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "13434": {
      "op": "NOT"
    },
    "13435": {
      "op": "AND"
    },
    "13436": {
      "op": "SWAP3"
    },
    "13437": {
      "op": "SWAP1"
    },
    "13438": {
      "op": "SWAP3"
    },
    "13439": {
      "op": "ADD"
    },
    "13440": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13442": {
      "op": "ADD"
    },
    "13443": {
      "op": "SWAP3"
    },
    "13444": {
      "op": "SWAP2"
    },
    "13445": {
      "op": "POP"
    },
    "13446": {
      "op": "POP"
    },
    "13447": {
      "jump": "o",
      "op": "JUMP"
    },
    "13448": {
      "op": "JUMPDEST"
    },
    "13449": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13451": {
      "op": "DUP2"
    },
    "13452": {
      "op": "MSTORE"
    },
    "13453": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13455": {
      "op": "PUSH2",
      "value": "0x349B"
    },
    "13458": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13460": {
      "op": "DUP4"
    },
    "13461": {
      "op": "ADD"
    },
    "13462": {
      "op": "DUP9"
    },
    "13463": {
      "op": "PUSH2",
      "value": "0x345C"
    },
    "13466": {
      "jump": "i",
      "op": "JUMP"
    },
    "13467": {
      "op": "JUMPDEST"
    },
    "13468": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "13471": {
      "op": "SWAP7"
    },
    "13472": {
      "op": "SWAP1"
    },
    "13473": {
      "op": "SWAP7"
    },
    "13474": {
      "op": "AND"
    },
    "13475": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13477": {
      "op": "DUP4"
    },
    "13478": {
      "op": "ADD"
    },
    "13479": {
      "op": "MSTORE"
    },
    "13480": {
      "op": "POP"
    },
    "13481": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "13487": {
      "op": "SWAP4"
    },
    "13488": {
      "op": "DUP5"
    },
    "13489": {
      "op": "AND"
    },
    "13490": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13492": {
      "op": "DUP3"
    },
    "13493": {
      "op": "ADD"
    },
    "13494": {
      "op": "MSTORE"
    },
    "13495": {
      "op": "SWAP2"
    },
    "13496": {
      "op": "DUP4"
    },
    "13497": {
      "op": "AND"
    },
    "13498": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "13500": {
      "op": "DUP4"
    },
    "13501": {
      "op": "ADD"
    },
    "13502": {
      "op": "MSTORE"
    },
    "13503": {
      "op": "SWAP1"
    },
    "13504": {
      "op": "SWAP2"
    },
    "13505": {
      "op": "AND"
    },
    "13506": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "13508": {
      "op": "SWAP1"
    },
    "13509": {
      "op": "SWAP2"
    },
    "13510": {
      "op": "ADD"
    },
    "13511": {
      "op": "MSTORE"
    },
    "13512": {
      "op": "SWAP2"
    },
    "13513": {
      "op": "SWAP1"
    },
    "13514": {
      "op": "POP"
    },
    "13515": {
      "jump": "o",
      "op": "JUMP"
    },
    "13516": {
      "op": "JUMPDEST"
    },
    "13517": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "13522": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "13524": {
      "op": "SHL"
    },
    "13525": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13527": {
      "op": "MSTORE"
    },
    "13528": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "13530": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "13532": {
      "op": "MSTORE"
    },
    "13533": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "13535": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13537": {
      "op": "REVERT"
    },
    "13538": {
      "op": "JUMPDEST"
    },
    "13539": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13541": {
      "op": "MLOAD"
    },
    "13542": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "13544": {
      "op": "DUP3"
    },
    "13545": {
      "op": "ADD"
    },
    "13546": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "13548": {
      "op": "NOT"
    },
    "13549": {
      "op": "AND"
    },
    "13550": {
      "op": "DUP2"
    },
    "13551": {
      "op": "ADD"
    },
    "13552": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13554": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13556": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13558": {
      "op": "SHL"
    },
    "13559": {
      "op": "SUB"
    },
    "13560": {
      "op": "DUP2"
    },
    "13561": {
      "op": "GT"
    },
    "13562": {
      "op": "DUP3"
    },
    "13563": {
      "op": "DUP3"
    },
    "13564": {
      "op": "LT"
    },
    "13565": {
      "op": "OR"
    },
    "13566": {
      "op": "ISZERO"
    },
    "13567": {
      "op": "PUSH2",
      "value": "0x350A"
    },
    "13570": {
      "op": "JUMPI"
    },
    "13571": {
      "op": "PUSH2",
      "value": "0x350A"
    },
    "13574": {
      "op": "PUSH2",
      "value": "0x34CC"
    },
    "13577": {
      "jump": "i",
      "op": "JUMP"
    },
    "13578": {
      "op": "JUMPDEST"
    },
    "13579": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13581": {
      "op": "MSTORE"
    },
    "13582": {
      "op": "SWAP2"
    },
    "13583": {
      "op": "SWAP1"
    },
    "13584": {
      "op": "POP"
    },
    "13585": {
      "jump": "o",
      "op": "JUMP"
    },
    "13586": {
      "op": "JUMPDEST"
    },
    "13587": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13589": {
      "op": "DUP3"
    },
    "13590": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "13592": {
      "op": "DUP4"
    },
    "13593": {
      "op": "ADD"
    },
    "13594": {
      "op": "SLT"
    },
    "13595": {
      "op": "PUSH2",
      "value": "0x3523"
    },
    "13598": {
      "op": "JUMPI"
    },
    "13599": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13601": {
      "op": "DUP1"
    },
    "13602": {
      "op": "REVERT"
    },
    "13603": {
      "op": "JUMPDEST"
    },
    "13604": {
      "op": "DUP2"
    },
    "13605": {
      "op": "CALLDATALOAD"
    },
    "13606": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13608": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13610": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13612": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13614": {
      "op": "SHL"
    },
    "13615": {
      "op": "SUB"
    },
    "13616": {
      "op": "DUP3"
    },
    "13617": {
      "op": "GT"
    },
    "13618": {
      "op": "ISZERO"
    },
    "13619": {
      "op": "PUSH2",
      "value": "0x353E"
    },
    "13622": {
      "op": "JUMPI"
    },
    "13623": {
      "op": "PUSH2",
      "value": "0x353E"
    },
    "13626": {
      "op": "PUSH2",
      "value": "0x34CC"
    },
    "13629": {
      "jump": "i",
      "op": "JUMP"
    },
    "13630": {
      "op": "JUMPDEST"
    },
    "13631": {
      "op": "DUP2"
    },
    "13632": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "13634": {
      "op": "SHL"
    },
    "13635": {
      "op": "PUSH2",
      "value": "0x354D"
    },
    "13638": {
      "op": "DUP3"
    },
    "13639": {
      "op": "DUP3"
    },
    "13640": {
      "op": "ADD"
    },
    "13641": {
      "op": "PUSH2",
      "value": "0x34E2"
    },
    "13644": {
      "jump": "i",
      "op": "JUMP"
    },
    "13645": {
      "op": "JUMPDEST"
    },
    "13646": {
      "op": "SWAP3"
    },
    "13647": {
      "op": "DUP4"
    },
    "13648": {
      "op": "MSTORE"
    },
    "13649": {
      "op": "DUP5"
    },
    "13650": {
      "op": "DUP2"
    },
    "13651": {
      "op": "ADD"
    },
    "13652": {
      "op": "DUP3"
    },
    "13653": {
      "op": "ADD"
    },
    "13654": {
      "op": "SWAP3"
    },
    "13655": {
      "op": "DUP3"
    },
    "13656": {
      "op": "DUP2"
    },
    "13657": {
      "op": "ADD"
    },
    "13658": {
      "op": "SWAP1"
    },
    "13659": {
      "op": "DUP8"
    },
    "13660": {
      "op": "DUP6"
    },
    "13661": {
      "op": "GT"
    },
    "13662": {
      "op": "ISZERO"
    },
    "13663": {
      "op": "PUSH2",
      "value": "0x3567"
    },
    "13666": {
      "op": "JUMPI"
    },
    "13667": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13669": {
      "op": "DUP1"
    },
    "13670": {
      "op": "REVERT"
    },
    "13671": {
      "op": "JUMPDEST"
    },
    "13672": {
      "op": "DUP4"
    },
    "13673": {
      "op": "DUP8"
    },
    "13674": {
      "op": "ADD"
    },
    "13675": {
      "op": "SWAP3"
    },
    "13676": {
      "op": "POP"
    },
    "13677": {
      "op": "JUMPDEST"
    },
    "13678": {
      "op": "DUP5"
    },
    "13679": {
      "op": "DUP4"
    },
    "13680": {
      "op": "LT"
    },
    "13681": {
      "op": "ISZERO"
    },
    "13682": {
      "op": "PUSH2",
      "value": "0x3586"
    },
    "13685": {
      "op": "JUMPI"
    },
    "13686": {
      "op": "DUP3"
    },
    "13687": {
      "op": "CALLDATALOAD"
    },
    "13688": {
      "op": "DUP3"
    },
    "13689": {
      "op": "MSTORE"
    },
    "13690": {
      "op": "SWAP2"
    },
    "13691": {
      "op": "DUP4"
    },
    "13692": {
      "op": "ADD"
    },
    "13693": {
      "op": "SWAP2"
    },
    "13694": {
      "op": "SWAP1"
    },
    "13695": {
      "op": "DUP4"
    },
    "13696": {
      "op": "ADD"
    },
    "13697": {
      "op": "SWAP1"
    },
    "13698": {
      "op": "PUSH2",
      "value": "0x356D"
    },
    "13701": {
      "op": "JUMP"
    },
    "13702": {
      "op": "JUMPDEST"
    },
    "13703": {
      "op": "SWAP8"
    },
    "13704": {
      "op": "SWAP7"
    },
    "13705": {
      "op": "POP"
    },
    "13706": {
      "op": "POP"
    },
    "13707": {
      "op": "POP"
    },
    "13708": {
      "op": "POP"
    },
    "13709": {
      "op": "POP"
    },
    "13710": {
      "op": "POP"
    },
    "13711": {
      "op": "POP"
    },
    "13712": {
      "jump": "o",
      "op": "JUMP"
    },
    "13713": {
      "op": "JUMPDEST"
    },
    "13714": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13716": {
      "op": "DUP1"
    },
    "13717": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13719": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "13721": {
      "op": "DUP5"
    },
    "13722": {
      "op": "DUP7"
    },
    "13723": {
      "op": "SUB"
    },
    "13724": {
      "op": "SLT"
    },
    "13725": {
      "op": "ISZERO"
    },
    "13726": {
      "op": "PUSH2",
      "value": "0x35A6"
    },
    "13729": {
      "op": "JUMPI"
    },
    "13730": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13732": {
      "op": "DUP1"
    },
    "13733": {
      "op": "REVERT"
    },
    "13734": {
      "op": "JUMPDEST"
    },
    "13735": {
      "op": "DUP4"
    },
    "13736": {
      "op": "CALLDATALOAD"
    },
    "13737": {
      "op": "SWAP3"
    },
    "13738": {
      "op": "POP"
    },
    "13739": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13741": {
      "op": "DUP5"
    },
    "13742": {
      "op": "ADD"
    },
    "13743": {
      "op": "CALLDATALOAD"
    },
    "13744": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13746": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13748": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13750": {
      "op": "SHL"
    },
    "13751": {
      "op": "SUB"
    },
    "13752": {
      "op": "DUP2"
    },
    "13753": {
      "op": "GT"
    },
    "13754": {
      "op": "ISZERO"
    },
    "13755": {
      "op": "PUSH2",
      "value": "0x35C3"
    },
    "13758": {
      "op": "JUMPI"
    },
    "13759": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13761": {
      "op": "DUP1"
    },
    "13762": {
      "op": "REVERT"
    },
    "13763": {
      "op": "JUMPDEST"
    },
    "13764": {
      "op": "PUSH2",
      "value": "0x35CF"
    },
    "13767": {
      "op": "DUP7"
    },
    "13768": {
      "op": "DUP3"
    },
    "13769": {
      "op": "DUP8"
    },
    "13770": {
      "op": "ADD"
    },
    "13771": {
      "op": "PUSH2",
      "value": "0x3512"
    },
    "13774": {
      "jump": "i",
      "op": "JUMP"
    },
    "13775": {
      "op": "JUMPDEST"
    },
    "13776": {
      "op": "SWAP3"
    },
    "13777": {
      "op": "POP"
    },
    "13778": {
      "op": "POP"
    },
    "13779": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13781": {
      "op": "DUP5"
    },
    "13782": {
      "op": "ADD"
    },
    "13783": {
      "op": "CALLDATALOAD"
    },
    "13784": {
      "op": "DUP1"
    },
    "13785": {
      "op": "ISZERO"
    },
    "13786": {
      "op": "ISZERO"
    },
    "13787": {
      "op": "DUP2"
    },
    "13788": {
      "op": "EQ"
    },
    "13789": {
      "op": "PUSH2",
      "value": "0x35E5"
    },
    "13792": {
      "op": "JUMPI"
    },
    "13793": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13795": {
      "op": "DUP1"
    },
    "13796": {
      "op": "REVERT"
    },
    "13797": {
      "op": "JUMPDEST"
    },
    "13798": {
      "op": "DUP1"
    },
    "13799": {
      "op": "SWAP2"
    },
    "13800": {
      "op": "POP"
    },
    "13801": {
      "op": "POP"
    },
    "13802": {
      "op": "SWAP3"
    },
    "13803": {
      "op": "POP"
    },
    "13804": {
      "op": "SWAP3"
    },
    "13805": {
      "op": "POP"
    },
    "13806": {
      "op": "SWAP3"
    },
    "13807": {
      "jump": "o",
      "op": "JUMP"
    },
    "13808": {
      "op": "JUMPDEST"
    },
    "13809": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13811": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "13814": {
      "op": "DUP1"
    },
    "13815": {
      "op": "DUP4"
    },
    "13816": {
      "op": "MSTORE"
    },
    "13817": {
      "op": "PUSH2",
      "value": "0x3604"
    },
    "13820": {
      "op": "DUP2"
    },
    "13821": {
      "op": "DUP5"
    },
    "13822": {
      "op": "ADD"
    },
    "13823": {
      "op": "DUP13"
    },
    "13824": {
      "op": "PUSH2",
      "value": "0x345C"
    },
    "13827": {
      "jump": "i",
      "op": "JUMP"
    },
    "13828": {
      "op": "JUMPDEST"
    },
    "13829": {
      "op": "SWAP10"
    },
    "13830": {
      "op": "ISZERO"
    },
    "13831": {
      "op": "ISZERO"
    },
    "13832": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13834": {
      "op": "DUP5"
    },
    "13835": {
      "op": "ADD"
    },
    "13836": {
      "op": "MSTORE"
    },
    "13837": {
      "op": "POP"
    },
    "13838": {
      "op": "POP"
    },
    "13839": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "13845": {
      "op": "SWAP7"
    },
    "13846": {
      "op": "DUP8"
    },
    "13847": {
      "op": "AND"
    },
    "13848": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13850": {
      "op": "DUP3"
    },
    "13851": {
      "op": "ADD"
    },
    "13852": {
      "op": "MSTORE"
    },
    "13853": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "13855": {
      "op": "SWAP6"
    },
    "13856": {
      "op": "SWAP1"
    },
    "13857": {
      "op": "SWAP6"
    },
    "13858": {
      "op": "AND"
    },
    "13859": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "13861": {
      "op": "DUP7"
    },
    "13862": {
      "op": "ADD"
    },
    "13863": {
      "op": "MSTORE"
    },
    "13864": {
      "op": "PUSH3",
      "value": "0xFFFFFF"
    },
    "13868": {
      "op": "SWAP4"
    },
    "13869": {
      "op": "SWAP1"
    },
    "13870": {
      "op": "SWAP4"
    },
    "13871": {
      "op": "AND"
    },
    "13872": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "13874": {
      "op": "DUP6"
    },
    "13875": {
      "op": "ADD"
    },
    "13876": {
      "op": "MSTORE"
    },
    "13877": {
      "op": "SWAP1"
    },
    "13878": {
      "op": "DUP5"
    },
    "13879": {
      "op": "AND"
    },
    "13880": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13882": {
      "op": "DUP5"
    },
    "13883": {
      "op": "ADD"
    },
    "13884": {
      "op": "MSTORE"
    },
    "13885": {
      "op": "SWAP1"
    },
    "13886": {
      "op": "SWAP3"
    },
    "13887": {
      "op": "AND"
    },
    "13888": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "13890": {
      "op": "DUP3"
    },
    "13891": {
      "op": "ADD"
    },
    "13892": {
      "op": "MSTORE"
    },
    "13893": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "13896": {
      "op": "SWAP1"
    },
    "13897": {
      "op": "SWAP2"
    },
    "13898": {
      "op": "AND"
    },
    "13899": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "13901": {
      "op": "SWAP1"
    },
    "13902": {
      "op": "SWAP2"
    },
    "13903": {
      "op": "ADD"
    },
    "13904": {
      "op": "MSTORE"
    },
    "13905": {
      "op": "SWAP2"
    },
    "13906": {
      "op": "SWAP1"
    },
    "13907": {
      "op": "POP"
    },
    "13908": {
      "jump": "o",
      "op": "JUMP"
    },
    "13909": {
      "op": "JUMPDEST"
    },
    "13910": {
      "op": "DUP1"
    },
    "13911": {
      "op": "CALLDATALOAD"
    },
    "13912": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "13918": {
      "op": "DUP2"
    },
    "13919": {
      "op": "AND"
    },
    "13920": {
      "op": "DUP2"
    },
    "13921": {
      "op": "EQ"
    },
    "13922": {
      "op": "PUSH2",
      "value": "0x366A"
    },
    "13925": {
      "op": "JUMPI"
    },
    "13926": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13928": {
      "op": "DUP1"
    },
    "13929": {
      "op": "REVERT"
    },
    "13930": {
      "op": "JUMPDEST"
    },
    "13931": {
      "op": "SWAP2"
    },
    "13932": {
      "op": "SWAP1"
    },
    "13933": {
      "op": "POP"
    },
    "13934": {
      "jump": "o",
      "op": "JUMP"
    },
    "13935": {
      "op": "JUMPDEST"
    },
    "13936": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13938": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13940": {
      "op": "DUP3"
    },
    "13941": {
      "op": "DUP5"
    },
    "13942": {
      "op": "SUB"
    },
    "13943": {
      "op": "SLT"
    },
    "13944": {
      "op": "ISZERO"
    },
    "13945": {
      "op": "PUSH2",
      "value": "0x3681"
    },
    "13948": {
      "op": "JUMPI"
    },
    "13949": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13951": {
      "op": "DUP1"
    },
    "13952": {
      "op": "REVERT"
    },
    "13953": {
      "op": "JUMPDEST"
    },
    "13954": {
      "op": "PUSH2",
      "value": "0x368A"
    },
    "13957": {
      "op": "DUP3"
    },
    "13958": {
      "op": "PUSH2",
      "value": "0x3655"
    },
    "13961": {
      "jump": "i",
      "op": "JUMP"
    },
    "13962": {
      "op": "JUMPDEST"
    },
    "13963": {
      "op": "SWAP4"
    },
    "13964": {
      "op": "SWAP3"
    },
    "13965": {
      "op": "POP"
    },
    "13966": {
      "op": "POP"
    },
    "13967": {
      "op": "POP"
    },
    "13968": {
      "jump": "o",
      "op": "JUMP"
    },
    "13969": {
      "op": "JUMPDEST"
    },
    "13970": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13972": {
      "op": "PUSH2",
      "value": "0x140"
    },
    "13975": {
      "op": "DUP3"
    },
    "13976": {
      "op": "MLOAD"
    },
    "13977": {
      "op": "DUP2"
    },
    "13978": {
      "op": "DUP6"
    },
    "13979": {
      "op": "MSTORE"
    },
    "13980": {
      "op": "PUSH2",
      "value": "0x36A7"
    },
    "13983": {
      "op": "DUP3"
    },
    "13984": {
      "op": "DUP7"
    },
    "13985": {
      "op": "ADD"
    },
    "13986": {
      "op": "DUP3"
    },
    "13987": {
      "op": "PUSH2",
      "value": "0x345C"
    },
    "13990": {
      "jump": "i",
      "op": "JUMP"
    },
    "13991": {
      "op": "JUMPDEST"
    },
    "13992": {
      "op": "SWAP2"
    },
    "13993": {
      "op": "POP"
    },
    "13994": {
      "op": "POP"
    },
    "13995": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13997": {
      "op": "DUP4"
    },
    "13998": {
      "op": "ADD"
    },
    "13999": {
      "op": "MLOAD"
    },
    "14000": {
      "op": "PUSH2",
      "value": "0x36C2"
    },
    "14003": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14005": {
      "op": "DUP7"
    },
    "14006": {
      "op": "ADD"
    },
    "14007": {
      "op": "DUP3"
    },
    "14008": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "14014": {
      "op": "AND"
    },
    "14015": {
      "op": "SWAP1"
    },
    "14016": {
      "op": "MSTORE"
    },
    "14017": {
      "op": "JUMP"
    },
    "14018": {
      "op": "JUMPDEST"
    },
    "14019": {
      "op": "POP"
    },
    "14020": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14022": {
      "op": "DUP4"
    },
    "14023": {
      "op": "ADD"
    },
    "14024": {
      "op": "MLOAD"
    },
    "14025": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14027": {
      "op": "DUP6"
    },
    "14028": {
      "op": "ADD"
    },
    "14029": {
      "op": "MSTORE"
    },
    "14030": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "14032": {
      "op": "DUP4"
    },
    "14033": {
      "op": "ADD"
    },
    "14034": {
      "op": "MLOAD"
    },
    "14035": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "14037": {
      "op": "DUP6"
    },
    "14038": {
      "op": "ADD"
    },
    "14039": {
      "op": "MSTORE"
    },
    "14040": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "14042": {
      "op": "DUP4"
    },
    "14043": {
      "op": "ADD"
    },
    "14044": {
      "op": "MLOAD"
    },
    "14045": {
      "op": "PUSH2",
      "value": "0x36EB"
    },
    "14048": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "14050": {
      "op": "DUP7"
    },
    "14051": {
      "op": "ADD"
    },
    "14052": {
      "op": "DUP3"
    },
    "14053": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "14055": {
      "op": "AND"
    },
    "14056": {
      "op": "SWAP1"
    },
    "14057": {
      "op": "MSTORE"
    },
    "14058": {
      "op": "JUMP"
    },
    "14059": {
      "op": "JUMPDEST"
    },
    "14060": {
      "op": "POP"
    },
    "14061": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14063": {
      "op": "DUP4"
    },
    "14064": {
      "op": "ADD"
    },
    "14065": {
      "op": "MLOAD"
    },
    "14066": {
      "op": "PUSH2",
      "value": "0x3702"
    },
    "14069": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14071": {
      "op": "DUP7"
    },
    "14072": {
      "op": "ADD"
    },
    "14073": {
      "op": "DUP3"
    },
    "14074": {
      "op": "PUSH3",
      "value": "0xFFFFFF"
    },
    "14078": {
      "op": "AND"
    },
    "14079": {
      "op": "SWAP1"
    },
    "14080": {
      "op": "MSTORE"
    },
    "14081": {
      "op": "JUMP"
    },
    "14082": {
      "op": "JUMPDEST"
    },
    "14083": {
      "op": "POP"
    },
    "14084": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "14086": {
      "op": "DUP4"
    },
    "14087": {
      "op": "ADD"
    },
    "14088": {
      "op": "MLOAD"
    },
    "14089": {
      "op": "PUSH2",
      "value": "0x371D"
    },
    "14092": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "14094": {
      "op": "DUP7"
    },
    "14095": {
      "op": "ADD"
    },
    "14096": {
      "op": "DUP3"
    },
    "14097": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14099": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14101": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "14103": {
      "op": "SHL"
    },
    "14104": {
      "op": "SUB"
    },
    "14105": {
      "op": "AND"
    },
    "14106": {
      "op": "SWAP1"
    },
    "14107": {
      "op": "MSTORE"
    },
    "14108": {
      "op": "JUMP"
    },
    "14109": {
      "op": "JUMPDEST"
    },
    "14110": {
      "op": "POP"
    },
    "14111": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "14113": {
      "op": "DUP4"
    },
    "14114": {
      "op": "ADD"
    },
    "14115": {
      "op": "MLOAD"
    },
    "14116": {
      "op": "PUSH2",
      "value": "0x3733"
    },
    "14119": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "14121": {
      "op": "DUP7"
    },
    "14122": {
      "op": "ADD"
    },
    "14123": {
      "op": "DUP3"
    },
    "14124": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "14127": {
      "op": "AND"
    },
    "14128": {
      "op": "SWAP1"
    },
    "14129": {
      "op": "MSTORE"
    },
    "14130": {
      "op": "JUMP"
    },
    "14131": {
      "op": "JUMPDEST"
    },
    "14132": {
      "op": "POP"
    },
    "14133": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "14136": {
      "op": "DUP4"
    },
    "14137": {
      "op": "DUP2"
    },
    "14138": {
      "op": "ADD"
    },
    "14139": {
      "op": "MLOAD"
    },
    "14140": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "14143": {
      "op": "AND"
    },
    "14144": {
      "op": "SWAP1"
    },
    "14145": {
      "op": "DUP6"
    },
    "14146": {
      "op": "ADD"
    },
    "14147": {
      "op": "MSTORE"
    },
    "14148": {
      "op": "PUSH2",
      "value": "0x120"
    },
    "14151": {
      "op": "DUP1"
    },
    "14152": {
      "op": "DUP5"
    },
    "14153": {
      "op": "ADD"
    },
    "14154": {
      "op": "MLOAD"
    },
    "14155": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "14161": {
      "op": "DUP2"
    },
    "14162": {
      "op": "AND"
    },
    "14163": {
      "op": "DUP3"
    },
    "14164": {
      "op": "DUP8"
    },
    "14165": {
      "op": "ADD"
    },
    "14166": {
      "op": "MSTORE"
    },
    "14167": {
      "op": "PUSH2",
      "value": "0x1BCB"
    },
    "14170": {
      "op": "JUMP"
    },
    "14171": {
      "op": "JUMPDEST"
    },
    "14172": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14174": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14176": {
      "op": "DUP3"
    },
    "14177": {
      "op": "ADD"
    },
    "14178": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14180": {
      "op": "DUP4"
    },
    "14181": {
      "op": "MSTORE"
    },
    "14182": {
      "op": "DUP1"
    },
    "14183": {
      "op": "DUP6"
    },
    "14184": {
      "op": "MLOAD"
    },
    "14185": {
      "op": "DUP1"
    },
    "14186": {
      "op": "DUP4"
    },
    "14187": {
      "op": "MSTORE"
    },
    "14188": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "14190": {
      "op": "DUP6"
    },
    "14191": {
      "op": "ADD"
    },
    "14192": {
      "op": "SWAP2"
    },
    "14193": {
      "op": "POP"
    },
    "14194": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "14196": {
      "op": "DUP2"
    },
    "14197": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "14199": {
      "op": "SHL"
    },
    "14200": {
      "op": "DUP7"
    },
    "14201": {
      "op": "ADD"
    },
    "14202": {
      "op": "ADD"
    },
    "14203": {
      "op": "SWAP3"
    },
    "14204": {
      "op": "POP"
    },
    "14205": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14207": {
      "op": "DUP1"
    },
    "14208": {
      "op": "DUP9"
    },
    "14209": {
      "op": "ADD"
    },
    "14210": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14212": {
      "op": "JUMPDEST"
    },
    "14213": {
      "op": "DUP4"
    },
    "14214": {
      "op": "DUP2"
    },
    "14215": {
      "op": "LT"
    },
    "14216": {
      "op": "ISZERO"
    },
    "14217": {
      "op": "PUSH2",
      "value": "0x37B2"
    },
    "14220": {
      "op": "JUMPI"
    },
    "14221": {
      "op": "PUSH1",
      "value": "0x5F"
    },
    "14223": {
      "op": "NOT"
    },
    "14224": {
      "op": "DUP9"
    },
    "14225": {
      "op": "DUP8"
    },
    "14226": {
      "op": "SUB"
    },
    "14227": {
      "op": "ADD"
    },
    "14228": {
      "op": "DUP6"
    },
    "14229": {
      "op": "MSTORE"
    },
    "14230": {
      "op": "PUSH2",
      "value": "0x37A0"
    },
    "14233": {
      "op": "DUP7"
    },
    "14234": {
      "op": "DUP4"
    },
    "14235": {
      "op": "MLOAD"
    },
    "14236": {
      "op": "PUSH2",
      "value": "0x3691"
    },
    "14239": {
      "jump": "i",
      "op": "JUMP"
    },
    "14240": {
      "op": "JUMPDEST"
    },
    "14241": {
      "op": "SWAP6"
    },
    "14242": {
      "op": "POP"
    },
    "14243": {
      "op": "SWAP4"
    },
    "14244": {
      "op": "DUP3"
    },
    "14245": {
      "op": "ADD"
    },
    "14246": {
      "op": "SWAP4"
    },
    "14247": {
      "op": "SWAP1"
    },
    "14248": {
      "op": "DUP3"
    },
    "14249": {
      "op": "ADD"
    },
    "14250": {
      "op": "SWAP1"
    },
    "14251": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14253": {
      "op": "ADD"
    },
    "14254": {
      "op": "PUSH2",
      "value": "0x3784"
    },
    "14257": {
      "op": "JUMP"
    },
    "14258": {
      "op": "JUMPDEST"
    },
    "14259": {
      "op": "POP"
    },
    "14260": {
      "op": "POP"
    },
    "14261": {
      "op": "DUP6"
    },
    "14262": {
      "op": "DUP5"
    },
    "14263": {
      "op": "SUB"
    },
    "14264": {
      "op": "DUP2"
    },
    "14265": {
      "op": "DUP8"
    },
    "14266": {
      "op": "ADD"
    },
    "14267": {
      "op": "MSTORE"
    },
    "14268": {
      "op": "DUP7"
    },
    "14269": {
      "op": "MLOAD"
    },
    "14270": {
      "op": "DUP1"
    },
    "14271": {
      "op": "DUP6"
    },
    "14272": {
      "op": "MSTORE"
    },
    "14273": {
      "op": "DUP8"
    },
    "14274": {
      "op": "DUP3"
    },
    "14275": {
      "op": "ADD"
    },
    "14276": {
      "op": "SWAP5"
    },
    "14277": {
      "op": "DUP3"
    },
    "14278": {
      "op": "ADD"
    },
    "14279": {
      "op": "SWAP4"
    },
    "14280": {
      "op": "POP"
    },
    "14281": {
      "op": "SWAP2"
    },
    "14282": {
      "op": "POP"
    },
    "14283": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14285": {
      "op": "JUMPDEST"
    },
    "14286": {
      "op": "DUP3"
    },
    "14287": {
      "op": "DUP2"
    },
    "14288": {
      "op": "LT"
    },
    "14289": {
      "op": "ISZERO"
    },
    "14290": {
      "op": "PUSH2",
      "value": "0x37E9"
    },
    "14293": {
      "op": "JUMPI"
    },
    "14294": {
      "op": "DUP5"
    },
    "14295": {
      "op": "MLOAD"
    },
    "14296": {
      "op": "DUP5"
    },
    "14297": {
      "op": "MSTORE"
    },
    "14298": {
      "op": "SWAP4"
    },
    "14299": {
      "op": "DUP2"
    },
    "14300": {
      "op": "ADD"
    },
    "14301": {
      "op": "SWAP4"
    },
    "14302": {
      "op": "SWAP3"
    },
    "14303": {
      "op": "DUP2"
    },
    "14304": {
      "op": "ADD"
    },
    "14305": {
      "op": "SWAP3"
    },
    "14306": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14308": {
      "op": "ADD"
    },
    "14309": {
      "op": "PUSH2",
      "value": "0x37CD"
    },
    "14312": {
      "op": "JUMP"
    },
    "14313": {
      "op": "JUMPDEST"
    },
    "14314": {
      "op": "POP"
    },
    "14315": {
      "op": "SWAP2"
    },
    "14316": {
      "op": "SWAP8"
    },
    "14317": {
      "op": "SWAP7"
    },
    "14318": {
      "op": "POP"
    },
    "14319": {
      "op": "POP"
    },
    "14320": {
      "op": "POP"
    },
    "14321": {
      "op": "POP"
    },
    "14322": {
      "op": "POP"
    },
    "14323": {
      "op": "POP"
    },
    "14324": {
      "op": "POP"
    },
    "14325": {
      "jump": "o",
      "op": "JUMP"
    },
    "14326": {
      "op": "JUMPDEST"
    },
    "14327": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14329": {
      "op": "DUP1"
    },
    "14330": {
      "op": "DUP4"
    },
    "14331": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "14333": {
      "op": "DUP5"
    },
    "14334": {
      "op": "ADD"
    },
    "14335": {
      "op": "SLT"
    },
    "14336": {
      "op": "PUSH2",
      "value": "0x3808"
    },
    "14339": {
      "op": "JUMPI"
    },
    "14340": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14342": {
      "op": "DUP1"
    },
    "14343": {
      "op": "REVERT"
    },
    "14344": {
      "op": "JUMPDEST"
    },
    "14345": {
      "op": "POP"
    },
    "14346": {
      "op": "DUP2"
    },
    "14347": {
      "op": "CALLDATALOAD"
    },
    "14348": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14350": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14352": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14354": {
      "op": "SHL"
    },
    "14355": {
      "op": "SUB"
    },
    "14356": {
      "op": "DUP2"
    },
    "14357": {
      "op": "GT"
    },
    "14358": {
      "op": "ISZERO"
    },
    "14359": {
      "op": "PUSH2",
      "value": "0x381F"
    },
    "14362": {
      "op": "JUMPI"
    },
    "14363": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14365": {
      "op": "DUP1"
    },
    "14366": {
      "op": "REVERT"
    },
    "14367": {
      "op": "JUMPDEST"
    },
    "14368": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14370": {
      "op": "DUP4"
    },
    "14371": {
      "op": "ADD"
    },
    "14372": {
      "op": "SWAP2"
    },
    "14373": {
      "op": "POP"
    },
    "14374": {
      "op": "DUP4"
    },
    "14375": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14377": {
      "op": "DUP3"
    },
    "14378": {
      "op": "DUP6"
    },
    "14379": {
      "op": "ADD"
    },
    "14380": {
      "op": "ADD"
    },
    "14381": {
      "op": "GT"
    },
    "14382": {
      "op": "ISZERO"
    },
    "14383": {
      "op": "PUSH2",
      "value": "0x3837"
    },
    "14386": {
      "op": "JUMPI"
    },
    "14387": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14389": {
      "op": "DUP1"
    },
    "14390": {
      "op": "REVERT"
    },
    "14391": {
      "op": "JUMPDEST"
    },
    "14392": {
      "op": "SWAP3"
    },
    "14393": {
      "op": "POP"
    },
    "14394": {
      "op": "SWAP3"
    },
    "14395": {
      "op": "SWAP1"
    },
    "14396": {
      "op": "POP"
    },
    "14397": {
      "jump": "o",
      "op": "JUMP"
    },
    "14398": {
      "op": "JUMPDEST"
    },
    "14399": {
      "op": "DUP1"
    },
    "14400": {
      "op": "CALLDATALOAD"
    },
    "14401": {
      "op": "PUSH3",
      "value": "0xFFFFFF"
    },
    "14405": {
      "op": "DUP2"
    },
    "14406": {
      "op": "AND"
    },
    "14407": {
      "op": "DUP2"
    },
    "14408": {
      "op": "EQ"
    },
    "14409": {
      "op": "PUSH2",
      "value": "0x366A"
    },
    "14412": {
      "op": "JUMPI"
    },
    "14413": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14415": {
      "op": "DUP1"
    },
    "14416": {
      "op": "REVERT"
    },
    "14417": {
      "op": "JUMPDEST"
    },
    "14418": {
      "op": "DUP1"
    },
    "14419": {
      "op": "CALLDATALOAD"
    },
    "14420": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "14423": {
      "op": "DUP2"
    },
    "14424": {
      "op": "AND"
    },
    "14425": {
      "op": "DUP2"
    },
    "14426": {
      "op": "EQ"
    },
    "14427": {
      "op": "PUSH2",
      "value": "0x366A"
    },
    "14430": {
      "op": "JUMPI"
    },
    "14431": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14433": {
      "op": "DUP1"
    },
    "14434": {
      "op": "REVERT"
    },
    "14435": {
      "op": "JUMPDEST"
    },
    "14436": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14438": {
      "op": "DUP1"
    },
    "14439": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14441": {
      "op": "DUP1"
    },
    "14442": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14444": {
      "op": "DUP1"
    },
    "14445": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14447": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "14449": {
      "op": "DUP9"
    },
    "14450": {
      "op": "DUP11"
    },
    "14451": {
      "op": "SUB"
    },
    "14452": {
      "op": "SLT"
    },
    "14453": {
      "op": "ISZERO"
    },
    "14454": {
      "op": "PUSH2",
      "value": "0x387E"
    },
    "14457": {
      "op": "JUMPI"
    },
    "14458": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14460": {
      "op": "DUP1"
    },
    "14461": {
      "op": "REVERT"
    },
    "14462": {
      "op": "JUMPDEST"
    },
    "14463": {
      "op": "DUP8"
    },
    "14464": {
      "op": "CALLDATALOAD"
    },
    "14465": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14467": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14469": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14471": {
      "op": "SHL"
    },
    "14472": {
      "op": "SUB"
    },
    "14473": {
      "op": "DUP2"
    },
    "14474": {
      "op": "GT"
    },
    "14475": {
      "op": "ISZERO"
    },
    "14476": {
      "op": "PUSH2",
      "value": "0x3894"
    },
    "14479": {
      "op": "JUMPI"
    },
    "14480": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14482": {
      "op": "DUP1"
    },
    "14483": {
      "op": "REVERT"
    },
    "14484": {
      "op": "JUMPDEST"
    },
    "14485": {
      "op": "PUSH2",
      "value": "0x38A0"
    },
    "14488": {
      "op": "DUP11"
    },
    "14489": {
      "op": "DUP3"
    },
    "14490": {
      "op": "DUP12"
    },
    "14491": {
      "op": "ADD"
    },
    "14492": {
      "op": "PUSH2",
      "value": "0x37F6"
    },
    "14495": {
      "jump": "i",
      "op": "JUMP"
    },
    "14496": {
      "op": "JUMPDEST"
    },
    "14497": {
      "op": "SWAP1"
    },
    "14498": {
      "op": "SWAP9"
    },
    "14499": {
      "op": "POP"
    },
    "14500": {
      "op": "SWAP7"
    },
    "14501": {
      "op": "POP"
    },
    "14502": {
      "op": "POP"
    },
    "14503": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14505": {
      "op": "DUP9"
    },
    "14506": {
      "op": "ADD"
    },
    "14507": {
      "op": "CALLDATALOAD"
    },
    "14508": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "14510": {
      "op": "DUP2"
    },
    "14511": {
      "op": "AND"
    },
    "14512": {
      "op": "DUP2"
    },
    "14513": {
      "op": "EQ"
    },
    "14514": {
      "op": "PUSH2",
      "value": "0x38BA"
    },
    "14517": {
      "op": "JUMPI"
    },
    "14518": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14520": {
      "op": "DUP1"
    },
    "14521": {
      "op": "REVERT"
    },
    "14522": {
      "op": "JUMPDEST"
    },
    "14523": {
      "op": "SWAP5"
    },
    "14524": {
      "op": "POP"
    },
    "14525": {
      "op": "PUSH2",
      "value": "0x38C8"
    },
    "14528": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14530": {
      "op": "DUP10"
    },
    "14531": {
      "op": "ADD"
    },
    "14532": {
      "op": "PUSH2",
      "value": "0x383E"
    },
    "14535": {
      "jump": "i",
      "op": "JUMP"
    },
    "14536": {
      "op": "JUMPDEST"
    },
    "14537": {
      "op": "SWAP4"
    },
    "14538": {
      "op": "POP"
    },
    "14539": {
      "op": "PUSH2",
      "value": "0x38D6"
    },
    "14542": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "14544": {
      "op": "DUP10"
    },
    "14545": {
      "op": "ADD"
    },
    "14546": {
      "op": "PUSH2",
      "value": "0x3655"
    },
    "14549": {
      "jump": "i",
      "op": "JUMP"
    },
    "14550": {
      "op": "JUMPDEST"
    },
    "14551": {
      "op": "SWAP3"
    },
    "14552": {
      "op": "POP"
    },
    "14553": {
      "op": "PUSH2",
      "value": "0x38E4"
    },
    "14556": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "14558": {
      "op": "DUP10"
    },
    "14559": {
      "op": "ADD"
    },
    "14560": {
      "op": "PUSH2",
      "value": "0x3655"
    },
    "14563": {
      "jump": "i",
      "op": "JUMP"
    },
    "14564": {
      "op": "JUMPDEST"
    },
    "14565": {
      "op": "SWAP2"
    },
    "14566": {
      "op": "POP"
    },
    "14567": {
      "op": "PUSH2",
      "value": "0x38F2"
    },
    "14570": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14572": {
      "op": "DUP10"
    },
    "14573": {
      "op": "ADD"
    },
    "14574": {
      "op": "PUSH2",
      "value": "0x3851"
    },
    "14577": {
      "jump": "i",
      "op": "JUMP"
    },
    "14578": {
      "op": "JUMPDEST"
    },
    "14579": {
      "op": "SWAP1"
    },
    "14580": {
      "op": "POP"
    },
    "14581": {
      "op": "SWAP3"
    },
    "14582": {
      "op": "SWAP6"
    },
    "14583": {
      "op": "SWAP9"
    },
    "14584": {
      "op": "SWAP2"
    },
    "14585": {
      "op": "SWAP5"
    },
    "14586": {
      "op": "SWAP8"
    },
    "14587": {
      "op": "POP"
    },
    "14588": {
      "op": "SWAP3"
    },
    "14589": {
      "op": "SWAP6"
    },
    "14590": {
      "op": "POP"
    },
    "14591": {
      "jump": "o",
      "op": "JUMP"
    },
    "14592": {
      "op": "JUMPDEST"
    },
    "14593": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14595": {
      "op": "DUP1"
    },
    "14596": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14598": {
      "op": "DUP4"
    },
    "14599": {
      "op": "DUP6"
    },
    "14600": {
      "op": "SUB"
    },
    "14601": {
      "op": "SLT"
    },
    "14602": {
      "op": "ISZERO"
    },
    "14603": {
      "op": "PUSH2",
      "value": "0x3913"
    },
    "14606": {
      "op": "JUMPI"
    },
    "14607": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14609": {
      "op": "DUP1"
    },
    "14610": {
      "op": "REVERT"
    },
    "14611": {
      "op": "JUMPDEST"
    },
    "14612": {
      "op": "POP"
    },
    "14613": {
      "op": "POP"
    },
    "14614": {
      "op": "DUP1"
    },
    "14615": {
      "op": "CALLDATALOAD"
    },
    "14616": {
      "op": "SWAP3"
    },
    "14617": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14619": {
      "op": "SWAP1"
    },
    "14620": {
      "op": "SWAP2"
    },
    "14621": {
      "op": "ADD"
    },
    "14622": {
      "op": "CALLDATALOAD"
    },
    "14623": {
      "op": "SWAP2"
    },
    "14624": {
      "op": "POP"
    },
    "14625": {
      "jump": "o",
      "op": "JUMP"
    },
    "14626": {
      "op": "JUMPDEST"
    },
    "14627": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14629": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14631": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14633": {
      "op": "SHL"
    },
    "14634": {
      "op": "SUB"
    },
    "14635": {
      "op": "DUP2"
    },
    "14636": {
      "op": "AND"
    },
    "14637": {
      "op": "DUP2"
    },
    "14638": {
      "op": "EQ"
    },
    "14639": {
      "op": "PUSH2",
      "value": "0x2B21"
    },
    "14642": {
      "op": "JUMPI"
    },
    "14643": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14645": {
      "op": "DUP1"
    },
    "14646": {
      "op": "REVERT"
    },
    "14647": {
      "op": "JUMPDEST"
    },
    "14648": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14650": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14652": {
      "op": "DUP3"
    },
    "14653": {
      "op": "DUP5"
    },
    "14654": {
      "op": "SUB"
    },
    "14655": {
      "op": "SLT"
    },
    "14656": {
      "op": "ISZERO"
    },
    "14657": {
      "op": "PUSH2",
      "value": "0x3949"
    },
    "14660": {
      "op": "JUMPI"
    },
    "14661": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14663": {
      "op": "DUP1"
    },
    "14664": {
      "op": "REVERT"
    },
    "14665": {
      "op": "JUMPDEST"
    },
    "14666": {
      "op": "DUP2"
    },
    "14667": {
      "op": "CALLDATALOAD"
    },
    "14668": {
      "op": "PUSH2",
      "value": "0x368A"
    },
    "14671": {
      "op": "DUP2"
    },
    "14672": {
      "op": "PUSH2",
      "value": "0x3922"
    },
    "14675": {
      "jump": "i",
      "op": "JUMP"
    },
    "14676": {
      "op": "JUMPDEST"
    },
    "14677": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14679": {
      "op": "DUP3"
    },
    "14680": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "14682": {
      "op": "DUP4"
    },
    "14683": {
      "op": "ADD"
    },
    "14684": {
      "op": "SLT"
    },
    "14685": {
      "op": "PUSH2",
      "value": "0x3965"
    },
    "14688": {
      "op": "JUMPI"
    },
    "14689": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14691": {
      "op": "DUP1"
    },
    "14692": {
      "op": "REVERT"
    },
    "14693": {
      "op": "JUMPDEST"
    },
    "14694": {
      "op": "DUP2"
    },
    "14695": {
      "op": "CALLDATALOAD"
    },
    "14696": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14698": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14700": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14702": {
      "op": "SHL"
    },
    "14703": {
      "op": "SUB"
    },
    "14704": {
      "op": "DUP2"
    },
    "14705": {
      "op": "GT"
    },
    "14706": {
      "op": "ISZERO"
    },
    "14707": {
      "op": "PUSH2",
      "value": "0x397E"
    },
    "14710": {
      "op": "JUMPI"
    },
    "14711": {
      "op": "PUSH2",
      "value": "0x397E"
    },
    "14714": {
      "op": "PUSH2",
      "value": "0x34CC"
    },
    "14717": {
      "jump": "i",
      "op": "JUMP"
    },
    "14718": {
      "op": "JUMPDEST"
    },
    "14719": {
      "op": "PUSH2",
      "value": "0x3991"
    },
    "14722": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "14724": {
      "op": "DUP3"
    },
    "14725": {
      "op": "ADD"
    },
    "14726": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "14728": {
      "op": "NOT"
    },
    "14729": {
      "op": "AND"
    },
    "14730": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14732": {
      "op": "ADD"
    },
    "14733": {
      "op": "PUSH2",
      "value": "0x34E2"
    },
    "14736": {
      "jump": "i",
      "op": "JUMP"
    },
    "14737": {
      "op": "JUMPDEST"
    },
    "14738": {
      "op": "DUP2"
    },
    "14739": {
      "op": "DUP2"
    },
    "14740": {
      "op": "MSTORE"
    },
    "14741": {
      "op": "DUP5"
    },
    "14742": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14744": {
      "op": "DUP4"
    },
    "14745": {
      "op": "DUP7"
    },
    "14746": {
      "op": "ADD"
    },
    "14747": {
      "op": "ADD"
    },
    "14748": {
      "op": "GT"
    },
    "14749": {
      "op": "ISZERO"
    },
    "14750": {
      "op": "PUSH2",
      "value": "0x39A6"
    },
    "14753": {
      "op": "JUMPI"
    },
    "14754": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14756": {
      "op": "DUP1"
    },
    "14757": {
      "op": "REVERT"
    },
    "14758": {
      "op": "JUMPDEST"
    },
    "14759": {
      "op": "DUP2"
    },
    "14760": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14762": {
      "op": "DUP6"
    },
    "14763": {
      "op": "ADD"
    },
    "14764": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14766": {
      "op": "DUP4"
    },
    "14767": {
      "op": "ADD"
    },
    "14768": {
      "op": "CALLDATACOPY"
    },
    "14769": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14771": {
      "op": "SWAP2"
    },
    "14772": {
      "op": "DUP2"
    },
    "14773": {
      "op": "ADD"
    },
    "14774": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14776": {
      "op": "ADD"
    },
    "14777": {
      "op": "SWAP2"
    },
    "14778": {
      "op": "SWAP1"
    },
    "14779": {
      "op": "SWAP2"
    },
    "14780": {
      "op": "MSTORE"
    },
    "14781": {
      "op": "SWAP4"
    },
    "14782": {
      "op": "SWAP3"
    },
    "14783": {
      "op": "POP"
    },
    "14784": {
      "op": "POP"
    },
    "14785": {
      "op": "POP"
    },
    "14786": {
      "jump": "o",
      "op": "JUMP"
    },
    "14787": {
      "op": "JUMPDEST"
    },
    "14788": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14790": {
      "op": "DUP1"
    },
    "14791": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14793": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "14795": {
      "op": "DUP5"
    },
    "14796": {
      "op": "DUP7"
    },
    "14797": {
      "op": "SUB"
    },
    "14798": {
      "op": "SLT"
    },
    "14799": {
      "op": "ISZERO"
    },
    "14800": {
      "op": "PUSH2",
      "value": "0x39D8"
    },
    "14803": {
      "op": "JUMPI"
    },
    "14804": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14806": {
      "op": "DUP1"
    },
    "14807": {
      "op": "REVERT"
    },
    "14808": {
      "op": "JUMPDEST"
    },
    "14809": {
      "op": "DUP4"
    },
    "14810": {
      "op": "CALLDATALOAD"
    },
    "14811": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14813": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14815": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14817": {
      "op": "SHL"
    },
    "14818": {
      "op": "SUB"
    },
    "14819": {
      "op": "DUP2"
    },
    "14820": {
      "op": "GT"
    },
    "14821": {
      "op": "ISZERO"
    },
    "14822": {
      "op": "PUSH2",
      "value": "0x39EE"
    },
    "14825": {
      "op": "JUMPI"
    },
    "14826": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14828": {
      "op": "DUP1"
    },
    "14829": {
      "op": "REVERT"
    },
    "14830": {
      "op": "JUMPDEST"
    },
    "14831": {
      "op": "PUSH2",
      "value": "0x39FA"
    },
    "14834": {
      "op": "DUP7"
    },
    "14835": {
      "op": "DUP3"
    },
    "14836": {
      "op": "DUP8"
    },
    "14837": {
      "op": "ADD"
    },
    "14838": {
      "op": "PUSH2",
      "value": "0x3954"
    },
    "14841": {
      "jump": "i",
      "op": "JUMP"
    },
    "14842": {
      "op": "JUMPDEST"
    },
    "14843": {
      "op": "SWAP4"
    },
    "14844": {
      "op": "POP"
    },
    "14845": {
      "op": "POP"
    },
    "14846": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14848": {
      "op": "DUP5"
    },
    "14849": {
      "op": "ADD"
    },
    "14850": {
      "op": "CALLDATALOAD"
    },
    "14851": {
      "op": "SWAP2"
    },
    "14852": {
      "op": "POP"
    },
    "14853": {
      "op": "PUSH2",
      "value": "0x3A10"
    },
    "14856": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14858": {
      "op": "DUP6"
    },
    "14859": {
      "op": "ADD"
    },
    "14860": {
      "op": "PUSH2",
      "value": "0x3655"
    },
    "14863": {
      "jump": "i",
      "op": "JUMP"
    },
    "14864": {
      "op": "JUMPDEST"
    },
    "14865": {
      "op": "SWAP1"
    },
    "14866": {
      "op": "POP"
    },
    "14867": {
      "op": "SWAP3"
    },
    "14868": {
      "op": "POP"
    },
    "14869": {
      "op": "SWAP3"
    },
    "14870": {
      "op": "POP"
    },
    "14871": {
      "op": "SWAP3"
    },
    "14872": {
      "jump": "o",
      "op": "JUMP"
    },
    "14873": {
      "op": "JUMPDEST"
    },
    "14874": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14876": {
      "op": "DUP1"
    },
    "14877": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14879": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "14881": {
      "op": "DUP5"
    },
    "14882": {
      "op": "DUP7"
    },
    "14883": {
      "op": "SUB"
    },
    "14884": {
      "op": "SLT"
    },
    "14885": {
      "op": "ISZERO"
    },
    "14886": {
      "op": "PUSH2",
      "value": "0x3A2E"
    },
    "14889": {
      "op": "JUMPI"
    },
    "14890": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14892": {
      "op": "DUP1"
    },
    "14893": {
      "op": "REVERT"
    },
    "14894": {
      "op": "JUMPDEST"
    },
    "14895": {
      "op": "POP"
    },
    "14896": {
      "op": "POP"
    },
    "14897": {
      "op": "DUP2"
    },
    "14898": {
      "op": "CALLDATALOAD"
    },
    "14899": {
      "op": "SWAP4"
    },
    "14900": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14902": {
      "op": "DUP4"
    },
    "14903": {
      "op": "ADD"
    },
    "14904": {
      "op": "CALLDATALOAD"
    },
    "14905": {
      "op": "SWAP4"
    },
    "14906": {
      "op": "POP"
    },
    "14907": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14909": {
      "op": "SWAP1"
    },
    "14910": {
      "op": "SWAP3"
    },
    "14911": {
      "op": "ADD"
    },
    "14912": {
      "op": "CALLDATALOAD"
    },
    "14913": {
      "op": "SWAP2"
    },
    "14914": {
      "op": "SWAP1"
    },
    "14915": {
      "op": "POP"
    },
    "14916": {
      "jump": "o",
      "op": "JUMP"
    },
    "14917": {
      "op": "JUMPDEST"
    },
    "14918": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14920": {
      "op": "PUSH2",
      "value": "0x140"
    },
    "14923": {
      "op": "DUP1"
    },
    "14924": {
      "op": "DUP4"
    },
    "14925": {
      "op": "MSTORE"
    },
    "14926": {
      "op": "PUSH2",
      "value": "0x3A59"
    },
    "14929": {
      "op": "DUP2"
    },
    "14930": {
      "op": "DUP5"
    },
    "14931": {
      "op": "ADD"
    },
    "14932": {
      "op": "DUP15"
    },
    "14933": {
      "op": "PUSH2",
      "value": "0x345C"
    },
    "14936": {
      "jump": "i",
      "op": "JUMP"
    },
    "14937": {
      "op": "JUMPDEST"
    },
    "14938": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "14944": {
      "op": "SWAP13"
    },
    "14945": {
      "op": "DUP14"
    },
    "14946": {
      "op": "AND"
    },
    "14947": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14949": {
      "op": "DUP6"
    },
    "14950": {
      "op": "ADD"
    },
    "14951": {
      "op": "MSTORE"
    },
    "14952": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14954": {
      "op": "DUP5"
    },
    "14955": {
      "op": "ADD"
    },
    "14956": {
      "op": "SWAP12"
    },
    "14957": {
      "op": "SWAP1"
    },
    "14958": {
      "op": "SWAP12"
    },
    "14959": {
      "op": "MSTORE"
    },
    "14960": {
      "op": "POP"
    },
    "14961": {
      "op": "POP"
    },
    "14962": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "14964": {
      "op": "DUP2"
    },
    "14965": {
      "op": "ADD"
    },
    "14966": {
      "op": "SWAP8"
    },
    "14967": {
      "op": "SWAP1"
    },
    "14968": {
      "op": "SWAP8"
    },
    "14969": {
      "op": "MSTORE"
    },
    "14970": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "14972": {
      "op": "SWAP6"
    },
    "14973": {
      "op": "SWAP1"
    },
    "14974": {
      "op": "SWAP6"
    },
    "14975": {
      "op": "AND"
    },
    "14976": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "14978": {
      "op": "DUP8"
    },
    "14979": {
      "op": "ADD"
    },
    "14980": {
      "op": "MSTORE"
    },
    "14981": {
      "op": "PUSH3",
      "value": "0xFFFFFF"
    },
    "14985": {
      "op": "SWAP4"
    },
    "14986": {
      "op": "SWAP1"
    },
    "14987": {
      "op": "SWAP4"
    },
    "14988": {
      "op": "AND"
    },
    "14989": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14991": {
      "op": "DUP7"
    },
    "14992": {
      "op": "ADD"
    },
    "14993": {
      "op": "MSTORE"
    },
    "14994": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14996": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14998": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "15000": {
      "op": "SHL"
    },
    "15001": {
      "op": "SUB"
    },
    "15002": {
      "op": "SWAP2"
    },
    "15003": {
      "op": "SWAP1"
    },
    "15004": {
      "op": "SWAP2"
    },
    "15005": {
      "op": "AND"
    },
    "15006": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "15008": {
      "op": "DUP6"
    },
    "15009": {
      "op": "ADD"
    },
    "15010": {
      "op": "MSTORE"
    },
    "15011": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "15014": {
      "op": "SWAP1"
    },
    "15015": {
      "op": "DUP2"
    },
    "15016": {
      "op": "AND"
    },
    "15017": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "15019": {
      "op": "DUP6"
    },
    "15020": {
      "op": "ADD"
    },
    "15021": {
      "op": "MSTORE"
    },
    "15022": {
      "op": "AND"
    },
    "15023": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "15026": {
      "op": "DUP4"
    },
    "15027": {
      "op": "ADD"
    },
    "15028": {
      "op": "MSTORE"
    },
    "15029": {
      "op": "SWAP1"
    },
    "15030": {
      "op": "SWAP3"
    },
    "15031": {
      "op": "AND"
    },
    "15032": {
      "op": "PUSH2",
      "value": "0x120"
    },
    "15035": {
      "op": "SWAP1"
    },
    "15036": {
      "op": "SWAP3"
    },
    "15037": {
      "op": "ADD"
    },
    "15038": {
      "op": "SWAP2"
    },
    "15039": {
      "op": "SWAP1"
    },
    "15040": {
      "op": "SWAP2"
    },
    "15041": {
      "op": "MSTORE"
    },
    "15042": {
      "op": "SWAP2"
    },
    "15043": {
      "op": "SWAP1"
    },
    "15044": {
      "op": "POP"
    },
    "15045": {
      "jump": "o",
      "op": "JUMP"
    },
    "15046": {
      "op": "JUMPDEST"
    },
    "15047": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15049": {
      "op": "DUP2"
    },
    "15050": {
      "op": "MSTORE"
    },
    "15051": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15053": {
      "op": "PUSH2",
      "value": "0x368A"
    },
    "15056": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15058": {
      "op": "DUP4"
    },
    "15059": {
      "op": "ADD"
    },
    "15060": {
      "op": "DUP5"
    },
    "15061": {
      "op": "PUSH2",
      "value": "0x3691"
    },
    "15064": {
      "jump": "i",
      "op": "JUMP"
    },
    "15065": {
      "op": "JUMPDEST"
    },
    "15066": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15068": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15070": {
      "op": "DUP1"
    },
    "15071": {
      "op": "DUP4"
    },
    "15072": {
      "op": "ADD"
    },
    "15073": {
      "op": "DUP2"
    },
    "15074": {
      "op": "DUP5"
    },
    "15075": {
      "op": "MSTORE"
    },
    "15076": {
      "op": "DUP1"
    },
    "15077": {
      "op": "DUP6"
    },
    "15078": {
      "op": "MLOAD"
    },
    "15079": {
      "op": "DUP1"
    },
    "15080": {
      "op": "DUP4"
    },
    "15081": {
      "op": "MSTORE"
    },
    "15082": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "15084": {
      "op": "DUP7"
    },
    "15085": {
      "op": "ADD"
    },
    "15086": {
      "op": "SWAP2"
    },
    "15087": {
      "op": "POP"
    },
    "15088": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "15090": {
      "op": "DUP2"
    },
    "15091": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "15093": {
      "op": "SHL"
    },
    "15094": {
      "op": "DUP8"
    },
    "15095": {
      "op": "ADD"
    },
    "15096": {
      "op": "ADD"
    },
    "15097": {
      "op": "SWAP3"
    },
    "15098": {
      "op": "POP"
    },
    "15099": {
      "op": "DUP4"
    },
    "15100": {
      "op": "DUP8"
    },
    "15101": {
      "op": "ADD"
    },
    "15102": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15104": {
      "op": "JUMPDEST"
    },
    "15105": {
      "op": "DUP3"
    },
    "15106": {
      "op": "DUP2"
    },
    "15107": {
      "op": "LT"
    },
    "15108": {
      "op": "ISZERO"
    },
    "15109": {
      "op": "PUSH2",
      "value": "0x3B2E"
    },
    "15112": {
      "op": "JUMPI"
    },
    "15113": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "15115": {
      "op": "NOT"
    },
    "15116": {
      "op": "DUP9"
    },
    "15117": {
      "op": "DUP7"
    },
    "15118": {
      "op": "SUB"
    },
    "15119": {
      "op": "ADD"
    },
    "15120": {
      "op": "DUP5"
    },
    "15121": {
      "op": "MSTORE"
    },
    "15122": {
      "op": "PUSH2",
      "value": "0x3B1C"
    },
    "15125": {
      "op": "DUP6"
    },
    "15126": {
      "op": "DUP4"
    },
    "15127": {
      "op": "MLOAD"
    },
    "15128": {
      "op": "PUSH2",
      "value": "0x345C"
    },
    "15131": {
      "jump": "i",
      "op": "JUMP"
    },
    "15132": {
      "op": "JUMPDEST"
    },
    "15133": {
      "op": "SWAP5"
    },
    "15134": {
      "op": "POP"
    },
    "15135": {
      "op": "SWAP3"
    },
    "15136": {
      "op": "DUP6"
    },
    "15137": {
      "op": "ADD"
    },
    "15138": {
      "op": "SWAP3"
    },
    "15139": {
      "op": "SWAP1"
    },
    "15140": {
      "op": "DUP6"
    },
    "15141": {
      "op": "ADD"
    },
    "15142": {
      "op": "SWAP1"
    },
    "15143": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15145": {
      "op": "ADD"
    },
    "15146": {
      "op": "PUSH2",
      "value": "0x3B00"
    },
    "15149": {
      "op": "JUMP"
    },
    "15150": {
      "op": "JUMPDEST"
    },
    "15151": {
      "op": "POP"
    },
    "15152": {
      "op": "SWAP3"
    },
    "15153": {
      "op": "SWAP8"
    },
    "15154": {
      "op": "SWAP7"
    },
    "15155": {
      "op": "POP"
    },
    "15156": {
      "op": "POP"
    },
    "15157": {
      "op": "POP"
    },
    "15158": {
      "op": "POP"
    },
    "15159": {
      "op": "POP"
    },
    "15160": {
      "op": "POP"
    },
    "15161": {
      "op": "POP"
    },
    "15162": {
      "jump": "o",
      "op": "JUMP"
    },
    "15163": {
      "op": "JUMPDEST"
    },
    "15164": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15166": {
      "op": "DUP1"
    },
    "15167": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15169": {
      "op": "DUP1"
    },
    "15170": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15172": {
      "op": "DUP1"
    },
    "15173": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15175": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "15177": {
      "op": "DUP9"
    },
    "15178": {
      "op": "DUP11"
    },
    "15179": {
      "op": "SUB"
    },
    "15180": {
      "op": "SLT"
    },
    "15181": {
      "op": "ISZERO"
    },
    "15182": {
      "op": "PUSH2",
      "value": "0x3B56"
    },
    "15185": {
      "op": "JUMPI"
    },
    "15186": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15188": {
      "op": "DUP1"
    },
    "15189": {
      "op": "REVERT"
    },
    "15190": {
      "op": "JUMPDEST"
    },
    "15191": {
      "op": "DUP8"
    },
    "15192": {
      "op": "CALLDATALOAD"
    },
    "15193": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15195": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15197": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "15199": {
      "op": "SHL"
    },
    "15200": {
      "op": "SUB"
    },
    "15201": {
      "op": "DUP2"
    },
    "15202": {
      "op": "GT"
    },
    "15203": {
      "op": "ISZERO"
    },
    "15204": {
      "op": "PUSH2",
      "value": "0x3B6C"
    },
    "15207": {
      "op": "JUMPI"
    },
    "15208": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15210": {
      "op": "DUP1"
    },
    "15211": {
      "op": "REVERT"
    },
    "15212": {
      "op": "JUMPDEST"
    },
    "15213": {
      "op": "PUSH2",
      "value": "0x3B78"
    },
    "15216": {
      "op": "DUP11"
    },
    "15217": {
      "op": "DUP3"
    },
    "15218": {
      "op": "DUP12"
    },
    "15219": {
      "op": "ADD"
    },
    "15220": {
      "op": "PUSH2",
      "value": "0x37F6"
    },
    "15223": {
      "jump": "i",
      "op": "JUMP"
    },
    "15224": {
      "op": "JUMPDEST"
    },
    "15225": {
      "op": "SWAP1"
    },
    "15226": {
      "op": "SWAP9"
    },
    "15227": {
      "op": "POP"
    },
    "15228": {
      "op": "SWAP7"
    },
    "15229": {
      "op": "POP"
    },
    "15230": {
      "op": "PUSH2",
      "value": "0x38BA"
    },
    "15233": {
      "op": "SWAP1"
    },
    "15234": {
      "op": "POP"
    },
    "15235": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15237": {
      "op": "DUP10"
    },
    "15238": {
      "op": "ADD"
    },
    "15239": {
      "op": "PUSH2",
      "value": "0x3851"
    },
    "15242": {
      "jump": "i",
      "op": "JUMP"
    },
    "15243": {
      "op": "JUMPDEST"
    },
    "15244": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15246": {
      "op": "DUP1"
    },
    "15247": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15249": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "15251": {
      "op": "DUP5"
    },
    "15252": {
      "op": "DUP7"
    },
    "15253": {
      "op": "SUB"
    },
    "15254": {
      "op": "SLT"
    },
    "15255": {
      "op": "ISZERO"
    },
    "15256": {
      "op": "PUSH2",
      "value": "0x3BA0"
    },
    "15259": {
      "op": "JUMPI"
    },
    "15260": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15262": {
      "op": "DUP1"
    },
    "15263": {
      "op": "REVERT"
    },
    "15264": {
      "op": "JUMPDEST"
    },
    "15265": {
      "op": "DUP4"
    },
    "15266": {
      "op": "CALLDATALOAD"
    },
    "15267": {
      "op": "SWAP3"
    },
    "15268": {
      "op": "POP"
    },
    "15269": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15271": {
      "op": "DUP5"
    },
    "15272": {
      "op": "ADD"
    },
    "15273": {
      "op": "CALLDATALOAD"
    },
    "15274": {
      "op": "SWAP2"
    },
    "15275": {
      "op": "POP"
    },
    "15276": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "15278": {
      "op": "DUP5"
    },
    "15279": {
      "op": "ADD"
    },
    "15280": {
      "op": "CALLDATALOAD"
    },
    "15281": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15283": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15285": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "15287": {
      "op": "SHL"
    },
    "15288": {
      "op": "SUB"
    },
    "15289": {
      "op": "DUP2"
    },
    "15290": {
      "op": "GT"
    },
    "15291": {
      "op": "ISZERO"
    },
    "15292": {
      "op": "PUSH2",
      "value": "0x3BC4"
    },
    "15295": {
      "op": "JUMPI"
    },
    "15296": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15298": {
      "op": "DUP1"
    },
    "15299": {
      "op": "REVERT"
    },
    "15300": {
      "op": "JUMPDEST"
    },
    "15301": {
      "op": "PUSH2",
      "value": "0x3BD0"
    },
    "15304": {
      "op": "DUP7"
    },
    "15305": {
      "op": "DUP3"
    },
    "15306": {
      "op": "DUP8"
    },
    "15307": {
      "op": "ADD"
    },
    "15308": {
      "op": "PUSH2",
      "value": "0x3512"
    },
    "15311": {
      "jump": "i",
      "op": "JUMP"
    },
    "15312": {
      "op": "JUMPDEST"
    },
    "15313": {
      "op": "SWAP2"
    },
    "15314": {
      "op": "POP"
    },
    "15315": {
      "op": "POP"
    },
    "15316": {
      "op": "SWAP3"
    },
    "15317": {
      "op": "POP"
    },
    "15318": {
      "op": "SWAP3"
    },
    "15319": {
      "op": "POP"
    },
    "15320": {
      "op": "SWAP3"
    },
    "15321": {
      "jump": "o",
      "op": "JUMP"
    },
    "15322": {
      "op": "JUMPDEST"
    },
    "15323": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15325": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15327": {
      "op": "DUP3"
    },
    "15328": {
      "op": "DUP5"
    },
    "15329": {
      "op": "SUB"
    },
    "15330": {
      "op": "SLT"
    },
    "15331": {
      "op": "ISZERO"
    },
    "15332": {
      "op": "PUSH2",
      "value": "0x3BEC"
    },
    "15335": {
      "op": "JUMPI"
    },
    "15336": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15338": {
      "op": "DUP1"
    },
    "15339": {
      "op": "REVERT"
    },
    "15340": {
      "op": "JUMPDEST"
    },
    "15341": {
      "op": "DUP2"
    },
    "15342": {
      "op": "CALLDATALOAD"
    },
    "15343": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15345": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15347": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "15349": {
      "op": "SHL"
    },
    "15350": {
      "op": "SUB"
    },
    "15351": {
      "op": "DUP2"
    },
    "15352": {
      "op": "GT"
    },
    "15353": {
      "op": "ISZERO"
    },
    "15354": {
      "op": "PUSH2",
      "value": "0x3C02"
    },
    "15357": {
      "op": "JUMPI"
    },
    "15358": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15360": {
      "op": "DUP1"
    },
    "15361": {
      "op": "REVERT"
    },
    "15362": {
      "op": "JUMPDEST"
    },
    "15363": {
      "op": "PUSH2",
      "value": "0x3C0E"
    },
    "15366": {
      "op": "DUP5"
    },
    "15367": {
      "op": "DUP3"
    },
    "15368": {
      "op": "DUP6"
    },
    "15369": {
      "op": "ADD"
    },
    "15370": {
      "op": "PUSH2",
      "value": "0x3954"
    },
    "15373": {
      "jump": "i",
      "op": "JUMP"
    },
    "15374": {
      "op": "JUMPDEST"
    },
    "15375": {
      "op": "SWAP5"
    },
    "15376": {
      "op": "SWAP4"
    },
    "15377": {
      "op": "POP"
    },
    "15378": {
      "op": "POP"
    },
    "15379": {
      "op": "POP"
    },
    "15380": {
      "op": "POP"
    },
    "15381": {
      "jump": "o",
      "op": "JUMP"
    },
    "15382": {
      "op": "JUMPDEST"
    },
    "15383": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15385": {
      "op": "DUP1"
    },
    "15386": {
      "op": "DUP3"
    },
    "15387": {
      "op": "MSTORE"
    },
    "15388": {
      "op": "DUP3"
    },
    "15389": {
      "op": "MLOAD"
    },
    "15390": {
      "op": "DUP3"
    },
    "15391": {
      "op": "DUP3"
    },
    "15392": {
      "op": "ADD"
    },
    "15393": {
      "op": "DUP2"
    },
    "15394": {
      "op": "SWAP1"
    },
    "15395": {
      "op": "MSTORE"
    },
    "15396": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15398": {
      "op": "SWAP2"
    },
    "15399": {
      "op": "SWAP1"
    },
    "15400": {
      "op": "DUP5"
    },
    "15401": {
      "op": "DUP3"
    },
    "15402": {
      "op": "ADD"
    },
    "15403": {
      "op": "SWAP1"
    },
    "15404": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "15406": {
      "op": "DUP6"
    },
    "15407": {
      "op": "ADD"
    },
    "15408": {
      "op": "SWAP1"
    },
    "15409": {
      "op": "DUP5"
    },
    "15410": {
      "op": "JUMPDEST"
    },
    "15411": {
      "op": "DUP2"
    },
    "15412": {
      "op": "DUP2"
    },
    "15413": {
      "op": "LT"
    },
    "15414": {
      "op": "ISZERO"
    },
    "15415": {
      "op": "PUSH2",
      "value": "0x3C52"
    },
    "15418": {
      "op": "JUMPI"
    },
    "15419": {
      "op": "DUP4"
    },
    "15420": {
      "op": "MLOAD"
    },
    "15421": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "15424": {
      "op": "AND"
    },
    "15425": {
      "op": "DUP4"
    },
    "15426": {
      "op": "MSTORE"
    },
    "15427": {
      "op": "SWAP3"
    },
    "15428": {
      "op": "DUP5"
    },
    "15429": {
      "op": "ADD"
    },
    "15430": {
      "op": "SWAP3"
    },
    "15431": {
      "op": "SWAP2"
    },
    "15432": {
      "op": "DUP5"
    },
    "15433": {
      "op": "ADD"
    },
    "15434": {
      "op": "SWAP2"
    },
    "15435": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15437": {
      "op": "ADD"
    },
    "15438": {
      "op": "PUSH2",
      "value": "0x3C32"
    },
    "15441": {
      "op": "JUMP"
    },
    "15442": {
      "op": "JUMPDEST"
    },
    "15443": {
      "op": "POP"
    },
    "15444": {
      "op": "SWAP1"
    },
    "15445": {
      "op": "SWAP7"
    },
    "15446": {
      "op": "SWAP6"
    },
    "15447": {
      "op": "POP"
    },
    "15448": {
      "op": "POP"
    },
    "15449": {
      "op": "POP"
    },
    "15450": {
      "op": "POP"
    },
    "15451": {
      "op": "POP"
    },
    "15452": {
      "op": "POP"
    },
    "15453": {
      "jump": "o",
      "op": "JUMP"
    },
    "15454": {
      "op": "JUMPDEST"
    },
    "15455": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15457": {
      "op": "DUP2"
    },
    "15458": {
      "op": "DUP2"
    },
    "15459": {
      "op": "SHR"
    },
    "15460": {
      "op": "SWAP1"
    },
    "15461": {
      "op": "DUP3"
    },
    "15462": {
      "op": "AND"
    },
    "15463": {
      "op": "DUP1"
    },
    "15464": {
      "op": "PUSH2",
      "value": "0x3C72"
    },
    "15467": {
      "op": "JUMPI"
    },
    "15468": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "15470": {
      "op": "DUP3"
    },
    "15471": {
      "op": "AND"
    },
    "15472": {
      "op": "SWAP2"
    },
    "15473": {
      "op": "POP"
    },
    "15474": {
      "op": "JUMPDEST"
    },
    "15475": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15477": {
      "op": "DUP3"
    },
    "15478": {
      "op": "LT"
    },
    "15479": {
      "op": "DUP2"
    },
    "15480": {
      "op": "SUB"
    },
    "15481": {
      "op": "PUSH2",
      "value": "0x3C92"
    },
    "15484": {
      "op": "JUMPI"
    },
    "15485": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "15490": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "15492": {
      "op": "SHL"
    },
    "15493": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15495": {
      "op": "MSTORE"
    },
    "15496": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "15498": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "15500": {
      "op": "MSTORE"
    },
    "15501": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "15503": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15505": {
      "op": "REVERT"
    },
    "15506": {
      "op": "JUMPDEST"
    },
    "15507": {
      "op": "POP"
    },
    "15508": {
      "op": "SWAP2"
    },
    "15509": {
      "op": "SWAP1"
    },
    "15510": {
      "op": "POP"
    },
    "15511": {
      "jump": "o",
      "op": "JUMP"
    },
    "15512": {
      "op": "JUMPDEST"
    },
    "15513": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "15518": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "15520": {
      "op": "SHL"
    },
    "15521": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15523": {
      "op": "MSTORE"
    },
    "15524": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "15526": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "15528": {
      "op": "MSTORE"
    },
    "15529": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "15531": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15533": {
      "op": "REVERT"
    },
    "15534": {
      "op": "JUMPDEST"
    },
    "15535": {
      "op": "DUP2"
    },
    "15536": {
      "op": "MLOAD"
    },
    "15537": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15539": {
      "op": "SWAP1"
    },
    "15540": {
      "op": "DUP3"
    },
    "15541": {
      "op": "SWAP1"
    },
    "15542": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15544": {
      "op": "DUP1"
    },
    "15545": {
      "op": "DUP7"
    },
    "15546": {
      "op": "ADD"
    },
    "15547": {
      "op": "DUP5"
    },
    "15548": {
      "op": "JUMPDEST"
    },
    "15549": {
      "op": "DUP4"
    },
    "15550": {
      "op": "DUP2"
    },
    "15551": {
      "op": "LT"
    },
    "15552": {
      "op": "ISZERO"
    },
    "15553": {
      "op": "PUSH2",
      "value": "0x3CD8"
    },
    "15556": {
      "op": "JUMPI"
    },
    "15557": {
      "op": "DUP2"
    },
    "15558": {
      "op": "MLOAD"
    },
    "15559": {
      "op": "DUP6"
    },
    "15560": {
      "op": "MSTORE"
    },
    "15561": {
      "op": "SWAP4"
    },
    "15562": {
      "op": "DUP3"
    },
    "15563": {
      "op": "ADD"
    },
    "15564": {
      "op": "SWAP4"
    },
    "15565": {
      "op": "SWAP1"
    },
    "15566": {
      "op": "DUP3"
    },
    "15567": {
      "op": "ADD"
    },
    "15568": {
      "op": "SWAP1"
    },
    "15569": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15571": {
      "op": "ADD"
    },
    "15572": {
      "op": "PUSH2",
      "value": "0x3CBC"
    },
    "15575": {
      "op": "JUMP"
    },
    "15576": {
      "op": "JUMPDEST"
    },
    "15577": {
      "op": "POP"
    },
    "15578": {
      "op": "SWAP3"
    },
    "15579": {
      "op": "SWAP7"
    },
    "15580": {
      "op": "SWAP6"
    },
    "15581": {
      "op": "POP"
    },
    "15582": {
      "op": "POP"
    },
    "15583": {
      "op": "POP"
    },
    "15584": {
      "op": "POP"
    },
    "15585": {
      "op": "POP"
    },
    "15586": {
      "op": "POP"
    },
    "15587": {
      "jump": "o",
      "op": "JUMP"
    },
    "15588": {
      "op": "JUMPDEST"
    },
    "15589": {
      "op": "DUP5"
    },
    "15590": {
      "op": "DUP2"
    },
    "15591": {
      "op": "MSTORE"
    },
    "15592": {
      "op": "DUP4"
    },
    "15593": {
      "op": "ISZERO"
    },
    "15594": {
      "op": "ISZERO"
    },
    "15595": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15597": {
      "op": "DUP3"
    },
    "15598": {
      "op": "ADD"
    },
    "15599": {
      "op": "MSTORE"
    },
    "15600": {
      "op": "DUP3"
    },
    "15601": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "15603": {
      "op": "DUP3"
    },
    "15604": {
      "op": "ADD"
    },
    "15605": {
      "op": "MSTORE"
    },
    "15606": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "15608": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "15610": {
      "op": "DUP3"
    },
    "15611": {
      "op": "ADD"
    },
    "15612": {
      "op": "MSTORE"
    },
    "15613": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15615": {
      "op": "PUSH2",
      "value": "0x3D0B"
    },
    "15618": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "15620": {
      "op": "DUP4"
    },
    "15621": {
      "op": "ADD"
    },
    "15622": {
      "op": "DUP5"
    },
    "15623": {
      "op": "PUSH2",
      "value": "0x345C"
    },
    "15626": {
      "jump": "i",
      "op": "JUMP"
    },
    "15627": {
      "op": "JUMPDEST"
    },
    "15628": {
      "op": "SWAP7"
    },
    "15629": {
      "op": "SWAP6"
    },
    "15630": {
      "op": "POP"
    },
    "15631": {
      "op": "POP"
    },
    "15632": {
      "op": "POP"
    },
    "15633": {
      "op": "POP"
    },
    "15634": {
      "op": "POP"
    },
    "15635": {
      "op": "POP"
    },
    "15636": {
      "jump": "o",
      "op": "JUMP"
    },
    "15637": {
      "op": "JUMPDEST"
    },
    "15638": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15640": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15642": {
      "op": "DUP3"
    },
    "15643": {
      "op": "DUP5"
    },
    "15644": {
      "op": "SUB"
    },
    "15645": {
      "op": "SLT"
    },
    "15646": {
      "op": "ISZERO"
    },
    "15647": {
      "op": "PUSH2",
      "value": "0x3D27"
    },
    "15650": {
      "op": "JUMPI"
    },
    "15651": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15653": {
      "op": "DUP1"
    },
    "15654": {
      "op": "REVERT"
    },
    "15655": {
      "op": "JUMPDEST"
    },
    "15656": {
      "op": "POP"
    },
    "15657": {
      "op": "MLOAD"
    },
    "15658": {
      "op": "SWAP2"
    },
    "15659": {
      "op": "SWAP1"
    },
    "15660": {
      "op": "POP"
    },
    "15661": {
      "jump": "o",
      "op": "JUMP"
    },
    "15662": {
      "op": "JUMPDEST"
    },
    "15663": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15665": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15667": {
      "op": "DUP3"
    },
    "15668": {
      "op": "DUP5"
    },
    "15669": {
      "op": "SUB"
    },
    "15670": {
      "op": "SLT"
    },
    "15671": {
      "op": "ISZERO"
    },
    "15672": {
      "op": "PUSH2",
      "value": "0x3D40"
    },
    "15675": {
      "op": "JUMPI"
    },
    "15676": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15678": {
      "op": "DUP1"
    },
    "15679": {
      "op": "REVERT"
    },
    "15680": {
      "op": "JUMPDEST"
    },
    "15681": {
      "op": "DUP2"
    },
    "15682": {
      "op": "MLOAD"
    },
    "15683": {
      "op": "PUSH2",
      "value": "0x368A"
    },
    "15686": {
      "op": "DUP2"
    },
    "15687": {
      "op": "PUSH2",
      "value": "0x3922"
    },
    "15690": {
      "jump": "i",
      "op": "JUMP"
    },
    "15691": {
      "op": "JUMPDEST"
    },
    "15692": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15694": {
      "op": "DUP1"
    },
    "15695": {
      "op": "DUP3"
    },
    "15696": {
      "op": "MSTORE"
    },
    "15697": {
      "op": "DUP2"
    },
    "15698": {
      "op": "DUP2"
    },
    "15699": {
      "op": "ADD"
    },
    "15700": {
      "op": "MSTORE"
    },
    "15701": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "15734": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "15736": {
      "op": "DUP3"
    },
    "15737": {
      "op": "ADD"
    },
    "15738": {
      "op": "MSTORE"
    },
    "15739": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "15741": {
      "op": "ADD"
    },
    "15742": {
      "op": "SWAP1"
    },
    "15743": {
      "jump": "o",
      "op": "JUMP"
    },
    "15744": {
      "op": "JUMPDEST"
    },
    "15745": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15747": {
      "op": "DUP2"
    },
    "15748": {
      "op": "MSTORE"
    },
    "15749": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15751": {
      "op": "PUSH2",
      "value": "0x368A"
    },
    "15754": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15756": {
      "op": "DUP4"
    },
    "15757": {
      "op": "ADD"
    },
    "15758": {
      "op": "DUP5"
    },
    "15759": {
      "op": "PUSH2",
      "value": "0x345C"
    },
    "15762": {
      "jump": "i",
      "op": "JUMP"
    },
    "15763": {
      "op": "JUMPDEST"
    },
    "15764": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15766": {
      "op": "DUP2"
    },
    "15767": {
      "op": "SLOAD"
    },
    "15768": {
      "op": "PUSH2",
      "value": "0x3DA0"
    },
    "15771": {
      "op": "DUP2"
    },
    "15772": {
      "op": "PUSH2",
      "value": "0x3C5E"
    },
    "15775": {
      "jump": "i",
      "op": "JUMP"
    },
    "15776": {
      "op": "JUMPDEST"
    },
    "15777": {
      "op": "DUP1"
    },
    "15778": {
      "op": "DUP6"
    },
    "15779": {
      "op": "MSTORE"
    },
    "15780": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15782": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15784": {
      "op": "DUP4"
    },
    "15785": {
      "op": "DUP2"
    },
    "15786": {
      "op": "AND"
    },
    "15787": {
      "op": "DUP1"
    },
    "15788": {
      "op": "ISZERO"
    },
    "15789": {
      "op": "PUSH2",
      "value": "0x3DBD"
    },
    "15792": {
      "op": "JUMPI"
    },
    "15793": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15795": {
      "op": "DUP2"
    },
    "15796": {
      "op": "EQ"
    },
    "15797": {
      "op": "PUSH2",
      "value": "0x3DD7"
    },
    "15800": {
      "op": "JUMPI"
    },
    "15801": {
      "op": "PUSH2",
      "value": "0x3E05"
    },
    "15804": {
      "op": "JUMP"
    },
    "15805": {
      "op": "JUMPDEST"
    },
    "15806": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "15808": {
      "op": "NOT"
    },
    "15809": {
      "op": "DUP6"
    },
    "15810": {
      "op": "AND"
    },
    "15811": {
      "op": "DUP9"
    },
    "15812": {
      "op": "DUP5"
    },
    "15813": {
      "op": "ADD"
    },
    "15814": {
      "op": "MSTORE"
    },
    "15815": {
      "op": "DUP4"
    },
    "15816": {
      "op": "ISZERO"
    },
    "15817": {
      "op": "ISZERO"
    },
    "15818": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "15820": {
      "op": "SHL"
    },
    "15821": {
      "op": "DUP9"
    },
    "15822": {
      "op": "ADD"
    },
    "15823": {
      "op": "DUP4"
    },
    "15824": {
      "op": "ADD"
    },
    "15825": {
      "op": "SWAP6"
    },
    "15826": {
      "op": "POP"
    },
    "15827": {
      "op": "PUSH2",
      "value": "0x3E05"
    },
    "15830": {
      "op": "JUMP"
    },
    "15831": {
      "op": "JUMPDEST"
    },
    "15832": {
      "op": "DUP7"
    },
    "15833": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15835": {
      "op": "MSTORE"
    },
    "15836": {
      "op": "DUP3"
    },
    "15837": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15839": {
      "op": "KECCAK256"
    },
    "15840": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15842": {
      "op": "JUMPDEST"
    },
    "15843": {
      "op": "DUP6"
    },
    "15844": {
      "op": "DUP2"
    },
    "15845": {
      "op": "LT"
    },
    "15846": {
      "op": "ISZERO"
    },
    "15847": {
      "op": "PUSH2",
      "value": "0x3DFD"
    },
    "15850": {
      "op": "JUMPI"
    },
    "15851": {
      "op": "DUP2"
    },
    "15852": {
      "op": "SLOAD"
    },
    "15853": {
      "op": "DUP11"
    },
    "15854": {
      "op": "DUP3"
    },
    "15855": {
      "op": "ADD"
    },
    "15856": {
      "op": "DUP7"
    },
    "15857": {
      "op": "ADD"
    },
    "15858": {
      "op": "MSTORE"
    },
    "15859": {
      "op": "SWAP1"
    },
    "15860": {
      "op": "DUP4"
    },
    "15861": {
      "op": "ADD"
    },
    "15862": {
      "op": "SWAP1"
    },
    "15863": {
      "op": "DUP5"
    },
    "15864": {
      "op": "ADD"
    },
    "15865": {
      "op": "PUSH2",
      "value": "0x3DE2"
    },
    "15868": {
      "op": "JUMP"
    },
    "15869": {
      "op": "JUMPDEST"
    },
    "15870": {
      "op": "DUP10"
    },
    "15871": {
      "op": "ADD"
    },
    "15872": {
      "op": "DUP5"
    },
    "15873": {
      "op": "ADD"
    },
    "15874": {
      "op": "SWAP7"
    },
    "15875": {
      "op": "POP"
    },
    "15876": {
      "op": "POP"
    },
    "15877": {
      "op": "JUMPDEST"
    },
    "15878": {
      "op": "POP"
    },
    "15879": {
      "op": "POP"
    },
    "15880": {
      "op": "POP"
    },
    "15881": {
      "op": "POP"
    },
    "15882": {
      "op": "POP"
    },
    "15883": {
      "op": "SWAP3"
    },
    "15884": {
      "op": "SWAP2"
    },
    "15885": {
      "op": "POP"
    },
    "15886": {
      "op": "POP"
    },
    "15887": {
      "jump": "o",
      "op": "JUMP"
    },
    "15888": {
      "op": "JUMPDEST"
    },
    "15889": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15891": {
      "op": "DUP2"
    },
    "15892": {
      "op": "MSTORE"
    },
    "15893": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15895": {
      "op": "PUSH2",
      "value": "0x368A"
    },
    "15898": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15900": {
      "op": "DUP4"
    },
    "15901": {
      "op": "ADD"
    },
    "15902": {
      "op": "DUP5"
    },
    "15903": {
      "op": "PUSH2",
      "value": "0x3D93"
    },
    "15906": {
      "jump": "i",
      "op": "JUMP"
    },
    "15907": {
      "op": "JUMPDEST"
    },
    "15908": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "15910": {
      "op": "DUP3"
    },
    "15911": {
      "op": "GT"
    },
    "15912": {
      "op": "ISZERO"
    },
    "15913": {
      "op": "PUSH2",
      "value": "0x3E6D"
    },
    "15916": {
      "op": "JUMPI"
    },
    "15917": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15919": {
      "op": "DUP2"
    },
    "15920": {
      "op": "DUP2"
    },
    "15921": {
      "op": "MSTORE"
    },
    "15922": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15924": {
      "op": "DUP2"
    },
    "15925": {
      "op": "KECCAK256"
    },
    "15926": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "15928": {
      "op": "DUP6"
    },
    "15929": {
      "op": "ADD"
    },
    "15930": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "15932": {
      "op": "SHR"
    },
    "15933": {
      "op": "DUP2"
    },
    "15934": {
      "op": "ADD"
    },
    "15935": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15937": {
      "op": "DUP7"
    },
    "15938": {
      "op": "LT"
    },
    "15939": {
      "op": "ISZERO"
    },
    "15940": {
      "op": "PUSH2",
      "value": "0x3E4A"
    },
    "15943": {
      "op": "JUMPI"
    },
    "15944": {
      "op": "POP"
    },
    "15945": {
      "op": "DUP1"
    },
    "15946": {
      "op": "JUMPDEST"
    },
    "15947": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "15949": {
      "op": "DUP6"
    },
    "15950": {
      "op": "ADD"
    },
    "15951": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "15953": {
      "op": "SHR"
    },
    "15954": {
      "op": "DUP3"
    },
    "15955": {
      "op": "ADD"
    },
    "15956": {
      "op": "SWAP2"
    },
    "15957": {
      "op": "POP"
    },
    "15958": {
      "op": "JUMPDEST"
    },
    "15959": {
      "op": "DUP2"
    },
    "15960": {
      "op": "DUP2"
    },
    "15961": {
      "op": "LT"
    },
    "15962": {
      "op": "ISZERO"
    },
    "15963": {
      "op": "PUSH2",
      "value": "0x3E69"
    },
    "15966": {
      "op": "JUMPI"
    },
    "15967": {
      "op": "DUP3"
    },
    "15968": {
      "op": "DUP2"
    },
    "15969": {
      "op": "SSTORE"
    },
    "15970": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15972": {
      "op": "ADD"
    },
    "15973": {
      "op": "PUSH2",
      "value": "0x3E56"
    },
    "15976": {
      "op": "JUMP"
    },
    "15977": {
      "op": "JUMPDEST"
    },
    "15978": {
      "op": "POP"
    },
    "15979": {
      "op": "POP"
    },
    "15980": {
      "op": "POP"
    },
    "15981": {
      "op": "JUMPDEST"
    },
    "15982": {
      "op": "POP"
    },
    "15983": {
      "op": "POP"
    },
    "15984": {
      "op": "POP"
    },
    "15985": {
      "jump": "o",
      "op": "JUMP"
    },
    "15986": {
      "op": "JUMPDEST"
    },
    "15987": {
      "op": "DUP2"
    },
    "15988": {
      "op": "MLOAD"
    },
    "15989": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15991": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15993": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "15995": {
      "op": "SHL"
    },
    "15996": {
      "op": "SUB"
    },
    "15997": {
      "op": "DUP2"
    },
    "15998": {
      "op": "GT"
    },
    "15999": {
      "op": "ISZERO"
    },
    "16000": {
      "op": "PUSH2",
      "value": "0x3E8B"
    },
    "16003": {
      "op": "JUMPI"
    },
    "16004": {
      "op": "PUSH2",
      "value": "0x3E8B"
    },
    "16007": {
      "op": "PUSH2",
      "value": "0x34CC"
    },
    "16010": {
      "jump": "i",
      "op": "JUMP"
    },
    "16011": {
      "op": "JUMPDEST"
    },
    "16012": {
      "op": "PUSH2",
      "value": "0x3E9F"
    },
    "16015": {
      "op": "DUP2"
    },
    "16016": {
      "op": "PUSH2",
      "value": "0x3E99"
    },
    "16019": {
      "op": "DUP5"
    },
    "16020": {
      "op": "SLOAD"
    },
    "16021": {
      "op": "PUSH2",
      "value": "0x3C5E"
    },
    "16024": {
      "jump": "i",
      "op": "JUMP"
    },
    "16025": {
      "op": "JUMPDEST"
    },
    "16026": {
      "op": "DUP5"
    },
    "16027": {
      "op": "PUSH2",
      "value": "0x3E23"
    },
    "16030": {
      "jump": "i",
      "op": "JUMP"
    },
    "16031": {
      "op": "JUMPDEST"
    },
    "16032": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16034": {
      "op": "DUP1"
    },
    "16035": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "16037": {
      "op": "DUP4"
    },
    "16038": {
      "op": "GT"
    },
    "16039": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16041": {
      "op": "DUP2"
    },
    "16042": {
      "op": "EQ"
    },
    "16043": {
      "op": "PUSH2",
      "value": "0x3ED4"
    },
    "16046": {
      "op": "JUMPI"
    },
    "16047": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16049": {
      "op": "DUP5"
    },
    "16050": {
      "op": "ISZERO"
    },
    "16051": {
      "op": "PUSH2",
      "value": "0x3EBC"
    },
    "16054": {
      "op": "JUMPI"
    },
    "16055": {
      "op": "POP"
    },
    "16056": {
      "op": "DUP6"
    },
    "16057": {
      "op": "DUP4"
    },
    "16058": {
      "op": "ADD"
    },
    "16059": {
      "op": "MLOAD"
    },
    "16060": {
      "op": "JUMPDEST"
    },
    "16061": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16063": {
      "op": "NOT"
    },
    "16064": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "16066": {
      "op": "DUP7"
    },
    "16067": {
      "op": "SWAP1"
    },
    "16068": {
      "op": "SHL"
    },
    "16069": {
      "op": "SHR"
    },
    "16070": {
      "op": "NOT"
    },
    "16071": {
      "op": "AND"
    },
    "16072": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16074": {
      "op": "DUP6"
    },
    "16075": {
      "op": "SWAP1"
    },
    "16076": {
      "op": "SHL"
    },
    "16077": {
      "op": "OR"
    },
    "16078": {
      "op": "DUP6"
    },
    "16079": {
      "op": "SSTORE"
    },
    "16080": {
      "op": "PUSH2",
      "value": "0x3E69"
    },
    "16083": {
      "op": "JUMP"
    },
    "16084": {
      "op": "JUMPDEST"
    },
    "16085": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16087": {
      "op": "DUP6"
    },
    "16088": {
      "op": "DUP2"
    },
    "16089": {
      "op": "MSTORE"
    },
    "16090": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16092": {
      "op": "DUP2"
    },
    "16093": {
      "op": "KECCAK256"
    },
    "16094": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "16096": {
      "op": "NOT"
    },
    "16097": {
      "op": "DUP7"
    },
    "16098": {
      "op": "AND"
    },
    "16099": {
      "op": "SWAP2"
    },
    "16100": {
      "op": "JUMPDEST"
    },
    "16101": {
      "op": "DUP3"
    },
    "16102": {
      "op": "DUP2"
    },
    "16103": {
      "op": "LT"
    },
    "16104": {
      "op": "ISZERO"
    },
    "16105": {
      "op": "PUSH2",
      "value": "0x3F03"
    },
    "16108": {
      "op": "JUMPI"
    },
    "16109": {
      "op": "DUP9"
    },
    "16110": {
      "op": "DUP7"
    },
    "16111": {
      "op": "ADD"
    },
    "16112": {
      "op": "MLOAD"
    },
    "16113": {
      "op": "DUP3"
    },
    "16114": {
      "op": "SSTORE"
    },
    "16115": {
      "op": "SWAP5"
    },
    "16116": {
      "op": "DUP5"
    },
    "16117": {
      "op": "ADD"
    },
    "16118": {
      "op": "SWAP5"
    },
    "16119": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16121": {
      "op": "SWAP1"
    },
    "16122": {
      "op": "SWAP2"
    },
    "16123": {
      "op": "ADD"
    },
    "16124": {
      "op": "SWAP1"
    },
    "16125": {
      "op": "DUP5"
    },
    "16126": {
      "op": "ADD"
    },
    "16127": {
      "op": "PUSH2",
      "value": "0x3EE4"
    },
    "16130": {
      "op": "JUMP"
    },
    "16131": {
      "op": "JUMPDEST"
    },
    "16132": {
      "op": "POP"
    },
    "16133": {
      "op": "DUP6"
    },
    "16134": {
      "op": "DUP3"
    },
    "16135": {
      "op": "LT"
    },
    "16136": {
      "op": "ISZERO"
    },
    "16137": {
      "op": "PUSH2",
      "value": "0x3F21"
    },
    "16140": {
      "op": "JUMPI"
    },
    "16141": {
      "op": "DUP8"
    },
    "16142": {
      "op": "DUP6"
    },
    "16143": {
      "op": "ADD"
    },
    "16144": {
      "op": "MLOAD"
    },
    "16145": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16147": {
      "op": "NOT"
    },
    "16148": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "16150": {
      "op": "DUP9"
    },
    "16151": {
      "op": "SWAP1"
    },
    "16152": {
      "op": "SHL"
    },
    "16153": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "16155": {
      "op": "AND"
    },
    "16156": {
      "op": "SHR"
    },
    "16157": {
      "op": "NOT"
    },
    "16158": {
      "op": "AND"
    },
    "16159": {
      "op": "DUP2"
    },
    "16160": {
      "op": "SSTORE"
    },
    "16161": {
      "op": "JUMPDEST"
    },
    "16162": {
      "op": "POP"
    },
    "16163": {
      "op": "POP"
    },
    "16164": {
      "op": "POP"
    },
    "16165": {
      "op": "POP"
    },
    "16166": {
      "op": "POP"
    },
    "16167": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16169": {
      "op": "SWAP1"
    },
    "16170": {
      "op": "DUP2"
    },
    "16171": {
      "op": "SHL"
    },
    "16172": {
      "op": "ADD"
    },
    "16173": {
      "op": "SWAP1"
    },
    "16174": {
      "op": "SSTORE"
    },
    "16175": {
      "op": "POP"
    },
    "16176": {
      "jump": "o",
      "op": "JUMP"
    },
    "16177": {
      "op": "JUMPDEST"
    },
    "16178": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "16183": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "16185": {
      "op": "SHL"
    },
    "16186": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16188": {
      "op": "MSTORE"
    },
    "16189": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "16191": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "16193": {
      "op": "MSTORE"
    },
    "16194": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "16196": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16198": {
      "op": "REVERT"
    },
    "16199": {
      "op": "JUMPDEST"
    },
    "16200": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16202": {
      "op": "DUP3"
    },
    "16203": {
      "op": "NOT"
    },
    "16204": {
      "op": "DUP3"
    },
    "16205": {
      "op": "GT"
    },
    "16206": {
      "op": "ISZERO"
    },
    "16207": {
      "op": "PUSH2",
      "value": "0x3F5A"
    },
    "16210": {
      "op": "JUMPI"
    },
    "16211": {
      "op": "PUSH2",
      "value": "0x3F5A"
    },
    "16214": {
      "op": "PUSH2",
      "value": "0x3F31"
    },
    "16217": {
      "jump": "i",
      "op": "JUMP"
    },
    "16218": {
      "op": "JUMPDEST"
    },
    "16219": {
      "op": "POP"
    },
    "16220": {
      "op": "ADD"
    },
    "16221": {
      "op": "SWAP1"
    },
    "16222": {
      "jump": "o",
      "op": "JUMP"
    },
    "16223": {
      "op": "JUMPDEST"
    },
    "16224": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16226": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "16229": {
      "op": "DUP4"
    },
    "16230": {
      "op": "DUP2"
    },
    "16231": {
      "op": "AND"
    },
    "16232": {
      "op": "SWAP1"
    },
    "16233": {
      "op": "DUP4"
    },
    "16234": {
      "op": "AND"
    },
    "16235": {
      "op": "DUP2"
    },
    "16236": {
      "op": "DUP2"
    },
    "16237": {
      "op": "LT"
    },
    "16238": {
      "op": "ISZERO"
    },
    "16239": {
      "op": "PUSH2",
      "value": "0x3F7A"
    },
    "16242": {
      "op": "JUMPI"
    },
    "16243": {
      "op": "PUSH2",
      "value": "0x3F7A"
    },
    "16246": {
      "op": "PUSH2",
      "value": "0x3F31"
    },
    "16249": {
      "jump": "i",
      "op": "JUMP"
    },
    "16250": {
      "op": "JUMPDEST"
    },
    "16251": {
      "op": "SUB"
    },
    "16252": {
      "op": "SWAP4"
    },
    "16253": {
      "op": "SWAP3"
    },
    "16254": {
      "op": "POP"
    },
    "16255": {
      "op": "POP"
    },
    "16256": {
      "op": "POP"
    },
    "16257": {
      "jump": "o",
      "op": "JUMP"
    },
    "16258": {
      "op": "JUMPDEST"
    },
    "16259": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16261": {
      "op": "DUP3"
    },
    "16262": {
      "op": "DUP3"
    },
    "16263": {
      "op": "LT"
    },
    "16264": {
      "op": "ISZERO"
    },
    "16265": {
      "op": "PUSH2",
      "value": "0x3F94"
    },
    "16268": {
      "op": "JUMPI"
    },
    "16269": {
      "op": "PUSH2",
      "value": "0x3F94"
    },
    "16272": {
      "op": "PUSH2",
      "value": "0x3F31"
    },
    "16275": {
      "jump": "i",
      "op": "JUMP"
    },
    "16276": {
      "op": "JUMPDEST"
    },
    "16277": {
      "op": "POP"
    },
    "16278": {
      "op": "SUB"
    },
    "16279": {
      "op": "SWAP1"
    },
    "16280": {
      "jump": "o",
      "op": "JUMP"
    },
    "16281": {
      "op": "JUMPDEST"
    },
    "16282": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "16288": {
      "op": "DUP6"
    },
    "16289": {
      "op": "AND"
    },
    "16290": {
      "op": "DUP2"
    },
    "16291": {
      "op": "MSTORE"
    },
    "16292": {
      "op": "DUP4"
    },
    "16293": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16295": {
      "op": "DUP3"
    },
    "16296": {
      "op": "ADD"
    },
    "16297": {
      "op": "MSTORE"
    },
    "16298": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "16300": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "16302": {
      "op": "DUP3"
    },
    "16303": {
      "op": "ADD"
    },
    "16304": {
      "op": "MSTORE"
    },
    "16305": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16307": {
      "op": "PUSH2",
      "value": "0x3FBF"
    },
    "16310": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "16312": {
      "op": "DUP4"
    },
    "16313": {
      "op": "ADD"
    },
    "16314": {
      "op": "DUP6"
    },
    "16315": {
      "op": "PUSH2",
      "value": "0x345C"
    },
    "16318": {
      "jump": "i",
      "op": "JUMP"
    },
    "16319": {
      "op": "JUMPDEST"
    },
    "16320": {
      "op": "SWAP1"
    },
    "16321": {
      "op": "POP"
    },
    "16322": {
      "op": "DUP3"
    },
    "16323": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "16325": {
      "op": "DUP4"
    },
    "16326": {
      "op": "ADD"
    },
    "16327": {
      "op": "MSTORE"
    },
    "16328": {
      "op": "SWAP6"
    },
    "16329": {
      "op": "SWAP5"
    },
    "16330": {
      "op": "POP"
    },
    "16331": {
      "op": "POP"
    },
    "16332": {
      "op": "POP"
    },
    "16333": {
      "op": "POP"
    },
    "16334": {
      "op": "POP"
    },
    "16335": {
      "jump": "o",
      "op": "JUMP"
    },
    "16336": {
      "op": "JUMPDEST"
    },
    "16337": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16339": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16341": {
      "op": "DUP3"
    },
    "16342": {
      "op": "ADD"
    },
    "16343": {
      "op": "PUSH2",
      "value": "0x3FE2"
    },
    "16346": {
      "op": "JUMPI"
    },
    "16347": {
      "op": "PUSH2",
      "value": "0x3FE2"
    },
    "16350": {
      "op": "PUSH2",
      "value": "0x3F31"
    },
    "16353": {
      "jump": "i",
      "op": "JUMP"
    },
    "16354": {
      "op": "JUMPDEST"
    },
    "16355": {
      "op": "POP"
    },
    "16356": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16358": {
      "op": "ADD"
    },
    "16359": {
      "op": "SWAP1"
    },
    "16360": {
      "jump": "o",
      "op": "JUMP"
    },
    "16361": {
      "op": "JUMPDEST"
    },
    "16362": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16364": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16366": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "16368": {
      "op": "SHL"
    },
    "16369": {
      "op": "SUB"
    },
    "16370": {
      "op": "DUP4"
    },
    "16371": {
      "op": "GT"
    },
    "16372": {
      "op": "ISZERO"
    },
    "16373": {
      "op": "PUSH2",
      "value": "0x4000"
    },
    "16376": {
      "op": "JUMPI"
    },
    "16377": {
      "op": "PUSH2",
      "value": "0x4000"
    },
    "16380": {
      "op": "PUSH2",
      "value": "0x34CC"
    },
    "16383": {
      "jump": "i",
      "op": "JUMP"
    },
    "16384": {
      "op": "JUMPDEST"
    },
    "16385": {
      "op": "PUSH2",
      "value": "0x4014"
    },
    "16388": {
      "op": "DUP4"
    },
    "16389": {
      "op": "PUSH2",
      "value": "0x400E"
    },
    "16392": {
      "op": "DUP4"
    },
    "16393": {
      "op": "SLOAD"
    },
    "16394": {
      "op": "PUSH2",
      "value": "0x3C5E"
    },
    "16397": {
      "jump": "i",
      "op": "JUMP"
    },
    "16398": {
      "op": "JUMPDEST"
    },
    "16399": {
      "op": "DUP4"
    },
    "16400": {
      "op": "PUSH2",
      "value": "0x3E23"
    },
    "16403": {
      "jump": "i",
      "op": "JUMP"
    },
    "16404": {
      "op": "JUMPDEST"
    },
    "16405": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16407": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "16409": {
      "op": "DUP5"
    },
    "16410": {
      "op": "GT"
    },
    "16411": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16413": {
      "op": "DUP2"
    },
    "16414": {
      "op": "EQ"
    },
    "16415": {
      "op": "PUSH2",
      "value": "0x4048"
    },
    "16418": {
      "op": "JUMPI"
    },
    "16419": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16421": {
      "op": "DUP6"
    },
    "16422": {
      "op": "ISZERO"
    },
    "16423": {
      "op": "PUSH2",
      "value": "0x4030"
    },
    "16426": {
      "op": "JUMPI"
    },
    "16427": {
      "op": "POP"
    },
    "16428": {
      "op": "DUP4"
    },
    "16429": {
      "op": "DUP3"
    },
    "16430": {
      "op": "ADD"
    },
    "16431": {
      "op": "CALLDATALOAD"
    },
    "16432": {
      "op": "JUMPDEST"
    },
    "16433": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16435": {
      "op": "NOT"
    },
    "16436": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "16438": {
      "op": "DUP8"
    },
    "16439": {
      "op": "SWAP1"
    },
    "16440": {
      "op": "SHL"
    },
    "16441": {
      "op": "SHR"
    },
    "16442": {
      "op": "NOT"
    },
    "16443": {
      "op": "AND"
    },
    "16444": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16446": {
      "op": "DUP7"
    },
    "16447": {
      "op": "SWAP1"
    },
    "16448": {
      "op": "SHL"
    },
    "16449": {
      "op": "OR"
    },
    "16450": {
      "op": "DUP4"
    },
    "16451": {
      "op": "SSTORE"
    },
    "16452": {
      "op": "PUSH2",
      "value": "0x2065"
    },
    "16455": {
      "op": "JUMP"
    },
    "16456": {
      "op": "JUMPDEST"
    },
    "16457": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16459": {
      "op": "DUP4"
    },
    "16460": {
      "op": "DUP2"
    },
    "16461": {
      "op": "MSTORE"
    },
    "16462": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16464": {
      "op": "SWAP1"
    },
    "16465": {
      "op": "KECCAK256"
    },
    "16466": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "16468": {
      "op": "NOT"
    },
    "16469": {
      "op": "DUP7"
    },
    "16470": {
      "op": "AND"
    },
    "16471": {
      "op": "SWAP1"
    },
    "16472": {
      "op": "DUP4"
    },
    "16473": {
      "op": "JUMPDEST"
    },
    "16474": {
      "op": "DUP3"
    },
    "16475": {
      "op": "DUP2"
    },
    "16476": {
      "op": "LT"
    },
    "16477": {
      "op": "ISZERO"
    },
    "16478": {
      "op": "PUSH2",
      "value": "0x4079"
    },
    "16481": {
      "op": "JUMPI"
    },
    "16482": {
      "op": "DUP7"
    },
    "16483": {
      "op": "DUP6"
    },
    "16484": {
      "op": "ADD"
    },
    "16485": {
      "op": "CALLDATALOAD"
    },
    "16486": {
      "op": "DUP3"
    },
    "16487": {
      "op": "SSTORE"
    },
    "16488": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16490": {
      "op": "SWAP5"
    },
    "16491": {
      "op": "DUP6"
    },
    "16492": {
      "op": "ADD"
    },
    "16493": {
      "op": "SWAP5"
    },
    "16494": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16496": {
      "op": "SWAP1"
    },
    "16497": {
      "op": "SWAP3"
    },
    "16498": {
      "op": "ADD"
    },
    "16499": {
      "op": "SWAP2"
    },
    "16500": {
      "op": "ADD"
    },
    "16501": {
      "op": "PUSH2",
      "value": "0x4059"
    },
    "16504": {
      "op": "JUMP"
    },
    "16505": {
      "op": "JUMPDEST"
    },
    "16506": {
      "op": "POP"
    },
    "16507": {
      "op": "DUP7"
    },
    "16508": {
      "op": "DUP3"
    },
    "16509": {
      "op": "LT"
    },
    "16510": {
      "op": "ISZERO"
    },
    "16511": {
      "op": "PUSH2",
      "value": "0x4096"
    },
    "16514": {
      "op": "JUMPI"
    },
    "16515": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16517": {
      "op": "NOT"
    },
    "16518": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "16520": {
      "op": "DUP9"
    },
    "16521": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "16523": {
      "op": "SHL"
    },
    "16524": {
      "op": "AND"
    },
    "16525": {
      "op": "SHR"
    },
    "16526": {
      "op": "NOT"
    },
    "16527": {
      "op": "DUP5"
    },
    "16528": {
      "op": "DUP8"
    },
    "16529": {
      "op": "ADD"
    },
    "16530": {
      "op": "CALLDATALOAD"
    },
    "16531": {
      "op": "AND"
    },
    "16532": {
      "op": "DUP2"
    },
    "16533": {
      "op": "SSTORE"
    },
    "16534": {
      "op": "JUMPDEST"
    },
    "16535": {
      "op": "POP"
    },
    "16536": {
      "op": "POP"
    },
    "16537": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16539": {
      "op": "DUP6"
    },
    "16540": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16542": {
      "op": "SHL"
    },
    "16543": {
      "op": "ADD"
    },
    "16544": {
      "op": "DUP4"
    },
    "16545": {
      "op": "SSTORE"
    },
    "16546": {
      "op": "POP"
    },
    "16547": {
      "op": "POP"
    },
    "16548": {
      "op": "POP"
    },
    "16549": {
      "op": "POP"
    },
    "16550": {
      "op": "POP"
    },
    "16551": {
      "jump": "o",
      "op": "JUMP"
    },
    "16552": {
      "op": "JUMPDEST"
    },
    "16553": {
      "op": "DUP4"
    },
    "16554": {
      "op": "DUP2"
    },
    "16555": {
      "op": "MSTORE"
    },
    "16556": {
      "op": "DUP3"
    },
    "16557": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16559": {
      "op": "DUP3"
    },
    "16560": {
      "op": "ADD"
    },
    "16561": {
      "op": "MSTORE"
    },
    "16562": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "16564": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "16566": {
      "op": "DUP3"
    },
    "16567": {
      "op": "ADD"
    },
    "16568": {
      "op": "MSTORE"
    },
    "16569": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16571": {
      "op": "PUSH2",
      "value": "0x140"
    },
    "16574": {
      "op": "DUP1"
    },
    "16575": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "16577": {
      "op": "DUP5"
    },
    "16578": {
      "op": "ADD"
    },
    "16579": {
      "op": "MSTORE"
    },
    "16580": {
      "op": "PUSH2",
      "value": "0x40D1"
    },
    "16583": {
      "op": "PUSH2",
      "value": "0x1A0"
    },
    "16586": {
      "op": "DUP5"
    },
    "16587": {
      "op": "ADD"
    },
    "16588": {
      "op": "DUP6"
    },
    "16589": {
      "op": "PUSH2",
      "value": "0x3D93"
    },
    "16592": {
      "jump": "i",
      "op": "JUMP"
    },
    "16593": {
      "op": "JUMPDEST"
    },
    "16594": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16596": {
      "op": "DUP6"
    },
    "16597": {
      "op": "ADD"
    },
    "16598": {
      "op": "SLOAD"
    },
    "16599": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "16605": {
      "op": "AND"
    },
    "16606": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "16612": {
      "op": "DUP2"
    },
    "16613": {
      "op": "AND"
    },
    "16614": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "16616": {
      "op": "DUP7"
    },
    "16617": {
      "op": "ADD"
    },
    "16618": {
      "op": "MSTORE"
    },
    "16619": {
      "op": "POP"
    },
    "16620": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "16622": {
      "op": "DUP6"
    },
    "16623": {
      "op": "ADD"
    },
    "16624": {
      "op": "SLOAD"
    },
    "16625": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "16627": {
      "op": "DUP6"
    },
    "16628": {
      "op": "ADD"
    },
    "16629": {
      "op": "MSTORE"
    },
    "16630": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "16632": {
      "op": "DUP6"
    },
    "16633": {
      "op": "ADD"
    },
    "16634": {
      "op": "SLOAD"
    },
    "16635": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "16637": {
      "op": "DUP6"
    },
    "16638": {
      "op": "ADD"
    },
    "16639": {
      "op": "MSTORE"
    },
    "16640": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "16642": {
      "op": "DUP6"
    },
    "16643": {
      "op": "ADD"
    },
    "16644": {
      "op": "SLOAD"
    },
    "16645": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "16647": {
      "op": "DUP2"
    },
    "16648": {
      "op": "AND"
    },
    "16649": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "16651": {
      "op": "DUP7"
    },
    "16652": {
      "op": "ADD"
    },
    "16653": {
      "op": "MSTORE"
    },
    "16654": {
      "op": "PUSH1",
      "value": "0x8"
    },
    "16656": {
      "op": "DUP2"
    },
    "16657": {
      "op": "SWAP1"
    },
    "16658": {
      "op": "SHR"
    },
    "16659": {
      "op": "PUSH3",
      "value": "0xFFFFFF"
    },
    "16663": {
      "op": "AND"
    },
    "16664": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "16667": {
      "op": "DUP7"
    },
    "16668": {
      "op": "ADD"
    },
    "16669": {
      "op": "MSTORE"
    },
    "16670": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16672": {
      "op": "DUP2"
    },
    "16673": {
      "op": "SWAP1"
    },
    "16674": {
      "op": "SHR"
    },
    "16675": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16677": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16679": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "16681": {
      "op": "SHL"
    },
    "16682": {
      "op": "SUB"
    },
    "16683": {
      "op": "AND"
    },
    "16684": {
      "op": "PUSH2",
      "value": "0x120"
    },
    "16687": {
      "op": "DUP7"
    },
    "16688": {
      "op": "ADD"
    },
    "16689": {
      "op": "MSTORE"
    },
    "16690": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "16693": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "16695": {
      "op": "DUP3"
    },
    "16696": {
      "op": "SWAP1"
    },
    "16697": {
      "op": "SHR"
    },
    "16698": {
      "op": "DUP2"
    },
    "16699": {
      "op": "AND"
    },
    "16700": {
      "op": "DUP5"
    },
    "16701": {
      "op": "DUP8"
    },
    "16702": {
      "op": "ADD"
    },
    "16703": {
      "op": "MSTORE"
    },
    "16704": {
      "op": "PUSH2",
      "value": "0x4155"
    },
    "16707": {
      "op": "PUSH2",
      "value": "0x160"
    },
    "16710": {
      "op": "DUP8"
    },
    "16711": {
      "op": "ADD"
    },
    "16712": {
      "op": "DUP3"
    },
    "16713": {
      "op": "DUP5"
    },
    "16714": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "16716": {
      "op": "SHR"
    },
    "16717": {
      "op": "AND"
    },
    "16718": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "16721": {
      "op": "AND"
    },
    "16722": {
      "op": "SWAP1"
    },
    "16723": {
      "op": "MSTORE"
    },
    "16724": {
      "op": "JUMP"
    },
    "16725": {
      "op": "JUMPDEST"
    },
    "16726": {
      "op": "POP"
    },
    "16727": {
      "op": "PUSH1",
      "value": "0x90"
    },
    "16729": {
      "op": "DUP2"
    },
    "16730": {
      "op": "SWAP1"
    },
    "16731": {
      "op": "SHR"
    },
    "16732": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "16738": {
      "op": "AND"
    },
    "16739": {
      "op": "PUSH2",
      "value": "0x180"
    },
    "16742": {
      "op": "DUP7"
    },
    "16743": {
      "op": "ADD"
    },
    "16744": {
      "op": "MSTORE"
    },
    "16745": {
      "op": "POP"
    },
    "16746": {
      "op": "SWAP7"
    },
    "16747": {
      "op": "SWAP6"
    },
    "16748": {
      "op": "POP"
    },
    "16749": {
      "op": "POP"
    },
    "16750": {
      "op": "POP"
    },
    "16751": {
      "op": "POP"
    },
    "16752": {
      "op": "POP"
    },
    "16753": {
      "op": "POP"
    },
    "16754": {
      "jump": "o",
      "op": "JUMP"
    },
    "16755": {
      "op": "JUMPDEST"
    },
    "16756": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16758": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16760": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16762": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "16764": {
      "op": "SHL"
    },
    "16765": {
      "op": "SUB"
    },
    "16766": {
      "op": "DUP1"
    },
    "16767": {
      "op": "DUP5"
    },
    "16768": {
      "op": "AND"
    },
    "16769": {
      "op": "DUP1"
    },
    "16770": {
      "op": "PUSH2",
      "value": "0x419B"
    },
    "16773": {
      "op": "JUMPI"
    },
    "16774": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "16779": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "16781": {
      "op": "SHL"
    },
    "16782": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16784": {
      "op": "MSTORE"
    },
    "16785": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "16787": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "16789": {
      "op": "MSTORE"
    },
    "16790": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "16792": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16794": {
      "op": "REVERT"
    },
    "16795": {
      "op": "JUMPDEST"
    },
    "16796": {
      "op": "SWAP3"
    },
    "16797": {
      "op": "AND"
    },
    "16798": {
      "op": "SWAP2"
    },
    "16799": {
      "op": "SWAP1"
    },
    "16800": {
      "op": "SWAP2"
    },
    "16801": {
      "op": "DIV"
    },
    "16802": {
      "op": "SWAP3"
    },
    "16803": {
      "op": "SWAP2"
    },
    "16804": {
      "op": "POP"
    },
    "16805": {
      "op": "POP"
    },
    "16806": {
      "jump": "o",
      "op": "JUMP"
    },
    "16807": {
      "op": "JUMPDEST"
    },
    "16808": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16810": {
      "op": "DUP1"
    },
    "16811": {
      "op": "DUP3"
    },
    "16812": {
      "op": "MSTORE"
    },
    "16813": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "16815": {
      "op": "SWAP1"
    },
    "16816": {
      "op": "DUP3"
    },
    "16817": {
      "op": "ADD"
    },
    "16818": {
      "op": "MSTORE"
    },
    "16819": {
      "op": "PUSH20",
      "value": "0x2330B4B632B2103A379039B2B7321022BA3432B9"
    },
    "16840": {
      "op": "PUSH1",
      "value": "0x61"
    },
    "16842": {
      "op": "SHL"
    },
    "16843": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "16845": {
      "op": "DUP3"
    },
    "16846": {
      "op": "ADD"
    },
    "16847": {
      "op": "MSTORE"
    },
    "16848": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "16850": {
      "op": "ADD"
    },
    "16851": {
      "op": "SWAP1"
    },
    "16852": {
      "jump": "o",
      "op": "JUMP"
    },
    "16853": {
      "op": "JUMPDEST"
    },
    "16854": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16856": {
      "op": "DUP1"
    },
    "16857": {
      "op": "DUP3"
    },
    "16858": {
      "op": "SLT"
    },
    "16859": {
      "op": "DUP1"
    },
    "16860": {
      "op": "ISZERO"
    },
    "16861": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16863": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16865": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "16867": {
      "op": "SHL"
    },
    "16868": {
      "op": "SUB"
    },
    "16869": {
      "op": "DUP5"
    },
    "16870": {
      "op": "SWAP1"
    },
    "16871": {
      "op": "SUB"
    },
    "16872": {
      "op": "DUP6"
    },
    "16873": {
      "op": "SGT"
    },
    "16874": {
      "op": "AND"
    },
    "16875": {
      "op": "ISZERO"
    },
    "16876": {
      "op": "PUSH2",
      "value": "0x41F7"
    },
    "16879": {
      "op": "JUMPI"
    },
    "16880": {
      "op": "PUSH2",
      "value": "0x41F7"
    },
    "16883": {
      "op": "PUSH2",
      "value": "0x3F31"
    },
    "16886": {
      "jump": "i",
      "op": "JUMP"
    },
    "16887": {
      "op": "JUMPDEST"
    },
    "16888": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16890": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "16892": {
      "op": "SHL"
    },
    "16893": {
      "op": "DUP4"
    },
    "16894": {
      "op": "SWAP1"
    },
    "16895": {
      "op": "SUB"
    },
    "16896": {
      "op": "DUP5"
    },
    "16897": {
      "op": "SLT"
    },
    "16898": {
      "op": "DUP2"
    },
    "16899": {
      "op": "AND"
    },
    "16900": {
      "op": "ISZERO"
    },
    "16901": {
      "op": "PUSH2",
      "value": "0x4210"
    },
    "16904": {
      "op": "JUMPI"
    },
    "16905": {
      "op": "PUSH2",
      "value": "0x4210"
    },
    "16908": {
      "op": "PUSH2",
      "value": "0x3F31"
    },
    "16911": {
      "jump": "i",
      "op": "JUMP"
    },
    "16912": {
      "op": "JUMPDEST"
    },
    "16913": {
      "op": "POP"
    },
    "16914": {
      "op": "POP"
    },
    "16915": {
      "op": "ADD"
    },
    "16916": {
      "op": "SWAP1"
    },
    "16917": {
      "jump": "o",
      "op": "JUMP"
    },
    "16918": {
      "op": "JUMPDEST"
    },
    "16919": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16921": {
      "op": "DUP3"
    },
    "16922": {
      "op": "MLOAD"
    },
    "16923": {
      "op": "PUSH2",
      "value": "0x4228"
    },
    "16926": {
      "op": "DUP2"
    },
    "16927": {
      "op": "DUP5"
    },
    "16928": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16930": {
      "op": "DUP8"
    },
    "16931": {
      "op": "ADD"
    },
    "16932": {
      "op": "PUSH2",
      "value": "0x3430"
    },
    "16935": {
      "jump": "i",
      "op": "JUMP"
    },
    "16936": {
      "op": "JUMPDEST"
    },
    "16937": {
      "op": "SWAP2"
    },
    "16938": {
      "op": "SWAP1"
    },
    "16939": {
      "op": "SWAP2"
    },
    "16940": {
      "op": "ADD"
    },
    "16941": {
      "op": "SWAP3"
    },
    "16942": {
      "op": "SWAP2"
    },
    "16943": {
      "op": "POP"
    },
    "16944": {
      "op": "POP"
    },
    "16945": {
      "jump": "o",
      "op": "JUMP"
    },
    "16946": {
      "op": "JUMPDEST"
    },
    "16947": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16949": {
      "op": "DUP1"
    },
    "16950": {
      "op": "DUP4"
    },
    "16951": {
      "op": "SLOAD"
    },
    "16952": {
      "op": "PUSH2",
      "value": "0x4240"
    },
    "16955": {
      "op": "DUP2"
    },
    "16956": {
      "op": "PUSH2",
      "value": "0x3C5E"
    },
    "16959": {
      "jump": "i",
      "op": "JUMP"
    },
    "16960": {
      "op": "JUMPDEST"
    },
    "16961": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16963": {
      "op": "DUP3"
    },
    "16964": {
      "op": "DUP2"
    },
    "16965": {
      "op": "AND"
    },
    "16966": {
      "op": "DUP1"
    },
    "16967": {
      "op": "ISZERO"
    },
    "16968": {
      "op": "PUSH2",
      "value": "0x4258"
    },
    "16971": {
      "op": "JUMPI"
    },
    "16972": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16974": {
      "op": "DUP2"
    },
    "16975": {
      "op": "EQ"
    },
    "16976": {
      "op": "PUSH2",
      "value": "0x426D"
    },
    "16979": {
      "op": "JUMPI"
    },
    "16980": {
      "op": "PUSH2",
      "value": "0x3CD8"
    },
    "16983": {
      "op": "JUMP"
    },
    "16984": {
      "op": "JUMPDEST"
    },
    "16985": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "16987": {
      "op": "NOT"
    },
    "16988": {
      "op": "DUP5"
    },
    "16989": {
      "op": "AND"
    },
    "16990": {
      "op": "DUP8"
    },
    "16991": {
      "op": "MSTORE"
    },
    "16992": {
      "op": "DUP3"
    },
    "16993": {
      "op": "ISZERO"
    },
    "16994": {
      "op": "ISZERO"
    },
    "16995": {
      "op": "DUP4"
    },
    "16996": {
      "op": "MUL"
    },
    "16997": {
      "op": "DUP8"
    },
    "16998": {
      "op": "ADD"
    },
    "16999": {
      "op": "SWAP5"
    },
    "17000": {
      "op": "POP"
    },
    "17001": {
      "op": "PUSH2",
      "value": "0x3CD8"
    },
    "17004": {
      "op": "JUMP"
    },
    "17005": {
      "op": "JUMPDEST"
    },
    "17006": {
      "op": "DUP8"
    },
    "17007": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17009": {
      "op": "MSTORE"
    },
    "17010": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17012": {
      "op": "DUP1"
    },
    "17013": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17015": {
      "op": "KECCAK256"
    },
    "17016": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17018": {
      "op": "JUMPDEST"
    },
    "17019": {
      "op": "DUP6"
    },
    "17020": {
      "op": "DUP2"
    },
    "17021": {
      "op": "LT"
    },
    "17022": {
      "op": "ISZERO"
    },
    "17023": {
      "op": "PUSH2",
      "value": "0x4293"
    },
    "17026": {
      "op": "JUMPI"
    },
    "17027": {
      "op": "DUP2"
    },
    "17028": {
      "op": "SLOAD"
    },
    "17029": {
      "op": "DUP11"
    },
    "17030": {
      "op": "DUP3"
    },
    "17031": {
      "op": "ADD"
    },
    "17032": {
      "op": "MSTORE"
    },
    "17033": {
      "op": "SWAP1"
    },
    "17034": {
      "op": "DUP5"
    },
    "17035": {
      "op": "ADD"
    },
    "17036": {
      "op": "SWAP1"
    },
    "17037": {
      "op": "DUP3"
    },
    "17038": {
      "op": "ADD"
    },
    "17039": {
      "op": "PUSH2",
      "value": "0x427A"
    },
    "17042": {
      "op": "JUMP"
    },
    "17043": {
      "op": "JUMPDEST"
    },
    "17044": {
      "op": "POP"
    },
    "17045": {
      "op": "POP"
    },
    "17046": {
      "op": "POP"
    },
    "17047": {
      "op": "SWAP6"
    },
    "17048": {
      "op": "SWAP1"
    },
    "17049": {
      "op": "SWAP2"
    },
    "17050": {
      "op": "ADD"
    },
    "17051": {
      "op": "SWAP7"
    },
    "17052": {
      "op": "SWAP6"
    },
    "17053": {
      "op": "POP"
    },
    "17054": {
      "op": "POP"
    },
    "17055": {
      "op": "POP"
    },
    "17056": {
      "op": "POP"
    },
    "17057": {
      "op": "POP"
    },
    "17058": {
      "op": "POP"
    },
    "17059": {
      "jump": "o",
      "op": "JUMP"
    },
    "17060": {
      "op": "JUMPDEST"
    },
    "17061": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "17063": {
      "op": "DUP2"
    },
    "17064": {
      "op": "MSTORE"
    },
    "17065": {
      "op": "DUP8"
    },
    "17066": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "17068": {
      "op": "DUP3"
    },
    "17069": {
      "op": "ADD"
    },
    "17070": {
      "op": "MSTORE"
    },
    "17071": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17073": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "17076": {
      "op": "DUP10"
    },
    "17077": {
      "op": "DUP12"
    },
    "17078": {
      "op": "DUP3"
    },
    "17079": {
      "op": "DUP6"
    },
    "17080": {
      "op": "ADD"
    },
    "17081": {
      "op": "CALLDATACOPY"
    },
    "17082": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17084": {
      "op": "DUP11"
    },
    "17085": {
      "op": "DUP5"
    },
    "17086": {
      "op": "ADD"
    },
    "17087": {
      "op": "DUP3"
    },
    "17088": {
      "op": "ADD"
    },
    "17089": {
      "op": "MSTORE"
    },
    "17090": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "17096": {
      "op": "SWAP9"
    },
    "17097": {
      "op": "DUP10"
    },
    "17098": {
      "op": "AND"
    },
    "17099": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17101": {
      "op": "DUP5"
    },
    "17102": {
      "op": "ADD"
    },
    "17103": {
      "op": "MSTORE"
    },
    "17104": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "17106": {
      "op": "SWAP8"
    },
    "17107": {
      "op": "SWAP1"
    },
    "17108": {
      "op": "SWAP8"
    },
    "17109": {
      "op": "AND"
    },
    "17110": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "17112": {
      "op": "DUP4"
    },
    "17113": {
      "op": "ADD"
    },
    "17114": {
      "op": "MSTORE"
    },
    "17115": {
      "op": "POP"
    },
    "17116": {
      "op": "PUSH3",
      "value": "0xFFFFFF"
    },
    "17120": {
      "op": "SWAP5"
    },
    "17121": {
      "op": "SWAP1"
    },
    "17122": {
      "op": "SWAP5"
    },
    "17123": {
      "op": "AND"
    },
    "17124": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "17126": {
      "op": "DUP6"
    },
    "17127": {
      "op": "ADD"
    },
    "17128": {
      "op": "MSTORE"
    },
    "17129": {
      "op": "SWAP2"
    },
    "17130": {
      "op": "DUP6"
    },
    "17131": {
      "op": "AND"
    },
    "17132": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "17134": {
      "op": "DUP5"
    },
    "17135": {
      "op": "ADD"
    },
    "17136": {
      "op": "MSTORE"
    },
    "17137": {
      "op": "SWAP1"
    },
    "17138": {
      "op": "SWAP4"
    },
    "17139": {
      "op": "AND"
    },
    "17140": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "17142": {
      "op": "DUP3"
    },
    "17143": {
      "op": "ADD"
    },
    "17144": {
      "op": "MSTORE"
    },
    "17145": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "17148": {
      "op": "SWAP1"
    },
    "17149": {
      "op": "SWAP3"
    },
    "17150": {
      "op": "AND"
    },
    "17151": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "17153": {
      "op": "DUP4"
    },
    "17154": {
      "op": "ADD"
    },
    "17155": {
      "op": "MSTORE"
    },
    "17156": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "17158": {
      "op": "SWAP1"
    },
    "17159": {
      "op": "SWAP3"
    },
    "17160": {
      "op": "ADD"
    },
    "17161": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "17163": {
      "op": "NOT"
    },
    "17164": {
      "op": "AND"
    },
    "17165": {
      "op": "ADD"
    },
    "17166": {
      "op": "ADD"
    },
    "17167": {
      "op": "SWAP2"
    },
    "17168": {
      "op": "SWAP1"
    },
    "17169": {
      "op": "POP"
    },
    "17170": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "239888b4716195433bf562b5a74e7a7e889ac80f",
  "source": "pragma solidity 0.8.15;\n// SPDX-License-Identifier: Unlicensed\n\nimport \"./wizards.sol\";\nimport \"./interfaces/IERC20.sol\";\nimport \"./interfaces/IERC165.sol\";\nimport \"./interfaces/IERC721.sol\";\nimport \"./interfaces/IERC721Enumerable.sol\";\n//import \"./helpers/base64.sol\";\nimport './helpers/ERC721A.sol';\nimport './helpers/ERC721.sol';\nimport './helpers/ERC165.sol';\nimport './helpers/Ownable.sol';\nimport './helpers/Context.sol';\nimport './helpers/ReentrancyGuard.sol';\nimport './helpers/ERC2981Collection.sol';\nimport './libraries/Strings.sol';\nimport './libraries/Address.sol';\nimport './WizardTower.sol';\nimport {DoubleEndedQueue} from \"@openzeppelin/contracts/utils/structs/DoubleEndedQueue.sol\";\n\n//contract BMMultipass is ERC721Enumerable, ReentrancyGuard, Ownable {\ncontract Governance is ReentrancyGuard, Ownable {\n\n//    IERC20  ecosystemTokens;\n    Wizards wizardsNFT;\n    WizardTower wizardTower;\n\n    // the value stored here is shifted over by one because 0 means no vote, 1 means voting for slot 0\n    mapping (uint256 => mapping (uint256 => uint256)) public proposalToNFTVotes;\n\n    // used to find active tasks\n    struct TaskType {\n        mapping (uint40 => uint256) nextActiveTimeThreshold; // for recurring tasks -- todo -- add waitTime or ...\n        string IPFSHash; // holds description\n        bool paused;\n        uint40 proposalID; // proposal ID or 0 if task\n        uint8 numFieldsToHash;\n        uint24 timeBonus;\n        uint40 begTimestamp;\n        uint40 endTimestamp;\n        uint16 availableSlots;\n    }\n\n    // include parent???\n    struct Task {\n        string IPFSHash; // holds description\n        uint40 NFTID; // wizard ID of who is assigned task\n        bytes32 hash; // hashed input to be validated\n        bytes32 refuterHash; // correct hash according to refuter\n        uint8 numFieldsToHash; // input fields\n        uint24 timeBonus; // increases Wizard's activation time, in seconds\n//        uint8 strikes; // number of times confirmation has failed, use existence of refuterID\n        uint80 payment; //\n        uint16 verifierID; // wizardId of Verifier\n        uint16 refuterID; // wizardId of Verifier\n        uint40 verificationReservedTimestamp; // time when verification period ends\n    }\n\n    struct Proposal {\n        string IPFSHash;\n        uint16 numberOfOptions;\n        uint16[8] votes;\n        uint40 totalVotes;\n        uint40 begTimestamp;\n        uint40 endTimestamp;\n    }\n\n\n\n    TaskType[] public taskTypes; // we must keep task types low in quantity to avoid gas issues\n\n    // todo -- these should be dequeues\n    DoubleEndedQueue.Bytes32Deque public tasksWaitingConfirmation;\n//    uint256[] public tasksVerifying; // reduce size?\n\n//    DoubleEndedQueue.Bytes32Deque  public myQueue;\n\n    mapping (uint256 => Proposal) public proposals;\n    uint256 totalProposals;\n\n    mapping (uint256 => Task) public tasks;\n    uint256 public totalTasksAttempted;\n\n    // todo -- Adjustable\n    uint256 verificationTime = 10*60; // 10 minutes\n    uint256 taskVerificationTimeBonus = 1 days; // 1 day\n    uint256 boardSeats = 3;\n\n    event VerificationAssigned(uint256 wizardId, uint256 taskId, Task myTask);\n    event VerificationFailed(uint256 VerifierIdFirst, uint256 VerifierIdSecond, uint256 taskId);\n    event VerificationSucceeded(uint256 taskDoer, uint256 Verifier, uint256 taskId, bytes32 hash, bool isHashCorrect);\n    event HashTesting(bytes32 hash, bool isHashCorrect, bytes32 firstEncoded, bytes firstUnencoded);\n    event NewTaskTypeCreated(string _IPFSHash,uint40 _proposalID, uint8 _numFieldsToHash, uint24 _timeBonus,\n          uint40 _begTimestamp, uint40 _endTimestamp, uint16 _availableSlots);\n    event TaskCompleted(uint256 wizardId, uint256 taskId, string IPFSHash, uint256 data);\n\n    /////////////////////////////\n    //////  TEMP Functions ///////\n    /////////////////////////////\n\n    /*\n    function getFront() view external returns ( uint256) {\n        require(DoubleEndedQueue.length(myQueue)!=0, \"Empty Dequeue\");\n        return uint256(DoubleEndedQueue.front(myQueue));\n    }\n\n    function pushFront(bytes32 _data) external {\n    //  Task memory myTask = Task(\"0 - MYIPFSHASH\", 1, keccak256(4), 3, 4, 5, 6, 7);\n        DoubleEndedQueue.pushFront(myQueue,bytes32(_data));\n    }\n    */\n\n    /////////////////////////////\n    //////  Get Functions ///////\n    /////////////////////////////\n\n    function isCallerOnBoard() public view returns (bool) {\n        for(uint256 i =1; i <= boardSeats;){\n            if(wizardsNFT.ownerOf(wizardTower.getWizardOnFloor(i)) == msg.sender ){\n                return true;\n            }\n            unchecked{++i;}\n        }\n        return false;\n    }\n\n/*\n// todo -- delete this helper function\n    function getTaskTypeFields(uint256 _id) external view returns (uint8 ) {\n        return taskTypes[_id].numFieldsToHash;\n    }\n*/\n    function getTaskById(uint256 _taskId) external view returns (Task memory) {\n        return tasks[_taskId];\n    }\n\n    function getVotes(uint256 proposalID) external view returns (uint16[] memory) {\n        require(proposalID < totalProposals, \"no such proposal\");\n        uint16[] memory voteArray = new uint16[](proposals[proposalID].numberOfOptions);\n        for(uint256 i = 0; i< voteArray.length; i++){\n            voteArray[i] = proposals[proposalID].votes[i];\n        }\n        return voteArray;\n    }\n\n    function getWinningVote(uint256 proposalID) external view returns (uint256 ) {\n        require(proposalID < totalProposals, \"no such proposal\");\n        require( block.timestamp > proposals[proposalID].endTimestamp, \"voting still active\"); // todo -- end voting only on time? Or, what?\n        // todo -- is there a need to win by a certain percent?\n        uint256 winningVote;\n        uint256 winningVoteAmount;\n        uint256 tie=0;\n        for(uint256 i=0; i< proposals[proposalID].numberOfOptions; i++){ // start at 1 as 0 means no vote???\n            if(proposals[proposalID].votes[i] > winningVoteAmount) {\n                winningVoteAmount = proposals[proposalID].votes[i];\n                winningVote = i;\n                if (tie==1) { tie = 0;}\n            }\n            else if(proposals[proposalID].votes[i] == winningVoteAmount){\n                tie=1;\n            }\n        }\n        require(tie==0, \"there was a tie.\");\n        return winningVote;\n    }\n\n    // todo -- delete tasktype function\n\n    function areTasksAvailableToConfirm(uint256 _wizId) external view returns (bool) {\n        uint256 totalTasksSubmitted = DoubleEndedQueue.length(tasksWaitingConfirmation);\n        Task memory myTask;\n//        uint256 taskId;\n\n        // todo --implement randomness\n//        uint256[25] memory potentialTasks;\n\n        for(uint256 i =0; i < totalTasksSubmitted; ){\n            myTask = tasks[uint256(DoubleEndedQueue.at(tasksWaitingConfirmation,i))];\n            if( myTask.verificationReservedTimestamp < block.timestamp && myTask.NFTID != _wizId && myTask.refuterID!= _wizId){\n                return true;\n            }\n            unchecked{++i;}\n        }\n        return false;\n    }\n\n\n    function getTasksAssignedToWiz(uint40 _wizId) external view returns (Task[] memory, uint256[] memory) {\n        uint256 totalTasksSubmitted = DoubleEndedQueue.length(tasksWaitingConfirmation);\n        Task memory myTask;\n        uint256 taskId;\n        uint256 count=0;\n\n        for(uint256 i =0; i < totalTasksSubmitted; ){\n            taskId = uint256(DoubleEndedQueue.at(tasksWaitingConfirmation, i));\n            myTask = tasks[taskId];\n            if( myTask.verificationReservedTimestamp > block.timestamp && myTask.verifierID== _wizId){\n                unchecked{++count;}\n            }\n            unchecked{++i;}\n        }\n\n        // if no tasks, return empty array\n        if (count==0) {\n            Task[] memory myReturn= new Task[](1);\n            uint256[] memory myReturnUint= new uint256[](1);\n//            myReturn[0].NFTID=0;\n//            myReturn[0] = \"\";\n            return (myReturn, myReturnUint);\n        }\n\n        uint256 counter = 0;\n        Task[] memory myTasks = new Task[](count);\n        uint256[] memory myTaskIds = new uint256[](count);\n        for(uint256 i =0; i < totalTasksSubmitted; ){\n            taskId = uint256(DoubleEndedQueue.at(tasksWaitingConfirmation, i));\n            myTask = tasks[taskId];\n            if( myTask.verificationReservedTimestamp > block.timestamp && myTask.verifierID== _wizId){\n                myTasks[counter] = myTask;\n                myTaskIds[counter] = taskId;\n                unchecked{++counter;}\n                if(counter>count){break;}\n            }\n            unchecked{++i;}\n        }\n        return (myTasks, myTaskIds);\n    }\n\n\n    // todo -- see if we need to include IDs here -- may not need to\n    function getMyAvailableTaskTypes(uint40 _wizId) external view returns (string[] memory) {\n        uint256 count;\n        for(uint256 i=0; i< taskTypes.length;){\n            if(taskTypes[i].nextActiveTimeThreshold[_wizId] < block.timestamp\n            && taskTypes[i].begTimestamp <= block.timestamp && taskTypes[i].endTimestamp > block.timestamp\n            && taskTypes[i].availableSlots > 1\n            ) {\n                unchecked{++count;}\n            }\n//            else {\n//                string[] memory myReturn= new string[](1);\n//                myReturn[0] = \"\";\n//                return myReturn;\n//            }\n            unchecked{++i;}\n        }\n\n        // if no tasks, return empty array\n        if (count==0) {\n            string[] memory myReturn= new string[](1);\n            myReturn[0] = \"\";\n            return myReturn;\n        }\n\n        string[] memory myTasks = new string[](count);\n        uint256 counter = 0;\n        for(uint256 i=0; i< taskTypes.length;){\n            if(taskTypes[i].nextActiveTimeThreshold[_wizId] < block.timestamp\n            && taskTypes[i].begTimestamp <= block.timestamp && taskTypes[i].endTimestamp > block.timestamp\n            && taskTypes[i].availableSlots > 1\n            ) {\n                myTasks[counter] = taskTypes[i].IPFSHash;\n                unchecked{++counter;}\n                if(counter >= count) {\n                    break;\n                }\n            }\n            unchecked{++i;}\n        }\n        return myTasks;\n    }\n\n\n    /////////////////////////////\n    //////  Set Functions ///////\n    /////////////////////////////\n\n    function setNFTAddress(address _addy) external onlyOwner {\n        wizardsNFT = Wizards(_addy);\n    }\n\n\n//    function setERC20Address(address _addy) external onlyOwner {\n//        ecosystemTokens = IERC20(_addy);\n//    }\n\n    function deleteTaskTypeByIPFSHash(string memory _IPFSHash) external {\n        for(uint256 i=0; i<taskTypes.length;){\n            if(keccak256(abi.encodePacked(taskTypes[i].IPFSHash)) == keccak256(abi.encodePacked(_IPFSHash))){\n//                taskTypes[i] = taskTypes[taskTypes.length-1];\n                TaskType storage myTaskType = taskTypes[i];\n                TaskType storage displacedTaskType = taskTypes[taskTypes.length-1];\n//                myTaskType.nextActiveTimeThreshold = displacedTaskType.nextActiveTimeThreshold;\n                myTaskType = displacedTaskType;\n                delete taskTypes[taskTypes.length-1];\n                // todo see if this works at all\n//        mapping (uint40 => uint256) nextActiveTimeThreshold; // for recurring tasks -- todo -- add waitTime or ...\n//        string IPFSHash; // holds description\n//        bool paused;\n//        uint40 proposalID; // proposal ID or 0 if task\n//        uint8 numFieldsToHash;\n//        uint24 timeBonus;\n//        uint40 begTimestamp;\n//        uint40 endTimestamp;\n//        uint16 availableSlots;\n\n\n                delete taskTypes[taskTypes.length-1];\n                break;\n            }\n            unchecked{++i;}\n        }\n    }\n\n\n\n    //////////////////////////////\n    //////  Main Functions ///////\n    //////////////////////////////\n\n    /** @dev Constructor for HOADAO\n        @param _nft -- contract address for NFTs\n      */\n    constructor(address _nft, address _wizardTower){\n//        ecosystemTokens = IERC20(_erc20);\n        wizardsNFT = Wizards(_nft);\n        wizardTower = WizardTower(_wizardTower);\n\n//        contractSettings = ContractSettings({\n//        });\n\n    }\n\n    // Required to receive ETH\n    receive() external payable {\n    }\n\n    function vote(uint256 proposalID, uint256 NFTID, uint256 _vote) external onlyMember {\n        require(proposalID < totalProposals, \"no such proposal\");\n        require(wizardsNFT.ownerOf(NFTID)==msg.sender, \"not owner of NFT\");\n        require(proposalToNFTVotes[proposalID][NFTID]==0, \"already voted\");\n        require(_vote!=0 && _vote <= proposals[proposalID].numberOfOptions);\n        require(block.timestamp < proposals[proposalID].endTimestamp);\n        proposalToNFTVotes[proposalID][NFTID] = _vote + 1; // vote reference shifted by one\n        proposals[proposalID].votes[_vote] += 1; // increment votes\n        proposals[proposalID].totalVotes += 1;\n    }\n\n    // votes won't need to be confirmed\n    function createProposal(string calldata _IPFSHash, uint16 _numberOfOptions, uint24 _timeBonus, uint40 _begTimestamp, uint40 _endTimestamp, uint16 _availableSlots) external onlyBoard {\n        require(_numberOfOptions > 1 && _numberOfOptions < 257, \"invalid number of options\");\n        totalProposals += 1; // keep nothing at 0\n        Proposal storage myProposal = proposals[totalProposals];\n            myProposal.begTimestamp = _begTimestamp;\n            myProposal.endTimestamp = _endTimestamp;\n            myProposal.numberOfOptions = _numberOfOptions;\n            myProposal.IPFSHash = _IPFSHash;\n\n        _createTaskType(_IPFSHash, uint40(totalProposals), 0, _timeBonus, _begTimestamp, _endTimestamp, _availableSlots);\n        // todo --  emit event\n    }\n\n\n    function createTaskType(string calldata _IPFSHash, uint8 _numFieldsToHash, uint24 _timeBonus, uint40 _begTimestamp,\n                uint40 _endTimestamp, uint16 _availableSlots) external onlyBoard {\n        _createTaskType(_IPFSHash, 0, _numFieldsToHash, _timeBonus, _begTimestamp, _endTimestamp, _availableSlots);\n    }\n\n    function _createTaskType(string calldata _IPFSHash, uint40 _proposalID, uint8 _numFieldsToHash, uint24 _timeBonus,\n             uint40 _begTimestamp, uint40 _endTimestamp, uint16 _availableSlots) internal {\n        uint256 taskTypesLength = taskTypes.length;\n        taskTypes.push();\n        TaskType storage newTaskType = taskTypes[taskTypesLength];\n            newTaskType.IPFSHash =_IPFSHash;\n            newTaskType.paused = false;\n            newTaskType.proposalID = _proposalID;\n            newTaskType.numFieldsToHash = _numFieldsToHash;\n            newTaskType.timeBonus = _timeBonus;\n            newTaskType.begTimestamp = _begTimestamp;\n            newTaskType.endTimestamp = _endTimestamp;\n            newTaskType.availableSlots = _availableSlots;\n        // todo --  emit event\n        emit NewTaskTypeCreated(_IPFSHash, _proposalID, _numFieldsToHash, _timeBonus, _begTimestamp, _endTimestamp, _availableSlots);\n    }\n\n\n    function claimRandomTaskForVerification(uint256 _wizId) external {\n        uint256 totalTasksSubmitted = DoubleEndedQueue.length(tasksWaitingConfirmation);\n        Task memory myTask;\n        uint256 taskId;\n\n        // todo --implement randomness\n        // uint256[25] memory potentialTasks;\n\n        for(uint256 i =0; i < totalTasksSubmitted; ){\n            taskId = uint256(DoubleEndedQueue.at(tasksWaitingConfirmation, i));\n            myTask = tasks[taskId];\n            if( myTask.verificationReservedTimestamp < block.timestamp && myTask.NFTID != _wizId && myTask.refuterID!= _wizId){\n//                taskId = uint256(DoubleEndedQueue.at(tasksWaitingConfirmation, i));\n//                myTask = tasks[taskId];\n\n                // update task\n                myTask.verifierID = uint16(_wizId);\n                myTask.verificationReservedTimestamp = uint40(block.timestamp + verificationTime);\n                tasks[taskId] = myTask;\n                emit VerificationAssigned(_wizId, taskId, tasks[taskId]);\n            }\n            unchecked{++i;}\n        }\n//        emit VerificationAssigned(_wizId, taskId);\n    }\n\n    function completeTask(string memory _IPFSHash, bytes32 _hash, uint40 _wizId) external {\n        // IPFS, hash, wizardID\n\n        // find the task type -- can't be too many\n        for(uint256 i = 0; i<taskTypes.length;){\n            if(keccak256(abi.encode(taskTypes[i].IPFSHash)) == keccak256(abi.encode(_IPFSHash))){ // hashed to compare\n                // verify it is viable\n                require(taskTypes[i].begTimestamp <= block.timestamp && block.timestamp <= taskTypes[i].endTimestamp, \"Outside time period\");\n                // create new task\n                Task memory myTask = Task(_IPFSHash,_wizId, _hash, 0, taskTypes[i].numFieldsToHash, taskTypes[i].timeBonus, 0, 0, 0, 0);\n                DoubleEndedQueue.pushBack(tasksWaitingConfirmation, bytes32(totalTasksAttempted));\n                tasks[totalTasksAttempted] = myTask;\n                totalTasksAttempted+=1;\n\n                // update TaskTypes\n                taskTypes[i].nextActiveTimeThreshold[_wizId] = block.timestamp + 1 days;\n                taskTypes[i].availableSlots = taskTypes[i].availableSlots - 1;\n\n                emit TaskCompleted(_wizId,totalTasksAttempted -1, _IPFSHash, block.timestamp);\n                break;\n            }\n            unchecked{++i;}\n        }\n        // failed\n\n\n    }\n\n    function testHashing(bytes32 _givenHash, bytes32[] memory _fields, bool _refuted) external {\n        bytes memory unencoded = abi.encodePacked(_fields[0]);\n        if(_refuted) {\n            for(uint256 i = 0; i < _fields.length;){\n                _fields[i] = keccak256(abi.encodePacked(_fields[i]));\n                unchecked{++i;}\n            }\n        }\n        bytes32 myHash = keccak256(abi.encodePacked(_fields));\n        emit HashTesting(myHash, myHash==_givenHash, _fields[0], unencoded);\n    }\n\n// working for regular but not refuted.\n//    function testHashing(bytes32 _givenHash, bytes32[] memory _fields, bool _refuted) external {\n//        bytes memory unencoded = abi.encodePacked(_fields[0]);\n//        if(_refuted) {\n//            for(uint256 i = 0; i < _fields.length;){\n//                _fields[i] = keccak256(abi.encodePacked(_fields[i]));\n//                unchecked{++i;}\n//            }\n//        }\n//        bytes32 myHash = keccak256(abi.encodePacked(_fields));\n//        emit HashTesting(myHash, myHash==_givenHash, _fields[0], unencoded);\n//    }\n\n\n\n    // @dev -- hash structure: leaves of merkle tree are hashed. Unrefuted tasks must send in hashed leafs. Refuted, unhashed.\n    function submitVerification(uint256 _wizId, uint256 _taskID, bytes32[] memory _fields) external {\n    //todo -- uncomment out requirement (testing)\n        require(wizardsNFT.ownerOf(_wizId) == msg.sender && tasks[_taskID].verifierID==_wizId, \"Must be owner of assigned wizard\");\n        require(_fields.length > 0);\n\n        Task memory myTask = tasks[_taskID];\n        uint256 count = 0;\n        bool deleteTaskFlag = true;\n\n        // hash leaves if there is a refuter\n        if(myTask.refuterID > 0) {\n            for(uint256 i = 0; i < _fields.length;){\n                _fields[i] = keccak256(abi.encodePacked(_fields[i]));\n                unchecked{++i;}\n            }\n        }\n        bytes32 myHash = keccak256(abi.encodePacked(_fields));\n\n        uint256 correctHash = myTask.hash == myHash ? 1 : 0;\n\n        emit VerificationSucceeded(_wizId, myTask.NFTID, _taskID, myHash, correctHash==1);\n\n        if (correctHash ==1){\n            // if refuterId exists, then refuter gets no refund\n            uint256 split = myTask.payment/2;\n            address payable taskSubmitter = payable(wizardsNFT.ownerOf(myTask.verifierID));\n//            address payable verifier = msg.sender;\n\n            wizardsNFT.verifyDuty(myTask.NFTID, myTask.timeBonus);\n            wizardsNFT.verifyDuty(myTask.verifierID, taskVerificationTimeBonus);\n\n            // myTask.payment=0; // thwart reentrancy attacks\n            delete tasks[_taskID];\n\n            // send to task submitter\n            (bool sent, bytes memory data) = taskSubmitter.call{value: split}(\"\");\n            require(sent, \"Failed to send Ether\");\n\n            // send to verifier\n            (sent, data) = msg.sender.call{value: split}(\"\");\n            require(sent, \"Failed to send Ether\");\n\n        }\n        else { // if incorrect Hash\n            // case 2 -- if no match, send to DAO\n\n\n            if(myTask.refuterID==0){\n                myTask.refuterID=uint16(_wizId);\n                myTask.refuterHash=myHash;\n                tasks[_taskID] = myTask;\n                deleteTaskFlag = false;\n            }\n\n            // case 1 -- if matches hash of refuter, split\n            if(myTask.refuterHash==myHash){\n                uint256 split = myTask.payment/2;\n                address payable taskRefuter = payable(wizardsNFT.ownerOf(myTask.refuterID));\n\n                wizardsNFT.verifyDuty(myTask.refuterID, taskVerificationTimeBonus);\n                wizardsNFT.verifyDuty(_wizId, taskVerificationTimeBonus);\n\n                // myTask.payment=0; // thwart reentrancy attacks\n                delete tasks[_taskID];\n\n                // send to task submitter\n                (bool sent, bytes memory data) = taskRefuter.call{value: split}(\"\");\n                require(sent, \"Failed to send Ether\");\n\n                // send to verifier\n                (sent, data) = msg.sender.call{value: split}(\"\");\n                require(sent, \"Failed to send Ether\");\n\n                // emit event\n            }\n            else{\n                // no agreement in the 3 submissions\n                // send ETH to DAO\n                uint256 split = myTask.payment;\n                delete tasks[_taskID];\n                (bool sent, bytes memory data) = owner().call{value: split}(\"\"); // todo -- decide on how to structure DAO address\n                require(sent, \"Failed to send Ether\");\n\n                // emit event\n            }\n        }\n\n            // delete task from double ended queue\n        if(deleteTaskFlag){\n            uint256 totalTasksSubmitted = DoubleEndedQueue.length(tasksWaitingConfirmation);\n//            Task memory myTask;\n\n            // delete task from doubleEndedQueue\n            for(uint256 i =0; i < totalTasksSubmitted; ){\n                if( uint256(DoubleEndedQueue.at(tasksWaitingConfirmation, i))==_taskID){\n                    bytes32 prevFront = DoubleEndedQueue.popFront(tasksWaitingConfirmation);\n                    if(i!=0){ // add back on if we weren't meant to remove front\n                        tasksWaitingConfirmation._data[int128(tasksWaitingConfirmation._begin + int(i))] = prevFront;\n                    }\n                }\n                unchecked{++i;}\n            }\n        }\n\n    }\n\n    //////////////////////\n    ////// Modifiers /////\n    //////////////////////\n\n    modifier onlyAdmin() {\n        require(false,'Must be admin');\n        _;\n    }\n\n    modifier onlyNFTOwner() {\n        require(false,'Must be admin');\n        _;\n    }\n\n    modifier onlyLessee() {\n        require(false,'Must be lessee');\n        _;\n    }\n\n    modifier onlyMember() { // todo -- onlyMember\n        require(false,'Must be member');\n        _;\n    }\n\n    // top x in tower?\n    modifier onlyBoard() {\n        // check caller against top 3 wizards on tower\n        require(isCallerOnBoard(), \"Must be on the board\");\n//        require(true,'Must be on the board'); // todo -- onlyBoard\n        _;\n    }\n\n\n\n\n\n}",
  "sourceMap": "771:22878:2:-:0;;;2978:5;2951:32;;3039:6;3003:42;;3081:1;3060:22;;12029:247;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1667:1:13;1778:7;:22;889:23:12;679:10:6;889:9:12;:23::i;:::-;12130:10:2;:26;;-1:-1:-1;;;;;12130:26:2;;;-1:-1:-1;;;;;;12130:26:2;;;;;;;12166:11;:39;;;;;;;;;;;771:22878;;2101:173:12;2176:6;;;-1:-1:-1;;;;;2193:17:12;;;-1:-1:-1;;;;;;2193:17:12;;;;;;;2226:40;;2176:6;;;2193:17;2176:6;;2226:40;;2157:16;;2226:40;2146:128;2101:173;:::o;14:177:24:-;93:13;;-1:-1:-1;;;;;135:31:24;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:293::-;275:6;283;336:2;324:9;315:7;311:23;307:32;304:52;;;352:1;349;342:12;304:52;375:40;405:9;375:40;:::i;:::-;365:50;;434:49;479:2;468:9;464:18;434:49;:::i;:::-;424:59;;196:293;;;;;:::o;:::-;771:22878:2;;;;;;",
  "sourcePath": "contracts/Governance.sol",
  "type": "contract"
}