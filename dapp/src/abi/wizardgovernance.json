{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_nft",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_wizardTower",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "Empty",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "OutOfBounds",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "hash",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "isHashCorrect",
          "type": "bool"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "firstEncoded",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "firstUnencoded",
          "type": "bytes"
        }
      ],
      "name": "HashTesting",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "_IPFSHash",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint40",
          "name": "_proposalID",
          "type": "uint40"
        },
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "_numFieldsToHash",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "uint24",
          "name": "_timeBonus",
          "type": "uint24"
        },
        {
          "indexed": false,
          "internalType": "uint40",
          "name": "_begTimestamp",
          "type": "uint40"
        },
        {
          "indexed": false,
          "internalType": "uint40",
          "name": "_endTimestamp",
          "type": "uint40"
        },
        {
          "indexed": false,
          "internalType": "uint16",
          "name": "_availableSlots",
          "type": "uint16"
        }
      ],
      "name": "NewTaskTypeCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "wizardId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "taskId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "IPFSHash",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "data",
          "type": "uint256"
        }
      ],
      "name": "TaskCompleted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "wizardId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "taskId",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "string",
              "name": "IPFSHash",
              "type": "string"
            },
            {
              "internalType": "uint40",
              "name": "NFTID",
              "type": "uint40"
            },
            {
              "internalType": "bytes32",
              "name": "hash",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "refuterHash",
              "type": "bytes32"
            },
            {
              "internalType": "uint8",
              "name": "numFieldsToHash",
              "type": "uint8"
            },
            {
              "internalType": "uint24",
              "name": "timeBonus",
              "type": "uint24"
            },
            {
              "internalType": "uint80",
              "name": "payment",
              "type": "uint80"
            },
            {
              "internalType": "uint16",
              "name": "verifierID",
              "type": "uint16"
            },
            {
              "internalType": "uint16",
              "name": "refuterID",
              "type": "uint16"
            },
            {
              "internalType": "uint40",
              "name": "verificationReservedTimestamp",
              "type": "uint40"
            }
          ],
          "indexed": false,
          "internalType": "struct Governance.Task",
          "name": "myTask",
          "type": "tuple"
        }
      ],
      "name": "VerificationAssigned",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "VerifierIdFirst",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "VerifierIdSecond",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "taskId",
          "type": "uint256"
        }
      ],
      "name": "VerificationFailed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "taskDoer",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "Verifier",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "taskId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "hash",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "isHashCorrect",
          "type": "bool"
        }
      ],
      "name": "VerificationSucceeded",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_wizId",
          "type": "uint256"
        }
      ],
      "name": "areTasksAvailableToConfirm",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_wizId",
          "type": "uint256"
        }
      ],
      "name": "claimRandomTaskForVerification",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_IPFSHash",
          "type": "string"
        },
        {
          "internalType": "bytes32",
          "name": "_hash",
          "type": "bytes32"
        },
        {
          "internalType": "uint40",
          "name": "_wizId",
          "type": "uint40"
        }
      ],
      "name": "completeTask",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_IPFSHash",
          "type": "string"
        },
        {
          "internalType": "uint16",
          "name": "_numberOfOptions",
          "type": "uint16"
        },
        {
          "internalType": "uint24",
          "name": "_timeBonus",
          "type": "uint24"
        },
        {
          "internalType": "uint40",
          "name": "_begTimestamp",
          "type": "uint40"
        },
        {
          "internalType": "uint40",
          "name": "_endTimestamp",
          "type": "uint40"
        },
        {
          "internalType": "uint16",
          "name": "_availableSlots",
          "type": "uint16"
        }
      ],
      "name": "createProposal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_IPFSHash",
          "type": "string"
        },
        {
          "internalType": "uint8",
          "name": "_numFieldsToHash",
          "type": "uint8"
        },
        {
          "internalType": "uint24",
          "name": "_timeBonus",
          "type": "uint24"
        },
        {
          "internalType": "uint40",
          "name": "_begTimestamp",
          "type": "uint40"
        },
        {
          "internalType": "uint40",
          "name": "_endTimestamp",
          "type": "uint40"
        },
        {
          "internalType": "uint16",
          "name": "_availableSlots",
          "type": "uint16"
        }
      ],
      "name": "createTaskType",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_IPFSHash",
          "type": "string"
        }
      ],
      "name": "deleteTaskTypeByIPFSHash",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint40",
          "name": "_wizId",
          "type": "uint40"
        }
      ],
      "name": "getMyAvailableTaskTypes",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_taskId",
          "type": "uint256"
        }
      ],
      "name": "getTaskById",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "IPFSHash",
              "type": "string"
            },
            {
              "internalType": "uint40",
              "name": "NFTID",
              "type": "uint40"
            },
            {
              "internalType": "bytes32",
              "name": "hash",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "refuterHash",
              "type": "bytes32"
            },
            {
              "internalType": "uint8",
              "name": "numFieldsToHash",
              "type": "uint8"
            },
            {
              "internalType": "uint24",
              "name": "timeBonus",
              "type": "uint24"
            },
            {
              "internalType": "uint80",
              "name": "payment",
              "type": "uint80"
            },
            {
              "internalType": "uint16",
              "name": "verifierID",
              "type": "uint16"
            },
            {
              "internalType": "uint16",
              "name": "refuterID",
              "type": "uint16"
            },
            {
              "internalType": "uint40",
              "name": "verificationReservedTimestamp",
              "type": "uint40"
            }
          ],
          "internalType": "struct Governance.Task",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint40",
          "name": "_wizId",
          "type": "uint40"
        }
      ],
      "name": "getTasksAssignedToWiz",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "IPFSHash",
              "type": "string"
            },
            {
              "internalType": "uint40",
              "name": "NFTID",
              "type": "uint40"
            },
            {
              "internalType": "bytes32",
              "name": "hash",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "refuterHash",
              "type": "bytes32"
            },
            {
              "internalType": "uint8",
              "name": "numFieldsToHash",
              "type": "uint8"
            },
            {
              "internalType": "uint24",
              "name": "timeBonus",
              "type": "uint24"
            },
            {
              "internalType": "uint80",
              "name": "payment",
              "type": "uint80"
            },
            {
              "internalType": "uint16",
              "name": "verifierID",
              "type": "uint16"
            },
            {
              "internalType": "uint16",
              "name": "refuterID",
              "type": "uint16"
            },
            {
              "internalType": "uint40",
              "name": "verificationReservedTimestamp",
              "type": "uint40"
            }
          ],
          "internalType": "struct Governance.Task[]",
          "name": "",
          "type": "tuple[]"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalID",
          "type": "uint256"
        }
      ],
      "name": "getVotes",
      "outputs": [
        {
          "internalType": "uint16[]",
          "name": "",
          "type": "uint16[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalID",
          "type": "uint256"
        }
      ],
      "name": "getWinningVote",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isCallerOnBoard",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_wizId",
          "type": "uint256"
        }
      ],
      "name": "isMyWizardOnBoard",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "proposalToNFTVotes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "proposals",
      "outputs": [
        {
          "internalType": "string",
          "name": "IPFSHash",
          "type": "string"
        },
        {
          "internalType": "uint16",
          "name": "numberOfOptions",
          "type": "uint16"
        },
        {
          "internalType": "uint40",
          "name": "totalVotes",
          "type": "uint40"
        },
        {
          "internalType": "uint40",
          "name": "begTimestamp",
          "type": "uint40"
        },
        {
          "internalType": "uint40",
          "name": "endTimestamp",
          "type": "uint40"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_addy",
          "type": "address"
        }
      ],
      "name": "setNFTAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_wizId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_taskID",
          "type": "uint256"
        },
        {
          "internalType": "bytes32[]",
          "name": "_fields",
          "type": "bytes32[]"
        }
      ],
      "name": "submitVerification",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "taskTypes",
      "outputs": [
        {
          "internalType": "string",
          "name": "IPFSHash",
          "type": "string"
        },
        {
          "internalType": "bool",
          "name": "paused",
          "type": "bool"
        },
        {
          "internalType": "uint40",
          "name": "proposalID",
          "type": "uint40"
        },
        {
          "internalType": "uint8",
          "name": "numFieldsToHash",
          "type": "uint8"
        },
        {
          "internalType": "uint24",
          "name": "timeBonus",
          "type": "uint24"
        },
        {
          "internalType": "uint40",
          "name": "begTimestamp",
          "type": "uint40"
        },
        {
          "internalType": "uint40",
          "name": "endTimestamp",
          "type": "uint40"
        },
        {
          "internalType": "uint16",
          "name": "availableSlots",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "tasks",
      "outputs": [
        {
          "internalType": "string",
          "name": "IPFSHash",
          "type": "string"
        },
        {
          "internalType": "uint40",
          "name": "NFTID",
          "type": "uint40"
        },
        {
          "internalType": "bytes32",
          "name": "hash",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "refuterHash",
          "type": "bytes32"
        },
        {
          "internalType": "uint8",
          "name": "numFieldsToHash",
          "type": "uint8"
        },
        {
          "internalType": "uint24",
          "name": "timeBonus",
          "type": "uint24"
        },
        {
          "internalType": "uint80",
          "name": "payment",
          "type": "uint80"
        },
        {
          "internalType": "uint16",
          "name": "verifierID",
          "type": "uint16"
        },
        {
          "internalType": "uint16",
          "name": "refuterID",
          "type": "uint16"
        },
        {
          "internalType": "uint40",
          "name": "verificationReservedTimestamp",
          "type": "uint40"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tasksWaitingConfirmation",
      "outputs": [
        {
          "internalType": "int128",
          "name": "_begin",
          "type": "int128"
        },
        {
          "internalType": "int128",
          "name": "_end",
          "type": "int128"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_givenHash",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32[]",
          "name": "_fields",
          "type": "bytes32[]"
        },
        {
          "internalType": "bool",
          "name": "_refuted",
          "type": "bool"
        }
      ],
      "name": "testHashing",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalTasksAttempted",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalID",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "NFTID",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_vote",
          "type": "uint256"
        }
      ],
      "name": "vote",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "allSourcePaths": {
    "0": "C:/Users/David/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.7.3/contracts/utils/math/SafeCast.sol",
    "1": "C:/Users/David/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.7.3/contracts/utils/structs/DoubleEndedQueue.sol",
    "11": "contracts/helpers/Ownable.sol",
    "12": "contracts/helpers/ReentrancyGuard.sol",
    "2": "contracts/Governance.sol",
    "21": "contracts/libraries/Strings.sol",
    "22": "contracts/wizards.sol",
    "4": "contracts/WizardTower.sol",
    "5": "contracts/helpers/Context.sol"
  },
  "ast": {
    "absolutePath": "contracts/Governance.sol",
    "exportedSymbols": {
      "Address": [
        5906
      ],
      "Context": [
        3236
      ],
      "DoubleEndedQueue": [
        3215
      ],
      "ERC165": [
        3260
      ],
      "ERC2981Collection": [
        3344
      ],
      "ERC721": [
        4163
      ],
      "ERC721A": [
        5234
      ],
      "ERC721Enumerable": [
        9455
      ],
      "Governance": [
        2021
      ],
      "IERC165": [
        5390
      ],
      "IERC20": [
        5463
      ],
      "IERC2981": [
        9071
      ],
      "IERC721": [
        5579
      ],
      "IERC721Enumerable": [
        5610
      ],
      "IERC721Metadata": [
        9098
      ],
      "IERC721Receiver": [
        9116
      ],
      "Ownable": [
        5338
      ],
      "ReentrancyGuard": [
        5378
      ],
      "RelativeTimeVault": [
        2851
      ],
      "Strings": [
        6109
      ],
      "WizardTower": [
        2874
      ],
      "Wizards": [
        7202
      ]
    },
    "id": 2022,
    "license": "Unlicensed",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "0.8",
          ".15"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:2"
      },
      {
        "absolutePath": "contracts/wizards.sol",
        "file": "./wizards.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2022,
        "sourceUnit": 7203,
        "src": "64:23:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/interfaces/IERC20.sol",
        "file": "./interfaces/IERC20.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2022,
        "sourceUnit": 5464,
        "src": "88:33:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/interfaces/IERC165.sol",
        "file": "./interfaces/IERC165.sol",
        "id": 4,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2022,
        "sourceUnit": 5391,
        "src": "122:34:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/interfaces/IERC721.sol",
        "file": "./interfaces/IERC721.sol",
        "id": 5,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2022,
        "sourceUnit": 5580,
        "src": "157:34:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/interfaces/IERC721Enumerable.sol",
        "file": "./interfaces/IERC721Enumerable.sol",
        "id": 6,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2022,
        "sourceUnit": 5611,
        "src": "192:44:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/helpers/ERC721A.sol",
        "file": "./helpers/ERC721A.sol",
        "id": 7,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2022,
        "sourceUnit": 5235,
        "src": "270:31:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/helpers/ERC721.sol",
        "file": "./helpers/ERC721.sol",
        "id": 8,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2022,
        "sourceUnit": 4164,
        "src": "302:30:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/helpers/ERC165.sol",
        "file": "./helpers/ERC165.sol",
        "id": 9,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2022,
        "sourceUnit": 3261,
        "src": "333:30:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/helpers/Ownable.sol",
        "file": "./helpers/Ownable.sol",
        "id": 10,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2022,
        "sourceUnit": 5339,
        "src": "364:31:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/helpers/Context.sol",
        "file": "./helpers/Context.sol",
        "id": 11,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2022,
        "sourceUnit": 3237,
        "src": "396:31:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/helpers/ReentrancyGuard.sol",
        "file": "./helpers/ReentrancyGuard.sol",
        "id": 12,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2022,
        "sourceUnit": 5379,
        "src": "428:39:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/helpers/ERC2981Collection.sol",
        "file": "./helpers/ERC2981Collection.sol",
        "id": 13,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2022,
        "sourceUnit": 3345,
        "src": "468:41:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/libraries/Strings.sol",
        "file": "./libraries/Strings.sol",
        "id": 14,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2022,
        "sourceUnit": 6110,
        "src": "510:33:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/libraries/Address.sol",
        "file": "./libraries/Address.sol",
        "id": 15,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2022,
        "sourceUnit": 5907,
        "src": "544:33:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/WizardTower.sol",
        "file": "./WizardTower.sol",
        "id": 16,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2022,
        "sourceUnit": 2875,
        "src": "578:27:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/David/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.7.3/contracts/utils/structs/DoubleEndedQueue.sol",
        "file": "@openzeppelin/contracts/utils/structs/DoubleEndedQueue.sol",
        "id": 18,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2022,
        "sourceUnit": 3216,
        "src": "606:92:2",
        "symbolAliases": [
          {
            "foreign": {
              "id": 17,
              "name": "DoubleEndedQueue",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 3215,
              "src": "614:16:2",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 19,
              "name": "ReentrancyGuard",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 5378,
              "src": "794:15:2"
            },
            "id": 20,
            "nodeType": "InheritanceSpecifier",
            "src": "794:15:2"
          },
          {
            "baseName": {
              "id": 21,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 5338,
              "src": "811:7:2"
            },
            "id": 22,
            "nodeType": "InheritanceSpecifier",
            "src": "811:7:2"
          }
        ],
        "canonicalName": "Governance",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 2021,
        "linearizedBaseContracts": [
          2021,
          5338,
          3236,
          5378
        ],
        "name": "Governance",
        "nameLocation": "780:10:2",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 25,
            "mutability": "mutable",
            "name": "wizardsNFT",
            "nameLocation": "865:10:2",
            "nodeType": "VariableDeclaration",
            "scope": 2021,
            "src": "857:18:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Wizards_$7202",
              "typeString": "contract Wizards"
            },
            "typeName": {
              "id": 24,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 23,
                "name": "Wizards",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 7202,
                "src": "857:7:2"
              },
              "referencedDeclaration": 7202,
              "src": "857:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Wizards_$7202",
                "typeString": "contract Wizards"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 28,
            "mutability": "mutable",
            "name": "wizardTower",
            "nameLocation": "893:11:2",
            "nodeType": "VariableDeclaration",
            "scope": 2021,
            "src": "881:23:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_WizardTower_$2874",
              "typeString": "contract WizardTower"
            },
            "typeName": {
              "id": 27,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 26,
                "name": "WizardTower",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2874,
                "src": "881:11:2"
              },
              "referencedDeclaration": 2874,
              "src": "881:11:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_WizardTower_$2874",
                "typeString": "contract WizardTower"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "6215597b",
            "id": 34,
            "mutability": "mutable",
            "name": "proposalToNFTVotes",
            "nameLocation": "1071:18:2",
            "nodeType": "VariableDeclaration",
            "scope": 2021,
            "src": "1014:75:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$",
              "typeString": "mapping(uint256 => mapping(uint256 => uint256))"
            },
            "typeName": {
              "id": 33,
              "keyType": {
                "id": 29,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1023:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1014:49:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                "typeString": "mapping(uint256 => mapping(uint256 => uint256))"
              },
              "valueType": {
                "id": 32,
                "keyType": {
                  "id": 30,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1043:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "nodeType": "Mapping",
                "src": "1034:28:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                  "typeString": "mapping(uint256 => uint256)"
                },
                "valueType": {
                  "id": 31,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1054:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "Governance.TaskType",
            "id": 55,
            "members": [
              {
                "constant": false,
                "id": 38,
                "mutability": "mutable",
                "name": "nextActiveTimeThreshold",
                "nameLocation": "1183:23:2",
                "nodeType": "VariableDeclaration",
                "scope": 55,
                "src": "1155:51:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_uint40_$_t_uint256_$",
                  "typeString": "mapping(uint40 => uint256)"
                },
                "typeName": {
                  "id": 37,
                  "keyType": {
                    "id": 35,
                    "name": "uint40",
                    "nodeType": "ElementaryTypeName",
                    "src": "1164:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "nodeType": "Mapping",
                  "src": "1155:27:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_uint40_$_t_uint256_$",
                    "typeString": "mapping(uint40 => uint256)"
                  },
                  "valueType": {
                    "id": 36,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1174:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 40,
                "mutability": "mutable",
                "name": "IPFSHash",
                "nameLocation": "1277:8:2",
                "nodeType": "VariableDeclaration",
                "scope": 55,
                "src": "1270:15:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 39,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "1270:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 42,
                "mutability": "mutable",
                "name": "paused",
                "nameLocation": "1321:6:2",
                "nodeType": "VariableDeclaration",
                "scope": 55,
                "src": "1316:11:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 41,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1316:4:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 44,
                "mutability": "mutable",
                "name": "proposalID",
                "nameLocation": "1344:10:2",
                "nodeType": "VariableDeclaration",
                "scope": 55,
                "src": "1337:17:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint40",
                  "typeString": "uint40"
                },
                "typeName": {
                  "id": 43,
                  "name": "uint40",
                  "nodeType": "ElementaryTypeName",
                  "src": "1337:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 46,
                "mutability": "mutable",
                "name": "numFieldsToHash",
                "nameLocation": "1398:15:2",
                "nodeType": "VariableDeclaration",
                "scope": 55,
                "src": "1392:21:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint8",
                  "typeString": "uint8"
                },
                "typeName": {
                  "id": 45,
                  "name": "uint8",
                  "nodeType": "ElementaryTypeName",
                  "src": "1392:5:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 48,
                "mutability": "mutable",
                "name": "timeBonus",
                "nameLocation": "1430:9:2",
                "nodeType": "VariableDeclaration",
                "scope": 55,
                "src": "1423:16:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint24",
                  "typeString": "uint24"
                },
                "typeName": {
                  "id": 47,
                  "name": "uint24",
                  "nodeType": "ElementaryTypeName",
                  "src": "1423:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint24",
                    "typeString": "uint24"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 50,
                "mutability": "mutable",
                "name": "begTimestamp",
                "nameLocation": "1456:12:2",
                "nodeType": "VariableDeclaration",
                "scope": 55,
                "src": "1449:19:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint40",
                  "typeString": "uint40"
                },
                "typeName": {
                  "id": 49,
                  "name": "uint40",
                  "nodeType": "ElementaryTypeName",
                  "src": "1449:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 52,
                "mutability": "mutable",
                "name": "endTimestamp",
                "nameLocation": "1485:12:2",
                "nodeType": "VariableDeclaration",
                "scope": 55,
                "src": "1478:19:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint40",
                  "typeString": "uint40"
                },
                "typeName": {
                  "id": 51,
                  "name": "uint40",
                  "nodeType": "ElementaryTypeName",
                  "src": "1478:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 54,
                "mutability": "mutable",
                "name": "availableSlots",
                "nameLocation": "1514:14:2",
                "nodeType": "VariableDeclaration",
                "scope": 55,
                "src": "1507:21:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint16",
                  "typeString": "uint16"
                },
                "typeName": {
                  "id": 53,
                  "name": "uint16",
                  "nodeType": "ElementaryTypeName",
                  "src": "1507:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "TaskType",
            "nameLocation": "1136:8:2",
            "nodeType": "StructDefinition",
            "scope": 2021,
            "src": "1129:406:2",
            "visibility": "public"
          },
          {
            "canonicalName": "Governance.Task",
            "id": 76,
            "members": [
              {
                "constant": false,
                "id": 57,
                "mutability": "mutable",
                "name": "IPFSHash",
                "nameLocation": "1595:8:2",
                "nodeType": "VariableDeclaration",
                "scope": 76,
                "src": "1588:15:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 56,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "1588:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 59,
                "mutability": "mutable",
                "name": "NFTID",
                "nameLocation": "1641:5:2",
                "nodeType": "VariableDeclaration",
                "scope": 76,
                "src": "1634:12:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint40",
                  "typeString": "uint40"
                },
                "typeName": {
                  "id": 58,
                  "name": "uint40",
                  "nodeType": "ElementaryTypeName",
                  "src": "1634:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 61,
                "mutability": "mutable",
                "name": "hash",
                "nameLocation": "1701:4:2",
                "nodeType": "VariableDeclaration",
                "scope": 76,
                "src": "1693:12:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 60,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "1693:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 63,
                "mutability": "mutable",
                "name": "refuterHash",
                "nameLocation": "1755:11:2",
                "nodeType": "VariableDeclaration",
                "scope": 76,
                "src": "1747:19:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 62,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "1747:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 65,
                "mutability": "mutable",
                "name": "numFieldsToHash",
                "nameLocation": "1819:15:2",
                "nodeType": "VariableDeclaration",
                "scope": 76,
                "src": "1813:21:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint8",
                  "typeString": "uint8"
                },
                "typeName": {
                  "id": 64,
                  "name": "uint8",
                  "nodeType": "ElementaryTypeName",
                  "src": "1813:5:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 67,
                "mutability": "mutable",
                "name": "timeBonus",
                "nameLocation": "1867:9:2",
                "nodeType": "VariableDeclaration",
                "scope": 76,
                "src": "1860:16:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint24",
                  "typeString": "uint24"
                },
                "typeName": {
                  "id": 66,
                  "name": "uint24",
                  "nodeType": "ElementaryTypeName",
                  "src": "1860:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint24",
                    "typeString": "uint24"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 69,
                "mutability": "mutable",
                "name": "payment",
                "nameLocation": "2039:7:2",
                "nodeType": "VariableDeclaration",
                "scope": 76,
                "src": "2032:14:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint80",
                  "typeString": "uint80"
                },
                "typeName": {
                  "id": 68,
                  "name": "uint80",
                  "nodeType": "ElementaryTypeName",
                  "src": "2032:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint80",
                    "typeString": "uint80"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 71,
                "mutability": "mutable",
                "name": "verifierID",
                "nameLocation": "2066:10:2",
                "nodeType": "VariableDeclaration",
                "scope": 76,
                "src": "2059:17:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint16",
                  "typeString": "uint16"
                },
                "typeName": {
                  "id": 70,
                  "name": "uint16",
                  "nodeType": "ElementaryTypeName",
                  "src": "2059:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 73,
                "mutability": "mutable",
                "name": "refuterID",
                "nameLocation": "2117:9:2",
                "nodeType": "VariableDeclaration",
                "scope": 76,
                "src": "2110:16:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint16",
                  "typeString": "uint16"
                },
                "typeName": {
                  "id": 72,
                  "name": "uint16",
                  "nodeType": "ElementaryTypeName",
                  "src": "2110:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 75,
                "mutability": "mutable",
                "name": "verificationReservedTimestamp",
                "nameLocation": "2167:29:2",
                "nodeType": "VariableDeclaration",
                "scope": 76,
                "src": "2160:36:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint40",
                  "typeString": "uint40"
                },
                "typeName": {
                  "id": 74,
                  "name": "uint40",
                  "nodeType": "ElementaryTypeName",
                  "src": "2160:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Task",
            "nameLocation": "1573:4:2",
            "nodeType": "StructDefinition",
            "scope": 2021,
            "src": "1566:675:2",
            "visibility": "public"
          },
          {
            "canonicalName": "Governance.Proposal",
            "id": 91,
            "members": [
              {
                "constant": false,
                "id": 78,
                "mutability": "mutable",
                "name": "IPFSHash",
                "nameLocation": "2280:8:2",
                "nodeType": "VariableDeclaration",
                "scope": 91,
                "src": "2273:15:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 77,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "2273:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 80,
                "mutability": "mutable",
                "name": "numberOfOptions",
                "nameLocation": "2305:15:2",
                "nodeType": "VariableDeclaration",
                "scope": 91,
                "src": "2298:22:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint16",
                  "typeString": "uint16"
                },
                "typeName": {
                  "id": 79,
                  "name": "uint16",
                  "nodeType": "ElementaryTypeName",
                  "src": "2298:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 84,
                "mutability": "mutable",
                "name": "votes",
                "nameLocation": "2340:5:2",
                "nodeType": "VariableDeclaration",
                "scope": 91,
                "src": "2330:15:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_uint16_$8_storage_ptr",
                  "typeString": "uint16[8]"
                },
                "typeName": {
                  "baseType": {
                    "id": 81,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "2330:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "id": 83,
                  "length": {
                    "hexValue": "38",
                    "id": 82,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2337:1:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_8_by_1",
                      "typeString": "int_const 8"
                    },
                    "value": "8"
                  },
                  "nodeType": "ArrayTypeName",
                  "src": "2330:9:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint16_$8_storage_ptr",
                    "typeString": "uint16[8]"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 86,
                "mutability": "mutable",
                "name": "totalVotes",
                "nameLocation": "2362:10:2",
                "nodeType": "VariableDeclaration",
                "scope": 91,
                "src": "2355:17:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint40",
                  "typeString": "uint40"
                },
                "typeName": {
                  "id": 85,
                  "name": "uint40",
                  "nodeType": "ElementaryTypeName",
                  "src": "2355:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 88,
                "mutability": "mutable",
                "name": "begTimestamp",
                "nameLocation": "2389:12:2",
                "nodeType": "VariableDeclaration",
                "scope": 91,
                "src": "2382:19:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint40",
                  "typeString": "uint40"
                },
                "typeName": {
                  "id": 87,
                  "name": "uint40",
                  "nodeType": "ElementaryTypeName",
                  "src": "2382:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 90,
                "mutability": "mutable",
                "name": "endTimestamp",
                "nameLocation": "2418:12:2",
                "nodeType": "VariableDeclaration",
                "scope": 91,
                "src": "2411:19:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint40",
                  "typeString": "uint40"
                },
                "typeName": {
                  "id": 89,
                  "name": "uint40",
                  "nodeType": "ElementaryTypeName",
                  "src": "2411:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Proposal",
            "nameLocation": "2254:8:2",
            "nodeType": "StructDefinition",
            "scope": 2021,
            "src": "2247:190:2",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "10190ef1",
            "id": 95,
            "mutability": "mutable",
            "name": "taskTypes",
            "nameLocation": "2463:9:2",
            "nodeType": "VariableDeclaration",
            "scope": 2021,
            "src": "2445:27:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_TaskType_$55_storage_$dyn_storage",
              "typeString": "struct Governance.TaskType[]"
            },
            "typeName": {
              "baseType": {
                "id": 93,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 92,
                  "name": "TaskType",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 55,
                  "src": "2445:8:2"
                },
                "referencedDeclaration": 55,
                "src": "2445:8:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_TaskType_$55_storage_ptr",
                  "typeString": "struct Governance.TaskType"
                }
              },
              "id": 94,
              "nodeType": "ArrayTypeName",
              "src": "2445:10:2",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_TaskType_$55_storage_$dyn_storage_ptr",
                "typeString": "struct Governance.TaskType[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "e95d2347",
            "id": 98,
            "mutability": "mutable",
            "name": "tasksWaitingConfirmation",
            "nameLocation": "2619:24:2",
            "nodeType": "VariableDeclaration",
            "scope": 2021,
            "src": "2582:61:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Bytes32Deque_$2893_storage",
              "typeString": "struct DoubleEndedQueue.Bytes32Deque"
            },
            "typeName": {
              "id": 97,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 96,
                "name": "DoubleEndedQueue.Bytes32Deque",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2893,
                "src": "2582:29:2"
              },
              "referencedDeclaration": 2893,
              "src": "2582:29:2",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Bytes32Deque_$2893_storage_ptr",
                "typeString": "struct DoubleEndedQueue.Bytes32Deque"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "013cf08b",
            "id": 103,
            "mutability": "mutable",
            "name": "proposals",
            "nameLocation": "2796:9:2",
            "nodeType": "VariableDeclaration",
            "scope": 2021,
            "src": "2759:46:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$91_storage_$",
              "typeString": "mapping(uint256 => struct Governance.Proposal)"
            },
            "typeName": {
              "id": 102,
              "keyType": {
                "id": 99,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2768:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "2759:29:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$91_storage_$",
                "typeString": "mapping(uint256 => struct Governance.Proposal)"
              },
              "valueType": {
                "id": 101,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 100,
                  "name": "Proposal",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 91,
                  "src": "2779:8:2"
                },
                "referencedDeclaration": 91,
                "src": "2779:8:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Proposal_$91_storage_ptr",
                  "typeString": "struct Governance.Proposal"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 105,
            "mutability": "mutable",
            "name": "totalProposals",
            "nameLocation": "2819:14:2",
            "nodeType": "VariableDeclaration",
            "scope": 2021,
            "src": "2811:22:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 104,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2811:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "8d977672",
            "id": 110,
            "mutability": "mutable",
            "name": "tasks",
            "nameLocation": "2873:5:2",
            "nodeType": "VariableDeclaration",
            "scope": 2021,
            "src": "2840:38:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Task_$76_storage_$",
              "typeString": "mapping(uint256 => struct Governance.Task)"
            },
            "typeName": {
              "id": 109,
              "keyType": {
                "id": 106,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2849:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "2840:25:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Task_$76_storage_$",
                "typeString": "mapping(uint256 => struct Governance.Task)"
              },
              "valueType": {
                "id": 108,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 107,
                  "name": "Task",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 76,
                  "src": "2860:4:2"
                },
                "referencedDeclaration": 76,
                "src": "2860:4:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Task_$76_storage_ptr",
                  "typeString": "struct Governance.Task"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "90b293d8",
            "id": 112,
            "mutability": "mutable",
            "name": "totalTasksAttempted",
            "nameLocation": "2899:19:2",
            "nodeType": "VariableDeclaration",
            "scope": 2021,
            "src": "2884:34:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 111,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2884:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 117,
            "mutability": "mutable",
            "name": "verificationTime",
            "nameLocation": "2959:16:2",
            "nodeType": "VariableDeclaration",
            "scope": 2021,
            "src": "2951:32:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 113,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2951:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "commonType": {
                "typeIdentifier": "t_rational_600_by_1",
                "typeString": "int_const 600"
              },
              "id": 116,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "hexValue": "3130",
                "id": 114,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "2978:2:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_10_by_1",
                  "typeString": "int_const 10"
                },
                "value": "10"
              },
              "nodeType": "BinaryOperation",
              "operator": "*",
              "rightExpression": {
                "hexValue": "3630",
                "id": 115,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "2981:2:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_60_by_1",
                  "typeString": "int_const 60"
                },
                "value": "60"
              },
              "src": "2978:5:2",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_600_by_1",
                "typeString": "int_const 600"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 120,
            "mutability": "mutable",
            "name": "taskVerificationTimeBonus",
            "nameLocation": "3011:25:2",
            "nodeType": "VariableDeclaration",
            "scope": 2021,
            "src": "3003:42:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 118,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "3003:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31",
              "id": 119,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "3039:6:2",
              "subdenomination": "days",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_86400_by_1",
                "typeString": "int_const 86400"
              },
              "value": "1"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 123,
            "mutability": "mutable",
            "name": "boardSeats",
            "nameLocation": "3068:10:2",
            "nodeType": "VariableDeclaration",
            "scope": 2021,
            "src": "3060:22:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 121,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "3060:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "33",
              "id": 122,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "3081:1:2",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_3_by_1",
                "typeString": "int_const 3"
              },
              "value": "3"
            },
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "eventSelector": "f20a22b1aa6d8ba4bf99c845fb1f02f4879ba83155bde0f82f49cb58675df268",
            "id": 132,
            "name": "VerificationAssigned",
            "nameLocation": "3095:20:2",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 131,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 125,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "wizardId",
                  "nameLocation": "3124:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 132,
                  "src": "3116:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 124,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3116:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 127,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "taskId",
                  "nameLocation": "3142:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 132,
                  "src": "3134:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 126,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3134:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 130,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "myTask",
                  "nameLocation": "3155:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 132,
                  "src": "3150:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Task_$76_memory_ptr",
                    "typeString": "struct Governance.Task"
                  },
                  "typeName": {
                    "id": 129,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 128,
                      "name": "Task",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 76,
                      "src": "3150:4:2"
                    },
                    "referencedDeclaration": 76,
                    "src": "3150:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Task_$76_storage_ptr",
                      "typeString": "struct Governance.Task"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3115:47:2"
            },
            "src": "3089:74:2"
          },
          {
            "anonymous": false,
            "eventSelector": "d12a897fdb9082da1e0476e136a51fa43484a8837cfbe517cfff0b1ffeedb19d",
            "id": 140,
            "name": "VerificationFailed",
            "nameLocation": "3174:18:2",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 139,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 134,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "VerifierIdFirst",
                  "nameLocation": "3201:15:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 140,
                  "src": "3193:23:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 133,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3193:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 136,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "VerifierIdSecond",
                  "nameLocation": "3226:16:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 140,
                  "src": "3218:24:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 135,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3218:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 138,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "taskId",
                  "nameLocation": "3252:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 140,
                  "src": "3244:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 137,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3244:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3192:67:2"
            },
            "src": "3168:92:2"
          },
          {
            "anonymous": false,
            "eventSelector": "e3f0e138f100deaf328ba1def71c39dade8cd971ba0074d935ee648e54532fae",
            "id": 152,
            "name": "VerificationSucceeded",
            "nameLocation": "3271:21:2",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 151,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 142,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "taskDoer",
                  "nameLocation": "3301:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 152,
                  "src": "3293:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 141,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3293:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 144,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "Verifier",
                  "nameLocation": "3319:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 152,
                  "src": "3311:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 143,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3311:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 146,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "taskId",
                  "nameLocation": "3337:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 152,
                  "src": "3329:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 145,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3329:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 148,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "hash",
                  "nameLocation": "3353:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 152,
                  "src": "3345:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 147,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3345:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 150,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "isHashCorrect",
                  "nameLocation": "3364:13:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 152,
                  "src": "3359:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 149,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3359:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3292:86:2"
            },
            "src": "3265:114:2"
          },
          {
            "anonymous": false,
            "eventSelector": "637ce8d069e382e64ef71cf191623b88c7e307ce252e908e7f2babbad0cb81ea",
            "id": 162,
            "name": "HashTesting",
            "nameLocation": "3390:11:2",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 161,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 154,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "hash",
                  "nameLocation": "3410:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 162,
                  "src": "3402:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 153,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3402:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 156,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "isHashCorrect",
                  "nameLocation": "3421:13:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 162,
                  "src": "3416:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 155,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3416:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 158,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "firstEncoded",
                  "nameLocation": "3444:12:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 162,
                  "src": "3436:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 157,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3436:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 160,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "firstUnencoded",
                  "nameLocation": "3464:14:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 162,
                  "src": "3458:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 159,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3458:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3401:78:2"
            },
            "src": "3384:96:2"
          },
          {
            "anonymous": false,
            "eventSelector": "2810025950962e3cd71fd98c2dc111ffbdb2a129b36771df8d36a7de2fe3e4e0",
            "id": 178,
            "name": "NewTaskTypeCreated",
            "nameLocation": "3491:18:2",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 177,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 164,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_IPFSHash",
                  "nameLocation": "3517:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 178,
                  "src": "3510:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 163,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3510:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 166,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_proposalID",
                  "nameLocation": "3534:11:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 178,
                  "src": "3527:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  },
                  "typeName": {
                    "id": 165,
                    "name": "uint40",
                    "nodeType": "ElementaryTypeName",
                    "src": "3527:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 168,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_numFieldsToHash",
                  "nameLocation": "3553:16:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 178,
                  "src": "3547:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 167,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "3547:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 170,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_timeBonus",
                  "nameLocation": "3578:10:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 178,
                  "src": "3571:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint24",
                    "typeString": "uint24"
                  },
                  "typeName": {
                    "id": 169,
                    "name": "uint24",
                    "nodeType": "ElementaryTypeName",
                    "src": "3571:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint24",
                      "typeString": "uint24"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 172,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_begTimestamp",
                  "nameLocation": "3607:13:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 178,
                  "src": "3600:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  },
                  "typeName": {
                    "id": 171,
                    "name": "uint40",
                    "nodeType": "ElementaryTypeName",
                    "src": "3600:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 174,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_endTimestamp",
                  "nameLocation": "3629:13:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 178,
                  "src": "3622:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  },
                  "typeName": {
                    "id": 173,
                    "name": "uint40",
                    "nodeType": "ElementaryTypeName",
                    "src": "3622:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 176,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_availableSlots",
                  "nameLocation": "3651:15:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 178,
                  "src": "3644:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 175,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "3644:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3509:158:2"
            },
            "src": "3485:183:2"
          },
          {
            "anonymous": false,
            "eventSelector": "bcc1ea15519f3acfb49e91de851e553b2c024b9ab85cee8ffd8fe4e4e0a7876d",
            "id": 188,
            "name": "TaskCompleted",
            "nameLocation": "3679:13:2",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 187,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 180,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "wizardId",
                  "nameLocation": "3701:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 188,
                  "src": "3693:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 179,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3693:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 182,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "taskId",
                  "nameLocation": "3719:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 188,
                  "src": "3711:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 181,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3711:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 184,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "IPFSHash",
                  "nameLocation": "3734:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 188,
                  "src": "3727:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 183,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3727:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 186,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "3752:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 188,
                  "src": "3744:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 185,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3744:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3692:65:2"
            },
            "src": "3673:85:2"
          },
          {
            "body": {
              "id": 222,
              "nodeType": "Block",
              "src": "4434:239:2",
              "statements": [
                {
                  "body": {
                    "id": 218,
                    "nodeType": "Block",
                    "src": "4479:166:2",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 209,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 204,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 194,
                                    "src": "4544:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 202,
                                    "name": "wizardTower",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 28,
                                    "src": "4515:11:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_WizardTower_$2874",
                                      "typeString": "contract WizardTower"
                                    }
                                  },
                                  "id": 203,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "getWizardOnFloor",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2172,
                                  "src": "4515:28:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
                                    "typeString": "function (uint256) view external returns (uint256)"
                                  }
                                },
                                "id": 205,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4515:31:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 200,
                                "name": "wizardsNFT",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 25,
                                "src": "4496:10:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Wizards_$7202",
                                  "typeString": "contract Wizards"
                                }
                              },
                              "id": 201,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "ownerOf",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3491,
                              "src": "4496:18:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                                "typeString": "function (uint256) view external returns (address)"
                              }
                            },
                            "id": 206,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4496:51:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 207,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "4551:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 208,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "4551:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "4496:65:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 213,
                        "nodeType": "IfStatement",
                        "src": "4493:114:2",
                        "trueBody": {
                          "id": 212,
                          "nodeType": "Block",
                          "src": "4563:44:2",
                          "statements": [
                            {
                              "expression": {
                                "hexValue": "74727565",
                                "id": 210,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4588:4:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              },
                              "functionReturnParameters": 192,
                              "id": 211,
                              "nodeType": "Return",
                              "src": "4581:11:2"
                            }
                          ]
                        }
                      },
                      {
                        "id": 217,
                        "nodeType": "UncheckedBlock",
                        "src": "4620:15:2",
                        "statements": [
                          {
                            "expression": {
                              "id": 215,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": true,
                              "src": "4630:3:2",
                              "subExpression": {
                                "id": 214,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 194,
                                "src": "4632:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 216,
                            "nodeType": "ExpressionStatement",
                            "src": "4630:3:2"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 199,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 197,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 194,
                      "src": "4462:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "id": 198,
                      "name": "boardSeats",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 123,
                      "src": "4467:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4462:15:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 219,
                  "initializationExpression": {
                    "assignments": [
                      194
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 194,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "4456:1:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 219,
                        "src": "4448:9:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 193,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4448:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 196,
                    "initialValue": {
                      "hexValue": "31",
                      "id": 195,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4459:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "4448:12:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "4444:201:2"
                },
                {
                  "expression": {
                    "hexValue": "66616c7365",
                    "id": 220,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4661:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "functionReturnParameters": 192,
                  "id": 221,
                  "nodeType": "Return",
                  "src": "4654:12:2"
                }
              ]
            },
            "functionSelector": "3b47fed2",
            "id": 223,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isCallerOnBoard",
            "nameLocation": "4389:15:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 189,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4404:2:2"
            },
            "returnParameters": {
              "id": 192,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 191,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 223,
                  "src": "4428:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 190,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4428:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4427:6:2"
            },
            "scope": 2021,
            "src": "4380:293:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 250,
              "nodeType": "Block",
              "src": "4749:172:2",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 243,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 236,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "arguments": [
                          {
                            "id": 232,
                            "name": "_wizId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 225,
                            "src": "4781:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 230,
                            "name": "wizardsNFT",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25,
                            "src": "4762:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Wizards_$7202",
                              "typeString": "contract Wizards"
                            }
                          },
                          "id": 231,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "ownerOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3491,
                          "src": "4762:18:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                            "typeString": "function (uint256) view external returns (address)"
                          }
                        },
                        "id": 233,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4762:26:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "id": 234,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4790:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 235,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4790:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "4762:38:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 242,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "arguments": [
                          {
                            "id": 239,
                            "name": "_wizId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 225,
                            "src": "4836:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 237,
                            "name": "wizardTower",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28,
                            "src": "4804:11:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_WizardTower_$2874",
                              "typeString": "contract WizardTower"
                            }
                          },
                          "id": 238,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getFloorGivenWizard",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2238,
                          "src": "4804:31:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (uint256) view external returns (uint256)"
                          }
                        },
                        "id": 240,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4804:39:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<=",
                      "rightExpression": {
                        "id": 241,
                        "name": "boardSeats",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 123,
                        "src": "4846:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "4804:52:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "4762:94:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 247,
                  "nodeType": "IfStatement",
                  "src": "4759:134:2",
                  "trueBody": {
                    "id": 246,
                    "nodeType": "Block",
                    "src": "4857:36:2",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 244,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4878:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 229,
                        "id": 245,
                        "nodeType": "Return",
                        "src": "4871:11:2"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "hexValue": "66616c7365",
                    "id": 248,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4909:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "functionReturnParameters": 229,
                  "id": 249,
                  "nodeType": "Return",
                  "src": "4902:12:2"
                }
              ]
            },
            "functionSelector": "0f61d8bd",
            "id": 251,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isMyWizardOnBoard",
            "nameLocation": "4688:17:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 226,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 225,
                  "mutability": "mutable",
                  "name": "_wizId",
                  "nameLocation": "4714:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 251,
                  "src": "4706:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 224,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4706:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4705:16:2"
            },
            "returnParameters": {
              "id": 229,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 228,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 251,
                  "src": "4743:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 227,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4743:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4742:6:2"
            },
            "scope": 2021,
            "src": "4679:242:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 263,
              "nodeType": "Block",
              "src": "5177:38:2",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 259,
                      "name": "tasks",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 110,
                      "src": "5194:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Task_$76_storage_$",
                        "typeString": "mapping(uint256 => struct Governance.Task storage ref)"
                      }
                    },
                    "id": 261,
                    "indexExpression": {
                      "id": 260,
                      "name": "_taskId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 253,
                      "src": "5200:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5194:14:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Task_$76_storage",
                      "typeString": "struct Governance.Task storage ref"
                    }
                  },
                  "functionReturnParameters": 258,
                  "id": 262,
                  "nodeType": "Return",
                  "src": "5187:21:2"
                }
              ]
            },
            "functionSelector": "976217cd",
            "id": 264,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTaskById",
            "nameLocation": "5112:11:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 254,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 253,
                  "mutability": "mutable",
                  "name": "_taskId",
                  "nameLocation": "5132:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 264,
                  "src": "5124:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 252,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5124:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5123:17:2"
            },
            "returnParameters": {
              "id": 258,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 257,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 264,
                  "src": "5164:11:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Task_$76_memory_ptr",
                    "typeString": "struct Governance.Task"
                  },
                  "typeName": {
                    "id": 256,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 255,
                      "name": "Task",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 76,
                      "src": "5164:4:2"
                    },
                    "referencedDeclaration": 76,
                    "src": "5164:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Task_$76_storage_ptr",
                      "typeString": "struct Governance.Task"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5163:13:2"
            },
            "scope": 2021,
            "src": "5103:112:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 319,
              "nodeType": "Block",
              "src": "5299:311:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 275,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 273,
                          "name": "proposalID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 266,
                          "src": "5317:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "id": 274,
                          "name": "totalProposals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 105,
                          "src": "5330:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5317:27:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6e6f20737563682070726f706f73616c",
                        "id": 276,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5346:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7f70e7e117a210e101713c97232a3cb728ce069a6ee3603e8c77d84127a93b4e",
                          "typeString": "literal_string \"no such proposal\""
                        },
                        "value": "no such proposal"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7f70e7e117a210e101713c97232a3cb728ce069a6ee3603e8c77d84127a93b4e",
                          "typeString": "literal_string \"no such proposal\""
                        }
                      ],
                      "id": 272,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5309:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 277,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5309:56:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 278,
                  "nodeType": "ExpressionStatement",
                  "src": "5309:56:2"
                },
                {
                  "assignments": [
                    283
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 283,
                      "mutability": "mutable",
                      "name": "voteArray",
                      "nameLocation": "5391:9:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 319,
                      "src": "5375:25:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint16_$dyn_memory_ptr",
                        "typeString": "uint16[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 281,
                          "name": "uint16",
                          "nodeType": "ElementaryTypeName",
                          "src": "5375:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "id": 282,
                        "nodeType": "ArrayTypeName",
                        "src": "5375:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint16_$dyn_storage_ptr",
                          "typeString": "uint16[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 292,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 287,
                            "name": "proposals",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 103,
                            "src": "5416:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$91_storage_$",
                              "typeString": "mapping(uint256 => struct Governance.Proposal storage ref)"
                            }
                          },
                          "id": 289,
                          "indexExpression": {
                            "id": 288,
                            "name": "proposalID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 266,
                            "src": "5426:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5416:21:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Proposal_$91_storage",
                            "typeString": "struct Governance.Proposal storage ref"
                          }
                        },
                        "id": 290,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "numberOfOptions",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 80,
                        "src": "5416:37:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      ],
                      "id": 286,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "5403:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint16_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (uint16[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 284,
                          "name": "uint16",
                          "nodeType": "ElementaryTypeName",
                          "src": "5407:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "id": 285,
                        "nodeType": "ArrayTypeName",
                        "src": "5407:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint16_$dyn_storage_ptr",
                          "typeString": "uint16[]"
                        }
                      }
                    },
                    "id": 291,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5403:51:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint16_$dyn_memory_ptr",
                      "typeString": "uint16[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5375:79:2"
                },
                {
                  "body": {
                    "id": 315,
                    "nodeType": "Block",
                    "src": "5508:70:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 313,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 304,
                              "name": "voteArray",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 283,
                              "src": "5522:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint16_$dyn_memory_ptr",
                                "typeString": "uint16[] memory"
                              }
                            },
                            "id": 306,
                            "indexExpression": {
                              "id": 305,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 294,
                              "src": "5532:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "5522:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 307,
                                  "name": "proposals",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 103,
                                  "src": "5537:9:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$91_storage_$",
                                    "typeString": "mapping(uint256 => struct Governance.Proposal storage ref)"
                                  }
                                },
                                "id": 309,
                                "indexExpression": {
                                  "id": 308,
                                  "name": "proposalID",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 266,
                                  "src": "5547:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "5537:21:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Proposal_$91_storage",
                                  "typeString": "struct Governance.Proposal storage ref"
                                }
                              },
                              "id": 310,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "votes",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 84,
                              "src": "5537:27:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint16_$8_storage",
                                "typeString": "uint16[8] storage ref"
                              }
                            },
                            "id": 312,
                            "indexExpression": {
                              "id": 311,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 294,
                              "src": "5565:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5537:30:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "src": "5522:45:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "id": 314,
                        "nodeType": "ExpressionStatement",
                        "src": "5522:45:2"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 300,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 297,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 294,
                      "src": "5483:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 298,
                        "name": "voteArray",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 283,
                        "src": "5486:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint16_$dyn_memory_ptr",
                          "typeString": "uint16[] memory"
                        }
                      },
                      "id": 299,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "5486:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5483:19:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 316,
                  "initializationExpression": {
                    "assignments": [
                      294
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 294,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "5476:1:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 316,
                        "src": "5468:9:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 293,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5468:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 296,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 295,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5480:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "5468:13:2"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 302,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "5504:3:2",
                      "subExpression": {
                        "id": 301,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 294,
                        "src": "5504:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 303,
                    "nodeType": "ExpressionStatement",
                    "src": "5504:3:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "5464:114:2"
                },
                {
                  "expression": {
                    "id": 317,
                    "name": "voteArray",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 283,
                    "src": "5594:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint16_$dyn_memory_ptr",
                      "typeString": "uint16[] memory"
                    }
                  },
                  "functionReturnParameters": 271,
                  "id": 318,
                  "nodeType": "Return",
                  "src": "5587:16:2"
                }
              ]
            },
            "functionSelector": "ff981099",
            "id": 320,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getVotes",
            "nameLocation": "5230:8:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 267,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 266,
                  "mutability": "mutable",
                  "name": "proposalID",
                  "nameLocation": "5247:10:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 320,
                  "src": "5239:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 265,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5239:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5238:20:2"
            },
            "returnParameters": {
              "id": 271,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 270,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 320,
                  "src": "5282:15:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint16_$dyn_memory_ptr",
                    "typeString": "uint16[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 268,
                      "name": "uint16",
                      "nodeType": "ElementaryTypeName",
                      "src": "5282:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "id": 269,
                    "nodeType": "ArrayTypeName",
                    "src": "5282:8:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint16_$dyn_storage_ptr",
                      "typeString": "uint16[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5281:17:2"
            },
            "scope": 2021,
            "src": "5221:389:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 425,
              "nodeType": "Block",
              "src": "5693:892:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 330,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 328,
                          "name": "proposalID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 322,
                          "src": "5711:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "id": 329,
                          "name": "totalProposals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 105,
                          "src": "5724:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5711:27:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6e6f20737563682070726f706f73616c",
                        "id": 331,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5740:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7f70e7e117a210e101713c97232a3cb728ce069a6ee3603e8c77d84127a93b4e",
                          "typeString": "literal_string \"no such proposal\""
                        },
                        "value": "no such proposal"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7f70e7e117a210e101713c97232a3cb728ce069a6ee3603e8c77d84127a93b4e",
                          "typeString": "literal_string \"no such proposal\""
                        }
                      ],
                      "id": 327,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5703:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 332,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5703:56:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 333,
                  "nodeType": "ExpressionStatement",
                  "src": "5703:56:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 341,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 335,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "5778:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 336,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "5778:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 337,
                              "name": "proposals",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 103,
                              "src": "5796:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$91_storage_$",
                                "typeString": "mapping(uint256 => struct Governance.Proposal storage ref)"
                              }
                            },
                            "id": 339,
                            "indexExpression": {
                              "id": 338,
                              "name": "proposalID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 322,
                              "src": "5806:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5796:21:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Proposal_$91_storage",
                              "typeString": "struct Governance.Proposal storage ref"
                            }
                          },
                          "id": 340,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "endTimestamp",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 90,
                          "src": "5796:34:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint40",
                            "typeString": "uint40"
                          }
                        },
                        "src": "5778:52:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "766f74696e67207374696c6c20616374697665",
                        "id": 342,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5832:21:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_22f2e02cab1835d44c1d530aa3f7458160c75e111c83b0fee59782f82fdc8c00",
                          "typeString": "literal_string \"voting still active\""
                        },
                        "value": "voting still active"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_22f2e02cab1835d44c1d530aa3f7458160c75e111c83b0fee59782f82fdc8c00",
                          "typeString": "literal_string \"voting still active\""
                        }
                      ],
                      "id": 334,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5769:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 343,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5769:85:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 344,
                  "nodeType": "ExpressionStatement",
                  "src": "5769:85:2"
                },
                {
                  "assignments": [
                    346
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 346,
                      "mutability": "mutable",
                      "name": "winningVote",
                      "nameLocation": "5982:11:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 425,
                      "src": "5974:19:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 345,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5974:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 347,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5974:19:2"
                },
                {
                  "assignments": [
                    349
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 349,
                      "mutability": "mutable",
                      "name": "winningVoteAmount",
                      "nameLocation": "6011:17:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 425,
                      "src": "6003:25:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 348,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6003:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 350,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6003:25:2"
                },
                {
                  "assignments": [
                    352
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 352,
                      "mutability": "mutable",
                      "name": "tie",
                      "nameLocation": "6046:3:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 425,
                      "src": "6038:11:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 351,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6038:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 354,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 353,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "6050:1:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6038:13:2"
                },
                {
                  "body": {
                    "id": 414,
                    "nodeType": "Block",
                    "src": "6124:382:2",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 375,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 368,
                                  "name": "proposals",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 103,
                                  "src": "6177:9:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$91_storage_$",
                                    "typeString": "mapping(uint256 => struct Governance.Proposal storage ref)"
                                  }
                                },
                                "id": 370,
                                "indexExpression": {
                                  "id": 369,
                                  "name": "proposalID",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 322,
                                  "src": "6187:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "6177:21:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Proposal_$91_storage",
                                  "typeString": "struct Governance.Proposal storage ref"
                                }
                              },
                              "id": 371,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "votes",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 84,
                              "src": "6177:27:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint16_$8_storage",
                                "typeString": "uint16[8] storage ref"
                              }
                            },
                            "id": 373,
                            "indexExpression": {
                              "id": 372,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 356,
                              "src": "6205:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "6177:30:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "id": 374,
                            "name": "winningVoteAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 349,
                            "src": "6210:17:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6177:50:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 406,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "baseExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 399,
                                    "name": "proposals",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 103,
                                    "src": "6406:9:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$91_storage_$",
                                      "typeString": "mapping(uint256 => struct Governance.Proposal storage ref)"
                                    }
                                  },
                                  "id": 401,
                                  "indexExpression": {
                                    "id": 400,
                                    "name": "proposalID",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 322,
                                    "src": "6416:10:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "6406:21:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Proposal_$91_storage",
                                    "typeString": "struct Governance.Proposal storage ref"
                                  }
                                },
                                "id": 402,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "votes",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 84,
                                "src": "6406:27:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint16_$8_storage",
                                  "typeString": "uint16[8] storage ref"
                                }
                              },
                              "id": 404,
                              "indexExpression": {
                                "id": 403,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 356,
                                "src": "6434:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "6406:30:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 405,
                              "name": "winningVoteAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 349,
                              "src": "6440:17:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "6406:51:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 412,
                          "nodeType": "IfStatement",
                          "src": "6403:93:2",
                          "trueBody": {
                            "id": 411,
                            "nodeType": "Block",
                            "src": "6458:38:2",
                            "statements": [
                              {
                                "expression": {
                                  "id": 409,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftHandSide": {
                                    "id": 407,
                                    "name": "tie",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 352,
                                    "src": "6476:3:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "Assignment",
                                  "operator": "=",
                                  "rightHandSide": {
                                    "hexValue": "31",
                                    "id": 408,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "6480:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    "value": "1"
                                  },
                                  "src": "6476:5:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 410,
                                "nodeType": "ExpressionStatement",
                                "src": "6476:5:2"
                              }
                            ]
                          }
                        },
                        "id": 413,
                        "nodeType": "IfStatement",
                        "src": "6174:322:2",
                        "trueBody": {
                          "id": 398,
                          "nodeType": "Block",
                          "src": "6229:156:2",
                          "statements": [
                            {
                              "expression": {
                                "id": 383,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 376,
                                  "name": "winningVoteAmount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 349,
                                  "src": "6247:17:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "baseExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 377,
                                        "name": "proposals",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 103,
                                        "src": "6267:9:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$91_storage_$",
                                          "typeString": "mapping(uint256 => struct Governance.Proposal storage ref)"
                                        }
                                      },
                                      "id": 379,
                                      "indexExpression": {
                                        "id": 378,
                                        "name": "proposalID",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 322,
                                        "src": "6277:10:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "6267:21:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Proposal_$91_storage",
                                        "typeString": "struct Governance.Proposal storage ref"
                                      }
                                    },
                                    "id": 380,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "votes",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 84,
                                    "src": "6267:27:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint16_$8_storage",
                                      "typeString": "uint16[8] storage ref"
                                    }
                                  },
                                  "id": 382,
                                  "indexExpression": {
                                    "id": 381,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 356,
                                    "src": "6295:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "6267:30:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint16",
                                    "typeString": "uint16"
                                  }
                                },
                                "src": "6247:50:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 384,
                              "nodeType": "ExpressionStatement",
                              "src": "6247:50:2"
                            },
                            {
                              "expression": {
                                "id": 387,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 385,
                                  "name": "winningVote",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 346,
                                  "src": "6315:11:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 386,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 356,
                                  "src": "6329:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "6315:15:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 388,
                              "nodeType": "ExpressionStatement",
                              "src": "6315:15:2"
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 391,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 389,
                                  "name": "tie",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 352,
                                  "src": "6352:3:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "hexValue": "31",
                                  "id": 390,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "6357:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "src": "6352:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 397,
                              "nodeType": "IfStatement",
                              "src": "6348:23:2",
                              "trueBody": {
                                "id": 396,
                                "nodeType": "Block",
                                "src": "6360:11:2",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 394,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "id": 392,
                                        "name": "tie",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 352,
                                        "src": "6362:3:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "hexValue": "30",
                                        "id": 393,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "6368:1:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      },
                                      "src": "6362:7:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 395,
                                    "nodeType": "ExpressionStatement",
                                    "src": "6362:7:2"
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 364,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 359,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 356,
                      "src": "6078:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 360,
                          "name": "proposals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 103,
                          "src": "6081:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$91_storage_$",
                            "typeString": "mapping(uint256 => struct Governance.Proposal storage ref)"
                          }
                        },
                        "id": 362,
                        "indexExpression": {
                          "id": 361,
                          "name": "proposalID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 322,
                          "src": "6091:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6081:21:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proposal_$91_storage",
                          "typeString": "struct Governance.Proposal storage ref"
                        }
                      },
                      "id": 363,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "numberOfOptions",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 80,
                      "src": "6081:37:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "src": "6078:40:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 415,
                  "initializationExpression": {
                    "assignments": [
                      356
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 356,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "6073:1:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 415,
                        "src": "6065:9:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 355,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6065:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 358,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 357,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6075:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "6065:11:2"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 366,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "6120:3:2",
                      "subExpression": {
                        "id": 365,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 356,
                        "src": "6120:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 367,
                    "nodeType": "ExpressionStatement",
                    "src": "6120:3:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "6061:445:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 419,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 417,
                          "name": "tie",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 352,
                          "src": "6523:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 418,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6528:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "6523:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7468657265207761732061207469652e",
                        "id": 420,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6531:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a1c2bbbee70a8d13edbf54a9c72401ac19b15698e1d23660ca88991f323433da",
                          "typeString": "literal_string \"there was a tie.\""
                        },
                        "value": "there was a tie."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a1c2bbbee70a8d13edbf54a9c72401ac19b15698e1d23660ca88991f323433da",
                          "typeString": "literal_string \"there was a tie.\""
                        }
                      ],
                      "id": 416,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6515:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 421,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6515:35:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 422,
                  "nodeType": "ExpressionStatement",
                  "src": "6515:35:2"
                },
                {
                  "expression": {
                    "id": 423,
                    "name": "winningVote",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 346,
                    "src": "6567:11:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 326,
                  "id": 424,
                  "nodeType": "Return",
                  "src": "6560:18:2"
                }
              ]
            },
            "functionSelector": "826b8ebd",
            "id": 426,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getWinningVote",
            "nameLocation": "5625:14:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 323,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 322,
                  "mutability": "mutable",
                  "name": "proposalID",
                  "nameLocation": "5648:10:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 426,
                  "src": "5640:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 321,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5640:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5639:20:2"
            },
            "returnParameters": {
              "id": 326,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 325,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 426,
                  "src": "5683:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 324,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5683:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5682:10:2"
            },
            "scope": 2021,
            "src": "5616:969:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 491,
              "nodeType": "Block",
              "src": "6713:607:2",
              "statements": [
                {
                  "assignments": [
                    434
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 434,
                      "mutability": "mutable",
                      "name": "totalTasksSubmitted",
                      "nameLocation": "6731:19:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 491,
                      "src": "6723:27:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 433,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6723:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 439,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 437,
                        "name": "tasksWaitingConfirmation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98,
                        "src": "6777:24:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Bytes32Deque_$2893_storage",
                          "typeString": "struct DoubleEndedQueue.Bytes32Deque storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Bytes32Deque_$2893_storage",
                          "typeString": "struct DoubleEndedQueue.Bytes32Deque storage ref"
                        }
                      ],
                      "expression": {
                        "id": 435,
                        "name": "DoubleEndedQueue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3215,
                        "src": "6753:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_DoubleEndedQueue_$3215_$",
                          "typeString": "type(library DoubleEndedQueue)"
                        }
                      },
                      "id": 436,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3198,
                      "src": "6753:23:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32Deque_$2893_storage_ptr_$returns$_t_uint256_$",
                        "typeString": "function (struct DoubleEndedQueue.Bytes32Deque storage pointer) view returns (uint256)"
                      }
                    },
                    "id": 438,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6753:49:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6723:79:2"
                },
                {
                  "assignments": [
                    442
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 442,
                      "mutability": "mutable",
                      "name": "myTask",
                      "nameLocation": "6824:6:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 491,
                      "src": "6812:18:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Task_$76_memory_ptr",
                        "typeString": "struct Governance.Task"
                      },
                      "typeName": {
                        "id": 441,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 440,
                          "name": "Task",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 76,
                          "src": "6812:4:2"
                        },
                        "referencedDeclaration": 76,
                        "src": "6812:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Task_$76_storage_ptr",
                          "typeString": "struct Governance.Task"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 443,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6812:18:2"
                },
                {
                  "body": {
                    "id": 487,
                    "nodeType": "Block",
                    "src": "6996:296:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 462,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 451,
                            "name": "myTask",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 442,
                            "src": "7010:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Task_$76_memory_ptr",
                              "typeString": "struct Governance.Task memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 452,
                              "name": "tasks",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 110,
                              "src": "7019:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Task_$76_storage_$",
                                "typeString": "mapping(uint256 => struct Governance.Task storage ref)"
                              }
                            },
                            "id": 461,
                            "indexExpression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 457,
                                      "name": "tasksWaitingConfirmation",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 98,
                                      "src": "7053:24:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Bytes32Deque_$2893_storage",
                                        "typeString": "struct DoubleEndedQueue.Bytes32Deque storage ref"
                                      }
                                    },
                                    {
                                      "id": 458,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 445,
                                      "src": "7078:1:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_struct$_Bytes32Deque_$2893_storage",
                                        "typeString": "struct DoubleEndedQueue.Bytes32Deque storage ref"
                                      },
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "id": 455,
                                      "name": "DoubleEndedQueue",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3215,
                                      "src": "7033:16:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_DoubleEndedQueue_$3215_$",
                                        "typeString": "type(library DoubleEndedQueue)"
                                      }
                                    },
                                    "id": 456,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "at",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 3152,
                                    "src": "7033:19:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32Deque_$2893_storage_ptr_$_t_uint256_$returns$_t_bytes32_$",
                                      "typeString": "function (struct DoubleEndedQueue.Bytes32Deque storage pointer,uint256) view returns (bytes32)"
                                    }
                                  },
                                  "id": 459,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "7033:47:2",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                ],
                                "id": 454,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "7025:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                },
                                "typeName": {
                                  "id": 453,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "7025:7:2",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 460,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7025:56:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "7019:63:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Task_$76_storage",
                              "typeString": "struct Governance.Task storage ref"
                            }
                          },
                          "src": "7010:72:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Task_$76_memory_ptr",
                            "typeString": "struct Governance.Task memory"
                          }
                        },
                        "id": 463,
                        "nodeType": "ExpressionStatement",
                        "src": "7010:72:2"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 478,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 473,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 468,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 464,
                                  "name": "myTask",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 442,
                                  "src": "7100:6:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Task_$76_memory_ptr",
                                    "typeString": "struct Governance.Task memory"
                                  }
                                },
                                "id": 465,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "verificationReservedTimestamp",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 75,
                                "src": "7100:36:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint40",
                                  "typeString": "uint40"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<",
                              "rightExpression": {
                                "expression": {
                                  "id": 466,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "7139:5:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 467,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "7139:15:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "7100:54:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "&&",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 472,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 469,
                                  "name": "myTask",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 442,
                                  "src": "7158:6:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Task_$76_memory_ptr",
                                    "typeString": "struct Governance.Task memory"
                                  }
                                },
                                "id": 470,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "NFTID",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 59,
                                "src": "7158:12:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint40",
                                  "typeString": "uint40"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "id": 471,
                                "name": "_wizId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 428,
                                "src": "7174:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "7158:22:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "7100:80:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 477,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 474,
                                "name": "myTask",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 442,
                                "src": "7184:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Task_$76_memory_ptr",
                                  "typeString": "struct Governance.Task memory"
                                }
                              },
                              "id": 475,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "refuterID",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 73,
                              "src": "7184:16:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "id": 476,
                              "name": "_wizId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 428,
                              "src": "7203:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "7184:25:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "7100:109:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 482,
                        "nodeType": "IfStatement",
                        "src": "7096:158:2",
                        "trueBody": {
                          "id": 481,
                          "nodeType": "Block",
                          "src": "7210:44:2",
                          "statements": [
                            {
                              "expression": {
                                "hexValue": "74727565",
                                "id": 479,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7235:4:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              },
                              "functionReturnParameters": 432,
                              "id": 480,
                              "nodeType": "Return",
                              "src": "7228:11:2"
                            }
                          ]
                        }
                      },
                      {
                        "id": 486,
                        "nodeType": "UncheckedBlock",
                        "src": "7267:15:2",
                        "statements": [
                          {
                            "expression": {
                              "id": 484,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": true,
                              "src": "7277:3:2",
                              "subExpression": {
                                "id": 483,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 445,
                                "src": "7279:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 485,
                            "nodeType": "ExpressionStatement",
                            "src": "7277:3:2"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 450,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 448,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 445,
                      "src": "6970:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 449,
                      "name": "totalTasksSubmitted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 434,
                      "src": "6974:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6970:23:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 488,
                  "initializationExpression": {
                    "assignments": [
                      445
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 445,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "6964:1:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 488,
                        "src": "6956:9:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 444,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6956:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 447,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 446,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6967:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "6956:12:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "6952:340:2"
                },
                {
                  "expression": {
                    "hexValue": "66616c7365",
                    "id": 489,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "7308:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "functionReturnParameters": 432,
                  "id": 490,
                  "nodeType": "Return",
                  "src": "7301:12:2"
                }
              ]
            },
            "functionSelector": "f4739bd9",
            "id": 492,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "areTasksAvailableToConfirm",
            "nameLocation": "6641:26:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 429,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 428,
                  "mutability": "mutable",
                  "name": "_wizId",
                  "nameLocation": "6676:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 492,
                  "src": "6668:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 427,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6668:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6667:16:2"
            },
            "returnParameters": {
              "id": 432,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 431,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 492,
                  "src": "6707:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 430,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6707:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6706:6:2"
            },
            "scope": 2021,
            "src": "6632:688:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 695,
              "nodeType": "Block",
              "src": "7429:1507:2",
              "statements": [
                {
                  "assignments": [
                    505
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 505,
                      "mutability": "mutable",
                      "name": "totalTasksSubmitted",
                      "nameLocation": "7447:19:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 695,
                      "src": "7439:27:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 504,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7439:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 510,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 508,
                        "name": "tasksWaitingConfirmation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98,
                        "src": "7493:24:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Bytes32Deque_$2893_storage",
                          "typeString": "struct DoubleEndedQueue.Bytes32Deque storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Bytes32Deque_$2893_storage",
                          "typeString": "struct DoubleEndedQueue.Bytes32Deque storage ref"
                        }
                      ],
                      "expression": {
                        "id": 506,
                        "name": "DoubleEndedQueue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3215,
                        "src": "7469:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_DoubleEndedQueue_$3215_$",
                          "typeString": "type(library DoubleEndedQueue)"
                        }
                      },
                      "id": 507,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3198,
                      "src": "7469:23:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32Deque_$2893_storage_ptr_$returns$_t_uint256_$",
                        "typeString": "function (struct DoubleEndedQueue.Bytes32Deque storage pointer) view returns (uint256)"
                      }
                    },
                    "id": 509,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7469:49:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7439:79:2"
                },
                {
                  "assignments": [
                    513
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 513,
                      "mutability": "mutable",
                      "name": "myTask",
                      "nameLocation": "7540:6:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 695,
                      "src": "7528:18:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Task_$76_memory_ptr",
                        "typeString": "struct Governance.Task"
                      },
                      "typeName": {
                        "id": 512,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 511,
                          "name": "Task",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 76,
                          "src": "7528:4:2"
                        },
                        "referencedDeclaration": 76,
                        "src": "7528:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Task_$76_storage_ptr",
                          "typeString": "struct Governance.Task"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 514,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7528:18:2"
                },
                {
                  "assignments": [
                    516
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 516,
                      "mutability": "mutable",
                      "name": "taskId",
                      "nameLocation": "7564:6:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 695,
                      "src": "7556:14:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 515,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7556:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 517,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7556:14:2"
                },
                {
                  "assignments": [
                    519
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 519,
                      "mutability": "mutable",
                      "name": "count",
                      "nameLocation": "7588:5:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 695,
                      "src": "7580:13:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 518,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7580:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 521,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 520,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "7594:1:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7580:15:2"
                },
                {
                  "body": {
                    "id": 566,
                    "nodeType": "Block",
                    "src": "7650:308:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 538,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 529,
                            "name": "taskId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 516,
                            "src": "7664:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 534,
                                    "name": "tasksWaitingConfirmation",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 98,
                                    "src": "7701:24:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Bytes32Deque_$2893_storage",
                                      "typeString": "struct DoubleEndedQueue.Bytes32Deque storage ref"
                                    }
                                  },
                                  {
                                    "id": 535,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 523,
                                    "src": "7727:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_struct$_Bytes32Deque_$2893_storage",
                                      "typeString": "struct DoubleEndedQueue.Bytes32Deque storage ref"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 532,
                                    "name": "DoubleEndedQueue",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3215,
                                    "src": "7681:16:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_DoubleEndedQueue_$3215_$",
                                      "typeString": "type(library DoubleEndedQueue)"
                                    }
                                  },
                                  "id": 533,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "at",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3152,
                                  "src": "7681:19:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32Deque_$2893_storage_ptr_$_t_uint256_$returns$_t_bytes32_$",
                                    "typeString": "function (struct DoubleEndedQueue.Bytes32Deque storage pointer,uint256) view returns (bytes32)"
                                  }
                                },
                                "id": 536,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7681:48:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "id": 531,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7673:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 530,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "7673:7:2",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 537,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7673:57:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7664:66:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 539,
                        "nodeType": "ExpressionStatement",
                        "src": "7664:66:2"
                      },
                      {
                        "expression": {
                          "id": 544,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 540,
                            "name": "myTask",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 513,
                            "src": "7744:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Task_$76_memory_ptr",
                              "typeString": "struct Governance.Task memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 541,
                              "name": "tasks",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 110,
                              "src": "7753:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Task_$76_storage_$",
                                "typeString": "mapping(uint256 => struct Governance.Task storage ref)"
                              }
                            },
                            "id": 543,
                            "indexExpression": {
                              "id": 542,
                              "name": "taskId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 516,
                              "src": "7759:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "7753:13:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Task_$76_storage",
                              "typeString": "struct Governance.Task storage ref"
                            }
                          },
                          "src": "7744:22:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Task_$76_memory_ptr",
                            "typeString": "struct Governance.Task memory"
                          }
                        },
                        "id": 545,
                        "nodeType": "ExpressionStatement",
                        "src": "7744:22:2"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 555,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 550,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 546,
                                "name": "myTask",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 513,
                                "src": "7784:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Task_$76_memory_ptr",
                                  "typeString": "struct Governance.Task memory"
                                }
                              },
                              "id": 547,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "verificationReservedTimestamp",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 75,
                              "src": "7784:36:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint40",
                                "typeString": "uint40"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "expression": {
                                "id": 548,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "7823:5:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 549,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "7823:15:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "7784:54:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint40",
                              "typeString": "uint40"
                            },
                            "id": 554,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 551,
                                "name": "myTask",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 513,
                                "src": "7842:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Task_$76_memory_ptr",
                                  "typeString": "struct Governance.Task memory"
                                }
                              },
                              "id": 552,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "verifierID",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 71,
                              "src": "7842:17:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 553,
                              "name": "_wizId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 494,
                              "src": "7862:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint40",
                                "typeString": "uint40"
                              }
                            },
                            "src": "7842:26:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "7784:84:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 561,
                        "nodeType": "IfStatement",
                        "src": "7780:140:2",
                        "trueBody": {
                          "id": 560,
                          "nodeType": "Block",
                          "src": "7869:51:2",
                          "statements": [
                            {
                              "id": 559,
                              "nodeType": "UncheckedBlock",
                              "src": "7887:19:2",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 557,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "UnaryOperation",
                                    "operator": "++",
                                    "prefix": true,
                                    "src": "7897:7:2",
                                    "subExpression": {
                                      "id": 556,
                                      "name": "count",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 519,
                                      "src": "7899:5:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 558,
                                  "nodeType": "ExpressionStatement",
                                  "src": "7897:7:2"
                                }
                              ]
                            }
                          ]
                        }
                      },
                      {
                        "id": 565,
                        "nodeType": "UncheckedBlock",
                        "src": "7933:15:2",
                        "statements": [
                          {
                            "expression": {
                              "id": 563,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": true,
                              "src": "7943:3:2",
                              "subExpression": {
                                "id": 562,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 523,
                                "src": "7945:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 564,
                            "nodeType": "ExpressionStatement",
                            "src": "7943:3:2"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 528,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 526,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 523,
                      "src": "7624:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 527,
                      "name": "totalTasksSubmitted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 505,
                      "src": "7628:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7624:23:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 567,
                  "initializationExpression": {
                    "assignments": [
                      523
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 523,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "7618:1:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 567,
                        "src": "7610:9:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 522,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7610:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 525,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 524,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7621:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "7610:12:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "7606:352:2"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 570,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 568,
                      "name": "count",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 519,
                      "src": "8015:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 569,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8022:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "8015:8:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 599,
                  "nodeType": "IfStatement",
                  "src": "8011:249:2",
                  "trueBody": {
                    "id": 598,
                    "nodeType": "Block",
                    "src": "8025:235:2",
                    "statements": [
                      {
                        "assignments": [
                          575
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 575,
                            "mutability": "mutable",
                            "name": "myReturn",
                            "nameLocation": "8053:8:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 598,
                            "src": "8039:22:2",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Task_$76_memory_ptr_$dyn_memory_ptr",
                              "typeString": "struct Governance.Task[]"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 573,
                                "nodeType": "UserDefinedTypeName",
                                "pathNode": {
                                  "id": 572,
                                  "name": "Task",
                                  "nodeType": "IdentifierPath",
                                  "referencedDeclaration": 76,
                                  "src": "8039:4:2"
                                },
                                "referencedDeclaration": 76,
                                "src": "8039:4:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Task_$76_storage_ptr",
                                  "typeString": "struct Governance.Task"
                                }
                              },
                              "id": 574,
                              "nodeType": "ArrayTypeName",
                              "src": "8039:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Task_$76_storage_$dyn_storage_ptr",
                                "typeString": "struct Governance.Task[]"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 582,
                        "initialValue": {
                          "arguments": [
                            {
                              "hexValue": "31",
                              "id": 580,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8074:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              }
                            ],
                            "id": 579,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "8063:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_Task_$76_memory_ptr_$dyn_memory_ptr_$",
                              "typeString": "function (uint256) pure returns (struct Governance.Task memory[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 577,
                                "nodeType": "UserDefinedTypeName",
                                "pathNode": {
                                  "id": 576,
                                  "name": "Task",
                                  "nodeType": "IdentifierPath",
                                  "referencedDeclaration": 76,
                                  "src": "8067:4:2"
                                },
                                "referencedDeclaration": 76,
                                "src": "8067:4:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Task_$76_storage_ptr",
                                  "typeString": "struct Governance.Task"
                                }
                              },
                              "id": 578,
                              "nodeType": "ArrayTypeName",
                              "src": "8067:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Task_$76_storage_$dyn_storage_ptr",
                                "typeString": "struct Governance.Task[]"
                              }
                            }
                          },
                          "id": 581,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8063:13:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Task_$76_memory_ptr_$dyn_memory_ptr",
                            "typeString": "struct Governance.Task memory[] memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8039:37:2"
                      },
                      {
                        "assignments": [
                          587
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 587,
                            "mutability": "mutable",
                            "name": "myReturnUint",
                            "nameLocation": "8107:12:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 598,
                            "src": "8090:29:2",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[]"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 585,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "8090:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 586,
                              "nodeType": "ArrayTypeName",
                              "src": "8090:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                                "typeString": "uint256[]"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 593,
                        "initialValue": {
                          "arguments": [
                            {
                              "hexValue": "31",
                              "id": 591,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8135:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              }
                            ],
                            "id": 590,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "8121:13:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                              "typeString": "function (uint256) pure returns (uint256[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 588,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "8125:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 589,
                              "nodeType": "ArrayTypeName",
                              "src": "8125:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                                "typeString": "uint256[]"
                              }
                            }
                          },
                          "id": 592,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8121:16:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8090:47:2"
                      },
                      {
                        "expression": {
                          "components": [
                            {
                              "id": 594,
                              "name": "myReturn",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 575,
                              "src": "8226:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Task_$76_memory_ptr_$dyn_memory_ptr",
                                "typeString": "struct Governance.Task memory[] memory"
                              }
                            },
                            {
                              "id": 595,
                              "name": "myReturnUint",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 587,
                              "src": "8236:12:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            }
                          ],
                          "id": 596,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "8225:24:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_array$_t_struct$_Task_$76_memory_ptr_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
                            "typeString": "tuple(struct Governance.Task memory[] memory,uint256[] memory)"
                          }
                        },
                        "functionReturnParameters": 503,
                        "id": 597,
                        "nodeType": "Return",
                        "src": "8218:31:2"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    601
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 601,
                      "mutability": "mutable",
                      "name": "counter",
                      "nameLocation": "8278:7:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 695,
                      "src": "8270:15:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 600,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8270:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 603,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 602,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "8288:1:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8270:19:2"
                },
                {
                  "assignments": [
                    608
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 608,
                      "mutability": "mutable",
                      "name": "myTasks",
                      "nameLocation": "8313:7:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 695,
                      "src": "8299:21:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Task_$76_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct Governance.Task[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 606,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 605,
                            "name": "Task",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 76,
                            "src": "8299:4:2"
                          },
                          "referencedDeclaration": 76,
                          "src": "8299:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Task_$76_storage_ptr",
                            "typeString": "struct Governance.Task"
                          }
                        },
                        "id": 607,
                        "nodeType": "ArrayTypeName",
                        "src": "8299:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Task_$76_storage_$dyn_storage_ptr",
                          "typeString": "struct Governance.Task[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 615,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 613,
                        "name": "count",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 519,
                        "src": "8334:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 612,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "8323:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_Task_$76_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (struct Governance.Task memory[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 610,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 609,
                            "name": "Task",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 76,
                            "src": "8327:4:2"
                          },
                          "referencedDeclaration": 76,
                          "src": "8327:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Task_$76_storage_ptr",
                            "typeString": "struct Governance.Task"
                          }
                        },
                        "id": 611,
                        "nodeType": "ArrayTypeName",
                        "src": "8327:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Task_$76_storage_$dyn_storage_ptr",
                          "typeString": "struct Governance.Task[]"
                        }
                      }
                    },
                    "id": 614,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8323:17:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Task_$76_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct Governance.Task memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8299:41:2"
                },
                {
                  "assignments": [
                    620
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 620,
                      "mutability": "mutable",
                      "name": "myTaskIds",
                      "nameLocation": "8367:9:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 695,
                      "src": "8350:26:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 618,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8350:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 619,
                        "nodeType": "ArrayTypeName",
                        "src": "8350:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 626,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 624,
                        "name": "count",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 519,
                        "src": "8393:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 623,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "8379:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (uint256[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 621,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8383:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 622,
                        "nodeType": "ArrayTypeName",
                        "src": "8383:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      }
                    },
                    "id": 625,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8379:20:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8350:49:2"
                },
                {
                  "body": {
                    "id": 689,
                    "nodeType": "Block",
                    "src": "8453:440:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 643,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 634,
                            "name": "taskId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 516,
                            "src": "8467:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 639,
                                    "name": "tasksWaitingConfirmation",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 98,
                                    "src": "8504:24:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Bytes32Deque_$2893_storage",
                                      "typeString": "struct DoubleEndedQueue.Bytes32Deque storage ref"
                                    }
                                  },
                                  {
                                    "id": 640,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 628,
                                    "src": "8530:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_struct$_Bytes32Deque_$2893_storage",
                                      "typeString": "struct DoubleEndedQueue.Bytes32Deque storage ref"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 637,
                                    "name": "DoubleEndedQueue",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3215,
                                    "src": "8484:16:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_DoubleEndedQueue_$3215_$",
                                      "typeString": "type(library DoubleEndedQueue)"
                                    }
                                  },
                                  "id": 638,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "at",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3152,
                                  "src": "8484:19:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32Deque_$2893_storage_ptr_$_t_uint256_$returns$_t_bytes32_$",
                                    "typeString": "function (struct DoubleEndedQueue.Bytes32Deque storage pointer,uint256) view returns (bytes32)"
                                  }
                                },
                                "id": 641,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8484:48:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "id": 636,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "8476:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 635,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "8476:7:2",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 642,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8476:57:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8467:66:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 644,
                        "nodeType": "ExpressionStatement",
                        "src": "8467:66:2"
                      },
                      {
                        "expression": {
                          "id": 649,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 645,
                            "name": "myTask",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 513,
                            "src": "8547:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Task_$76_memory_ptr",
                              "typeString": "struct Governance.Task memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 646,
                              "name": "tasks",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 110,
                              "src": "8556:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Task_$76_storage_$",
                                "typeString": "mapping(uint256 => struct Governance.Task storage ref)"
                              }
                            },
                            "id": 648,
                            "indexExpression": {
                              "id": 647,
                              "name": "taskId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 516,
                              "src": "8562:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "8556:13:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Task_$76_storage",
                              "typeString": "struct Governance.Task storage ref"
                            }
                          },
                          "src": "8547:22:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Task_$76_memory_ptr",
                            "typeString": "struct Governance.Task memory"
                          }
                        },
                        "id": 650,
                        "nodeType": "ExpressionStatement",
                        "src": "8547:22:2"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 660,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 655,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 651,
                                "name": "myTask",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 513,
                                "src": "8587:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Task_$76_memory_ptr",
                                  "typeString": "struct Governance.Task memory"
                                }
                              },
                              "id": 652,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "verificationReservedTimestamp",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 75,
                              "src": "8587:36:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint40",
                                "typeString": "uint40"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "expression": {
                                "id": 653,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "8626:5:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 654,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "8626:15:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "8587:54:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint40",
                              "typeString": "uint40"
                            },
                            "id": 659,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 656,
                                "name": "myTask",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 513,
                                "src": "8645:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Task_$76_memory_ptr",
                                  "typeString": "struct Governance.Task memory"
                                }
                              },
                              "id": 657,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "verifierID",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 71,
                              "src": "8645:17:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 658,
                              "name": "_wizId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 494,
                              "src": "8665:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint40",
                                "typeString": "uint40"
                              }
                            },
                            "src": "8645:26:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "8587:84:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 684,
                        "nodeType": "IfStatement",
                        "src": "8583:272:2",
                        "trueBody": {
                          "id": 683,
                          "nodeType": "Block",
                          "src": "8672:183:2",
                          "statements": [
                            {
                              "expression": {
                                "id": 665,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 661,
                                    "name": "myTasks",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 608,
                                    "src": "8690:7:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_Task_$76_memory_ptr_$dyn_memory_ptr",
                                      "typeString": "struct Governance.Task memory[] memory"
                                    }
                                  },
                                  "id": 663,
                                  "indexExpression": {
                                    "id": 662,
                                    "name": "counter",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 601,
                                    "src": "8698:7:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "8690:16:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Task_$76_memory_ptr",
                                    "typeString": "struct Governance.Task memory"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 664,
                                  "name": "myTask",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 513,
                                  "src": "8709:6:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Task_$76_memory_ptr",
                                    "typeString": "struct Governance.Task memory"
                                  }
                                },
                                "src": "8690:25:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Task_$76_memory_ptr",
                                  "typeString": "struct Governance.Task memory"
                                }
                              },
                              "id": 666,
                              "nodeType": "ExpressionStatement",
                              "src": "8690:25:2"
                            },
                            {
                              "expression": {
                                "id": 671,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 667,
                                    "name": "myTaskIds",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 620,
                                    "src": "8733:9:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                      "typeString": "uint256[] memory"
                                    }
                                  },
                                  "id": 669,
                                  "indexExpression": {
                                    "id": 668,
                                    "name": "counter",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 601,
                                    "src": "8743:7:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "8733:18:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 670,
                                  "name": "taskId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 516,
                                  "src": "8754:6:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "8733:27:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 672,
                              "nodeType": "ExpressionStatement",
                              "src": "8733:27:2"
                            },
                            {
                              "id": 676,
                              "nodeType": "UncheckedBlock",
                              "src": "8778:21:2",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 674,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "UnaryOperation",
                                    "operator": "++",
                                    "prefix": true,
                                    "src": "8788:9:2",
                                    "subExpression": {
                                      "id": 673,
                                      "name": "counter",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 601,
                                      "src": "8790:7:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 675,
                                  "nodeType": "ExpressionStatement",
                                  "src": "8788:9:2"
                                }
                              ]
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 679,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 677,
                                  "name": "counter",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 601,
                                  "src": "8819:7:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">",
                                "rightExpression": {
                                  "id": 678,
                                  "name": "count",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 519,
                                  "src": "8827:5:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "8819:13:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 682,
                              "nodeType": "IfStatement",
                              "src": "8816:25:2",
                              "trueBody": {
                                "id": 681,
                                "nodeType": "Block",
                                "src": "8833:8:2",
                                "statements": [
                                  {
                                    "id": 680,
                                    "nodeType": "Break",
                                    "src": "8834:5:2"
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      },
                      {
                        "id": 688,
                        "nodeType": "UncheckedBlock",
                        "src": "8868:15:2",
                        "statements": [
                          {
                            "expression": {
                              "id": 686,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": true,
                              "src": "8878:3:2",
                              "subExpression": {
                                "id": 685,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 628,
                                "src": "8880:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 687,
                            "nodeType": "ExpressionStatement",
                            "src": "8878:3:2"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 633,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 631,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 628,
                      "src": "8427:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 632,
                      "name": "totalTasksSubmitted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 505,
                      "src": "8431:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8427:23:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 690,
                  "initializationExpression": {
                    "assignments": [
                      628
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 628,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "8421:1:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 690,
                        "src": "8413:9:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 627,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8413:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 630,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 629,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8424:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "8413:12:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "8409:484:2"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "id": 691,
                        "name": "myTasks",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 608,
                        "src": "8910:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Task_$76_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct Governance.Task memory[] memory"
                        }
                      },
                      {
                        "id": 692,
                        "name": "myTaskIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 620,
                        "src": "8919:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      }
                    ],
                    "id": 693,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "8909:20:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_array$_t_struct$_Task_$76_memory_ptr_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
                      "typeString": "tuple(struct Governance.Task memory[] memory,uint256[] memory)"
                    }
                  },
                  "functionReturnParameters": 503,
                  "id": 694,
                  "nodeType": "Return",
                  "src": "8902:27:2"
                }
              ]
            },
            "functionSelector": "4b50f16a",
            "id": 696,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTasksAssignedToWiz",
            "nameLocation": "7336:21:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 495,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 494,
                  "mutability": "mutable",
                  "name": "_wizId",
                  "nameLocation": "7365:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 696,
                  "src": "7358:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  },
                  "typeName": {
                    "id": 493,
                    "name": "uint40",
                    "nodeType": "ElementaryTypeName",
                    "src": "7358:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7357:15:2"
            },
            "returnParameters": {
              "id": 503,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 499,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 696,
                  "src": "7396:13:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Task_$76_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct Governance.Task[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 497,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 496,
                        "name": "Task",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 76,
                        "src": "7396:4:2"
                      },
                      "referencedDeclaration": 76,
                      "src": "7396:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Task_$76_storage_ptr",
                        "typeString": "struct Governance.Task"
                      }
                    },
                    "id": 498,
                    "nodeType": "ArrayTypeName",
                    "src": "7396:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Task_$76_storage_$dyn_storage_ptr",
                      "typeString": "struct Governance.Task[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 502,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 696,
                  "src": "7411:16:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 500,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "7411:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 501,
                    "nodeType": "ArrayTypeName",
                    "src": "7411:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7395:33:2"
            },
            "scope": 2021,
            "src": "7327:1609:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 867,
              "nodeType": "Block",
              "src": "9100:1412:2",
              "statements": [
                {
                  "assignments": [
                    705
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 705,
                      "mutability": "mutable",
                      "name": "count",
                      "nameLocation": "9118:5:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 867,
                      "src": "9110:13:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 704,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9110:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 706,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9110:13:2"
                },
                {
                  "body": {
                    "id": 757,
                    "nodeType": "Block",
                    "src": "9171:506:2",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 746,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 739,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 731,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 723,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "baseExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 715,
                                        "name": "taskTypes",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 95,
                                        "src": "9188:9:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_TaskType_$55_storage_$dyn_storage",
                                          "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                        }
                                      },
                                      "id": 717,
                                      "indexExpression": {
                                        "id": 716,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 708,
                                        "src": "9198:1:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "9188:12:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_TaskType_$55_storage",
                                        "typeString": "struct Governance.TaskType storage ref"
                                      }
                                    },
                                    "id": 718,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "nextActiveTimeThreshold",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 38,
                                    "src": "9188:36:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint40_$_t_uint256_$",
                                      "typeString": "mapping(uint40 => uint256)"
                                    }
                                  },
                                  "id": 720,
                                  "indexExpression": {
                                    "id": 719,
                                    "name": "_wizId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 698,
                                    "src": "9225:6:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint40",
                                      "typeString": "uint40"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "9188:44:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<",
                                "rightExpression": {
                                  "expression": {
                                    "id": 721,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "9235:5:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 722,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "9235:15:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "9188:62:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 730,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 724,
                                      "name": "taskTypes",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 95,
                                      "src": "9266:9:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_TaskType_$55_storage_$dyn_storage",
                                        "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                      }
                                    },
                                    "id": 726,
                                    "indexExpression": {
                                      "id": 725,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 708,
                                      "src": "9276:1:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "9266:12:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_TaskType_$55_storage",
                                      "typeString": "struct Governance.TaskType storage ref"
                                    }
                                  },
                                  "id": 727,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "begTimestamp",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 50,
                                  "src": "9266:25:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint40",
                                    "typeString": "uint40"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<=",
                                "rightExpression": {
                                  "expression": {
                                    "id": 728,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "9295:5:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 729,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "9295:15:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "9266:44:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "9188:122:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "&&",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 738,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 732,
                                    "name": "taskTypes",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 95,
                                    "src": "9314:9:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_TaskType_$55_storage_$dyn_storage",
                                      "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                    }
                                  },
                                  "id": 734,
                                  "indexExpression": {
                                    "id": 733,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 708,
                                    "src": "9324:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "9314:12:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_TaskType_$55_storage",
                                    "typeString": "struct Governance.TaskType storage ref"
                                  }
                                },
                                "id": 735,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "endTimestamp",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 52,
                                "src": "9314:25:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint40",
                                  "typeString": "uint40"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "expression": {
                                  "id": 736,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "9342:5:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 737,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "9342:15:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "9314:43:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "9188:169:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            },
                            "id": 745,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 740,
                                  "name": "taskTypes",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 95,
                                  "src": "9373:9:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_TaskType_$55_storage_$dyn_storage",
                                    "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                  }
                                },
                                "id": 742,
                                "indexExpression": {
                                  "id": 741,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 708,
                                  "src": "9383:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "9373:12:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TaskType_$55_storage",
                                  "typeString": "struct Governance.TaskType storage ref"
                                }
                              },
                              "id": 743,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "availableSlots",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 54,
                              "src": "9373:27:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 744,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9403:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "9373:31:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "9188:216:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 752,
                        "nodeType": "IfStatement",
                        "src": "9185:285:2",
                        "trueBody": {
                          "id": 751,
                          "nodeType": "Block",
                          "src": "9419:51:2",
                          "statements": [
                            {
                              "id": 750,
                              "nodeType": "UncheckedBlock",
                              "src": "9437:19:2",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 748,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "UnaryOperation",
                                    "operator": "++",
                                    "prefix": true,
                                    "src": "9447:7:2",
                                    "subExpression": {
                                      "id": 747,
                                      "name": "count",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 705,
                                      "src": "9449:5:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 749,
                                  "nodeType": "ExpressionStatement",
                                  "src": "9447:7:2"
                                }
                              ]
                            }
                          ]
                        }
                      },
                      {
                        "id": 756,
                        "nodeType": "UncheckedBlock",
                        "src": "9652:15:2",
                        "statements": [
                          {
                            "expression": {
                              "id": 754,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": true,
                              "src": "9662:3:2",
                              "subExpression": {
                                "id": 753,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 708,
                                "src": "9664:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 755,
                            "nodeType": "ExpressionStatement",
                            "src": "9662:3:2"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 714,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 711,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 708,
                      "src": "9150:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 712,
                        "name": "taskTypes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 95,
                        "src": "9153:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_TaskType_$55_storage_$dyn_storage",
                          "typeString": "struct Governance.TaskType storage ref[] storage ref"
                        }
                      },
                      "id": 713,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "9153:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9150:19:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 758,
                  "initializationExpression": {
                    "assignments": [
                      708
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 708,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "9145:1:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 758,
                        "src": "9137:9:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 707,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "9137:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 710,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 709,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9147:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "9137:11:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "9133:544:2"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 761,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 759,
                      "name": "count",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 705,
                      "src": "9734:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 760,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9741:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "9734:8:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 782,
                  "nodeType": "IfStatement",
                  "src": "9730:139:2",
                  "trueBody": {
                    "id": 781,
                    "nodeType": "Block",
                    "src": "9744:125:2",
                    "statements": [
                      {
                        "assignments": [
                          766
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 766,
                            "mutability": "mutable",
                            "name": "myReturn",
                            "nameLocation": "9774:8:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 781,
                            "src": "9758:24:2",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                              "typeString": "string[]"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 764,
                                "name": "string",
                                "nodeType": "ElementaryTypeName",
                                "src": "9758:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_storage_ptr",
                                  "typeString": "string"
                                }
                              },
                              "id": 765,
                              "nodeType": "ArrayTypeName",
                              "src": "9758:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                                "typeString": "string[]"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 772,
                        "initialValue": {
                          "arguments": [
                            {
                              "hexValue": "31",
                              "id": 770,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9797:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              }
                            ],
                            "id": 769,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "9784:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$",
                              "typeString": "function (uint256) pure returns (string memory[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 767,
                                "name": "string",
                                "nodeType": "ElementaryTypeName",
                                "src": "9788:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_storage_ptr",
                                  "typeString": "string"
                                }
                              },
                              "id": 768,
                              "nodeType": "ArrayTypeName",
                              "src": "9788:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                                "typeString": "string[]"
                              }
                            }
                          },
                          "id": 771,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9784:15:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                            "typeString": "string memory[] memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9758:41:2"
                      },
                      {
                        "expression": {
                          "id": 777,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 773,
                              "name": "myReturn",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 766,
                              "src": "9813:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                                "typeString": "string memory[] memory"
                              }
                            },
                            "id": 775,
                            "indexExpression": {
                              "hexValue": "30",
                              "id": 774,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9822:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "9813:11:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "",
                            "id": 776,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9827:2:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                              "typeString": "literal_string \"\""
                            },
                            "value": ""
                          },
                          "src": "9813:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "id": 778,
                        "nodeType": "ExpressionStatement",
                        "src": "9813:16:2"
                      },
                      {
                        "expression": {
                          "id": 779,
                          "name": "myReturn",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 766,
                          "src": "9850:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                            "typeString": "string memory[] memory"
                          }
                        },
                        "functionReturnParameters": 703,
                        "id": 780,
                        "nodeType": "Return",
                        "src": "9843:15:2"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    787
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 787,
                      "mutability": "mutable",
                      "name": "myTasks",
                      "nameLocation": "9895:7:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 867,
                      "src": "9879:23:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                        "typeString": "string[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 785,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "9879:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "id": 786,
                        "nodeType": "ArrayTypeName",
                        "src": "9879:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                          "typeString": "string[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 793,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 791,
                        "name": "count",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 705,
                        "src": "9918:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 790,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "9905:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (string memory[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 788,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "9909:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "id": 789,
                        "nodeType": "ArrayTypeName",
                        "src": "9909:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                          "typeString": "string[]"
                        }
                      }
                    },
                    "id": 792,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9905:19:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                      "typeString": "string memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9879:45:2"
                },
                {
                  "assignments": [
                    795
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 795,
                      "mutability": "mutable",
                      "name": "counter",
                      "nameLocation": "9942:7:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 867,
                      "src": "9934:15:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 794,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9934:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 797,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 796,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "9952:1:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9934:19:2"
                },
                {
                  "body": {
                    "id": 863,
                    "nodeType": "Block",
                    "src": "10001:481:2",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 837,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 830,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 822,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 814,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "baseExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 806,
                                        "name": "taskTypes",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 95,
                                        "src": "10018:9:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_TaskType_$55_storage_$dyn_storage",
                                          "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                        }
                                      },
                                      "id": 808,
                                      "indexExpression": {
                                        "id": 807,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 799,
                                        "src": "10028:1:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "10018:12:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_TaskType_$55_storage",
                                        "typeString": "struct Governance.TaskType storage ref"
                                      }
                                    },
                                    "id": 809,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "nextActiveTimeThreshold",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 38,
                                    "src": "10018:36:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint40_$_t_uint256_$",
                                      "typeString": "mapping(uint40 => uint256)"
                                    }
                                  },
                                  "id": 811,
                                  "indexExpression": {
                                    "id": 810,
                                    "name": "_wizId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 698,
                                    "src": "10055:6:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint40",
                                      "typeString": "uint40"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "10018:44:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<",
                                "rightExpression": {
                                  "expression": {
                                    "id": 812,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "10065:5:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 813,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "10065:15:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "10018:62:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 821,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 815,
                                      "name": "taskTypes",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 95,
                                      "src": "10096:9:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_TaskType_$55_storage_$dyn_storage",
                                        "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                      }
                                    },
                                    "id": 817,
                                    "indexExpression": {
                                      "id": 816,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 799,
                                      "src": "10106:1:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "10096:12:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_TaskType_$55_storage",
                                      "typeString": "struct Governance.TaskType storage ref"
                                    }
                                  },
                                  "id": 818,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "begTimestamp",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 50,
                                  "src": "10096:25:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint40",
                                    "typeString": "uint40"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<=",
                                "rightExpression": {
                                  "expression": {
                                    "id": 819,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "10125:5:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 820,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "10125:15:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "10096:44:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "10018:122:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "&&",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 829,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 823,
                                    "name": "taskTypes",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 95,
                                    "src": "10144:9:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_TaskType_$55_storage_$dyn_storage",
                                      "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                    }
                                  },
                                  "id": 825,
                                  "indexExpression": {
                                    "id": 824,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 799,
                                    "src": "10154:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "10144:12:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_TaskType_$55_storage",
                                    "typeString": "struct Governance.TaskType storage ref"
                                  }
                                },
                                "id": 826,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "endTimestamp",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 52,
                                "src": "10144:25:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint40",
                                  "typeString": "uint40"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "expression": {
                                  "id": 827,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "10172:5:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 828,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "10172:15:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "10144:43:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "10018:169:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            },
                            "id": 836,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 831,
                                  "name": "taskTypes",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 95,
                                  "src": "10203:9:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_TaskType_$55_storage_$dyn_storage",
                                    "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                  }
                                },
                                "id": 833,
                                "indexExpression": {
                                  "id": 832,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 799,
                                  "src": "10213:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "10203:12:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TaskType_$55_storage",
                                  "typeString": "struct Governance.TaskType storage ref"
                                }
                              },
                              "id": 834,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "availableSlots",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 54,
                              "src": "10203:27:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 835,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10233:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "10203:31:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "10018:216:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 858,
                        "nodeType": "IfStatement",
                        "src": "10015:429:2",
                        "trueBody": {
                          "id": 857,
                          "nodeType": "Block",
                          "src": "10249:195:2",
                          "statements": [
                            {
                              "expression": {
                                "id": 845,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 838,
                                    "name": "myTasks",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 787,
                                    "src": "10267:7:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                                      "typeString": "string memory[] memory"
                                    }
                                  },
                                  "id": 840,
                                  "indexExpression": {
                                    "id": 839,
                                    "name": "counter",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 795,
                                    "src": "10275:7:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "10267:16:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 841,
                                      "name": "taskTypes",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 95,
                                      "src": "10286:9:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_TaskType_$55_storage_$dyn_storage",
                                        "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                      }
                                    },
                                    "id": 843,
                                    "indexExpression": {
                                      "id": 842,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 799,
                                      "src": "10296:1:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "10286:12:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_TaskType_$55_storage",
                                      "typeString": "struct Governance.TaskType storage ref"
                                    }
                                  },
                                  "id": 844,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "IPFSHash",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 40,
                                  "src": "10286:21:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_storage",
                                    "typeString": "string storage ref"
                                  }
                                },
                                "src": "10267:40:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              "id": 846,
                              "nodeType": "ExpressionStatement",
                              "src": "10267:40:2"
                            },
                            {
                              "id": 850,
                              "nodeType": "UncheckedBlock",
                              "src": "10325:21:2",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 848,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "UnaryOperation",
                                    "operator": "++",
                                    "prefix": true,
                                    "src": "10335:9:2",
                                    "subExpression": {
                                      "id": 847,
                                      "name": "counter",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 795,
                                      "src": "10337:7:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 849,
                                  "nodeType": "ExpressionStatement",
                                  "src": "10335:9:2"
                                }
                              ]
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 853,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 851,
                                  "name": "counter",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 795,
                                  "src": "10366:7:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">=",
                                "rightExpression": {
                                  "id": 852,
                                  "name": "count",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 705,
                                  "src": "10377:5:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "10366:16:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 856,
                              "nodeType": "IfStatement",
                              "src": "10363:67:2",
                              "trueBody": {
                                "id": 855,
                                "nodeType": "Block",
                                "src": "10384:46:2",
                                "statements": [
                                  {
                                    "id": 854,
                                    "nodeType": "Break",
                                    "src": "10406:5:2"
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      },
                      {
                        "id": 862,
                        "nodeType": "UncheckedBlock",
                        "src": "10457:15:2",
                        "statements": [
                          {
                            "expression": {
                              "id": 860,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": true,
                              "src": "10467:3:2",
                              "subExpression": {
                                "id": 859,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 799,
                                "src": "10469:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 861,
                            "nodeType": "ExpressionStatement",
                            "src": "10467:3:2"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 805,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 802,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 799,
                      "src": "9980:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 803,
                        "name": "taskTypes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 95,
                        "src": "9983:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_TaskType_$55_storage_$dyn_storage",
                          "typeString": "struct Governance.TaskType storage ref[] storage ref"
                        }
                      },
                      "id": 804,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "9983:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9980:19:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 864,
                  "initializationExpression": {
                    "assignments": [
                      799
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 799,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "9975:1:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 864,
                        "src": "9967:9:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 798,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "9967:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 801,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 800,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9977:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "9967:11:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "9963:519:2"
                },
                {
                  "expression": {
                    "id": 865,
                    "name": "myTasks",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 787,
                    "src": "10498:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                      "typeString": "string memory[] memory"
                    }
                  },
                  "functionReturnParameters": 703,
                  "id": 866,
                  "nodeType": "Return",
                  "src": "10491:14:2"
                }
              ]
            },
            "functionSelector": "b2bad544",
            "id": 868,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getMyAvailableTaskTypes",
            "nameLocation": "9021:23:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 699,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 698,
                  "mutability": "mutable",
                  "name": "_wizId",
                  "nameLocation": "9052:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 868,
                  "src": "9045:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  },
                  "typeName": {
                    "id": 697,
                    "name": "uint40",
                    "nodeType": "ElementaryTypeName",
                    "src": "9045:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9044:15:2"
            },
            "returnParameters": {
              "id": 703,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 702,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 868,
                  "src": "9083:15:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                    "typeString": "string[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 700,
                      "name": "string",
                      "nodeType": "ElementaryTypeName",
                      "src": "9083:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      }
                    },
                    "id": 701,
                    "nodeType": "ArrayTypeName",
                    "src": "9083:8:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                      "typeString": "string[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9082:17:2"
            },
            "scope": 2021,
            "src": "9012:1500:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 881,
              "nodeType": "Block",
              "src": "10679:44:2",
              "statements": [
                {
                  "expression": {
                    "id": 879,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 875,
                      "name": "wizardsNFT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25,
                      "src": "10689:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Wizards_$7202",
                        "typeString": "contract Wizards"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 877,
                          "name": "_addy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 870,
                          "src": "10710:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 876,
                        "name": "Wizards",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7202,
                        "src": "10702:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Wizards_$7202_$",
                          "typeString": "type(contract Wizards)"
                        }
                      },
                      "id": 878,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10702:14:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Wizards_$7202",
                        "typeString": "contract Wizards"
                      }
                    },
                    "src": "10689:27:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Wizards_$7202",
                      "typeString": "contract Wizards"
                    }
                  },
                  "id": 880,
                  "nodeType": "ExpressionStatement",
                  "src": "10689:27:2"
                }
              ]
            },
            "functionSelector": "69d03738",
            "id": 882,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 873,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 872,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 5281,
                  "src": "10669:9:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "10669:9:2"
              }
            ],
            "name": "setNFTAddress",
            "nameLocation": "10631:13:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 871,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 870,
                  "mutability": "mutable",
                  "name": "_addy",
                  "nameLocation": "10653:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 882,
                  "src": "10645:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 869,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10645:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10644:15:2"
            },
            "returnParameters": {
              "id": 874,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10679:0:2"
            },
            "scope": 2021,
            "src": "10622:101:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 957,
              "nodeType": "Block",
              "src": "10917:1153:2",
              "statements": [
                {
                  "body": {
                    "id": 955,
                    "nodeType": "Block",
                    "src": "10964:1100:2",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          "id": 910,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 898,
                                        "name": "taskTypes",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 95,
                                        "src": "11008:9:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_TaskType_$55_storage_$dyn_storage",
                                          "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                        }
                                      },
                                      "id": 900,
                                      "indexExpression": {
                                        "id": 899,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 888,
                                        "src": "11018:1:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "11008:12:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_TaskType_$55_storage",
                                        "typeString": "struct Governance.TaskType storage ref"
                                      }
                                    },
                                    "id": 901,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "IPFSHash",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 40,
                                    "src": "11008:21:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_storage",
                                      "typeString": "string storage ref"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_string_storage",
                                      "typeString": "string storage ref"
                                    }
                                  ],
                                  "expression": {
                                    "id": 896,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "10991:3:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 897,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "encodePacked",
                                  "nodeType": "MemberAccess",
                                  "src": "10991:16:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 902,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "10991:39:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 895,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "10981:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 903,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10981:50:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 907,
                                    "name": "_IPFSHash",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 884,
                                    "src": "11062:9:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  ],
                                  "expression": {
                                    "id": 905,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "11045:3:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 906,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "encodePacked",
                                  "nodeType": "MemberAccess",
                                  "src": "11045:16:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 908,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "11045:27:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 904,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "11035:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 909,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11035:38:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "10981:92:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 950,
                        "nodeType": "IfStatement",
                        "src": "10978:1048:2",
                        "trueBody": {
                          "id": 949,
                          "nodeType": "Block",
                          "src": "11074:952:2",
                          "statements": [
                            {
                              "assignments": [
                                913
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 913,
                                  "mutability": "mutable",
                                  "name": "myTaskType",
                                  "nameLocation": "11173:10:2",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 949,
                                  "src": "11156:27:2",
                                  "stateVariable": false,
                                  "storageLocation": "storage",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_TaskType_$55_storage_ptr",
                                    "typeString": "struct Governance.TaskType"
                                  },
                                  "typeName": {
                                    "id": 912,
                                    "nodeType": "UserDefinedTypeName",
                                    "pathNode": {
                                      "id": 911,
                                      "name": "TaskType",
                                      "nodeType": "IdentifierPath",
                                      "referencedDeclaration": 55,
                                      "src": "11156:8:2"
                                    },
                                    "referencedDeclaration": 55,
                                    "src": "11156:8:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_TaskType_$55_storage_ptr",
                                      "typeString": "struct Governance.TaskType"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 917,
                              "initialValue": {
                                "baseExpression": {
                                  "id": 914,
                                  "name": "taskTypes",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 95,
                                  "src": "11186:9:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_TaskType_$55_storage_$dyn_storage",
                                    "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                  }
                                },
                                "id": 916,
                                "indexExpression": {
                                  "id": 915,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 888,
                                  "src": "11196:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "11186:12:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TaskType_$55_storage",
                                  "typeString": "struct Governance.TaskType storage ref"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "11156:42:2"
                            },
                            {
                              "assignments": [
                                920
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 920,
                                  "mutability": "mutable",
                                  "name": "displacedTaskType",
                                  "nameLocation": "11233:17:2",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 949,
                                  "src": "11216:34:2",
                                  "stateVariable": false,
                                  "storageLocation": "storage",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_TaskType_$55_storage_ptr",
                                    "typeString": "struct Governance.TaskType"
                                  },
                                  "typeName": {
                                    "id": 919,
                                    "nodeType": "UserDefinedTypeName",
                                    "pathNode": {
                                      "id": 918,
                                      "name": "TaskType",
                                      "nodeType": "IdentifierPath",
                                      "referencedDeclaration": 55,
                                      "src": "11216:8:2"
                                    },
                                    "referencedDeclaration": 55,
                                    "src": "11216:8:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_TaskType_$55_storage_ptr",
                                      "typeString": "struct Governance.TaskType"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 927,
                              "initialValue": {
                                "baseExpression": {
                                  "id": 921,
                                  "name": "taskTypes",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 95,
                                  "src": "11253:9:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_TaskType_$55_storage_$dyn_storage",
                                    "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                  }
                                },
                                "id": 926,
                                "indexExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 925,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "id": 922,
                                      "name": "taskTypes",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 95,
                                      "src": "11263:9:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_TaskType_$55_storage_$dyn_storage",
                                        "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                      }
                                    },
                                    "id": 923,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "length",
                                    "nodeType": "MemberAccess",
                                    "src": "11263:16:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "hexValue": "31",
                                    "id": 924,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "11280:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    "value": "1"
                                  },
                                  "src": "11263:18:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "11253:29:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TaskType_$55_storage",
                                  "typeString": "struct Governance.TaskType storage ref"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "11216:66:2"
                            },
                            {
                              "expression": {
                                "id": 930,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 928,
                                  "name": "myTaskType",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 913,
                                  "src": "11398:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_TaskType_$55_storage_ptr",
                                    "typeString": "struct Governance.TaskType storage pointer"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 929,
                                  "name": "displacedTaskType",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 920,
                                  "src": "11411:17:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_TaskType_$55_storage_ptr",
                                    "typeString": "struct Governance.TaskType storage pointer"
                                  }
                                },
                                "src": "11398:30:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TaskType_$55_storage_ptr",
                                  "typeString": "struct Governance.TaskType storage pointer"
                                }
                              },
                              "id": 931,
                              "nodeType": "ExpressionStatement",
                              "src": "11398:30:2"
                            },
                            {
                              "expression": {
                                "id": 938,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "delete",
                                "prefix": true,
                                "src": "11446:36:2",
                                "subExpression": {
                                  "baseExpression": {
                                    "id": 932,
                                    "name": "taskTypes",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 95,
                                    "src": "11453:9:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_TaskType_$55_storage_$dyn_storage",
                                      "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                    }
                                  },
                                  "id": 937,
                                  "indexExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 936,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "id": 933,
                                        "name": "taskTypes",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 95,
                                        "src": "11463:9:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_TaskType_$55_storage_$dyn_storage",
                                          "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                        }
                                      },
                                      "id": 934,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "length",
                                      "nodeType": "MemberAccess",
                                      "src": "11463:16:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "-",
                                    "rightExpression": {
                                      "hexValue": "31",
                                      "id": 935,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "11480:1:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1_by_1",
                                        "typeString": "int_const 1"
                                      },
                                      "value": "1"
                                    },
                                    "src": "11463:18:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "11453:29:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_TaskType_$55_storage",
                                    "typeString": "struct Governance.TaskType storage ref"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 939,
                              "nodeType": "ExpressionStatement",
                              "src": "11446:36:2"
                            },
                            {
                              "expression": {
                                "id": 946,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "delete",
                                "prefix": true,
                                "src": "11952:36:2",
                                "subExpression": {
                                  "baseExpression": {
                                    "id": 940,
                                    "name": "taskTypes",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 95,
                                    "src": "11959:9:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_TaskType_$55_storage_$dyn_storage",
                                      "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                    }
                                  },
                                  "id": 945,
                                  "indexExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 944,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "id": 941,
                                        "name": "taskTypes",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 95,
                                        "src": "11969:9:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_TaskType_$55_storage_$dyn_storage",
                                          "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                        }
                                      },
                                      "id": 942,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "length",
                                      "nodeType": "MemberAccess",
                                      "src": "11969:16:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "-",
                                    "rightExpression": {
                                      "hexValue": "31",
                                      "id": 943,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "11986:1:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1_by_1",
                                        "typeString": "int_const 1"
                                      },
                                      "value": "1"
                                    },
                                    "src": "11969:18:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "11959:29:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_TaskType_$55_storage",
                                    "typeString": "struct Governance.TaskType storage ref"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 947,
                              "nodeType": "ExpressionStatement",
                              "src": "11952:36:2"
                            },
                            {
                              "id": 948,
                              "nodeType": "Break",
                              "src": "12006:5:2"
                            }
                          ]
                        }
                      },
                      {
                        "id": 954,
                        "nodeType": "UncheckedBlock",
                        "src": "12039:15:2",
                        "statements": [
                          {
                            "expression": {
                              "id": 952,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": true,
                              "src": "12049:3:2",
                              "subExpression": {
                                "id": 951,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 888,
                                "src": "12051:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 953,
                            "nodeType": "ExpressionStatement",
                            "src": "12049:3:2"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 894,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 891,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 888,
                      "src": "10944:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 892,
                        "name": "taskTypes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 95,
                        "src": "10946:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_TaskType_$55_storage_$dyn_storage",
                          "typeString": "struct Governance.TaskType storage ref[] storage ref"
                        }
                      },
                      "id": 893,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "10946:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10944:18:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 956,
                  "initializationExpression": {
                    "assignments": [
                      888
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 888,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "10939:1:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 956,
                        "src": "10931:9:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 887,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10931:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 890,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 889,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10941:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "10931:11:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "10927:1137:2"
                }
              ]
            },
            "functionSelector": "f713b7ed",
            "id": 958,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deleteTaskTypeByIPFSHash",
            "nameLocation": "10858:24:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 885,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 884,
                  "mutability": "mutable",
                  "name": "_IPFSHash",
                  "nameLocation": "10897:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 958,
                  "src": "10883:23:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 883,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "10883:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10882:25:2"
            },
            "returnParameters": {
              "id": 886,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10917:0:2"
            },
            "scope": 2021,
            "src": "10849:1221:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 978,
              "nodeType": "Block",
              "src": "12325:200:2",
              "statements": [
                {
                  "expression": {
                    "id": 970,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 966,
                      "name": "wizardsNFT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25,
                      "src": "12379:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Wizards_$7202",
                        "typeString": "contract Wizards"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 968,
                          "name": "_nft",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 961,
                          "src": "12400:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 967,
                        "name": "Wizards",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7202,
                        "src": "12392:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Wizards_$7202_$",
                          "typeString": "type(contract Wizards)"
                        }
                      },
                      "id": 969,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12392:13:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Wizards_$7202",
                        "typeString": "contract Wizards"
                      }
                    },
                    "src": "12379:26:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Wizards_$7202",
                      "typeString": "contract Wizards"
                    }
                  },
                  "id": 971,
                  "nodeType": "ExpressionStatement",
                  "src": "12379:26:2"
                },
                {
                  "expression": {
                    "id": 976,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 972,
                      "name": "wizardTower",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28,
                      "src": "12415:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_WizardTower_$2874",
                        "typeString": "contract WizardTower"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 974,
                          "name": "_wizardTower",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 963,
                          "src": "12441:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 973,
                        "name": "WizardTower",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2874,
                        "src": "12429:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_WizardTower_$2874_$",
                          "typeString": "type(contract WizardTower)"
                        }
                      },
                      "id": 975,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12429:25:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_WizardTower_$2874",
                        "typeString": "contract WizardTower"
                      }
                    },
                    "src": "12415:39:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_WizardTower_$2874",
                      "typeString": "contract WizardTower"
                    }
                  },
                  "id": 977,
                  "nodeType": "ExpressionStatement",
                  "src": "12415:39:2"
                }
              ]
            },
            "documentation": {
              "id": 959,
              "nodeType": "StructuredDocumentation",
              "src": "12184:89:2",
              "text": "@dev Constructor for HOADAO\n@param _nft -- contract address for NFTs"
            },
            "id": 979,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 964,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 961,
                  "mutability": "mutable",
                  "name": "_nft",
                  "nameLocation": "12298:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 979,
                  "src": "12290:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 960,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12290:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 963,
                  "mutability": "mutable",
                  "name": "_wizardTower",
                  "nameLocation": "12312:12:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 979,
                  "src": "12304:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 962,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12304:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12289:36:2"
            },
            "returnParameters": {
              "id": 965,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12325:0:2"
            },
            "scope": 2021,
            "src": "12278:247:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 982,
              "nodeType": "Block",
              "src": "12589:7:2",
              "statements": []
            },
            "id": 983,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 980,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12569:2:2"
            },
            "returnParameters": {
              "id": 981,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12589:0:2"
            },
            "scope": 2021,
            "src": "12562:34:2",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1072,
              "nodeType": "Block",
              "src": "12686:580:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 997,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 995,
                          "name": "proposalID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 985,
                          "src": "12704:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "id": 996,
                          "name": "totalProposals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 105,
                          "src": "12717:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "12704:27:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6e6f20737563682070726f706f73616c",
                        "id": 998,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12733:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7f70e7e117a210e101713c97232a3cb728ce069a6ee3603e8c77d84127a93b4e",
                          "typeString": "literal_string \"no such proposal\""
                        },
                        "value": "no such proposal"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7f70e7e117a210e101713c97232a3cb728ce069a6ee3603e8c77d84127a93b4e",
                          "typeString": "literal_string \"no such proposal\""
                        }
                      ],
                      "id": 994,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12696:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 999,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12696:56:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1000,
                  "nodeType": "ExpressionStatement",
                  "src": "12696:56:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1008,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 1004,
                              "name": "NFTID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 987,
                              "src": "12789:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 1002,
                              "name": "wizardsNFT",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25,
                              "src": "12770:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Wizards_$7202",
                                "typeString": "contract Wizards"
                              }
                            },
                            "id": 1003,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "ownerOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3491,
                            "src": "12770:18:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view external returns (address)"
                            }
                          },
                          "id": 1005,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12770:25:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 1006,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "12797:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1007,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "12797:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "12770:37:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6e6f74206f776e6572206f66204e4654",
                        "id": 1009,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12809:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_73759f0e095f46dd731a35f99460bb6e619d6a499dbe8aada299139e4499269c",
                          "typeString": "literal_string \"not owner of NFT\""
                        },
                        "value": "not owner of NFT"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_73759f0e095f46dd731a35f99460bb6e619d6a499dbe8aada299139e4499269c",
                          "typeString": "literal_string \"not owner of NFT\""
                        }
                      ],
                      "id": 1001,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12762:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1010,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12762:66:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1011,
                  "nodeType": "ExpressionStatement",
                  "src": "12762:66:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1019,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 1013,
                              "name": "proposalToNFTVotes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 34,
                              "src": "12846:18:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                                "typeString": "mapping(uint256 => mapping(uint256 => uint256))"
                              }
                            },
                            "id": 1015,
                            "indexExpression": {
                              "id": 1014,
                              "name": "proposalID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 985,
                              "src": "12865:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "12846:30:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                              "typeString": "mapping(uint256 => uint256)"
                            }
                          },
                          "id": 1017,
                          "indexExpression": {
                            "id": 1016,
                            "name": "NFTID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 987,
                            "src": "12877:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "12846:37:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1018,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "12885:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "12846:40:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "616c726561647920766f746564",
                        "id": 1020,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12888:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_300512b688c99720d35ec7d5b6f38f17f9fa91c0bc270419bc4a8ce8e86b6fff",
                          "typeString": "literal_string \"already voted\""
                        },
                        "value": "already voted"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_300512b688c99720d35ec7d5b6f38f17f9fa91c0bc270419bc4a8ce8e86b6fff",
                          "typeString": "literal_string \"already voted\""
                        }
                      ],
                      "id": 1012,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12838:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1021,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12838:66:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1022,
                  "nodeType": "ExpressionStatement",
                  "src": "12838:66:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1033,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1026,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1024,
                            "name": "_vote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 989,
                            "src": "12922:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 1025,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "12929:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "12922:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1032,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1027,
                            "name": "_vote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 989,
                            "src": "12934:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 1028,
                                "name": "proposals",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 103,
                                "src": "12943:9:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$91_storage_$",
                                  "typeString": "mapping(uint256 => struct Governance.Proposal storage ref)"
                                }
                              },
                              "id": 1030,
                              "indexExpression": {
                                "id": 1029,
                                "name": "proposalID",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 985,
                                "src": "12953:10:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "12943:21:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Proposal_$91_storage",
                                "typeString": "struct Governance.Proposal storage ref"
                              }
                            },
                            "id": 1031,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "numberOfOptions",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 80,
                            "src": "12943:37:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "src": "12934:46:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "12922:58:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1023,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12914:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1034,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12914:67:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1035,
                  "nodeType": "ExpressionStatement",
                  "src": "12914:67:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1043,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1037,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "12999:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 1038,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "12999:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 1039,
                              "name": "proposals",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 103,
                              "src": "13017:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$91_storage_$",
                                "typeString": "mapping(uint256 => struct Governance.Proposal storage ref)"
                              }
                            },
                            "id": 1041,
                            "indexExpression": {
                              "id": 1040,
                              "name": "proposalID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 985,
                              "src": "13027:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "13017:21:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Proposal_$91_storage",
                              "typeString": "struct Governance.Proposal storage ref"
                            }
                          },
                          "id": 1042,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "endTimestamp",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 90,
                          "src": "13017:34:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint40",
                            "typeString": "uint40"
                          }
                        },
                        "src": "12999:52:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1036,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12991:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1044,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12991:61:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1045,
                  "nodeType": "ExpressionStatement",
                  "src": "12991:61:2"
                },
                {
                  "expression": {
                    "id": 1054,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 1046,
                          "name": "proposalToNFTVotes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34,
                          "src": "13062:18:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                            "typeString": "mapping(uint256 => mapping(uint256 => uint256))"
                          }
                        },
                        "id": 1049,
                        "indexExpression": {
                          "id": 1047,
                          "name": "proposalID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 985,
                          "src": "13081:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "13062:30:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 1050,
                      "indexExpression": {
                        "id": 1048,
                        "name": "NFTID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 987,
                        "src": "13093:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "13062:37:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1053,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1051,
                        "name": "_vote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 989,
                        "src": "13102:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "hexValue": "31",
                        "id": 1052,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13110:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "13102:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "13062:49:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1055,
                  "nodeType": "ExpressionStatement",
                  "src": "13062:49:2"
                },
                {
                  "expression": {
                    "id": 1063,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "expression": {
                          "baseExpression": {
                            "id": 1056,
                            "name": "proposals",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 103,
                            "src": "13154:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$91_storage_$",
                              "typeString": "mapping(uint256 => struct Governance.Proposal storage ref)"
                            }
                          },
                          "id": 1058,
                          "indexExpression": {
                            "id": 1057,
                            "name": "proposalID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 985,
                            "src": "13164:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "13154:21:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Proposal_$91_storage",
                            "typeString": "struct Governance.Proposal storage ref"
                          }
                        },
                        "id": 1059,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "votes",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 84,
                        "src": "13154:27:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint16_$8_storage",
                          "typeString": "uint16[8] storage ref"
                        }
                      },
                      "id": 1061,
                      "indexExpression": {
                        "id": 1060,
                        "name": "_vote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 989,
                        "src": "13182:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "13154:34:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 1062,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "13192:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "13154:39:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "id": 1064,
                  "nodeType": "ExpressionStatement",
                  "src": "13154:39:2"
                },
                {
                  "expression": {
                    "id": 1070,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 1065,
                          "name": "proposals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 103,
                          "src": "13222:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$91_storage_$",
                            "typeString": "mapping(uint256 => struct Governance.Proposal storage ref)"
                          }
                        },
                        "id": 1067,
                        "indexExpression": {
                          "id": 1066,
                          "name": "proposalID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 985,
                          "src": "13232:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "13222:21:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proposal_$91_storage",
                          "typeString": "struct Governance.Proposal storage ref"
                        }
                      },
                      "id": 1068,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "totalVotes",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 86,
                      "src": "13222:32:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint40",
                        "typeString": "uint40"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 1069,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "13258:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "13222:37:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "id": 1071,
                  "nodeType": "ExpressionStatement",
                  "src": "13222:37:2"
                }
              ]
            },
            "functionSelector": "8a6655d6",
            "id": 1073,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 992,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 991,
                  "name": "onlyMember",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2010,
                  "src": "12675:10:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "12675:10:2"
              }
            ],
            "name": "vote",
            "nameLocation": "12611:4:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 990,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 985,
                  "mutability": "mutable",
                  "name": "proposalID",
                  "nameLocation": "12624:10:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1073,
                  "src": "12616:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 984,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12616:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 987,
                  "mutability": "mutable",
                  "name": "NFTID",
                  "nameLocation": "12644:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1073,
                  "src": "12636:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 986,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12636:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 989,
                  "mutability": "mutable",
                  "name": "_vote",
                  "nameLocation": "12659:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1073,
                  "src": "12651:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 988,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12651:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12615:50:2"
            },
            "returnParameters": {
              "id": 993,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12686:0:2"
            },
            "scope": 2021,
            "src": "12602:664:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1149,
              "nodeType": "Block",
              "src": "13494:580:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1097,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          },
                          "id": 1093,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1091,
                            "name": "_numberOfOptions",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1077,
                            "src": "13512:16:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 1092,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "13531:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "13512:20:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          },
                          "id": 1096,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1094,
                            "name": "_numberOfOptions",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1077,
                            "src": "13536:16:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "hexValue": "323537",
                            "id": 1095,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "13555:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_257_by_1",
                              "typeString": "int_const 257"
                            },
                            "value": "257"
                          },
                          "src": "13536:22:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "13512:46:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "696e76616c6964206e756d626572206f66206f7074696f6e73",
                        "id": 1098,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13560:27:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c4475af82e361be3665e848c2658c7e9ff0d7f613ea39becc6f39f268d955f1b",
                          "typeString": "literal_string \"invalid number of options\""
                        },
                        "value": "invalid number of options"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c4475af82e361be3665e848c2658c7e9ff0d7f613ea39becc6f39f268d955f1b",
                          "typeString": "literal_string \"invalid number of options\""
                        }
                      ],
                      "id": 1090,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "13504:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1099,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13504:84:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1100,
                  "nodeType": "ExpressionStatement",
                  "src": "13504:84:2"
                },
                {
                  "expression": {
                    "id": 1103,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1101,
                      "name": "totalProposals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 105,
                      "src": "13598:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 1102,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "13616:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "13598:19:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1104,
                  "nodeType": "ExpressionStatement",
                  "src": "13598:19:2"
                },
                {
                  "assignments": [
                    1107
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1107,
                      "mutability": "mutable",
                      "name": "myProposal",
                      "nameLocation": "13665:10:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1149,
                      "src": "13648:27:2",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Proposal_$91_storage_ptr",
                        "typeString": "struct Governance.Proposal"
                      },
                      "typeName": {
                        "id": 1106,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1105,
                          "name": "Proposal",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 91,
                          "src": "13648:8:2"
                        },
                        "referencedDeclaration": 91,
                        "src": "13648:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proposal_$91_storage_ptr",
                          "typeString": "struct Governance.Proposal"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1111,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1108,
                      "name": "proposals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 103,
                      "src": "13678:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$91_storage_$",
                        "typeString": "mapping(uint256 => struct Governance.Proposal storage ref)"
                      }
                    },
                    "id": 1110,
                    "indexExpression": {
                      "id": 1109,
                      "name": "totalProposals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 105,
                      "src": "13688:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "13678:25:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Proposal_$91_storage",
                      "typeString": "struct Governance.Proposal storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13648:55:2"
                },
                {
                  "expression": {
                    "id": 1116,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1112,
                        "name": "myProposal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1107,
                        "src": "13717:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proposal_$91_storage_ptr",
                          "typeString": "struct Governance.Proposal storage pointer"
                        }
                      },
                      "id": 1114,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "begTimestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 88,
                      "src": "13717:23:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint40",
                        "typeString": "uint40"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1115,
                      "name": "_begTimestamp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1081,
                      "src": "13743:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint40",
                        "typeString": "uint40"
                      }
                    },
                    "src": "13717:39:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "id": 1117,
                  "nodeType": "ExpressionStatement",
                  "src": "13717:39:2"
                },
                {
                  "expression": {
                    "id": 1122,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1118,
                        "name": "myProposal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1107,
                        "src": "13770:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proposal_$91_storage_ptr",
                          "typeString": "struct Governance.Proposal storage pointer"
                        }
                      },
                      "id": 1120,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "endTimestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 90,
                      "src": "13770:23:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint40",
                        "typeString": "uint40"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1121,
                      "name": "_endTimestamp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1083,
                      "src": "13796:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint40",
                        "typeString": "uint40"
                      }
                    },
                    "src": "13770:39:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "id": 1123,
                  "nodeType": "ExpressionStatement",
                  "src": "13770:39:2"
                },
                {
                  "expression": {
                    "id": 1128,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1124,
                        "name": "myProposal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1107,
                        "src": "13823:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proposal_$91_storage_ptr",
                          "typeString": "struct Governance.Proposal storage pointer"
                        }
                      },
                      "id": 1126,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "numberOfOptions",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 80,
                      "src": "13823:26:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1127,
                      "name": "_numberOfOptions",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1077,
                      "src": "13852:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "src": "13823:45:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "id": 1129,
                  "nodeType": "ExpressionStatement",
                  "src": "13823:45:2"
                },
                {
                  "expression": {
                    "id": 1134,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1130,
                        "name": "myProposal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1107,
                        "src": "13882:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proposal_$91_storage_ptr",
                          "typeString": "struct Governance.Proposal storage pointer"
                        }
                      },
                      "id": 1132,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "IPFSHash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 78,
                      "src": "13882:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1133,
                      "name": "_IPFSHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1075,
                      "src": "13904:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_calldata_ptr",
                        "typeString": "string calldata"
                      }
                    },
                    "src": "13882:31:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 1135,
                  "nodeType": "ExpressionStatement",
                  "src": "13882:31:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1137,
                        "name": "_IPFSHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1075,
                        "src": "13940:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 1140,
                            "name": "totalProposals",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105,
                            "src": "13958:14:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 1139,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "13951:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint40_$",
                            "typeString": "type(uint40)"
                          },
                          "typeName": {
                            "id": 1138,
                            "name": "uint40",
                            "nodeType": "ElementaryTypeName",
                            "src": "13951:6:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1141,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13951:22:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 1142,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13975:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "id": 1143,
                        "name": "_timeBonus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1079,
                        "src": "13978:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      },
                      {
                        "id": 1144,
                        "name": "_begTimestamp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1081,
                        "src": "13990:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        }
                      },
                      {
                        "id": 1145,
                        "name": "_endTimestamp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1083,
                        "src": "14005:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        }
                      },
                      {
                        "id": 1146,
                        "name": "_availableSlots",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1085,
                        "src": "14020:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        },
                        {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        },
                        {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        },
                        {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      ],
                      "id": 1136,
                      "name": "_createTaskType",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1271,
                      "src": "13924:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_calldata_ptr_$_t_uint40_$_t_uint8_$_t_uint24_$_t_uint40_$_t_uint40_$_t_uint16_$returns$__$",
                        "typeString": "function (string calldata,uint40,uint8,uint24,uint40,uint40,uint16)"
                      }
                    },
                    "id": 1147,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13924:112:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1148,
                  "nodeType": "ExpressionStatement",
                  "src": "13924:112:2"
                }
              ]
            },
            "functionSelector": "beca3a16",
            "id": 1150,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1088,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1087,
                  "name": "onlyBoard",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2020,
                  "src": "13484:9:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "13484:9:2"
              }
            ],
            "name": "createProposal",
            "nameLocation": "13321:14:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1086,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1075,
                  "mutability": "mutable",
                  "name": "_IPFSHash",
                  "nameLocation": "13352:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1150,
                  "src": "13336:25:2",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1074,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "13336:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1077,
                  "mutability": "mutable",
                  "name": "_numberOfOptions",
                  "nameLocation": "13370:16:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1150,
                  "src": "13363:23:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 1076,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "13363:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1079,
                  "mutability": "mutable",
                  "name": "_timeBonus",
                  "nameLocation": "13395:10:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1150,
                  "src": "13388:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint24",
                    "typeString": "uint24"
                  },
                  "typeName": {
                    "id": 1078,
                    "name": "uint24",
                    "nodeType": "ElementaryTypeName",
                    "src": "13388:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint24",
                      "typeString": "uint24"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1081,
                  "mutability": "mutable",
                  "name": "_begTimestamp",
                  "nameLocation": "13414:13:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1150,
                  "src": "13407:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  },
                  "typeName": {
                    "id": 1080,
                    "name": "uint40",
                    "nodeType": "ElementaryTypeName",
                    "src": "13407:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1083,
                  "mutability": "mutable",
                  "name": "_endTimestamp",
                  "nameLocation": "13436:13:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1150,
                  "src": "13429:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  },
                  "typeName": {
                    "id": 1082,
                    "name": "uint40",
                    "nodeType": "ElementaryTypeName",
                    "src": "13429:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1085,
                  "mutability": "mutable",
                  "name": "_availableSlots",
                  "nameLocation": "13458:15:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1150,
                  "src": "13451:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 1084,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "13451:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13335:139:2"
            },
            "returnParameters": {
              "id": 1089,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13494:0:2"
            },
            "scope": 2021,
            "src": "13312:762:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1177,
              "nodeType": "Block",
              "src": "14278:123:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1168,
                        "name": "_IPFSHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1152,
                        "src": "14304:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 1169,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14315:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "id": 1170,
                        "name": "_numFieldsToHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1154,
                        "src": "14318:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "id": 1171,
                        "name": "_timeBonus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1156,
                        "src": "14336:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      },
                      {
                        "id": 1172,
                        "name": "_begTimestamp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1158,
                        "src": "14348:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        }
                      },
                      {
                        "id": 1173,
                        "name": "_endTimestamp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1160,
                        "src": "14363:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        }
                      },
                      {
                        "id": 1174,
                        "name": "_availableSlots",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1162,
                        "src": "14378:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        },
                        {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        },
                        {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        },
                        {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      ],
                      "id": 1167,
                      "name": "_createTaskType",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1271,
                      "src": "14288:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_calldata_ptr_$_t_uint40_$_t_uint8_$_t_uint24_$_t_uint40_$_t_uint40_$_t_uint16_$returns$__$",
                        "typeString": "function (string calldata,uint40,uint8,uint24,uint40,uint40,uint16)"
                      }
                    },
                    "id": 1175,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14288:106:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1176,
                  "nodeType": "ExpressionStatement",
                  "src": "14288:106:2"
                }
              ]
            },
            "functionSelector": "61f9e9a8",
            "id": 1178,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1165,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1164,
                  "name": "onlyBoard",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2020,
                  "src": "14268:9:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "14268:9:2"
              }
            ],
            "name": "createTaskType",
            "nameLocation": "14090:14:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1163,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1152,
                  "mutability": "mutable",
                  "name": "_IPFSHash",
                  "nameLocation": "14121:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1178,
                  "src": "14105:25:2",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1151,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "14105:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1154,
                  "mutability": "mutable",
                  "name": "_numFieldsToHash",
                  "nameLocation": "14138:16:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1178,
                  "src": "14132:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1153,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "14132:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1156,
                  "mutability": "mutable",
                  "name": "_timeBonus",
                  "nameLocation": "14163:10:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1178,
                  "src": "14156:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint24",
                    "typeString": "uint24"
                  },
                  "typeName": {
                    "id": 1155,
                    "name": "uint24",
                    "nodeType": "ElementaryTypeName",
                    "src": "14156:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint24",
                      "typeString": "uint24"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1158,
                  "mutability": "mutable",
                  "name": "_begTimestamp",
                  "nameLocation": "14182:13:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1178,
                  "src": "14175:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  },
                  "typeName": {
                    "id": 1157,
                    "name": "uint40",
                    "nodeType": "ElementaryTypeName",
                    "src": "14175:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1160,
                  "mutability": "mutable",
                  "name": "_endTimestamp",
                  "nameLocation": "14220:13:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1178,
                  "src": "14213:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  },
                  "typeName": {
                    "id": 1159,
                    "name": "uint40",
                    "nodeType": "ElementaryTypeName",
                    "src": "14213:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1162,
                  "mutability": "mutable",
                  "name": "_availableSlots",
                  "nameLocation": "14242:15:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1178,
                  "src": "14235:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 1161,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "14235:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14104:154:2"
            },
            "returnParameters": {
              "id": 1166,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14278:0:2"
            },
            "scope": 2021,
            "src": "14081:320:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1270,
              "nodeType": "Block",
              "src": "14612:726:2",
              "statements": [
                {
                  "assignments": [
                    1196
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1196,
                      "mutability": "mutable",
                      "name": "taskTypesLength",
                      "nameLocation": "14630:15:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1270,
                      "src": "14622:23:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1195,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "14622:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1199,
                  "initialValue": {
                    "expression": {
                      "id": 1197,
                      "name": "taskTypes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 95,
                      "src": "14648:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_TaskType_$55_storage_$dyn_storage",
                        "typeString": "struct Governance.TaskType storage ref[] storage ref"
                      }
                    },
                    "id": 1198,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "14648:16:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14622:42:2"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 1200,
                        "name": "taskTypes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 95,
                        "src": "14674:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_TaskType_$55_storage_$dyn_storage",
                          "typeString": "struct Governance.TaskType storage ref[] storage ref"
                        }
                      },
                      "id": 1202,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "14674:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_TaskType_$55_storage_$dyn_storage_ptr_$returns$_t_struct$_TaskType_$55_storage_$bound_to$_t_array$_t_struct$_TaskType_$55_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct Governance.TaskType storage ref[] storage pointer) returns (struct Governance.TaskType storage ref)"
                      }
                    },
                    "id": 1203,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14674:16:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TaskType_$55_storage",
                      "typeString": "struct Governance.TaskType storage ref"
                    }
                  },
                  "id": 1204,
                  "nodeType": "ExpressionStatement",
                  "src": "14674:16:2"
                },
                {
                  "assignments": [
                    1207
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1207,
                      "mutability": "mutable",
                      "name": "newTaskType",
                      "nameLocation": "14717:11:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1270,
                      "src": "14700:28:2",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TaskType_$55_storage_ptr",
                        "typeString": "struct Governance.TaskType"
                      },
                      "typeName": {
                        "id": 1206,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1205,
                          "name": "TaskType",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 55,
                          "src": "14700:8:2"
                        },
                        "referencedDeclaration": 55,
                        "src": "14700:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TaskType_$55_storage_ptr",
                          "typeString": "struct Governance.TaskType"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1211,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1208,
                      "name": "taskTypes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 95,
                      "src": "14731:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_TaskType_$55_storage_$dyn_storage",
                        "typeString": "struct Governance.TaskType storage ref[] storage ref"
                      }
                    },
                    "id": 1210,
                    "indexExpression": {
                      "id": 1209,
                      "name": "taskTypesLength",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1196,
                      "src": "14741:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "14731:26:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TaskType_$55_storage",
                      "typeString": "struct Governance.TaskType storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14700:57:2"
                },
                {
                  "expression": {
                    "id": 1216,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1212,
                        "name": "newTaskType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1207,
                        "src": "14771:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TaskType_$55_storage_ptr",
                          "typeString": "struct Governance.TaskType storage pointer"
                        }
                      },
                      "id": 1214,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "IPFSHash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 40,
                      "src": "14771:20:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1215,
                      "name": "_IPFSHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1180,
                      "src": "14793:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_calldata_ptr",
                        "typeString": "string calldata"
                      }
                    },
                    "src": "14771:31:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 1217,
                  "nodeType": "ExpressionStatement",
                  "src": "14771:31:2"
                },
                {
                  "expression": {
                    "id": 1222,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1218,
                        "name": "newTaskType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1207,
                        "src": "14816:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TaskType_$55_storage_ptr",
                          "typeString": "struct Governance.TaskType storage pointer"
                        }
                      },
                      "id": 1220,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "paused",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 42,
                      "src": "14816:18:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 1221,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "14837:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "14816:26:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1223,
                  "nodeType": "ExpressionStatement",
                  "src": "14816:26:2"
                },
                {
                  "expression": {
                    "id": 1228,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1224,
                        "name": "newTaskType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1207,
                        "src": "14856:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TaskType_$55_storage_ptr",
                          "typeString": "struct Governance.TaskType storage pointer"
                        }
                      },
                      "id": 1226,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "proposalID",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44,
                      "src": "14856:22:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint40",
                        "typeString": "uint40"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1227,
                      "name": "_proposalID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1182,
                      "src": "14881:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint40",
                        "typeString": "uint40"
                      }
                    },
                    "src": "14856:36:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "id": 1229,
                  "nodeType": "ExpressionStatement",
                  "src": "14856:36:2"
                },
                {
                  "expression": {
                    "id": 1234,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1230,
                        "name": "newTaskType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1207,
                        "src": "14906:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TaskType_$55_storage_ptr",
                          "typeString": "struct Governance.TaskType storage pointer"
                        }
                      },
                      "id": 1232,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "numFieldsToHash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46,
                      "src": "14906:27:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1233,
                      "name": "_numFieldsToHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1184,
                      "src": "14936:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "14906:46:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 1235,
                  "nodeType": "ExpressionStatement",
                  "src": "14906:46:2"
                },
                {
                  "expression": {
                    "id": 1240,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1236,
                        "name": "newTaskType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1207,
                        "src": "14966:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TaskType_$55_storage_ptr",
                          "typeString": "struct Governance.TaskType storage pointer"
                        }
                      },
                      "id": 1238,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "timeBonus",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 48,
                      "src": "14966:21:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint24",
                        "typeString": "uint24"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1239,
                      "name": "_timeBonus",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1186,
                      "src": "14990:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint24",
                        "typeString": "uint24"
                      }
                    },
                    "src": "14966:34:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint24",
                      "typeString": "uint24"
                    }
                  },
                  "id": 1241,
                  "nodeType": "ExpressionStatement",
                  "src": "14966:34:2"
                },
                {
                  "expression": {
                    "id": 1246,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1242,
                        "name": "newTaskType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1207,
                        "src": "15014:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TaskType_$55_storage_ptr",
                          "typeString": "struct Governance.TaskType storage pointer"
                        }
                      },
                      "id": 1244,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "begTimestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50,
                      "src": "15014:24:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint40",
                        "typeString": "uint40"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1245,
                      "name": "_begTimestamp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1188,
                      "src": "15041:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint40",
                        "typeString": "uint40"
                      }
                    },
                    "src": "15014:40:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "id": 1247,
                  "nodeType": "ExpressionStatement",
                  "src": "15014:40:2"
                },
                {
                  "expression": {
                    "id": 1252,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1248,
                        "name": "newTaskType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1207,
                        "src": "15068:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TaskType_$55_storage_ptr",
                          "typeString": "struct Governance.TaskType storage pointer"
                        }
                      },
                      "id": 1250,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "endTimestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 52,
                      "src": "15068:24:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint40",
                        "typeString": "uint40"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1251,
                      "name": "_endTimestamp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1190,
                      "src": "15095:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint40",
                        "typeString": "uint40"
                      }
                    },
                    "src": "15068:40:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "id": 1253,
                  "nodeType": "ExpressionStatement",
                  "src": "15068:40:2"
                },
                {
                  "expression": {
                    "id": 1258,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1254,
                        "name": "newTaskType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1207,
                        "src": "15122:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TaskType_$55_storage_ptr",
                          "typeString": "struct Governance.TaskType storage pointer"
                        }
                      },
                      "id": 1256,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "availableSlots",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 54,
                      "src": "15122:26:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1257,
                      "name": "_availableSlots",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1192,
                      "src": "15151:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "src": "15122:44:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "id": 1259,
                  "nodeType": "ExpressionStatement",
                  "src": "15122:44:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1261,
                        "name": "_IPFSHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1180,
                        "src": "15231:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "id": 1262,
                        "name": "_proposalID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1182,
                        "src": "15242:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        }
                      },
                      {
                        "id": 1263,
                        "name": "_numFieldsToHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1184,
                        "src": "15255:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "id": 1264,
                        "name": "_timeBonus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1186,
                        "src": "15273:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      },
                      {
                        "id": 1265,
                        "name": "_begTimestamp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1188,
                        "src": "15285:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        }
                      },
                      {
                        "id": 1266,
                        "name": "_endTimestamp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1190,
                        "src": "15300:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        }
                      },
                      {
                        "id": 1267,
                        "name": "_availableSlots",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1192,
                        "src": "15315:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        },
                        {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        },
                        {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        },
                        {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      ],
                      "id": 1260,
                      "name": "NewTaskTypeCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 178,
                      "src": "15212:18:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint40_$_t_uint8_$_t_uint24_$_t_uint40_$_t_uint40_$_t_uint16_$returns$__$",
                        "typeString": "function (string memory,uint40,uint8,uint24,uint40,uint40,uint16)"
                      }
                    },
                    "id": 1268,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15212:119:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1269,
                  "nodeType": "EmitStatement",
                  "src": "15207:124:2"
                }
              ]
            },
            "id": 1271,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_createTaskType",
            "nameLocation": "14416:15:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1193,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1180,
                  "mutability": "mutable",
                  "name": "_IPFSHash",
                  "nameLocation": "14448:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1271,
                  "src": "14432:25:2",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1179,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "14432:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1182,
                  "mutability": "mutable",
                  "name": "_proposalID",
                  "nameLocation": "14466:11:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1271,
                  "src": "14459:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  },
                  "typeName": {
                    "id": 1181,
                    "name": "uint40",
                    "nodeType": "ElementaryTypeName",
                    "src": "14459:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1184,
                  "mutability": "mutable",
                  "name": "_numFieldsToHash",
                  "nameLocation": "14485:16:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1271,
                  "src": "14479:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1183,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "14479:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1186,
                  "mutability": "mutable",
                  "name": "_timeBonus",
                  "nameLocation": "14510:10:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1271,
                  "src": "14503:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint24",
                    "typeString": "uint24"
                  },
                  "typeName": {
                    "id": 1185,
                    "name": "uint24",
                    "nodeType": "ElementaryTypeName",
                    "src": "14503:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint24",
                      "typeString": "uint24"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1188,
                  "mutability": "mutable",
                  "name": "_begTimestamp",
                  "nameLocation": "14542:13:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1271,
                  "src": "14535:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  },
                  "typeName": {
                    "id": 1187,
                    "name": "uint40",
                    "nodeType": "ElementaryTypeName",
                    "src": "14535:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1190,
                  "mutability": "mutable",
                  "name": "_endTimestamp",
                  "nameLocation": "14564:13:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1271,
                  "src": "14557:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  },
                  "typeName": {
                    "id": 1189,
                    "name": "uint40",
                    "nodeType": "ElementaryTypeName",
                    "src": "14557:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1192,
                  "mutability": "mutable",
                  "name": "_availableSlots",
                  "nameLocation": "14586:15:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1271,
                  "src": "14579:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 1191,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "14579:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14431:171:2"
            },
            "returnParameters": {
              "id": 1194,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14612:0:2"
            },
            "scope": 2021,
            "src": "14407:931:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1372,
              "nodeType": "Block",
              "src": "15410:1063:2",
              "statements": [
                {
                  "assignments": [
                    1277
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1277,
                      "mutability": "mutable",
                      "name": "totalTasksSubmitted",
                      "nameLocation": "15428:19:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1372,
                      "src": "15420:27:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1276,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "15420:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1282,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1280,
                        "name": "tasksWaitingConfirmation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98,
                        "src": "15474:24:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Bytes32Deque_$2893_storage",
                          "typeString": "struct DoubleEndedQueue.Bytes32Deque storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Bytes32Deque_$2893_storage",
                          "typeString": "struct DoubleEndedQueue.Bytes32Deque storage ref"
                        }
                      ],
                      "expression": {
                        "id": 1278,
                        "name": "DoubleEndedQueue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3215,
                        "src": "15450:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_DoubleEndedQueue_$3215_$",
                          "typeString": "type(library DoubleEndedQueue)"
                        }
                      },
                      "id": 1279,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3198,
                      "src": "15450:23:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32Deque_$2893_storage_ptr_$returns$_t_uint256_$",
                        "typeString": "function (struct DoubleEndedQueue.Bytes32Deque storage pointer) view returns (uint256)"
                      }
                    },
                    "id": 1281,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15450:49:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15420:79:2"
                },
                {
                  "assignments": [
                    1285
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1285,
                      "mutability": "mutable",
                      "name": "myTask",
                      "nameLocation": "15521:6:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1372,
                      "src": "15509:18:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Task_$76_memory_ptr",
                        "typeString": "struct Governance.Task"
                      },
                      "typeName": {
                        "id": 1284,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1283,
                          "name": "Task",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 76,
                          "src": "15509:4:2"
                        },
                        "referencedDeclaration": 76,
                        "src": "15509:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Task_$76_storage_ptr",
                          "typeString": "struct Governance.Task"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1286,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15509:18:2"
                },
                {
                  "assignments": [
                    1288
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1288,
                      "mutability": "mutable",
                      "name": "taskId",
                      "nameLocation": "15545:6:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1372,
                      "src": "15537:14:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1287,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "15537:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1289,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15537:14:2"
                },
                {
                  "body": {
                    "id": 1370,
                    "nodeType": "Block",
                    "src": "15692:722:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 1306,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1297,
                            "name": "taskId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1288,
                            "src": "15706:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 1302,
                                    "name": "tasksWaitingConfirmation",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 98,
                                    "src": "15743:24:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Bytes32Deque_$2893_storage",
                                      "typeString": "struct DoubleEndedQueue.Bytes32Deque storage ref"
                                    }
                                  },
                                  {
                                    "id": 1303,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1291,
                                    "src": "15769:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_struct$_Bytes32Deque_$2893_storage",
                                      "typeString": "struct DoubleEndedQueue.Bytes32Deque storage ref"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 1300,
                                    "name": "DoubleEndedQueue",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3215,
                                    "src": "15723:16:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_DoubleEndedQueue_$3215_$",
                                      "typeString": "type(library DoubleEndedQueue)"
                                    }
                                  },
                                  "id": 1301,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "at",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3152,
                                  "src": "15723:19:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32Deque_$2893_storage_ptr_$_t_uint256_$returns$_t_bytes32_$",
                                    "typeString": "function (struct DoubleEndedQueue.Bytes32Deque storage pointer,uint256) view returns (bytes32)"
                                  }
                                },
                                "id": 1304,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "15723:48:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "id": 1299,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "15715:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 1298,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "15715:7:2",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1305,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "15715:57:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "15706:66:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1307,
                        "nodeType": "ExpressionStatement",
                        "src": "15706:66:2"
                      },
                      {
                        "expression": {
                          "id": 1312,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1308,
                            "name": "myTask",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1285,
                            "src": "15786:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Task_$76_memory_ptr",
                              "typeString": "struct Governance.Task memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 1309,
                              "name": "tasks",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 110,
                              "src": "15795:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Task_$76_storage_$",
                                "typeString": "mapping(uint256 => struct Governance.Task storage ref)"
                              }
                            },
                            "id": 1311,
                            "indexExpression": {
                              "id": 1310,
                              "name": "taskId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1288,
                              "src": "15801:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "15795:13:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Task_$76_storage",
                              "typeString": "struct Governance.Task storage ref"
                            }
                          },
                          "src": "15786:22:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Task_$76_memory_ptr",
                            "typeString": "struct Governance.Task memory"
                          }
                        },
                        "id": 1313,
                        "nodeType": "ExpressionStatement",
                        "src": "15786:22:2"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 1328,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 1323,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1318,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 1314,
                                  "name": "myTask",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1285,
                                  "src": "15826:6:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Task_$76_memory_ptr",
                                    "typeString": "struct Governance.Task memory"
                                  }
                                },
                                "id": 1315,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "verificationReservedTimestamp",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 75,
                                "src": "15826:36:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint40",
                                  "typeString": "uint40"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<",
                              "rightExpression": {
                                "expression": {
                                  "id": 1316,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "15865:5:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 1317,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "15865:15:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "15826:54:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "&&",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1322,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 1319,
                                  "name": "myTask",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1285,
                                  "src": "15884:6:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Task_$76_memory_ptr",
                                    "typeString": "struct Governance.Task memory"
                                  }
                                },
                                "id": 1320,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "NFTID",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 59,
                                "src": "15884:12:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint40",
                                  "typeString": "uint40"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "id": 1321,
                                "name": "_wizId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1273,
                                "src": "15900:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "15884:22:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "15826:80:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1327,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 1324,
                                "name": "myTask",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1285,
                                "src": "15910:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Task_$76_memory_ptr",
                                  "typeString": "struct Governance.Task memory"
                                }
                              },
                              "id": 1325,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "refuterID",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 73,
                              "src": "15910:16:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "id": 1326,
                              "name": "_wizId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1273,
                              "src": "15929:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "15910:25:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "15826:109:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1365,
                        "nodeType": "IfStatement",
                        "src": "15822:554:2",
                        "trueBody": {
                          "id": 1364,
                          "nodeType": "Block",
                          "src": "15936:440:2",
                          "statements": [
                            {
                              "expression": {
                                "id": 1336,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 1329,
                                    "name": "myTask",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1285,
                                    "src": "16114:6:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Task_$76_memory_ptr",
                                      "typeString": "struct Governance.Task memory"
                                    }
                                  },
                                  "id": 1331,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "verifierID",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 71,
                                  "src": "16114:17:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint16",
                                    "typeString": "uint16"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "id": 1334,
                                      "name": "_wizId",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1273,
                                      "src": "16141:6:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "id": 1333,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "16134:6:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint16_$",
                                      "typeString": "type(uint16)"
                                    },
                                    "typeName": {
                                      "id": 1332,
                                      "name": "uint16",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "16134:6:2",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 1335,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "16134:14:2",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint16",
                                    "typeString": "uint16"
                                  }
                                },
                                "src": "16114:34:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint16",
                                  "typeString": "uint16"
                                }
                              },
                              "id": 1337,
                              "nodeType": "ExpressionStatement",
                              "src": "16114:34:2"
                            },
                            {
                              "expression": {
                                "id": 1348,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 1338,
                                    "name": "myTask",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1285,
                                    "src": "16166:6:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Task_$76_memory_ptr",
                                      "typeString": "struct Governance.Task memory"
                                    }
                                  },
                                  "id": 1340,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "verificationReservedTimestamp",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 75,
                                  "src": "16166:36:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint40",
                                    "typeString": "uint40"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 1346,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "expression": {
                                          "id": 1343,
                                          "name": "block",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -4,
                                          "src": "16212:5:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_block",
                                            "typeString": "block"
                                          }
                                        },
                                        "id": 1344,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "timestamp",
                                        "nodeType": "MemberAccess",
                                        "src": "16212:15:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "+",
                                      "rightExpression": {
                                        "id": 1345,
                                        "name": "verificationTime",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 117,
                                        "src": "16230:16:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "16212:34:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "id": 1342,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "16205:6:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint40_$",
                                      "typeString": "type(uint40)"
                                    },
                                    "typeName": {
                                      "id": 1341,
                                      "name": "uint40",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "16205:6:2",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 1347,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "16205:42:2",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint40",
                                    "typeString": "uint40"
                                  }
                                },
                                "src": "16166:81:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint40",
                                  "typeString": "uint40"
                                }
                              },
                              "id": 1349,
                              "nodeType": "ExpressionStatement",
                              "src": "16166:81:2"
                            },
                            {
                              "expression": {
                                "id": 1354,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 1350,
                                    "name": "tasks",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 110,
                                    "src": "16265:5:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Task_$76_storage_$",
                                      "typeString": "mapping(uint256 => struct Governance.Task storage ref)"
                                    }
                                  },
                                  "id": 1352,
                                  "indexExpression": {
                                    "id": 1351,
                                    "name": "taskId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1288,
                                    "src": "16271:6:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "16265:13:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Task_$76_storage",
                                    "typeString": "struct Governance.Task storage ref"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 1353,
                                  "name": "myTask",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1285,
                                  "src": "16281:6:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Task_$76_memory_ptr",
                                    "typeString": "struct Governance.Task memory"
                                  }
                                },
                                "src": "16265:22:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Task_$76_storage",
                                  "typeString": "struct Governance.Task storage ref"
                                }
                              },
                              "id": 1355,
                              "nodeType": "ExpressionStatement",
                              "src": "16265:22:2"
                            },
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "id": 1357,
                                    "name": "_wizId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1273,
                                    "src": "16331:6:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 1358,
                                    "name": "taskId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1288,
                                    "src": "16339:6:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "baseExpression": {
                                      "id": 1359,
                                      "name": "tasks",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 110,
                                      "src": "16347:5:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Task_$76_storage_$",
                                        "typeString": "mapping(uint256 => struct Governance.Task storage ref)"
                                      }
                                    },
                                    "id": 1361,
                                    "indexExpression": {
                                      "id": 1360,
                                      "name": "taskId",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1288,
                                      "src": "16353:6:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "16347:13:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Task_$76_storage",
                                      "typeString": "struct Governance.Task storage ref"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_struct$_Task_$76_storage",
                                      "typeString": "struct Governance.Task storage ref"
                                    }
                                  ],
                                  "id": 1356,
                                  "name": "VerificationAssigned",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 132,
                                  "src": "16310:20:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_struct$_Task_$76_memory_ptr_$returns$__$",
                                    "typeString": "function (uint256,uint256,struct Governance.Task memory)"
                                  }
                                },
                                "id": 1362,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "16310:51:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1363,
                              "nodeType": "EmitStatement",
                              "src": "16305:56:2"
                            }
                          ]
                        }
                      },
                      {
                        "id": 1369,
                        "nodeType": "UncheckedBlock",
                        "src": "16389:15:2",
                        "statements": [
                          {
                            "expression": {
                              "id": 1367,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": true,
                              "src": "16399:3:2",
                              "subExpression": {
                                "id": 1366,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1291,
                                "src": "16401:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 1368,
                            "nodeType": "ExpressionStatement",
                            "src": "16399:3:2"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1296,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1294,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1291,
                      "src": "15666:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 1295,
                      "name": "totalTasksSubmitted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1277,
                      "src": "15670:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "15666:23:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1371,
                  "initializationExpression": {
                    "assignments": [
                      1291
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1291,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "15660:1:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 1371,
                        "src": "15652:9:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1290,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "15652:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1293,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 1292,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "15663:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "15652:12:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "15648:766:2"
                }
              ]
            },
            "functionSelector": "d374a217",
            "id": 1373,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "claimRandomTaskForVerification",
            "nameLocation": "15354:30:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1274,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1273,
                  "mutability": "mutable",
                  "name": "_wizId",
                  "nameLocation": "15393:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1373,
                  "src": "15385:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1272,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15385:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15384:16:2"
            },
            "returnParameters": {
              "id": 1275,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15410:0:2"
            },
            "scope": 2021,
            "src": "15345:1128:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1510,
              "nodeType": "Block",
              "src": "16565:1200:2",
              "statements": [
                {
                  "body": {
                    "id": 1508,
                    "nodeType": "Block",
                    "src": "16698:1041:2",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          "id": 1405,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 1393,
                                        "name": "taskTypes",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 95,
                                        "src": "16736:9:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_TaskType_$55_storage_$dyn_storage",
                                          "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                        }
                                      },
                                      "id": 1395,
                                      "indexExpression": {
                                        "id": 1394,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1383,
                                        "src": "16746:1:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "16736:12:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_TaskType_$55_storage",
                                        "typeString": "struct Governance.TaskType storage ref"
                                      }
                                    },
                                    "id": 1396,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "IPFSHash",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 40,
                                    "src": "16736:21:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_storage",
                                      "typeString": "string storage ref"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_string_storage",
                                      "typeString": "string storage ref"
                                    }
                                  ],
                                  "expression": {
                                    "id": 1391,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "16725:3:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 1392,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "encode",
                                  "nodeType": "MemberAccess",
                                  "src": "16725:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 1397,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "16725:33:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 1390,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "16715:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 1398,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "16715:44:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 1402,
                                    "name": "_IPFSHash",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1375,
                                    "src": "16784:9:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  ],
                                  "expression": {
                                    "id": 1400,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "16773:3:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 1401,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "encode",
                                  "nodeType": "MemberAccess",
                                  "src": "16773:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 1403,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "16773:21:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 1399,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "16763:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 1404,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "16763:32:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "16715:80:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1503,
                        "nodeType": "IfStatement",
                        "src": "16712:989:2",
                        "trueBody": {
                          "id": 1502,
                          "nodeType": "Block",
                          "src": "16796:905:2",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    "id": 1421,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 1413,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "expression": {
                                          "baseExpression": {
                                            "id": 1407,
                                            "name": "taskTypes",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 95,
                                            "src": "16882:9:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_struct$_TaskType_$55_storage_$dyn_storage",
                                              "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                            }
                                          },
                                          "id": 1409,
                                          "indexExpression": {
                                            "id": 1408,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1383,
                                            "src": "16892:1:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "16882:12:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_TaskType_$55_storage",
                                            "typeString": "struct Governance.TaskType storage ref"
                                          }
                                        },
                                        "id": 1410,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "begTimestamp",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 50,
                                        "src": "16882:25:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint40",
                                          "typeString": "uint40"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "<=",
                                      "rightExpression": {
                                        "expression": {
                                          "id": 1411,
                                          "name": "block",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -4,
                                          "src": "16911:5:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_block",
                                            "typeString": "block"
                                          }
                                        },
                                        "id": 1412,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "timestamp",
                                        "nodeType": "MemberAccess",
                                        "src": "16911:15:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "16882:44:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "&&",
                                    "rightExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 1420,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "expression": {
                                          "id": 1414,
                                          "name": "block",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -4,
                                          "src": "16930:5:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_block",
                                            "typeString": "block"
                                          }
                                        },
                                        "id": 1415,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "timestamp",
                                        "nodeType": "MemberAccess",
                                        "src": "16930:15:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "<=",
                                      "rightExpression": {
                                        "expression": {
                                          "baseExpression": {
                                            "id": 1416,
                                            "name": "taskTypes",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 95,
                                            "src": "16949:9:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_struct$_TaskType_$55_storage_$dyn_storage",
                                              "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                            }
                                          },
                                          "id": 1418,
                                          "indexExpression": {
                                            "id": 1417,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1383,
                                            "src": "16959:1:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "16949:12:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_TaskType_$55_storage",
                                            "typeString": "struct Governance.TaskType storage ref"
                                          }
                                        },
                                        "id": 1419,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "endTimestamp",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 52,
                                        "src": "16949:25:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint40",
                                          "typeString": "uint40"
                                        }
                                      },
                                      "src": "16930:44:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "src": "16882:92:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "hexValue": "4f7574736964652074696d6520706572696f64",
                                    "id": 1422,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "16976:21:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_2aa371626d645af6c67a3e4026854ea2c35f19ae75ceda6326bf45ca93e956ba",
                                      "typeString": "literal_string \"Outside time period\""
                                    },
                                    "value": "Outside time period"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_2aa371626d645af6c67a3e4026854ea2c35f19ae75ceda6326bf45ca93e956ba",
                                      "typeString": "literal_string \"Outside time period\""
                                    }
                                  ],
                                  "id": 1406,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "16874:7:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 1423,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "16874:124:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1424,
                              "nodeType": "ExpressionStatement",
                              "src": "16874:124:2"
                            },
                            {
                              "assignments": [
                                1427
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 1427,
                                  "mutability": "mutable",
                                  "name": "myTask",
                                  "nameLocation": "17063:6:2",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1502,
                                  "src": "17051:18:2",
                                  "stateVariable": false,
                                  "storageLocation": "memory",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Task_$76_memory_ptr",
                                    "typeString": "struct Governance.Task"
                                  },
                                  "typeName": {
                                    "id": 1426,
                                    "nodeType": "UserDefinedTypeName",
                                    "pathNode": {
                                      "id": 1425,
                                      "name": "Task",
                                      "nodeType": "IdentifierPath",
                                      "referencedDeclaration": 76,
                                      "src": "17051:4:2"
                                    },
                                    "referencedDeclaration": 76,
                                    "src": "17051:4:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Task_$76_storage_ptr",
                                      "typeString": "struct Governance.Task"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 1446,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "id": 1429,
                                    "name": "_IPFSHash",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1375,
                                    "src": "17077:9:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  },
                                  {
                                    "id": 1430,
                                    "name": "_wizId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1379,
                                    "src": "17087:6:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint40",
                                      "typeString": "uint40"
                                    }
                                  },
                                  {
                                    "id": 1431,
                                    "name": "_hash",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1377,
                                    "src": "17095:5:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  {
                                    "hexValue": "30",
                                    "id": 1432,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "17102:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 1433,
                                        "name": "taskTypes",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 95,
                                        "src": "17105:9:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_TaskType_$55_storage_$dyn_storage",
                                          "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                        }
                                      },
                                      "id": 1435,
                                      "indexExpression": {
                                        "id": 1434,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1383,
                                        "src": "17115:1:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "17105:12:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_TaskType_$55_storage",
                                        "typeString": "struct Governance.TaskType storage ref"
                                      }
                                    },
                                    "id": 1436,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "numFieldsToHash",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 46,
                                    "src": "17105:28:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 1437,
                                        "name": "taskTypes",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 95,
                                        "src": "17135:9:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_TaskType_$55_storage_$dyn_storage",
                                          "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                        }
                                      },
                                      "id": 1439,
                                      "indexExpression": {
                                        "id": 1438,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1383,
                                        "src": "17145:1:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "17135:12:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_TaskType_$55_storage",
                                        "typeString": "struct Governance.TaskType storage ref"
                                      }
                                    },
                                    "id": 1440,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "timeBonus",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 48,
                                    "src": "17135:22:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint24",
                                      "typeString": "uint24"
                                    }
                                  },
                                  {
                                    "hexValue": "30",
                                    "id": 1441,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "17159:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  {
                                    "hexValue": "30",
                                    "id": 1442,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "17162:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  {
                                    "hexValue": "30",
                                    "id": 1443,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "17165:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  {
                                    "hexValue": "30",
                                    "id": 1444,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "17168:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    },
                                    {
                                      "typeIdentifier": "t_uint40",
                                      "typeString": "uint40"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    },
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    },
                                    {
                                      "typeIdentifier": "t_uint24",
                                      "typeString": "uint24"
                                    },
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 1428,
                                  "name": "Task",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 76,
                                  "src": "17072:4:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_struct$_Task_$76_storage_ptr_$",
                                    "typeString": "type(struct Governance.Task storage pointer)"
                                  }
                                },
                                "id": 1445,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "structConstructorCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "17072:98:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Task_$76_memory_ptr",
                                  "typeString": "struct Governance.Task memory"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "17051:119:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1450,
                                    "name": "tasksWaitingConfirmation",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 98,
                                    "src": "17214:24:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Bytes32Deque_$2893_storage",
                                      "typeString": "struct DoubleEndedQueue.Bytes32Deque storage ref"
                                    }
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "id": 1453,
                                        "name": "totalTasksAttempted",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 112,
                                        "src": "17248:19:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "id": 1452,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "17240:7:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_bytes32_$",
                                        "typeString": "type(bytes32)"
                                      },
                                      "typeName": {
                                        "id": 1451,
                                        "name": "bytes32",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "17240:7:2",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 1454,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "17240:28:2",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_struct$_Bytes32Deque_$2893_storage",
                                      "typeString": "struct DoubleEndedQueue.Bytes32Deque storage ref"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  ],
                                  "expression": {
                                    "id": 1447,
                                    "name": "DoubleEndedQueue",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3215,
                                    "src": "17188:16:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_DoubleEndedQueue_$3215_$",
                                      "typeString": "type(library DoubleEndedQueue)"
                                    }
                                  },
                                  "id": 1449,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "pushBack",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2925,
                                  "src": "17188:25:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Bytes32Deque_$2893_storage_ptr_$_t_bytes32_$returns$__$",
                                    "typeString": "function (struct DoubleEndedQueue.Bytes32Deque storage pointer,bytes32)"
                                  }
                                },
                                "id": 1455,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "17188:81:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1456,
                              "nodeType": "ExpressionStatement",
                              "src": "17188:81:2"
                            },
                            {
                              "expression": {
                                "id": 1461,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 1457,
                                    "name": "tasks",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 110,
                                    "src": "17287:5:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Task_$76_storage_$",
                                      "typeString": "mapping(uint256 => struct Governance.Task storage ref)"
                                    }
                                  },
                                  "id": 1459,
                                  "indexExpression": {
                                    "id": 1458,
                                    "name": "totalTasksAttempted",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 112,
                                    "src": "17293:19:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "17287:26:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Task_$76_storage",
                                    "typeString": "struct Governance.Task storage ref"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 1460,
                                  "name": "myTask",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1427,
                                  "src": "17316:6:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Task_$76_memory_ptr",
                                    "typeString": "struct Governance.Task memory"
                                  }
                                },
                                "src": "17287:35:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Task_$76_storage",
                                  "typeString": "struct Governance.Task storage ref"
                                }
                              },
                              "id": 1462,
                              "nodeType": "ExpressionStatement",
                              "src": "17287:35:2"
                            },
                            {
                              "expression": {
                                "id": 1465,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 1463,
                                  "name": "totalTasksAttempted",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 112,
                                  "src": "17340:19:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "hexValue": "31",
                                  "id": 1464,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "17361:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "src": "17340:22:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1466,
                              "nodeType": "ExpressionStatement",
                              "src": "17340:22:2"
                            },
                            {
                              "expression": {
                                "id": 1477,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 1467,
                                        "name": "taskTypes",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 95,
                                        "src": "17417:9:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_TaskType_$55_storage_$dyn_storage",
                                          "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                        }
                                      },
                                      "id": 1469,
                                      "indexExpression": {
                                        "id": 1468,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1383,
                                        "src": "17427:1:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "17417:12:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_TaskType_$55_storage",
                                        "typeString": "struct Governance.TaskType storage ref"
                                      }
                                    },
                                    "id": 1470,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "nextActiveTimeThreshold",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 38,
                                    "src": "17417:36:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint40_$_t_uint256_$",
                                      "typeString": "mapping(uint40 => uint256)"
                                    }
                                  },
                                  "id": 1472,
                                  "indexExpression": {
                                    "id": 1471,
                                    "name": "_wizId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1379,
                                    "src": "17454:6:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint40",
                                      "typeString": "uint40"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "17417:44:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1476,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "id": 1473,
                                      "name": "block",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -4,
                                      "src": "17464:5:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_block",
                                        "typeString": "block"
                                      }
                                    },
                                    "id": 1474,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "timestamp",
                                    "nodeType": "MemberAccess",
                                    "src": "17464:15:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "+",
                                  "rightExpression": {
                                    "hexValue": "31",
                                    "id": 1475,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "17482:6:2",
                                    "subdenomination": "days",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_86400_by_1",
                                      "typeString": "int_const 86400"
                                    },
                                    "value": "1"
                                  },
                                  "src": "17464:24:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "17417:71:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1478,
                              "nodeType": "ExpressionStatement",
                              "src": "17417:71:2"
                            },
                            {
                              "expression": {
                                "id": 1489,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 1479,
                                      "name": "taskTypes",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 95,
                                      "src": "17506:9:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_TaskType_$55_storage_$dyn_storage",
                                        "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                      }
                                    },
                                    "id": 1481,
                                    "indexExpression": {
                                      "id": 1480,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1383,
                                      "src": "17516:1:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "17506:12:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_TaskType_$55_storage",
                                      "typeString": "struct Governance.TaskType storage ref"
                                    }
                                  },
                                  "id": 1482,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "availableSlots",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 54,
                                  "src": "17506:27:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint16",
                                    "typeString": "uint16"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint16",
                                    "typeString": "uint16"
                                  },
                                  "id": 1488,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 1483,
                                        "name": "taskTypes",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 95,
                                        "src": "17536:9:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_TaskType_$55_storage_$dyn_storage",
                                          "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                        }
                                      },
                                      "id": 1485,
                                      "indexExpression": {
                                        "id": 1484,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1383,
                                        "src": "17546:1:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "17536:12:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_TaskType_$55_storage",
                                        "typeString": "struct Governance.TaskType storage ref"
                                      }
                                    },
                                    "id": 1486,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "availableSlots",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 54,
                                    "src": "17536:27:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint16",
                                      "typeString": "uint16"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "hexValue": "31",
                                    "id": 1487,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "17566:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    "value": "1"
                                  },
                                  "src": "17536:31:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint16",
                                    "typeString": "uint16"
                                  }
                                },
                                "src": "17506:61:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint16",
                                  "typeString": "uint16"
                                }
                              },
                              "id": 1490,
                              "nodeType": "ExpressionStatement",
                              "src": "17506:61:2"
                            },
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "id": 1492,
                                    "name": "_wizId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1379,
                                    "src": "17605:6:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint40",
                                      "typeString": "uint40"
                                    }
                                  },
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 1495,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 1493,
                                      "name": "totalTasksAttempted",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 112,
                                      "src": "17612:19:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "-",
                                    "rightExpression": {
                                      "hexValue": "31",
                                      "id": 1494,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "17633:1:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1_by_1",
                                        "typeString": "int_const 1"
                                      },
                                      "value": "1"
                                    },
                                    "src": "17612:22:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 1496,
                                    "name": "_IPFSHash",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1375,
                                    "src": "17636:9:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 1497,
                                      "name": "block",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -4,
                                      "src": "17647:5:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_block",
                                        "typeString": "block"
                                      }
                                    },
                                    "id": 1498,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "timestamp",
                                    "nodeType": "MemberAccess",
                                    "src": "17647:15:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint40",
                                      "typeString": "uint40"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 1491,
                                  "name": "TaskCompleted",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 188,
                                  "src": "17591:13:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                                    "typeString": "function (uint256,uint256,string memory,uint256)"
                                  }
                                },
                                "id": 1499,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "17591:72:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1500,
                              "nodeType": "EmitStatement",
                              "src": "17586:77:2"
                            },
                            {
                              "id": 1501,
                              "nodeType": "Break",
                              "src": "17681:5:2"
                            }
                          ]
                        }
                      },
                      {
                        "id": 1507,
                        "nodeType": "UncheckedBlock",
                        "src": "17714:15:2",
                        "statements": [
                          {
                            "expression": {
                              "id": 1505,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": true,
                              "src": "17724:3:2",
                              "subExpression": {
                                "id": 1504,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1383,
                                "src": "17726:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 1506,
                            "nodeType": "ExpressionStatement",
                            "src": "17724:3:2"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1389,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1386,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1383,
                      "src": "16678:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 1387,
                        "name": "taskTypes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 95,
                        "src": "16680:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_TaskType_$55_storage_$dyn_storage",
                          "typeString": "struct Governance.TaskType storage ref[] storage ref"
                        }
                      },
                      "id": 1388,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "16680:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "16678:18:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1509,
                  "initializationExpression": {
                    "assignments": [
                      1383
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1383,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "16671:1:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 1509,
                        "src": "16663:9:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1382,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "16663:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1385,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 1384,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "16675:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "16663:13:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "16659:1080:2"
                }
              ]
            },
            "functionSelector": "72e185ce",
            "id": 1511,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "completeTask",
            "nameLocation": "16488:12:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1380,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1375,
                  "mutability": "mutable",
                  "name": "_IPFSHash",
                  "nameLocation": "16515:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1511,
                  "src": "16501:23:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1374,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "16501:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1377,
                  "mutability": "mutable",
                  "name": "_hash",
                  "nameLocation": "16534:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1511,
                  "src": "16526:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1376,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "16526:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1379,
                  "mutability": "mutable",
                  "name": "_wizId",
                  "nameLocation": "16548:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1511,
                  "src": "16541:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  },
                  "typeName": {
                    "id": 1378,
                    "name": "uint40",
                    "nodeType": "ElementaryTypeName",
                    "src": "16541:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16500:55:2"
            },
            "returnParameters": {
              "id": 1381,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16565:0:2"
            },
            "scope": 2021,
            "src": "16479:1286:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1580,
              "nodeType": "Block",
              "src": "17862:412:2",
              "statements": [
                {
                  "assignments": [
                    1522
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1522,
                      "mutability": "mutable",
                      "name": "unencoded",
                      "nameLocation": "17885:9:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1580,
                      "src": "17872:22:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 1521,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "17872:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1529,
                  "initialValue": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 1525,
                          "name": "_fields",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1516,
                          "src": "17914:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                            "typeString": "bytes32[] memory"
                          }
                        },
                        "id": 1527,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 1526,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "17922:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "17914:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 1523,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "17897:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 1524,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "encodePacked",
                      "nodeType": "MemberAccess",
                      "src": "17897:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () pure returns (bytes memory)"
                      }
                    },
                    "id": 1528,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17897:28:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17872:53:2"
                },
                {
                  "condition": {
                    "id": 1530,
                    "name": "_refuted",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1518,
                    "src": "17938:8:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1559,
                  "nodeType": "IfStatement",
                  "src": "17935:193:2",
                  "trueBody": {
                    "id": 1558,
                    "nodeType": "Block",
                    "src": "17948:180:2",
                    "statements": [
                      {
                        "body": {
                          "id": 1556,
                          "nodeType": "Block",
                          "src": "18001:117:2",
                          "statements": [
                            {
                              "expression": {
                                "id": 1550,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 1539,
                                    "name": "_fields",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1516,
                                    "src": "18019:7:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                      "typeString": "bytes32[] memory"
                                    }
                                  },
                                  "id": 1541,
                                  "indexExpression": {
                                    "id": 1540,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1532,
                                    "src": "18027:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "18019:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "baseExpression": {
                                            "id": 1545,
                                            "name": "_fields",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1516,
                                            "src": "18059:7:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                              "typeString": "bytes32[] memory"
                                            }
                                          },
                                          "id": 1547,
                                          "indexExpression": {
                                            "id": 1546,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1532,
                                            "src": "18067:1:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "18059:10:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                          }
                                        ],
                                        "expression": {
                                          "id": 1543,
                                          "name": "abi",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -1,
                                          "src": "18042:3:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_abi",
                                            "typeString": "abi"
                                          }
                                        },
                                        "id": 1544,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberName": "encodePacked",
                                        "nodeType": "MemberAccess",
                                        "src": "18042:16:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                          "typeString": "function () pure returns (bytes memory)"
                                        }
                                      },
                                      "id": 1548,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "18042:28:2",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    ],
                                    "id": 1542,
                                    "name": "keccak256",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -8,
                                    "src": "18032:9:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                      "typeString": "function (bytes memory) pure returns (bytes32)"
                                    }
                                  },
                                  "id": 1549,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "18032:39:2",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "src": "18019:52:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "id": 1551,
                              "nodeType": "ExpressionStatement",
                              "src": "18019:52:2"
                            },
                            {
                              "id": 1555,
                              "nodeType": "UncheckedBlock",
                              "src": "18089:15:2",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 1553,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "UnaryOperation",
                                    "operator": "++",
                                    "prefix": true,
                                    "src": "18099:3:2",
                                    "subExpression": {
                                      "id": 1552,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1532,
                                      "src": "18101:1:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 1554,
                                  "nodeType": "ExpressionStatement",
                                  "src": "18099:3:2"
                                }
                              ]
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1538,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1535,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1532,
                            "src": "17981:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 1536,
                              "name": "_fields",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1516,
                              "src": "17985:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                "typeString": "bytes32[] memory"
                              }
                            },
                            "id": 1537,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "17985:14:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "17981:18:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1557,
                        "initializationExpression": {
                          "assignments": [
                            1532
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 1532,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "17974:1:2",
                              "nodeType": "VariableDeclaration",
                              "scope": 1557,
                              "src": "17966:9:2",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 1531,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "17966:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 1534,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 1533,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "17978:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "17966:13:2"
                        },
                        "nodeType": "ForStatement",
                        "src": "17962:156:2"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    1561
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1561,
                      "mutability": "mutable",
                      "name": "myHash",
                      "nameLocation": "18145:6:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1580,
                      "src": "18137:14:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1560,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "18137:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1568,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1565,
                            "name": "_fields",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1516,
                            "src": "18181:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                              "typeString": "bytes32[] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                              "typeString": "bytes32[] memory"
                            }
                          ],
                          "expression": {
                            "id": 1563,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "18164:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 1564,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "18164:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 1566,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18164:25:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 1562,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "18154:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 1567,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18154:36:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "18137:53:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1570,
                        "name": "myHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1561,
                        "src": "18217:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 1573,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1571,
                          "name": "myHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1561,
                          "src": "18225:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 1572,
                          "name": "_givenHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1513,
                          "src": "18233:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "18225:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 1574,
                          "name": "_fields",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1516,
                          "src": "18245:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                            "typeString": "bytes32[] memory"
                          }
                        },
                        "id": 1576,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 1575,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "18253:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "18245:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 1577,
                        "name": "unencoded",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1522,
                        "src": "18257:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 1569,
                      "name": "HashTesting",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 162,
                      "src": "18205:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bool_$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes32,bool,bytes32,bytes memory)"
                      }
                    },
                    "id": 1578,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18205:62:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1579,
                  "nodeType": "EmitStatement",
                  "src": "18200:67:2"
                }
              ]
            },
            "functionSelector": "09265ce6",
            "id": 1581,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testHashing",
            "nameLocation": "17780:11:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1519,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1513,
                  "mutability": "mutable",
                  "name": "_givenHash",
                  "nameLocation": "17800:10:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1581,
                  "src": "17792:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1512,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "17792:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1516,
                  "mutability": "mutable",
                  "name": "_fields",
                  "nameLocation": "17829:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1581,
                  "src": "17812:24:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1514,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "17812:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 1515,
                    "nodeType": "ArrayTypeName",
                    "src": "17812:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1518,
                  "mutability": "mutable",
                  "name": "_refuted",
                  "nameLocation": "17843:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1581,
                  "src": "17838:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1517,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "17838:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17791:61:2"
            },
            "returnParameters": {
              "id": 1520,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17862:0:2"
            },
            "scope": 2021,
            "src": "17771:503:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1973,
              "nodeType": "Block",
              "src": "19076:4112:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1605,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1598,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "id": 1594,
                                "name": "_wizId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1583,
                                "src": "19163:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 1592,
                                "name": "wizardsNFT",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 25,
                                "src": "19144:10:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Wizards_$7202",
                                  "typeString": "contract Wizards"
                                }
                              },
                              "id": 1593,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "ownerOf",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3491,
                              "src": "19144:18:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                                "typeString": "function (uint256) view external returns (address)"
                              }
                            },
                            "id": 1595,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "19144:26:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 1596,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "19174:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1597,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "19174:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "19144:40:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1604,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 1599,
                                "name": "tasks",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 110,
                                "src": "19188:5:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Task_$76_storage_$",
                                  "typeString": "mapping(uint256 => struct Governance.Task storage ref)"
                                }
                              },
                              "id": 1601,
                              "indexExpression": {
                                "id": 1600,
                                "name": "_taskID",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1585,
                                "src": "19194:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "19188:14:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Task_$76_storage",
                                "typeString": "struct Governance.Task storage ref"
                              }
                            },
                            "id": 1602,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "verifierID",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 71,
                            "src": "19188:25:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 1603,
                            "name": "_wizId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1583,
                            "src": "19215:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "19188:33:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "19144:77:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d757374206265206f776e6572206f662061737369676e65642077697a617264",
                        "id": 1606,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19223:34:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_29a5053514bc5f788dbd1548d65ae6067a8703782cd1eb7764fcaabfc0c5129d",
                          "typeString": "literal_string \"Must be owner of assigned wizard\""
                        },
                        "value": "Must be owner of assigned wizard"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_29a5053514bc5f788dbd1548d65ae6067a8703782cd1eb7764fcaabfc0c5129d",
                          "typeString": "literal_string \"Must be owner of assigned wizard\""
                        }
                      ],
                      "id": 1591,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "19136:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1607,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19136:122:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1608,
                  "nodeType": "ExpressionStatement",
                  "src": "19136:122:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1613,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1610,
                            "name": "_fields",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1588,
                            "src": "19276:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                              "typeString": "bytes32[] memory"
                            }
                          },
                          "id": 1611,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "19276:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1612,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "19293:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "19276:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1609,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "19268:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1614,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19268:27:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1615,
                  "nodeType": "ExpressionStatement",
                  "src": "19268:27:2"
                },
                {
                  "assignments": [
                    1618
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1618,
                      "mutability": "mutable",
                      "name": "myTask",
                      "nameLocation": "19318:6:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1973,
                      "src": "19306:18:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Task_$76_memory_ptr",
                        "typeString": "struct Governance.Task"
                      },
                      "typeName": {
                        "id": 1617,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1616,
                          "name": "Task",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 76,
                          "src": "19306:4:2"
                        },
                        "referencedDeclaration": 76,
                        "src": "19306:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Task_$76_storage_ptr",
                          "typeString": "struct Governance.Task"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1622,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1619,
                      "name": "tasks",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 110,
                      "src": "19327:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Task_$76_storage_$",
                        "typeString": "mapping(uint256 => struct Governance.Task storage ref)"
                      }
                    },
                    "id": 1621,
                    "indexExpression": {
                      "id": 1620,
                      "name": "_taskID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1585,
                      "src": "19333:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "19327:14:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Task_$76_storage",
                      "typeString": "struct Governance.Task storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "19306:35:2"
                },
                {
                  "assignments": [
                    1624
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1624,
                      "mutability": "mutable",
                      "name": "count",
                      "nameLocation": "19359:5:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1973,
                      "src": "19351:13:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1623,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "19351:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1626,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 1625,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "19367:1:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "19351:17:2"
                },
                {
                  "assignments": [
                    1628
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1628,
                      "mutability": "mutable",
                      "name": "deleteTaskFlag",
                      "nameLocation": "19383:14:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1973,
                      "src": "19378:19:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1627,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "19378:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1630,
                  "initialValue": {
                    "hexValue": "74727565",
                    "id": 1629,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "19400:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "19378:26:2"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    },
                    "id": 1634,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 1631,
                        "name": "myTask",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1618,
                        "src": "19463:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Task_$76_memory_ptr",
                          "typeString": "struct Governance.Task memory"
                        }
                      },
                      "id": 1632,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "refuterID",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 73,
                      "src": "19463:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1633,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "19482:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "19463:20:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1663,
                  "nodeType": "IfStatement",
                  "src": "19460:205:2",
                  "trueBody": {
                    "id": 1662,
                    "nodeType": "Block",
                    "src": "19485:180:2",
                    "statements": [
                      {
                        "body": {
                          "id": 1660,
                          "nodeType": "Block",
                          "src": "19538:117:2",
                          "statements": [
                            {
                              "expression": {
                                "id": 1654,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 1643,
                                    "name": "_fields",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1588,
                                    "src": "19556:7:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                      "typeString": "bytes32[] memory"
                                    }
                                  },
                                  "id": 1645,
                                  "indexExpression": {
                                    "id": 1644,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1636,
                                    "src": "19564:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "19556:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "baseExpression": {
                                            "id": 1649,
                                            "name": "_fields",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1588,
                                            "src": "19596:7:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                              "typeString": "bytes32[] memory"
                                            }
                                          },
                                          "id": 1651,
                                          "indexExpression": {
                                            "id": 1650,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1636,
                                            "src": "19604:1:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "19596:10:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                          }
                                        ],
                                        "expression": {
                                          "id": 1647,
                                          "name": "abi",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -1,
                                          "src": "19579:3:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_abi",
                                            "typeString": "abi"
                                          }
                                        },
                                        "id": 1648,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberName": "encodePacked",
                                        "nodeType": "MemberAccess",
                                        "src": "19579:16:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                          "typeString": "function () pure returns (bytes memory)"
                                        }
                                      },
                                      "id": 1652,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "19579:28:2",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    ],
                                    "id": 1646,
                                    "name": "keccak256",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -8,
                                    "src": "19569:9:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                      "typeString": "function (bytes memory) pure returns (bytes32)"
                                    }
                                  },
                                  "id": 1653,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "19569:39:2",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "src": "19556:52:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "id": 1655,
                              "nodeType": "ExpressionStatement",
                              "src": "19556:52:2"
                            },
                            {
                              "id": 1659,
                              "nodeType": "UncheckedBlock",
                              "src": "19626:15:2",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 1657,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "UnaryOperation",
                                    "operator": "++",
                                    "prefix": true,
                                    "src": "19636:3:2",
                                    "subExpression": {
                                      "id": 1656,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1636,
                                      "src": "19638:1:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 1658,
                                  "nodeType": "ExpressionStatement",
                                  "src": "19636:3:2"
                                }
                              ]
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1642,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1639,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1636,
                            "src": "19518:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 1640,
                              "name": "_fields",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1588,
                              "src": "19522:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                "typeString": "bytes32[] memory"
                              }
                            },
                            "id": 1641,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "19522:14:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "19518:18:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1661,
                        "initializationExpression": {
                          "assignments": [
                            1636
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 1636,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "19511:1:2",
                              "nodeType": "VariableDeclaration",
                              "scope": 1661,
                              "src": "19503:9:2",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 1635,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "19503:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 1638,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 1637,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "19515:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "19503:13:2"
                        },
                        "nodeType": "ForStatement",
                        "src": "19499:156:2"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    1665
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1665,
                      "mutability": "mutable",
                      "name": "myHash",
                      "nameLocation": "19682:6:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1973,
                      "src": "19674:14:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1664,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "19674:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1672,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1669,
                            "name": "_fields",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1588,
                            "src": "19718:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                              "typeString": "bytes32[] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                              "typeString": "bytes32[] memory"
                            }
                          ],
                          "expression": {
                            "id": 1667,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "19701:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 1668,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "19701:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 1670,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "19701:25:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 1666,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "19691:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 1671,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19691:36:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "19674:53:2"
                },
                {
                  "assignments": [
                    1674
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1674,
                      "mutability": "mutable",
                      "name": "correctHash",
                      "nameLocation": "19746:11:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1973,
                      "src": "19738:19:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1673,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "19738:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1682,
                  "initialValue": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "id": 1678,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 1675,
                          "name": "myTask",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1618,
                          "src": "19760:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Task_$76_memory_ptr",
                            "typeString": "struct Governance.Task memory"
                          }
                        },
                        "id": 1676,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "hash",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 61,
                        "src": "19760:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "id": 1677,
                        "name": "myHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1665,
                        "src": "19775:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "src": "19760:21:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "hexValue": "30",
                      "id": 1680,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "19788:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "id": 1681,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "19760:29:2",
                    "trueExpression": {
                      "hexValue": "31",
                      "id": 1679,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "19784:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "19738:51:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1684,
                        "name": "_wizId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1583,
                        "src": "19827:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 1685,
                          "name": "myTask",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1618,
                          "src": "19835:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Task_$76_memory_ptr",
                            "typeString": "struct Governance.Task memory"
                          }
                        },
                        "id": 1686,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "NFTID",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 59,
                        "src": "19835:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        }
                      },
                      {
                        "id": 1687,
                        "name": "_taskID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1585,
                        "src": "19849:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1688,
                        "name": "myHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1665,
                        "src": "19858:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1691,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1689,
                          "name": "correctHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1674,
                          "src": "19866:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 1690,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "19879:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "19866:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1683,
                      "name": "VerificationSucceeded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 152,
                      "src": "19805:21:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_bytes32_$_t_bool_$returns$__$",
                        "typeString": "function (uint256,uint256,uint256,bytes32,bool)"
                      }
                    },
                    "id": 1692,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19805:76:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1693,
                  "nodeType": "EmitStatement",
                  "src": "19800:81:2"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1696,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1694,
                      "name": "correctHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1674,
                      "src": "19896:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 1695,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "19910:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "19896:15:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 1907,
                    "nodeType": "Block",
                    "src": "20759:1630:2",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          },
                          "id": 1774,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 1771,
                              "name": "myTask",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1618,
                              "src": "20849:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Task_$76_memory_ptr",
                                "typeString": "struct Governance.Task memory"
                              }
                            },
                            "id": 1772,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "refuterID",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 73,
                            "src": "20849:16:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 1773,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "20867:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "20849:19:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1801,
                        "nodeType": "IfStatement",
                        "src": "20846:211:2",
                        "trueBody": {
                          "id": 1800,
                          "nodeType": "Block",
                          "src": "20869:188:2",
                          "statements": [
                            {
                              "expression": {
                                "id": 1782,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 1775,
                                    "name": "myTask",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1618,
                                    "src": "20887:6:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Task_$76_memory_ptr",
                                      "typeString": "struct Governance.Task memory"
                                    }
                                  },
                                  "id": 1777,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "refuterID",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 73,
                                  "src": "20887:16:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint16",
                                    "typeString": "uint16"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "id": 1780,
                                      "name": "_wizId",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1583,
                                      "src": "20911:6:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "id": 1779,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "20904:6:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint16_$",
                                      "typeString": "type(uint16)"
                                    },
                                    "typeName": {
                                      "id": 1778,
                                      "name": "uint16",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "20904:6:2",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 1781,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "20904:14:2",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint16",
                                    "typeString": "uint16"
                                  }
                                },
                                "src": "20887:31:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint16",
                                  "typeString": "uint16"
                                }
                              },
                              "id": 1783,
                              "nodeType": "ExpressionStatement",
                              "src": "20887:31:2"
                            },
                            {
                              "expression": {
                                "id": 1788,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 1784,
                                    "name": "myTask",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1618,
                                    "src": "20936:6:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Task_$76_memory_ptr",
                                      "typeString": "struct Governance.Task memory"
                                    }
                                  },
                                  "id": 1786,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "refuterHash",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 63,
                                  "src": "20936:18:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 1787,
                                  "name": "myHash",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1665,
                                  "src": "20955:6:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "src": "20936:25:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "id": 1789,
                              "nodeType": "ExpressionStatement",
                              "src": "20936:25:2"
                            },
                            {
                              "expression": {
                                "id": 1794,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 1790,
                                    "name": "tasks",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 110,
                                    "src": "20979:5:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Task_$76_storage_$",
                                      "typeString": "mapping(uint256 => struct Governance.Task storage ref)"
                                    }
                                  },
                                  "id": 1792,
                                  "indexExpression": {
                                    "id": 1791,
                                    "name": "_taskID",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1585,
                                    "src": "20985:7:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "20979:14:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Task_$76_storage",
                                    "typeString": "struct Governance.Task storage ref"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 1793,
                                  "name": "myTask",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1618,
                                  "src": "20996:6:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Task_$76_memory_ptr",
                                    "typeString": "struct Governance.Task memory"
                                  }
                                },
                                "src": "20979:23:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Task_$76_storage",
                                  "typeString": "struct Governance.Task storage ref"
                                }
                              },
                              "id": 1795,
                              "nodeType": "ExpressionStatement",
                              "src": "20979:23:2"
                            },
                            {
                              "expression": {
                                "id": 1798,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 1796,
                                  "name": "deleteTaskFlag",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1628,
                                  "src": "21020:14:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "66616c7365",
                                  "id": 1797,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "21037:5:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "false"
                                },
                                "src": "21020:22:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 1799,
                              "nodeType": "ExpressionStatement",
                              "src": "21020:22:2"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          "id": 1805,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 1802,
                              "name": "myTask",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1618,
                              "src": "21133:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Task_$76_memory_ptr",
                                "typeString": "struct Governance.Task memory"
                              }
                            },
                            "id": 1803,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "refuterHash",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 63,
                            "src": "21133:18:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 1804,
                            "name": "myHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1665,
                            "src": "21153:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "21133:26:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 1905,
                          "nodeType": "Block",
                          "src": "21972:407:2",
                          "statements": [
                            {
                              "assignments": [
                                1879
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 1879,
                                  "mutability": "mutable",
                                  "name": "split",
                                  "nameLocation": "22086:5:2",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1905,
                                  "src": "22078:13:2",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 1878,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "22078:7:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 1882,
                              "initialValue": {
                                "expression": {
                                  "id": 1880,
                                  "name": "myTask",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1618,
                                  "src": "22094:6:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Task_$76_memory_ptr",
                                    "typeString": "struct Governance.Task memory"
                                  }
                                },
                                "id": 1881,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "payment",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 69,
                                "src": "22094:14:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint80",
                                  "typeString": "uint80"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "22078:30:2"
                            },
                            {
                              "expression": {
                                "id": 1886,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "delete",
                                "prefix": true,
                                "src": "22126:21:2",
                                "subExpression": {
                                  "baseExpression": {
                                    "id": 1883,
                                    "name": "tasks",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 110,
                                    "src": "22133:5:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Task_$76_storage_$",
                                      "typeString": "mapping(uint256 => struct Governance.Task storage ref)"
                                    }
                                  },
                                  "id": 1885,
                                  "indexExpression": {
                                    "id": 1884,
                                    "name": "_taskID",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1585,
                                    "src": "22139:7:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "22133:14:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Task_$76_storage",
                                    "typeString": "struct Governance.Task storage ref"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1887,
                              "nodeType": "ExpressionStatement",
                              "src": "22126:21:2"
                            },
                            {
                              "assignments": [
                                1889,
                                1891
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 1889,
                                  "mutability": "mutable",
                                  "name": "sent",
                                  "nameLocation": "22171:4:2",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1905,
                                  "src": "22166:9:2",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "typeName": {
                                    "id": 1888,
                                    "name": "bool",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "22166:4:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "visibility": "internal"
                                },
                                {
                                  "constant": false,
                                  "id": 1891,
                                  "mutability": "mutable",
                                  "name": "data",
                                  "nameLocation": "22190:4:2",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1905,
                                  "src": "22177:17:2",
                                  "stateVariable": false,
                                  "storageLocation": "memory",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes"
                                  },
                                  "typeName": {
                                    "id": 1890,
                                    "name": "bytes",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "22177:5:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_storage_ptr",
                                      "typeString": "bytes"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 1899,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "hexValue": "",
                                    "id": 1897,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "22225:2:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                      "typeString": "literal_string \"\""
                                    },
                                    "value": ""
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                      "typeString": "literal_string \"\""
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                        "typeString": "literal_string \"\""
                                      }
                                    ],
                                    "expression": {
                                      "arguments": [],
                                      "expression": {
                                        "argumentTypes": [],
                                        "id": 1892,
                                        "name": "owner",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 5267,
                                        "src": "22198:5:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                          "typeString": "function () view returns (address)"
                                        }
                                      },
                                      "id": 1893,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "22198:7:2",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "id": 1894,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "call",
                                    "nodeType": "MemberAccess",
                                    "src": "22198:12:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                      "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                                    }
                                  },
                                  "id": 1896,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "names": [
                                    "value"
                                  ],
                                  "nodeType": "FunctionCallOptions",
                                  "options": [
                                    {
                                      "id": 1895,
                                      "name": "split",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1879,
                                      "src": "22218:5:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "src": "22198:26:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                                    "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                                  }
                                },
                                "id": 1898,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "22198:30:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                                  "typeString": "tuple(bool,bytes memory)"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "22165:63:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1901,
                                    "name": "sent",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1889,
                                    "src": "22304:4:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "hexValue": "4661696c656420746f2073656e64204574686572",
                                    "id": 1902,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "22310:22:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
                                      "typeString": "literal_string \"Failed to send Ether\""
                                    },
                                    "value": "Failed to send Ether"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
                                      "typeString": "literal_string \"Failed to send Ether\""
                                    }
                                  ],
                                  "id": 1900,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "22296:7:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 1903,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "22296:37:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1904,
                              "nodeType": "ExpressionStatement",
                              "src": "22296:37:2"
                            }
                          ]
                        },
                        "id": 1906,
                        "nodeType": "IfStatement",
                        "src": "21130:1249:2",
                        "trueBody": {
                          "id": 1877,
                          "nodeType": "Block",
                          "src": "21160:795:2",
                          "statements": [
                            {
                              "assignments": [
                                1807
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 1807,
                                  "mutability": "mutable",
                                  "name": "split",
                                  "nameLocation": "21186:5:2",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1877,
                                  "src": "21178:13:2",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 1806,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "21178:7:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 1812,
                              "initialValue": {
                                "commonType": {
                                  "typeIdentifier": "t_uint80",
                                  "typeString": "uint80"
                                },
                                "id": 1811,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 1808,
                                    "name": "myTask",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1618,
                                    "src": "21194:6:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Task_$76_memory_ptr",
                                      "typeString": "struct Governance.Task memory"
                                    }
                                  },
                                  "id": 1809,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "payment",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 69,
                                  "src": "21194:14:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint80",
                                    "typeString": "uint80"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "/",
                                "rightExpression": {
                                  "hexValue": "32",
                                  "id": 1810,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "21209:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_2_by_1",
                                    "typeString": "int_const 2"
                                  },
                                  "value": "2"
                                },
                                "src": "21194:16:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint80",
                                  "typeString": "uint80"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "21178:32:2"
                            },
                            {
                              "assignments": [
                                1814
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 1814,
                                  "mutability": "mutable",
                                  "name": "taskRefuter",
                                  "nameLocation": "21244:11:2",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1877,
                                  "src": "21228:27:2",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  },
                                  "typeName": {
                                    "id": 1813,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "21228:15:2",
                                    "stateMutability": "payable",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 1823,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "expression": {
                                          "id": 1819,
                                          "name": "myTask",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1618,
                                          "src": "21285:6:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Task_$76_memory_ptr",
                                            "typeString": "struct Governance.Task memory"
                                          }
                                        },
                                        "id": 1820,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "refuterID",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 73,
                                        "src": "21285:16:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint16",
                                          "typeString": "uint16"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint16",
                                          "typeString": "uint16"
                                        }
                                      ],
                                      "expression": {
                                        "id": 1817,
                                        "name": "wizardsNFT",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 25,
                                        "src": "21266:10:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_Wizards_$7202",
                                          "typeString": "contract Wizards"
                                        }
                                      },
                                      "id": 1818,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "ownerOf",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 3491,
                                      "src": "21266:18:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                                        "typeString": "function (uint256) view external returns (address)"
                                      }
                                    },
                                    "id": 1821,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "21266:36:2",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 1816,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "21258:8:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_payable_$",
                                    "typeString": "type(address payable)"
                                  },
                                  "typeName": {
                                    "id": 1815,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "21258:8:2",
                                    "stateMutability": "payable",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1822,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "21258:45:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "21228:75:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 1827,
                                      "name": "myTask",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1618,
                                      "src": "21344:6:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Task_$76_memory_ptr",
                                        "typeString": "struct Governance.Task memory"
                                      }
                                    },
                                    "id": 1828,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "refuterID",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 73,
                                    "src": "21344:16:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint16",
                                      "typeString": "uint16"
                                    }
                                  },
                                  {
                                    "id": 1829,
                                    "name": "taskVerificationTimeBonus",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 120,
                                    "src": "21362:25:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint16",
                                      "typeString": "uint16"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 1824,
                                    "name": "wizardsNFT",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 25,
                                    "src": "21322:10:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_Wizards_$7202",
                                      "typeString": "contract Wizards"
                                    }
                                  },
                                  "id": 1826,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "verifyDuty",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 6823,
                                  "src": "21322:21:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                                    "typeString": "function (uint256,uint256) external"
                                  }
                                },
                                "id": 1830,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "21322:66:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1831,
                              "nodeType": "ExpressionStatement",
                              "src": "21322:66:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1835,
                                    "name": "_wizId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1583,
                                    "src": "21428:6:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 1836,
                                    "name": "taskVerificationTimeBonus",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 120,
                                    "src": "21436:25:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 1832,
                                    "name": "wizardsNFT",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 25,
                                    "src": "21406:10:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_Wizards_$7202",
                                      "typeString": "contract Wizards"
                                    }
                                  },
                                  "id": 1834,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "verifyDuty",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 6823,
                                  "src": "21406:21:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                                    "typeString": "function (uint256,uint256) external"
                                  }
                                },
                                "id": 1837,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "21406:56:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1838,
                              "nodeType": "ExpressionStatement",
                              "src": "21406:56:2"
                            },
                            {
                              "expression": {
                                "id": 1842,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "delete",
                                "prefix": true,
                                "src": "21547:21:2",
                                "subExpression": {
                                  "baseExpression": {
                                    "id": 1839,
                                    "name": "tasks",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 110,
                                    "src": "21554:5:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Task_$76_storage_$",
                                      "typeString": "mapping(uint256 => struct Governance.Task storage ref)"
                                    }
                                  },
                                  "id": 1841,
                                  "indexExpression": {
                                    "id": 1840,
                                    "name": "_taskID",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1585,
                                    "src": "21560:7:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "21554:14:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Task_$76_storage",
                                    "typeString": "struct Governance.Task storage ref"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1843,
                              "nodeType": "ExpressionStatement",
                              "src": "21547:21:2"
                            },
                            {
                              "assignments": [
                                1845,
                                1847
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 1845,
                                  "mutability": "mutable",
                                  "name": "sent",
                                  "nameLocation": "21635:4:2",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1877,
                                  "src": "21630:9:2",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "typeName": {
                                    "id": 1844,
                                    "name": "bool",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "21630:4:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "visibility": "internal"
                                },
                                {
                                  "constant": false,
                                  "id": 1847,
                                  "mutability": "mutable",
                                  "name": "data",
                                  "nameLocation": "21654:4:2",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1877,
                                  "src": "21641:17:2",
                                  "stateVariable": false,
                                  "storageLocation": "memory",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes"
                                  },
                                  "typeName": {
                                    "id": 1846,
                                    "name": "bytes",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "21641:5:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_storage_ptr",
                                      "typeString": "bytes"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 1854,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "hexValue": "",
                                    "id": 1852,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "21693:2:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                      "typeString": "literal_string \"\""
                                    },
                                    "value": ""
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                      "typeString": "literal_string \"\""
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                        "typeString": "literal_string \"\""
                                      }
                                    ],
                                    "expression": {
                                      "id": 1848,
                                      "name": "taskRefuter",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1814,
                                      "src": "21662:11:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address_payable",
                                        "typeString": "address payable"
                                      }
                                    },
                                    "id": 1849,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "call",
                                    "nodeType": "MemberAccess",
                                    "src": "21662:16:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                      "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                                    }
                                  },
                                  "id": 1851,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "names": [
                                    "value"
                                  ],
                                  "nodeType": "FunctionCallOptions",
                                  "options": [
                                    {
                                      "id": 1850,
                                      "name": "split",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1807,
                                      "src": "21686:5:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "src": "21662:30:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                                    "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                                  }
                                },
                                "id": 1853,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "21662:34:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                                  "typeString": "tuple(bool,bytes memory)"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "21629:67:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1856,
                                    "name": "sent",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1845,
                                    "src": "21722:4:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "hexValue": "4661696c656420746f2073656e64204574686572",
                                    "id": 1857,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "21728:22:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
                                      "typeString": "literal_string \"Failed to send Ether\""
                                    },
                                    "value": "Failed to send Ether"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
                                      "typeString": "literal_string \"Failed to send Ether\""
                                    }
                                  ],
                                  "id": 1855,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "21714:7:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 1858,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "21714:37:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1859,
                              "nodeType": "ExpressionStatement",
                              "src": "21714:37:2"
                            },
                            {
                              "expression": {
                                "id": 1870,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "components": [
                                    {
                                      "id": 1860,
                                      "name": "sent",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1845,
                                      "src": "21807:4:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    {
                                      "id": 1861,
                                      "name": "data",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1847,
                                      "src": "21813:4:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    }
                                  ],
                                  "id": 1862,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "TupleExpression",
                                  "src": "21806:12:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                                    "typeString": "tuple(bool,bytes memory)"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "hexValue": "",
                                      "id": 1868,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "string",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "21851:2:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                        "typeString": "literal_string \"\""
                                      },
                                      "value": ""
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                        "typeString": "literal_string \"\""
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                          "typeString": "literal_string \"\""
                                        }
                                      ],
                                      "expression": {
                                        "expression": {
                                          "id": 1863,
                                          "name": "msg",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -15,
                                          "src": "21821:3:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_message",
                                            "typeString": "msg"
                                          }
                                        },
                                        "id": 1864,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "sender",
                                        "nodeType": "MemberAccess",
                                        "src": "21821:10:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "id": 1865,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "call",
                                      "nodeType": "MemberAccess",
                                      "src": "21821:15:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                                      }
                                    },
                                    "id": 1867,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "names": [
                                      "value"
                                    ],
                                    "nodeType": "FunctionCallOptions",
                                    "options": [
                                      {
                                        "id": 1866,
                                        "name": "split",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1807,
                                        "src": "21844:5:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "src": "21821:29:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                                      "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                                    }
                                  },
                                  "id": 1869,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "21821:33:2",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                                    "typeString": "tuple(bool,bytes memory)"
                                  }
                                },
                                "src": "21806:48:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1871,
                              "nodeType": "ExpressionStatement",
                              "src": "21806:48:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1873,
                                    "name": "sent",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1845,
                                    "src": "21880:4:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "hexValue": "4661696c656420746f2073656e64204574686572",
                                    "id": 1874,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "21886:22:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
                                      "typeString": "literal_string \"Failed to send Ether\""
                                    },
                                    "value": "Failed to send Ether"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
                                      "typeString": "literal_string \"Failed to send Ether\""
                                    }
                                  ],
                                  "id": 1872,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "21872:7:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 1875,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "21872:37:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1876,
                              "nodeType": "ExpressionStatement",
                              "src": "21872:37:2"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "id": 1908,
                  "nodeType": "IfStatement",
                  "src": "19892:2497:2",
                  "trueBody": {
                    "id": 1770,
                    "nodeType": "Block",
                    "src": "19912:833:2",
                    "statements": [
                      {
                        "assignments": [
                          1698
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1698,
                            "mutability": "mutable",
                            "name": "split",
                            "nameLocation": "19998:5:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 1770,
                            "src": "19990:13:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1697,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "19990:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1703,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint80",
                            "typeString": "uint80"
                          },
                          "id": 1702,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 1699,
                              "name": "myTask",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1618,
                              "src": "20006:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Task_$76_memory_ptr",
                                "typeString": "struct Governance.Task memory"
                              }
                            },
                            "id": 1700,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "payment",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 69,
                            "src": "20006:14:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint80",
                              "typeString": "uint80"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "32",
                            "id": 1701,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "20021:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "src": "20006:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint80",
                            "typeString": "uint80"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "19990:32:2"
                      },
                      {
                        "assignments": [
                          1705
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1705,
                            "mutability": "mutable",
                            "name": "taskSubmitter",
                            "nameLocation": "20052:13:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 1770,
                            "src": "20036:29:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            "typeName": {
                              "id": 1704,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "20036:15:2",
                              "stateMutability": "payable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1714,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 1710,
                                    "name": "myTask",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1618,
                                    "src": "20095:6:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Task_$76_memory_ptr",
                                      "typeString": "struct Governance.Task memory"
                                    }
                                  },
                                  "id": 1711,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "verifierID",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 71,
                                  "src": "20095:17:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint16",
                                    "typeString": "uint16"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint16",
                                    "typeString": "uint16"
                                  }
                                ],
                                "expression": {
                                  "id": 1708,
                                  "name": "wizardsNFT",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 25,
                                  "src": "20076:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Wizards_$7202",
                                    "typeString": "contract Wizards"
                                  }
                                },
                                "id": 1709,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "ownerOf",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3491,
                                "src": "20076:18:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                                  "typeString": "function (uint256) view external returns (address)"
                                }
                              },
                              "id": 1712,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "20076:37:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1707,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "20068:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_payable_$",
                              "typeString": "type(address payable)"
                            },
                            "typeName": {
                              "id": 1706,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "20068:8:2",
                              "stateMutability": "payable",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1713,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "20068:46:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "20036:78:2"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1718,
                                "name": "myTask",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1618,
                                "src": "20204:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Task_$76_memory_ptr",
                                  "typeString": "struct Governance.Task memory"
                                }
                              },
                              "id": 1719,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "NFTID",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 59,
                              "src": "20204:12:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint40",
                                "typeString": "uint40"
                              }
                            },
                            {
                              "expression": {
                                "id": 1720,
                                "name": "myTask",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1618,
                                "src": "20218:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Task_$76_memory_ptr",
                                  "typeString": "struct Governance.Task memory"
                                }
                              },
                              "id": 1721,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timeBonus",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 67,
                              "src": "20218:16:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint24",
                                "typeString": "uint24"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint40",
                                "typeString": "uint40"
                              },
                              {
                                "typeIdentifier": "t_uint24",
                                "typeString": "uint24"
                              }
                            ],
                            "expression": {
                              "id": 1715,
                              "name": "wizardsNFT",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25,
                              "src": "20182:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Wizards_$7202",
                                "typeString": "contract Wizards"
                              }
                            },
                            "id": 1717,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "verifyDuty",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 6823,
                            "src": "20182:21:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256) external"
                            }
                          },
                          "id": 1722,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "20182:53:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1723,
                        "nodeType": "ExpressionStatement",
                        "src": "20182:53:2"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1727,
                                "name": "myTask",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1618,
                                "src": "20271:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Task_$76_memory_ptr",
                                  "typeString": "struct Governance.Task memory"
                                }
                              },
                              "id": 1728,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "verifierID",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 71,
                              "src": "20271:17:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            },
                            {
                              "id": 1729,
                              "name": "taskVerificationTimeBonus",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 120,
                              "src": "20290:25:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 1724,
                              "name": "wizardsNFT",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25,
                              "src": "20249:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Wizards_$7202",
                                "typeString": "contract Wizards"
                              }
                            },
                            "id": 1726,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "verifyDuty",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 6823,
                            "src": "20249:21:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256) external"
                            }
                          },
                          "id": 1730,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "20249:67:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1731,
                        "nodeType": "ExpressionStatement",
                        "src": "20249:67:2"
                      },
                      {
                        "expression": {
                          "id": 1735,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "delete",
                          "prefix": true,
                          "src": "20393:21:2",
                          "subExpression": {
                            "baseExpression": {
                              "id": 1732,
                              "name": "tasks",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 110,
                              "src": "20400:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Task_$76_storage_$",
                                "typeString": "mapping(uint256 => struct Governance.Task storage ref)"
                              }
                            },
                            "id": 1734,
                            "indexExpression": {
                              "id": 1733,
                              "name": "_taskID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1585,
                              "src": "20406:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "20400:14:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Task_$76_storage",
                              "typeString": "struct Governance.Task storage ref"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1736,
                        "nodeType": "ExpressionStatement",
                        "src": "20393:21:2"
                      },
                      {
                        "assignments": [
                          1738,
                          1740
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1738,
                            "mutability": "mutable",
                            "name": "sent",
                            "nameLocation": "20473:4:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 1770,
                            "src": "20468:9:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 1737,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "20468:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 1740,
                            "mutability": "mutable",
                            "name": "data",
                            "nameLocation": "20492:4:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 1770,
                            "src": "20479:17:2",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 1739,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "20479:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1747,
                        "initialValue": {
                          "arguments": [
                            {
                              "hexValue": "",
                              "id": 1745,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "20533:2:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              },
                              "value": ""
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                }
                              ],
                              "expression": {
                                "id": 1741,
                                "name": "taskSubmitter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1705,
                                "src": "20500:13:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "id": 1742,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "call",
                              "nodeType": "MemberAccess",
                              "src": "20500:18:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                              }
                            },
                            "id": 1744,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "id": 1743,
                                "name": "split",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1698,
                                "src": "20526:5:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "src": "20500:32:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                              "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                            }
                          },
                          "id": 1746,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "20500:36:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "20467:69:2"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1749,
                              "name": "sent",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1738,
                              "src": "20558:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4661696c656420746f2073656e64204574686572",
                              "id": 1750,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "20564:22:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
                                "typeString": "literal_string \"Failed to send Ether\""
                              },
                              "value": "Failed to send Ether"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
                                "typeString": "literal_string \"Failed to send Ether\""
                              }
                            ],
                            "id": 1748,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "20550:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1751,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "20550:37:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1752,
                        "nodeType": "ExpressionStatement",
                        "src": "20550:37:2"
                      },
                      {
                        "expression": {
                          "id": 1763,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "components": [
                              {
                                "id": 1753,
                                "name": "sent",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1738,
                                "src": "20635:4:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              {
                                "id": 1754,
                                "name": "data",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1740,
                                "src": "20641:4:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "id": 1755,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "TupleExpression",
                            "src": "20634:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                              "typeString": "tuple(bool,bytes memory)"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "hexValue": "",
                                "id": 1761,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "20679:2:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                },
                                "value": ""
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                    "typeString": "literal_string \"\""
                                  }
                                ],
                                "expression": {
                                  "expression": {
                                    "id": 1756,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "20649:3:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 1757,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "20649:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "id": 1758,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "call",
                                "nodeType": "MemberAccess",
                                "src": "20649:15:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                  "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                                }
                              },
                              "id": 1760,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "names": [
                                "value"
                              ],
                              "nodeType": "FunctionCallOptions",
                              "options": [
                                {
                                  "id": 1759,
                                  "name": "split",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1698,
                                  "src": "20672:5:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "src": "20649:29:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                                "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                              }
                            },
                            "id": 1762,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "20649:33:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                              "typeString": "tuple(bool,bytes memory)"
                            }
                          },
                          "src": "20634:48:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1764,
                        "nodeType": "ExpressionStatement",
                        "src": "20634:48:2"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1766,
                              "name": "sent",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1738,
                              "src": "20704:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4661696c656420746f2073656e64204574686572",
                              "id": 1767,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "20710:22:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
                                "typeString": "literal_string \"Failed to send Ether\""
                              },
                              "value": "Failed to send Ether"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
                                "typeString": "literal_string \"Failed to send Ether\""
                              }
                            ],
                            "id": 1765,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "20696:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1768,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "20696:37:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1769,
                        "nodeType": "ExpressionStatement",
                        "src": "20696:37:2"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "id": 1909,
                    "name": "deleteTaskFlag",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1628,
                    "src": "22453:14:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1972,
                  "nodeType": "IfStatement",
                  "src": "22450:731:2",
                  "trueBody": {
                    "id": 1971,
                    "nodeType": "Block",
                    "src": "22468:713:2",
                    "statements": [
                      {
                        "assignments": [
                          1911
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1911,
                            "mutability": "mutable",
                            "name": "totalTasksSubmitted",
                            "nameLocation": "22490:19:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 1971,
                            "src": "22482:27:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1910,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "22482:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1916,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 1914,
                              "name": "tasksWaitingConfirmation",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 98,
                              "src": "22536:24:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Bytes32Deque_$2893_storage",
                                "typeString": "struct DoubleEndedQueue.Bytes32Deque storage ref"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_Bytes32Deque_$2893_storage",
                                "typeString": "struct DoubleEndedQueue.Bytes32Deque storage ref"
                              }
                            ],
                            "expression": {
                              "id": 1912,
                              "name": "DoubleEndedQueue",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3215,
                              "src": "22512:16:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_DoubleEndedQueue_$3215_$",
                                "typeString": "type(library DoubleEndedQueue)"
                              }
                            },
                            "id": 1913,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3198,
                            "src": "22512:23:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32Deque_$2893_storage_ptr_$returns$_t_uint256_$",
                              "typeString": "function (struct DoubleEndedQueue.Bytes32Deque storage pointer) view returns (uint256)"
                            }
                          },
                          "id": 1915,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "22512:49:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "22482:79:2"
                      },
                      {
                        "body": {
                          "id": 1969,
                          "nodeType": "Block",
                          "src": "22703:468:2",
                          "statements": [
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1933,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "id": 1928,
                                          "name": "tasksWaitingConfirmation",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 98,
                                          "src": "22753:24:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Bytes32Deque_$2893_storage",
                                            "typeString": "struct DoubleEndedQueue.Bytes32Deque storage ref"
                                          }
                                        },
                                        {
                                          "id": 1929,
                                          "name": "i",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1918,
                                          "src": "22779:1:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_struct$_Bytes32Deque_$2893_storage",
                                            "typeString": "struct DoubleEndedQueue.Bytes32Deque storage ref"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "expression": {
                                          "id": 1926,
                                          "name": "DoubleEndedQueue",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 3215,
                                          "src": "22733:16:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_contract$_DoubleEndedQueue_$3215_$",
                                            "typeString": "type(library DoubleEndedQueue)"
                                          }
                                        },
                                        "id": 1927,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "at",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 3152,
                                        "src": "22733:19:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32Deque_$2893_storage_ptr_$_t_uint256_$returns$_t_bytes32_$",
                                          "typeString": "function (struct DoubleEndedQueue.Bytes32Deque storage pointer,uint256) view returns (bytes32)"
                                        }
                                      },
                                      "id": 1930,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "22733:48:2",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      }
                                    ],
                                    "id": 1925,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "22725:7:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint256_$",
                                      "typeString": "type(uint256)"
                                    },
                                    "typeName": {
                                      "id": 1924,
                                      "name": "uint256",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "22725:7:2",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 1931,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "22725:57:2",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "id": 1932,
                                  "name": "_taskID",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1585,
                                  "src": "22784:7:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "22725:66:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 1964,
                              "nodeType": "IfStatement",
                              "src": "22721:404:2",
                              "trueBody": {
                                "id": 1963,
                                "nodeType": "Block",
                                "src": "22792:333:2",
                                "statements": [
                                  {
                                    "assignments": [
                                      1935
                                    ],
                                    "declarations": [
                                      {
                                        "constant": false,
                                        "id": 1935,
                                        "mutability": "mutable",
                                        "name": "prevFront",
                                        "nameLocation": "22822:9:2",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 1963,
                                        "src": "22814:17:2",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes32",
                                          "typeString": "bytes32"
                                        },
                                        "typeName": {
                                          "id": 1934,
                                          "name": "bytes32",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "22814:7:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                          }
                                        },
                                        "visibility": "internal"
                                      }
                                    ],
                                    "id": 1940,
                                    "initialValue": {
                                      "arguments": [
                                        {
                                          "id": 1938,
                                          "name": "tasksWaitingConfirmation",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 98,
                                          "src": "22860:24:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Bytes32Deque_$2893_storage",
                                            "typeString": "struct DoubleEndedQueue.Bytes32Deque storage ref"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_struct$_Bytes32Deque_$2893_storage",
                                            "typeString": "struct DoubleEndedQueue.Bytes32Deque storage ref"
                                          }
                                        ],
                                        "expression": {
                                          "id": 1936,
                                          "name": "DoubleEndedQueue",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 3215,
                                          "src": "22834:16:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_contract$_DoubleEndedQueue_$3215_$",
                                            "typeString": "type(library DoubleEndedQueue)"
                                          }
                                        },
                                        "id": 1937,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "popFront",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 3051,
                                        "src": "22834:25:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Bytes32Deque_$2893_storage_ptr_$returns$_t_bytes32_$",
                                          "typeString": "function (struct DoubleEndedQueue.Bytes32Deque storage pointer) returns (bytes32)"
                                        }
                                      },
                                      "id": 1939,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "22834:51:2",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "22814:71:2"
                                  },
                                  {
                                    "condition": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 1943,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 1941,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1918,
                                        "src": "22910:1:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "!=",
                                      "rightExpression": {
                                        "hexValue": "30",
                                        "id": 1942,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "22913:1:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      },
                                      "src": "22910:4:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "id": 1962,
                                    "nodeType": "IfStatement",
                                    "src": "22907:200:2",
                                    "trueBody": {
                                      "id": 1961,
                                      "nodeType": "Block",
                                      "src": "22915:192:2",
                                      "statements": [
                                        {
                                          "expression": {
                                            "id": 1959,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftHandSide": {
                                              "baseExpression": {
                                                "expression": {
                                                  "id": 1944,
                                                  "name": "tasksWaitingConfirmation",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 98,
                                                  "src": "22992:24:2",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_Bytes32Deque_$2893_storage",
                                                    "typeString": "struct DoubleEndedQueue.Bytes32Deque storage ref"
                                                  }
                                                },
                                                "id": 1956,
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "_data",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 2892,
                                                "src": "22992:30:2",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_mapping$_t_int128_$_t_bytes32_$",
                                                  "typeString": "mapping(int128 => bytes32)"
                                                }
                                              },
                                              "id": 1957,
                                              "indexExpression": {
                                                "arguments": [
                                                  {
                                                    "commonType": {
                                                      "typeIdentifier": "t_int256",
                                                      "typeString": "int256"
                                                    },
                                                    "id": 1954,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "leftExpression": {
                                                      "expression": {
                                                        "id": 1948,
                                                        "name": "tasksWaitingConfirmation",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 98,
                                                        "src": "23030:24:2",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_struct$_Bytes32Deque_$2893_storage",
                                                          "typeString": "struct DoubleEndedQueue.Bytes32Deque storage ref"
                                                        }
                                                      },
                                                      "id": 1949,
                                                      "isConstant": false,
                                                      "isLValue": true,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "memberName": "_begin",
                                                      "nodeType": "MemberAccess",
                                                      "referencedDeclaration": 2886,
                                                      "src": "23030:31:2",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_int128",
                                                        "typeString": "int128"
                                                      }
                                                    },
                                                    "nodeType": "BinaryOperation",
                                                    "operator": "+",
                                                    "rightExpression": {
                                                      "arguments": [
                                                        {
                                                          "id": 1952,
                                                          "name": "i",
                                                          "nodeType": "Identifier",
                                                          "overloadedDeclarations": [],
                                                          "referencedDeclaration": 1918,
                                                          "src": "23068:1:2",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                          }
                                                        }
                                                      ],
                                                      "expression": {
                                                        "argumentTypes": [
                                                          {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                          }
                                                        ],
                                                        "id": 1951,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "lValueRequested": false,
                                                        "nodeType": "ElementaryTypeNameExpression",
                                                        "src": "23064:3:2",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_type$_t_int256_$",
                                                          "typeString": "type(int256)"
                                                        },
                                                        "typeName": {
                                                          "id": 1950,
                                                          "name": "int",
                                                          "nodeType": "ElementaryTypeName",
                                                          "src": "23064:3:2",
                                                          "typeDescriptions": {}
                                                        }
                                                      },
                                                      "id": 1953,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": false,
                                                      "kind": "typeConversion",
                                                      "lValueRequested": false,
                                                      "names": [],
                                                      "nodeType": "FunctionCall",
                                                      "src": "23064:6:2",
                                                      "tryCall": false,
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_int256",
                                                        "typeString": "int256"
                                                      }
                                                    },
                                                    "src": "23030:40:2",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_int256",
                                                      "typeString": "int256"
                                                    }
                                                  }
                                                ],
                                                "expression": {
                                                  "argumentTypes": [
                                                    {
                                                      "typeIdentifier": "t_int256",
                                                      "typeString": "int256"
                                                    }
                                                  ],
                                                  "id": 1947,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "lValueRequested": false,
                                                  "nodeType": "ElementaryTypeNameExpression",
                                                  "src": "23023:6:2",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_int128_$",
                                                    "typeString": "type(int128)"
                                                  },
                                                  "typeName": {
                                                    "id": 1946,
                                                    "name": "int128",
                                                    "nodeType": "ElementaryTypeName",
                                                    "src": "23023:6:2",
                                                    "typeDescriptions": {}
                                                  }
                                                },
                                                "id": 1955,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "typeConversion",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "23023:48:2",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_int128",
                                                  "typeString": "int128"
                                                }
                                              },
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": true,
                                              "nodeType": "IndexAccess",
                                              "src": "22992:80:2",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_bytes32",
                                                "typeString": "bytes32"
                                              }
                                            },
                                            "nodeType": "Assignment",
                                            "operator": "=",
                                            "rightHandSide": {
                                              "id": 1958,
                                              "name": "prevFront",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1935,
                                              "src": "23075:9:2",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_bytes32",
                                                "typeString": "bytes32"
                                              }
                                            },
                                            "src": "22992:92:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bytes32",
                                              "typeString": "bytes32"
                                            }
                                          },
                                          "id": 1960,
                                          "nodeType": "ExpressionStatement",
                                          "src": "22992:92:2"
                                        }
                                      ]
                                    }
                                  }
                                ]
                              }
                            },
                            {
                              "id": 1968,
                              "nodeType": "UncheckedBlock",
                              "src": "23142:15:2",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 1966,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "UnaryOperation",
                                    "operator": "++",
                                    "prefix": true,
                                    "src": "23152:3:2",
                                    "subExpression": {
                                      "id": 1965,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1918,
                                      "src": "23154:1:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 1967,
                                  "nodeType": "ExpressionStatement",
                                  "src": "23152:3:2"
                                }
                              ]
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1923,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1921,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1918,
                            "src": "22677:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "id": 1922,
                            "name": "totalTasksSubmitted",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1911,
                            "src": "22681:19:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "22677:23:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1970,
                        "initializationExpression": {
                          "assignments": [
                            1918
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 1918,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "22671:1:2",
                              "nodeType": "VariableDeclaration",
                              "scope": 1970,
                              "src": "22663:9:2",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 1917,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "22663:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 1920,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 1919,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "22674:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "22663:12:2"
                        },
                        "nodeType": "ForStatement",
                        "src": "22659:512:2"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "f18c51d3",
            "id": 1974,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "submitVerification",
            "nameLocation": "18989:18:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1589,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1583,
                  "mutability": "mutable",
                  "name": "_wizId",
                  "nameLocation": "19016:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1974,
                  "src": "19008:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1582,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "19008:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1585,
                  "mutability": "mutable",
                  "name": "_taskID",
                  "nameLocation": "19032:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1974,
                  "src": "19024:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1584,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "19024:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1588,
                  "mutability": "mutable",
                  "name": "_fields",
                  "nameLocation": "19058:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1974,
                  "src": "19041:24:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1586,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "19041:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 1587,
                    "nodeType": "ArrayTypeName",
                    "src": "19041:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19007:59:2"
            },
            "returnParameters": {
              "id": 1590,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "19076:0:2"
            },
            "scope": 2021,
            "src": "18980:4208:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1982,
              "nodeType": "Block",
              "src": "23297:58:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "66616c7365",
                        "id": 1977,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "23315:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "hexValue": "4d7573742062652061646d696e",
                        "id": 1978,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "23321:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bd96b1ed5c7b326773a6be52f6fd399ff9263aeb45597abb2af8de7934df67c1",
                          "typeString": "literal_string \"Must be admin\""
                        },
                        "value": "Must be admin"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bd96b1ed5c7b326773a6be52f6fd399ff9263aeb45597abb2af8de7934df67c1",
                          "typeString": "literal_string \"Must be admin\""
                        }
                      ],
                      "id": 1976,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "23307:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1979,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23307:30:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1980,
                  "nodeType": "ExpressionStatement",
                  "src": "23307:30:2"
                },
                {
                  "id": 1981,
                  "nodeType": "PlaceholderStatement",
                  "src": "23347:1:2"
                }
              ]
            },
            "id": 1983,
            "name": "onlyAdmin",
            "nameLocation": "23285:9:2",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1975,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "23294:2:2"
            },
            "src": "23276:79:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1991,
              "nodeType": "Block",
              "src": "23385:58:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "66616c7365",
                        "id": 1986,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "23403:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "hexValue": "4d7573742062652061646d696e",
                        "id": 1987,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "23409:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bd96b1ed5c7b326773a6be52f6fd399ff9263aeb45597abb2af8de7934df67c1",
                          "typeString": "literal_string \"Must be admin\""
                        },
                        "value": "Must be admin"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bd96b1ed5c7b326773a6be52f6fd399ff9263aeb45597abb2af8de7934df67c1",
                          "typeString": "literal_string \"Must be admin\""
                        }
                      ],
                      "id": 1985,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "23395:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1988,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23395:30:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1989,
                  "nodeType": "ExpressionStatement",
                  "src": "23395:30:2"
                },
                {
                  "id": 1990,
                  "nodeType": "PlaceholderStatement",
                  "src": "23435:1:2"
                }
              ]
            },
            "id": 1992,
            "name": "onlyNFTOwner",
            "nameLocation": "23370:12:2",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1984,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "23382:2:2"
            },
            "src": "23361:82:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2000,
              "nodeType": "Block",
              "src": "23471:59:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "66616c7365",
                        "id": 1995,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "23489:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "hexValue": "4d757374206265206c6573736565",
                        "id": 1996,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "23495:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_37e3c5f829f0710bee63aab7e0e0e4e41123855652abc1459d4423f866aba493",
                          "typeString": "literal_string \"Must be lessee\""
                        },
                        "value": "Must be lessee"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_37e3c5f829f0710bee63aab7e0e0e4e41123855652abc1459d4423f866aba493",
                          "typeString": "literal_string \"Must be lessee\""
                        }
                      ],
                      "id": 1994,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "23481:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1997,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23481:31:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1998,
                  "nodeType": "ExpressionStatement",
                  "src": "23481:31:2"
                },
                {
                  "id": 1999,
                  "nodeType": "PlaceholderStatement",
                  "src": "23522:1:2"
                }
              ]
            },
            "id": 2001,
            "name": "onlyLessee",
            "nameLocation": "23458:10:2",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1993,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "23468:2:2"
            },
            "src": "23449:81:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2009,
              "nodeType": "Block",
              "src": "23558:81:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "66616c7365",
                        "id": 2004,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "23598:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "hexValue": "4d757374206265206d656d626572",
                        "id": 2005,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "23604:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a04ddf7e4f54e61b704ffb185299c2b9de8d6603e816ee24666c5099bc530a98",
                          "typeString": "literal_string \"Must be member\""
                        },
                        "value": "Must be member"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a04ddf7e4f54e61b704ffb185299c2b9de8d6603e816ee24666c5099bc530a98",
                          "typeString": "literal_string \"Must be member\""
                        }
                      ],
                      "id": 2003,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "23590:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2006,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23590:31:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2007,
                  "nodeType": "ExpressionStatement",
                  "src": "23590:31:2"
                },
                {
                  "id": 2008,
                  "nodeType": "PlaceholderStatement",
                  "src": "23631:1:2"
                }
              ]
            },
            "id": 2010,
            "name": "onlyMember",
            "nameLocation": "23545:10:2",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 2002,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "23555:2:2"
            },
            "src": "23536:103:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2019,
              "nodeType": "Block",
              "src": "23689:202:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 2013,
                          "name": "isCallerOnBoard",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 223,
                          "src": "23762:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                            "typeString": "function () view returns (bool)"
                          }
                        },
                        "id": 2014,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "23762:17:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d757374206265206f6e2074686520626f617264",
                        "id": 2015,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "23781:22:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ff1967d201ff7c8fd38bf0f0ae23f762e566218fb9ca1f12ab82fc2c11572d1c",
                          "typeString": "literal_string \"Must be on the board\""
                        },
                        "value": "Must be on the board"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ff1967d201ff7c8fd38bf0f0ae23f762e566218fb9ca1f12ab82fc2c11572d1c",
                          "typeString": "literal_string \"Must be on the board\""
                        }
                      ],
                      "id": 2012,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "23754:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2016,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23754:50:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2017,
                  "nodeType": "ExpressionStatement",
                  "src": "23754:50:2"
                },
                {
                  "id": 2018,
                  "nodeType": "PlaceholderStatement",
                  "src": "23883:1:2"
                }
              ]
            },
            "id": 2020,
            "name": "onlyBoard",
            "nameLocation": "23677:9:2",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 2011,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "23686:2:2"
            },
            "src": "23668:223:2",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 2022,
        "src": "771:23127:2",
        "usedErrors": [
          2881,
          2884
        ]
      }
    ],
    "src": "0:23898:2"
  },
  "bytecode": "6080604052610258600c5562015180600d556003600e553480156200002357600080fd5b50604051620045ce380380620045ce8339810160408190526200004691620000f7565b6001600055620000563362000088565b600280546001600160a01b039384166001600160a01b031991821617909155600380549290931691161790556200012f565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b80516001600160a01b0381168114620000f257600080fd5b919050565b600080604083850312156200010b57600080fd5b6200011683620000da565b91506200012660208401620000da565b90509250929050565b61448f806200013f6000396000f3fe6080604052600436106101855760003560e01c80638d977672116100d1578063d374a2171161008a578063f2fde38b11610064578063f2fde38b146104fd578063f4739bd91461051d578063f713b7ed1461053d578063ff9810991461055d57600080fd5b8063d374a2171461047d578063e95d23471461049d578063f18c51d3146104dd57600080fd5b80638d9776721461038f5780638da5cb5b146103c557806390b293d8146103ed578063976217cd14610403578063b2bad54414610430578063beca3a161461045d57600080fd5b806361f9e9a81161013e578063715018a611610118578063715018a61461031a57806372e185ce1461032f578063826b8ebd1461034f5780638a6655d61461036f57600080fd5b806361f9e9a8146102945780636215597b146102b457806369d03738146102fa57600080fd5b8063013cf08b1461019157806309265ce6146101cb5780630f61d8bd146101ed57806310190ef11461021d5780633b47fed2146102515780634b50f16a1461026657600080fd5b3661018c57005b600080fd5b34801561019d57600080fd5b506101b16101ac36600461355d565b61058a565b6040516101c29594939291906135ce565b60405180910390f35b3480156101d757600080fd5b506101eb6101e63660046136d7565b610656565b005b3480156101f957600080fd5b5061020d61020836600461355d565b61079c565b60405190151581526020016101c2565b34801561022957600080fd5b5061023d61023836600461355d565b6108a7565b6040516101c2989796959493929190613736565b34801561025d57600080fd5b5061020d6109b1565b34801561027257600080fd5b506102866102813660046137b5565b610abf565b6040516101c29291906138a1565b3480156102a057600080fd5b506101eb6102af3660046139a9565b610f53565b3480156102c057600080fd5b506102ec6102cf366004613a46565b600460209081526000928352604080842090915290825290205481565b6040519081526020016101c2565b34801561030657600080fd5b506101eb610315366004613a7d565b610fbd565b34801561032657600080fd5b506101eb611009565b34801561033b57600080fd5b506101eb61034a366004613b09565b61103f565b34801561035b57600080fd5b506102ec61036a36600461355d565b6114b5565b34801561037b57600080fd5b506101eb61038a366004613b5f565b6116d8565b34801561039b57600080fd5b506103af6103aa36600461355d565b611711565b6040516101c29a99989796959493929190613b8b565b3480156103d157600080fd5b506001546040516001600160a01b0390911681526020016101c2565b3480156103f957600080fd5b506102ec600b5481565b34801561040f57600080fd5b5061042361041e36600461355d565b611813565b6040516101c29190613c0c565b34801561043c57600080fd5b5061045061044b3660046137b5565b611955565b6040516101c29190613c1f565b34801561046957600080fd5b506101eb610478366004613c81565b611d1b565b34801561048957600080fd5b506101eb61049836600461355d565b611e7b565b3480156104a957600080fd5b506006546104c390600f81810b91600160801b9004900b82565b60408051600f93840b81529190920b6020820152016101c2565b3480156104e957600080fd5b506101eb6104f8366004613cd1565b6121b2565b34801561050957600080fd5b506101eb610518366004613a7d565b612bcf565b34801561052957600080fd5b5061020d61053836600461355d565b612c6a565b34801561054957600080fd5b506101eb610558366004613d20565b612e3a565b34801561056957600080fd5b5061057d61057836600461355d565b612fd7565b6040516101c29190613d5c565b6008602052600090815260409020805481906105a590613da4565b80601f01602080910402602001604051908101604052809291908181526020018280546105d190613da4565b801561061e5780601f106105f35761010080835404028352916020019161061e565b820191906000526020600020905b81548152906001019060200180831161060157829003601f168201915b505050506001830154600390930154919261ffff169164ffffffffff8082169250650100000000008204811691600160501b90041685565b60008260008151811061066b5761066b613dde565b602002602001015160405160200161068591815260200190565b604051602081830303815290604052905081156107115760005b835181101561070f578381815181106106ba576106ba613dde565b60200260200101516040516020016106d491815260200190565b604051602081830303815290604052805190602001208482815181106106fc576106fc613dde565b602090810291909101015260010161069f565b505b6000836040516020016107249190613df4565b6040516020818303038152906040528051906020012090507f637ce8d069e382e64ef71cf191623b88c7e307ce252e908e7f2babbad0cb81ea818683148660008151811061077457610774613dde565b60200260200101518560405161078d9493929190613e2a565b60405180910390a15050505050565b6002546040516331a9108f60e11b81526004810183905260009133916001600160a01b0390911690636352211e90602401602060405180830381865afa1580156107ea573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061080e9190613e5b565b6001600160a01b03161480156108925750600e546003546040516301245c6b60e21b8152600481018590526001600160a01b039091169063049171ac90602401602060405180830381865afa15801561086b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061088f9190613e78565b11155b1561089f57506001919050565b506000919050565b600581815481106108b757600080fd5b90600052602060002090600302016000915090508060010180546108da90613da4565b80601f016020809104026020016040519081016040528092919081815260200182805461090690613da4565b80156109535780601f1061092857610100808354040283529160200191610953565b820191906000526020600020905b81548152906001019060200180831161093657829003601f168201915b5050506002909301549192505060ff8082169164ffffffffff610100820481169266010000000000008304169162ffffff600160381b82041691600160501b8204811691600160781b81049091169061ffff600160a01b9091041688565b600060015b600e548111610ab7576002546003546040516301038d3760e61b81526004810184905233926001600160a01b0390811692636352211e929116906340e34dc090602401602060405180830381865afa158015610a16573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a3a9190613e78565b6040518263ffffffff1660e01b8152600401610a5891815260200190565b602060405180830381865afa158015610a75573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a999190613e5b565b6001600160a01b031603610aaf57600191505090565b6001016109b6565b506000905090565b6060806000610add600654600f81810b600160801b909204900b0390565b9050610ae76134bf565b600080805b84811015610c6f57610aff600682613101565b6000818152600a602052604090819020815161014081019092528054929550909182908290610b2d90613da4565b80601f0160208091040260200160405190810160405280929190818152602001828054610b5990613da4565b8015610ba65780601f10610b7b57610100808354040283529160200191610ba6565b820191906000526020600020905b815481529060010190602001808311610b8957829003601f168201915b5050509183525050600182015464ffffffffff9081166020830152600283015460408301526003830154606083015260049092015460ff8116608083015261010080820462ffffff1660a0840152600160201b82046001600160501b031660c0840152600160701b820461ffff90811660e0850152600160801b83041690830152600160901b9004821661012091820152820151919550429116118015610c5b57508764ffffffffff168460e0015161ffff16145b15610c67578160010191505b600101610aec565b5080600003610cdc57604080516001808252818301909252600091816020015b610c976134bf565b815260200190600190039081610c8f575050604080516001808252818301909252919250600091906020808301908036833750939b919a509098505050505050505050565b600080826001600160401b03811115610cf757610cf7613612565b604051908082528060200260200182016040528015610d3057816020015b610d1d6134bf565b815260200190600190039081610d155790505b5090506000836001600160401b03811115610d4d57610d4d613612565b604051908082528060200260200182016040528015610d76578160200160208202803683370190505b50905060005b87811015610f4357610d8f600682613101565b6000818152600a602052604090819020815161014081019092528054929850909182908290610dbd90613da4565b80601f0160208091040260200160405190810160405280929190818152602001828054610de990613da4565b8015610e365780601f10610e0b57610100808354040283529160200191610e36565b820191906000526020600020905b815481529060010190602001808311610e1957829003601f168201915b5050509183525050600182015464ffffffffff9081166020830152600283015460408301526003830154606083015260049092015460ff8116608083015261010080820462ffffff1660a0840152600160201b82046001600160501b031660c0840152600160701b820461ffff90811660e0850152600160801b83041690830152600160901b9004821661012091820152820151919850429116118015610eeb57508a64ffffffffff168760e0015161ffff16145b15610f3b5786838581518110610f0357610f03613dde565b602002602001018190525085828581518110610f2157610f21613dde565b602002602001018181525050836001019350848411610f43575b600101610d7c565b5090999098509650505050505050565b610f5b6109b1565b610fa35760405162461bcd60e51b8152602060048201526014602482015273135d5cdd081899481bdb881d1a1948189bd85c9960621b60448201526064015b60405180910390fd5b610fb4878760008888888888613172565b50505050505050565b6001546001600160a01b03163314610fe75760405162461bcd60e51b8152600401610f9a90613e91565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b6001546001600160a01b031633146110335760405162461bcd60e51b8152600401610f9a90613e91565b61103d60006132f1565b565b60005b6005548110156114af578360405160200161105d9190613ec6565b604051602081830303815290604052805190602001206005828154811061108657611086613dde565b90600052602060002090600302016001016040516020016110a79190613f56565b60405160208183030381529060405280519060200120036114a75742600582815481106110d6576110d6613dde565b6000918252602090912060039091020160020154600160501b900464ffffffffff161180159061113a57506005818154811061111457611114613dde565b6000918252602090912060039091020160020154600160781b900464ffffffffff164211155b61117c5760405162461bcd60e51b815260206004820152601360248201527213dd5d1cda5919481d1a5b59481c195c9a5bd9606a1b6044820152606401610f9a565b60006040518061014001604052808681526020018464ffffffffff1681526020018581526020016000801b8152602001600584815481106111bf576111bf613dde565b906000526020600020906003020160020160069054906101000a900460ff1660ff168152602001600584815481106111f9576111f9613dde565b6000918252602080832060039290920290910160020154600160381b900462ffffff1683528281018290526040808401839052606084018390526080909301829052600b5460068054600160801b90819004600f0b8086526007855286862084905582546001600160801b039081166001909201169091021790558252600a90522081519192508291819061128e9082613fb8565b5060208201516001828101805464ffffffffff191664ffffffffff938416179055604084015160028401556060840151600384015560808401516004909301805460a086015160c087015160e0880151610100808a0151610120909a015160ff90991663ffffffff199095169490941762ffffff90931690930291909117640100000000600160801b031916600160201b6001600160501b039092169190910261ffff60701b191617600160701b61ffff928316021766ffffffffffffff60801b1916600160801b919096160264ffffffffff60901b191694909417600160901b939092169290920217909155600b805460009061138d90849061408d565b909155506113a09050426201518061408d565b600583815481106113b3576113b3613dde565b6000918252602080832064ffffffffff881684526003909202909101905260409020556005805460019190849081106113ee576113ee613dde565b906000526020600020906003020160020160149054906101000a900461ffff1661141891906140a5565b6005838154811061142b5761142b613dde565b906000526020600020906003020160020160146101000a81548161ffff021916908361ffff1602179055507fbcc1ea15519f3acfb49e91de851e553b2c024b9ab85cee8ffd8fe4e4e0a7876d836001600b5461148791906140c8565b874260405161149994939291906140df565b60405180910390a1506114af565b600101611042565b50505050565b600060095482106114fb5760405162461bcd60e51b815260206004820152601060248201526f1b9bc81cdd58da081c1c9bdc1bdcd85b60821b6044820152606401610f9a565b600082815260086020526040902060030154600160501b900464ffffffffff16421161155f5760405162461bcd60e51b8152602060048201526013602482015272766f74696e67207374696c6c2061637469766560681b6044820152606401610f9a565b6000806000805b60008681526008602052604090206001015461ffff1681101561168d57826008600088815260200190815260200160002060020182600881106115ab576115ab613dde565b601091828204019190066002029054906101000a900461ffff1661ffff16111561162b576008600087815260200190815260200160002060020181600881106115f6576115f6613dde565b601091828204019190066002029054906101000a900461ffff1661ffff1692508093508160010361162657600091505b61167b565b8260086000888152602001908152602001600020600201826008811061165357611653613dde565b601091828204019190066002029054906101000a900461ffff1661ffff160361167b57600191505b8061168581614116565b915050611566565b5080156116cf5760405162461bcd60e51b815260206004820152601060248201526f3a3432b932903bb0b99030903a34b29760811b6044820152606401610f9a565b50909392505050565b60405162461bcd60e51b815260206004820152600e60248201526d26bab9ba1031329036b2b6b132b960911b6044820152606401610f9a565b600a6020526000908152604090208054819061172c90613da4565b80601f016020809104026020016040519081016040528092919081815260200182805461175890613da4565b80156117a55780601f1061177a576101008083540402835291602001916117a5565b820191906000526020600020905b81548152906001019060200180831161178857829003601f168201915b505050600184015460028501546003860154600490960154949564ffffffffff92831695919450925060ff81169162ffffff610100830416916001600160501b03600160201b8204169161ffff600160701b8304811692600160801b810490911691600160901b909104168a565b61181b6134bf565b6000828152600a6020526040908190208151610140810190925280548290829061184490613da4565b80601f016020809104026020016040519081016040528092919081815260200182805461187090613da4565b80156118bd5780601f10611892576101008083540402835291602001916118bd565b820191906000526020600020905b8154815290600101906020018083116118a057829003601f168201915b5050509183525050600182015464ffffffffff9081166020830152600283015460408301526003830154606083015260049092015460ff8116608083015261010080820462ffffff1660a0840152600160201b82046001600160501b031660c0840152600160701b820461ffff90811660e0850152600160801b83041690830152600160901b90049091166101209091015292915050565b60606000805b600554811015611a6d57426005828154811061197957611979613dde565b6000918252602080832064ffffffffff891684526003909202909101905260409020541080156119dd575042600582815481106119b8576119b8613dde565b6000918252602090912060039091020160020154600160501b900464ffffffffff1611155b8015611a1c575042600582815481106119f8576119f8613dde565b6000918252602090912060039091020160020154600160781b900464ffffffffff16115b8015611a595750600160058281548110611a3857611a38613dde565b6000918252602090912060039091020160020154600160a01b900461ffff16115b15611a65578160010191505b60010161195b565b5080600003611ad957604080516001808252818301909252600091816020015b6060815260200190600190039081611a8d5790505090506040518060200160405280600081525081600081518110611ac757611ac7613dde565b60209081029190910101529392505050565b6000816001600160401b03811115611af357611af3613612565b604051908082528060200260200182016040528015611b2657816020015b6060815260200190600190039081611b115790505b5090506000805b600554811015611d11574260058281548110611b4b57611b4b613dde565b6000918252602080832064ffffffffff8b168452600390920290910190526040902054108015611baf57504260058281548110611b8a57611b8a613dde565b6000918252602090912060039091020160020154600160501b900464ffffffffff1611155b8015611bee57504260058281548110611bca57611bca613dde565b6000918252602090912060039091020160020154600160781b900464ffffffffff16115b8015611c2b5750600160058281548110611c0a57611c0a613dde565b6000918252602090912060039091020160020154600160a01b900461ffff16115b15611d095760058181548110611c4357611c43613dde565b90600052602060002090600302016001018054611c5f90613da4565b80601f0160208091040260200160405190810160405280929190818152602001828054611c8b90613da4565b8015611cd85780601f10611cad57610100808354040283529160200191611cd8565b820191906000526020600020905b815481529060010190602001808311611cbb57829003601f168201915b5050505050838381518110611cef57611cef613dde565b602002602001018190525081600101915083821015611d11575b600101611b2d565b5090949350505050565b611d236109b1565b611d665760405162461bcd60e51b8152602060048201526014602482015273135d5cdd081899481bdb881d1a1948189bd85c9960621b6044820152606401610f9a565b60018561ffff16118015611d7f57506101018561ffff16105b611dcb5760405162461bcd60e51b815260206004820152601960248201527f696e76616c6964206e756d626572206f66206f7074696f6e73000000000000006044820152606401610f9a565b600160096000828254611dde919061408d565b909155505060095460009081526008602052604090206003810180546effffffffffffffffffff000000000019166501000000000064ffffffffff8781169190910264ffffffffff60501b191691909117600160501b9186169190910217905560018101805461ffff191661ffff881617905580611e5d888a8361412f565b50611e718888600954600089898989613172565b5050505050505050565b6000611e96600654600f81810b600160801b909204900b0390565b9050611ea06134bf565b6000805b838110156121ab57611eb7600682613101565b6000818152600a602052604090819020815161014081019092528054929450909182908290611ee590613da4565b80601f0160208091040260200160405190810160405280929190818152602001828054611f1190613da4565b8015611f5e5780601f10611f3357610100808354040283529160200191611f5e565b820191906000526020600020905b815481529060010190602001808311611f4157829003601f168201915b5050509183525050600182015464ffffffffff9081166020830152600283015460408301526003830154606083015260049092015460ff8116608083015261010080820462ffffff1660a0840152600160201b82046001600160501b031660c0840152600160701b820461ffff90811660e0850152600160801b83041690830152600160901b9004821661012091820152820151919450429116108015612010575084836020015164ffffffffff1614155b801561202557508483610100015161ffff1614155b156121a35761ffff851660e0840152600c54612041904261408d565b64ffffffffff166101208401526000828152600a602052604090208351849190819061206d9082613fb8565b5060208281015160018301805464ffffffffff191664ffffffffff92831617905560408085015160028501556060850151600385015560808501516004909401805460a087015160c088015160e0890151610100808b0151610120909b015160ff909a1663ffffffff199095169490941762ffffff90931690930291909117640100000000600160801b031916600160201b6001600160501b039092169190910261ffff60701b191617600160701b61ffff928316021766ffffffffffffff60801b1916600160801b919097160264ffffffffff60901b191695909517600160901b9490921693909302179092556000848152600a9092529081902090517ff20a22b1aa6d8ba4bf99c845fb1f02f4879ba83155bde0f82f49cb58675df2689161219a91889186916141ee565b60405180910390a15b600101611ea4565b5050505050565b6002546040516331a9108f60e11b81526004810185905233916001600160a01b031690636352211e90602401602060405180830381865afa1580156121fb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061221f9190613e5b565b6001600160a01b031614801561225057506000828152600a6020526040902060040154600160701b900461ffff1683145b61229c5760405162461bcd60e51b815260206004820181905260248201527f4d757374206265206f776e6572206f662061737369676e65642077697a6172646044820152606401610f9a565b60008151116122aa57600080fd5b6000828152600a6020526040808220815161014081019092528054829082906122d290613da4565b80601f01602080910402602001604051908101604052809291908181526020018280546122fe90613da4565b801561234b5780601f106123205761010080835404028352916020019161234b565b820191906000526020600020905b81548152906001019060200180831161232e57829003601f168201915b505050918352505060018281015464ffffffffff9081166020840152600284015460408401526003840154606084015260049093015460ff8116608084015261010080820462ffffff1660a0850152600160201b82046001600160501b031660c0850152600160701b820461ffff90811660e0860152600160801b8304811682860152600160901b909204909416610120909301929092529183015192935060009216156124685760005b84518110156124665784818151811061241157612411613dde565b602002602001015160405160200161242b91815260200190565b6040516020818303038152906040528051906020012085828151811061245357612453613dde565b60209081029190910101526001016123f6565b505b60008460405160200161247b9190613df4565b6040516020818303038152906040528051906020012090506000818560400151146124a75760006124aa565b60015b602086810151604080518c815264ffffffffff909216928201929092529081018990526060810184905260ff9190911660018114608083015291507fe3f0e138f100deaf328ba1def71c39dade8cd971ba0074d935ee648e54532fae9060a00160405180910390a1806001036127cd57600060028660c0015161252d91906142b9565b60025460e08801516040516331a9108f60e11b815261ffff90911660048201526001600160501b039290921692506000916001600160a01b0390911690636352211e90602401602060405180830381865afa158015612590573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125b49190613e5b565b600254602089015160a08a0151604051638ad4d6a560e01b815264ffffffffff909216600483015262ffffff1660248201529192506001600160a01b031690638ad4d6a590604401600060405180830381600087803b15801561261657600080fd5b505af115801561262a573d6000803e3d6000fd5b505060025460e08a0151600d54604051638ad4d6a560e01b815261ffff909216600483015260248201526001600160a01b039091169250638ad4d6a591506044015b600060405180830381600087803b15801561268657600080fd5b505af115801561269a573d6000803e3d6000fd5b50505060008a8152600a6020526040812091506126b78282613513565b5060018101805464ffffffffff1916905560006002820181905560038201819055600490910180546001600160b81b031916905560405181906001600160a01b0384169085908381818185875af1925050503d8060008114612735576040519150601f19603f3d011682016040523d82523d6000602084013e61273a565b606091505b50915091508161275c5760405162461bcd60e51b8152600401610f9a906142ed565b60405133908590600081818185875af1925050503d806000811461279c576040519150601f19603f3d011682016040523d82523d6000602084013e6127a1565b606091505b509092509050816127c45760405162461bcd60e51b8152600401610f9a906142ed565b50505050612b38565b84610100015161ffff166000036128ff5761ffff8816610100860152606085018290526000878152600a602052604090208551869190819061280f9082613fb8565b50602082015160018201805464ffffffffff191664ffffffffff928316179055604083015160028301556060830151600383015560808301516004909201805460a085015160c086015160e0870151610100808901516101209099015160ff90981663ffffffff199095169490941762ffffff90931690930291909117640100000000600160801b031916600160201b6001600160501b039092169190910261ffff60701b191617600160701b61ffff928316021766ffffffffffffff60801b1916600160801b919095160264ffffffffff60901b191693909317600160901b9290911691909102179055600092505b81856060015103612a5257600060028660c0015161291d91906142b9565b6002546101008801516040516331a9108f60e11b815261ffff90911660048201526001600160501b039290921692506000916001600160a01b0390911690636352211e90602401602060405180830381865afa158015612981573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906129a59190613e5b565b600254610100890151600d54604051638ad4d6a560e01b815261ffff909216600483015260248201529192506001600160a01b031690638ad4d6a590604401600060405180830381600087803b1580156129fe57600080fd5b505af1158015612a12573d6000803e3d6000fd5b5050600254600d54604051638ad4d6a560e01b8152600481018f905260248101919091526001600160a01b039091169250638ad4d6a5915060440161266c565b60c08501516000888152600a602052604081206001600160501b039092169190612a7c8282613513565b5060018101805464ffffffffff1916905560006002820181905560038201819055600490910180546001600160b81b031916905580612ac36001546001600160a01b031690565b6001600160a01b03168360405160006040518083038185875af1925050503d8060008114612b0d576040519150601f19603f3d011682016040523d82523d6000602084013e612b12565b606091505b509150915081612b345760405162461bcd60e51b8152600401610f9a906142ed565b5050505b8215611e71576000612b59600654600f81810b600160801b909204900b0390565b905060005b81811015612bc35788612b72600683613101565b03612bbb576000612b836006613343565b90508115612bb9576006548190600790600090612ba4908690600f0b61431b565b600f0b81526020810191909152604001600020555b505b600101612b5e565b50505050505050505050565b6001546001600160a01b03163314612bf95760405162461bcd60e51b8152600401610f9a90613e91565b6001600160a01b038116612c5e5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610f9a565b612c67816132f1565b50565b600080612c86600654600f81810b600160801b909204900b0390565b9050612c906134bf565b60005b82811015612e2f57600a6000612caa600684613101565b60001c815260200190815260200160002060405180610140016040529081600082018054612cd790613da4565b80601f0160208091040260200160405190810160405280929190818152602001828054612d0390613da4565b8015612d505780601f10612d2557610100808354040283529160200191612d50565b820191906000526020600020905b815481529060010190602001808311612d3357829003601f168201915b5050509183525050600182015464ffffffffff9081166020830152600283015460408301526003830154606083015260049092015460ff8116608083015261010080820462ffffff1660a0840152600160201b82046001600160501b031660c0840152600160701b820461ffff90811660e0850152600160801b83041690830152600160901b9004821661012091820152820151919350429116108015612e02575084826020015164ffffffffff1614155b8015612e1757508482610100015161ffff1614155b15612e2757506001949350505050565b600101612c93565b506000949350505050565b60005b600554811015612fd35781604051602001612e58919061435c565b6040516020818303038152906040528051906020012060058281548110612e8157612e81613dde565b9060005260206000209060030201600101604051602001612ea29190614378565b6040516020818303038152906040528051906020012003612fcb57600060058281548110612ed257612ed2613dde565b90600052602060002090600302019050600060056001600580549050612ef891906140c8565b81548110612f0857612f08613dde565b9060005260206000209060030201905080915060056001600580549050612f2f91906140c8565b81548110612f3f57612f3f613dde565b90600052602060002090600302016000600182016000612f5f9190613513565b5060020180546001600160b01b031916905560058054612f81906001906140c8565b81548110612f9157612f91613dde565b90600052602060002090600302016000600182016000612fb19190613513565b5060020180546001600160b01b031916905550612fd39050565b600101612e3d565b5050565b6060600954821061301d5760405162461bcd60e51b815260206004820152601060248201526f1b9bc81cdd58da081c1c9bdc1bdcd85b60821b6044820152606401610f9a565b60008281526008602052604081206001015461ffff166001600160401b0381111561304a5761304a613612565b604051908082528060200260200182016040528015613073578160200160208202803683370190505b50905060005b81518110156130fa576008600085815260200190815260200160002060020181600881106130a9576130a9613dde565b601091828204019190066002029054906101000a900461ffff168282815181106130d5576130d5613dde565b61ffff90921660209283029190910190910152806130f281614116565b915050613079565b5092915050565b600080613124613110846133c2565b855461311f9190600f0b61431b565b613430565b8454909150600160801b9004600f90810b9082900b1261315757604051632d0483c560e21b815260040160405180910390fd5b600f0b60009081526001939093016020525050604090205490565b600580546001810180835560008381529192908390811061319557613195613dde565b600091825260209091206003909102019050600181016131b68a8c8361412f565b5060008160020160006101000a81548160ff021916908315150217905550878160020160016101000a81548164ffffffffff021916908364ffffffffff160217905550868160020160066101000a81548160ff021916908360ff160217905550858160020160076101000a81548162ffffff021916908362ffffff1602179055508481600201600a6101000a81548164ffffffffff021916908364ffffffffff1602179055508381600201600f6101000a81548164ffffffffff021916908364ffffffffff160217905550828160020160146101000a81548161ffff021916908361ffff1602179055507f2810025950962e3cd71fd98c2dc111ffbdb2a129b36771df8d36a7de2fe3e4e08a8a8a8a8a8a8a8a6040516132dd9897969594939291906143ea565b60405180910390a150505050505050505050565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600061335e8254600f81810b600160801b909204900b131590565b1561337c57604051631ed9509560e11b815260040160405180910390fd5b508054600f0b6000818152600180840160205260408220805492905583546fffffffffffffffffffffffffffffffff191692016001600160801b03169190911790915590565b60006001600160ff1b0382111561342c5760405162461bcd60e51b815260206004820152602860248201527f53616665436173743a2076616c756520646f65736e27742066697420696e2061604482015267371034b73a191a9b60c11b6064820152608401610f9a565b5090565b60006f7fffffffffffffffffffffffffffffff19821280159061346357506f7fffffffffffffffffffffffffffffff8213155b61342c5760405162461bcd60e51b815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e20316044820152663238206269747360c81b6064820152608401610f9a565b6040805161014081018252606080825260006020830181905292820183905281018290526080810182905260a0810182905260c0810182905260e08101829052610100810182905261012081019190915290565b50805461351f90613da4565b6000825580601f1061352f575050565b601f016020900490600052602060002090810190612c6791905b8082111561342c5760008155600101613549565b60006020828403121561356f57600080fd5b5035919050565b60005b83811015613591578181015183820152602001613579565b838111156114af5750506000910152565b600081518084526135ba816020860160208601613576565b601f01601f19169290920160200192915050565b60a0815260006135e160a08301886135a2565b61ffff9690961660208301525064ffffffffff93841660408201529183166060830152909116608090910152919050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b038111828210171561365057613650613612565b604052919050565b600082601f83011261366957600080fd5b813560206001600160401b0382111561368457613684613612565b8160051b613693828201613628565b92835284810182019282810190878511156136ad57600080fd5b83870192505b848310156136cc578235825291830191908301906136b3565b979650505050505050565b6000806000606084860312156136ec57600080fd5b8335925060208401356001600160401b0381111561370957600080fd5b61371586828701613658565b9250506040840135801515811461372b57600080fd5b809150509250925092565b600061010080835261374a8184018c6135a2565b9915156020840152505064ffffffffff968716604082015260ff95909516606086015262ffffff93909316608085015290841660a084015290921660c082015261ffff90911660e090910152919050565b803564ffffffffff811681146137b057600080fd5b919050565b6000602082840312156137c757600080fd5b6137d08261379b565b9392505050565b600061014082518185526137ed828601826135a2565b9150506020830151613808602086018264ffffffffff169052565b5060408301516040850152606083015160608501526080830151613831608086018260ff169052565b5060a083015161384860a086018262ffffff169052565b5060c083015161386360c08601826001600160501b03169052565b5060e083015161387960e086018261ffff169052565b506101008381015161ffff16908501526101208084015164ffffffffff811682870152611d11565b6000604082016040835280855180835260608501915060608160051b8601019250602080880160005b838110156138f857605f198887030185526138e68683516137d7565b955093820193908201906001016138ca565b50508584038187015286518085528782019482019350915060005b8281101561392f57845184529381019392810192600101613913565b5091979650505050505050565b60008083601f84011261394e57600080fd5b5081356001600160401b0381111561396557600080fd5b60208301915083602082850101111561397d57600080fd5b9250929050565b803562ffffff811681146137b057600080fd5b803561ffff811681146137b057600080fd5b600080600080600080600060c0888a0312156139c457600080fd5b87356001600160401b038111156139da57600080fd5b6139e68a828b0161393c565b909850965050602088013560ff81168114613a0057600080fd5b9450613a0e60408901613984565b9350613a1c6060890161379b565b9250613a2a6080890161379b565b9150613a3860a08901613997565b905092959891949750929550565b60008060408385031215613a5957600080fd5b50508035926020909101359150565b6001600160a01b0381168114612c6757600080fd5b600060208284031215613a8f57600080fd5b81356137d081613a68565b600082601f830112613aab57600080fd5b81356001600160401b03811115613ac457613ac4613612565b613ad7601f8201601f1916602001613628565b818152846020838601011115613aec57600080fd5b816020850160208301376000918101602001919091529392505050565b600080600060608486031215613b1e57600080fd5b83356001600160401b03811115613b3457600080fd5b613b4086828701613a9a565b93505060208401359150613b566040850161379b565b90509250925092565b600080600060608486031215613b7457600080fd5b505081359360208301359350604090920135919050565b6000610140808352613b9f8184018e6135a2565b64ffffffffff9c8d166020850152604084019b909b525050606081019790975260ff95909516608087015262ffffff9390931660a08601526001600160501b039190911660c085015261ffff90811660e08501521661010083015290921661012090920191909152919050565b6020815260006137d060208301846137d7565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015613c7457603f19888603018452613c628583516135a2565b94509285019290850190600101613c46565b5092979650505050505050565b600080600080600080600060c0888a031215613c9c57600080fd5b87356001600160401b03811115613cb257600080fd5b613cbe8a828b0161393c565b9098509650613a00905060208901613997565b600080600060608486031215613ce657600080fd5b833592506020840135915060408401356001600160401b03811115613d0a57600080fd5b613d1686828701613658565b9150509250925092565b600060208284031215613d3257600080fd5b81356001600160401b03811115613d4857600080fd5b613d5484828501613a9a565b949350505050565b6020808252825182820181905260009190848201906040850190845b81811015613d9857835161ffff1683529284019291840191600101613d78565b50909695505050505050565b600181811c90821680613db857607f821691505b602082108103613dd857634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b815160009082906020808601845b83811015613e1e57815185529382019390820190600101613e02565b50929695505050505050565b8481528315156020820152826040820152608060608201526000613e5160808301846135a2565b9695505050505050565b600060208284031215613e6d57600080fd5b81516137d081613a68565b600060208284031215613e8a57600080fd5b5051919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020815260006137d060208301846135a2565b60008154613ee681613da4565b808552602060018381168015613f035760018114613f1d57613f4b565b60ff1985168884015283151560051b880183019550613f4b565b866000528260002060005b85811015613f435781548a8201860152908301908401613f28565b890184019650505b505050505092915050565b6020815260006137d06020830184613ed9565b601f821115613fb357600081815260208120601f850160051c81016020861015613f905750805b601f850160051c820191505b81811015613faf57828155600101613f9c565b5050505b505050565b81516001600160401b03811115613fd157613fd1613612565b613fe581613fdf8454613da4565b84613f69565b602080601f83116001811461401a57600084156140025750858301515b600019600386901b1c1916600185901b178555613faf565b600085815260208120601f198616915b828110156140495788860151825594840194600190910190840161402a565b50858210156140675787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052601160045260246000fd5b600082198211156140a0576140a0614077565b500190565b600061ffff838116908316818110156140c0576140c0614077565b039392505050565b6000828210156140da576140da614077565b500390565b64ffffffffff8516815283602082015260806040820152600061410560808301856135a2565b905082606083015295945050505050565b60006001820161412857614128614077565b5060010190565b6001600160401b0383111561414657614146613612565b61415a836141548354613da4565b83613f69565b6000601f84116001811461418e57600085156141765750838201355b600019600387901b1c1916600186901b1783556121ab565b600083815260209020601f19861690835b828110156141bf578685013582556020948501946001909201910161419f565b50868210156141dc5760001960f88860031b161c19848701351681555b505060018560011b0183555050505050565b8381528260208201526060604082015260006101408060608401526142176101a0840185613ed9565b600185015464ffffffffff1664ffffffffff8116608086015250600285015460a0850152600385015460c0850152600485015460ff811660e0860152600881901c62ffffff16610100860152602081901c6001600160501b031661012086015261ffff607082901c81168487015261429b6101608701828460801c1661ffff169052565b50609081901c64ffffffffff16610180860152509695505050505050565b60006001600160501b03808416806142e157634e487b7160e01b600052601260045260246000fd5b92169190910492915050565b6020808252601490820152732330b4b632b2103a379039b2b7321022ba3432b960611b604082015260600190565b600080821280156001600160ff1b038490038513161561433d5761433d614077565b600160ff1b839003841281161561435657614356614077565b50500190565b6000825161436e818460208701613576565b9190910192915050565b600080835461438681613da4565b6001828116801561439e57600181146143b357613e1e565b60ff1984168752821515830287019450613e1e565b8760005260208060002060005b858110156143d95781548a8201529084019082016143c0565b505050959091019695505050505050565b60e081528760e08201526000610100898b8285013760008a840182015264ffffffffff988916602084015260ff9790971660408301525062ffffff949094166060850152918516608084015290931660a082015261ffff90921660c0830152601f909201601f1916010191905056fea264697066735822122046f981906003edae373c87ac30d53e3c57d171096f977f425ec6ddc12965623564736f6c634300080f0033",
  "bytecodeSha1": "7a28820e94277fd678e43162d7914fc530a24d62",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.15+commit.e14f2714"
  },
  "contractName": "Governance",
  "coverageMap": {
    "branches": {
      "0": {
        "SafeCast.toInt128": {
          "185": [
            26367,
            26392,
            false
          ],
          "186": [
            26396,
            26421,
            true
          ]
        },
        "SafeCast.toInt256": {
          "184": [
            35409,
            35443,
            true
          ]
        }
      },
      "1": {
        "DoubleEndedQueue.at": {
          "181": [
            4843,
            4860,
            false
          ]
        },
        "DoubleEndedQueue.popFront": {
          "182": [
            3380,
            3392,
            false
          ]
        }
      },
      "11": {
        "Ownable.transferOwnership": {
          "183": [
            1990,
            2012,
            true
          ]
        }
      },
      "12": {},
      "2": {
        "Governance.areTasksAvailableToConfirm": {
          "176": [
            7100,
            7154,
            false
          ],
          "177": [
            7158,
            7180,
            false
          ],
          "178": [
            7184,
            7209,
            false
          ]
        },
        "Governance.claimRandomTaskForVerification": {
          "160": [
            15826,
            15880,
            false
          ],
          "161": [
            15884,
            15906,
            false
          ],
          "162": [
            15910,
            15935,
            false
          ]
        },
        "Governance.completeTask": {
          "138": [
            16715,
            16795,
            false
          ],
          "139": [
            16882,
            16926,
            false
          ],
          "140": [
            16930,
            16974,
            true
          ]
        },
        "Governance.createProposal": {
          "157": [
            23762,
            23779,
            true
          ],
          "158": [
            13512,
            13532,
            false
          ],
          "159": [
            13536,
            13558,
            true
          ]
        },
        "Governance.deleteTaskTypeByIPFSHash": {
          "179": [
            10981,
            11073,
            false
          ]
        },
        "Governance.getMyAvailableTaskTypes": {
          "147": [
            9188,
            9250,
            false
          ],
          "148": [
            9266,
            9310,
            false
          ],
          "149": [
            9314,
            9357,
            false
          ],
          "150": [
            9373,
            9404,
            false
          ],
          "151": [
            9734,
            9742,
            false
          ],
          "152": [
            10018,
            10080,
            false
          ],
          "153": [
            10096,
            10140,
            false
          ],
          "154": [
            10144,
            10187,
            false
          ],
          "155": [
            10203,
            10234,
            false
          ],
          "156": [
            10366,
            10382,
            false
          ]
        },
        "Governance.getTasksAssignedToWiz": {
          "132": [
            7784,
            7838,
            false
          ],
          "133": [
            7842,
            7868,
            false
          ],
          "134": [
            8015,
            8023,
            false
          ],
          "135": [
            8587,
            8641,
            false
          ],
          "136": [
            8645,
            8671,
            false
          ],
          "137": [
            8819,
            8832,
            false
          ]
        },
        "Governance.getVotes": {
          "180": [
            5317,
            5344,
            true
          ]
        },
        "Governance.getWinningVote": {
          "141": [
            5711,
            5738,
            true
          ],
          "142": [
            5778,
            5830,
            true
          ],
          "143": [
            6177,
            6227,
            false
          ],
          "144": [
            6352,
            6358,
            false
          ],
          "145": [
            6406,
            6457,
            false
          ],
          "146": [
            6523,
            6529,
            true
          ]
        },
        "Governance.isCallerOnBoard": {
          "131": [
            4496,
            4561,
            false
          ]
        },
        "Governance.isMyWizardOnBoard": {
          "129": [
            4762,
            4800,
            false
          ],
          "130": [
            4804,
            4856,
            false
          ]
        },
        "Governance.submitVerification": {
          "163": [
            19144,
            19184,
            false
          ],
          "164": [
            19188,
            19221,
            true
          ],
          "165": [
            19276,
            19294,
            true
          ],
          "166": [
            19463,
            19483,
            false
          ],
          "167": [
            19760,
            19781,
            true
          ],
          "168": [
            19896,
            19911,
            false
          ],
          "169": [
            20558,
            20562,
            true
          ],
          "170": [
            20849,
            20868,
            false
          ],
          "171": [
            21133,
            21159,
            false
          ],
          "172": [
            22304,
            22308,
            true
          ],
          "173": [
            22453,
            22467,
            false
          ],
          "174": [
            22725,
            22791,
            false
          ],
          "175": [
            22910,
            22914,
            false
          ]
        },
        "Governance.testHashing": {
          "128": [
            17938,
            17946,
            false
          ]
        }
      },
      "21": {},
      "22": {},
      "4": {},
      "5": {}
    },
    "statements": {
      "0": {
        "SafeCast.toInt128": {
          "127": [
            26359,
            26465
          ]
        },
        "SafeCast.toInt256": {
          "125": [
            35401,
            35488
          ],
          "126": [
            35498,
            35518
          ]
        }
      },
      "1": {
        "DoubleEndedQueue.at": {
          "106": [
            4839,
            4882
          ],
          "107": [
            4892,
            4915
          ]
        },
        "DoubleEndedQueue.empty": {
          "121": [
            5859,
            5892
          ]
        },
        "DoubleEndedQueue.length": {
          "9": [
            5633,
            5690
          ]
        },
        "DoubleEndedQueue.popFront": {
          "120": [
            3376,
            3408
          ],
          "122": [
            3460,
            3491
          ],
          "123": [
            3501,
            3531
          ],
          "124": [
            3565,
            3594
          ]
        },
        "DoubleEndedQueue.pushBack": {
          "29": [
            2207,
            2237
          ],
          "30": [
            2271,
            2297
          ]
        }
      },
      "11": {
        "Ownable._setOwner": {
          "118": [
            2193,
            2210
          ],
          "119": [
            2221,
            2266
          ]
        },
        "Ownable.owner": {
          "0": [
            1067,
            1080
          ]
        },
        "Ownable.renounceOwnership": {
          "26": [
            1717,
            1738
          ]
        },
        "Ownable.transferOwnership": {
          "91": [
            1982,
            2055
          ],
          "92": [
            2066,
            2085
          ]
        }
      },
      "12": {},
      "2": {
        "Governance._createTaskType": {
          "108": [
            14674,
            14690
          ],
          "109": [
            14771,
            14802
          ],
          "110": [
            14816,
            14842
          ],
          "111": [
            14856,
            14892
          ],
          "112": [
            14906,
            14952
          ],
          "113": [
            14966,
            15000
          ],
          "114": [
            15014,
            15054
          ],
          "115": [
            15068,
            15108
          ],
          "116": [
            15122,
            15166
          ],
          "117": [
            15207,
            15331
          ]
        },
        "Governance.areTasksAvailableToConfirm": {
          "93": [
            7010,
            7082
          ],
          "94": [
            7228,
            7239
          ],
          "95": [
            7277,
            7280
          ],
          "96": [
            7301,
            7313
          ]
        },
        "Governance.claimRandomTaskForVerification": {
          "64": [
            15706,
            15772
          ],
          "65": [
            15786,
            15808
          ],
          "66": [
            16114,
            16148
          ],
          "67": [
            16166,
            16247
          ],
          "68": [
            16265,
            16287
          ],
          "69": [
            16305,
            16361
          ],
          "70": [
            16399,
            16402
          ]
        },
        "Governance.completeTask": {
          "27": [
            16874,
            16998
          ],
          "28": [
            17188,
            17269
          ],
          "31": [
            17287,
            17322
          ],
          "32": [
            17340,
            17362
          ],
          "33": [
            17417,
            17488
          ],
          "34": [
            17506,
            17567
          ],
          "35": [
            17586,
            17663
          ],
          "36": [
            17681,
            17686
          ],
          "37": [
            17724,
            17727
          ]
        },
        "Governance.createProposal": {
          "57": [
            13504,
            13588
          ],
          "58": [
            13598,
            13617
          ],
          "59": [
            13717,
            13756
          ],
          "60": [
            13770,
            13809
          ],
          "61": [
            13823,
            13868
          ],
          "62": [
            13882,
            13913
          ],
          "63": [
            13924,
            14036
          ]
        },
        "Governance.createTaskType": {
          "23": [
            14288,
            14394
          ]
        },
        "Governance.deleteTaskTypeByIPFSHash": {
          "97": [
            11398,
            11428
          ],
          "98": [
            11446,
            11482
          ],
          "99": [
            11952,
            11988
          ],
          "100": [
            12006,
            12011
          ],
          "101": [
            12049,
            12052
          ]
        },
        "Governance.getMyAvailableTaskTypes": {
          "48": [
            9447,
            9454
          ],
          "49": [
            9662,
            9665
          ],
          "50": [
            9813,
            9829
          ],
          "51": [
            9843,
            9858
          ],
          "52": [
            10267,
            10307
          ],
          "53": [
            10335,
            10344
          ],
          "54": [
            10406,
            10411
          ],
          "55": [
            10467,
            10470
          ],
          "56": [
            10491,
            10505
          ]
        },
        "Governance.getTaskById": {
          "47": [
            5187,
            5208
          ]
        },
        "Governance.getTasksAssignedToWiz": {
          "10": [
            7664,
            7730
          ],
          "11": [
            7744,
            7766
          ],
          "12": [
            7897,
            7904
          ],
          "13": [
            7943,
            7946
          ],
          "14": [
            8218,
            8249
          ],
          "15": [
            8467,
            8533
          ],
          "16": [
            8547,
            8569
          ],
          "17": [
            8690,
            8715
          ],
          "18": [
            8733,
            8760
          ],
          "19": [
            8788,
            8797
          ],
          "20": [
            8834,
            8839
          ],
          "21": [
            8878,
            8881
          ],
          "22": [
            8902,
            8929
          ]
        },
        "Governance.getVotes": {
          "102": [
            5309,
            5365
          ],
          "103": [
            5522,
            5567
          ],
          "104": [
            5504,
            5507
          ],
          "105": [
            5587,
            5603
          ]
        },
        "Governance.getWinningVote": {
          "38": [
            5703,
            5759
          ],
          "39": [
            5769,
            5854
          ],
          "40": [
            6247,
            6297
          ],
          "41": [
            6315,
            6330
          ],
          "42": [
            6362,
            6369
          ],
          "43": [
            6476,
            6481
          ],
          "44": [
            6120,
            6123
          ],
          "45": [
            6515,
            6550
          ],
          "46": [
            6560,
            6578
          ]
        },
        "Governance.isCallerOnBoard": {
          "6": [
            4581,
            4592
          ],
          "7": [
            4630,
            4633
          ],
          "8": [
            4654,
            4666
          ]
        },
        "Governance.isMyWizardOnBoard": {
          "4": [
            4871,
            4882
          ],
          "5": [
            4902,
            4914
          ]
        },
        "Governance.setNFTAddress": {
          "25": [
            10689,
            10716
          ]
        },
        "Governance.submitVerification": {
          "71": [
            19136,
            19258
          ],
          "72": [
            19268,
            19295
          ],
          "73": [
            19556,
            19608
          ],
          "74": [
            19636,
            19639
          ],
          "75": [
            19800,
            19881
          ],
          "76": [
            20182,
            20235
          ],
          "77": [
            20249,
            20316
          ],
          "78": [
            20393,
            20414
          ],
          "79": [
            20550,
            20587
          ],
          "80": [
            20634,
            20682
          ],
          "81": [
            20696,
            20733
          ],
          "82": [
            20887,
            20918
          ],
          "83": [
            20936,
            20961
          ],
          "84": [
            20979,
            21002
          ],
          "85": [
            21322,
            21388
          ],
          "86": [
            21406,
            21462
          ],
          "87": [
            22126,
            22147
          ],
          "88": [
            22296,
            22333
          ],
          "89": [
            22992,
            23084
          ],
          "90": [
            23152,
            23155
          ]
        },
        "Governance.testHashing": {
          "1": [
            18019,
            18071
          ],
          "2": [
            18099,
            18102
          ],
          "3": [
            18200,
            18267
          ]
        }
      },
      "21": {},
      "22": {},
      "4": {},
      "5": {
        "Context._msgSender": {
          "24": [
            672,
            689
          ]
        }
      }
    }
  },
  "dependencies": [
    "Context",
    "OpenZeppelin/openzeppelin-contracts@4.7.3/DoubleEndedQueue",
    "Ownable",
    "ReentrancyGuard",
    "OpenZeppelin/openzeppelin-contracts@4.7.3/SafeCast",
    "Strings",
    "WizardTower",
    "Wizards"
  ],
  "deployedBytecode": "6080604052600436106101855760003560e01c80638d977672116100d1578063d374a2171161008a578063f2fde38b11610064578063f2fde38b146104fd578063f4739bd91461051d578063f713b7ed1461053d578063ff9810991461055d57600080fd5b8063d374a2171461047d578063e95d23471461049d578063f18c51d3146104dd57600080fd5b80638d9776721461038f5780638da5cb5b146103c557806390b293d8146103ed578063976217cd14610403578063b2bad54414610430578063beca3a161461045d57600080fd5b806361f9e9a81161013e578063715018a611610118578063715018a61461031a57806372e185ce1461032f578063826b8ebd1461034f5780638a6655d61461036f57600080fd5b806361f9e9a8146102945780636215597b146102b457806369d03738146102fa57600080fd5b8063013cf08b1461019157806309265ce6146101cb5780630f61d8bd146101ed57806310190ef11461021d5780633b47fed2146102515780634b50f16a1461026657600080fd5b3661018c57005b600080fd5b34801561019d57600080fd5b506101b16101ac36600461355d565b61058a565b6040516101c29594939291906135ce565b60405180910390f35b3480156101d757600080fd5b506101eb6101e63660046136d7565b610656565b005b3480156101f957600080fd5b5061020d61020836600461355d565b61079c565b60405190151581526020016101c2565b34801561022957600080fd5b5061023d61023836600461355d565b6108a7565b6040516101c2989796959493929190613736565b34801561025d57600080fd5b5061020d6109b1565b34801561027257600080fd5b506102866102813660046137b5565b610abf565b6040516101c29291906138a1565b3480156102a057600080fd5b506101eb6102af3660046139a9565b610f53565b3480156102c057600080fd5b506102ec6102cf366004613a46565b600460209081526000928352604080842090915290825290205481565b6040519081526020016101c2565b34801561030657600080fd5b506101eb610315366004613a7d565b610fbd565b34801561032657600080fd5b506101eb611009565b34801561033b57600080fd5b506101eb61034a366004613b09565b61103f565b34801561035b57600080fd5b506102ec61036a36600461355d565b6114b5565b34801561037b57600080fd5b506101eb61038a366004613b5f565b6116d8565b34801561039b57600080fd5b506103af6103aa36600461355d565b611711565b6040516101c29a99989796959493929190613b8b565b3480156103d157600080fd5b506001546040516001600160a01b0390911681526020016101c2565b3480156103f957600080fd5b506102ec600b5481565b34801561040f57600080fd5b5061042361041e36600461355d565b611813565b6040516101c29190613c0c565b34801561043c57600080fd5b5061045061044b3660046137b5565b611955565b6040516101c29190613c1f565b34801561046957600080fd5b506101eb610478366004613c81565b611d1b565b34801561048957600080fd5b506101eb61049836600461355d565b611e7b565b3480156104a957600080fd5b506006546104c390600f81810b91600160801b9004900b82565b60408051600f93840b81529190920b6020820152016101c2565b3480156104e957600080fd5b506101eb6104f8366004613cd1565b6121b2565b34801561050957600080fd5b506101eb610518366004613a7d565b612bcf565b34801561052957600080fd5b5061020d61053836600461355d565b612c6a565b34801561054957600080fd5b506101eb610558366004613d20565b612e3a565b34801561056957600080fd5b5061057d61057836600461355d565b612fd7565b6040516101c29190613d5c565b6008602052600090815260409020805481906105a590613da4565b80601f01602080910402602001604051908101604052809291908181526020018280546105d190613da4565b801561061e5780601f106105f35761010080835404028352916020019161061e565b820191906000526020600020905b81548152906001019060200180831161060157829003601f168201915b505050506001830154600390930154919261ffff169164ffffffffff8082169250650100000000008204811691600160501b90041685565b60008260008151811061066b5761066b613dde565b602002602001015160405160200161068591815260200190565b604051602081830303815290604052905081156107115760005b835181101561070f578381815181106106ba576106ba613dde565b60200260200101516040516020016106d491815260200190565b604051602081830303815290604052805190602001208482815181106106fc576106fc613dde565b602090810291909101015260010161069f565b505b6000836040516020016107249190613df4565b6040516020818303038152906040528051906020012090507f637ce8d069e382e64ef71cf191623b88c7e307ce252e908e7f2babbad0cb81ea818683148660008151811061077457610774613dde565b60200260200101518560405161078d9493929190613e2a565b60405180910390a15050505050565b6002546040516331a9108f60e11b81526004810183905260009133916001600160a01b0390911690636352211e90602401602060405180830381865afa1580156107ea573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061080e9190613e5b565b6001600160a01b03161480156108925750600e546003546040516301245c6b60e21b8152600481018590526001600160a01b039091169063049171ac90602401602060405180830381865afa15801561086b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061088f9190613e78565b11155b1561089f57506001919050565b506000919050565b600581815481106108b757600080fd5b90600052602060002090600302016000915090508060010180546108da90613da4565b80601f016020809104026020016040519081016040528092919081815260200182805461090690613da4565b80156109535780601f1061092857610100808354040283529160200191610953565b820191906000526020600020905b81548152906001019060200180831161093657829003601f168201915b5050506002909301549192505060ff8082169164ffffffffff610100820481169266010000000000008304169162ffffff600160381b82041691600160501b8204811691600160781b81049091169061ffff600160a01b9091041688565b600060015b600e548111610ab7576002546003546040516301038d3760e61b81526004810184905233926001600160a01b0390811692636352211e929116906340e34dc090602401602060405180830381865afa158015610a16573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a3a9190613e78565b6040518263ffffffff1660e01b8152600401610a5891815260200190565b602060405180830381865afa158015610a75573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a999190613e5b565b6001600160a01b031603610aaf57600191505090565b6001016109b6565b506000905090565b6060806000610add600654600f81810b600160801b909204900b0390565b9050610ae76134bf565b600080805b84811015610c6f57610aff600682613101565b6000818152600a602052604090819020815161014081019092528054929550909182908290610b2d90613da4565b80601f0160208091040260200160405190810160405280929190818152602001828054610b5990613da4565b8015610ba65780601f10610b7b57610100808354040283529160200191610ba6565b820191906000526020600020905b815481529060010190602001808311610b8957829003601f168201915b5050509183525050600182015464ffffffffff9081166020830152600283015460408301526003830154606083015260049092015460ff8116608083015261010080820462ffffff1660a0840152600160201b82046001600160501b031660c0840152600160701b820461ffff90811660e0850152600160801b83041690830152600160901b9004821661012091820152820151919550429116118015610c5b57508764ffffffffff168460e0015161ffff16145b15610c67578160010191505b600101610aec565b5080600003610cdc57604080516001808252818301909252600091816020015b610c976134bf565b815260200190600190039081610c8f575050604080516001808252818301909252919250600091906020808301908036833750939b919a509098505050505050505050565b600080826001600160401b03811115610cf757610cf7613612565b604051908082528060200260200182016040528015610d3057816020015b610d1d6134bf565b815260200190600190039081610d155790505b5090506000836001600160401b03811115610d4d57610d4d613612565b604051908082528060200260200182016040528015610d76578160200160208202803683370190505b50905060005b87811015610f4357610d8f600682613101565b6000818152600a602052604090819020815161014081019092528054929850909182908290610dbd90613da4565b80601f0160208091040260200160405190810160405280929190818152602001828054610de990613da4565b8015610e365780601f10610e0b57610100808354040283529160200191610e36565b820191906000526020600020905b815481529060010190602001808311610e1957829003601f168201915b5050509183525050600182015464ffffffffff9081166020830152600283015460408301526003830154606083015260049092015460ff8116608083015261010080820462ffffff1660a0840152600160201b82046001600160501b031660c0840152600160701b820461ffff90811660e0850152600160801b83041690830152600160901b9004821661012091820152820151919850429116118015610eeb57508a64ffffffffff168760e0015161ffff16145b15610f3b5786838581518110610f0357610f03613dde565b602002602001018190525085828581518110610f2157610f21613dde565b602002602001018181525050836001019350848411610f43575b600101610d7c565b5090999098509650505050505050565b610f5b6109b1565b610fa35760405162461bcd60e51b8152602060048201526014602482015273135d5cdd081899481bdb881d1a1948189bd85c9960621b60448201526064015b60405180910390fd5b610fb4878760008888888888613172565b50505050505050565b6001546001600160a01b03163314610fe75760405162461bcd60e51b8152600401610f9a90613e91565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b6001546001600160a01b031633146110335760405162461bcd60e51b8152600401610f9a90613e91565b61103d60006132f1565b565b60005b6005548110156114af578360405160200161105d9190613ec6565b604051602081830303815290604052805190602001206005828154811061108657611086613dde565b90600052602060002090600302016001016040516020016110a79190613f56565b60405160208183030381529060405280519060200120036114a75742600582815481106110d6576110d6613dde565b6000918252602090912060039091020160020154600160501b900464ffffffffff161180159061113a57506005818154811061111457611114613dde565b6000918252602090912060039091020160020154600160781b900464ffffffffff164211155b61117c5760405162461bcd60e51b815260206004820152601360248201527213dd5d1cda5919481d1a5b59481c195c9a5bd9606a1b6044820152606401610f9a565b60006040518061014001604052808681526020018464ffffffffff1681526020018581526020016000801b8152602001600584815481106111bf576111bf613dde565b906000526020600020906003020160020160069054906101000a900460ff1660ff168152602001600584815481106111f9576111f9613dde565b6000918252602080832060039290920290910160020154600160381b900462ffffff1683528281018290526040808401839052606084018390526080909301829052600b5460068054600160801b90819004600f0b8086526007855286862084905582546001600160801b039081166001909201169091021790558252600a90522081519192508291819061128e9082613fb8565b5060208201516001828101805464ffffffffff191664ffffffffff938416179055604084015160028401556060840151600384015560808401516004909301805460a086015160c087015160e0880151610100808a0151610120909a015160ff90991663ffffffff199095169490941762ffffff90931690930291909117640100000000600160801b031916600160201b6001600160501b039092169190910261ffff60701b191617600160701b61ffff928316021766ffffffffffffff60801b1916600160801b919096160264ffffffffff60901b191694909417600160901b939092169290920217909155600b805460009061138d90849061408d565b909155506113a09050426201518061408d565b600583815481106113b3576113b3613dde565b6000918252602080832064ffffffffff881684526003909202909101905260409020556005805460019190849081106113ee576113ee613dde565b906000526020600020906003020160020160149054906101000a900461ffff1661141891906140a5565b6005838154811061142b5761142b613dde565b906000526020600020906003020160020160146101000a81548161ffff021916908361ffff1602179055507fbcc1ea15519f3acfb49e91de851e553b2c024b9ab85cee8ffd8fe4e4e0a7876d836001600b5461148791906140c8565b874260405161149994939291906140df565b60405180910390a1506114af565b600101611042565b50505050565b600060095482106114fb5760405162461bcd60e51b815260206004820152601060248201526f1b9bc81cdd58da081c1c9bdc1bdcd85b60821b6044820152606401610f9a565b600082815260086020526040902060030154600160501b900464ffffffffff16421161155f5760405162461bcd60e51b8152602060048201526013602482015272766f74696e67207374696c6c2061637469766560681b6044820152606401610f9a565b6000806000805b60008681526008602052604090206001015461ffff1681101561168d57826008600088815260200190815260200160002060020182600881106115ab576115ab613dde565b601091828204019190066002029054906101000a900461ffff1661ffff16111561162b576008600087815260200190815260200160002060020181600881106115f6576115f6613dde565b601091828204019190066002029054906101000a900461ffff1661ffff1692508093508160010361162657600091505b61167b565b8260086000888152602001908152602001600020600201826008811061165357611653613dde565b601091828204019190066002029054906101000a900461ffff1661ffff160361167b57600191505b8061168581614116565b915050611566565b5080156116cf5760405162461bcd60e51b815260206004820152601060248201526f3a3432b932903bb0b99030903a34b29760811b6044820152606401610f9a565b50909392505050565b60405162461bcd60e51b815260206004820152600e60248201526d26bab9ba1031329036b2b6b132b960911b6044820152606401610f9a565b600a6020526000908152604090208054819061172c90613da4565b80601f016020809104026020016040519081016040528092919081815260200182805461175890613da4565b80156117a55780601f1061177a576101008083540402835291602001916117a5565b820191906000526020600020905b81548152906001019060200180831161178857829003601f168201915b505050600184015460028501546003860154600490960154949564ffffffffff92831695919450925060ff81169162ffffff610100830416916001600160501b03600160201b8204169161ffff600160701b8304811692600160801b810490911691600160901b909104168a565b61181b6134bf565b6000828152600a6020526040908190208151610140810190925280548290829061184490613da4565b80601f016020809104026020016040519081016040528092919081815260200182805461187090613da4565b80156118bd5780601f10611892576101008083540402835291602001916118bd565b820191906000526020600020905b8154815290600101906020018083116118a057829003601f168201915b5050509183525050600182015464ffffffffff9081166020830152600283015460408301526003830154606083015260049092015460ff8116608083015261010080820462ffffff1660a0840152600160201b82046001600160501b031660c0840152600160701b820461ffff90811660e0850152600160801b83041690830152600160901b90049091166101209091015292915050565b60606000805b600554811015611a6d57426005828154811061197957611979613dde565b6000918252602080832064ffffffffff891684526003909202909101905260409020541080156119dd575042600582815481106119b8576119b8613dde565b6000918252602090912060039091020160020154600160501b900464ffffffffff1611155b8015611a1c575042600582815481106119f8576119f8613dde565b6000918252602090912060039091020160020154600160781b900464ffffffffff16115b8015611a595750600160058281548110611a3857611a38613dde565b6000918252602090912060039091020160020154600160a01b900461ffff16115b15611a65578160010191505b60010161195b565b5080600003611ad957604080516001808252818301909252600091816020015b6060815260200190600190039081611a8d5790505090506040518060200160405280600081525081600081518110611ac757611ac7613dde565b60209081029190910101529392505050565b6000816001600160401b03811115611af357611af3613612565b604051908082528060200260200182016040528015611b2657816020015b6060815260200190600190039081611b115790505b5090506000805b600554811015611d11574260058281548110611b4b57611b4b613dde565b6000918252602080832064ffffffffff8b168452600390920290910190526040902054108015611baf57504260058281548110611b8a57611b8a613dde565b6000918252602090912060039091020160020154600160501b900464ffffffffff1611155b8015611bee57504260058281548110611bca57611bca613dde565b6000918252602090912060039091020160020154600160781b900464ffffffffff16115b8015611c2b5750600160058281548110611c0a57611c0a613dde565b6000918252602090912060039091020160020154600160a01b900461ffff16115b15611d095760058181548110611c4357611c43613dde565b90600052602060002090600302016001018054611c5f90613da4565b80601f0160208091040260200160405190810160405280929190818152602001828054611c8b90613da4565b8015611cd85780601f10611cad57610100808354040283529160200191611cd8565b820191906000526020600020905b815481529060010190602001808311611cbb57829003601f168201915b5050505050838381518110611cef57611cef613dde565b602002602001018190525081600101915083821015611d11575b600101611b2d565b5090949350505050565b611d236109b1565b611d665760405162461bcd60e51b8152602060048201526014602482015273135d5cdd081899481bdb881d1a1948189bd85c9960621b6044820152606401610f9a565b60018561ffff16118015611d7f57506101018561ffff16105b611dcb5760405162461bcd60e51b815260206004820152601960248201527f696e76616c6964206e756d626572206f66206f7074696f6e73000000000000006044820152606401610f9a565b600160096000828254611dde919061408d565b909155505060095460009081526008602052604090206003810180546effffffffffffffffffff000000000019166501000000000064ffffffffff8781169190910264ffffffffff60501b191691909117600160501b9186169190910217905560018101805461ffff191661ffff881617905580611e5d888a8361412f565b50611e718888600954600089898989613172565b5050505050505050565b6000611e96600654600f81810b600160801b909204900b0390565b9050611ea06134bf565b6000805b838110156121ab57611eb7600682613101565b6000818152600a602052604090819020815161014081019092528054929450909182908290611ee590613da4565b80601f0160208091040260200160405190810160405280929190818152602001828054611f1190613da4565b8015611f5e5780601f10611f3357610100808354040283529160200191611f5e565b820191906000526020600020905b815481529060010190602001808311611f4157829003601f168201915b5050509183525050600182015464ffffffffff9081166020830152600283015460408301526003830154606083015260049092015460ff8116608083015261010080820462ffffff1660a0840152600160201b82046001600160501b031660c0840152600160701b820461ffff90811660e0850152600160801b83041690830152600160901b9004821661012091820152820151919450429116108015612010575084836020015164ffffffffff1614155b801561202557508483610100015161ffff1614155b156121a35761ffff851660e0840152600c54612041904261408d565b64ffffffffff166101208401526000828152600a602052604090208351849190819061206d9082613fb8565b5060208281015160018301805464ffffffffff191664ffffffffff92831617905560408085015160028501556060850151600385015560808501516004909401805460a087015160c088015160e0890151610100808b0151610120909b015160ff909a1663ffffffff199095169490941762ffffff90931690930291909117640100000000600160801b031916600160201b6001600160501b039092169190910261ffff60701b191617600160701b61ffff928316021766ffffffffffffff60801b1916600160801b919097160264ffffffffff60901b191695909517600160901b9490921693909302179092556000848152600a9092529081902090517ff20a22b1aa6d8ba4bf99c845fb1f02f4879ba83155bde0f82f49cb58675df2689161219a91889186916141ee565b60405180910390a15b600101611ea4565b5050505050565b6002546040516331a9108f60e11b81526004810185905233916001600160a01b031690636352211e90602401602060405180830381865afa1580156121fb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061221f9190613e5b565b6001600160a01b031614801561225057506000828152600a6020526040902060040154600160701b900461ffff1683145b61229c5760405162461bcd60e51b815260206004820181905260248201527f4d757374206265206f776e6572206f662061737369676e65642077697a6172646044820152606401610f9a565b60008151116122aa57600080fd5b6000828152600a6020526040808220815161014081019092528054829082906122d290613da4565b80601f01602080910402602001604051908101604052809291908181526020018280546122fe90613da4565b801561234b5780601f106123205761010080835404028352916020019161234b565b820191906000526020600020905b81548152906001019060200180831161232e57829003601f168201915b505050918352505060018281015464ffffffffff9081166020840152600284015460408401526003840154606084015260049093015460ff8116608084015261010080820462ffffff1660a0850152600160201b82046001600160501b031660c0850152600160701b820461ffff90811660e0860152600160801b8304811682860152600160901b909204909416610120909301929092529183015192935060009216156124685760005b84518110156124665784818151811061241157612411613dde565b602002602001015160405160200161242b91815260200190565b6040516020818303038152906040528051906020012085828151811061245357612453613dde565b60209081029190910101526001016123f6565b505b60008460405160200161247b9190613df4565b6040516020818303038152906040528051906020012090506000818560400151146124a75760006124aa565b60015b602086810151604080518c815264ffffffffff909216928201929092529081018990526060810184905260ff9190911660018114608083015291507fe3f0e138f100deaf328ba1def71c39dade8cd971ba0074d935ee648e54532fae9060a00160405180910390a1806001036127cd57600060028660c0015161252d91906142b9565b60025460e08801516040516331a9108f60e11b815261ffff90911660048201526001600160501b039290921692506000916001600160a01b0390911690636352211e90602401602060405180830381865afa158015612590573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125b49190613e5b565b600254602089015160a08a0151604051638ad4d6a560e01b815264ffffffffff909216600483015262ffffff1660248201529192506001600160a01b031690638ad4d6a590604401600060405180830381600087803b15801561261657600080fd5b505af115801561262a573d6000803e3d6000fd5b505060025460e08a0151600d54604051638ad4d6a560e01b815261ffff909216600483015260248201526001600160a01b039091169250638ad4d6a591506044015b600060405180830381600087803b15801561268657600080fd5b505af115801561269a573d6000803e3d6000fd5b50505060008a8152600a6020526040812091506126b78282613513565b5060018101805464ffffffffff1916905560006002820181905560038201819055600490910180546001600160b81b031916905560405181906001600160a01b0384169085908381818185875af1925050503d8060008114612735576040519150601f19603f3d011682016040523d82523d6000602084013e61273a565b606091505b50915091508161275c5760405162461bcd60e51b8152600401610f9a906142ed565b60405133908590600081818185875af1925050503d806000811461279c576040519150601f19603f3d011682016040523d82523d6000602084013e6127a1565b606091505b509092509050816127c45760405162461bcd60e51b8152600401610f9a906142ed565b50505050612b38565b84610100015161ffff166000036128ff5761ffff8816610100860152606085018290526000878152600a602052604090208551869190819061280f9082613fb8565b50602082015160018201805464ffffffffff191664ffffffffff928316179055604083015160028301556060830151600383015560808301516004909201805460a085015160c086015160e0870151610100808901516101209099015160ff90981663ffffffff199095169490941762ffffff90931690930291909117640100000000600160801b031916600160201b6001600160501b039092169190910261ffff60701b191617600160701b61ffff928316021766ffffffffffffff60801b1916600160801b919095160264ffffffffff60901b191693909317600160901b9290911691909102179055600092505b81856060015103612a5257600060028660c0015161291d91906142b9565b6002546101008801516040516331a9108f60e11b815261ffff90911660048201526001600160501b039290921692506000916001600160a01b0390911690636352211e90602401602060405180830381865afa158015612981573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906129a59190613e5b565b600254610100890151600d54604051638ad4d6a560e01b815261ffff909216600483015260248201529192506001600160a01b031690638ad4d6a590604401600060405180830381600087803b1580156129fe57600080fd5b505af1158015612a12573d6000803e3d6000fd5b5050600254600d54604051638ad4d6a560e01b8152600481018f905260248101919091526001600160a01b039091169250638ad4d6a5915060440161266c565b60c08501516000888152600a602052604081206001600160501b039092169190612a7c8282613513565b5060018101805464ffffffffff1916905560006002820181905560038201819055600490910180546001600160b81b031916905580612ac36001546001600160a01b031690565b6001600160a01b03168360405160006040518083038185875af1925050503d8060008114612b0d576040519150601f19603f3d011682016040523d82523d6000602084013e612b12565b606091505b509150915081612b345760405162461bcd60e51b8152600401610f9a906142ed565b5050505b8215611e71576000612b59600654600f81810b600160801b909204900b0390565b905060005b81811015612bc35788612b72600683613101565b03612bbb576000612b836006613343565b90508115612bb9576006548190600790600090612ba4908690600f0b61431b565b600f0b81526020810191909152604001600020555b505b600101612b5e565b50505050505050505050565b6001546001600160a01b03163314612bf95760405162461bcd60e51b8152600401610f9a90613e91565b6001600160a01b038116612c5e5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610f9a565b612c67816132f1565b50565b600080612c86600654600f81810b600160801b909204900b0390565b9050612c906134bf565b60005b82811015612e2f57600a6000612caa600684613101565b60001c815260200190815260200160002060405180610140016040529081600082018054612cd790613da4565b80601f0160208091040260200160405190810160405280929190818152602001828054612d0390613da4565b8015612d505780601f10612d2557610100808354040283529160200191612d50565b820191906000526020600020905b815481529060010190602001808311612d3357829003601f168201915b5050509183525050600182015464ffffffffff9081166020830152600283015460408301526003830154606083015260049092015460ff8116608083015261010080820462ffffff1660a0840152600160201b82046001600160501b031660c0840152600160701b820461ffff90811660e0850152600160801b83041690830152600160901b9004821661012091820152820151919350429116108015612e02575084826020015164ffffffffff1614155b8015612e1757508482610100015161ffff1614155b15612e2757506001949350505050565b600101612c93565b506000949350505050565b60005b600554811015612fd35781604051602001612e58919061435c565b6040516020818303038152906040528051906020012060058281548110612e8157612e81613dde565b9060005260206000209060030201600101604051602001612ea29190614378565b6040516020818303038152906040528051906020012003612fcb57600060058281548110612ed257612ed2613dde565b90600052602060002090600302019050600060056001600580549050612ef891906140c8565b81548110612f0857612f08613dde565b9060005260206000209060030201905080915060056001600580549050612f2f91906140c8565b81548110612f3f57612f3f613dde565b90600052602060002090600302016000600182016000612f5f9190613513565b5060020180546001600160b01b031916905560058054612f81906001906140c8565b81548110612f9157612f91613dde565b90600052602060002090600302016000600182016000612fb19190613513565b5060020180546001600160b01b031916905550612fd39050565b600101612e3d565b5050565b6060600954821061301d5760405162461bcd60e51b815260206004820152601060248201526f1b9bc81cdd58da081c1c9bdc1bdcd85b60821b6044820152606401610f9a565b60008281526008602052604081206001015461ffff166001600160401b0381111561304a5761304a613612565b604051908082528060200260200182016040528015613073578160200160208202803683370190505b50905060005b81518110156130fa576008600085815260200190815260200160002060020181600881106130a9576130a9613dde565b601091828204019190066002029054906101000a900461ffff168282815181106130d5576130d5613dde565b61ffff90921660209283029190910190910152806130f281614116565b915050613079565b5092915050565b600080613124613110846133c2565b855461311f9190600f0b61431b565b613430565b8454909150600160801b9004600f90810b9082900b1261315757604051632d0483c560e21b815260040160405180910390fd5b600f0b60009081526001939093016020525050604090205490565b600580546001810180835560008381529192908390811061319557613195613dde565b600091825260209091206003909102019050600181016131b68a8c8361412f565b5060008160020160006101000a81548160ff021916908315150217905550878160020160016101000a81548164ffffffffff021916908364ffffffffff160217905550868160020160066101000a81548160ff021916908360ff160217905550858160020160076101000a81548162ffffff021916908362ffffff1602179055508481600201600a6101000a81548164ffffffffff021916908364ffffffffff1602179055508381600201600f6101000a81548164ffffffffff021916908364ffffffffff160217905550828160020160146101000a81548161ffff021916908361ffff1602179055507f2810025950962e3cd71fd98c2dc111ffbdb2a129b36771df8d36a7de2fe3e4e08a8a8a8a8a8a8a8a6040516132dd9897969594939291906143ea565b60405180910390a150505050505050505050565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600061335e8254600f81810b600160801b909204900b131590565b1561337c57604051631ed9509560e11b815260040160405180910390fd5b508054600f0b6000818152600180840160205260408220805492905583546fffffffffffffffffffffffffffffffff191692016001600160801b03169190911790915590565b60006001600160ff1b0382111561342c5760405162461bcd60e51b815260206004820152602860248201527f53616665436173743a2076616c756520646f65736e27742066697420696e2061604482015267371034b73a191a9b60c11b6064820152608401610f9a565b5090565b60006f7fffffffffffffffffffffffffffffff19821280159061346357506f7fffffffffffffffffffffffffffffff8213155b61342c5760405162461bcd60e51b815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e20316044820152663238206269747360c81b6064820152608401610f9a565b6040805161014081018252606080825260006020830181905292820183905281018290526080810182905260a0810182905260c0810182905260e08101829052610100810182905261012081019190915290565b50805461351f90613da4565b6000825580601f1061352f575050565b601f016020900490600052602060002090810190612c6791905b8082111561342c5760008155600101613549565b60006020828403121561356f57600080fd5b5035919050565b60005b83811015613591578181015183820152602001613579565b838111156114af5750506000910152565b600081518084526135ba816020860160208601613576565b601f01601f19169290920160200192915050565b60a0815260006135e160a08301886135a2565b61ffff9690961660208301525064ffffffffff93841660408201529183166060830152909116608090910152919050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b038111828210171561365057613650613612565b604052919050565b600082601f83011261366957600080fd5b813560206001600160401b0382111561368457613684613612565b8160051b613693828201613628565b92835284810182019282810190878511156136ad57600080fd5b83870192505b848310156136cc578235825291830191908301906136b3565b979650505050505050565b6000806000606084860312156136ec57600080fd5b8335925060208401356001600160401b0381111561370957600080fd5b61371586828701613658565b9250506040840135801515811461372b57600080fd5b809150509250925092565b600061010080835261374a8184018c6135a2565b9915156020840152505064ffffffffff968716604082015260ff95909516606086015262ffffff93909316608085015290841660a084015290921660c082015261ffff90911660e090910152919050565b803564ffffffffff811681146137b057600080fd5b919050565b6000602082840312156137c757600080fd5b6137d08261379b565b9392505050565b600061014082518185526137ed828601826135a2565b9150506020830151613808602086018264ffffffffff169052565b5060408301516040850152606083015160608501526080830151613831608086018260ff169052565b5060a083015161384860a086018262ffffff169052565b5060c083015161386360c08601826001600160501b03169052565b5060e083015161387960e086018261ffff169052565b506101008381015161ffff16908501526101208084015164ffffffffff811682870152611d11565b6000604082016040835280855180835260608501915060608160051b8601019250602080880160005b838110156138f857605f198887030185526138e68683516137d7565b955093820193908201906001016138ca565b50508584038187015286518085528782019482019350915060005b8281101561392f57845184529381019392810192600101613913565b5091979650505050505050565b60008083601f84011261394e57600080fd5b5081356001600160401b0381111561396557600080fd5b60208301915083602082850101111561397d57600080fd5b9250929050565b803562ffffff811681146137b057600080fd5b803561ffff811681146137b057600080fd5b600080600080600080600060c0888a0312156139c457600080fd5b87356001600160401b038111156139da57600080fd5b6139e68a828b0161393c565b909850965050602088013560ff81168114613a0057600080fd5b9450613a0e60408901613984565b9350613a1c6060890161379b565b9250613a2a6080890161379b565b9150613a3860a08901613997565b905092959891949750929550565b60008060408385031215613a5957600080fd5b50508035926020909101359150565b6001600160a01b0381168114612c6757600080fd5b600060208284031215613a8f57600080fd5b81356137d081613a68565b600082601f830112613aab57600080fd5b81356001600160401b03811115613ac457613ac4613612565b613ad7601f8201601f1916602001613628565b818152846020838601011115613aec57600080fd5b816020850160208301376000918101602001919091529392505050565b600080600060608486031215613b1e57600080fd5b83356001600160401b03811115613b3457600080fd5b613b4086828701613a9a565b93505060208401359150613b566040850161379b565b90509250925092565b600080600060608486031215613b7457600080fd5b505081359360208301359350604090920135919050565b6000610140808352613b9f8184018e6135a2565b64ffffffffff9c8d166020850152604084019b909b525050606081019790975260ff95909516608087015262ffffff9390931660a08601526001600160501b039190911660c085015261ffff90811660e08501521661010083015290921661012090920191909152919050565b6020815260006137d060208301846137d7565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015613c7457603f19888603018452613c628583516135a2565b94509285019290850190600101613c46565b5092979650505050505050565b600080600080600080600060c0888a031215613c9c57600080fd5b87356001600160401b03811115613cb257600080fd5b613cbe8a828b0161393c565b9098509650613a00905060208901613997565b600080600060608486031215613ce657600080fd5b833592506020840135915060408401356001600160401b03811115613d0a57600080fd5b613d1686828701613658565b9150509250925092565b600060208284031215613d3257600080fd5b81356001600160401b03811115613d4857600080fd5b613d5484828501613a9a565b949350505050565b6020808252825182820181905260009190848201906040850190845b81811015613d9857835161ffff1683529284019291840191600101613d78565b50909695505050505050565b600181811c90821680613db857607f821691505b602082108103613dd857634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b815160009082906020808601845b83811015613e1e57815185529382019390820190600101613e02565b50929695505050505050565b8481528315156020820152826040820152608060608201526000613e5160808301846135a2565b9695505050505050565b600060208284031215613e6d57600080fd5b81516137d081613a68565b600060208284031215613e8a57600080fd5b5051919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020815260006137d060208301846135a2565b60008154613ee681613da4565b808552602060018381168015613f035760018114613f1d57613f4b565b60ff1985168884015283151560051b880183019550613f4b565b866000528260002060005b85811015613f435781548a8201860152908301908401613f28565b890184019650505b505050505092915050565b6020815260006137d06020830184613ed9565b601f821115613fb357600081815260208120601f850160051c81016020861015613f905750805b601f850160051c820191505b81811015613faf57828155600101613f9c565b5050505b505050565b81516001600160401b03811115613fd157613fd1613612565b613fe581613fdf8454613da4565b84613f69565b602080601f83116001811461401a57600084156140025750858301515b600019600386901b1c1916600185901b178555613faf565b600085815260208120601f198616915b828110156140495788860151825594840194600190910190840161402a565b50858210156140675787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052601160045260246000fd5b600082198211156140a0576140a0614077565b500190565b600061ffff838116908316818110156140c0576140c0614077565b039392505050565b6000828210156140da576140da614077565b500390565b64ffffffffff8516815283602082015260806040820152600061410560808301856135a2565b905082606083015295945050505050565b60006001820161412857614128614077565b5060010190565b6001600160401b0383111561414657614146613612565b61415a836141548354613da4565b83613f69565b6000601f84116001811461418e57600085156141765750838201355b600019600387901b1c1916600186901b1783556121ab565b600083815260209020601f19861690835b828110156141bf578685013582556020948501946001909201910161419f565b50868210156141dc5760001960f88860031b161c19848701351681555b505060018560011b0183555050505050565b8381528260208201526060604082015260006101408060608401526142176101a0840185613ed9565b600185015464ffffffffff1664ffffffffff8116608086015250600285015460a0850152600385015460c0850152600485015460ff811660e0860152600881901c62ffffff16610100860152602081901c6001600160501b031661012086015261ffff607082901c81168487015261429b6101608701828460801c1661ffff169052565b50609081901c64ffffffffff16610180860152509695505050505050565b60006001600160501b03808416806142e157634e487b7160e01b600052601260045260246000fd5b92169190910492915050565b6020808252601490820152732330b4b632b2103a379039b2b7321022ba3432b960611b604082015260600190565b600080821280156001600160ff1b038490038513161561433d5761433d614077565b600160ff1b839003841281161561435657614356614077565b50500190565b6000825161436e818460208701613576565b9190910192915050565b600080835461438681613da4565b6001828116801561439e57600181146143b357613e1e565b60ff1984168752821515830287019450613e1e565b8760005260208060002060005b858110156143d95781548a8201529084019082016143c0565b505050959091019695505050505050565b60e081528760e08201526000610100898b8285013760008a840182015264ffffffffff988916602084015260ff9790971660408301525062ffffff949094166060850152918516608084015290931660a082015261ffff90921660c0830152601f909201601f1916010191905056fea264697066735822122046f981906003edae373c87ac30d53e3c57d171096f977f425ec6ddc12965623564736f6c634300080f0033",
  "deployedSourceMap": "771:23127:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2759:46;;;;;;;;;;-1:-1:-1;2759:46:2;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;17771:503;;;;;;;;;;-1:-1:-1;17771:503:2;;;;;:::i;:::-;;:::i;:::-;;4679:242;;;;;;;;;;-1:-1:-1;4679:242:2;;;;;:::i;:::-;;:::i;:::-;;;3372:14:23;;3365:22;3347:41;;3335:2;3320:18;4679:242:2;3207:187:23;2445:27:2;;;;;;;;;;-1:-1:-1;2445:27:2;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;:::i;4380:293::-;;;;;;;;;;;;;:::i;7327:1609::-;;;;;;;;;;-1:-1:-1;7327:1609:2;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;14081:320::-;;;;;;;;;;-1:-1:-1;14081:320:2;;;;;:::i;:::-;;:::i;1014:75::-;;;;;;;;;;-1:-1:-1;1014:75:2;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;9375:25:23;;;9363:2;9348:18;1014:75:2;9229:177:23;10622:101:2;;;;;;;;;;-1:-1:-1;10622:101:2;;;;;:::i;:::-;;:::i;1652:94:11:-;;;;;;;;;;;;;:::i;16479:1286:2:-;;;;;;;;;;-1:-1:-1;16479:1286:2;;;;;:::i;:::-;;:::i;5616:969::-;;;;;;;;;;-1:-1:-1;5616:969:2;;;;;:::i;:::-;;:::i;12602:664::-;;;;;;;;;;-1:-1:-1;12602:664:2;;;;;:::i;:::-;;:::i;2840:38::-;;;;;;;;;;-1:-1:-1;2840:38:2;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;:::i;1001:87:11:-;;;;;;;;;;-1:-1:-1;1074:6:11;;1001:87;;-1:-1:-1;;;;;1074:6:11;;;12292:51:23;;12280:2;12265:18;1001:87:11;12146:203:23;2884:34:2;;;;;;;;;;;;;;;;5103:112;;;;;;;;;;-1:-1:-1;5103:112:2;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;9012:1500::-;;;;;;;;;;-1:-1:-1;9012:1500:2;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;13312:762::-;;;;;;;;;;-1:-1:-1;13312:762:2;;;;;:::i;:::-;;:::i;15345:1128::-;;;;;;;;;;-1:-1:-1;15345:1128:2;;;;;:::i;:::-;;:::i;2582:61::-;;;;;;;;;;-1:-1:-1;2582:61:2;;;;;;;;;-1:-1:-1;;;2582:61:2;;;;;;;;;;14390:2:23;14379:22;;;14361:41;;14438:22;;;;14433:2;14418:18;;14411:50;14334:18;2582:61:2;14191:276:23;18980:4208:2;;;;;;;;;;-1:-1:-1;18980:4208:2;;;;;:::i;:::-;;:::i;1901:192:11:-;;;;;;;;;;-1:-1:-1;1901:192:11;;;;;:::i;:::-;;:::i;6632:688:2:-;;;;;;;;;;-1:-1:-1;6632:688:2;;;;;:::i;:::-;;:::i;10849:1221::-;;;;;;;;;;-1:-1:-1;10849:1221:2;;;;;:::i;:::-;;:::i;5221:389::-;;;;;;;;;;-1:-1:-1;5221:389:2;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2759:46::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2759:46:2;;;;;;;;;;;;;;;;;;;-1:-1:-1;2759:46:2;;;;;;-1:-1:-1;;;2759:46:2;;;;:::o;17771:503::-;17872:22;17914:7;17922:1;17914:10;;;;;;;;:::i;:::-;;;;;;;17897:28;;;;;;16582:19:23;;16626:2;16617:12;;16453:182;17897:28:2;;;;;;;;;;;;;17872:53;;17938:8;17935:193;;;17966:9;17962:156;17985:7;:14;17981:1;:18;17962:156;;;18059:7;18067:1;18059:10;;;;;;;;:::i;:::-;;;;;;;18042:28;;;;;;16582:19:23;;16626:2;16617:12;;16453:182;18042:28:2;;;;;;;;;;;;;18032:39;;;;;;18019:7;18027:1;18019:10;;;;;;;;:::i;:::-;;;;;;;;;;:52;18099:3;;17962:156;;;;17935:193;18137:14;18181:7;18164:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;18154:36;;;;;;18137:53;;18205:62;18217:6;18233:10;18225:6;:18;18245:7;18253:1;18245:10;;;;;;;;:::i;:::-;;;;;;;18257:9;18205:62;;;;;;;;;:::i;:::-;;;;;;;;17862:412;;17771:503;;;:::o;4679:242::-;4762:10;;:26;;-1:-1:-1;;;4762:26:2;;;;;9375:25:23;;;4743:4:2;;4790:10;;-1:-1:-1;;;;;4762:10:2;;;;:18;;9348::23;;4762:26:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;4762:38:2;;:94;;;;-1:-1:-1;4846:10:2;;4804:11;;:39;;-1:-1:-1;;;4804:39:2;;;;;9375:25:23;;;-1:-1:-1;;;;;4804:11:2;;;;:31;;9348:18:23;;4804:39:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:52;;4762:94;4759:134;;;-1:-1:-1;4878:4:2;;4679:242;-1:-1:-1;4679:242:2:o;4759:134::-;-1:-1:-1;4909:5:2;;4679:242;-1:-1:-1;4679:242:2:o;2445:27::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2445:27:2;;;;;;;-1:-1:-1;;2445:27:2;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2445:27:2;;;;-1:-1:-1;;;2445:27:2;;;;;-1:-1:-1;;;2445:27:2;;;;;;;-1:-1:-1;;;2445:27:2;;;;;:::o;4380:293::-;4428:4;4459:1;4444:201;4467:10;;4462:1;:15;4444:201;;4496:10;;4515:11;;:31;;-1:-1:-1;;;4515:31:2;;;;;9375:25:23;;;4551:10:2;;-1:-1:-1;;;;;4496:10:2;;;;:18;;4515:11;;;:28;;9348:18:23;;4515:31:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4496:51;;;;;;;;;;;;;9375:25:23;;9363:2;9348:18;;9229:177;4496:51:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;4496:65:2;;4493:114;;4588:4;4581:11;;;4380:293;:::o;4493:114::-;4630:3;;4444:201;;;;4661:5;4654:12;;4380:293;:::o;7327:1609::-;7396:13;7411:16;7439:27;7469:49;7493:24;5676:12:1;;;;;-1:-1:-1;;;5655:10:1;;;;;5648:41;;5344:363;7469:49:2;7439:79;;7528:18;;:::i;:::-;7556:14;;;7606:352;7628:19;7624:1;:23;7606:352;;;7681:48;7701:24;7727:1;7681:19;:48::i;:::-;7673:57;7753:13;;;:5;:13;;;;;;;7744:22;;;;;;;;;;7673:57;;-1:-1:-1;7744:22:2;;;;7753:13;;7744:22;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;7744:22:2;;;-1:-1:-1;;7744:22:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;7744:22:2;;-1:-1:-1;;;;;7744:22:2;;;;;-1:-1:-1;;;7744:22:2;;;;;;;;;;-1:-1:-1;;;7744:22:2;;;;;;;-1:-1:-1;;;7744:22:2;;;;;;;;;7784:36;;;;;-1:-1:-1;7823:15:2;7784:54;;;:84;;;;;7862:6;7842:26;;:6;:17;;;:26;;;7784:84;7780:140;;;7897:7;;;;;7780:140;7943:3;;7606:352;;;;8015:5;8022:1;8015:8;8011:249;;8063:13;;;8074:1;8063:13;;;;;;;;;8039:22;;8063:13;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;8121:16:2;;;8135:1;8121:16;;;;;;;;;8039:37;;-1:-1:-1;8090:29:2;;8121:16;;;;;;;;;;-1:-1:-1;8226:8:2;;;;-1:-1:-1;8226:8:2;;-1:-1:-1;;;;;;;;;7327:1609:2:o;8011:249::-;8270:15;8299:21;8334:5;-1:-1:-1;;;;;8323:17:2;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;8299:41;;8350:26;8393:5;-1:-1:-1;;;;;8379:20:2;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;8379:20:2;;8350:49;;8413:9;8409:484;8431:19;8427:1;:23;8409:484;;;8484:48;8504:24;8530:1;8484:19;:48::i;:::-;8476:57;8556:13;;;:5;:13;;;;;;;8547:22;;;;;;;;;;8476:57;;-1:-1:-1;8547:22:2;;;;8556:13;;8547:22;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;8547:22:2;;;-1:-1:-1;;8547:22:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;8547:22:2;;-1:-1:-1;;;;;8547:22:2;;;;;-1:-1:-1;;;8547:22:2;;;;;;;;;;-1:-1:-1;;;8547:22:2;;;;;;;-1:-1:-1;;;8547:22:2;;;;;;;;;8587:36;;;;;-1:-1:-1;8626:15:2;8587:54;;;:84;;;;;8665:6;8645:26;;:6;:17;;;:26;;;8587:84;8583:272;;;8709:6;8690:7;8698;8690:16;;;;;;;;:::i;:::-;;;;;;:25;;;;8754:6;8733:9;8743:7;8733:18;;;;;;;;:::i;:::-;;;;;;:27;;;;;8788:9;;;;;8827:5;8819:7;:13;8834:5;8816:25;;8878:3;;8409:484;;;-1:-1:-1;8910:7:2;;8919:9;;-1:-1:-1;7327:1609:2;-1:-1:-1;;;;;;;7327:1609:2:o;14081:320::-;23762:17;:15;:17::i;:::-;23754:50;;;;-1:-1:-1;;;23754:50:2;;18283:2:23;23754:50:2;;;18265:21:23;18322:2;18302:18;;;18295:30;-1:-1:-1;;;18341:18:23;;;18334:50;18401:18;;23754:50:2;;;;;;;;;14288:106:::1;14304:9;;14315:1;14318:16;14336:10;14348:13;14363;14378:15;14288;:106::i;:::-;14081:320:::0;;;;;;;:::o;10622:101::-;1074:6:11;;-1:-1:-1;;;;;1074:6:11;679:10:5;1221:23:11;1213:68;;;;-1:-1:-1;;;1213:68:11;;;;;;;:::i;:::-;10689:10:2::1;:27:::0;;-1:-1:-1;;;;;;10689:27:2::1;-1:-1:-1::0;;;;;10689:27:2;;;::::1;::::0;;;::::1;::::0;;10622:101::o;1652:94:11:-;1074:6;;-1:-1:-1;;;;;1074:6:11;679:10:5;1221:23:11;1213:68;;;;-1:-1:-1;;;1213:68:11;;;;;;;:::i;:::-;1717:21:::1;1735:1;1717:9;:21::i;:::-;1652:94::o:0;16479:1286:2:-;16663:9;16659:1080;16680:9;:16;16678:18;;16659:1080;;;16784:9;16773:21;;;;;;;;:::i;:::-;;;;;;;;;;;;;16763:32;;;;;;16736:9;16746:1;16736:12;;;;;;;;:::i;:::-;;;;;;;;;;;:21;;16725:33;;;;;;;;:::i;:::-;;;;;;;;;;;;;16715:44;;;;;;:80;16712:989;;16911:15;16882:9;16892:1;16882:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:25;;;-1:-1:-1;;;16882:25:2;;;;:44;;;;:92;;;16949:9;16959:1;16949:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:25;;;-1:-1:-1;;;16949:25:2;;;;16930:15;:44;;16882:92;16874:124;;;;-1:-1:-1;;;16874:124:2;;20351:2:23;16874:124:2;;;20333:21:23;20390:2;20370:18;;;20363:30;-1:-1:-1;;;20409:18:23;;;20402:49;20468:18;;16874:124:2;20149:343:23;16874:124:2;17051:18;17072:98;;;;;;;;17077:9;17072:98;;;;17087:6;17072:98;;;;;;17095:5;17072:98;;;;17102:1;17072:98;;;;;;17105:9;17115:1;17105:12;;;;;;;;:::i;:::-;;;;;;;;;;;:28;;;;;;;;;;;;17072:98;;;;;;17135:9;17145:1;17135:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:22;;;-1:-1:-1;;;17135:22:2;;;;17072:98;;;;;;;;;;;;;;;;;;;;;;;;;;;;17248:19;;17214:24;2187:10:1;;-1:-1:-1;;;2187:10:1;;;;;;2207:22;;;:11;:22;;;;;:30;;;2271:26;;-1:-1:-1;;;;;2271:26:1;;;2207:11;2284:13;;;2271:26;;;;;;;17287::2;;:5;:26;;;:35;;;;-1:-1:-1;17287:35:2;;:26;;:35;;:26;:35;:::i;:::-;-1:-1:-1;17287:35:2;;;;;;;;;;-1:-1:-1;;17287:35:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;17287:35:2;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;17287:35:2;-1:-1:-1;;;;;;;;17287:35:2;;;;;;;-1:-1:-1;;;;17287:35:2;;-1:-1:-1;;;17287:35:2;;;;;;-1:-1:-1;;;;17287:35:2;-1:-1:-1;;;17287:35:2;;;;;-1:-1:-1;;;;17287:35:2;;;;;-1:-1:-1;;;17287:35:2;;;;;;;;;;;;17340:19;:22;;-1:-1:-1;;17340:22:2;;17287:35;;17340:22;:::i;:::-;;;;-1:-1:-1;17464:24:2;;-1:-1:-1;17464:15:2;17482:6;17464:24;:::i;:::-;17417:9;17427:1;17417:12;;;;;;;;:::i;:::-;;;;;;;;;:44;;;;;:12;;;;;;;:44;;;;;:71;17536:9;:12;;17566:1;;17536:9;17546:1;;17536:12;;;;;;:::i;:::-;;;;;;;;;;;:27;;;;;;;;;;;;:31;;;;:::i;:::-;17506:9;17516:1;17506:12;;;;;;;;:::i;:::-;;;;;;;;;;;:27;;;:61;;;;;;;;;;;;;;;;;;17591:72;17605:6;17633:1;17612:19;;:22;;;;:::i;:::-;17636:9;17647:15;17591:72;;;;;;;;;:::i;:::-;;;;;;;;17681:5;;;16712:989;17724:3;;16659:1080;;;;16479:1286;;;:::o;5616:969::-;5683:7;5724:14;;5711:10;:27;5703:56;;;;-1:-1:-1;;;5703:56:2;;23852:2:23;5703:56:2;;;23834:21:23;23891:2;23871:18;;;23864:30;-1:-1:-1;;;23910:18:23;;;23903:46;23966:18;;5703:56:2;23650:340:23;5703:56:2;5796:21;;;;:9;:21;;;;;:34;;;-1:-1:-1;;;5796:34:2;;;;5778:15;:52;5769:85;;;;-1:-1:-1;;;5769:85:2;;24197:2:23;5769:85:2;;;24179:21:23;24236:2;24216:18;;;24209:30;-1:-1:-1;;;24255:18:23;;;24248:49;24314:18;;5769:85:2;23995:343:23;5769:85:2;5974:19;6003:25;6038:11;6065:9;6061:445;6081:21;;;;:9;:21;;;;;:37;;;;;6078:40;;6061:445;;;6210:17;6177:9;:21;6187:10;6177:21;;;;;;;;;;;:27;;6205:1;6177:30;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:50;;;6174:322;;;6267:9;:21;6277:10;6267:21;;;;;;;;;;;:27;;6295:1;6267:30;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;6247:50;;;;6329:1;6315:15;;6352:3;6357:1;6352:6;6348:23;;6368:1;6362:7;;6348:23;6174:322;;;6440:17;6406:9;:21;6416:10;6406:21;;;;;;;;;;;:27;;6434:1;6406:30;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:51;;;6403:93;;6480:1;6476:5;;6403:93;6120:3;;;;:::i;:::-;;;;6061:445;;;-1:-1:-1;6523:6:2;;6515:35;;;;-1:-1:-1;;;6515:35:2;;24685:2:23;6515:35:2;;;24667:21:23;24724:2;24704:18;;;24697:30;-1:-1:-1;;;24743:18:23;;;24736:46;24799:18;;6515:35:2;24483:340:23;6515:35:2;-1:-1:-1;6567:11:2;;5616:969;-1:-1:-1;;;5616:969:2:o;12602:664::-;23590:31;;-1:-1:-1;;;23590:31:2;;25030:2:23;23590:31:2;;;25012:21:23;25069:2;25049:18;;;25042:30;-1:-1:-1;;;25088:18:23;;;25081:44;25142:18;;23590:31:2;24828:338:23;2840:38:2;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2840:38:2;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2840:38:2;-1:-1:-1;2840:38:2;;;;;;;;;;-1:-1:-1;;;;;;;;2840:38:2;;;;;-1:-1:-1;;;2840:38:2;;;;;-1:-1:-1;;;2840:38:2;;;;;;-1:-1:-1;;;2840:38:2;;;;;:::o;5103:112::-;5164:11;;:::i;:::-;5194:14;;;;:5;:14;;;;;;;5187:21;;;;;;;;;;;;5194:14;;5187:21;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5187:21:2;;;-1:-1:-1;;5187:21:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5187:21:2;;-1:-1:-1;;;;;5187:21:2;;;;;-1:-1:-1;;;5187:21:2;;;;;;;;;;-1:-1:-1;;;5187:21:2;;;;;;;-1:-1:-1;;;5187:21:2;;;;;;;;;;;;-1:-1:-1;;5103:112:2:o;9012:1500::-;9083:15;9110:13;;9133:544;9153:9;:16;9150:19;;9133:544;;;9235:15;9188:9;9198:1;9188:12;;;;;;;;:::i;:::-;;;;;;;;;:44;;;;;:12;;;;;;;:44;;;;;;:62;:122;;;;;9295:15;9266:9;9276:1;9266:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:25;;;-1:-1:-1;;;9266:25:2;;;;:44;;9188:122;:169;;;;;9342:15;9314:9;9324:1;9314:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:25;;;-1:-1:-1;;;9314:25:2;;;;:43;9188:169;:216;;;;;9403:1;9373:9;9383:1;9373:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:27;;;-1:-1:-1;;;9373:27:2;;;;:31;9188:216;9185:285;;;9447:7;;;;;9185:285;9662:3;;9133:544;;;;9734:5;9741:1;9734:8;9730:139;;9784:15;;;9797:1;9784:15;;;;;;;;;9758:24;;9784:15;;;;;;;;;;;;;;;;;;;;9758:41;;9813:16;;;;;;;;;;;;:8;9822:1;9813:11;;;;;;;;:::i;:::-;;;;;;;;;;:16;9850:8;9012:1500;-1:-1:-1;;;9012:1500:2:o;9730:139::-;9879:23;9918:5;-1:-1:-1;;;;;9905:19:2;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9879:45;;9934:15;9967:9;9963:519;9983:9;:16;9980:19;;9963:519;;;10065:15;10018:9;10028:1;10018:12;;;;;;;;:::i;:::-;;;;;;;;;:44;;;;;:12;;;;;;;:44;;;;;;:62;:122;;;;;10125:15;10096:9;10106:1;10096:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:25;;;-1:-1:-1;;;10096:25:2;;;;:44;;10018:122;:169;;;;;10172:15;10144:9;10154:1;10144:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:25;;;-1:-1:-1;;;10144:25:2;;;;:43;10018:169;:216;;;;;10233:1;10203:9;10213:1;10203:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:27;;;-1:-1:-1;;;10203:27:2;;;;:31;10018:216;10015:429;;;10286:9;10296:1;10286:12;;;;;;;;:::i;:::-;;;;;;;;;;;:21;;10267:40;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:7;10275;10267:16;;;;;;;;:::i;:::-;;;;;;:40;;;;10335:9;;;;;10377:5;10366:7;:16;10363:67;10406:5;10363:67;;10467:3;;9963:519;;;-1:-1:-1;10498:7:2;;9012:1500;-1:-1:-1;;;;9012:1500:2:o;13312:762::-;23762:17;:15;:17::i;:::-;23754:50;;;;-1:-1:-1;;;23754:50:2;;18283:2:23;23754:50:2;;;18265:21:23;18322:2;18302:18;;;18295:30;-1:-1:-1;;;18341:18:23;;;18334:50;18401:18;;23754:50:2;18081:344:23;23754:50:2;13531:1:::1;13512:16;:20;;;:46;;;;;13555:3;13536:16;:22;;;13512:46;13504:84;;;::::0;-1:-1:-1;;;13504:84:2;;26524:2:23;13504:84:2::1;::::0;::::1;26506:21:23::0;26563:2;26543:18;;;26536:30;26602:27;26582:18;;;26575:55;26647:18;;13504:84:2::1;26322:349:23::0;13504:84:2::1;13616:1;13598:14;;:19;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;13688:14:2::1;::::0;13648:27:::1;13678:25:::0;;;:9:::1;:25;::::0;;;;13717:23:::1;::::0;::::1;:39:::0;;-1:-1:-1;;13770:39:2;13717;::::1;::::0;;::::1;::::0;;;::::1;-1:-1:-1::0;;;;13770:39:2;;;;;-1:-1:-1;;;13770:39:2;;::::1;::::0;;;::::1;;::::0;;-1:-1:-1;13823:26:2;::::1;:45:::0;;-1:-1:-1;;13823:45:2::1;;::::0;::::1;;::::0;;13678:25;13882:31:::1;13904:9:::0;;13678:25;13882:31:::1;:::i;:::-;;13924:112;13940:9;;13958:14;;13975:1;13978:10;13990:13;14005;14020:15;13924;:112::i;:::-;13494:580;13312:762:::0;;;;;;;:::o;15345:1128::-;15420:27;15450:49;15474:24;5676:12:1;;;;;-1:-1:-1;;;5655:10:1;;;;;5648:41;;5344:363;15450:49:2;15420:79;;15509:18;;:::i;:::-;15537:14;;15648:766;15670:19;15666:1;:23;15648:766;;;15723:48;15743:24;15769:1;15723:19;:48::i;:::-;15715:57;15795:13;;;:5;:13;;;;;;;15786:22;;;;;;;;;;15715:57;;-1:-1:-1;15786:22:2;;;;15795:13;;15786:22;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;15786:22:2;;;-1:-1:-1;;15786:22:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;15786:22:2;;-1:-1:-1;;;;;15786:22:2;;;;;-1:-1:-1;;;15786:22:2;;;;;;;;;;-1:-1:-1;;;15786:22:2;;;;;;;-1:-1:-1;;;15786:22:2;;;;;;;;;15826:36;;;;;-1:-1:-1;15865:15:2;15826:54;;;:80;;;;;15900:6;15884;:12;;;:22;;;;15826:80;:109;;;;;15929:6;15910;:16;;;:25;;;;15826:109;15822:554;;;16114:34;;;:17;;;:34;16230:16;;16212:34;;:15;:34;:::i;:::-;16166:81;;:36;;;:81;16265:13;;;;:5;:13;;;;;:22;;16166:6;;16265:13;;;:22;;:13;:22;:::i;:::-;-1:-1:-1;16265:22:2;;;;;;;;;;-1:-1:-1;;16265:22:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;16265:22:2;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;16265:22:2;-1:-1:-1;;;;;;;;16265:22:2;;;;;;;-1:-1:-1;;;;16265:22:2;;-1:-1:-1;;;16265:22:2;;;;;;-1:-1:-1;;;;16265:22:2;-1:-1:-1;;;16265:22:2;;;;;-1:-1:-1;;;;16265:22:2;;;;;-1:-1:-1;;;16265:22:2;;;;;;;;;;;;-1:-1:-1;16347:13:2;;;:5;:13;;;;;;;16310:51;;;;;;16331:6;;16347:13;;16310:51;:::i;:::-;;;;;;;;15822:554;16399:3;;15648:766;;;;15410:1063;;;15345:1128;:::o;18980:4208::-;19144:10;;:26;;-1:-1:-1;;;19144:26:2;;;;;9375:25:23;;;19174:10:2;;-1:-1:-1;;;;;19144:10:2;;:18;;9348::23;;19144:26:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;19144:40:2;;:77;;;;-1:-1:-1;19188:14:2;;;;:5;:14;;;;;:25;;;-1:-1:-1;;;19188:25:2;;;;:33;;19144:77;19136:122;;;;-1:-1:-1;;;19136:122:2;;29551:2:23;19136:122:2;;;29533:21:23;;;29570:18;;;29563:30;29629:34;29609:18;;;29602:62;29681:18;;19136:122:2;29349:356:23;19136:122:2;19293:1;19276:7;:14;:18;19268:27;;;;;;19306:18;19327:14;;;:5;:14;;;;;;19306:35;;;;;;;;;;;;19327:14;;19306:35;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;19306:35:2;;;-1:-1:-1;;19306:35:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;19306:35:2;;-1:-1:-1;;;;;19306:35:2;;;;;-1:-1:-1;;;19306:35:2;;;;;;;;;;-1:-1:-1;;;19306:35:2;;;;;;;;-1:-1:-1;;;19306:35:2;;;;;;;;;;;;;;19463:16;;;;;;-1:-1:-1;;;19463:20:2;;19460:205;;19503:9;19499:156;19522:7;:14;19518:1;:18;19499:156;;;19596:7;19604:1;19596:10;;;;;;;;:::i;:::-;;;;;;;19579:28;;;;;;16582:19:23;;16626:2;16617:12;;16453:182;19579:28:2;;;;;;;;;;;;;19569:39;;;;;;19556:7;19564:1;19556:10;;;;;;;;:::i;:::-;;;;;;;;;;:52;19636:3;;19499:156;;;;19460:205;19674:14;19718:7;19701:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;19691:36;;;;;;19674:53;;19738:19;19775:6;19760;:11;;;:21;:29;;19788:1;19760:29;;;19784:1;19760:29;19835:12;;;;;19805:76;;;29962:25:23;;;30035:12;30023:25;;;30003:18;;;29996:53;;;;30065:18;;;30058:34;;;30123:2;30108:18;;30101:34;;;19738:51:2;;;;;19879:1;19866:14;;30166:3:23;30151:19;;30144:51;19738::2;-1:-1:-1;19805:76:2;;29949:3:23;29934:19;19805:76:2;;;;;;;19896:11;19910:1;19896:15;19892:2497;;19990:13;20021:1;20006:6;:14;;;:16;;;;:::i;:::-;20076:10;;20095:17;;;;20076:37;;-1:-1:-1;;;20076:37:2;;30686:6:23;30674:19;;;20076:37:2;;;30656:38:23;-1:-1:-1;;;;;19990:32:2;;;;;-1:-1:-1;20036:29:2;;-1:-1:-1;;;;;20076:10:2;;;;:18;;30629::23;;20076:37:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;20182:10;;20204:12;;;;20218:16;;;;20182:53;;-1:-1:-1;;;20182:53:2;;30907:12:23;30895:25;;;20182:53:2;;;30877:44:23;30969:8;30957:21;30937:18;;;30930:49;20036:78:2;;-1:-1:-1;;;;;;20182:10:2;;:21;;30850:18:23;;20182:53:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;20249:10:2;;20271:17;;;;20290:25;;20249:67;;-1:-1:-1;;;20249:67:2;;31193:6:23;31181:19;;;20249:67:2;;;31163:38:23;31217:18;;;31210:34;-1:-1:-1;;;;;20249:10:2;;;;-1:-1:-1;20249:21:2;;-1:-1:-1;31136:18:23;;20249:67:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;20400:14:2;;;;:5;:14;;;;;;-1:-1:-1;20393:21:2;20400:14;;20393:21;:::i;:::-;-1:-1:-1;20393:21:2;;;;;-1:-1:-1;;20393:21:2;;;-1:-1:-1;20393:21:2;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;20393:21:2;;;20500:36;;-1:-1:-1;;;;;;;20500:18:2;;;20526:5;;-1:-1:-1;20500:36:2;-1:-1:-1;20500:36:2;20526:5;20500:18;:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20467:69;;;;20558:4;20550:37;;;;-1:-1:-1;;;20550:37:2;;;;;;;:::i;:::-;20649:33;;:10;;20672:5;;20649:33;;;;20672:5;20649:10;:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;20634:48:2;;-1:-1:-1;20634:48:2;-1:-1:-1;20634:48:2;20696:37;;;;-1:-1:-1;;;20696:37:2;;;;;;;:::i;:::-;19912:833;;;;19892:2497;;;20849:6;:16;;;:19;;20867:1;20849:19;20846:211;;20887:31;;;:16;;;:31;20936:18;;;:25;;;-1:-1:-1;20979:14:2;;;:5;:14;;;;;:23;;20887:6;;20979:14;;;:23;;:14;:23;:::i;:::-;-1:-1:-1;20979:23:2;;;;;;;;;-1:-1:-1;;20979:23:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;20979:23:2;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;20979:23:2;-1:-1:-1;;;;;;;;20979:23:2;;;;;;;-1:-1:-1;;;;20979:23:2;;-1:-1:-1;;;20979:23:2;;;;;;-1:-1:-1;;;;20979:23:2;-1:-1:-1;;;20979:23:2;;;;;-1:-1:-1;;;;20979:23:2;;;;;-1:-1:-1;;;20979:23:2;;;;;;;;;;;-1:-1:-1;;;20846:211:2;21153:6;21133;:18;;;:26;21130:1249;;21178:13;21209:1;21194:6;:14;;;:16;;;;:::i;:::-;21266:10;;;21285:16;;;21266:36;;-1:-1:-1;;;21266:36:2;;30686:6:23;30674:19;;;21266:36:2;;;30656:38:23;-1:-1:-1;;;;;21178:32:2;;;;;-1:-1:-1;21228:27:2;;-1:-1:-1;;;;;21266:10:2;;;;:18;;30629::23;;21266:36:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;21322:10;;;21344:16;;;21362:25;;21322:66;;-1:-1:-1;;;21322:66:2;;31193:6:23;31181:19;;;21322:66:2;;;31163:38:23;31217:18;;;31210:34;21228:75:2;;-1:-1:-1;;;;;;21322:10:2;;:21;;31136:18:23;;21322:66:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;21406:10:2;;21436:25;;21406:56;;-1:-1:-1;;;21406:56:2;;;;;31988:25:23;;;32029:18;;;32022:34;;;;-1:-1:-1;;;;;21406:10:2;;;;-1:-1:-1;21406:21:2;;-1:-1:-1;31961:18:23;;21406:56:2;31814:248:23;21130:1249:2;22094:14;;;;22078:13;22133:14;;;:5;:14;;;;;-1:-1:-1;;;;;22078:30:2;;;;22133:14;22126:21;22133:14;22078:13;22126:21;:::i;:::-;-1:-1:-1;22126:21:2;;;;;-1:-1:-1;;22126:21:2;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;22126:21:2;;;;22198:7;1074:6:11;;-1:-1:-1;;;;;1074:6:11;;1001:87;22198:7:2;-1:-1:-1;;;;;22198:12:2;22218:5;22198:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22165:63;;;;22304:4;22296:37;;;;-1:-1:-1;;;22296:37:2;;;;;;;:::i;:::-;21972:407;;;21130:1249;22453:14;22450:731;;;22482:27;22512:49;22536:24;5676:12:1;;;;;-1:-1:-1;;;5655:10:1;;;;;5648:41;;5344:363;22512:49:2;22482:79;;22663:9;22659:512;22681:19;22677:1;:23;22659:512;;;22784:7;22733:48;22753:24;22779:1;22733:19;:48::i;:::-;22725:66;22721:404;;22814:17;22834:51;22860:24;22834:25;:51::i;:::-;22814:71;-1:-1:-1;22910:4:2;;22907:200;;22992:24;23030:31;23075:9;;22992:30;;:80;;23030:40;;23068:1;;23030:31;;:40;:::i;:::-;22992:80;;;;;;;;;;;;;-1:-1:-1;22992:80:2;:92;22907:200;22792:333;22721:404;23152:3;;22659:512;;;;22468:713;19076:4112;;;;;18980:4208;;;:::o;1901:192:11:-;1074:6;;-1:-1:-1;;;;;1074:6:11;679:10:5;1221:23:11;1213:68;;;;-1:-1:-1;;;1213:68:11;;;;;;;:::i;:::-;-1:-1:-1;;;;;1990:22:11;::::1;1982:73;;;::::0;-1:-1:-1;;;1982:73:11;;32539:2:23;1982:73:11::1;::::0;::::1;32521:21:23::0;32578:2;32558:18;;;32551:30;32617:34;32597:18;;;32590:62;-1:-1:-1;;;32668:18:23;;;32661:36;32714:19;;1982:73:11::1;32337:402:23::0;1982:73:11::1;2066:19;2076:8;2066:9;:19::i;:::-;1901:192:::0;:::o;6632:688:2:-;6707:4;6723:27;6753:49;6777:24;5676:12:1;;;;;-1:-1:-1;;;5655:10:1;;;;;5648:41;;5344:363;6753:49:2;6723:79;;6812:18;;:::i;:::-;6956:9;6952:340;6974:19;6970:1;:23;6952:340;;;7019:5;:63;7033:47;7053:24;7078:1;7033:19;:47::i;:::-;7025:56;;7019:63;;;;;;;;;;;7010:72;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;7010:72:2;;;-1:-1:-1;;7010:72:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;7010:72:2;;-1:-1:-1;;;;;7010:72:2;;;;;-1:-1:-1;;;7010:72:2;;;;;;;;;;-1:-1:-1;;;7010:72:2;;;;;;;-1:-1:-1;;;7010:72:2;;;;;;;;;7100:36;;;;;-1:-1:-1;7139:15:2;7100:54;;;:80;;;;;7174:6;7158;:12;;;:22;;;;7100:80;:109;;;;;7203:6;7184;:16;;;:25;;;;7100:109;7096:158;;;-1:-1:-1;7235:4:2;;6632:688;-1:-1:-1;;;;6632:688:2:o;7096:158::-;7277:3;;6952:340;;;-1:-1:-1;7308:5:2;;6632:688;-1:-1:-1;;;;6632:688:2:o;10849:1221::-;10931:9;10927:1137;10946:9;:16;10944:18;;10927:1137;;;11062:9;11045:27;;;;;;;;:::i;:::-;;;;;;;;;;;;;11035:38;;;;;;11008:9;11018:1;11008:12;;;;;;;;:::i;:::-;;;;;;;;;;;:21;;10991:39;;;;;;;;:::i;:::-;;;;;;;;;;;;;10981:50;;;;;;:92;10978:1048;;11156:27;11186:9;11196:1;11186:12;;;;;;;;:::i;:::-;;;;;;;;;;;11156:42;;11216:34;11253:9;11280:1;11263:9;:16;;;;:18;;;;:::i;:::-;11253:29;;;;;;;;:::i;:::-;;;;;;;;;;;11216:66;;11411:17;11398:30;;11453:9;11480:1;11463:9;:16;;;;:18;;;;:::i;:::-;11453:29;;;;;;;;:::i;:::-;;;;;;;;;;;;11446:36;;;;;;;;:::i;:::-;-1:-1:-1;11446:36:2;;;;-1:-1:-1;;;;;;11446:36:2;;;11959:9;11969:16;;:18;;11446:36;;11969:18;:::i;:::-;11959:29;;;;;;;;:::i;:::-;;;;;;;;;;;;11952:36;;;;;;;;:::i;:::-;-1:-1:-1;11952:36:2;;;;-1:-1:-1;;;;;;11952:36:2;;;-1:-1:-1;12006:5:2;;-1:-1:-1;12006:5:2;10978:1048;12049:3;;10927:1137;;;;10849:1221;:::o;5221:389::-;5282:15;5330:14;;5317:10;:27;5309:56;;;;-1:-1:-1;;;5309:56:2;;23852:2:23;5309:56:2;;;23834:21:23;23891:2;23871:18;;;23864:30;-1:-1:-1;;;23910:18:23;;;23903:46;23966:18;;5309:56:2;23650:340:23;5309:56:2;5375:25;5416:21;;;:9;:21;;;;;:37;;;;;-1:-1:-1;;;;;5403:51:2;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5403:51:2;;5375:79;;5468:9;5464:114;5486:9;:16;5483:1;:19;5464:114;;;5537:9;:21;5547:10;5537:21;;;;;;;;;;;:27;;5565:1;5537:30;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;5522:9;5532:1;5522:12;;;;;;;;:::i;:::-;:45;;;;:12;;;;;;;;;;;:45;5504:3;;;;:::i;:::-;;;;5464:114;;;-1:-1:-1;5594:9:2;5221:389;-1:-1:-1;;5221:389:2:o;4598:324:1:-;4676:13;4750:10;4763:66;4804:24;4822:5;4804:17;:24::i;:::-;4788:12;;4781:47;;;4788:12;;4781:47;:::i;:::-;4763:17;:66::i;:::-;4850:10;;4750:79;;-1:-1:-1;;;;4850:10:1;;;;;;4843:17;;;;;4839:43;;4869:13;;-1:-1:-1;;;4869:13:1;;;;;;;;;;;4839:43;4899:16;;;;;;:11;;;;;:16;;-1:-1:-1;;4899:16:1;;;;;4598:324::o;14407:931:2:-;14648:9;:16;;14674;;;;;;14622:23;14674:16;;;14648;;:9;:16;;14731:26;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;14771:20:2;;;:31;14793:9;;14771:20;:31;:::i;:::-;;14837:5;14816:11;:18;;;:26;;;;;;;;;;;;;;;;;;14881:11;14856;:22;;;:36;;;;;;;;;;;;;;;;;;14936:16;14906:11;:27;;;:46;;;;;;;;;;;;;;;;;;14990:10;14966:11;:21;;;:34;;;;;;;;;;;;;;;;;;15041:13;15014:11;:24;;;:40;;;;;;;;;;;;;;;;;;15095:13;15068:11;:24;;;:40;;;;;;;;;;;;;;;;;;15151:15;15122:11;:26;;;:44;;;;;;;;;;;;;;;;;;15212:119;15231:9;;15242:11;15255:16;15273:10;15285:13;15300;15315:15;15212:119;;;;;;;;;;;;;:::i;:::-;;;;;;;;14612:726;;14407:931;;;;;;;;:::o;2101:173:11:-;2176:6;;;-1:-1:-1;;;;;2193:17:11;;;-1:-1:-1;;;;;;2193:17:11;;;;;;;2226:40;;2176:6;;;2193:17;2176:6;;2226:40;;2157:16;;2226:40;2146:128;2101:173;:::o;3287:324:1:-;3351:13;3380:12;3386:5;5880:12;;;;;-1:-1:-1;;;5866:10:1;;;;;:26;;;5777:122;3380:12;3376:32;;;3401:7;;-1:-1:-1;;;3401:7:1;;;;;;;;;;;3376:32;-1:-1:-1;3438:12:1;;;;3418:17;3468:23;;;3438:12;3468:11;;;:23;;;;;;;3501:30;;;3565:29;;-1:-1:-1;;3565:29:1;3580:14;;-1:-1:-1;;;;;3565:29:1;;;;;;;;3468:23;3287:324::o;35228:297:0:-;35284:6;-1:-1:-1;;;;;35409:5:0;:34;;35401:87;;;;-1:-1:-1;;;35401:87:0;;35007:2:23;35401:87:0;;;34989:21:23;35046:2;35026:18;;;35019:30;35085:34;35065:18;;;35058:62;-1:-1:-1;;;35136:18:23;;;35129:38;35184:19;;35401:87:0;34805:404:23;35401:87:0;-1:-1:-1;35512:5:0;35228:297::o;26286:216::-;26341:6;-1:-1:-1;;26367:25:0;;;;;:54;;-1:-1:-1;26405:16:0;26396:25;;;26367:54;26359:106;;;;-1:-1:-1;;;26359:106:0;;35416:2:23;26359:106:0;;;35398:21:23;35455:2;35435:18;;;35428:30;35494:34;35474:18;;;35467:62;-1:-1:-1;;;35545:18:23;;;35538:37;35592:19;;26359:106:0;35214:403:23;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14:180:23;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:23;;14:180;-1:-1:-1;14:180:23:o;199:258::-;271:1;281:113;295:6;292:1;289:13;281:113;;;371:11;;;365:18;352:11;;;345:39;317:2;310:10;281:113;;;412:6;409:1;406:13;403:48;;;-1:-1:-1;;447:1:23;429:16;;422:27;199:258::o;462:::-;504:3;542:5;536:12;569:6;564:3;557:19;585:63;641:6;634:4;629:3;625:14;618:4;611:5;607:16;585:63;:::i;:::-;702:2;681:15;-1:-1:-1;;677:29:23;668:39;;;;709:4;664:50;;462:258;-1:-1:-1;;462:258:23:o;921:570::-;1174:3;1163:9;1156:22;1137:4;1195:46;1236:3;1225:9;1221:19;1213:6;1195:46;:::i;:::-;1289:6;1277:19;;;;1272:2;1257:18;;1250:47;-1:-1:-1;1316:12:23;1364:15;;;1359:2;1344:18;;1337:43;1416:15;;;1411:2;1396:18;;1389:43;1469:15;;;1463:3;1448:19;;;1441:44;1187:54;921:570;-1:-1:-1;921:570:23:o;1496:127::-;1557:10;1552:3;1548:20;1545:1;1538:31;1588:4;1585:1;1578:15;1612:4;1609:1;1602:15;1628:275;1699:2;1693:9;1764:2;1745:13;;-1:-1:-1;;1741:27:23;1729:40;;-1:-1:-1;;;;;1784:34:23;;1820:22;;;1781:62;1778:88;;;1846:18;;:::i;:::-;1882:2;1875:22;1628:275;;-1:-1:-1;1628:275:23:o;1908:712::-;1962:5;2015:3;2008:4;2000:6;1996:17;1992:27;1982:55;;2033:1;2030;2023:12;1982:55;2069:6;2056:20;2095:4;-1:-1:-1;;;;;2114:2:23;2111:26;2108:52;;;2140:18;;:::i;:::-;2186:2;2183:1;2179:10;2209:28;2233:2;2229;2225:11;2209:28;:::i;:::-;2271:15;;;2341;;;2337:24;;;2302:12;;;;2373:15;;;2370:35;;;2401:1;2398;2391:12;2370:35;2437:2;2429:6;2425:15;2414:26;;2449:142;2465:6;2460:3;2457:15;2449:142;;;2531:17;;2519:30;;2482:12;;;;2569;;;;2449:142;;;2609:5;1908:712;-1:-1:-1;;;;;;;1908:712:23:o;2625:577::-;2724:6;2732;2740;2793:2;2781:9;2772:7;2768:23;2764:32;2761:52;;;2809:1;2806;2799:12;2761:52;2845:9;2832:23;2822:33;;2906:2;2895:9;2891:18;2878:32;-1:-1:-1;;;;;2925:6:23;2922:30;2919:50;;;2965:1;2962;2955:12;2919:50;2988:61;3041:7;3032:6;3021:9;3017:22;2988:61;:::i;:::-;2978:71;;;3099:2;3088:9;3084:18;3071:32;3146:5;3139:13;3132:21;3125:5;3122:32;3112:60;;3168:1;3165;3158:12;3112:60;3191:5;3181:15;;;2625:577;;;;;:::o;3576:836::-;3864:4;3893:3;3923:2;3912:9;3905:21;3943:45;3984:2;3973:9;3969:18;3961:6;3943:45;:::i;:::-;4031:14;;4024:22;4019:2;4004:18;;3997:50;-1:-1:-1;;4066:12:23;4114:15;;;4109:2;4094:18;;4087:43;4178:4;4166:17;;;;4161:2;4146:18;;4139:45;4233:8;4221:21;;;;4215:3;4200:19;;4193:50;4280:15;;;4274:3;4259:19;;4252:44;4333:15;;;4327:3;4312:19;;4305:44;4398:6;4386:19;;;4380:3;4365:19;;;4358:48;4031:14;3935:53;-1:-1:-1;3576:836:23:o;4417:165::-;4484:20;;4544:12;4533:24;;4523:35;;4513:63;;4572:1;4569;4562:12;4513:63;4417:165;;;:::o;4587:184::-;4645:6;4698:2;4686:9;4677:7;4673:23;4669:32;4666:52;;;4714:1;4711;4704:12;4666:52;4737:28;4755:9;4737:28;:::i;:::-;4727:38;4587:184;-1:-1:-1;;;4587:184:23:o;4887:1175::-;4934:3;4962:6;5003:5;4997:12;5030:2;5025:3;5018:15;5054:45;5095:2;5090:3;5086:12;5072;5054:45;:::i;:::-;5042:57;;;5147:4;5140:5;5136:16;5130:23;5162:49;5205:4;5200:3;5196:14;5180;896:12;885:24;873:37;;820:96;5162:49;;5260:4;5253:5;5249:16;5243:23;5236:4;5231:3;5227:14;5220:47;5316:4;5309:5;5305:16;5299:23;5292:4;5287:3;5283:14;5276:47;5371:4;5364:5;5360:16;5354:23;5386:48;5428:4;5423:3;5419:14;5403;3466:4;3455:16;3443:29;;3399:75;5386:48;;5482:4;5475:5;5471:16;5465:23;5497:49;5540:4;5535:3;5531:14;5515;3555:8;3544:20;3532:33;;3479:92;5497:49;;5594:4;5587:5;5583:16;5577:23;5609:49;5652:4;5647:3;5643:14;5627;-1:-1:-1;;;;;4841:34:23;4829:47;;4776:106;5609:49;;5706:4;5699:5;5695:16;5689:23;5721:49;5764:4;5759:3;5755:14;5739;801:6;790:18;778:31;;725:90;5721:49;-1:-1:-1;5789:6:23;5832:14;;;5826:21;801:6;790:18;5890:12;;;778:31;5922:6;5965:14;;;5959:21;896:12;885:24;;6023:12;;;873:37;5989:47;820:96;6067:1357;6327:4;6375:2;6364:9;6360:18;6405:2;6394:9;6387:21;6428:6;6463;6457:13;6494:6;6486;6479:22;6532:2;6521:9;6517:18;6510:25;;6594:2;6584:6;6581:1;6577:14;6566:9;6562:30;6558:39;6544:53;;6616:4;6655:2;6647:6;6643:15;6676:1;6686:260;6700:6;6697:1;6694:13;6686:260;;;6793:2;6789:7;6777:9;6769:6;6765:22;6761:36;6756:3;6749:49;6821:45;6859:6;6850;6844:13;6821:45;:::i;:::-;6811:55;-1:-1:-1;6924:12:23;;;;6889:15;;;;6722:1;6715:9;6686:260;;;-1:-1:-1;;6982:22:23;;;6962:18;;;6955:50;7058:13;;7080:24;;;7162:15;;;;7122;;;-1:-1:-1;7058:13:23;-1:-1:-1;7197:1:23;7207:189;7223:8;7218:3;7215:17;7207:189;;;7292:15;;7278:30;;7369:17;;;;7330:14;;;;7251:1;7242:11;7207:189;;;-1:-1:-1;7413:5:23;;6067:1357;-1:-1:-1;;;;;;;6067:1357:23:o;7429:348::-;7481:8;7491:6;7545:3;7538:4;7530:6;7526:17;7522:27;7512:55;;7563:1;7560;7553:12;7512:55;-1:-1:-1;7586:20:23;;-1:-1:-1;;;;;7618:30:23;;7615:50;;;7661:1;7658;7651:12;7615:50;7698:4;7690:6;7686:17;7674:29;;7750:3;7743:4;7734:6;7726;7722:19;7718:30;7715:39;7712:59;;;7767:1;7764;7757:12;7712:59;7429:348;;;;;:::o;7782:161::-;7849:20;;7909:8;7898:20;;7888:31;;7878:59;;7933:1;7930;7923:12;7948:159;8015:20;;8075:6;8064:18;;8054:29;;8044:57;;8097:1;8094;8087:12;8112:859;8222:6;8230;8238;8246;8254;8262;8270;8323:3;8311:9;8302:7;8298:23;8294:33;8291:53;;;8340:1;8337;8330:12;8291:53;8380:9;8367:23;-1:-1:-1;;;;;8405:6:23;8402:30;8399:50;;;8445:1;8442;8435:12;8399:50;8484:59;8535:7;8526:6;8515:9;8511:22;8484:59;:::i;:::-;8562:8;;-1:-1:-1;8458:85:23;-1:-1:-1;;8647:2:23;8632:18;;8619:32;8691:4;8680:16;;8670:27;;8660:55;;8711:1;8708;8701:12;8660:55;8734:5;-1:-1:-1;8758:37:23;8791:2;8776:18;;8758:37;:::i;:::-;8748:47;;8814:37;8847:2;8836:9;8832:18;8814:37;:::i;:::-;8804:47;;8870:38;8903:3;8892:9;8888:19;8870:38;:::i;:::-;8860:48;;8927:38;8960:3;8949:9;8945:19;8927:38;:::i;:::-;8917:48;;8112:859;;;;;;;;;;:::o;8976:248::-;9044:6;9052;9105:2;9093:9;9084:7;9080:23;9076:32;9073:52;;;9121:1;9118;9111:12;9073:52;-1:-1:-1;;9144:23:23;;;9214:2;9199:18;;;9186:32;;-1:-1:-1;8976:248:23:o;9411:131::-;-1:-1:-1;;;;;9486:31:23;;9476:42;;9466:70;;9532:1;9529;9522:12;9547:247;9606:6;9659:2;9647:9;9638:7;9634:23;9630:32;9627:52;;;9675:1;9672;9665:12;9627:52;9714:9;9701:23;9733:31;9758:5;9733:31;:::i;9799:531::-;9842:5;9895:3;9888:4;9880:6;9876:17;9872:27;9862:55;;9913:1;9910;9903:12;9862:55;9949:6;9936:20;-1:-1:-1;;;;;9971:2:23;9968:26;9965:52;;;9997:18;;:::i;:::-;10041:55;10084:2;10065:13;;-1:-1:-1;;10061:27:23;10090:4;10057:38;10041:55;:::i;:::-;10121:2;10112:7;10105:19;10167:3;10160:4;10155:2;10147:6;10143:15;10139:26;10136:35;10133:55;;;10184:1;10181;10174:12;10133:55;10249:2;10242:4;10234:6;10230:17;10223:4;10214:7;10210:18;10197:55;10297:1;10272:16;;;10290:4;10268:27;10261:38;;;;10276:7;9799:531;-1:-1:-1;;;9799:531:23:o;10335:462::-;10421:6;10429;10437;10490:2;10478:9;10469:7;10465:23;10461:32;10458:52;;;10506:1;10503;10496:12;10458:52;10546:9;10533:23;-1:-1:-1;;;;;10571:6:23;10568:30;10565:50;;;10611:1;10608;10601:12;10565:50;10634;10676:7;10667:6;10656:9;10652:22;10634:50;:::i;:::-;10624:60;;;10731:2;10720:9;10716:18;10703:32;10693:42;;10754:37;10787:2;10776:9;10772:18;10754:37;:::i;:::-;10744:47;;10335:462;;;;;:::o;10802:316::-;10879:6;10887;10895;10948:2;10936:9;10927:7;10923:23;10919:32;10916:52;;;10964:1;10961;10954:12;10916:52;-1:-1:-1;;10987:23:23;;;11057:2;11042:18;;11029:32;;-1:-1:-1;11108:2:23;11093:18;;;11080:32;;10802:316;-1:-1:-1;10802:316:23:o;11123:1018::-;11471:4;11500:3;11530:2;11519:9;11512:21;11550:45;11591:2;11580:9;11576:18;11568:6;11550:45;:::i;:::-;11614:12;11662:15;;;11657:2;11642:18;;11635:43;11709:2;11694:18;;11687:34;;;;-1:-1:-1;;11752:2:23;11737:18;;11730:34;;;;11813:4;11801:17;;;;11795:3;11780:19;;11773:46;11868:8;11856:21;;;;11850:3;11835:19;;11828:50;-1:-1:-1;;;;;11915:35:23;;;;11909:3;11894:19;;11887:64;11970:6;12013:15;;;12007:3;11992:19;;11985:44;12066:15;12060:3;12045:19;;12038:44;12119:15;;;12113:3;12098:19;;;12091:44;;;;11542:53;11123:1018;-1:-1:-1;11123:1018:23:o;12354:245::-;12523:2;12512:9;12505:21;12486:4;12543:50;12589:2;12578:9;12574:18;12566:6;12543:50;:::i;12604:803::-;12766:4;12795:2;12835;12824:9;12820:18;12865:2;12854:9;12847:21;12888:6;12923;12917:13;12954:6;12946;12939:22;12992:2;12981:9;12977:18;12970:25;;13054:2;13044:6;13041:1;13037:14;13026:9;13022:30;13018:39;13004:53;;13092:2;13084:6;13080:15;13113:1;13123:255;13137:6;13134:1;13131:13;13123:255;;;13230:2;13226:7;13214:9;13206:6;13202:22;13198:36;13193:3;13186:49;13258:40;13291:6;13282;13276:13;13258:40;:::i;:::-;13248:50;-1:-1:-1;13356:12:23;;;;13321:15;;;;13159:1;13152:9;13123:255;;;-1:-1:-1;13395:6:23;;12604:803;-1:-1:-1;;;;;;;12604:803:23:o;13412:774::-;13523:6;13531;13539;13547;13555;13563;13571;13624:3;13612:9;13603:7;13599:23;13595:33;13592:53;;;13641:1;13638;13631:12;13592:53;13681:9;13668:23;-1:-1:-1;;;;;13706:6:23;13703:30;13700:50;;;13746:1;13743;13736:12;13700:50;13785:59;13836:7;13827:6;13816:9;13812:22;13785:59;:::i;:::-;13863:8;;-1:-1:-1;13759:85:23;-1:-1:-1;13917:37:23;;-1:-1:-1;13950:2:23;13935:18;;13917:37;:::i;14472:484::-;14574:6;14582;14590;14643:2;14631:9;14622:7;14618:23;14614:32;14611:52;;;14659:1;14656;14649:12;14611:52;14695:9;14682:23;14672:33;;14752:2;14741:9;14737:18;14724:32;14714:42;;14807:2;14796:9;14792:18;14779:32;-1:-1:-1;;;;;14826:6:23;14823:30;14820:50;;;14866:1;14863;14856:12;14820:50;14889:61;14942:7;14933:6;14922:9;14918:22;14889:61;:::i;:::-;14879:71;;;14472:484;;;;;:::o;14961:322::-;15030:6;15083:2;15071:9;15062:7;15058:23;15054:32;15051:52;;;15099:1;15096;15089:12;15051:52;15139:9;15126:23;-1:-1:-1;;;;;15164:6:23;15161:30;15158:50;;;15204:1;15201;15194:12;15158:50;15227;15269:7;15260:6;15249:9;15245:22;15227:50;:::i;:::-;15217:60;14961:322;-1:-1:-1;;;;14961:322:23:o;15288:643::-;15457:2;15509:21;;;15579:13;;15482:18;;;15601:22;;;15428:4;;15457:2;15680:15;;;;15654:2;15639:18;;;15428:4;15723:182;15737:6;15734:1;15731:13;15723:182;;;15802:13;;15817:6;15798:26;15786:39;;15880:15;;;;15845:12;;;;15759:1;15752:9;15723:182;;;-1:-1:-1;15922:3:23;;15288:643;-1:-1:-1;;;;;;15288:643:23:o;15936:380::-;16015:1;16011:12;;;;16058;;;16079:61;;16133:4;16125:6;16121:17;16111:27;;16079:61;16186:2;16178:6;16175:14;16155:18;16152:38;16149:161;;16232:10;16227:3;16223:20;16220:1;16213:31;16267:4;16264:1;16257:15;16295:4;16292:1;16285:15;16149:161;;15936:380;;;:::o;16321:127::-;16382:10;16377:3;16373:20;16370:1;16363:31;16413:4;16410:1;16403:15;16437:4;16434:1;16427:15;16640:543;16858:13;;16801:3;;16832;;16911:4;16938:15;;;16801:3;16981:175;16995:6;16992:1;16989:13;16981:175;;;17058:13;;17044:28;;17094:14;;;;17131:15;;;;17017:1;17010:9;16981:175;;;-1:-1:-1;17172:5:23;;16640:543;-1:-1:-1;;;;;;16640:543:23:o;17188:443::-;17413:6;17402:9;17395:25;17470:6;17463:14;17456:22;17451:2;17440:9;17436:18;17429:50;17515:6;17510:2;17499:9;17495:18;17488:34;17558:3;17553:2;17542:9;17538:18;17531:31;17376:4;17579:46;17620:3;17609:9;17605:19;17597:6;17579:46;:::i;:::-;17571:54;17188:443;-1:-1:-1;;;;;;17188:443:23:o;17636:251::-;17706:6;17759:2;17747:9;17738:7;17734:23;17730:32;17727:52;;;17775:1;17772;17765:12;17727:52;17807:9;17801:16;17826:31;17851:5;17826:31;:::i;17892:184::-;17962:6;18015:2;18003:9;17994:7;17990:23;17986:32;17983:52;;;18031:1;18028;18021:12;17983:52;-1:-1:-1;18054:16:23;;17892:184;-1:-1:-1;17892:184:23:o;18430:356::-;18632:2;18614:21;;;18651:18;;;18644:30;18710:34;18705:2;18690:18;;18683:62;18777:2;18762:18;;18430:356::o;18791:220::-;18940:2;18929:9;18922:21;18903:4;18960:45;19001:2;18990:9;18986:18;18978:6;18960:45;:::i;19142:772::-;19192:3;19233:5;19227:12;19262:36;19288:9;19262:36;:::i;:::-;19307:19;;;19345:4;19368:1;19385:18;;;19412:146;;;;19572:1;19567:341;;;;19378:530;;19412:146;-1:-1:-1;;19454:24:23;;19440:12;;;19433:46;19526:14;;19519:22;19516:1;19512:30;19503:40;;19499:49;;;-1:-1:-1;19412:146:23;;19567:341;19598:5;19595:1;19588:16;19645:2;19642:1;19632:16;19670:1;19684:174;19698:6;19695:1;19692:13;19684:174;;;19785:14;;19767:11;;;19763:20;;19756:44;19828:16;;;;19713:10;;19684:174;;;19882:11;;19878:20;;;-1:-1:-1;;19378:530:23;;;;;;19142:772;;;;:::o;19919:225::-;20065:2;20054:9;20047:21;20028:4;20085:53;20134:2;20123:9;20119:18;20111:6;20085:53;:::i;20497:545::-;20599:2;20594:3;20591:11;20588:448;;;20635:1;20660:5;20656:2;20649:17;20705:4;20701:2;20691:19;20775:2;20763:10;20759:19;20756:1;20752:27;20746:4;20742:38;20811:4;20799:10;20796:20;20793:47;;;-1:-1:-1;20834:4:23;20793:47;20889:2;20884:3;20880:12;20877:1;20873:20;20867:4;20863:31;20853:41;;20944:82;20962:2;20955:5;20952:13;20944:82;;;21007:17;;;20988:1;20977:13;20944:82;;;20948:3;;;20588:448;20497:545;;;:::o;21218:1352::-;21344:3;21338:10;-1:-1:-1;;;;;21363:6:23;21360:30;21357:56;;;21393:18;;:::i;:::-;21422:97;21512:6;21472:38;21504:4;21498:11;21472:38;:::i;:::-;21466:4;21422:97;:::i;:::-;21574:4;;21638:2;21627:14;;21655:1;21650:663;;;;22357:1;22374:6;22371:89;;;-1:-1:-1;22426:19:23;;;22420:26;22371:89;-1:-1:-1;;21175:1:23;21171:11;;;21167:24;21163:29;21153:40;21199:1;21195:11;;;21150:57;22473:81;;21620:944;;21650:663;19089:1;19082:14;;;19126:4;19113:18;;-1:-1:-1;;21686:20:23;;;21804:236;21818:7;21815:1;21812:14;21804:236;;;21907:19;;;21901:26;21886:42;;21999:27;;;;21967:1;21955:14;;;;21834:19;;21804:236;;;21808:3;22068:6;22059:7;22056:19;22053:201;;;22129:19;;;22123:26;-1:-1:-1;;22212:1:23;22208:14;;;22224:3;22204:24;22200:37;22196:42;22181:58;22166:74;;22053:201;-1:-1:-1;;;;;22300:1:23;22284:14;;;22280:22;22267:36;;-1:-1:-1;21218:1352:23:o;22575:127::-;22636:10;22631:3;22627:20;22624:1;22617:31;22667:4;22664:1;22657:15;22691:4;22688:1;22681:15;22707:128;22747:3;22778:1;22774:6;22771:1;22768:13;22765:39;;;22784:18;;:::i;:::-;-1:-1:-1;22820:9:23;;22707:128::o;22840:217::-;22879:4;22908:6;22964:10;;;;22934;;22986:12;;;22983:38;;;23001:18;;:::i;:::-;23038:13;;22840:217;-1:-1:-1;;;22840:217:23:o;23062:125::-;23102:4;23130:1;23127;23124:8;23121:34;;;23135:18;;:::i;:::-;-1:-1:-1;23172:9:23;;23062:125::o;23192:453::-;23436:12;23428:6;23424:25;23413:9;23406:44;23486:6;23481:2;23470:9;23466:18;23459:34;23529:3;23524:2;23513:9;23509:18;23502:31;23387:4;23550:46;23591:3;23580:9;23576:19;23568:6;23550:46;:::i;:::-;23542:54;;23632:6;23627:2;23616:9;23612:18;23605:34;23192:453;;;;;;;:::o;24343:135::-;24382:3;24403:17;;;24400:43;;24423:18;;:::i;:::-;-1:-1:-1;24470:1:23;24459:13;;24343:135::o;26676:1206::-;-1:-1:-1;;;;;26795:3:23;26792:27;26789:53;;;26822:18;;:::i;:::-;26851:94;26941:3;26901:38;26933:4;26927:11;26901:38;:::i;:::-;26895:4;26851:94;:::i;:::-;26971:1;26996:2;26991:3;26988:11;27013:1;27008:616;;;;27668:1;27685:3;27682:93;;;-1:-1:-1;27741:19:23;;;27728:33;27682:93;-1:-1:-1;;21175:1:23;21171:11;;;21167:24;21163:29;21153:40;21199:1;21195:11;;;21150:57;27788:78;;26981:895;;27008:616;19089:1;19082:14;;;19126:4;19113:18;;-1:-1:-1;;27044:17:23;;;27145:9;27167:229;27181:7;27178:1;27175:14;27167:229;;;27270:19;;;27257:33;27242:49;;27377:4;27362:20;;;;27330:1;27318:14;;;;27197:12;27167:229;;;27171:3;27424;27415:7;27412:16;27409:159;;;27548:1;27544:6;27538:3;27532;27529:1;27525:11;27521:21;27517:34;27513:39;27500:9;27495:3;27491:19;27478:33;27474:79;27466:6;27459:95;27409:159;;;27611:1;27605:3;27602:1;27598:11;27594:19;27588:4;27581:33;26981:895;;26676:1206;;;:::o;28022:1322::-;28244:6;28233:9;28226:25;28287:6;28282:2;28271:9;28267:18;28260:34;28330:2;28325;28314:9;28310:18;28303:30;28207:4;28352:6;28394:2;28389;28378:9;28374:18;28367:30;28420:54;28469:3;28458:9;28454:19;28446:6;28420:54;:::i;:::-;28563:4;28551:17;;28545:24;27998:12;27982:29;896:12;885:24;;28626:3;28611:19;;873:37;-1:-1:-1;28686:4:23;28674:17;;28668:24;28662:3;28647:19;;28640:53;28748:4;28736:17;;28730:24;28724:3;28709:19;;28702:53;28799:4;28787:17;;28781:24;28846:4;28831:20;;28868:3;28853:19;;3443:29;28908:1;28904:17;;;28923:8;28900:32;28949:3;28934:19;;3532:33;28989:2;28985:18;;;-1:-1:-1;;;;;28981:47:23;29045:3;29030:19;;4829:47;29069:6;29110:3;29106:19;;;29102:28;;29132:18;;;778:31;29160:68;29223:3;29212:9;29208:19;29203:2;29191:9;29186:3;29182:19;29178:28;801:6;790:18;778:31;;725:90;29160:68;-1:-1:-1;29263:3:23;29259:19;;;29280:12;29255:38;29310:3;29295:19;;873:37;-1:-1:-1;29332:6:23;28022:1322;-1:-1:-1;;;;;;28022:1322:23:o;30206:300::-;30245:1;-1:-1:-1;;;;;30320:2:23;30317:1;30313:10;30342:3;30332:134;;30388:10;30383:3;30379:20;30376:1;30369:31;30423:4;30420:1;30413:15;30451:4;30448:1;30441:15;30332:134;30484:10;;30480:20;;;;;30206:300;-1:-1:-1;;30206:300:23:o;31465:344::-;31667:2;31649:21;;;31706:2;31686:18;;;31679:30;-1:-1:-1;;;31740:2:23;31725:18;;31718:50;31800:2;31785:18;;31465:344::o;32067:265::-;32106:3;32134:9;;;32159:10;;-1:-1:-1;;;;;32178:27:23;;;32171:35;;32155:52;32152:78;;;32210:18;;:::i;:::-;-1:-1:-1;;;32257:19:23;;;32250:27;;32242:36;;32239:62;;;32281:18;;:::i;:::-;-1:-1:-1;;32317:9:23;;32067:265::o;32744:276::-;32875:3;32913:6;32907:13;32929:53;32975:6;32970:3;32963:4;32955:6;32951:17;32929:53;:::i;:::-;32998:16;;;;;32744:276;-1:-1:-1;;32744:276:23:o;33025:842::-;33153:3;33182:1;33215:6;33209:13;33245:36;33271:9;33245:36;:::i;:::-;33300:1;33317:18;;;33344:133;;;;33491:1;33486:356;;;;33310:532;;33344:133;-1:-1:-1;;33377:24:23;;33365:37;;33450:14;;33443:22;33431:35;;33422:45;;;-1:-1:-1;33344:133:23;;33486:356;33517:6;33514:1;33507:17;33547:4;33592:2;33589:1;33579:16;33617:1;33631:165;33645:6;33642:1;33639:13;33631:165;;;33723:14;;33710:11;;;33703:35;33766:16;;;;33660:10;;33631:165;;;-1:-1:-1;;;33816:16:23;;;;;33858:3;-1:-1:-1;;;;;;33025:842:23:o;33872:928::-;34185:3;34174:9;34167:22;34226:6;34220:3;34209:9;34205:19;34198:35;34148:4;34252:3;34305:6;34297;34292:2;34281:9;34277:18;34264:48;34361:1;34332:22;;;34328:31;;34321:42;34453:12;34503:15;;;34496:4;34481:20;;34474:45;34567:4;34555:17;;;;34550:2;34535:18;;34528:45;-1:-1:-1;34621:8:23;34609:21;;;;34604:2;34589:18;;34582:49;34668:15;;;34662:3;34647:19;;34640:44;34721:15;;;34715:3;34700:19;;34693:44;34786:6;34774:19;;;34768:3;34753:19;;34746:48;34424:2;34403:15;;;-1:-1:-1;;34399:29:23;34384:45;34380:54;;;-1:-1:-1;33872:928:23:o",
  "language": "Solidity",
  "natspec": {
    "errors": {
      "Empty()": [
        {
          "details": "An operation (e.g. {front}) couldn't be completed due to the queue being empty."
        }
      ],
      "OutOfBounds()": [
        {
          "details": "An operation (e.g. {at}) couldn't be completed due to an index being out of bounds."
        }
      ]
    },
    "kind": "dev",
    "methods": {
      "constructor": {
        "details": "Constructor for HOADAO",
        "params": {
          "_nft": "-- contract address for NFTs"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "offset": [
    771,
    23898
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x185 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8D977672 GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0xD374A217 GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xF2FDE38B GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x4FD JUMPI DUP1 PUSH4 0xF4739BD9 EQ PUSH2 0x51D JUMPI DUP1 PUSH4 0xF713B7ED EQ PUSH2 0x53D JUMPI DUP1 PUSH4 0xFF981099 EQ PUSH2 0x55D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xD374A217 EQ PUSH2 0x47D JUMPI DUP1 PUSH4 0xE95D2347 EQ PUSH2 0x49D JUMPI DUP1 PUSH4 0xF18C51D3 EQ PUSH2 0x4DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8D977672 EQ PUSH2 0x38F JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x3C5 JUMPI DUP1 PUSH4 0x90B293D8 EQ PUSH2 0x3ED JUMPI DUP1 PUSH4 0x976217CD EQ PUSH2 0x403 JUMPI DUP1 PUSH4 0xB2BAD544 EQ PUSH2 0x430 JUMPI DUP1 PUSH4 0xBECA3A16 EQ PUSH2 0x45D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x61F9E9A8 GT PUSH2 0x13E JUMPI DUP1 PUSH4 0x715018A6 GT PUSH2 0x118 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x31A JUMPI DUP1 PUSH4 0x72E185CE EQ PUSH2 0x32F JUMPI DUP1 PUSH4 0x826B8EBD EQ PUSH2 0x34F JUMPI DUP1 PUSH4 0x8A6655D6 EQ PUSH2 0x36F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x61F9E9A8 EQ PUSH2 0x294 JUMPI DUP1 PUSH4 0x6215597B EQ PUSH2 0x2B4 JUMPI DUP1 PUSH4 0x69D03738 EQ PUSH2 0x2FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x13CF08B EQ PUSH2 0x191 JUMPI DUP1 PUSH4 0x9265CE6 EQ PUSH2 0x1CB JUMPI DUP1 PUSH4 0xF61D8BD EQ PUSH2 0x1ED JUMPI DUP1 PUSH4 0x10190EF1 EQ PUSH2 0x21D JUMPI DUP1 PUSH4 0x3B47FED2 EQ PUSH2 0x251 JUMPI DUP1 PUSH4 0x4B50F16A EQ PUSH2 0x266 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x18C JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x19D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B1 PUSH2 0x1AC CALLDATASIZE PUSH1 0x4 PUSH2 0x355D JUMP JUMPDEST PUSH2 0x58A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C2 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x35CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1EB PUSH2 0x1E6 CALLDATASIZE PUSH1 0x4 PUSH2 0x36D7 JUMP JUMPDEST PUSH2 0x656 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x20D PUSH2 0x208 CALLDATASIZE PUSH1 0x4 PUSH2 0x355D JUMP JUMPDEST PUSH2 0x79C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1C2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x229 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23D PUSH2 0x238 CALLDATASIZE PUSH1 0x4 PUSH2 0x355D JUMP JUMPDEST PUSH2 0x8A7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C2 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3736 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x25D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x20D PUSH2 0x9B1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x272 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x286 PUSH2 0x281 CALLDATASIZE PUSH1 0x4 PUSH2 0x37B5 JUMP JUMPDEST PUSH2 0xABF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C2 SWAP3 SWAP2 SWAP1 PUSH2 0x38A1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1EB PUSH2 0x2AF CALLDATASIZE PUSH1 0x4 PUSH2 0x39A9 JUMP JUMPDEST PUSH2 0xF53 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EC PUSH2 0x2CF CALLDATASIZE PUSH1 0x4 PUSH2 0x3A46 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1C2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x306 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1EB PUSH2 0x315 CALLDATASIZE PUSH1 0x4 PUSH2 0x3A7D JUMP JUMPDEST PUSH2 0xFBD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x326 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1EB PUSH2 0x1009 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x33B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1EB PUSH2 0x34A CALLDATASIZE PUSH1 0x4 PUSH2 0x3B09 JUMP JUMPDEST PUSH2 0x103F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x35B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EC PUSH2 0x36A CALLDATASIZE PUSH1 0x4 PUSH2 0x355D JUMP JUMPDEST PUSH2 0x14B5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1EB PUSH2 0x38A CALLDATASIZE PUSH1 0x4 PUSH2 0x3B5F JUMP JUMPDEST PUSH2 0x16D8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x39B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3AF PUSH2 0x3AA CALLDATASIZE PUSH1 0x4 PUSH2 0x355D JUMP JUMPDEST PUSH2 0x1711 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C2 SWAP11 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3B8B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1C2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EC PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x40F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x423 PUSH2 0x41E CALLDATASIZE PUSH1 0x4 PUSH2 0x355D JUMP JUMPDEST PUSH2 0x1813 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C2 SWAP2 SWAP1 PUSH2 0x3C0C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x43C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x450 PUSH2 0x44B CALLDATASIZE PUSH1 0x4 PUSH2 0x37B5 JUMP JUMPDEST PUSH2 0x1955 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C2 SWAP2 SWAP1 PUSH2 0x3C1F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x469 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1EB PUSH2 0x478 CALLDATASIZE PUSH1 0x4 PUSH2 0x3C81 JUMP JUMPDEST PUSH2 0x1D1B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x489 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1EB PUSH2 0x498 CALLDATASIZE PUSH1 0x4 PUSH2 0x355D JUMP JUMPDEST PUSH2 0x1E7B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x6 SLOAD PUSH2 0x4C3 SWAP1 PUSH1 0xF DUP2 DUP2 SIGNEXTEND SWAP2 PUSH1 0x1 PUSH1 0x80 SHL SWAP1 DIV SWAP1 SIGNEXTEND DUP3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xF SWAP4 DUP5 SIGNEXTEND DUP2 MSTORE SWAP2 SWAP1 SWAP3 SIGNEXTEND PUSH1 0x20 DUP3 ADD MSTORE ADD PUSH2 0x1C2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1EB PUSH2 0x4F8 CALLDATASIZE PUSH1 0x4 PUSH2 0x3CD1 JUMP JUMPDEST PUSH2 0x21B2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x509 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1EB PUSH2 0x518 CALLDATASIZE PUSH1 0x4 PUSH2 0x3A7D JUMP JUMPDEST PUSH2 0x2BCF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x529 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x20D PUSH2 0x538 CALLDATASIZE PUSH1 0x4 PUSH2 0x355D JUMP JUMPDEST PUSH2 0x2C6A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x549 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1EB PUSH2 0x558 CALLDATASIZE PUSH1 0x4 PUSH2 0x3D20 JUMP JUMPDEST PUSH2 0x2E3A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x569 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x57D PUSH2 0x578 CALLDATASIZE PUSH1 0x4 PUSH2 0x355D JUMP JUMPDEST PUSH2 0x2FD7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C2 SWAP2 SWAP1 PUSH2 0x3D5C JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP2 SWAP1 PUSH2 0x5A5 SWAP1 PUSH2 0x3DA4 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x5D1 SWAP1 PUSH2 0x3DA4 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x61E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5F3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x61E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x601 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP PUSH1 0x1 DUP4 ADD SLOAD PUSH1 0x3 SWAP1 SWAP4 ADD SLOAD SWAP2 SWAP3 PUSH2 0xFFFF AND SWAP2 PUSH5 0xFFFFFFFFFF DUP1 DUP3 AND SWAP3 POP PUSH6 0x10000000000 DUP3 DIV DUP2 AND SWAP2 PUSH1 0x1 PUSH1 0x50 SHL SWAP1 DIV AND DUP6 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x66B JUMPI PUSH2 0x66B PUSH2 0x3DDE JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x685 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP DUP2 ISZERO PUSH2 0x711 JUMPI PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x70F JUMPI DUP4 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x6BA JUMPI PUSH2 0x6BA PUSH2 0x3DDE JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x6D4 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x6FC JUMPI PUSH2 0x6FC PUSH2 0x3DDE JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0x69F JUMP JUMPDEST POP JUMPDEST PUSH1 0x0 DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x724 SWAP2 SWAP1 PUSH2 0x3DF4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH32 0x637CE8D069E382E64EF71CF191623B88C7E307CE252E908E7F2BABBAD0CB81EA DUP2 DUP7 DUP4 EQ DUP7 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x774 JUMPI PUSH2 0x774 PUSH2 0x3DDE JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 PUSH1 0x40 MLOAD PUSH2 0x78D SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3E2A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x31A9108F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x0 SWAP2 CALLER SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x6352211E SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7EA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x80E SWAP2 SWAP1 PUSH2 0x3E5B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 ISZERO PUSH2 0x892 JUMPI POP PUSH1 0xE SLOAD PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x1245C6B PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x49171AC SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x86B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x88F SWAP2 SWAP1 PUSH2 0x3E78 JUMP JUMPDEST GT ISZERO JUMPDEST ISZERO PUSH2 0x89F JUMPI POP PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST POP PUSH1 0x0 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x5 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x8B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x8DA SWAP1 PUSH2 0x3DA4 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x906 SWAP1 PUSH2 0x3DA4 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x953 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x928 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x953 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x936 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP PUSH1 0x2 SWAP1 SWAP4 ADD SLOAD SWAP2 SWAP3 POP POP PUSH1 0xFF DUP1 DUP3 AND SWAP2 PUSH5 0xFFFFFFFFFF PUSH2 0x100 DUP3 DIV DUP2 AND SWAP3 PUSH7 0x1000000000000 DUP4 DIV AND SWAP2 PUSH3 0xFFFFFF PUSH1 0x1 PUSH1 0x38 SHL DUP3 DIV AND SWAP2 PUSH1 0x1 PUSH1 0x50 SHL DUP3 DIV DUP2 AND SWAP2 PUSH1 0x1 PUSH1 0x78 SHL DUP2 DIV SWAP1 SWAP2 AND SWAP1 PUSH2 0xFFFF PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 SWAP2 DIV AND DUP9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 JUMPDEST PUSH1 0xE SLOAD DUP2 GT PUSH2 0xAB7 JUMPI PUSH1 0x2 SLOAD PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x1038D37 PUSH1 0xE6 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE CALLER SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP3 PUSH4 0x6352211E SWAP3 SWAP2 AND SWAP1 PUSH4 0x40E34DC0 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA16 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA3A SWAP2 SWAP1 PUSH2 0x3E78 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA58 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA75 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA99 SWAP2 SWAP1 PUSH2 0x3E5B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0xAAF JUMPI PUSH1 0x1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x9B6 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH1 0x0 PUSH2 0xADD PUSH1 0x6 SLOAD PUSH1 0xF DUP2 DUP2 SIGNEXTEND PUSH1 0x1 PUSH1 0x80 SHL SWAP1 SWAP3 DIV SWAP1 SIGNEXTEND SUB SWAP1 JUMP JUMPDEST SWAP1 POP PUSH2 0xAE7 PUSH2 0x34BF JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0xC6F JUMPI PUSH2 0xAFF PUSH1 0x6 DUP3 PUSH2 0x3101 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP2 MLOAD PUSH2 0x140 DUP2 ADD SWAP1 SWAP3 MSTORE DUP1 SLOAD SWAP3 SWAP6 POP SWAP1 SWAP2 DUP3 SWAP1 DUP3 SWAP1 PUSH2 0xB2D SWAP1 PUSH2 0x3DA4 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xB59 SWAP1 PUSH2 0x3DA4 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xBA6 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xB7B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xBA6 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xB89 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x1 DUP3 ADD SLOAD PUSH5 0xFFFFFFFFFF SWAP1 DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x4 SWAP1 SWAP3 ADD SLOAD PUSH1 0xFF DUP2 AND PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x100 DUP1 DUP3 DIV PUSH3 0xFFFFFF AND PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x20 SHL DUP3 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB AND PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x70 SHL DUP3 DIV PUSH2 0xFFFF SWAP1 DUP2 AND PUSH1 0xE0 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0x80 SHL DUP4 DIV AND SWAP1 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x90 SHL SWAP1 DIV DUP3 AND PUSH2 0x120 SWAP2 DUP3 ADD MSTORE DUP3 ADD MLOAD SWAP2 SWAP6 POP TIMESTAMP SWAP2 AND GT DUP1 ISZERO PUSH2 0xC5B JUMPI POP DUP8 PUSH5 0xFFFFFFFFFF AND DUP5 PUSH1 0xE0 ADD MLOAD PUSH2 0xFFFF AND EQ JUMPDEST ISZERO PUSH2 0xC67 JUMPI DUP2 PUSH1 0x1 ADD SWAP2 POP JUMPDEST PUSH1 0x1 ADD PUSH2 0xAEC JUMP JUMPDEST POP DUP1 PUSH1 0x0 SUB PUSH2 0xCDC JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x0 SWAP2 DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0xC97 PUSH2 0x34BF JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0xC8F JUMPI POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x20 DUP1 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP SWAP4 SWAP12 SWAP2 SWAP11 POP SWAP1 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0xCF7 JUMPI PUSH2 0xCF7 PUSH2 0x3612 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xD30 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0xD1D PUSH2 0x34BF JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0xD15 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0xD4D JUMPI PUSH2 0xD4D PUSH2 0x3612 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xD76 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP8 DUP2 LT ISZERO PUSH2 0xF43 JUMPI PUSH2 0xD8F PUSH1 0x6 DUP3 PUSH2 0x3101 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP2 MLOAD PUSH2 0x140 DUP2 ADD SWAP1 SWAP3 MSTORE DUP1 SLOAD SWAP3 SWAP9 POP SWAP1 SWAP2 DUP3 SWAP1 DUP3 SWAP1 PUSH2 0xDBD SWAP1 PUSH2 0x3DA4 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xDE9 SWAP1 PUSH2 0x3DA4 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xE36 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xE0B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xE36 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xE19 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x1 DUP3 ADD SLOAD PUSH5 0xFFFFFFFFFF SWAP1 DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x4 SWAP1 SWAP3 ADD SLOAD PUSH1 0xFF DUP2 AND PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x100 DUP1 DUP3 DIV PUSH3 0xFFFFFF AND PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x20 SHL DUP3 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB AND PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x70 SHL DUP3 DIV PUSH2 0xFFFF SWAP1 DUP2 AND PUSH1 0xE0 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0x80 SHL DUP4 DIV AND SWAP1 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x90 SHL SWAP1 DIV DUP3 AND PUSH2 0x120 SWAP2 DUP3 ADD MSTORE DUP3 ADD MLOAD SWAP2 SWAP9 POP TIMESTAMP SWAP2 AND GT DUP1 ISZERO PUSH2 0xEEB JUMPI POP DUP11 PUSH5 0xFFFFFFFFFF AND DUP8 PUSH1 0xE0 ADD MLOAD PUSH2 0xFFFF AND EQ JUMPDEST ISZERO PUSH2 0xF3B JUMPI DUP7 DUP4 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0xF03 JUMPI PUSH2 0xF03 PUSH2 0x3DDE JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP6 DUP3 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0xF21 JUMPI PUSH2 0xF21 PUSH2 0x3DDE JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP4 PUSH1 0x1 ADD SWAP4 POP DUP5 DUP5 GT PUSH2 0xF43 JUMPI JUMPDEST PUSH1 0x1 ADD PUSH2 0xD7C JUMP JUMPDEST POP SWAP1 SWAP10 SWAP1 SWAP9 POP SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xF5B PUSH2 0x9B1 JUMP JUMPDEST PUSH2 0xFA3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x135D5CDD081899481BDB881D1A1948189BD85C99 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xFB4 DUP8 DUP8 PUSH1 0x0 DUP9 DUP9 DUP9 DUP9 DUP9 PUSH2 0x3172 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xFE7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF9A SWAP1 PUSH2 0x3E91 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1033 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF9A SWAP1 PUSH2 0x3E91 JUMP JUMPDEST PUSH2 0x103D PUSH1 0x0 PUSH2 0x32F1 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x5 SLOAD DUP2 LT ISZERO PUSH2 0x14AF JUMPI DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x105D SWAP2 SWAP1 PUSH2 0x3EC6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x5 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1086 JUMPI PUSH2 0x1086 PUSH2 0x3DDE JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x1 ADD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x10A7 SWAP2 SWAP1 PUSH2 0x3F56 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SUB PUSH2 0x14A7 JUMPI TIMESTAMP PUSH1 0x5 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x10D6 JUMPI PUSH2 0x10D6 PUSH2 0x3DDE JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD PUSH1 0x2 ADD SLOAD PUSH1 0x1 PUSH1 0x50 SHL SWAP1 DIV PUSH5 0xFFFFFFFFFF AND GT DUP1 ISZERO SWAP1 PUSH2 0x113A JUMPI POP PUSH1 0x5 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1114 JUMPI PUSH2 0x1114 PUSH2 0x3DDE JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD PUSH1 0x2 ADD SLOAD PUSH1 0x1 PUSH1 0x78 SHL SWAP1 DIV PUSH5 0xFFFFFFFFFF AND TIMESTAMP GT ISZERO JUMPDEST PUSH2 0x117C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x13DD5D1CDA5919481D1A5B59481C195C9A5BD9 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xF9A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH2 0x140 ADD PUSH1 0x40 MSTORE DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH5 0xFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP1 SHL DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x11BF JUMPI PUSH2 0x11BF PUSH2 0x3DDE JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x2 ADD PUSH1 0x6 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x11F9 JUMPI PUSH2 0x11F9 PUSH2 0x3DDE JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x3 SWAP3 SWAP1 SWAP3 MUL SWAP1 SWAP2 ADD PUSH1 0x2 ADD SLOAD PUSH1 0x1 PUSH1 0x38 SHL SWAP1 DIV PUSH3 0xFFFFFF AND DUP4 MSTORE DUP3 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP5 ADD DUP4 SWAP1 MSTORE PUSH1 0x60 DUP5 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 SWAP1 SWAP4 ADD DUP3 SWAP1 MSTORE PUSH1 0xB SLOAD PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x80 SHL SWAP1 DUP2 SWAP1 DIV PUSH1 0xF SIGNEXTEND DUP1 DUP7 MSTORE PUSH1 0x7 DUP6 MSTORE DUP7 DUP7 KECCAK256 DUP5 SWAP1 SSTORE DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 DUP2 AND PUSH1 0x1 SWAP1 SWAP3 ADD AND SWAP1 SWAP2 MUL OR SWAP1 SSTORE DUP3 MSTORE PUSH1 0xA SWAP1 MSTORE KECCAK256 DUP2 MLOAD SWAP2 SWAP3 POP DUP3 SWAP2 DUP2 SWAP1 PUSH2 0x128E SWAP1 DUP3 PUSH2 0x3FB8 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x1 DUP3 DUP2 ADD DUP1 SLOAD PUSH5 0xFFFFFFFFFF NOT AND PUSH5 0xFFFFFFFFFF SWAP4 DUP5 AND OR SWAP1 SSTORE PUSH1 0x40 DUP5 ADD MLOAD PUSH1 0x2 DUP5 ADD SSTORE PUSH1 0x60 DUP5 ADD MLOAD PUSH1 0x3 DUP5 ADD SSTORE PUSH1 0x80 DUP5 ADD MLOAD PUSH1 0x4 SWAP1 SWAP4 ADD DUP1 SLOAD PUSH1 0xA0 DUP7 ADD MLOAD PUSH1 0xC0 DUP8 ADD MLOAD PUSH1 0xE0 DUP9 ADD MLOAD PUSH2 0x100 DUP1 DUP11 ADD MLOAD PUSH2 0x120 SWAP1 SWAP11 ADD MLOAD PUSH1 0xFF SWAP1 SWAP10 AND PUSH4 0xFFFFFFFF NOT SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 OR PUSH3 0xFFFFFF SWAP1 SWAP4 AND SWAP1 SWAP4 MUL SWAP2 SWAP1 SWAP2 OR PUSH5 0x100000000 PUSH1 0x1 PUSH1 0x80 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x20 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 MUL PUSH2 0xFFFF PUSH1 0x70 SHL NOT AND OR PUSH1 0x1 PUSH1 0x70 SHL PUSH2 0xFFFF SWAP3 DUP4 AND MUL OR PUSH7 0xFFFFFFFFFFFFFF PUSH1 0x80 SHL NOT AND PUSH1 0x1 PUSH1 0x80 SHL SWAP2 SWAP1 SWAP7 AND MUL PUSH5 0xFFFFFFFFFF PUSH1 0x90 SHL NOT AND SWAP5 SWAP1 SWAP5 OR PUSH1 0x1 PUSH1 0x90 SHL SWAP4 SWAP1 SWAP3 AND SWAP3 SWAP1 SWAP3 MUL OR SWAP1 SWAP2 SSTORE PUSH1 0xB DUP1 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x138D SWAP1 DUP5 SWAP1 PUSH2 0x408D JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x13A0 SWAP1 POP TIMESTAMP PUSH3 0x15180 PUSH2 0x408D JUMP JUMPDEST PUSH1 0x5 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x13B3 JUMPI PUSH2 0x13B3 PUSH2 0x3DDE JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH5 0xFFFFFFFFFF DUP9 AND DUP5 MSTORE PUSH1 0x3 SWAP1 SWAP3 MUL SWAP1 SWAP2 ADD SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 SWAP2 SWAP1 DUP5 SWAP1 DUP2 LT PUSH2 0x13EE JUMPI PUSH2 0x13EE PUSH2 0x3DDE JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x2 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND PUSH2 0x1418 SWAP2 SWAP1 PUSH2 0x40A5 JUMP JUMPDEST PUSH1 0x5 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x142B JUMPI PUSH2 0x142B PUSH2 0x3DDE JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x2 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH2 0xFFFF MUL NOT AND SWAP1 DUP4 PUSH2 0xFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0xBCC1EA15519F3ACFB49E91DE851E553B2C024B9AB85CEE8FFD8FE4E4E0A7876D DUP4 PUSH1 0x1 PUSH1 0xB SLOAD PUSH2 0x1487 SWAP2 SWAP1 PUSH2 0x40C8 JUMP JUMPDEST DUP8 TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0x1499 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x40DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP PUSH2 0x14AF JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x1042 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x9 SLOAD DUP3 LT PUSH2 0x14FB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x1B9BC81CDD58DA081C1C9BDC1BDCD85B PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xF9A JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0x1 PUSH1 0x50 SHL SWAP1 DIV PUSH5 0xFFFFFFFFFF AND TIMESTAMP GT PUSH2 0x155F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x766F74696E67207374696C6C20616374697665 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xF9A JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0xFFFF AND DUP2 LT ISZERO PUSH2 0x168D JUMPI DUP3 PUSH1 0x8 PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD DUP3 PUSH1 0x8 DUP2 LT PUSH2 0x15AB JUMPI PUSH2 0x15AB PUSH2 0x3DDE JUMP JUMPDEST PUSH1 0x10 SWAP2 DUP3 DUP3 DIV ADD SWAP2 SWAP1 MOD PUSH1 0x2 MUL SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND PUSH2 0xFFFF AND GT ISZERO PUSH2 0x162B JUMPI PUSH1 0x8 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD DUP2 PUSH1 0x8 DUP2 LT PUSH2 0x15F6 JUMPI PUSH2 0x15F6 PUSH2 0x3DDE JUMP JUMPDEST PUSH1 0x10 SWAP2 DUP3 DUP3 DIV ADD SWAP2 SWAP1 MOD PUSH1 0x2 MUL SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND PUSH2 0xFFFF AND SWAP3 POP DUP1 SWAP4 POP DUP2 PUSH1 0x1 SUB PUSH2 0x1626 JUMPI PUSH1 0x0 SWAP2 POP JUMPDEST PUSH2 0x167B JUMP JUMPDEST DUP3 PUSH1 0x8 PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD DUP3 PUSH1 0x8 DUP2 LT PUSH2 0x1653 JUMPI PUSH2 0x1653 PUSH2 0x3DDE JUMP JUMPDEST PUSH1 0x10 SWAP2 DUP3 DUP3 DIV ADD SWAP2 SWAP1 MOD PUSH1 0x2 MUL SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND PUSH2 0xFFFF AND SUB PUSH2 0x167B JUMPI PUSH1 0x1 SWAP2 POP JUMPDEST DUP1 PUSH2 0x1685 DUP2 PUSH2 0x4116 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1566 JUMP JUMPDEST POP DUP1 ISZERO PUSH2 0x16CF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x3A3432B932903BB0B99030903A34B297 PUSH1 0x81 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xF9A JUMP JUMPDEST POP SWAP1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x26BAB9BA1031329036B2B6B132B9 PUSH1 0x91 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xF9A JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP2 SWAP1 PUSH2 0x172C SWAP1 PUSH2 0x3DA4 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1758 SWAP1 PUSH2 0x3DA4 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x17A5 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x177A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x17A5 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1788 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP PUSH1 0x1 DUP5 ADD SLOAD PUSH1 0x2 DUP6 ADD SLOAD PUSH1 0x3 DUP7 ADD SLOAD PUSH1 0x4 SWAP1 SWAP7 ADD SLOAD SWAP5 SWAP6 PUSH5 0xFFFFFFFFFF SWAP3 DUP4 AND SWAP6 SWAP2 SWAP5 POP SWAP3 POP PUSH1 0xFF DUP2 AND SWAP2 PUSH3 0xFFFFFF PUSH2 0x100 DUP4 DIV AND SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB PUSH1 0x1 PUSH1 0x20 SHL DUP3 DIV AND SWAP2 PUSH2 0xFFFF PUSH1 0x1 PUSH1 0x70 SHL DUP4 DIV DUP2 AND SWAP3 PUSH1 0x1 PUSH1 0x80 SHL DUP2 DIV SWAP1 SWAP2 AND SWAP2 PUSH1 0x1 PUSH1 0x90 SHL SWAP1 SWAP2 DIV AND DUP11 JUMP JUMPDEST PUSH2 0x181B PUSH2 0x34BF JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP2 MLOAD PUSH2 0x140 DUP2 ADD SWAP1 SWAP3 MSTORE DUP1 SLOAD DUP3 SWAP1 DUP3 SWAP1 PUSH2 0x1844 SWAP1 PUSH2 0x3DA4 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1870 SWAP1 PUSH2 0x3DA4 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x18BD JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1892 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x18BD JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x18A0 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x1 DUP3 ADD SLOAD PUSH5 0xFFFFFFFFFF SWAP1 DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x4 SWAP1 SWAP3 ADD SLOAD PUSH1 0xFF DUP2 AND PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x100 DUP1 DUP3 DIV PUSH3 0xFFFFFF AND PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x20 SHL DUP3 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB AND PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x70 SHL DUP3 DIV PUSH2 0xFFFF SWAP1 DUP2 AND PUSH1 0xE0 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0x80 SHL DUP4 DIV AND SWAP1 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x90 SHL SWAP1 DIV SWAP1 SWAP2 AND PUSH2 0x120 SWAP1 SWAP2 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x5 SLOAD DUP2 LT ISZERO PUSH2 0x1A6D JUMPI TIMESTAMP PUSH1 0x5 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1979 JUMPI PUSH2 0x1979 PUSH2 0x3DDE JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH5 0xFFFFFFFFFF DUP10 AND DUP5 MSTORE PUSH1 0x3 SWAP1 SWAP3 MUL SWAP1 SWAP2 ADD SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD LT DUP1 ISZERO PUSH2 0x19DD JUMPI POP TIMESTAMP PUSH1 0x5 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x19B8 JUMPI PUSH2 0x19B8 PUSH2 0x3DDE JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD PUSH1 0x2 ADD SLOAD PUSH1 0x1 PUSH1 0x50 SHL SWAP1 DIV PUSH5 0xFFFFFFFFFF AND GT ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x1A1C JUMPI POP TIMESTAMP PUSH1 0x5 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x19F8 JUMPI PUSH2 0x19F8 PUSH2 0x3DDE JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD PUSH1 0x2 ADD SLOAD PUSH1 0x1 PUSH1 0x78 SHL SWAP1 DIV PUSH5 0xFFFFFFFFFF AND GT JUMPDEST DUP1 ISZERO PUSH2 0x1A59 JUMPI POP PUSH1 0x1 PUSH1 0x5 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1A38 JUMPI PUSH2 0x1A38 PUSH2 0x3DDE JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD PUSH1 0x2 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH2 0xFFFF AND GT JUMPDEST ISZERO PUSH2 0x1A65 JUMPI DUP2 PUSH1 0x1 ADD SWAP2 POP JUMPDEST PUSH1 0x1 ADD PUSH2 0x195B JUMP JUMPDEST POP DUP1 PUSH1 0x0 SUB PUSH2 0x1AD9 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x0 SWAP2 DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x1A8D JUMPI SWAP1 POP POP SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1AC7 JUMPI PUSH2 0x1AC7 PUSH2 0x3DDE JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1AF3 JUMPI PUSH2 0x1AF3 PUSH2 0x3612 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1B26 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x1B11 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x5 SLOAD DUP2 LT ISZERO PUSH2 0x1D11 JUMPI TIMESTAMP PUSH1 0x5 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1B4B JUMPI PUSH2 0x1B4B PUSH2 0x3DDE JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH5 0xFFFFFFFFFF DUP12 AND DUP5 MSTORE PUSH1 0x3 SWAP1 SWAP3 MUL SWAP1 SWAP2 ADD SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD LT DUP1 ISZERO PUSH2 0x1BAF JUMPI POP TIMESTAMP PUSH1 0x5 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1B8A JUMPI PUSH2 0x1B8A PUSH2 0x3DDE JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD PUSH1 0x2 ADD SLOAD PUSH1 0x1 PUSH1 0x50 SHL SWAP1 DIV PUSH5 0xFFFFFFFFFF AND GT ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x1BEE JUMPI POP TIMESTAMP PUSH1 0x5 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1BCA JUMPI PUSH2 0x1BCA PUSH2 0x3DDE JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD PUSH1 0x2 ADD SLOAD PUSH1 0x1 PUSH1 0x78 SHL SWAP1 DIV PUSH5 0xFFFFFFFFFF AND GT JUMPDEST DUP1 ISZERO PUSH2 0x1C2B JUMPI POP PUSH1 0x1 PUSH1 0x5 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1C0A JUMPI PUSH2 0x1C0A PUSH2 0x3DDE JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD PUSH1 0x2 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH2 0xFFFF AND GT JUMPDEST ISZERO PUSH2 0x1D09 JUMPI PUSH1 0x5 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1C43 JUMPI PUSH2 0x1C43 PUSH2 0x3DDE JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x1C5F SWAP1 PUSH2 0x3DA4 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1C8B SWAP1 PUSH2 0x3DA4 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1CD8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1CAD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1CD8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1CBB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1CEF JUMPI PUSH2 0x1CEF PUSH2 0x3DDE JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP2 PUSH1 0x1 ADD SWAP2 POP DUP4 DUP3 LT ISZERO PUSH2 0x1D11 JUMPI JUMPDEST PUSH1 0x1 ADD PUSH2 0x1B2D JUMP JUMPDEST POP SWAP1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x1D23 PUSH2 0x9B1 JUMP JUMPDEST PUSH2 0x1D66 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x135D5CDD081899481BDB881D1A1948189BD85C99 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xF9A JUMP JUMPDEST PUSH1 0x1 DUP6 PUSH2 0xFFFF AND GT DUP1 ISZERO PUSH2 0x1D7F JUMPI POP PUSH2 0x101 DUP6 PUSH2 0xFFFF AND LT JUMPDEST PUSH2 0x1DCB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x696E76616C6964206E756D626572206F66206F7074696F6E7300000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xF9A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x9 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1DDE SWAP2 SWAP1 PUSH2 0x408D JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x9 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 DUP2 ADD DUP1 SLOAD PUSH15 0xFFFFFFFFFFFFFFFFFFFF0000000000 NOT AND PUSH6 0x10000000000 PUSH5 0xFFFFFFFFFF DUP8 DUP2 AND SWAP2 SWAP1 SWAP2 MUL PUSH5 0xFFFFFFFFFF PUSH1 0x50 SHL NOT AND SWAP2 SWAP1 SWAP2 OR PUSH1 0x1 PUSH1 0x50 SHL SWAP2 DUP7 AND SWAP2 SWAP1 SWAP2 MUL OR SWAP1 SSTORE PUSH1 0x1 DUP2 ADD DUP1 SLOAD PUSH2 0xFFFF NOT AND PUSH2 0xFFFF DUP9 AND OR SWAP1 SSTORE DUP1 PUSH2 0x1E5D DUP9 DUP11 DUP4 PUSH2 0x412F JUMP JUMPDEST POP PUSH2 0x1E71 DUP9 DUP9 PUSH1 0x9 SLOAD PUSH1 0x0 DUP10 DUP10 DUP10 DUP10 PUSH2 0x3172 JUMP JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E96 PUSH1 0x6 SLOAD PUSH1 0xF DUP2 DUP2 SIGNEXTEND PUSH1 0x1 PUSH1 0x80 SHL SWAP1 SWAP3 DIV SWAP1 SIGNEXTEND SUB SWAP1 JUMP JUMPDEST SWAP1 POP PUSH2 0x1EA0 PUSH2 0x34BF JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x21AB JUMPI PUSH2 0x1EB7 PUSH1 0x6 DUP3 PUSH2 0x3101 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP2 MLOAD PUSH2 0x140 DUP2 ADD SWAP1 SWAP3 MSTORE DUP1 SLOAD SWAP3 SWAP5 POP SWAP1 SWAP2 DUP3 SWAP1 DUP3 SWAP1 PUSH2 0x1EE5 SWAP1 PUSH2 0x3DA4 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1F11 SWAP1 PUSH2 0x3DA4 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1F5E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1F33 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1F5E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1F41 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x1 DUP3 ADD SLOAD PUSH5 0xFFFFFFFFFF SWAP1 DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x4 SWAP1 SWAP3 ADD SLOAD PUSH1 0xFF DUP2 AND PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x100 DUP1 DUP3 DIV PUSH3 0xFFFFFF AND PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x20 SHL DUP3 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB AND PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x70 SHL DUP3 DIV PUSH2 0xFFFF SWAP1 DUP2 AND PUSH1 0xE0 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0x80 SHL DUP4 DIV AND SWAP1 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x90 SHL SWAP1 DIV DUP3 AND PUSH2 0x120 SWAP2 DUP3 ADD MSTORE DUP3 ADD MLOAD SWAP2 SWAP5 POP TIMESTAMP SWAP2 AND LT DUP1 ISZERO PUSH2 0x2010 JUMPI POP DUP5 DUP4 PUSH1 0x20 ADD MLOAD PUSH5 0xFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x2025 JUMPI POP DUP5 DUP4 PUSH2 0x100 ADD MLOAD PUSH2 0xFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x21A3 JUMPI PUSH2 0xFFFF DUP6 AND PUSH1 0xE0 DUP5 ADD MSTORE PUSH1 0xC SLOAD PUSH2 0x2041 SWAP1 TIMESTAMP PUSH2 0x408D JUMP JUMPDEST PUSH5 0xFFFFFFFFFF AND PUSH2 0x120 DUP5 ADD MSTORE PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP4 MLOAD DUP5 SWAP2 SWAP1 DUP2 SWAP1 PUSH2 0x206D SWAP1 DUP3 PUSH2 0x3FB8 JUMP JUMPDEST POP PUSH1 0x20 DUP3 DUP2 ADD MLOAD PUSH1 0x1 DUP4 ADD DUP1 SLOAD PUSH5 0xFFFFFFFFFF NOT AND PUSH5 0xFFFFFFFFFF SWAP3 DUP4 AND OR SWAP1 SSTORE PUSH1 0x40 DUP1 DUP6 ADD MLOAD PUSH1 0x2 DUP6 ADD SSTORE PUSH1 0x60 DUP6 ADD MLOAD PUSH1 0x3 DUP6 ADD SSTORE PUSH1 0x80 DUP6 ADD MLOAD PUSH1 0x4 SWAP1 SWAP5 ADD DUP1 SLOAD PUSH1 0xA0 DUP8 ADD MLOAD PUSH1 0xC0 DUP9 ADD MLOAD PUSH1 0xE0 DUP10 ADD MLOAD PUSH2 0x100 DUP1 DUP12 ADD MLOAD PUSH2 0x120 SWAP1 SWAP12 ADD MLOAD PUSH1 0xFF SWAP1 SWAP11 AND PUSH4 0xFFFFFFFF NOT SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 OR PUSH3 0xFFFFFF SWAP1 SWAP4 AND SWAP1 SWAP4 MUL SWAP2 SWAP1 SWAP2 OR PUSH5 0x100000000 PUSH1 0x1 PUSH1 0x80 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x20 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 MUL PUSH2 0xFFFF PUSH1 0x70 SHL NOT AND OR PUSH1 0x1 PUSH1 0x70 SHL PUSH2 0xFFFF SWAP3 DUP4 AND MUL OR PUSH7 0xFFFFFFFFFFFFFF PUSH1 0x80 SHL NOT AND PUSH1 0x1 PUSH1 0x80 SHL SWAP2 SWAP1 SWAP8 AND MUL PUSH5 0xFFFFFFFFFF PUSH1 0x90 SHL NOT AND SWAP6 SWAP1 SWAP6 OR PUSH1 0x1 PUSH1 0x90 SHL SWAP5 SWAP1 SWAP3 AND SWAP4 SWAP1 SWAP4 MUL OR SWAP1 SWAP3 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0xA SWAP1 SWAP3 MSTORE SWAP1 DUP2 SWAP1 KECCAK256 SWAP1 MLOAD PUSH32 0xF20A22B1AA6D8BA4BF99C845FB1F02F4879BA83155BDE0F82F49CB58675DF268 SWAP2 PUSH2 0x219A SWAP2 DUP9 SWAP2 DUP7 SWAP2 PUSH2 0x41EE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST PUSH1 0x1 ADD PUSH2 0x1EA4 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x31A9108F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE CALLER SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x6352211E SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x21FB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x221F SWAP2 SWAP1 PUSH2 0x3E5B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 ISZERO PUSH2 0x2250 JUMPI POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH1 0x1 PUSH1 0x70 SHL SWAP1 DIV PUSH2 0xFFFF AND DUP4 EQ JUMPDEST PUSH2 0x229C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D757374206265206F776E6572206F662061737369676E65642077697A617264 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xF9A JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x22AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP2 MLOAD PUSH2 0x140 DUP2 ADD SWAP1 SWAP3 MSTORE DUP1 SLOAD DUP3 SWAP1 DUP3 SWAP1 PUSH2 0x22D2 SWAP1 PUSH2 0x3DA4 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x22FE SWAP1 PUSH2 0x3DA4 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x234B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2320 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x234B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x232E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x1 DUP3 DUP2 ADD SLOAD PUSH5 0xFFFFFFFFFF SWAP1 DUP2 AND PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x2 DUP5 ADD SLOAD PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x4 SWAP1 SWAP4 ADD SLOAD PUSH1 0xFF DUP2 AND PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x100 DUP1 DUP3 DIV PUSH3 0xFFFFFF AND PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0x20 SHL DUP3 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB AND PUSH1 0xC0 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0x70 SHL DUP3 DIV PUSH2 0xFFFF SWAP1 DUP2 AND PUSH1 0xE0 DUP7 ADD MSTORE PUSH1 0x1 PUSH1 0x80 SHL DUP4 DIV DUP2 AND DUP3 DUP7 ADD MSTORE PUSH1 0x1 PUSH1 0x90 SHL SWAP1 SWAP3 DIV SWAP1 SWAP5 AND PUSH2 0x120 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP2 DUP4 ADD MLOAD SWAP3 SWAP4 POP PUSH1 0x0 SWAP3 AND ISZERO PUSH2 0x2468 JUMPI PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x2466 JUMPI DUP5 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x2411 JUMPI PUSH2 0x2411 PUSH2 0x3DDE JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x242B SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2453 JUMPI PUSH2 0x2453 PUSH2 0x3DDE JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0x23F6 JUMP JUMPDEST POP JUMPDEST PUSH1 0x0 DUP5 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x247B SWAP2 SWAP1 PUSH2 0x3DF4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 DUP2 DUP6 PUSH1 0x40 ADD MLOAD EQ PUSH2 0x24A7 JUMPI PUSH1 0x0 PUSH2 0x24AA JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH1 0x20 DUP7 DUP2 ADD MLOAD PUSH1 0x40 DUP1 MLOAD DUP13 DUP2 MSTORE PUSH5 0xFFFFFFFFFF SWAP1 SWAP3 AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP2 ADD DUP10 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0xFF SWAP2 SWAP1 SWAP2 AND PUSH1 0x1 DUP2 EQ PUSH1 0x80 DUP4 ADD MSTORE SWAP2 POP PUSH32 0xE3F0E138F100DEAF328BA1DEF71C39DADE8CD971BA0074D935EE648E54532FAE SWAP1 PUSH1 0xA0 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 DUP1 PUSH1 0x1 SUB PUSH2 0x27CD JUMPI PUSH1 0x0 PUSH1 0x2 DUP7 PUSH1 0xC0 ADD MLOAD PUSH2 0x252D SWAP2 SWAP1 PUSH2 0x42B9 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0xE0 DUP9 ADD MLOAD PUSH1 0x40 MLOAD PUSH4 0x31A9108F PUSH1 0xE1 SHL DUP2 MSTORE PUSH2 0xFFFF SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP3 POP PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x6352211E SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2590 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x25B4 SWAP2 SWAP1 PUSH2 0x3E5B JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x20 DUP10 ADD MLOAD PUSH1 0xA0 DUP11 ADD MLOAD PUSH1 0x40 MLOAD PUSH4 0x8AD4D6A5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH5 0xFFFFFFFFFF SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH3 0xFFFFFF AND PUSH1 0x24 DUP3 ADD MSTORE SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x8AD4D6A5 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2616 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x262A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x2 SLOAD PUSH1 0xE0 DUP11 ADD MLOAD PUSH1 0xD SLOAD PUSH1 0x40 MLOAD PUSH4 0x8AD4D6A5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH2 0xFFFF SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP3 POP PUSH4 0x8AD4D6A5 SWAP2 POP PUSH1 0x44 ADD JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2686 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x269A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 POP PUSH2 0x26B7 DUP3 DUP3 PUSH2 0x3513 JUMP JUMPDEST POP PUSH1 0x1 DUP2 ADD DUP1 SLOAD PUSH5 0xFFFFFFFFFF NOT AND SWAP1 SSTORE PUSH1 0x0 PUSH1 0x2 DUP3 ADD DUP2 SWAP1 SSTORE PUSH1 0x3 DUP3 ADD DUP2 SWAP1 SSTORE PUSH1 0x4 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xB8 SHL SUB NOT AND SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP6 SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2735 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x273A JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x275C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF9A SWAP1 PUSH2 0x42ED JUMP JUMPDEST PUSH1 0x40 MLOAD CALLER SWAP1 DUP6 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x279C JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x27A1 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP DUP2 PUSH2 0x27C4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF9A SWAP1 PUSH2 0x42ED JUMP JUMPDEST POP POP POP POP PUSH2 0x2B38 JUMP JUMPDEST DUP5 PUSH2 0x100 ADD MLOAD PUSH2 0xFFFF AND PUSH1 0x0 SUB PUSH2 0x28FF JUMPI PUSH2 0xFFFF DUP9 AND PUSH2 0x100 DUP7 ADD MSTORE PUSH1 0x60 DUP6 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP6 MLOAD DUP7 SWAP2 SWAP1 DUP2 SWAP1 PUSH2 0x280F SWAP1 DUP3 PUSH2 0x3FB8 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH5 0xFFFFFFFFFF NOT AND PUSH5 0xFFFFFFFFFF SWAP3 DUP4 AND OR SWAP1 SSTORE PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x2 DUP4 ADD SSTORE PUSH1 0x60 DUP4 ADD MLOAD PUSH1 0x3 DUP4 ADD SSTORE PUSH1 0x80 DUP4 ADD MLOAD PUSH1 0x4 SWAP1 SWAP3 ADD DUP1 SLOAD PUSH1 0xA0 DUP6 ADD MLOAD PUSH1 0xC0 DUP7 ADD MLOAD PUSH1 0xE0 DUP8 ADD MLOAD PUSH2 0x100 DUP1 DUP10 ADD MLOAD PUSH2 0x120 SWAP1 SWAP10 ADD MLOAD PUSH1 0xFF SWAP1 SWAP9 AND PUSH4 0xFFFFFFFF NOT SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 OR PUSH3 0xFFFFFF SWAP1 SWAP4 AND SWAP1 SWAP4 MUL SWAP2 SWAP1 SWAP2 OR PUSH5 0x100000000 PUSH1 0x1 PUSH1 0x80 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x20 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 MUL PUSH2 0xFFFF PUSH1 0x70 SHL NOT AND OR PUSH1 0x1 PUSH1 0x70 SHL PUSH2 0xFFFF SWAP3 DUP4 AND MUL OR PUSH7 0xFFFFFFFFFFFFFF PUSH1 0x80 SHL NOT AND PUSH1 0x1 PUSH1 0x80 SHL SWAP2 SWAP1 SWAP6 AND MUL PUSH5 0xFFFFFFFFFF PUSH1 0x90 SHL NOT AND SWAP4 SWAP1 SWAP4 OR PUSH1 0x1 PUSH1 0x90 SHL SWAP3 SWAP1 SWAP2 AND SWAP2 SWAP1 SWAP2 MUL OR SWAP1 SSTORE PUSH1 0x0 SWAP3 POP JUMPDEST DUP2 DUP6 PUSH1 0x60 ADD MLOAD SUB PUSH2 0x2A52 JUMPI PUSH1 0x0 PUSH1 0x2 DUP7 PUSH1 0xC0 ADD MLOAD PUSH2 0x291D SWAP2 SWAP1 PUSH2 0x42B9 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x100 DUP9 ADD MLOAD PUSH1 0x40 MLOAD PUSH4 0x31A9108F PUSH1 0xE1 SHL DUP2 MSTORE PUSH2 0xFFFF SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP3 POP PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x6352211E SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2981 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x29A5 SWAP2 SWAP1 PUSH2 0x3E5B JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x100 DUP10 ADD MLOAD PUSH1 0xD SLOAD PUSH1 0x40 MLOAD PUSH4 0x8AD4D6A5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH2 0xFFFF SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x8AD4D6A5 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x29FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2A12 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x2 SLOAD PUSH1 0xD SLOAD PUSH1 0x40 MLOAD PUSH4 0x8AD4D6A5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP16 SWAP1 MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP3 POP PUSH4 0x8AD4D6A5 SWAP2 POP PUSH1 0x44 ADD PUSH2 0x266C JUMP JUMPDEST PUSH1 0xC0 DUP6 ADD MLOAD PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 PUSH2 0x2A7C DUP3 DUP3 PUSH2 0x3513 JUMP JUMPDEST POP PUSH1 0x1 DUP2 ADD DUP1 SLOAD PUSH5 0xFFFFFFFFFF NOT AND SWAP1 SSTORE PUSH1 0x0 PUSH1 0x2 DUP3 ADD DUP2 SWAP1 SSTORE PUSH1 0x3 DUP3 ADD DUP2 SWAP1 SSTORE PUSH1 0x4 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xB8 SHL SUB NOT AND SWAP1 SSTORE DUP1 PUSH2 0x2AC3 PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2B0D JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2B12 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x2B34 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF9A SWAP1 PUSH2 0x42ED JUMP JUMPDEST POP POP POP JUMPDEST DUP3 ISZERO PUSH2 0x1E71 JUMPI PUSH1 0x0 PUSH2 0x2B59 PUSH1 0x6 SLOAD PUSH1 0xF DUP2 DUP2 SIGNEXTEND PUSH1 0x1 PUSH1 0x80 SHL SWAP1 SWAP3 DIV SWAP1 SIGNEXTEND SUB SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2BC3 JUMPI DUP9 PUSH2 0x2B72 PUSH1 0x6 DUP4 PUSH2 0x3101 JUMP JUMPDEST SUB PUSH2 0x2BBB JUMPI PUSH1 0x0 PUSH2 0x2B83 PUSH1 0x6 PUSH2 0x3343 JUMP JUMPDEST SWAP1 POP DUP2 ISZERO PUSH2 0x2BB9 JUMPI PUSH1 0x6 SLOAD DUP2 SWAP1 PUSH1 0x7 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x2BA4 SWAP1 DUP7 SWAP1 PUSH1 0xF SIGNEXTEND PUSH2 0x431B JUMP JUMPDEST PUSH1 0xF SIGNEXTEND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SSTORE JUMPDEST POP JUMPDEST PUSH1 0x1 ADD PUSH2 0x2B5E JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2BF9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF9A SWAP1 PUSH2 0x3E91 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x2C5E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xF9A JUMP JUMPDEST PUSH2 0x2C67 DUP2 PUSH2 0x32F1 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2C86 PUSH1 0x6 SLOAD PUSH1 0xF DUP2 DUP2 SIGNEXTEND PUSH1 0x1 PUSH1 0x80 SHL SWAP1 SWAP3 DIV SWAP1 SIGNEXTEND SUB SWAP1 JUMP JUMPDEST SWAP1 POP PUSH2 0x2C90 PUSH2 0x34BF JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2E2F JUMPI PUSH1 0xA PUSH1 0x0 PUSH2 0x2CAA PUSH1 0x6 DUP5 PUSH2 0x3101 JUMP JUMPDEST PUSH1 0x0 SHR DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH2 0x140 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD DUP1 SLOAD PUSH2 0x2CD7 SWAP1 PUSH2 0x3DA4 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2D03 SWAP1 PUSH2 0x3DA4 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2D50 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D25 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2D50 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2D33 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x1 DUP3 ADD SLOAD PUSH5 0xFFFFFFFFFF SWAP1 DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x4 SWAP1 SWAP3 ADD SLOAD PUSH1 0xFF DUP2 AND PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x100 DUP1 DUP3 DIV PUSH3 0xFFFFFF AND PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x20 SHL DUP3 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB AND PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x70 SHL DUP3 DIV PUSH2 0xFFFF SWAP1 DUP2 AND PUSH1 0xE0 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0x80 SHL DUP4 DIV AND SWAP1 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x90 SHL SWAP1 DIV DUP3 AND PUSH2 0x120 SWAP2 DUP3 ADD MSTORE DUP3 ADD MLOAD SWAP2 SWAP4 POP TIMESTAMP SWAP2 AND LT DUP1 ISZERO PUSH2 0x2E02 JUMPI POP DUP5 DUP3 PUSH1 0x20 ADD MLOAD PUSH5 0xFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x2E17 JUMPI POP DUP5 DUP3 PUSH2 0x100 ADD MLOAD PUSH2 0xFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x2E27 JUMPI POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x2C93 JUMP JUMPDEST POP PUSH1 0x0 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x5 SLOAD DUP2 LT ISZERO PUSH2 0x2FD3 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2E58 SWAP2 SWAP1 PUSH2 0x435C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x5 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x2E81 JUMPI PUSH2 0x2E81 PUSH2 0x3DDE JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x1 ADD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2EA2 SWAP2 SWAP1 PUSH2 0x4378 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SUB PUSH2 0x2FCB JUMPI PUSH1 0x0 PUSH1 0x5 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x2ED2 JUMPI PUSH2 0x2ED2 PUSH2 0x3DDE JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD SWAP1 POP PUSH1 0x0 PUSH1 0x5 PUSH1 0x1 PUSH1 0x5 DUP1 SLOAD SWAP1 POP PUSH2 0x2EF8 SWAP2 SWAP1 PUSH2 0x40C8 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x2F08 JUMPI PUSH2 0x2F08 PUSH2 0x3DDE JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD SWAP1 POP DUP1 SWAP2 POP PUSH1 0x5 PUSH1 0x1 PUSH1 0x5 DUP1 SLOAD SWAP1 POP PUSH2 0x2F2F SWAP2 SWAP1 PUSH2 0x40C8 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x2F3F JUMPI PUSH2 0x2F3F PUSH2 0x3DDE JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH1 0x0 PUSH2 0x2F5F SWAP2 SWAP1 PUSH2 0x3513 JUMP JUMPDEST POP PUSH1 0x2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xB0 SHL SUB NOT AND SWAP1 SSTORE PUSH1 0x5 DUP1 SLOAD PUSH2 0x2F81 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x40C8 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x2F91 JUMPI PUSH2 0x2F91 PUSH2 0x3DDE JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH1 0x0 PUSH2 0x2FB1 SWAP2 SWAP1 PUSH2 0x3513 JUMP JUMPDEST POP PUSH1 0x2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xB0 SHL SUB NOT AND SWAP1 SSTORE POP PUSH2 0x2FD3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x2E3D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x9 SLOAD DUP3 LT PUSH2 0x301D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x1B9BC81CDD58DA081C1C9BDC1BDCD85B PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xF9A JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0xFFFF AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x304A JUMPI PUSH2 0x304A PUSH2 0x3612 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x3073 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x30FA JUMPI PUSH1 0x8 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD DUP2 PUSH1 0x8 DUP2 LT PUSH2 0x30A9 JUMPI PUSH2 0x30A9 PUSH2 0x3DDE JUMP JUMPDEST PUSH1 0x10 SWAP2 DUP3 DUP3 DIV ADD SWAP2 SWAP1 MOD PUSH1 0x2 MUL SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x30D5 JUMPI PUSH2 0x30D5 PUSH2 0x3DDE JUMP JUMPDEST PUSH2 0xFFFF SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE DUP1 PUSH2 0x30F2 DUP2 PUSH2 0x4116 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x3079 JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x3124 PUSH2 0x3110 DUP5 PUSH2 0x33C2 JUMP JUMPDEST DUP6 SLOAD PUSH2 0x311F SWAP2 SWAP1 PUSH1 0xF SIGNEXTEND PUSH2 0x431B JUMP JUMPDEST PUSH2 0x3430 JUMP JUMPDEST DUP5 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x80 SHL SWAP1 DIV PUSH1 0xF SWAP1 DUP2 SIGNEXTEND SWAP1 DUP3 SWAP1 SIGNEXTEND SLT PUSH2 0x3157 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2D0483C5 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xF SIGNEXTEND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 SWAP4 SWAP1 SWAP4 ADD PUSH1 0x20 MSTORE POP POP PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP1 DUP4 SSTORE PUSH1 0x0 DUP4 DUP2 MSTORE SWAP2 SWAP3 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0x3195 JUMPI PUSH2 0x3195 PUSH2 0x3DDE JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD SWAP1 POP PUSH1 0x1 DUP2 ADD PUSH2 0x31B6 DUP11 DUP13 DUP4 PUSH2 0x412F JUMP JUMPDEST POP PUSH1 0x0 DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP8 DUP2 PUSH1 0x2 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH5 0xFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH5 0xFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP7 DUP2 PUSH1 0x2 ADD PUSH1 0x6 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP DUP6 DUP2 PUSH1 0x2 ADD PUSH1 0x7 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH3 0xFFFFFF MUL NOT AND SWAP1 DUP4 PUSH3 0xFFFFFF AND MUL OR SWAP1 SSTORE POP DUP5 DUP2 PUSH1 0x2 ADD PUSH1 0xA PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH5 0xFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH5 0xFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 DUP2 PUSH1 0x2 ADD PUSH1 0xF PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH5 0xFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH5 0xFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 DUP2 PUSH1 0x2 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH2 0xFFFF MUL NOT AND SWAP1 DUP4 PUSH2 0xFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0x2810025950962E3CD71FD98C2DC111FFBDB2A129B36771DF8D36A7DE2FE3E4E0 DUP11 DUP11 DUP11 DUP11 DUP11 DUP11 DUP11 DUP11 PUSH1 0x40 MLOAD PUSH2 0x32DD SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x43EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x335E DUP3 SLOAD PUSH1 0xF DUP2 DUP2 SIGNEXTEND PUSH1 0x1 PUSH1 0x80 SHL SWAP1 SWAP3 DIV SWAP1 SIGNEXTEND SGT ISZERO SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x337C JUMPI PUSH1 0x40 MLOAD PUSH4 0x1ED95095 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP DUP1 SLOAD PUSH1 0xF SIGNEXTEND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP1 DUP5 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP1 SLOAD SWAP3 SWAP1 SSTORE DUP4 SLOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP3 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP2 SSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xFF SHL SUB DUP3 GT ISZERO PUSH2 0x342C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53616665436173743A2076616C756520646F65736E27742066697420696E2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x371034B73A191A9B PUSH1 0xC1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xF9A JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH16 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT DUP3 SLT DUP1 ISZERO SWAP1 PUSH2 0x3463 JUMPI POP PUSH16 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SGT ISZERO JUMPDEST PUSH2 0x342C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53616665436173743A2076616C756520646F65736E27742066697420696E2031 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x32382062697473 PUSH1 0xC8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xF9A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH2 0x140 DUP2 ADD DUP3 MSTORE PUSH1 0x60 DUP1 DUP3 MSTORE PUSH1 0x0 PUSH1 0x20 DUP4 ADD DUP2 SWAP1 MSTORE SWAP3 DUP3 ADD DUP4 SWAP1 MSTORE DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0xA0 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0xC0 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0xE0 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x100 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x120 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 JUMP JUMPDEST POP DUP1 SLOAD PUSH2 0x351F SWAP1 PUSH2 0x3DA4 JUMP JUMPDEST PUSH1 0x0 DUP3 SSTORE DUP1 PUSH1 0x1F LT PUSH2 0x352F JUMPI POP POP JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0x2C67 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x342C JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x3549 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x356F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3591 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x3579 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x14AF JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x35BA DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x3576 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xA0 DUP2 MSTORE PUSH1 0x0 PUSH2 0x35E1 PUSH1 0xA0 DUP4 ADD DUP9 PUSH2 0x35A2 JUMP JUMPDEST PUSH2 0xFFFF SWAP7 SWAP1 SWAP7 AND PUSH1 0x20 DUP4 ADD MSTORE POP PUSH5 0xFFFFFFFFFF SWAP4 DUP5 AND PUSH1 0x40 DUP3 ADD MSTORE SWAP2 DUP4 AND PUSH1 0x60 DUP4 ADD MSTORE SWAP1 SWAP2 AND PUSH1 0x80 SWAP1 SWAP2 ADD MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x3650 JUMPI PUSH2 0x3650 PUSH2 0x3612 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3669 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT ISZERO PUSH2 0x3684 JUMPI PUSH2 0x3684 PUSH2 0x3612 JUMP JUMPDEST DUP2 PUSH1 0x5 SHL PUSH2 0x3693 DUP3 DUP3 ADD PUSH2 0x3628 JUMP JUMPDEST SWAP3 DUP4 MSTORE DUP5 DUP2 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP1 DUP8 DUP6 GT ISZERO PUSH2 0x36AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP8 ADD SWAP3 POP JUMPDEST DUP5 DUP4 LT ISZERO PUSH2 0x36CC JUMPI DUP3 CALLDATALOAD DUP3 MSTORE SWAP2 DUP4 ADD SWAP2 SWAP1 DUP4 ADD SWAP1 PUSH2 0x36B3 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x36EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x3709 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3715 DUP7 DUP3 DUP8 ADD PUSH2 0x3658 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x372B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x100 DUP1 DUP4 MSTORE PUSH2 0x374A DUP2 DUP5 ADD DUP13 PUSH2 0x35A2 JUMP JUMPDEST SWAP10 ISZERO ISZERO PUSH1 0x20 DUP5 ADD MSTORE POP POP PUSH5 0xFFFFFFFFFF SWAP7 DUP8 AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0xFF SWAP6 SWAP1 SWAP6 AND PUSH1 0x60 DUP7 ADD MSTORE PUSH3 0xFFFFFF SWAP4 SWAP1 SWAP4 AND PUSH1 0x80 DUP6 ADD MSTORE SWAP1 DUP5 AND PUSH1 0xA0 DUP5 ADD MSTORE SWAP1 SWAP3 AND PUSH1 0xC0 DUP3 ADD MSTORE PUSH2 0xFFFF SWAP1 SWAP2 AND PUSH1 0xE0 SWAP1 SWAP2 ADD MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH5 0xFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x37B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x37C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x37D0 DUP3 PUSH2 0x379B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x140 DUP3 MLOAD DUP2 DUP6 MSTORE PUSH2 0x37ED DUP3 DUP7 ADD DUP3 PUSH2 0x35A2 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH2 0x3808 PUSH1 0x20 DUP7 ADD DUP3 PUSH5 0xFFFFFFFFFF AND SWAP1 MSTORE JUMP JUMPDEST POP PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x60 DUP4 ADD MLOAD PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x80 DUP4 ADD MLOAD PUSH2 0x3831 PUSH1 0x80 DUP7 ADD DUP3 PUSH1 0xFF AND SWAP1 MSTORE JUMP JUMPDEST POP PUSH1 0xA0 DUP4 ADD MLOAD PUSH2 0x3848 PUSH1 0xA0 DUP7 ADD DUP3 PUSH3 0xFFFFFF AND SWAP1 MSTORE JUMP JUMPDEST POP PUSH1 0xC0 DUP4 ADD MLOAD PUSH2 0x3863 PUSH1 0xC0 DUP7 ADD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST POP PUSH1 0xE0 DUP4 ADD MLOAD PUSH2 0x3879 PUSH1 0xE0 DUP7 ADD DUP3 PUSH2 0xFFFF AND SWAP1 MSTORE JUMP JUMPDEST POP PUSH2 0x100 DUP4 DUP2 ADD MLOAD PUSH2 0xFFFF AND SWAP1 DUP6 ADD MSTORE PUSH2 0x120 DUP1 DUP5 ADD MLOAD PUSH5 0xFFFFFFFFFF DUP2 AND DUP3 DUP8 ADD MSTORE PUSH2 0x1D11 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD PUSH1 0x40 DUP4 MSTORE DUP1 DUP6 MLOAD DUP1 DUP4 MSTORE PUSH1 0x60 DUP6 ADD SWAP2 POP PUSH1 0x60 DUP2 PUSH1 0x5 SHL DUP7 ADD ADD SWAP3 POP PUSH1 0x20 DUP1 DUP9 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x38F8 JUMPI PUSH1 0x5F NOT DUP9 DUP8 SUB ADD DUP6 MSTORE PUSH2 0x38E6 DUP7 DUP4 MLOAD PUSH2 0x37D7 JUMP JUMPDEST SWAP6 POP SWAP4 DUP3 ADD SWAP4 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x38CA JUMP JUMPDEST POP POP DUP6 DUP5 SUB DUP2 DUP8 ADD MSTORE DUP7 MLOAD DUP1 DUP6 MSTORE DUP8 DUP3 ADD SWAP5 DUP3 ADD SWAP4 POP SWAP2 POP PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x392F JUMPI DUP5 MLOAD DUP5 MSTORE SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x3913 JUMP JUMPDEST POP SWAP2 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x394E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x3965 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x397D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH3 0xFFFFFF DUP2 AND DUP2 EQ PUSH2 0x37B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH2 0xFFFF DUP2 AND DUP2 EQ PUSH2 0x37B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xC0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x39C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x39DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x39E6 DUP11 DUP3 DUP12 ADD PUSH2 0x393C JUMP JUMPDEST SWAP1 SWAP9 POP SWAP7 POP POP PUSH1 0x20 DUP9 ADD CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x3A00 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP5 POP PUSH2 0x3A0E PUSH1 0x40 DUP10 ADD PUSH2 0x3984 JUMP JUMPDEST SWAP4 POP PUSH2 0x3A1C PUSH1 0x60 DUP10 ADD PUSH2 0x379B JUMP JUMPDEST SWAP3 POP PUSH2 0x3A2A PUSH1 0x80 DUP10 ADD PUSH2 0x379B JUMP JUMPDEST SWAP2 POP PUSH2 0x3A38 PUSH1 0xA0 DUP10 ADD PUSH2 0x3997 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3A59 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2C67 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3A8F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x37D0 DUP2 PUSH2 0x3A68 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3AAB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x3AC4 JUMPI PUSH2 0x3AC4 PUSH2 0x3612 JUMP JUMPDEST PUSH2 0x3AD7 PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD PUSH2 0x3628 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x3AEC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3B1E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x3B34 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3B40 DUP7 DUP3 DUP8 ADD PUSH2 0x3A9A JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH2 0x3B56 PUSH1 0x40 DUP6 ADD PUSH2 0x379B JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3B74 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP2 CALLDATALOAD SWAP4 PUSH1 0x20 DUP4 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 SWAP1 SWAP3 ADD CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x140 DUP1 DUP4 MSTORE PUSH2 0x3B9F DUP2 DUP5 ADD DUP15 PUSH2 0x35A2 JUMP JUMPDEST PUSH5 0xFFFFFFFFFF SWAP13 DUP14 AND PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x40 DUP5 ADD SWAP12 SWAP1 SWAP12 MSTORE POP POP PUSH1 0x60 DUP2 ADD SWAP8 SWAP1 SWAP8 MSTORE PUSH1 0xFF SWAP6 SWAP1 SWAP6 AND PUSH1 0x80 DUP8 ADD MSTORE PUSH3 0xFFFFFF SWAP4 SWAP1 SWAP4 AND PUSH1 0xA0 DUP7 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0xC0 DUP6 ADD MSTORE PUSH2 0xFFFF SWAP1 DUP2 AND PUSH1 0xE0 DUP6 ADD MSTORE AND PUSH2 0x100 DUP4 ADD MSTORE SWAP1 SWAP3 AND PUSH2 0x120 SWAP1 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x37D0 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x37D7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 ADD DUP2 DUP5 MSTORE DUP1 DUP6 MLOAD DUP1 DUP4 MSTORE PUSH1 0x40 DUP7 ADD SWAP2 POP PUSH1 0x40 DUP2 PUSH1 0x5 SHL DUP8 ADD ADD SWAP3 POP DUP4 DUP8 ADD PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x3C74 JUMPI PUSH1 0x3F NOT DUP9 DUP7 SUB ADD DUP5 MSTORE PUSH2 0x3C62 DUP6 DUP4 MLOAD PUSH2 0x35A2 JUMP JUMPDEST SWAP5 POP SWAP3 DUP6 ADD SWAP3 SWAP1 DUP6 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x3C46 JUMP JUMPDEST POP SWAP3 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xC0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x3C9C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x3CB2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3CBE DUP11 DUP3 DUP12 ADD PUSH2 0x393C JUMP JUMPDEST SWAP1 SWAP9 POP SWAP7 POP PUSH2 0x3A00 SWAP1 POP PUSH1 0x20 DUP10 ADD PUSH2 0x3997 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3CE6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x3D0A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3D16 DUP7 DUP3 DUP8 ADD PUSH2 0x3658 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3D32 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x3D48 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3D54 DUP5 DUP3 DUP6 ADD PUSH2 0x3A9A JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3D98 JUMPI DUP4 MLOAD PUSH2 0xFFFF AND DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x3D78 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x3DB8 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x3DD8 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x0 SWAP1 DUP3 SWAP1 PUSH1 0x20 DUP1 DUP7 ADD DUP5 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3E1E JUMPI DUP2 MLOAD DUP6 MSTORE SWAP4 DUP3 ADD SWAP4 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x3E02 JUMP JUMPDEST POP SWAP3 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST DUP5 DUP2 MSTORE DUP4 ISZERO ISZERO PUSH1 0x20 DUP3 ADD MSTORE DUP3 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x3E51 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x35A2 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3E6D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x37D0 DUP2 PUSH2 0x3A68 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3E8A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x37D0 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x35A2 JUMP JUMPDEST PUSH1 0x0 DUP2 SLOAD PUSH2 0x3EE6 DUP2 PUSH2 0x3DA4 JUMP JUMPDEST DUP1 DUP6 MSTORE PUSH1 0x20 PUSH1 0x1 DUP4 DUP2 AND DUP1 ISZERO PUSH2 0x3F03 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x3F1D JUMPI PUSH2 0x3F4B JUMP JUMPDEST PUSH1 0xFF NOT DUP6 AND DUP9 DUP5 ADD MSTORE DUP4 ISZERO ISZERO PUSH1 0x5 SHL DUP9 ADD DUP4 ADD SWAP6 POP PUSH2 0x3F4B JUMP JUMPDEST DUP7 PUSH1 0x0 MSTORE DUP3 PUSH1 0x0 KECCAK256 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x3F43 JUMPI DUP2 SLOAD DUP11 DUP3 ADD DUP7 ADD MSTORE SWAP1 DUP4 ADD SWAP1 DUP5 ADD PUSH2 0x3F28 JUMP JUMPDEST DUP10 ADD DUP5 ADD SWAP7 POP POP JUMPDEST POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x37D0 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3ED9 JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x3FB3 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x3F90 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3FAF JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x3F9C JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x3FD1 JUMPI PUSH2 0x3FD1 PUSH2 0x3612 JUMP JUMPDEST PUSH2 0x3FE5 DUP2 PUSH2 0x3FDF DUP5 SLOAD PUSH2 0x3DA4 JUMP JUMPDEST DUP5 PUSH2 0x3F69 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x401A JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x4002 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x3FAF JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x4049 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x402A JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x4067 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x40A0 JUMPI PUSH2 0x40A0 PUSH2 0x4077 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFFFF DUP4 DUP2 AND SWAP1 DUP4 AND DUP2 DUP2 LT ISZERO PUSH2 0x40C0 JUMPI PUSH2 0x40C0 PUSH2 0x4077 JUMP JUMPDEST SUB SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x40DA JUMPI PUSH2 0x40DA PUSH2 0x4077 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH5 0xFFFFFFFFFF DUP6 AND DUP2 MSTORE DUP4 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x80 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x4105 PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x35A2 JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x60 DUP4 ADD MSTORE SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x4128 JUMPI PUSH2 0x4128 PUSH2 0x4077 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT ISZERO PUSH2 0x4146 JUMPI PUSH2 0x4146 PUSH2 0x3612 JUMP JUMPDEST PUSH2 0x415A DUP4 PUSH2 0x4154 DUP4 SLOAD PUSH2 0x3DA4 JUMP JUMPDEST DUP4 PUSH2 0x3F69 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F DUP5 GT PUSH1 0x1 DUP2 EQ PUSH2 0x418E JUMPI PUSH1 0x0 DUP6 ISZERO PUSH2 0x4176 JUMPI POP DUP4 DUP3 ADD CALLDATALOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP8 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP7 SWAP1 SHL OR DUP4 SSTORE PUSH2 0x21AB JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP1 DUP4 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x41BF JUMPI DUP7 DUP6 ADD CALLDATALOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x419F JUMP JUMPDEST POP DUP7 DUP3 LT ISZERO PUSH2 0x41DC JUMPI PUSH1 0x0 NOT PUSH1 0xF8 DUP9 PUSH1 0x3 SHL AND SHR NOT DUP5 DUP8 ADD CALLDATALOAD AND DUP2 SSTORE JUMPDEST POP POP PUSH1 0x1 DUP6 PUSH1 0x1 SHL ADD DUP4 SSTORE POP POP POP POP POP JUMP JUMPDEST DUP4 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x140 DUP1 PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x4217 PUSH2 0x1A0 DUP5 ADD DUP6 PUSH2 0x3ED9 JUMP JUMPDEST PUSH1 0x1 DUP6 ADD SLOAD PUSH5 0xFFFFFFFFFF AND PUSH5 0xFFFFFFFFFF DUP2 AND PUSH1 0x80 DUP7 ADD MSTORE POP PUSH1 0x2 DUP6 ADD SLOAD PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0x3 DUP6 ADD SLOAD PUSH1 0xC0 DUP6 ADD MSTORE PUSH1 0x4 DUP6 ADD SLOAD PUSH1 0xFF DUP2 AND PUSH1 0xE0 DUP7 ADD MSTORE PUSH1 0x8 DUP2 SWAP1 SHR PUSH3 0xFFFFFF AND PUSH2 0x100 DUP7 ADD MSTORE PUSH1 0x20 DUP2 SWAP1 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB AND PUSH2 0x120 DUP7 ADD MSTORE PUSH2 0xFFFF PUSH1 0x70 DUP3 SWAP1 SHR DUP2 AND DUP5 DUP8 ADD MSTORE PUSH2 0x429B PUSH2 0x160 DUP8 ADD DUP3 DUP5 PUSH1 0x80 SHR AND PUSH2 0xFFFF AND SWAP1 MSTORE JUMP JUMPDEST POP PUSH1 0x90 DUP2 SWAP1 SHR PUSH5 0xFFFFFFFFFF AND PUSH2 0x180 DUP7 ADD MSTORE POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB DUP1 DUP5 AND DUP1 PUSH2 0x42E1 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP3 AND SWAP2 SWAP1 SWAP2 DIV SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x14 SWAP1 DUP3 ADD MSTORE PUSH20 0x2330B4B632B2103A379039B2B7321022BA3432B9 PUSH1 0x61 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SLT DUP1 ISZERO PUSH1 0x1 PUSH1 0x1 PUSH1 0xFF SHL SUB DUP5 SWAP1 SUB DUP6 SGT AND ISZERO PUSH2 0x433D JUMPI PUSH2 0x433D PUSH2 0x4077 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xFF SHL DUP4 SWAP1 SUB DUP5 SLT DUP2 AND ISZERO PUSH2 0x4356 JUMPI PUSH2 0x4356 PUSH2 0x4077 JUMP JUMPDEST POP POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x436E DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x3576 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 SLOAD PUSH2 0x4386 DUP2 PUSH2 0x3DA4 JUMP JUMPDEST PUSH1 0x1 DUP3 DUP2 AND DUP1 ISZERO PUSH2 0x439E JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x43B3 JUMPI PUSH2 0x3E1E JUMP JUMPDEST PUSH1 0xFF NOT DUP5 AND DUP8 MSTORE DUP3 ISZERO ISZERO DUP4 MUL DUP8 ADD SWAP5 POP PUSH2 0x3E1E JUMP JUMPDEST DUP8 PUSH1 0x0 MSTORE PUSH1 0x20 DUP1 PUSH1 0x0 KECCAK256 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x43D9 JUMPI DUP2 SLOAD DUP11 DUP3 ADD MSTORE SWAP1 DUP5 ADD SWAP1 DUP3 ADD PUSH2 0x43C0 JUMP JUMPDEST POP POP POP SWAP6 SWAP1 SWAP2 ADD SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0xE0 DUP2 MSTORE DUP8 PUSH1 0xE0 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x100 DUP10 DUP12 DUP3 DUP6 ADD CALLDATACOPY PUSH1 0x0 DUP11 DUP5 ADD DUP3 ADD MSTORE PUSH5 0xFFFFFFFFFF SWAP9 DUP10 AND PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0xFF SWAP8 SWAP1 SWAP8 AND PUSH1 0x40 DUP4 ADD MSTORE POP PUSH3 0xFFFFFF SWAP5 SWAP1 SWAP5 AND PUSH1 0x60 DUP6 ADD MSTORE SWAP2 DUP6 AND PUSH1 0x80 DUP5 ADD MSTORE SWAP1 SWAP4 AND PUSH1 0xA0 DUP3 ADD MSTORE PUSH2 0xFFFF SWAP1 SWAP3 AND PUSH1 0xC0 DUP4 ADD MSTORE PUSH1 0x1F SWAP1 SWAP3 ADD PUSH1 0x1F NOT AND ADD ADD SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CHAINID 0xF9 DUP2 SWAP1 PUSH1 0x3 0xED 0xAE CALLDATACOPY EXTCODECOPY DUP8 0xAC ADDRESS 0xD5 RETURNDATACOPY EXTCODECOPY JUMPI 0xD1 PUSH18 0x96F977F425EC6DDC12965623564736F6C63 NUMBER STOP ADDMOD 0xF STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        771,
        23898
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "8": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "LT",
      "path": "2"
    },
    "9": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x185"
    },
    "12": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "13": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "CALLDATALOAD",
      "path": "2"
    },
    "16": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "SHR",
      "path": "2"
    },
    "19": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "DUP1",
      "path": "2"
    },
    "20": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x8D977672"
    },
    "25": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "GT",
      "path": "2"
    },
    "26": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xD1"
    },
    "29": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "30": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "DUP1",
      "path": "2"
    },
    "31": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xD374A217"
    },
    "36": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "GT",
      "path": "2"
    },
    "37": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x8A"
    },
    "40": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "41": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "DUP1",
      "path": "2"
    },
    "42": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xF2FDE38B"
    },
    "47": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "GT",
      "path": "2"
    },
    "48": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x64"
    },
    "51": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "52": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "DUP1",
      "path": "2"
    },
    "53": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xF2FDE38B"
    },
    "58": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "EQ",
      "path": "2"
    },
    "59": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4FD"
    },
    "62": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "63": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "DUP1",
      "path": "2"
    },
    "64": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xF4739BD9"
    },
    "69": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "EQ",
      "path": "2"
    },
    "70": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x51D"
    },
    "73": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "74": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "DUP1",
      "path": "2"
    },
    "75": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xF713B7ED"
    },
    "80": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "EQ",
      "path": "2"
    },
    "81": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x53D"
    },
    "84": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "85": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "DUP1",
      "path": "2"
    },
    "86": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xFF981099"
    },
    "91": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "EQ",
      "path": "2"
    },
    "92": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x55D"
    },
    "95": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "96": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "98": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "DUP1",
      "path": "2"
    },
    "99": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "REVERT",
      "path": "2"
    },
    "100": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "101": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "DUP1",
      "path": "2"
    },
    "102": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xD374A217"
    },
    "107": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "EQ",
      "path": "2"
    },
    "108": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x47D"
    },
    "111": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "112": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "DUP1",
      "path": "2"
    },
    "113": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xE95D2347"
    },
    "118": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "EQ",
      "path": "2"
    },
    "119": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x49D"
    },
    "122": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "123": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "DUP1",
      "path": "2"
    },
    "124": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xF18C51D3"
    },
    "129": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "EQ",
      "path": "2"
    },
    "130": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4DD"
    },
    "133": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "134": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "136": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "DUP1",
      "path": "2"
    },
    "137": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "REVERT",
      "path": "2"
    },
    "138": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "139": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "DUP1",
      "path": "2"
    },
    "140": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x8D977672"
    },
    "145": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "EQ",
      "path": "2"
    },
    "146": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x38F"
    },
    "149": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "150": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "DUP1",
      "path": "2"
    },
    "151": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x8DA5CB5B"
    },
    "156": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "EQ",
      "path": "2"
    },
    "157": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3C5"
    },
    "160": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "161": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "DUP1",
      "path": "2"
    },
    "162": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x90B293D8"
    },
    "167": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "EQ",
      "path": "2"
    },
    "168": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3ED"
    },
    "171": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "172": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "DUP1",
      "path": "2"
    },
    "173": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x976217CD"
    },
    "178": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "EQ",
      "path": "2"
    },
    "179": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x403"
    },
    "182": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "183": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "DUP1",
      "path": "2"
    },
    "184": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xB2BAD544"
    },
    "189": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "EQ",
      "path": "2"
    },
    "190": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x430"
    },
    "193": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "194": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "DUP1",
      "path": "2"
    },
    "195": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xBECA3A16"
    },
    "200": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "EQ",
      "path": "2"
    },
    "201": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x45D"
    },
    "204": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "205": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "207": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "DUP1",
      "path": "2"
    },
    "208": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "REVERT",
      "path": "2"
    },
    "209": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "210": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "DUP1",
      "path": "2"
    },
    "211": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x61F9E9A8"
    },
    "216": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "GT",
      "path": "2"
    },
    "217": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x13E"
    },
    "220": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "221": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "DUP1",
      "path": "2"
    },
    "222": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x715018A6"
    },
    "227": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "GT",
      "path": "2"
    },
    "228": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x118"
    },
    "231": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "232": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "DUP1",
      "path": "2"
    },
    "233": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x715018A6"
    },
    "238": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "EQ",
      "path": "2"
    },
    "239": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x31A"
    },
    "242": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "243": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "DUP1",
      "path": "2"
    },
    "244": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x72E185CE"
    },
    "249": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "EQ",
      "path": "2"
    },
    "250": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x32F"
    },
    "253": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "254": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "DUP1",
      "path": "2"
    },
    "255": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x826B8EBD"
    },
    "260": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "EQ",
      "path": "2"
    },
    "261": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x34F"
    },
    "264": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "265": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "DUP1",
      "path": "2"
    },
    "266": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x8A6655D6"
    },
    "271": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "EQ",
      "path": "2"
    },
    "272": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x36F"
    },
    "275": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "276": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "278": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "DUP1",
      "path": "2"
    },
    "279": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "REVERT",
      "path": "2"
    },
    "280": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "281": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "DUP1",
      "path": "2"
    },
    "282": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x61F9E9A8"
    },
    "287": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "EQ",
      "path": "2"
    },
    "288": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x294"
    },
    "291": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "292": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "DUP1",
      "path": "2"
    },
    "293": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x6215597B"
    },
    "298": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "EQ",
      "path": "2"
    },
    "299": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2B4"
    },
    "302": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "303": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "DUP1",
      "path": "2"
    },
    "304": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x69D03738"
    },
    "309": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "EQ",
      "path": "2"
    },
    "310": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2FA"
    },
    "313": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "314": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "316": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "DUP1",
      "path": "2"
    },
    "317": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "REVERT",
      "path": "2"
    },
    "318": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "319": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "DUP1",
      "path": "2"
    },
    "320": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x13CF08B"
    },
    "325": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "EQ",
      "path": "2"
    },
    "326": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x191"
    },
    "329": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "330": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "DUP1",
      "path": "2"
    },
    "331": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x9265CE6"
    },
    "336": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "EQ",
      "path": "2"
    },
    "337": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1CB"
    },
    "340": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "341": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "DUP1",
      "path": "2"
    },
    "342": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xF61D8BD"
    },
    "347": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "EQ",
      "path": "2"
    },
    "348": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1ED"
    },
    "351": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "352": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "DUP1",
      "path": "2"
    },
    "353": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x10190EF1"
    },
    "358": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "EQ",
      "path": "2"
    },
    "359": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x21D"
    },
    "362": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "363": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "DUP1",
      "path": "2"
    },
    "364": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x3B47FED2"
    },
    "369": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "EQ",
      "path": "2"
    },
    "370": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x251"
    },
    "373": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "374": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "DUP1",
      "path": "2"
    },
    "375": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x4B50F16A"
    },
    "380": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "EQ",
      "path": "2"
    },
    "381": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x266"
    },
    "384": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "385": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "387": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "DUP1",
      "path": "2"
    },
    "388": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "REVERT",
      "path": "2"
    },
    "389": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "390": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "391": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x18C"
    },
    "394": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "395": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "STOP",
      "path": "2"
    },
    "396": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "397": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "399": {
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "DUP1",
      "path": "2"
    },
    "400": {
      "first_revert": true,
      "fn": null,
      "offset": [
        771,
        23898
      ],
      "op": "REVERT",
      "path": "2"
    },
    "401": {
      "offset": [
        2759,
        2805
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "402": {
      "fn": null,
      "offset": [
        2759,
        2805
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "403": {
      "fn": null,
      "offset": [
        2759,
        2805
      ],
      "op": "DUP1",
      "path": "2"
    },
    "404": {
      "fn": null,
      "offset": [
        2759,
        2805
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "405": {
      "fn": null,
      "offset": [
        2759,
        2805
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x19D"
    },
    "408": {
      "fn": null,
      "offset": [
        2759,
        2805
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "409": {
      "fn": null,
      "offset": [
        2759,
        2805
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "411": {
      "fn": null,
      "offset": [
        2759,
        2805
      ],
      "op": "DUP1",
      "path": "2"
    },
    "412": {
      "fn": null,
      "offset": [
        2759,
        2805
      ],
      "op": "REVERT",
      "path": "2"
    },
    "413": {
      "fn": null,
      "offset": [
        2759,
        2805
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "414": {
      "op": "POP"
    },
    "415": {
      "offset": [
        2759,
        2805
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1B1"
    },
    "418": {
      "fn": null,
      "offset": [
        2759,
        2805
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1AC"
    },
    "421": {
      "fn": null,
      "offset": [
        2759,
        2805
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "422": {
      "fn": null,
      "offset": [
        2759,
        2805
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "424": {
      "fn": null,
      "offset": [
        2759,
        2805
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x355D"
    },
    "427": {
      "fn": null,
      "jump": "i",
      "offset": [
        2759,
        2805
      ],
      "op": "JUMP",
      "path": "2"
    },
    "428": {
      "fn": null,
      "offset": [
        2759,
        2805
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "429": {
      "fn": null,
      "offset": [
        2759,
        2805
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x58A"
    },
    "432": {
      "fn": null,
      "jump": "i",
      "offset": [
        2759,
        2805
      ],
      "op": "JUMP",
      "path": "2"
    },
    "433": {
      "fn": null,
      "offset": [
        2759,
        2805
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "434": {
      "fn": null,
      "offset": [
        2759,
        2805
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "436": {
      "fn": null,
      "offset": [
        2759,
        2805
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "437": {
      "fn": null,
      "offset": [
        2759,
        2805
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1C2"
    },
    "440": {
      "fn": null,
      "offset": [
        2759,
        2805
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "441": {
      "fn": null,
      "offset": [
        2759,
        2805
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "442": {
      "fn": null,
      "offset": [
        2759,
        2805
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "443": {
      "fn": null,
      "offset": [
        2759,
        2805
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "444": {
      "fn": null,
      "offset": [
        2759,
        2805
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "445": {
      "fn": null,
      "offset": [
        2759,
        2805
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "446": {
      "fn": null,
      "offset": [
        2759,
        2805
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x35CE"
    },
    "449": {
      "fn": null,
      "jump": "i",
      "offset": [
        2759,
        2805
      ],
      "op": "JUMP",
      "path": "2"
    },
    "450": {
      "fn": null,
      "offset": [
        2759,
        2805
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "451": {
      "fn": null,
      "offset": [
        2759,
        2805
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "453": {
      "fn": null,
      "offset": [
        2759,
        2805
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "454": {
      "fn": null,
      "offset": [
        2759,
        2805
      ],
      "op": "DUP1",
      "path": "2"
    },
    "455": {
      "fn": null,
      "offset": [
        2759,
        2805
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "456": {
      "fn": null,
      "offset": [
        2759,
        2805
      ],
      "op": "SUB",
      "path": "2"
    },
    "457": {
      "fn": null,
      "offset": [
        2759,
        2805
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "458": {
      "fn": null,
      "offset": [
        2759,
        2805
      ],
      "op": "RETURN",
      "path": "2"
    },
    "459": {
      "fn": "Governance.testHashing",
      "offset": [
        17771,
        18274
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "460": {
      "fn": "Governance.testHashing",
      "offset": [
        17771,
        18274
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "461": {
      "fn": "Governance.testHashing",
      "offset": [
        17771,
        18274
      ],
      "op": "DUP1",
      "path": "2"
    },
    "462": {
      "fn": "Governance.testHashing",
      "offset": [
        17771,
        18274
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "463": {
      "fn": "Governance.testHashing",
      "offset": [
        17771,
        18274
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1D7"
    },
    "466": {
      "fn": "Governance.testHashing",
      "offset": [
        17771,
        18274
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "467": {
      "fn": "Governance.testHashing",
      "offset": [
        17771,
        18274
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "469": {
      "fn": "Governance.testHashing",
      "offset": [
        17771,
        18274
      ],
      "op": "DUP1",
      "path": "2"
    },
    "470": {
      "fn": "Governance.testHashing",
      "offset": [
        17771,
        18274
      ],
      "op": "REVERT",
      "path": "2"
    },
    "471": {
      "fn": "Governance.testHashing",
      "offset": [
        17771,
        18274
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "472": {
      "op": "POP"
    },
    "473": {
      "fn": "Governance.testHashing",
      "offset": [
        17771,
        18274
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1EB"
    },
    "476": {
      "fn": "Governance.testHashing",
      "offset": [
        17771,
        18274
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1E6"
    },
    "479": {
      "fn": "Governance.testHashing",
      "offset": [
        17771,
        18274
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "480": {
      "fn": "Governance.testHashing",
      "offset": [
        17771,
        18274
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "482": {
      "fn": "Governance.testHashing",
      "offset": [
        17771,
        18274
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x36D7"
    },
    "485": {
      "fn": "Governance.testHashing",
      "jump": "i",
      "offset": [
        17771,
        18274
      ],
      "op": "JUMP",
      "path": "2"
    },
    "486": {
      "fn": "Governance.testHashing",
      "offset": [
        17771,
        18274
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "487": {
      "fn": "Governance.testHashing",
      "offset": [
        17771,
        18274
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x656"
    },
    "490": {
      "fn": "Governance.testHashing",
      "jump": "i",
      "offset": [
        17771,
        18274
      ],
      "op": "JUMP",
      "path": "2"
    },
    "491": {
      "fn": "Governance.testHashing",
      "offset": [
        17771,
        18274
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "492": {
      "fn": "Governance.testHashing",
      "offset": [
        17771,
        18274
      ],
      "op": "STOP",
      "path": "2"
    },
    "493": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4679,
        4921
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "494": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4679,
        4921
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "495": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4679,
        4921
      ],
      "op": "DUP1",
      "path": "2"
    },
    "496": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4679,
        4921
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "497": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4679,
        4921
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1F9"
    },
    "500": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4679,
        4921
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "501": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4679,
        4921
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "503": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4679,
        4921
      ],
      "op": "DUP1",
      "path": "2"
    },
    "504": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4679,
        4921
      ],
      "op": "REVERT",
      "path": "2"
    },
    "505": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4679,
        4921
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "506": {
      "op": "POP"
    },
    "507": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4679,
        4921
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x20D"
    },
    "510": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4679,
        4921
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x208"
    },
    "513": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4679,
        4921
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "514": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4679,
        4921
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "516": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4679,
        4921
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x355D"
    },
    "519": {
      "fn": "Governance.isMyWizardOnBoard",
      "jump": "i",
      "offset": [
        4679,
        4921
      ],
      "op": "JUMP",
      "path": "2"
    },
    "520": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4679,
        4921
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "521": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4679,
        4921
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x79C"
    },
    "524": {
      "fn": "Governance.isMyWizardOnBoard",
      "jump": "i",
      "offset": [
        4679,
        4921
      ],
      "op": "JUMP",
      "path": "2"
    },
    "525": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4679,
        4921
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "526": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4679,
        4921
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "528": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4679,
        4921
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "529": {
      "op": "SWAP1"
    },
    "530": {
      "op": "ISZERO"
    },
    "531": {
      "op": "ISZERO"
    },
    "532": {
      "op": "DUP2"
    },
    "533": {
      "op": "MSTORE"
    },
    "534": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "536": {
      "op": "ADD"
    },
    "537": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4679,
        4921
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1C2"
    },
    "540": {
      "op": "JUMP"
    },
    "541": {
      "offset": [
        2445,
        2472
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "542": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "543": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "DUP1",
      "path": "2"
    },
    "544": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "545": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x229"
    },
    "548": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "549": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "551": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "DUP1",
      "path": "2"
    },
    "552": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "REVERT",
      "path": "2"
    },
    "553": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "554": {
      "op": "POP"
    },
    "555": {
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x23D"
    },
    "558": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x238"
    },
    "561": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "562": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "564": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x355D"
    },
    "567": {
      "fn": "Governance.isMyWizardOnBoard",
      "jump": "i",
      "offset": [
        2445,
        2472
      ],
      "op": "JUMP",
      "path": "2"
    },
    "568": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "569": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x8A7"
    },
    "572": {
      "fn": "Governance.isMyWizardOnBoard",
      "jump": "i",
      "offset": [
        2445,
        2472
      ],
      "op": "JUMP",
      "path": "2"
    },
    "573": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "574": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "576": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "577": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1C2"
    },
    "580": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "SWAP9",
      "path": "2"
    },
    "581": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "SWAP8",
      "path": "2"
    },
    "582": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "SWAP7",
      "path": "2"
    },
    "583": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "584": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "585": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "586": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "587": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "588": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "589": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3736"
    },
    "592": {
      "fn": "Governance.isMyWizardOnBoard",
      "jump": "i",
      "offset": [
        2445,
        2472
      ],
      "op": "JUMP",
      "path": "2"
    },
    "593": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4380,
        4673
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "594": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4380,
        4673
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "595": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4380,
        4673
      ],
      "op": "DUP1",
      "path": "2"
    },
    "596": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4380,
        4673
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "597": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4380,
        4673
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x25D"
    },
    "600": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4380,
        4673
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "601": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4380,
        4673
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "603": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4380,
        4673
      ],
      "op": "DUP1",
      "path": "2"
    },
    "604": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4380,
        4673
      ],
      "op": "REVERT",
      "path": "2"
    },
    "605": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4380,
        4673
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "606": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4380,
        4673
      ],
      "op": "POP",
      "path": "2"
    },
    "607": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4380,
        4673
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x20D"
    },
    "610": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4380,
        4673
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x9B1"
    },
    "613": {
      "fn": "Governance.isCallerOnBoard",
      "jump": "i",
      "offset": [
        4380,
        4673
      ],
      "op": "JUMP",
      "path": "2"
    },
    "614": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7327,
        8936
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "615": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7327,
        8936
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "616": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7327,
        8936
      ],
      "op": "DUP1",
      "path": "2"
    },
    "617": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7327,
        8936
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "618": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7327,
        8936
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x272"
    },
    "621": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7327,
        8936
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "622": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7327,
        8936
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "624": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7327,
        8936
      ],
      "op": "DUP1",
      "path": "2"
    },
    "625": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7327,
        8936
      ],
      "op": "REVERT",
      "path": "2"
    },
    "626": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7327,
        8936
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "627": {
      "op": "POP"
    },
    "628": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7327,
        8936
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x286"
    },
    "631": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7327,
        8936
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x281"
    },
    "634": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7327,
        8936
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "635": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7327,
        8936
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "637": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7327,
        8936
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x37B5"
    },
    "640": {
      "fn": "Governance.getTasksAssignedToWiz",
      "jump": "i",
      "offset": [
        7327,
        8936
      ],
      "op": "JUMP",
      "path": "2"
    },
    "641": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7327,
        8936
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "642": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7327,
        8936
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xABF"
    },
    "645": {
      "fn": "Governance.getTasksAssignedToWiz",
      "jump": "i",
      "offset": [
        7327,
        8936
      ],
      "op": "JUMP",
      "path": "2"
    },
    "646": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7327,
        8936
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "647": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7327,
        8936
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "649": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7327,
        8936
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "650": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7327,
        8936
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1C2"
    },
    "653": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7327,
        8936
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "654": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7327,
        8936
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "655": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7327,
        8936
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "656": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7327,
        8936
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x38A1"
    },
    "659": {
      "fn": "Governance.getTasksAssignedToWiz",
      "jump": "i",
      "offset": [
        7327,
        8936
      ],
      "op": "JUMP",
      "path": "2"
    },
    "660": {
      "fn": "Governance.createTaskType",
      "offset": [
        14081,
        14401
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "661": {
      "fn": "Governance.createTaskType",
      "offset": [
        14081,
        14401
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "662": {
      "fn": "Governance.createTaskType",
      "offset": [
        14081,
        14401
      ],
      "op": "DUP1",
      "path": "2"
    },
    "663": {
      "fn": "Governance.createTaskType",
      "offset": [
        14081,
        14401
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "664": {
      "fn": "Governance.createTaskType",
      "offset": [
        14081,
        14401
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2A0"
    },
    "667": {
      "fn": "Governance.createTaskType",
      "offset": [
        14081,
        14401
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "668": {
      "fn": "Governance.createTaskType",
      "offset": [
        14081,
        14401
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "670": {
      "fn": "Governance.createTaskType",
      "offset": [
        14081,
        14401
      ],
      "op": "DUP1",
      "path": "2"
    },
    "671": {
      "fn": "Governance.createTaskType",
      "offset": [
        14081,
        14401
      ],
      "op": "REVERT",
      "path": "2"
    },
    "672": {
      "fn": "Governance.createTaskType",
      "offset": [
        14081,
        14401
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "673": {
      "op": "POP"
    },
    "674": {
      "fn": "Governance.createTaskType",
      "offset": [
        14081,
        14401
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1EB"
    },
    "677": {
      "fn": "Governance.createTaskType",
      "offset": [
        14081,
        14401
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2AF"
    },
    "680": {
      "fn": "Governance.createTaskType",
      "offset": [
        14081,
        14401
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "681": {
      "fn": "Governance.createTaskType",
      "offset": [
        14081,
        14401
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "683": {
      "fn": "Governance.createTaskType",
      "offset": [
        14081,
        14401
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x39A9"
    },
    "686": {
      "fn": "Governance.createTaskType",
      "jump": "i",
      "offset": [
        14081,
        14401
      ],
      "op": "JUMP",
      "path": "2"
    },
    "687": {
      "fn": "Governance.createTaskType",
      "offset": [
        14081,
        14401
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "688": {
      "fn": "Governance.createTaskType",
      "offset": [
        14081,
        14401
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF53"
    },
    "691": {
      "fn": "Governance.createTaskType",
      "jump": "i",
      "offset": [
        14081,
        14401
      ],
      "op": "JUMP",
      "path": "2"
    },
    "692": {
      "offset": [
        1014,
        1089
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "693": {
      "fn": "Governance.createTaskType",
      "offset": [
        1014,
        1089
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "694": {
      "fn": "Governance.createTaskType",
      "offset": [
        1014,
        1089
      ],
      "op": "DUP1",
      "path": "2"
    },
    "695": {
      "fn": "Governance.createTaskType",
      "offset": [
        1014,
        1089
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "696": {
      "fn": "Governance.createTaskType",
      "offset": [
        1014,
        1089
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2C0"
    },
    "699": {
      "fn": "Governance.createTaskType",
      "offset": [
        1014,
        1089
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "700": {
      "fn": "Governance.createTaskType",
      "offset": [
        1014,
        1089
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "702": {
      "fn": "Governance.createTaskType",
      "offset": [
        1014,
        1089
      ],
      "op": "DUP1",
      "path": "2"
    },
    "703": {
      "fn": "Governance.createTaskType",
      "offset": [
        1014,
        1089
      ],
      "op": "REVERT",
      "path": "2"
    },
    "704": {
      "fn": "Governance.createTaskType",
      "offset": [
        1014,
        1089
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "705": {
      "op": "POP"
    },
    "706": {
      "offset": [
        1014,
        1089
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2EC"
    },
    "709": {
      "fn": "Governance.createTaskType",
      "offset": [
        1014,
        1089
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2CF"
    },
    "712": {
      "fn": "Governance.createTaskType",
      "offset": [
        1014,
        1089
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "713": {
      "fn": "Governance.createTaskType",
      "offset": [
        1014,
        1089
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "715": {
      "fn": "Governance.createTaskType",
      "offset": [
        1014,
        1089
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3A46"
    },
    "718": {
      "fn": "Governance.createTaskType",
      "jump": "i",
      "offset": [
        1014,
        1089
      ],
      "op": "JUMP",
      "path": "2"
    },
    "719": {
      "fn": "Governance.createTaskType",
      "offset": [
        1014,
        1089
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "720": {
      "fn": "Governance.createTaskType",
      "offset": [
        1014,
        1089
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "722": {
      "fn": "Governance.createTaskType",
      "offset": [
        1014,
        1089
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "724": {
      "fn": "Governance.createTaskType",
      "offset": [
        1014,
        1089
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "725": {
      "fn": "Governance.createTaskType",
      "offset": [
        1014,
        1089
      ],
      "op": "DUP2",
      "path": "2"
    },
    "726": {
      "fn": "Governance.createTaskType",
      "offset": [
        1014,
        1089
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "727": {
      "fn": "Governance.createTaskType",
      "offset": [
        1014,
        1089
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "729": {
      "fn": "Governance.createTaskType",
      "offset": [
        1014,
        1089
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "730": {
      "fn": "Governance.createTaskType",
      "offset": [
        1014,
        1089
      ],
      "op": "DUP4",
      "path": "2"
    },
    "731": {
      "fn": "Governance.createTaskType",
      "offset": [
        1014,
        1089
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "732": {
      "fn": "Governance.createTaskType",
      "offset": [
        1014,
        1089
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "734": {
      "fn": "Governance.createTaskType",
      "offset": [
        1014,
        1089
      ],
      "op": "DUP1",
      "path": "2"
    },
    "735": {
      "fn": "Governance.createTaskType",
      "offset": [
        1014,
        1089
      ],
      "op": "DUP5",
      "path": "2"
    },
    "736": {
      "fn": "Governance.createTaskType",
      "offset": [
        1014,
        1089
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "737": {
      "fn": "Governance.createTaskType",
      "offset": [
        1014,
        1089
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "738": {
      "fn": "Governance.createTaskType",
      "offset": [
        1014,
        1089
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "739": {
      "fn": "Governance.createTaskType",
      "offset": [
        1014,
        1089
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "740": {
      "fn": "Governance.createTaskType",
      "offset": [
        1014,
        1089
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "741": {
      "fn": "Governance.createTaskType",
      "offset": [
        1014,
        1089
      ],
      "op": "DUP3",
      "path": "2"
    },
    "742": {
      "fn": "Governance.createTaskType",
      "offset": [
        1014,
        1089
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "743": {
      "fn": "Governance.createTaskType",
      "offset": [
        1014,
        1089
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "744": {
      "fn": "Governance.createTaskType",
      "offset": [
        1014,
        1089
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "745": {
      "fn": "Governance.createTaskType",
      "offset": [
        1014,
        1089
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "746": {
      "fn": "Governance.createTaskType",
      "offset": [
        1014,
        1089
      ],
      "op": "DUP2",
      "path": "2"
    },
    "747": {
      "fn": "Governance.createTaskType",
      "offset": [
        1014,
        1089
      ],
      "op": "JUMP",
      "path": "2"
    },
    "748": {
      "fn": "Governance.createTaskType",
      "offset": [
        1014,
        1089
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "749": {
      "fn": "Governance.createTaskType",
      "offset": [
        1014,
        1089
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "751": {
      "fn": "Governance.createTaskType",
      "offset": [
        1014,
        1089
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "752": {
      "op": "SWAP1"
    },
    "753": {
      "op": "DUP2"
    },
    "754": {
      "op": "MSTORE"
    },
    "755": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "757": {
      "op": "ADD"
    },
    "758": {
      "offset": [
        1014,
        1089
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1C2"
    },
    "761": {
      "op": "JUMP"
    },
    "762": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        10622,
        10723
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "763": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        10622,
        10723
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "764": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        10622,
        10723
      ],
      "op": "DUP1",
      "path": "2"
    },
    "765": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        10622,
        10723
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "766": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        10622,
        10723
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x306"
    },
    "769": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        10622,
        10723
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "770": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        10622,
        10723
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "772": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        10622,
        10723
      ],
      "op": "DUP1",
      "path": "2"
    },
    "773": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        10622,
        10723
      ],
      "op": "REVERT",
      "path": "2"
    },
    "774": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        10622,
        10723
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "775": {
      "op": "POP"
    },
    "776": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        10622,
        10723
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1EB"
    },
    "779": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        10622,
        10723
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x315"
    },
    "782": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        10622,
        10723
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "783": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        10622,
        10723
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "785": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        10622,
        10723
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3A7D"
    },
    "788": {
      "fn": "Governance.setNFTAddress",
      "jump": "i",
      "offset": [
        10622,
        10723
      ],
      "op": "JUMP",
      "path": "2"
    },
    "789": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        10622,
        10723
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "790": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        10622,
        10723
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFBD"
    },
    "793": {
      "fn": "Governance.setNFTAddress",
      "jump": "i",
      "offset": [
        10622,
        10723
      ],
      "op": "JUMP",
      "path": "2"
    },
    "794": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "795": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "CALLVALUE",
      "path": "11"
    },
    "796": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "DUP1",
      "path": "11"
    },
    "797": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "798": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x326"
    },
    "801": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "802": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "804": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "DUP1",
      "path": "11"
    },
    "805": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "REVERT",
      "path": "11"
    },
    "806": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "807": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "POP",
      "path": "11"
    },
    "808": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1EB"
    },
    "811": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1009"
    },
    "814": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1652,
        1746
      ],
      "op": "JUMP",
      "path": "11"
    },
    "815": {
      "fn": "Governance.completeTask",
      "offset": [
        16479,
        17765
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "816": {
      "fn": "Governance.completeTask",
      "offset": [
        16479,
        17765
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "817": {
      "fn": "Governance.completeTask",
      "offset": [
        16479,
        17765
      ],
      "op": "DUP1",
      "path": "2"
    },
    "818": {
      "fn": "Governance.completeTask",
      "offset": [
        16479,
        17765
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "819": {
      "fn": "Governance.completeTask",
      "offset": [
        16479,
        17765
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x33B"
    },
    "822": {
      "fn": "Governance.completeTask",
      "offset": [
        16479,
        17765
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "823": {
      "fn": "Governance.completeTask",
      "offset": [
        16479,
        17765
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "825": {
      "fn": "Governance.completeTask",
      "offset": [
        16479,
        17765
      ],
      "op": "DUP1",
      "path": "2"
    },
    "826": {
      "fn": "Governance.completeTask",
      "offset": [
        16479,
        17765
      ],
      "op": "REVERT",
      "path": "2"
    },
    "827": {
      "fn": "Governance.completeTask",
      "offset": [
        16479,
        17765
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "828": {
      "op": "POP"
    },
    "829": {
      "fn": "Governance.completeTask",
      "offset": [
        16479,
        17765
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1EB"
    },
    "832": {
      "fn": "Governance.completeTask",
      "offset": [
        16479,
        17765
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x34A"
    },
    "835": {
      "fn": "Governance.completeTask",
      "offset": [
        16479,
        17765
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "836": {
      "fn": "Governance.completeTask",
      "offset": [
        16479,
        17765
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "838": {
      "fn": "Governance.completeTask",
      "offset": [
        16479,
        17765
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3B09"
    },
    "841": {
      "fn": "Governance.completeTask",
      "jump": "i",
      "offset": [
        16479,
        17765
      ],
      "op": "JUMP",
      "path": "2"
    },
    "842": {
      "fn": "Governance.completeTask",
      "offset": [
        16479,
        17765
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "843": {
      "fn": "Governance.completeTask",
      "offset": [
        16479,
        17765
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x103F"
    },
    "846": {
      "fn": "Governance.completeTask",
      "jump": "i",
      "offset": [
        16479,
        17765
      ],
      "op": "JUMP",
      "path": "2"
    },
    "847": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5616,
        6585
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "848": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5616,
        6585
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "849": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5616,
        6585
      ],
      "op": "DUP1",
      "path": "2"
    },
    "850": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5616,
        6585
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "851": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5616,
        6585
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x35B"
    },
    "854": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5616,
        6585
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "855": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5616,
        6585
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "857": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5616,
        6585
      ],
      "op": "DUP1",
      "path": "2"
    },
    "858": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5616,
        6585
      ],
      "op": "REVERT",
      "path": "2"
    },
    "859": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5616,
        6585
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "860": {
      "op": "POP"
    },
    "861": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5616,
        6585
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2EC"
    },
    "864": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5616,
        6585
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x36A"
    },
    "867": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5616,
        6585
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "868": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5616,
        6585
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "870": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5616,
        6585
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x355D"
    },
    "873": {
      "fn": "Governance.getWinningVote",
      "jump": "i",
      "offset": [
        5616,
        6585
      ],
      "op": "JUMP",
      "path": "2"
    },
    "874": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5616,
        6585
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "875": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5616,
        6585
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x14B5"
    },
    "878": {
      "fn": "Governance.getWinningVote",
      "jump": "i",
      "offset": [
        5616,
        6585
      ],
      "op": "JUMP",
      "path": "2"
    },
    "879": {
      "fn": "Governance.vote",
      "offset": [
        12602,
        13266
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "880": {
      "fn": "Governance.vote",
      "offset": [
        12602,
        13266
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "881": {
      "fn": "Governance.vote",
      "offset": [
        12602,
        13266
      ],
      "op": "DUP1",
      "path": "2"
    },
    "882": {
      "fn": "Governance.vote",
      "offset": [
        12602,
        13266
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "883": {
      "fn": "Governance.vote",
      "offset": [
        12602,
        13266
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x37B"
    },
    "886": {
      "fn": "Governance.vote",
      "offset": [
        12602,
        13266
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "887": {
      "fn": "Governance.vote",
      "offset": [
        12602,
        13266
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "889": {
      "fn": "Governance.vote",
      "offset": [
        12602,
        13266
      ],
      "op": "DUP1",
      "path": "2"
    },
    "890": {
      "fn": "Governance.vote",
      "offset": [
        12602,
        13266
      ],
      "op": "REVERT",
      "path": "2"
    },
    "891": {
      "fn": "Governance.vote",
      "offset": [
        12602,
        13266
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "892": {
      "op": "POP"
    },
    "893": {
      "fn": "Governance.vote",
      "offset": [
        12602,
        13266
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1EB"
    },
    "896": {
      "fn": "Governance.vote",
      "offset": [
        12602,
        13266
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x38A"
    },
    "899": {
      "fn": "Governance.vote",
      "offset": [
        12602,
        13266
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "900": {
      "fn": "Governance.vote",
      "offset": [
        12602,
        13266
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "902": {
      "fn": "Governance.vote",
      "offset": [
        12602,
        13266
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3B5F"
    },
    "905": {
      "fn": "Governance.vote",
      "jump": "i",
      "offset": [
        12602,
        13266
      ],
      "op": "JUMP",
      "path": "2"
    },
    "906": {
      "fn": "Governance.vote",
      "offset": [
        12602,
        13266
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "907": {
      "fn": "Governance.vote",
      "offset": [
        12602,
        13266
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x16D8"
    },
    "910": {
      "fn": "Governance.vote",
      "jump": "i",
      "offset": [
        12602,
        13266
      ],
      "op": "JUMP",
      "path": "2"
    },
    "911": {
      "offset": [
        2840,
        2878
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "912": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "913": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "DUP1",
      "path": "2"
    },
    "914": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "915": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x39B"
    },
    "918": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "919": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "921": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "DUP1",
      "path": "2"
    },
    "922": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "REVERT",
      "path": "2"
    },
    "923": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "924": {
      "op": "POP"
    },
    "925": {
      "offset": [
        2840,
        2878
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3AF"
    },
    "928": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3AA"
    },
    "931": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "932": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "934": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x355D"
    },
    "937": {
      "fn": "Governance.vote",
      "jump": "i",
      "offset": [
        2840,
        2878
      ],
      "op": "JUMP",
      "path": "2"
    },
    "938": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "939": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1711"
    },
    "942": {
      "fn": "Governance.vote",
      "jump": "i",
      "offset": [
        2840,
        2878
      ],
      "op": "JUMP",
      "path": "2"
    },
    "943": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "944": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "946": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "947": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1C2"
    },
    "950": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP11",
      "path": "2"
    },
    "951": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP10",
      "path": "2"
    },
    "952": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP9",
      "path": "2"
    },
    "953": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP8",
      "path": "2"
    },
    "954": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP7",
      "path": "2"
    },
    "955": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "956": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "957": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "958": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "959": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "960": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "961": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3B8B"
    },
    "964": {
      "fn": "Governance.vote",
      "jump": "i",
      "offset": [
        2840,
        2878
      ],
      "op": "JUMP",
      "path": "2"
    },
    "965": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "966": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "CALLVALUE",
      "path": "11"
    },
    "967": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "DUP1",
      "path": "11"
    },
    "968": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "969": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x3D1"
    },
    "972": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "973": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "975": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "DUP1",
      "path": "11"
    },
    "976": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "REVERT",
      "path": "11"
    },
    "977": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "978": {
      "op": "POP"
    },
    "979": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 0,
      "value": "0x1"
    },
    "981": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "982": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "984": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "985": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "987": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "989": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "991": {
      "op": "SHL"
    },
    "992": {
      "op": "SUB"
    },
    "993": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "994": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "995": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "AND",
      "path": "11"
    },
    "996": {
      "op": "DUP2"
    },
    "997": {
      "op": "MSTORE"
    },
    "998": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1000": {
      "op": "ADD"
    },
    "1001": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1C2"
    },
    "1004": {
      "op": "JUMP"
    },
    "1005": {
      "offset": [
        2884,
        2918
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1006": {
      "fn": "Ownable.owner",
      "offset": [
        2884,
        2918
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "1007": {
      "fn": "Ownable.owner",
      "offset": [
        2884,
        2918
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1008": {
      "fn": "Ownable.owner",
      "offset": [
        2884,
        2918
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1009": {
      "fn": "Ownable.owner",
      "offset": [
        2884,
        2918
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3F9"
    },
    "1012": {
      "fn": "Ownable.owner",
      "offset": [
        2884,
        2918
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1013": {
      "fn": "Ownable.owner",
      "offset": [
        2884,
        2918
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1015": {
      "fn": "Ownable.owner",
      "offset": [
        2884,
        2918
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1016": {
      "fn": "Ownable.owner",
      "offset": [
        2884,
        2918
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1017": {
      "fn": "Ownable.owner",
      "offset": [
        2884,
        2918
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1018": {
      "fn": "Ownable.owner",
      "offset": [
        2884,
        2918
      ],
      "op": "POP",
      "path": "2"
    },
    "1019": {
      "fn": "Ownable.owner",
      "offset": [
        2884,
        2918
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2EC"
    },
    "1022": {
      "fn": "Ownable.owner",
      "offset": [
        2884,
        2918
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xB"
    },
    "1024": {
      "fn": "Ownable.owner",
      "offset": [
        2884,
        2918
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1025": {
      "fn": "Ownable.owner",
      "offset": [
        2884,
        2918
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1026": {
      "fn": "Ownable.owner",
      "offset": [
        2884,
        2918
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1027": {
      "fn": "Governance.getTaskById",
      "offset": [
        5103,
        5215
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1028": {
      "fn": "Governance.getTaskById",
      "offset": [
        5103,
        5215
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "1029": {
      "fn": "Governance.getTaskById",
      "offset": [
        5103,
        5215
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1030": {
      "fn": "Governance.getTaskById",
      "offset": [
        5103,
        5215
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1031": {
      "fn": "Governance.getTaskById",
      "offset": [
        5103,
        5215
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x40F"
    },
    "1034": {
      "fn": "Governance.getTaskById",
      "offset": [
        5103,
        5215
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1035": {
      "fn": "Governance.getTaskById",
      "offset": [
        5103,
        5215
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1037": {
      "fn": "Governance.getTaskById",
      "offset": [
        5103,
        5215
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1038": {
      "fn": "Governance.getTaskById",
      "offset": [
        5103,
        5215
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1039": {
      "fn": "Governance.getTaskById",
      "offset": [
        5103,
        5215
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1040": {
      "op": "POP"
    },
    "1041": {
      "fn": "Governance.getTaskById",
      "offset": [
        5103,
        5215
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x423"
    },
    "1044": {
      "fn": "Governance.getTaskById",
      "offset": [
        5103,
        5215
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x41E"
    },
    "1047": {
      "fn": "Governance.getTaskById",
      "offset": [
        5103,
        5215
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1048": {
      "fn": "Governance.getTaskById",
      "offset": [
        5103,
        5215
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1050": {
      "fn": "Governance.getTaskById",
      "offset": [
        5103,
        5215
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x355D"
    },
    "1053": {
      "fn": "Governance.getTaskById",
      "jump": "i",
      "offset": [
        5103,
        5215
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1054": {
      "fn": "Governance.getTaskById",
      "offset": [
        5103,
        5215
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1055": {
      "fn": "Governance.getTaskById",
      "offset": [
        5103,
        5215
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1813"
    },
    "1058": {
      "fn": "Governance.getTaskById",
      "jump": "i",
      "offset": [
        5103,
        5215
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1059": {
      "fn": "Governance.getTaskById",
      "offset": [
        5103,
        5215
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1060": {
      "fn": "Governance.getTaskById",
      "offset": [
        5103,
        5215
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1062": {
      "fn": "Governance.getTaskById",
      "offset": [
        5103,
        5215
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1063": {
      "fn": "Governance.getTaskById",
      "offset": [
        5103,
        5215
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1C2"
    },
    "1066": {
      "fn": "Governance.getTaskById",
      "offset": [
        5103,
        5215
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1067": {
      "fn": "Governance.getTaskById",
      "offset": [
        5103,
        5215
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1068": {
      "fn": "Governance.getTaskById",
      "offset": [
        5103,
        5215
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3C0C"
    },
    "1071": {
      "fn": "Governance.getTaskById",
      "jump": "i",
      "offset": [
        5103,
        5215
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1072": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9012,
        10512
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1073": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9012,
        10512
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "1074": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9012,
        10512
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1075": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9012,
        10512
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1076": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9012,
        10512
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x43C"
    },
    "1079": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9012,
        10512
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1080": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9012,
        10512
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1082": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9012,
        10512
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1083": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9012,
        10512
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1084": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9012,
        10512
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1085": {
      "op": "POP"
    },
    "1086": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9012,
        10512
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x450"
    },
    "1089": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9012,
        10512
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x44B"
    },
    "1092": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9012,
        10512
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1093": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9012,
        10512
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1095": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9012,
        10512
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x37B5"
    },
    "1098": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        9012,
        10512
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1099": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9012,
        10512
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1100": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9012,
        10512
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1955"
    },
    "1103": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        9012,
        10512
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1104": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9012,
        10512
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1105": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9012,
        10512
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1107": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9012,
        10512
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1108": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9012,
        10512
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1C2"
    },
    "1111": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9012,
        10512
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1112": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9012,
        10512
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1113": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9012,
        10512
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3C1F"
    },
    "1116": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        9012,
        10512
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1117": {
      "fn": "Governance.createProposal",
      "offset": [
        13312,
        14074
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1118": {
      "fn": "Governance.createProposal",
      "offset": [
        13312,
        14074
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "1119": {
      "fn": "Governance.createProposal",
      "offset": [
        13312,
        14074
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1120": {
      "fn": "Governance.createProposal",
      "offset": [
        13312,
        14074
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1121": {
      "fn": "Governance.createProposal",
      "offset": [
        13312,
        14074
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x469"
    },
    "1124": {
      "fn": "Governance.createProposal",
      "offset": [
        13312,
        14074
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1125": {
      "fn": "Governance.createProposal",
      "offset": [
        13312,
        14074
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1127": {
      "fn": "Governance.createProposal",
      "offset": [
        13312,
        14074
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1128": {
      "fn": "Governance.createProposal",
      "offset": [
        13312,
        14074
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1129": {
      "fn": "Governance.createProposal",
      "offset": [
        13312,
        14074
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1130": {
      "op": "POP"
    },
    "1131": {
      "fn": "Governance.createProposal",
      "offset": [
        13312,
        14074
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1EB"
    },
    "1134": {
      "fn": "Governance.createProposal",
      "offset": [
        13312,
        14074
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x478"
    },
    "1137": {
      "fn": "Governance.createProposal",
      "offset": [
        13312,
        14074
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1138": {
      "fn": "Governance.createProposal",
      "offset": [
        13312,
        14074
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1140": {
      "fn": "Governance.createProposal",
      "offset": [
        13312,
        14074
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3C81"
    },
    "1143": {
      "fn": "Governance.createProposal",
      "jump": "i",
      "offset": [
        13312,
        14074
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1144": {
      "fn": "Governance.createProposal",
      "offset": [
        13312,
        14074
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1145": {
      "fn": "Governance.createProposal",
      "offset": [
        13312,
        14074
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1D1B"
    },
    "1148": {
      "fn": "Governance.createProposal",
      "jump": "i",
      "offset": [
        13312,
        14074
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1149": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15345,
        16473
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1150": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15345,
        16473
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "1151": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15345,
        16473
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1152": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15345,
        16473
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1153": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15345,
        16473
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x489"
    },
    "1156": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15345,
        16473
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1157": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15345,
        16473
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1159": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15345,
        16473
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1160": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15345,
        16473
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1161": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15345,
        16473
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1162": {
      "op": "POP"
    },
    "1163": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15345,
        16473
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1EB"
    },
    "1166": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15345,
        16473
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x498"
    },
    "1169": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15345,
        16473
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1170": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15345,
        16473
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1172": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15345,
        16473
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x355D"
    },
    "1175": {
      "fn": "Governance.claimRandomTaskForVerification",
      "jump": "i",
      "offset": [
        15345,
        16473
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1176": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15345,
        16473
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1177": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15345,
        16473
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1E7B"
    },
    "1180": {
      "fn": "Governance.claimRandomTaskForVerification",
      "jump": "i",
      "offset": [
        15345,
        16473
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1181": {
      "offset": [
        2582,
        2643
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1182": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        2582,
        2643
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "1183": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        2582,
        2643
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1184": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        2582,
        2643
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1185": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        2582,
        2643
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4A9"
    },
    "1188": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        2582,
        2643
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1189": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        2582,
        2643
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1191": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        2582,
        2643
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1192": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        2582,
        2643
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1193": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        2582,
        2643
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1194": {
      "op": "POP"
    },
    "1195": {
      "offset": [
        2582,
        2643
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x6"
    },
    "1197": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        2582,
        2643
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1198": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        2582,
        2643
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4C3"
    },
    "1201": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        2582,
        2643
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1202": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        2582,
        2643
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xF"
    },
    "1204": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        2582,
        2643
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1205": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        2582,
        2643
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1206": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        2582,
        2643
      ],
      "op": "SIGNEXTEND",
      "path": "2"
    },
    "1207": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        2582,
        2643
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1208": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1210": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1212": {
      "op": "SHL"
    },
    "1213": {
      "offset": [
        2582,
        2643
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1214": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        2582,
        2643
      ],
      "op": "DIV",
      "path": "2"
    },
    "1215": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        2582,
        2643
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1216": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        2582,
        2643
      ],
      "op": "SIGNEXTEND",
      "path": "2"
    },
    "1217": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        2582,
        2643
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1218": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        2582,
        2643
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1219": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        2582,
        2643
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1220": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        2582,
        2643
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1222": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        2582,
        2643
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1223": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        2582,
        2643
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1224": {
      "op": "PUSH1",
      "value": "0xF"
    },
    "1226": {
      "op": "SWAP4"
    },
    "1227": {
      "op": "DUP5"
    },
    "1228": {
      "op": "SIGNEXTEND"
    },
    "1229": {
      "op": "DUP2"
    },
    "1230": {
      "op": "MSTORE"
    },
    "1231": {
      "op": "SWAP2"
    },
    "1232": {
      "op": "SWAP1"
    },
    "1233": {
      "op": "SWAP3"
    },
    "1234": {
      "op": "SIGNEXTEND"
    },
    "1235": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1237": {
      "op": "DUP3"
    },
    "1238": {
      "op": "ADD"
    },
    "1239": {
      "op": "MSTORE"
    },
    "1240": {
      "op": "ADD"
    },
    "1241": {
      "offset": [
        2582,
        2643
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1C2"
    },
    "1244": {
      "op": "JUMP"
    },
    "1245": {
      "fn": "Governance.submitVerification",
      "offset": [
        18980,
        23188
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1246": {
      "fn": "Governance.submitVerification",
      "offset": [
        18980,
        23188
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "1247": {
      "fn": "Governance.submitVerification",
      "offset": [
        18980,
        23188
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1248": {
      "fn": "Governance.submitVerification",
      "offset": [
        18980,
        23188
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1249": {
      "fn": "Governance.submitVerification",
      "offset": [
        18980,
        23188
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4E9"
    },
    "1252": {
      "fn": "Governance.submitVerification",
      "offset": [
        18980,
        23188
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1253": {
      "fn": "Governance.submitVerification",
      "offset": [
        18980,
        23188
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1255": {
      "fn": "Governance.submitVerification",
      "offset": [
        18980,
        23188
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1256": {
      "fn": "Governance.submitVerification",
      "offset": [
        18980,
        23188
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1257": {
      "fn": "Governance.submitVerification",
      "offset": [
        18980,
        23188
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1258": {
      "op": "POP"
    },
    "1259": {
      "fn": "Governance.submitVerification",
      "offset": [
        18980,
        23188
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1EB"
    },
    "1262": {
      "fn": "Governance.submitVerification",
      "offset": [
        18980,
        23188
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4F8"
    },
    "1265": {
      "fn": "Governance.submitVerification",
      "offset": [
        18980,
        23188
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1266": {
      "fn": "Governance.submitVerification",
      "offset": [
        18980,
        23188
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1268": {
      "fn": "Governance.submitVerification",
      "offset": [
        18980,
        23188
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3CD1"
    },
    "1271": {
      "fn": "Governance.submitVerification",
      "jump": "i",
      "offset": [
        18980,
        23188
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1272": {
      "fn": "Governance.submitVerification",
      "offset": [
        18980,
        23188
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1273": {
      "fn": "Governance.submitVerification",
      "offset": [
        18980,
        23188
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x21B2"
    },
    "1276": {
      "fn": "Governance.submitVerification",
      "jump": "i",
      "offset": [
        18980,
        23188
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1277": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1278": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "CALLVALUE",
      "path": "11"
    },
    "1279": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1280": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "1281": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x509"
    },
    "1284": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "1285": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1287": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1288": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "REVERT",
      "path": "11"
    },
    "1289": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1290": {
      "op": "POP"
    },
    "1291": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1EB"
    },
    "1294": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x518"
    },
    "1297": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "CALLDATASIZE",
      "path": "11"
    },
    "1298": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "1300": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x3A7D"
    },
    "1303": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1901,
        2093
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1304": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1305": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2BCF"
    },
    "1308": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1901,
        2093
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1309": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6632,
        7320
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1310": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6632,
        7320
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "1311": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6632,
        7320
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1312": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6632,
        7320
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1313": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6632,
        7320
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x529"
    },
    "1316": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6632,
        7320
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1317": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6632,
        7320
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1319": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6632,
        7320
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1320": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6632,
        7320
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1321": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6632,
        7320
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1322": {
      "op": "POP"
    },
    "1323": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6632,
        7320
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x20D"
    },
    "1326": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6632,
        7320
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x538"
    },
    "1329": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6632,
        7320
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1330": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6632,
        7320
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1332": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6632,
        7320
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x355D"
    },
    "1335": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "jump": "i",
      "offset": [
        6632,
        7320
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1336": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6632,
        7320
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1337": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6632,
        7320
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2C6A"
    },
    "1340": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "jump": "i",
      "offset": [
        6632,
        7320
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1341": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10849,
        12070
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1342": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10849,
        12070
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "1343": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10849,
        12070
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1344": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10849,
        12070
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1345": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10849,
        12070
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x549"
    },
    "1348": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10849,
        12070
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1349": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10849,
        12070
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1351": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10849,
        12070
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1352": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10849,
        12070
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1353": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10849,
        12070
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1354": {
      "op": "POP"
    },
    "1355": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10849,
        12070
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1EB"
    },
    "1358": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10849,
        12070
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x558"
    },
    "1361": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10849,
        12070
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1362": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10849,
        12070
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1364": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10849,
        12070
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3D20"
    },
    "1367": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "jump": "i",
      "offset": [
        10849,
        12070
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1368": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10849,
        12070
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1369": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10849,
        12070
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2E3A"
    },
    "1372": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "jump": "i",
      "offset": [
        10849,
        12070
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1373": {
      "fn": "Governance.getVotes",
      "offset": [
        5221,
        5610
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1374": {
      "fn": "Governance.getVotes",
      "offset": [
        5221,
        5610
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "1375": {
      "fn": "Governance.getVotes",
      "offset": [
        5221,
        5610
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1376": {
      "fn": "Governance.getVotes",
      "offset": [
        5221,
        5610
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1377": {
      "fn": "Governance.getVotes",
      "offset": [
        5221,
        5610
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x569"
    },
    "1380": {
      "fn": "Governance.getVotes",
      "offset": [
        5221,
        5610
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1381": {
      "fn": "Governance.getVotes",
      "offset": [
        5221,
        5610
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1383": {
      "fn": "Governance.getVotes",
      "offset": [
        5221,
        5610
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1384": {
      "fn": "Governance.getVotes",
      "offset": [
        5221,
        5610
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1385": {
      "fn": "Governance.getVotes",
      "offset": [
        5221,
        5610
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1386": {
      "op": "POP"
    },
    "1387": {
      "fn": "Governance.getVotes",
      "offset": [
        5221,
        5610
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x57D"
    },
    "1390": {
      "fn": "Governance.getVotes",
      "offset": [
        5221,
        5610
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x578"
    },
    "1393": {
      "fn": "Governance.getVotes",
      "offset": [
        5221,
        5610
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1394": {
      "fn": "Governance.getVotes",
      "offset": [
        5221,
        5610
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1396": {
      "fn": "Governance.getVotes",
      "offset": [
        5221,
        5610
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x355D"
    },
    "1399": {
      "fn": "Governance.getVotes",
      "jump": "i",
      "offset": [
        5221,
        5610
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1400": {
      "fn": "Governance.getVotes",
      "offset": [
        5221,
        5610
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1401": {
      "fn": "Governance.getVotes",
      "offset": [
        5221,
        5610
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2FD7"
    },
    "1404": {
      "fn": "Governance.getVotes",
      "jump": "i",
      "offset": [
        5221,
        5610
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1405": {
      "fn": "Governance.getVotes",
      "offset": [
        5221,
        5610
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1406": {
      "fn": "Governance.getVotes",
      "offset": [
        5221,
        5610
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1408": {
      "fn": "Governance.getVotes",
      "offset": [
        5221,
        5610
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1409": {
      "fn": "Governance.getVotes",
      "offset": [
        5221,
        5610
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1C2"
    },
    "1412": {
      "fn": "Governance.getVotes",
      "offset": [
        5221,
        5610
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1413": {
      "fn": "Governance.getVotes",
      "offset": [
        5221,
        5610
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1414": {
      "fn": "Governance.getVotes",
      "offset": [
        5221,
        5610
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3D5C"
    },
    "1417": {
      "fn": "Governance.getVotes",
      "jump": "i",
      "offset": [
        5221,
        5610
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1418": {
      "offset": [
        2759,
        2805
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1419": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x8"
    },
    "1421": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1423": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1424": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1426": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1427": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1428": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1429": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1431": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1432": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1433": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1434": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1435": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1436": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1437": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5A5"
    },
    "1440": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1441": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3DA4"
    },
    "1444": {
      "fn": "Governance.getVotes",
      "jump": "i",
      "offset": [
        2759,
        2805
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1445": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1446": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1447": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "1449": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "ADD",
      "path": "2"
    },
    "1450": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1452": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1453": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1454": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "DIV",
      "path": "2"
    },
    "1455": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "MUL",
      "path": "2"
    },
    "1456": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1458": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "ADD",
      "path": "2"
    },
    "1459": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1461": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1462": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1463": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1464": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "ADD",
      "path": "2"
    },
    "1465": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1467": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1468": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1469": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1470": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1471": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1472": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1473": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1474": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1475": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1477": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "ADD",
      "path": "2"
    },
    "1478": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1479": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1480": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1481": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5D1"
    },
    "1484": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1485": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3DA4"
    },
    "1488": {
      "fn": "Governance.getVotes",
      "jump": "i",
      "offset": [
        2759,
        2805
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1489": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1490": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1491": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1492": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x61E"
    },
    "1495": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1496": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1497": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "1499": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "LT",
      "path": "2"
    },
    "1500": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5F3"
    },
    "1503": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1504": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "1507": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1508": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1509": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1510": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "DIV",
      "path": "2"
    },
    "1511": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "MUL",
      "path": "2"
    },
    "1512": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1513": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1514": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1515": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1517": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "ADD",
      "path": "2"
    },
    "1518": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1519": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x61E"
    },
    "1522": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1523": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1524": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1525": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "ADD",
      "path": "2"
    },
    "1526": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1527": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1528": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1530": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1531": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1533": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1535": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1536": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1537": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1538": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1539": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1540": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1541": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1542": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1543": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "1545": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "ADD",
      "path": "2"
    },
    "1546": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1547": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1549": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "ADD",
      "path": "2"
    },
    "1550": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1551": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1552": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "GT",
      "path": "2"
    },
    "1553": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x601"
    },
    "1556": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1557": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1558": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1559": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "SUB",
      "path": "2"
    },
    "1560": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "1562": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "AND",
      "path": "2"
    },
    "1563": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1564": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "ADD",
      "path": "2"
    },
    "1565": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1566": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1567": {
      "op": "POP"
    },
    "1568": {
      "op": "POP"
    },
    "1569": {
      "op": "POP"
    },
    "1570": {
      "op": "POP"
    },
    "1571": {
      "offset": [
        2759,
        2805
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "1573": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1574": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "ADD",
      "path": "2"
    },
    "1575": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1576": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "1578": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1579": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "1580": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "ADD",
      "path": "2"
    },
    "1581": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1582": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1583": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1584": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "1587": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "AND",
      "path": "2"
    },
    "1588": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1589": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "1595": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1596": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1597": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "AND",
      "path": "2"
    },
    "1598": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1599": {
      "op": "POP"
    },
    "1600": {
      "offset": [
        2759,
        2805
      ],
      "op": "PUSH6",
      "path": "2",
      "value": "0x10000000000"
    },
    "1607": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1608": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "DIV",
      "path": "2"
    },
    "1609": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1610": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "AND",
      "path": "2"
    },
    "1611": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1612": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1614": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "1616": {
      "op": "SHL"
    },
    "1617": {
      "offset": [
        2759,
        2805
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1618": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "DIV",
      "path": "2"
    },
    "1619": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "AND",
      "path": "2"
    },
    "1620": {
      "fn": "Governance.getVotes",
      "offset": [
        2759,
        2805
      ],
      "op": "DUP6",
      "path": "2"
    },
    "1621": {
      "fn": "Governance.getVotes",
      "jump": "o",
      "offset": [
        2759,
        2805
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1622": {
      "fn": "Governance.testHashing",
      "offset": [
        17771,
        18274
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1623": {
      "fn": "Governance.testHashing",
      "offset": [
        17872,
        17894
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1625": {
      "fn": "Governance.testHashing",
      "offset": [
        17914,
        17921
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1626": {
      "fn": "Governance.testHashing",
      "offset": [
        17922,
        17923
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1628": {
      "fn": "Governance.testHashing",
      "offset": [
        17914,
        17924
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1629": {
      "fn": "Governance.testHashing",
      "offset": [
        17914,
        17924
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1630": {
      "fn": "Governance.testHashing",
      "offset": [
        17914,
        17924
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1631": {
      "fn": "Governance.testHashing",
      "offset": [
        17914,
        17924
      ],
      "op": "LT",
      "path": "2"
    },
    "1632": {
      "fn": "Governance.testHashing",
      "offset": [
        17914,
        17924
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x66B"
    },
    "1635": {
      "fn": "Governance.testHashing",
      "offset": [
        17914,
        17924
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1636": {
      "fn": "Governance.testHashing",
      "offset": [
        17914,
        17924
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x66B"
    },
    "1639": {
      "fn": "Governance.testHashing",
      "offset": [
        17914,
        17924
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3DDE"
    },
    "1642": {
      "fn": "Governance.testHashing",
      "jump": "i",
      "offset": [
        17914,
        17924
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1643": {
      "fn": "Governance.testHashing",
      "offset": [
        17914,
        17924
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1644": {
      "fn": "Governance.testHashing",
      "offset": [
        17914,
        17924
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1646": {
      "fn": "Governance.testHashing",
      "offset": [
        17914,
        17924
      ],
      "op": "MUL",
      "path": "2"
    },
    "1647": {
      "fn": "Governance.testHashing",
      "offset": [
        17914,
        17924
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1649": {
      "fn": "Governance.testHashing",
      "offset": [
        17914,
        17924
      ],
      "op": "ADD",
      "path": "2"
    },
    "1650": {
      "fn": "Governance.testHashing",
      "offset": [
        17914,
        17924
      ],
      "op": "ADD",
      "path": "2"
    },
    "1651": {
      "fn": "Governance.testHashing",
      "offset": [
        17914,
        17924
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1652": {
      "fn": "Governance.testHashing",
      "offset": [
        17897,
        17925
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1654": {
      "fn": "Governance.testHashing",
      "offset": [
        17897,
        17925
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1655": {
      "fn": "Governance.testHashing",
      "offset": [
        17897,
        17925
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1657": {
      "fn": "Governance.testHashing",
      "offset": [
        17897,
        17925
      ],
      "op": "ADD",
      "path": "2"
    },
    "1658": {
      "fn": "Governance.testHashing",
      "offset": [
        17897,
        17925
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x685"
    },
    "1661": {
      "fn": "Governance.testHashing",
      "offset": [
        17897,
        17925
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1662": {
      "op": "DUP2"
    },
    "1663": {
      "op": "MSTORE"
    },
    "1664": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1666": {
      "op": "ADD"
    },
    "1667": {
      "op": "SWAP1"
    },
    "1668": {
      "op": "JUMP"
    },
    "1669": {
      "fn": "Governance.testHashing",
      "offset": [
        17897,
        17925
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1670": {
      "fn": "Governance.testHashing",
      "offset": [
        17897,
        17925
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1672": {
      "fn": "Governance.testHashing",
      "offset": [
        17897,
        17925
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1673": {
      "fn": "Governance.testHashing",
      "offset": [
        17897,
        17925
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1675": {
      "fn": "Governance.testHashing",
      "offset": [
        17897,
        17925
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1676": {
      "fn": "Governance.testHashing",
      "offset": [
        17897,
        17925
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1677": {
      "fn": "Governance.testHashing",
      "offset": [
        17897,
        17925
      ],
      "op": "SUB",
      "path": "2"
    },
    "1678": {
      "fn": "Governance.testHashing",
      "offset": [
        17897,
        17925
      ],
      "op": "SUB",
      "path": "2"
    },
    "1679": {
      "fn": "Governance.testHashing",
      "offset": [
        17897,
        17925
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1680": {
      "fn": "Governance.testHashing",
      "offset": [
        17897,
        17925
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1681": {
      "fn": "Governance.testHashing",
      "offset": [
        17897,
        17925
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1682": {
      "fn": "Governance.testHashing",
      "offset": [
        17897,
        17925
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1684": {
      "fn": "Governance.testHashing",
      "offset": [
        17897,
        17925
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1685": {
      "fn": "Governance.testHashing",
      "offset": [
        17872,
        17925
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1686": {
      "fn": "Governance.testHashing",
      "offset": [
        17872,
        17925
      ],
      "op": "POP",
      "path": "2"
    },
    "1687": {
      "branch": 128,
      "fn": "Governance.testHashing",
      "offset": [
        17938,
        17946
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1688": {
      "fn": "Governance.testHashing",
      "offset": [
        17935,
        18128
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1689": {
      "fn": "Governance.testHashing",
      "offset": [
        17935,
        18128
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x711"
    },
    "1692": {
      "branch": 128,
      "fn": "Governance.testHashing",
      "offset": [
        17935,
        18128
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1693": {
      "fn": "Governance.testHashing",
      "offset": [
        17966,
        17975
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1695": {
      "fn": "Governance.testHashing",
      "offset": [
        17962,
        18118
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1696": {
      "fn": "Governance.testHashing",
      "offset": [
        17985,
        17992
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1697": {
      "fn": "Governance.testHashing",
      "offset": [
        17985,
        17999
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1698": {
      "fn": "Governance.testHashing",
      "offset": [
        17981,
        17982
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1699": {
      "fn": "Governance.testHashing",
      "offset": [
        17981,
        17999
      ],
      "op": "LT",
      "path": "2"
    },
    "1700": {
      "fn": "Governance.testHashing",
      "offset": [
        17962,
        18118
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1701": {
      "fn": "Governance.testHashing",
      "offset": [
        17962,
        18118
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x70F"
    },
    "1704": {
      "fn": "Governance.testHashing",
      "offset": [
        17962,
        18118
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1705": {
      "fn": "Governance.testHashing",
      "offset": [
        18059,
        18066
      ],
      "op": "DUP4",
      "path": "2",
      "statement": 1
    },
    "1706": {
      "fn": "Governance.testHashing",
      "offset": [
        18067,
        18068
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1707": {
      "fn": "Governance.testHashing",
      "offset": [
        18059,
        18069
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1708": {
      "fn": "Governance.testHashing",
      "offset": [
        18059,
        18069
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1709": {
      "fn": "Governance.testHashing",
      "offset": [
        18059,
        18069
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1710": {
      "fn": "Governance.testHashing",
      "offset": [
        18059,
        18069
      ],
      "op": "LT",
      "path": "2"
    },
    "1711": {
      "fn": "Governance.testHashing",
      "offset": [
        18059,
        18069
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6BA"
    },
    "1714": {
      "fn": "Governance.testHashing",
      "offset": [
        18059,
        18069
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1715": {
      "fn": "Governance.testHashing",
      "offset": [
        18059,
        18069
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6BA"
    },
    "1718": {
      "fn": "Governance.testHashing",
      "offset": [
        18059,
        18069
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3DDE"
    },
    "1721": {
      "fn": "Governance.testHashing",
      "jump": "i",
      "offset": [
        18059,
        18069
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1722": {
      "fn": "Governance.testHashing",
      "offset": [
        18059,
        18069
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1723": {
      "fn": "Governance.testHashing",
      "offset": [
        18059,
        18069
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1725": {
      "fn": "Governance.testHashing",
      "offset": [
        18059,
        18069
      ],
      "op": "MUL",
      "path": "2"
    },
    "1726": {
      "fn": "Governance.testHashing",
      "offset": [
        18059,
        18069
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1728": {
      "fn": "Governance.testHashing",
      "offset": [
        18059,
        18069
      ],
      "op": "ADD",
      "path": "2"
    },
    "1729": {
      "fn": "Governance.testHashing",
      "offset": [
        18059,
        18069
      ],
      "op": "ADD",
      "path": "2"
    },
    "1730": {
      "fn": "Governance.testHashing",
      "offset": [
        18059,
        18069
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1731": {
      "fn": "Governance.testHashing",
      "offset": [
        18042,
        18070
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1733": {
      "fn": "Governance.testHashing",
      "offset": [
        18042,
        18070
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1734": {
      "fn": "Governance.testHashing",
      "offset": [
        18042,
        18070
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1736": {
      "fn": "Governance.testHashing",
      "offset": [
        18042,
        18070
      ],
      "op": "ADD",
      "path": "2"
    },
    "1737": {
      "fn": "Governance.testHashing",
      "offset": [
        18042,
        18070
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6D4"
    },
    "1740": {
      "fn": "Governance.testHashing",
      "offset": [
        18042,
        18070
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1741": {
      "op": "DUP2"
    },
    "1742": {
      "op": "MSTORE"
    },
    "1743": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1745": {
      "op": "ADD"
    },
    "1746": {
      "op": "SWAP1"
    },
    "1747": {
      "op": "JUMP"
    },
    "1748": {
      "fn": "Governance.testHashing",
      "offset": [
        18042,
        18070
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1749": {
      "fn": "Governance.testHashing",
      "offset": [
        18042,
        18070
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1751": {
      "fn": "Governance.testHashing",
      "offset": [
        18042,
        18070
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1752": {
      "fn": "Governance.testHashing",
      "offset": [
        18042,
        18070
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1754": {
      "fn": "Governance.testHashing",
      "offset": [
        18042,
        18070
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1755": {
      "fn": "Governance.testHashing",
      "offset": [
        18042,
        18070
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1756": {
      "fn": "Governance.testHashing",
      "offset": [
        18042,
        18070
      ],
      "op": "SUB",
      "path": "2"
    },
    "1757": {
      "fn": "Governance.testHashing",
      "offset": [
        18042,
        18070
      ],
      "op": "SUB",
      "path": "2"
    },
    "1758": {
      "fn": "Governance.testHashing",
      "offset": [
        18042,
        18070
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1759": {
      "fn": "Governance.testHashing",
      "offset": [
        18042,
        18070
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1760": {
      "fn": "Governance.testHashing",
      "offset": [
        18042,
        18070
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1761": {
      "fn": "Governance.testHashing",
      "offset": [
        18042,
        18070
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1763": {
      "fn": "Governance.testHashing",
      "offset": [
        18042,
        18070
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1764": {
      "fn": "Governance.testHashing",
      "offset": [
        18032,
        18071
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1765": {
      "fn": "Governance.testHashing",
      "offset": [
        18032,
        18071
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1766": {
      "fn": "Governance.testHashing",
      "offset": [
        18032,
        18071
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1767": {
      "fn": "Governance.testHashing",
      "offset": [
        18032,
        18071
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1769": {
      "fn": "Governance.testHashing",
      "offset": [
        18032,
        18071
      ],
      "op": "ADD",
      "path": "2"
    },
    "1770": {
      "fn": "Governance.testHashing",
      "offset": [
        18032,
        18071
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1771": {
      "fn": "Governance.testHashing",
      "offset": [
        18019,
        18026
      ],
      "op": "DUP5",
      "path": "2"
    },
    "1772": {
      "fn": "Governance.testHashing",
      "offset": [
        18027,
        18028
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1773": {
      "fn": "Governance.testHashing",
      "offset": [
        18019,
        18029
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1774": {
      "fn": "Governance.testHashing",
      "offset": [
        18019,
        18029
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1775": {
      "fn": "Governance.testHashing",
      "offset": [
        18019,
        18029
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1776": {
      "fn": "Governance.testHashing",
      "offset": [
        18019,
        18029
      ],
      "op": "LT",
      "path": "2"
    },
    "1777": {
      "fn": "Governance.testHashing",
      "offset": [
        18019,
        18029
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6FC"
    },
    "1780": {
      "fn": "Governance.testHashing",
      "offset": [
        18019,
        18029
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1781": {
      "fn": "Governance.testHashing",
      "offset": [
        18019,
        18029
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6FC"
    },
    "1784": {
      "fn": "Governance.testHashing",
      "offset": [
        18019,
        18029
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3DDE"
    },
    "1787": {
      "fn": "Governance.testHashing",
      "jump": "i",
      "offset": [
        18019,
        18029
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1788": {
      "fn": "Governance.testHashing",
      "offset": [
        18019,
        18029
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1789": {
      "fn": "Governance.testHashing",
      "offset": [
        18019,
        18029
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1791": {
      "fn": "Governance.testHashing",
      "offset": [
        18019,
        18029
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1792": {
      "fn": "Governance.testHashing",
      "offset": [
        18019,
        18029
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1793": {
      "fn": "Governance.testHashing",
      "offset": [
        18019,
        18029
      ],
      "op": "MUL",
      "path": "2"
    },
    "1794": {
      "fn": "Governance.testHashing",
      "offset": [
        18019,
        18029
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1795": {
      "fn": "Governance.testHashing",
      "offset": [
        18019,
        18029
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1796": {
      "fn": "Governance.testHashing",
      "offset": [
        18019,
        18029
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1797": {
      "fn": "Governance.testHashing",
      "offset": [
        18019,
        18029
      ],
      "op": "ADD",
      "path": "2"
    },
    "1798": {
      "fn": "Governance.testHashing",
      "offset": [
        18019,
        18029
      ],
      "op": "ADD",
      "path": "2"
    },
    "1799": {
      "fn": "Governance.testHashing",
      "offset": [
        18019,
        18071
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1800": {
      "fn": "Governance.testHashing",
      "offset": [
        18099,
        18102
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 2,
      "value": "0x1"
    },
    "1802": {
      "fn": "Governance.testHashing",
      "offset": [
        18099,
        18102
      ],
      "op": "ADD",
      "path": "2"
    },
    "1803": {
      "fn": "Governance.testHashing",
      "offset": [
        17962,
        18118
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x69F"
    },
    "1806": {
      "fn": "Governance.testHashing",
      "offset": [
        17962,
        18118
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1807": {
      "fn": "Governance.testHashing",
      "offset": [
        17962,
        18118
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1808": {
      "fn": "Governance.testHashing",
      "offset": [
        17962,
        18118
      ],
      "op": "POP",
      "path": "2"
    },
    "1809": {
      "fn": "Governance.testHashing",
      "offset": [
        17935,
        18128
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1810": {
      "fn": "Governance.testHashing",
      "offset": [
        18137,
        18151
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1812": {
      "fn": "Governance.testHashing",
      "offset": [
        18181,
        18188
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1813": {
      "fn": "Governance.testHashing",
      "offset": [
        18164,
        18189
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1815": {
      "fn": "Governance.testHashing",
      "offset": [
        18164,
        18189
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1816": {
      "fn": "Governance.testHashing",
      "offset": [
        18164,
        18189
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1818": {
      "fn": "Governance.testHashing",
      "offset": [
        18164,
        18189
      ],
      "op": "ADD",
      "path": "2"
    },
    "1819": {
      "fn": "Governance.testHashing",
      "offset": [
        18164,
        18189
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x724"
    },
    "1822": {
      "fn": "Governance.testHashing",
      "offset": [
        18164,
        18189
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1823": {
      "fn": "Governance.testHashing",
      "offset": [
        18164,
        18189
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1824": {
      "fn": "Governance.testHashing",
      "offset": [
        18164,
        18189
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3DF4"
    },
    "1827": {
      "fn": "Governance.testHashing",
      "jump": "i",
      "offset": [
        18164,
        18189
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1828": {
      "fn": "Governance.testHashing",
      "offset": [
        18164,
        18189
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1829": {
      "fn": "Governance.testHashing",
      "offset": [
        18164,
        18189
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1831": {
      "fn": "Governance.testHashing",
      "offset": [
        18164,
        18189
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1832": {
      "fn": "Governance.testHashing",
      "offset": [
        18164,
        18189
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1834": {
      "fn": "Governance.testHashing",
      "offset": [
        18164,
        18189
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1835": {
      "fn": "Governance.testHashing",
      "offset": [
        18164,
        18189
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1836": {
      "fn": "Governance.testHashing",
      "offset": [
        18164,
        18189
      ],
      "op": "SUB",
      "path": "2"
    },
    "1837": {
      "fn": "Governance.testHashing",
      "offset": [
        18164,
        18189
      ],
      "op": "SUB",
      "path": "2"
    },
    "1838": {
      "fn": "Governance.testHashing",
      "offset": [
        18164,
        18189
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1839": {
      "fn": "Governance.testHashing",
      "offset": [
        18164,
        18189
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1840": {
      "fn": "Governance.testHashing",
      "offset": [
        18164,
        18189
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1841": {
      "fn": "Governance.testHashing",
      "offset": [
        18164,
        18189
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1843": {
      "fn": "Governance.testHashing",
      "offset": [
        18164,
        18189
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1844": {
      "fn": "Governance.testHashing",
      "offset": [
        18154,
        18190
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1845": {
      "fn": "Governance.testHashing",
      "offset": [
        18154,
        18190
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1846": {
      "fn": "Governance.testHashing",
      "offset": [
        18154,
        18190
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1847": {
      "fn": "Governance.testHashing",
      "offset": [
        18154,
        18190
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1849": {
      "fn": "Governance.testHashing",
      "offset": [
        18154,
        18190
      ],
      "op": "ADD",
      "path": "2"
    },
    "1850": {
      "fn": "Governance.testHashing",
      "offset": [
        18154,
        18190
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1851": {
      "fn": "Governance.testHashing",
      "offset": [
        18137,
        18190
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1852": {
      "fn": "Governance.testHashing",
      "offset": [
        18137,
        18190
      ],
      "op": "POP",
      "path": "2"
    },
    "1853": {
      "fn": "Governance.testHashing",
      "offset": [
        18205,
        18267
      ],
      "op": "PUSH32",
      "path": "2",
      "statement": 3,
      "value": "0x637CE8D069E382E64EF71CF191623B88C7E307CE252E908E7F2BABBAD0CB81EA"
    },
    "1886": {
      "fn": "Governance.testHashing",
      "offset": [
        18217,
        18223
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1887": {
      "fn": "Governance.testHashing",
      "offset": [
        18233,
        18243
      ],
      "op": "DUP7",
      "path": "2"
    },
    "1888": {
      "fn": "Governance.testHashing",
      "offset": [
        18225,
        18231
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1889": {
      "fn": "Governance.testHashing",
      "offset": [
        18225,
        18243
      ],
      "op": "EQ",
      "path": "2"
    },
    "1890": {
      "fn": "Governance.testHashing",
      "offset": [
        18245,
        18252
      ],
      "op": "DUP7",
      "path": "2"
    },
    "1891": {
      "fn": "Governance.testHashing",
      "offset": [
        18253,
        18254
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1893": {
      "fn": "Governance.testHashing",
      "offset": [
        18245,
        18255
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1894": {
      "fn": "Governance.testHashing",
      "offset": [
        18245,
        18255
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1895": {
      "fn": "Governance.testHashing",
      "offset": [
        18245,
        18255
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1896": {
      "fn": "Governance.testHashing",
      "offset": [
        18245,
        18255
      ],
      "op": "LT",
      "path": "2"
    },
    "1897": {
      "fn": "Governance.testHashing",
      "offset": [
        18245,
        18255
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x774"
    },
    "1900": {
      "fn": "Governance.testHashing",
      "offset": [
        18245,
        18255
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1901": {
      "fn": "Governance.testHashing",
      "offset": [
        18245,
        18255
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x774"
    },
    "1904": {
      "fn": "Governance.testHashing",
      "offset": [
        18245,
        18255
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3DDE"
    },
    "1907": {
      "fn": "Governance.testHashing",
      "jump": "i",
      "offset": [
        18245,
        18255
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1908": {
      "fn": "Governance.testHashing",
      "offset": [
        18245,
        18255
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1909": {
      "fn": "Governance.testHashing",
      "offset": [
        18245,
        18255
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1911": {
      "fn": "Governance.testHashing",
      "offset": [
        18245,
        18255
      ],
      "op": "MUL",
      "path": "2"
    },
    "1912": {
      "fn": "Governance.testHashing",
      "offset": [
        18245,
        18255
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1914": {
      "fn": "Governance.testHashing",
      "offset": [
        18245,
        18255
      ],
      "op": "ADD",
      "path": "2"
    },
    "1915": {
      "fn": "Governance.testHashing",
      "offset": [
        18245,
        18255
      ],
      "op": "ADD",
      "path": "2"
    },
    "1916": {
      "fn": "Governance.testHashing",
      "offset": [
        18245,
        18255
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1917": {
      "fn": "Governance.testHashing",
      "offset": [
        18257,
        18266
      ],
      "op": "DUP6",
      "path": "2"
    },
    "1918": {
      "fn": "Governance.testHashing",
      "offset": [
        18205,
        18267
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1920": {
      "fn": "Governance.testHashing",
      "offset": [
        18205,
        18267
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1921": {
      "fn": "Governance.testHashing",
      "offset": [
        18205,
        18267
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x78D"
    },
    "1924": {
      "fn": "Governance.testHashing",
      "offset": [
        18205,
        18267
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "1925": {
      "fn": "Governance.testHashing",
      "offset": [
        18205,
        18267
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "1926": {
      "fn": "Governance.testHashing",
      "offset": [
        18205,
        18267
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1927": {
      "fn": "Governance.testHashing",
      "offset": [
        18205,
        18267
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1928": {
      "fn": "Governance.testHashing",
      "offset": [
        18205,
        18267
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1929": {
      "fn": "Governance.testHashing",
      "offset": [
        18205,
        18267
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3E2A"
    },
    "1932": {
      "fn": "Governance.testHashing",
      "jump": "i",
      "offset": [
        18205,
        18267
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1933": {
      "fn": "Governance.testHashing",
      "offset": [
        18205,
        18267
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1934": {
      "fn": "Governance.testHashing",
      "offset": [
        18205,
        18267
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1936": {
      "fn": "Governance.testHashing",
      "offset": [
        18205,
        18267
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1937": {
      "fn": "Governance.testHashing",
      "offset": [
        18205,
        18267
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1938": {
      "fn": "Governance.testHashing",
      "offset": [
        18205,
        18267
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1939": {
      "fn": "Governance.testHashing",
      "offset": [
        18205,
        18267
      ],
      "op": "SUB",
      "path": "2"
    },
    "1940": {
      "fn": "Governance.testHashing",
      "offset": [
        18205,
        18267
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1941": {
      "fn": "Governance.testHashing",
      "offset": [
        18205,
        18267
      ],
      "op": "LOG1",
      "path": "2"
    },
    "1942": {
      "fn": "Governance.testHashing",
      "offset": [
        17862,
        18274
      ],
      "op": "POP",
      "path": "2"
    },
    "1943": {
      "fn": "Governance.testHashing",
      "offset": [
        17862,
        18274
      ],
      "op": "POP",
      "path": "2"
    },
    "1944": {
      "fn": "Governance.testHashing",
      "offset": [
        17771,
        18274
      ],
      "op": "POP",
      "path": "2"
    },
    "1945": {
      "fn": "Governance.testHashing",
      "offset": [
        17771,
        18274
      ],
      "op": "POP",
      "path": "2"
    },
    "1946": {
      "fn": "Governance.testHashing",
      "offset": [
        17771,
        18274
      ],
      "op": "POP",
      "path": "2"
    },
    "1947": {
      "fn": "Governance.testHashing",
      "jump": "o",
      "offset": [
        17771,
        18274
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1948": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4679,
        4921
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1949": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4762,
        4772
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "1951": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4762,
        4772
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1952": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4762,
        4788
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1954": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4762,
        4788
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1955": {
      "op": "PUSH4",
      "value": "0x31A9108F"
    },
    "1960": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "1962": {
      "op": "SHL"
    },
    "1963": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4762,
        4788
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1964": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4762,
        4788
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1965": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4762,
        4788
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1967": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4762,
        4788
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1968": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4762,
        4788
      ],
      "op": "ADD",
      "path": "2"
    },
    "1969": {
      "op": "DUP4"
    },
    "1970": {
      "op": "SWAP1"
    },
    "1971": {
      "op": "MSTORE"
    },
    "1972": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4743,
        4747
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1974": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4743,
        4747
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1975": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4790,
        4800
      ],
      "op": "CALLER",
      "path": "2"
    },
    "1976": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4790,
        4800
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1977": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1979": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1981": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1983": {
      "op": "SHL"
    },
    "1984": {
      "op": "SUB"
    },
    "1985": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4762,
        4772
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1986": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4762,
        4772
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1987": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4762,
        4772
      ],
      "op": "AND",
      "path": "2"
    },
    "1988": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4762,
        4772
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1989": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4762,
        4780
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x6352211E"
    },
    "1994": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4762,
        4780
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1995": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1997": {
      "op": "ADD"
    },
    "1998": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4762,
        4788
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2000": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4762,
        4788
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2002": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4762,
        4788
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2003": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4762,
        4788
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2004": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4762,
        4788
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2005": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4762,
        4788
      ],
      "op": "SUB",
      "path": "2"
    },
    "2006": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4762,
        4788
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2007": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4762,
        4788
      ],
      "op": "DUP7",
      "path": "2"
    },
    "2008": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4762,
        4788
      ],
      "op": "GAS",
      "path": "2"
    },
    "2009": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4762,
        4788
      ],
      "op": "STATICCALL",
      "path": "2"
    },
    "2010": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4762,
        4788
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2011": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4762,
        4788
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2012": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4762,
        4788
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2013": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4762,
        4788
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7EA"
    },
    "2016": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4762,
        4788
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2017": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4762,
        4788
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "2018": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4762,
        4788
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2020": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4762,
        4788
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2021": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4762,
        4788
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "2022": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4762,
        4788
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "2023": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4762,
        4788
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2025": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4762,
        4788
      ],
      "op": "REVERT",
      "path": "2"
    },
    "2026": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4762,
        4788
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2027": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4762,
        4788
      ],
      "op": "POP",
      "path": "2"
    },
    "2028": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4762,
        4788
      ],
      "op": "POP",
      "path": "2"
    },
    "2029": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4762,
        4788
      ],
      "op": "POP",
      "path": "2"
    },
    "2030": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4762,
        4788
      ],
      "op": "POP",
      "path": "2"
    },
    "2031": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4762,
        4788
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2033": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4762,
        4788
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2034": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4762,
        4788
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "2035": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4762,
        4788
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "2037": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4762,
        4788
      ],
      "op": "NOT",
      "path": "2"
    },
    "2038": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4762,
        4788
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "2040": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4762,
        4788
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2041": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4762,
        4788
      ],
      "op": "ADD",
      "path": "2"
    },
    "2042": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4762,
        4788
      ],
      "op": "AND",
      "path": "2"
    },
    "2043": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4762,
        4788
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2044": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4762,
        4788
      ],
      "op": "ADD",
      "path": "2"
    },
    "2045": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4762,
        4788
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2046": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4762,
        4788
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2048": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4762,
        4788
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2049": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4762,
        4788
      ],
      "op": "POP",
      "path": "2"
    },
    "2050": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4762,
        4788
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2051": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4762,
        4788
      ],
      "op": "ADD",
      "path": "2"
    },
    "2052": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4762,
        4788
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2053": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4762,
        4788
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x80E"
    },
    "2056": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4762,
        4788
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2057": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4762,
        4788
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2058": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4762,
        4788
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3E5B"
    },
    "2061": {
      "fn": "Governance.isMyWizardOnBoard",
      "jump": "i",
      "offset": [
        4762,
        4788
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2062": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4762,
        4788
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2063": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2065": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2067": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2069": {
      "op": "SHL"
    },
    "2070": {
      "op": "SUB"
    },
    "2071": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4762,
        4800
      ],
      "op": "AND",
      "path": "2"
    },
    "2072": {
      "branch": 129,
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4762,
        4800
      ],
      "op": "EQ",
      "path": "2"
    },
    "2073": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4762,
        4856
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2074": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4762,
        4856
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2075": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4762,
        4856
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x892"
    },
    "2078": {
      "branch": 129,
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4762,
        4856
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2079": {
      "op": "POP"
    },
    "2080": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4846,
        4856
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE"
    },
    "2082": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4846,
        4856
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2083": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4804,
        4815
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "2085": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4804,
        4815
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2086": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4804,
        4843
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2088": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4804,
        4843
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2089": {
      "op": "PUSH4",
      "value": "0x1245C6B"
    },
    "2094": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "2096": {
      "op": "SHL"
    },
    "2097": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4804,
        4843
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2098": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4804,
        4843
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2099": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4804,
        4843
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2101": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4804,
        4843
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2102": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4804,
        4843
      ],
      "op": "ADD",
      "path": "2"
    },
    "2103": {
      "op": "DUP6"
    },
    "2104": {
      "op": "SWAP1"
    },
    "2105": {
      "op": "MSTORE"
    },
    "2106": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2108": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2110": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2112": {
      "op": "SHL"
    },
    "2113": {
      "op": "SUB"
    },
    "2114": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4804,
        4815
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2115": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4804,
        4815
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2116": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4804,
        4815
      ],
      "op": "AND",
      "path": "2"
    },
    "2117": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4804,
        4815
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2118": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4804,
        4835
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x49171AC"
    },
    "2123": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4804,
        4835
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2124": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2126": {
      "op": "ADD"
    },
    "2127": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4804,
        4843
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2129": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4804,
        4843
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2131": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4804,
        4843
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2132": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4804,
        4843
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2133": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4804,
        4843
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2134": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4804,
        4843
      ],
      "op": "SUB",
      "path": "2"
    },
    "2135": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4804,
        4843
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2136": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4804,
        4843
      ],
      "op": "DUP7",
      "path": "2"
    },
    "2137": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4804,
        4843
      ],
      "op": "GAS",
      "path": "2"
    },
    "2138": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4804,
        4843
      ],
      "op": "STATICCALL",
      "path": "2"
    },
    "2139": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4804,
        4843
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2140": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4804,
        4843
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2141": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4804,
        4843
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2142": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4804,
        4843
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x86B"
    },
    "2145": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4804,
        4843
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2146": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4804,
        4843
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "2147": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4804,
        4843
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2149": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4804,
        4843
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2150": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4804,
        4843
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "2151": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4804,
        4843
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "2152": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4804,
        4843
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2154": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4804,
        4843
      ],
      "op": "REVERT",
      "path": "2"
    },
    "2155": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4804,
        4843
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2156": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4804,
        4843
      ],
      "op": "POP",
      "path": "2"
    },
    "2157": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4804,
        4843
      ],
      "op": "POP",
      "path": "2"
    },
    "2158": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4804,
        4843
      ],
      "op": "POP",
      "path": "2"
    },
    "2159": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4804,
        4843
      ],
      "op": "POP",
      "path": "2"
    },
    "2160": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4804,
        4843
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2162": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4804,
        4843
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2163": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4804,
        4843
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "2164": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4804,
        4843
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "2166": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4804,
        4843
      ],
      "op": "NOT",
      "path": "2"
    },
    "2167": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4804,
        4843
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "2169": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4804,
        4843
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2170": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4804,
        4843
      ],
      "op": "ADD",
      "path": "2"
    },
    "2171": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4804,
        4843
      ],
      "op": "AND",
      "path": "2"
    },
    "2172": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4804,
        4843
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2173": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4804,
        4843
      ],
      "op": "ADD",
      "path": "2"
    },
    "2174": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4804,
        4843
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2175": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4804,
        4843
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2177": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4804,
        4843
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2178": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4804,
        4843
      ],
      "op": "POP",
      "path": "2"
    },
    "2179": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4804,
        4843
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2180": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4804,
        4843
      ],
      "op": "ADD",
      "path": "2"
    },
    "2181": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4804,
        4843
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2182": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4804,
        4843
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x88F"
    },
    "2185": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4804,
        4843
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2186": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4804,
        4843
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2187": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4804,
        4843
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3E78"
    },
    "2190": {
      "fn": "Governance.isMyWizardOnBoard",
      "jump": "i",
      "offset": [
        4804,
        4843
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2191": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4804,
        4843
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2192": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4804,
        4856
      ],
      "op": "GT",
      "path": "2"
    },
    "2193": {
      "branch": 130,
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4804,
        4856
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2194": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4762,
        4856
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2195": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4759,
        4893
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2196": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4759,
        4893
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x89F"
    },
    "2199": {
      "branch": 130,
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4759,
        4893
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2200": {
      "op": "POP"
    },
    "2201": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4878,
        4882
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 4,
      "value": "0x1"
    },
    "2203": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4878,
        4882
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2204": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4679,
        4921
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2205": {
      "op": "POP"
    },
    "2206": {
      "fn": "Governance.isMyWizardOnBoard",
      "jump": "o",
      "offset": [
        4679,
        4921
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2207": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4759,
        4893
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2208": {
      "op": "POP"
    },
    "2209": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4909,
        4914
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 5,
      "value": "0x0"
    },
    "2211": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4909,
        4914
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2212": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        4679,
        4921
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2213": {
      "op": "POP"
    },
    "2214": {
      "fn": "Governance.isMyWizardOnBoard",
      "jump": "o",
      "offset": [
        4679,
        4921
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2215": {
      "offset": [
        2445,
        2472
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2216": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "2218": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2219": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2220": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2221": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2222": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "LT",
      "path": "2"
    },
    "2223": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x8B7"
    },
    "2226": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2227": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2229": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2230": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "REVERT",
      "path": "2"
    },
    "2231": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2232": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2233": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2235": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2236": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2238": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2240": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2241": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2242": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "2244": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "MUL",
      "path": "2"
    },
    "2245": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "ADD",
      "path": "2"
    },
    "2246": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2248": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2249": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "POP",
      "path": "2"
    },
    "2250": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2251": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "POP",
      "path": "2"
    },
    "2252": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2253": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "2255": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "ADD",
      "path": "2"
    },
    "2256": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2257": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2258": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x8DA"
    },
    "2261": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2262": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3DA4"
    },
    "2265": {
      "fn": "Governance.isMyWizardOnBoard",
      "jump": "i",
      "offset": [
        2445,
        2472
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2266": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2267": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2268": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "2270": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "ADD",
      "path": "2"
    },
    "2271": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2273": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2274": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2275": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "DIV",
      "path": "2"
    },
    "2276": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "MUL",
      "path": "2"
    },
    "2277": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2279": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "ADD",
      "path": "2"
    },
    "2280": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2282": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2283": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2284": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2285": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "ADD",
      "path": "2"
    },
    "2286": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2288": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2289": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2290": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2291": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2292": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2293": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2294": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2295": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2296": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2298": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "ADD",
      "path": "2"
    },
    "2299": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2300": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2301": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2302": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x906"
    },
    "2305": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2306": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3DA4"
    },
    "2309": {
      "fn": "Governance.isMyWizardOnBoard",
      "jump": "i",
      "offset": [
        2445,
        2472
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2310": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2311": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2312": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2313": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x953"
    },
    "2316": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2317": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2318": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "2320": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "LT",
      "path": "2"
    },
    "2321": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x928"
    },
    "2324": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2325": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "2328": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2329": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2330": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2331": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "DIV",
      "path": "2"
    },
    "2332": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "MUL",
      "path": "2"
    },
    "2333": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2334": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2335": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2336": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2338": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "ADD",
      "path": "2"
    },
    "2339": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2340": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x953"
    },
    "2343": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2344": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2345": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2346": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "ADD",
      "path": "2"
    },
    "2347": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2348": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2349": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2351": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2352": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2354": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2356": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2357": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2358": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2359": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2360": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2361": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2362": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2363": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2364": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "2366": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "ADD",
      "path": "2"
    },
    "2367": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2368": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2370": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "ADD",
      "path": "2"
    },
    "2371": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2372": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2373": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "GT",
      "path": "2"
    },
    "2374": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x936"
    },
    "2377": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2378": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2379": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2380": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "SUB",
      "path": "2"
    },
    "2381": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "2383": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "AND",
      "path": "2"
    },
    "2384": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2385": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "ADD",
      "path": "2"
    },
    "2386": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2387": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2388": {
      "op": "POP"
    },
    "2389": {
      "op": "POP"
    },
    "2390": {
      "op": "POP"
    },
    "2391": {
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "2393": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2394": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "2395": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "ADD",
      "path": "2"
    },
    "2396": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2397": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2398": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2399": {
      "op": "POP"
    },
    "2400": {
      "op": "POP"
    },
    "2401": {
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "2403": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2404": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2405": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "AND",
      "path": "2"
    },
    "2406": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2407": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "2413": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "2416": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2417": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "DIV",
      "path": "2"
    },
    "2418": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2419": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "AND",
      "path": "2"
    },
    "2420": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2421": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH7",
      "path": "2",
      "value": "0x1000000000000"
    },
    "2429": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2430": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "DIV",
      "path": "2"
    },
    "2431": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "AND",
      "path": "2"
    },
    "2432": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2433": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH3",
      "path": "2",
      "value": "0xFFFFFF"
    },
    "2437": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2439": {
      "op": "PUSH1",
      "value": "0x38"
    },
    "2441": {
      "op": "SHL"
    },
    "2442": {
      "offset": [
        2445,
        2472
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2443": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "DIV",
      "path": "2"
    },
    "2444": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "AND",
      "path": "2"
    },
    "2445": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2446": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2448": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "2450": {
      "op": "SHL"
    },
    "2451": {
      "offset": [
        2445,
        2472
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2452": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "DIV",
      "path": "2"
    },
    "2453": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2454": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "AND",
      "path": "2"
    },
    "2455": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2456": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2458": {
      "op": "PUSH1",
      "value": "0x78"
    },
    "2460": {
      "op": "SHL"
    },
    "2461": {
      "offset": [
        2445,
        2472
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2462": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "DIV",
      "path": "2"
    },
    "2463": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2464": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2465": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "AND",
      "path": "2"
    },
    "2466": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2467": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "2470": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2472": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2474": {
      "op": "SHL"
    },
    "2475": {
      "offset": [
        2445,
        2472
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2476": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2477": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "DIV",
      "path": "2"
    },
    "2478": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "AND",
      "path": "2"
    },
    "2479": {
      "fn": "Governance.isMyWizardOnBoard",
      "offset": [
        2445,
        2472
      ],
      "op": "DUP9",
      "path": "2"
    },
    "2480": {
      "fn": "Governance.isMyWizardOnBoard",
      "jump": "o",
      "offset": [
        2445,
        2472
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2481": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4380,
        4673
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2482": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4428,
        4432
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2484": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4459,
        4460
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "2486": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4444,
        4645
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2487": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4467,
        4477
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE"
    },
    "2489": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4467,
        4477
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2490": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4462,
        4463
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2491": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4462,
        4477
      ],
      "op": "GT",
      "path": "2"
    },
    "2492": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4444,
        4645
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xAB7"
    },
    "2495": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4444,
        4645
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2496": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4506
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "2498": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4506
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2499": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4526
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "2501": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4526
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2502": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4546
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2504": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4546
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2505": {
      "op": "PUSH4",
      "value": "0x1038D37"
    },
    "2510": {
      "op": "PUSH1",
      "value": "0xE6"
    },
    "2512": {
      "op": "SHL"
    },
    "2513": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4546
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2514": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4546
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2515": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4546
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2517": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4546
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2518": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4546
      ],
      "op": "ADD",
      "path": "2"
    },
    "2519": {
      "op": "DUP5"
    },
    "2520": {
      "op": "SWAP1"
    },
    "2521": {
      "op": "MSTORE"
    },
    "2522": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4551,
        4561
      ],
      "op": "CALLER",
      "path": "2"
    },
    "2523": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4551,
        4561
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2524": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2526": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2528": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2530": {
      "op": "SHL"
    },
    "2531": {
      "op": "SUB"
    },
    "2532": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4506
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2533": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4506
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2534": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4506
      ],
      "op": "AND",
      "path": "2"
    },
    "2535": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4506
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2536": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4514
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x6352211E"
    },
    "2541": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4514
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2542": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4526
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2543": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4526
      ],
      "op": "AND",
      "path": "2"
    },
    "2544": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4526
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2545": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4543
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x40E34DC0"
    },
    "2550": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4543
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2551": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2553": {
      "op": "ADD"
    },
    "2554": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4546
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2556": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4546
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2558": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4546
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2559": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4546
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2560": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4546
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2561": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4546
      ],
      "op": "SUB",
      "path": "2"
    },
    "2562": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4546
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2563": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4546
      ],
      "op": "DUP7",
      "path": "2"
    },
    "2564": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4546
      ],
      "op": "GAS",
      "path": "2"
    },
    "2565": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4546
      ],
      "op": "STATICCALL",
      "path": "2"
    },
    "2566": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4546
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2567": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4546
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2568": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4546
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2569": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4546
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA16"
    },
    "2572": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4546
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2573": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4546
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "2574": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4546
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2576": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4546
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2577": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4546
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "2578": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4546
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "2579": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4546
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2581": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4546
      ],
      "op": "REVERT",
      "path": "2"
    },
    "2582": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4546
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2583": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4546
      ],
      "op": "POP",
      "path": "2"
    },
    "2584": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4546
      ],
      "op": "POP",
      "path": "2"
    },
    "2585": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4546
      ],
      "op": "POP",
      "path": "2"
    },
    "2586": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4546
      ],
      "op": "POP",
      "path": "2"
    },
    "2587": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4546
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2589": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4546
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2590": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4546
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "2591": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4546
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "2593": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4546
      ],
      "op": "NOT",
      "path": "2"
    },
    "2594": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4546
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "2596": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4546
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2597": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4546
      ],
      "op": "ADD",
      "path": "2"
    },
    "2598": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4546
      ],
      "op": "AND",
      "path": "2"
    },
    "2599": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4546
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2600": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4546
      ],
      "op": "ADD",
      "path": "2"
    },
    "2601": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4546
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2602": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4546
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2604": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4546
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2605": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4546
      ],
      "op": "POP",
      "path": "2"
    },
    "2606": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4546
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2607": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4546
      ],
      "op": "ADD",
      "path": "2"
    },
    "2608": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4546
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2609": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4546
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA3A"
    },
    "2612": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4546
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2613": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4546
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2614": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4546
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3E78"
    },
    "2617": {
      "fn": "Governance.isCallerOnBoard",
      "jump": "i",
      "offset": [
        4515,
        4546
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2618": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4515,
        4546
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2619": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2621": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2622": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2623": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xFFFFFFFF"
    },
    "2628": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "AND",
      "path": "2"
    },
    "2629": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE0"
    },
    "2631": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "SHL",
      "path": "2"
    },
    "2632": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2633": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2634": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2636": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "ADD",
      "path": "2"
    },
    "2637": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA58"
    },
    "2640": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2641": {
      "op": "DUP2"
    },
    "2642": {
      "op": "MSTORE"
    },
    "2643": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2645": {
      "op": "ADD"
    },
    "2646": {
      "op": "SWAP1"
    },
    "2647": {
      "op": "JUMP"
    },
    "2648": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2649": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2651": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2653": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2654": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2655": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2656": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "SUB",
      "path": "2"
    },
    "2657": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2658": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "DUP7",
      "path": "2"
    },
    "2659": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "GAS",
      "path": "2"
    },
    "2660": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "STATICCALL",
      "path": "2"
    },
    "2661": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2662": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2663": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2664": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA75"
    },
    "2667": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2668": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "2669": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2671": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2672": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "2673": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "2674": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2676": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "REVERT",
      "path": "2"
    },
    "2677": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2678": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "POP",
      "path": "2"
    },
    "2679": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "POP",
      "path": "2"
    },
    "2680": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "POP",
      "path": "2"
    },
    "2681": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "POP",
      "path": "2"
    },
    "2682": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2684": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2685": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "2686": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "2688": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "NOT",
      "path": "2"
    },
    "2689": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "2691": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2692": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "ADD",
      "path": "2"
    },
    "2693": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "AND",
      "path": "2"
    },
    "2694": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2695": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "ADD",
      "path": "2"
    },
    "2696": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2697": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2699": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2700": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "POP",
      "path": "2"
    },
    "2701": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2702": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "ADD",
      "path": "2"
    },
    "2703": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2704": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA99"
    },
    "2707": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2708": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2709": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3E5B"
    },
    "2712": {
      "fn": "Governance.isCallerOnBoard",
      "jump": "i",
      "offset": [
        4496,
        4547
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2713": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4547
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2714": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2716": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2718": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2720": {
      "op": "SHL"
    },
    "2721": {
      "op": "SUB"
    },
    "2722": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4561
      ],
      "op": "AND",
      "path": "2"
    },
    "2723": {
      "branch": 131,
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4496,
        4561
      ],
      "op": "SUB",
      "path": "2"
    },
    "2724": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4493,
        4607
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xAAF"
    },
    "2727": {
      "branch": 131,
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4493,
        4607
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2728": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4588,
        4592
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 6,
      "value": "0x1"
    },
    "2730": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4581,
        4592
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2731": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4581,
        4592
      ],
      "op": "POP",
      "path": "2"
    },
    "2732": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4581,
        4592
      ],
      "op": "POP",
      "path": "2"
    },
    "2733": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4380,
        4673
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2734": {
      "fn": "Governance.isCallerOnBoard",
      "jump": "o",
      "offset": [
        4380,
        4673
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2735": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4493,
        4607
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2736": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4630,
        4633
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 7,
      "value": "0x1"
    },
    "2738": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4630,
        4633
      ],
      "op": "ADD",
      "path": "2"
    },
    "2739": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4444,
        4645
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x9B6"
    },
    "2742": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4444,
        4645
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2743": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4444,
        4645
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2744": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4444,
        4645
      ],
      "op": "POP",
      "path": "2"
    },
    "2745": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4661,
        4666
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 8,
      "value": "0x0"
    },
    "2747": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4654,
        4666
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2748": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4654,
        4666
      ],
      "op": "POP",
      "path": "2"
    },
    "2749": {
      "fn": "Governance.isCallerOnBoard",
      "offset": [
        4380,
        4673
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2750": {
      "fn": "Governance.isCallerOnBoard",
      "jump": "o",
      "offset": [
        4380,
        4673
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2751": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7327,
        8936
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2752": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7396,
        7409
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "2754": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7411,
        7427
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2755": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7439,
        7466
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2757": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7469,
        7518
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xADD"
    },
    "2760": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7493,
        7517
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x6"
    },
    "2762": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5676,
        5688
      ],
      "op": "SLOAD",
      "path": "1",
      "statement": 9
    },
    "2763": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5676,
        5688
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xF"
    },
    "2765": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5676,
        5688
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2766": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5676,
        5688
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2767": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5676,
        5688
      ],
      "op": "SIGNEXTEND",
      "path": "1"
    },
    "2768": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2770": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2772": {
      "op": "SHL"
    },
    "2773": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5655,
        5665
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2774": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5655,
        5665
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "2775": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5655,
        5665
      ],
      "op": "DIV",
      "path": "1"
    },
    "2776": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5655,
        5665
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2777": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5655,
        5665
      ],
      "op": "SIGNEXTEND",
      "path": "1"
    },
    "2778": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5648,
        5689
      ],
      "op": "SUB",
      "path": "1"
    },
    "2779": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5648,
        5689
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2780": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5344,
        5707
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2781": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7469,
        7518
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2782": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7439,
        7518
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2783": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7439,
        7518
      ],
      "op": "POP",
      "path": "2"
    },
    "2784": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7528,
        7546
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xAE7"
    },
    "2787": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7528,
        7546
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x34BF"
    },
    "2790": {
      "fn": "Governance.getTasksAssignedToWiz",
      "jump": "i",
      "offset": [
        7528,
        7546
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2791": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7528,
        7546
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2792": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7556,
        7570
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2794": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7556,
        7570
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2795": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7556,
        7570
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2796": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7606,
        7958
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2797": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7628,
        7647
      ],
      "op": "DUP5",
      "path": "2"
    },
    "2798": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7624,
        7625
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2799": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7624,
        7647
      ],
      "op": "LT",
      "path": "2"
    },
    "2800": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7606,
        7958
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2801": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7606,
        7958
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC6F"
    },
    "2804": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7606,
        7958
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2805": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7681,
        7729
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 10,
      "value": "0xAFF"
    },
    "2808": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7701,
        7725
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x6"
    },
    "2810": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7727,
        7728
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2811": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7681,
        7700
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3101"
    },
    "2814": {
      "fn": "Governance.getTasksAssignedToWiz",
      "jump": "i",
      "offset": [
        7681,
        7729
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2815": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7681,
        7729
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2816": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7673,
        7730
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2818": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7753,
        7766
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 11
    },
    "2819": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7753,
        7766
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2820": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7753,
        7766
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2821": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7753,
        7758
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA"
    },
    "2823": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7753,
        7766
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2825": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7753,
        7766
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2826": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7753,
        7766
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2828": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7753,
        7766
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2829": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7753,
        7766
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2830": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7753,
        7766
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2831": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7753,
        7766
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2832": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2833": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2834": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x140"
    },
    "2837": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2838": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "ADD",
      "path": "2"
    },
    "2839": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2840": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2841": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2842": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2843": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2844": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7673,
        7730
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2845": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7673,
        7730
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "2846": {
      "op": "POP"
    },
    "2847": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2848": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2849": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2850": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2851": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7753,
        7766
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2852": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7753,
        7766
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2853": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB2D"
    },
    "2856": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2857": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3DA4"
    },
    "2860": {
      "fn": "Governance.getTasksAssignedToWiz",
      "jump": "i",
      "offset": [
        7744,
        7766
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2861": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2862": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2863": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "2865": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "ADD",
      "path": "2"
    },
    "2866": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2868": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2869": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2870": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "DIV",
      "path": "2"
    },
    "2871": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "MUL",
      "path": "2"
    },
    "2872": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2874": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "ADD",
      "path": "2"
    },
    "2875": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2877": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2878": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2879": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2880": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "ADD",
      "path": "2"
    },
    "2881": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2883": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2884": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2885": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2886": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2887": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2888": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2889": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2890": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2891": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2893": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "ADD",
      "path": "2"
    },
    "2894": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2895": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2896": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2897": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB59"
    },
    "2900": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2901": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3DA4"
    },
    "2904": {
      "fn": "Governance.getTasksAssignedToWiz",
      "jump": "i",
      "offset": [
        7744,
        7766
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2905": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2906": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2907": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2908": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xBA6"
    },
    "2911": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2912": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2913": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "2915": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "LT",
      "path": "2"
    },
    "2916": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB7B"
    },
    "2919": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2920": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "2923": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2924": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2925": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2926": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "DIV",
      "path": "2"
    },
    "2927": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "MUL",
      "path": "2"
    },
    "2928": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2929": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2930": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2931": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2933": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "ADD",
      "path": "2"
    },
    "2934": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2935": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xBA6"
    },
    "2938": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2939": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2940": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2941": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "ADD",
      "path": "2"
    },
    "2942": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2943": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2944": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2946": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2947": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2949": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2951": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2952": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2953": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2954": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2955": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2956": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2957": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2958": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2959": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "2961": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "ADD",
      "path": "2"
    },
    "2962": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2963": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2965": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "ADD",
      "path": "2"
    },
    "2966": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2967": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2968": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "GT",
      "path": "2"
    },
    "2969": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB89"
    },
    "2972": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2973": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2974": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2975": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "SUB",
      "path": "2"
    },
    "2976": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "2978": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "AND",
      "path": "2"
    },
    "2979": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2980": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "ADD",
      "path": "2"
    },
    "2981": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2982": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2983": {
      "op": "POP"
    },
    "2984": {
      "op": "POP"
    },
    "2985": {
      "op": "POP"
    },
    "2986": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2987": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2988": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2989": {
      "op": "POP"
    },
    "2990": {
      "op": "POP"
    },
    "2991": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "2993": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2994": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "ADD",
      "path": "2"
    },
    "2995": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2996": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "3002": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3003": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3004": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "AND",
      "path": "2"
    },
    "3005": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3007": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3008": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "ADD",
      "path": "2"
    },
    "3009": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3010": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "3012": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3013": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "ADD",
      "path": "2"
    },
    "3014": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3015": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3017": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3018": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "ADD",
      "path": "2"
    },
    "3019": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3020": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "3022": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3023": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "ADD",
      "path": "2"
    },
    "3024": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3025": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "3027": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3028": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "ADD",
      "path": "2"
    },
    "3029": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3030": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3032": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3033": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3034": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "ADD",
      "path": "2"
    },
    "3035": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3036": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "3038": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3039": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "AND",
      "path": "2"
    },
    "3040": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x80"
    },
    "3042": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3043": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "ADD",
      "path": "2"
    },
    "3044": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3045": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "3048": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3049": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3050": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "DIV",
      "path": "2"
    },
    "3051": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "PUSH3",
      "path": "2",
      "value": "0xFFFFFF"
    },
    "3055": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "AND",
      "path": "2"
    },
    "3056": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA0"
    },
    "3058": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "DUP5",
      "path": "2"
    },
    "3059": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "ADD",
      "path": "2"
    },
    "3060": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3061": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3063": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3065": {
      "op": "SHL"
    },
    "3066": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3067": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "DIV",
      "path": "2"
    },
    "3068": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3070": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3072": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "3074": {
      "op": "SHL"
    },
    "3075": {
      "op": "SUB"
    },
    "3076": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "AND",
      "path": "2"
    },
    "3077": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xC0"
    },
    "3079": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "DUP5",
      "path": "2"
    },
    "3080": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "ADD",
      "path": "2"
    },
    "3081": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3082": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3084": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "3086": {
      "op": "SHL"
    },
    "3087": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3088": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "DIV",
      "path": "2"
    },
    "3089": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "3092": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3093": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3094": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "AND",
      "path": "2"
    },
    "3095": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE0"
    },
    "3097": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "DUP6",
      "path": "2"
    },
    "3098": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "ADD",
      "path": "2"
    },
    "3099": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3100": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3102": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3104": {
      "op": "SHL"
    },
    "3105": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3106": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "DIV",
      "path": "2"
    },
    "3107": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "AND",
      "path": "2"
    },
    "3108": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3109": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3110": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "ADD",
      "path": "2"
    },
    "3111": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3112": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3114": {
      "op": "PUSH1",
      "value": "0x90"
    },
    "3116": {
      "op": "SHL"
    },
    "3117": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3118": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "DIV",
      "path": "2"
    },
    "3119": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3120": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "AND",
      "path": "2"
    },
    "3121": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x120"
    },
    "3124": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3125": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3126": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "ADD",
      "path": "2"
    },
    "3127": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7744,
        7766
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3128": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7784,
        7820
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3129": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7784,
        7820
      ],
      "op": "ADD",
      "path": "2"
    },
    "3130": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7784,
        7820
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3131": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7784,
        7820
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3132": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7784,
        7820
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "3133": {
      "op": "POP"
    },
    "3134": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7823,
        7838
      ],
      "op": "TIMESTAMP",
      "path": "2"
    },
    "3135": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7784,
        7838
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3136": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7784,
        7838
      ],
      "op": "AND",
      "path": "2"
    },
    "3137": {
      "branch": 132,
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7784,
        7838
      ],
      "op": "GT",
      "path": "2"
    },
    "3138": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7784,
        7868
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3139": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7784,
        7868
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3140": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7784,
        7868
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC5B"
    },
    "3143": {
      "branch": 132,
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7784,
        7868
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3144": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7784,
        7868
      ],
      "op": "POP",
      "path": "2"
    },
    "3145": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7862,
        7868
      ],
      "op": "DUP8",
      "path": "2"
    },
    "3146": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7842,
        7868
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "3152": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7842,
        7868
      ],
      "op": "AND",
      "path": "2"
    },
    "3153": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7842,
        7848
      ],
      "op": "DUP5",
      "path": "2"
    },
    "3154": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7842,
        7859
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE0"
    },
    "3156": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7842,
        7859
      ],
      "op": "ADD",
      "path": "2"
    },
    "3157": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7842,
        7859
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3158": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7842,
        7868
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "3161": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7842,
        7868
      ],
      "op": "AND",
      "path": "2"
    },
    "3162": {
      "branch": 133,
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7842,
        7868
      ],
      "op": "EQ",
      "path": "2"
    },
    "3163": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7784,
        7868
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3164": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7920
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3165": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7920
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC67"
    },
    "3168": {
      "branch": 133,
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7920
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3169": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7897,
        7904
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 12
    },
    "3170": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7897,
        7904
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "3172": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7897,
        7904
      ],
      "op": "ADD",
      "path": "2"
    },
    "3173": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7897,
        7904
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3174": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7897,
        7904
      ],
      "op": "POP",
      "path": "2"
    },
    "3175": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7780,
        7920
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3176": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7943,
        7946
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 13,
      "value": "0x1"
    },
    "3178": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7943,
        7946
      ],
      "op": "ADD",
      "path": "2"
    },
    "3179": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7606,
        7958
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xAEC"
    },
    "3182": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7606,
        7958
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3183": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7606,
        7958
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3184": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7606,
        7958
      ],
      "op": "POP",
      "path": "2"
    },
    "3185": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8015,
        8020
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3186": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8022,
        8023
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3188": {
      "branch": 134,
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8015,
        8023
      ],
      "op": "SUB",
      "path": "2"
    },
    "3189": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8011,
        8260
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xCDC"
    },
    "3192": {
      "branch": 134,
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8011,
        8260
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3193": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8063,
        8076
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3195": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8063,
        8076
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3196": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8063,
        8076
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3197": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8074,
        8075
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "3199": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8063,
        8076
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3200": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8063,
        8076
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3201": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8063,
        8076
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3202": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8063,
        8076
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3203": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8063,
        8076
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3204": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8063,
        8076
      ],
      "op": "ADD",
      "path": "2"
    },
    "3205": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8063,
        8076
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3206": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8063,
        8076
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3207": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8063,
        8076
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3208": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8039,
        8061
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3210": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8039,
        8061
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3211": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8063,
        8076
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3212": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8063,
        8076
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3214": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8063,
        8076
      ],
      "op": "ADD",
      "path": "2"
    },
    "3215": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8063,
        8076
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3216": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8063,
        8076
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC97"
    },
    "3219": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8063,
        8076
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x34BF"
    },
    "3222": {
      "fn": "Governance.getTasksAssignedToWiz",
      "jump": "i",
      "offset": [
        8063,
        8076
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3223": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8063,
        8076
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3224": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8063,
        8076
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3225": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8063,
        8076
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3226": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8063,
        8076
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3228": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8063,
        8076
      ],
      "op": "ADD",
      "path": "2"
    },
    "3229": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8063,
        8076
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3230": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8063,
        8076
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "3232": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8063,
        8076
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3233": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8063,
        8076
      ],
      "op": "SUB",
      "path": "2"
    },
    "3234": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8063,
        8076
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3235": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8063,
        8076
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3236": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8063,
        8076
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC8F"
    },
    "3239": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8063,
        8076
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3240": {
      "op": "POP"
    },
    "3241": {
      "op": "POP"
    },
    "3242": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8121,
        8137
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3244": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8121,
        8137
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3245": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8121,
        8137
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3246": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8135,
        8136
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "3248": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8121,
        8137
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3249": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8121,
        8137
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3250": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8121,
        8137
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3251": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8121,
        8137
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3252": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8121,
        8137
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3253": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8121,
        8137
      ],
      "op": "ADD",
      "path": "2"
    },
    "3254": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8121,
        8137
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3255": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8121,
        8137
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3256": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8121,
        8137
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3257": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8039,
        8076
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3258": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8039,
        8076
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3259": {
      "op": "POP"
    },
    "3260": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8090,
        8119
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3262": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8090,
        8119
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3263": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8121,
        8137
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3264": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8121,
        8137
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3266": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8121,
        8137
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3267": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8121,
        8137
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3268": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8121,
        8137
      ],
      "op": "ADD",
      "path": "2"
    },
    "3269": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8121,
        8137
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3270": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8121,
        8137
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3271": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8121,
        8137
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "3272": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8121,
        8137
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3273": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8121,
        8137
      ],
      "op": "CALLDATACOPY",
      "path": "2"
    },
    "3274": {
      "op": "POP"
    },
    "3275": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8226,
        8234
      ],
      "op": "SWAP4",
      "path": "2",
      "statement": 14
    },
    "3276": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8226,
        8234
      ],
      "op": "SWAP12",
      "path": "2"
    },
    "3277": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8226,
        8234
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3278": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8226,
        8234
      ],
      "op": "SWAP11",
      "path": "2"
    },
    "3279": {
      "op": "POP"
    },
    "3280": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8226,
        8234
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3281": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8226,
        8234
      ],
      "op": "SWAP9",
      "path": "2"
    },
    "3282": {
      "op": "POP"
    },
    "3283": {
      "op": "POP"
    },
    "3284": {
      "op": "POP"
    },
    "3285": {
      "op": "POP"
    },
    "3286": {
      "op": "POP"
    },
    "3287": {
      "op": "POP"
    },
    "3288": {
      "op": "POP"
    },
    "3289": {
      "op": "POP"
    },
    "3290": {
      "op": "POP"
    },
    "3291": {
      "fn": "Governance.getTasksAssignedToWiz",
      "jump": "o",
      "offset": [
        7327,
        8936
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3292": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8011,
        8260
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3293": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8270,
        8285
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3295": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8299,
        8320
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3296": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8334,
        8339
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3297": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3299": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3301": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3303": {
      "op": "SHL"
    },
    "3304": {
      "op": "SUB"
    },
    "3305": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8323,
        8340
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3306": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8323,
        8340
      ],
      "op": "GT",
      "path": "2"
    },
    "3307": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8323,
        8340
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3308": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8323,
        8340
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xCF7"
    },
    "3311": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8323,
        8340
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3312": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8323,
        8340
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xCF7"
    },
    "3315": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8323,
        8340
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3612"
    },
    "3318": {
      "fn": "Governance.getTasksAssignedToWiz",
      "jump": "i",
      "offset": [
        8323,
        8340
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3319": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8323,
        8340
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3320": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8323,
        8340
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3322": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8323,
        8340
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3323": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8323,
        8340
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3324": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8323,
        8340
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3325": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8323,
        8340
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3326": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8323,
        8340
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3327": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8323,
        8340
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3328": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8323,
        8340
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3330": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8323,
        8340
      ],
      "op": "MUL",
      "path": "2"
    },
    "3331": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8323,
        8340
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3333": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8323,
        8340
      ],
      "op": "ADD",
      "path": "2"
    },
    "3334": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8323,
        8340
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3335": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8323,
        8340
      ],
      "op": "ADD",
      "path": "2"
    },
    "3336": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8323,
        8340
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3338": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8323,
        8340
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3339": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8323,
        8340
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3340": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8323,
        8340
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3341": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8323,
        8340
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xD30"
    },
    "3344": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8323,
        8340
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3345": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8323,
        8340
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3346": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8323,
        8340
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3348": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8323,
        8340
      ],
      "op": "ADD",
      "path": "2"
    },
    "3349": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8323,
        8340
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3350": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8323,
        8340
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xD1D"
    },
    "3353": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8323,
        8340
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x34BF"
    },
    "3356": {
      "fn": "Governance.getTasksAssignedToWiz",
      "jump": "i",
      "offset": [
        8323,
        8340
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3357": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8323,
        8340
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3358": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8323,
        8340
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3359": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8323,
        8340
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3360": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8323,
        8340
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3362": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8323,
        8340
      ],
      "op": "ADD",
      "path": "2"
    },
    "3363": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8323,
        8340
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3364": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8323,
        8340
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "3366": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8323,
        8340
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3367": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8323,
        8340
      ],
      "op": "SUB",
      "path": "2"
    },
    "3368": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8323,
        8340
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3369": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8323,
        8340
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3370": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8323,
        8340
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xD15"
    },
    "3373": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8323,
        8340
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3374": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8323,
        8340
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3375": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8323,
        8340
      ],
      "op": "POP",
      "path": "2"
    },
    "3376": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8323,
        8340
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3377": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8323,
        8340
      ],
      "op": "POP",
      "path": "2"
    },
    "3378": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8299,
        8340
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3379": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8299,
        8340
      ],
      "op": "POP",
      "path": "2"
    },
    "3380": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8350,
        8376
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3382": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8393,
        8398
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3383": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3385": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3387": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3389": {
      "op": "SHL"
    },
    "3390": {
      "op": "SUB"
    },
    "3391": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8379,
        8399
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3392": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8379,
        8399
      ],
      "op": "GT",
      "path": "2"
    },
    "3393": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8379,
        8399
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3394": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8379,
        8399
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xD4D"
    },
    "3397": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8379,
        8399
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3398": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8379,
        8399
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xD4D"
    },
    "3401": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8379,
        8399
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3612"
    },
    "3404": {
      "fn": "Governance.getTasksAssignedToWiz",
      "jump": "i",
      "offset": [
        8379,
        8399
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3405": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8379,
        8399
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3406": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8379,
        8399
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3408": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8379,
        8399
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3409": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8379,
        8399
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3410": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8379,
        8399
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3411": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8379,
        8399
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3412": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8379,
        8399
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3413": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8379,
        8399
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3414": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8379,
        8399
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3416": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8379,
        8399
      ],
      "op": "MUL",
      "path": "2"
    },
    "3417": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8379,
        8399
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3419": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8379,
        8399
      ],
      "op": "ADD",
      "path": "2"
    },
    "3420": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8379,
        8399
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3421": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8379,
        8399
      ],
      "op": "ADD",
      "path": "2"
    },
    "3422": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8379,
        8399
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3424": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8379,
        8399
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3425": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8379,
        8399
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3426": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8379,
        8399
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3427": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8379,
        8399
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xD76"
    },
    "3430": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8379,
        8399
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3431": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8379,
        8399
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3432": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8379,
        8399
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3434": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8379,
        8399
      ],
      "op": "ADD",
      "path": "2"
    },
    "3435": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8379,
        8399
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3437": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8379,
        8399
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3438": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8379,
        8399
      ],
      "op": "MUL",
      "path": "2"
    },
    "3439": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8379,
        8399
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3440": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8379,
        8399
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "3441": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8379,
        8399
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3442": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8379,
        8399
      ],
      "op": "CALLDATACOPY",
      "path": "2"
    },
    "3443": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8379,
        8399
      ],
      "op": "ADD",
      "path": "2"
    },
    "3444": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8379,
        8399
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3445": {
      "op": "POP"
    },
    "3446": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8379,
        8399
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3447": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8379,
        8399
      ],
      "op": "POP",
      "path": "2"
    },
    "3448": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8350,
        8399
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3449": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8350,
        8399
      ],
      "op": "POP",
      "path": "2"
    },
    "3450": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8413,
        8422
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3452": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8409,
        8893
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3453": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8431,
        8450
      ],
      "op": "DUP8",
      "path": "2"
    },
    "3454": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8427,
        8428
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3455": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8427,
        8450
      ],
      "op": "LT",
      "path": "2"
    },
    "3456": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8409,
        8893
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3457": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8409,
        8893
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF43"
    },
    "3460": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8409,
        8893
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3461": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8484,
        8532
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 15,
      "value": "0xD8F"
    },
    "3464": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8504,
        8528
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x6"
    },
    "3466": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8530,
        8531
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3467": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8484,
        8503
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3101"
    },
    "3470": {
      "fn": "Governance.getTasksAssignedToWiz",
      "jump": "i",
      "offset": [
        8484,
        8532
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3471": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8484,
        8532
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3472": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8476,
        8533
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3474": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8556,
        8569
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 16
    },
    "3475": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8556,
        8569
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3476": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8556,
        8569
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3477": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8556,
        8561
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA"
    },
    "3479": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8556,
        8569
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3481": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8556,
        8569
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3482": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8556,
        8569
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3484": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8556,
        8569
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3485": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8556,
        8569
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3486": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8556,
        8569
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3487": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8556,
        8569
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "3488": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3489": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3490": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x140"
    },
    "3493": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3494": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "ADD",
      "path": "2"
    },
    "3495": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3496": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3497": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3498": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3499": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3500": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8476,
        8533
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3501": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8476,
        8533
      ],
      "op": "SWAP9",
      "path": "2"
    },
    "3502": {
      "op": "POP"
    },
    "3503": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3504": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3505": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3506": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3507": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8556,
        8569
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3508": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8556,
        8569
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3509": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xDBD"
    },
    "3512": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3513": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3DA4"
    },
    "3516": {
      "fn": "Governance.getTasksAssignedToWiz",
      "jump": "i",
      "offset": [
        8547,
        8569
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3517": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3518": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3519": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "3521": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "ADD",
      "path": "2"
    },
    "3522": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3524": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3525": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3526": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "DIV",
      "path": "2"
    },
    "3527": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "MUL",
      "path": "2"
    },
    "3528": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3530": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "ADD",
      "path": "2"
    },
    "3531": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3533": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3534": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3535": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3536": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "ADD",
      "path": "2"
    },
    "3537": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3539": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3540": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3541": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3542": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3543": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3544": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3545": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3546": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3547": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3549": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "ADD",
      "path": "2"
    },
    "3550": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3551": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3552": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3553": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xDE9"
    },
    "3556": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3557": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3DA4"
    },
    "3560": {
      "fn": "Governance.getTasksAssignedToWiz",
      "jump": "i",
      "offset": [
        8547,
        8569
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3561": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3562": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3563": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3564": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE36"
    },
    "3567": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3568": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3569": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "3571": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "LT",
      "path": "2"
    },
    "3572": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE0B"
    },
    "3575": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3576": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "3579": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3580": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3581": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3582": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "DIV",
      "path": "2"
    },
    "3583": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "MUL",
      "path": "2"
    },
    "3584": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3585": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3586": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3587": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3589": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "ADD",
      "path": "2"
    },
    "3590": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3591": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE36"
    },
    "3594": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3595": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3596": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3597": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "ADD",
      "path": "2"
    },
    "3598": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3599": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3600": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3602": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3603": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3605": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3607": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "3608": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3609": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3610": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3611": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3612": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3613": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3614": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3615": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "3617": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "ADD",
      "path": "2"
    },
    "3618": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3619": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3621": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "ADD",
      "path": "2"
    },
    "3622": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3623": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3624": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "GT",
      "path": "2"
    },
    "3625": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE19"
    },
    "3628": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3629": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3630": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3631": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "SUB",
      "path": "2"
    },
    "3632": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "3634": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "AND",
      "path": "2"
    },
    "3635": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3636": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "ADD",
      "path": "2"
    },
    "3637": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3638": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3639": {
      "op": "POP"
    },
    "3640": {
      "op": "POP"
    },
    "3641": {
      "op": "POP"
    },
    "3642": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3643": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3644": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3645": {
      "op": "POP"
    },
    "3646": {
      "op": "POP"
    },
    "3647": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "3649": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3650": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "ADD",
      "path": "2"
    },
    "3651": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3652": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "3658": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3659": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3660": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "AND",
      "path": "2"
    },
    "3661": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3663": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3664": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "ADD",
      "path": "2"
    },
    "3665": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3666": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "3668": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3669": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "ADD",
      "path": "2"
    },
    "3670": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3671": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3673": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3674": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "ADD",
      "path": "2"
    },
    "3675": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3676": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "3678": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3679": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "ADD",
      "path": "2"
    },
    "3680": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3681": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "3683": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3684": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "ADD",
      "path": "2"
    },
    "3685": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3686": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3688": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3689": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3690": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "ADD",
      "path": "2"
    },
    "3691": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3692": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "3694": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3695": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "AND",
      "path": "2"
    },
    "3696": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x80"
    },
    "3698": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3699": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "ADD",
      "path": "2"
    },
    "3700": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3701": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "3704": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3705": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3706": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "DIV",
      "path": "2"
    },
    "3707": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "PUSH3",
      "path": "2",
      "value": "0xFFFFFF"
    },
    "3711": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "AND",
      "path": "2"
    },
    "3712": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA0"
    },
    "3714": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "DUP5",
      "path": "2"
    },
    "3715": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "ADD",
      "path": "2"
    },
    "3716": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3717": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3719": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3721": {
      "op": "SHL"
    },
    "3722": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3723": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "DIV",
      "path": "2"
    },
    "3724": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3726": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3728": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "3730": {
      "op": "SHL"
    },
    "3731": {
      "op": "SUB"
    },
    "3732": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "AND",
      "path": "2"
    },
    "3733": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xC0"
    },
    "3735": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "DUP5",
      "path": "2"
    },
    "3736": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "ADD",
      "path": "2"
    },
    "3737": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3738": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3740": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "3742": {
      "op": "SHL"
    },
    "3743": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3744": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "DIV",
      "path": "2"
    },
    "3745": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "3748": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3749": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3750": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "AND",
      "path": "2"
    },
    "3751": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE0"
    },
    "3753": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "DUP6",
      "path": "2"
    },
    "3754": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "ADD",
      "path": "2"
    },
    "3755": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3756": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3758": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3760": {
      "op": "SHL"
    },
    "3761": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3762": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "DIV",
      "path": "2"
    },
    "3763": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "AND",
      "path": "2"
    },
    "3764": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3765": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3766": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "ADD",
      "path": "2"
    },
    "3767": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3768": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3770": {
      "op": "PUSH1",
      "value": "0x90"
    },
    "3772": {
      "op": "SHL"
    },
    "3773": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3774": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "DIV",
      "path": "2"
    },
    "3775": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3776": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "AND",
      "path": "2"
    },
    "3777": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x120"
    },
    "3780": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3781": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3782": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "ADD",
      "path": "2"
    },
    "3783": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8547,
        8569
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3784": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8587,
        8623
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3785": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8587,
        8623
      ],
      "op": "ADD",
      "path": "2"
    },
    "3786": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8587,
        8623
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3787": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8587,
        8623
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3788": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8587,
        8623
      ],
      "op": "SWAP9",
      "path": "2"
    },
    "3789": {
      "op": "POP"
    },
    "3790": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8626,
        8641
      ],
      "op": "TIMESTAMP",
      "path": "2"
    },
    "3791": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8587,
        8641
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3792": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8587,
        8641
      ],
      "op": "AND",
      "path": "2"
    },
    "3793": {
      "branch": 135,
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8587,
        8641
      ],
      "op": "GT",
      "path": "2"
    },
    "3794": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8587,
        8671
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3795": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8587,
        8671
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3796": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8587,
        8671
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xEEB"
    },
    "3799": {
      "branch": 135,
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8587,
        8671
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3800": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8587,
        8671
      ],
      "op": "POP",
      "path": "2"
    },
    "3801": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8665,
        8671
      ],
      "op": "DUP11",
      "path": "2"
    },
    "3802": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8645,
        8671
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "3808": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8645,
        8671
      ],
      "op": "AND",
      "path": "2"
    },
    "3809": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8645,
        8651
      ],
      "op": "DUP8",
      "path": "2"
    },
    "3810": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8645,
        8662
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE0"
    },
    "3812": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8645,
        8662
      ],
      "op": "ADD",
      "path": "2"
    },
    "3813": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8645,
        8662
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3814": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8645,
        8671
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "3817": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8645,
        8671
      ],
      "op": "AND",
      "path": "2"
    },
    "3818": {
      "branch": 136,
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8645,
        8671
      ],
      "op": "EQ",
      "path": "2"
    },
    "3819": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8587,
        8671
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3820": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8855
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3821": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8855
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF3B"
    },
    "3824": {
      "branch": 136,
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8583,
        8855
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3825": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8709,
        8715
      ],
      "op": "DUP7",
      "path": "2",
      "statement": 17
    },
    "3826": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8690,
        8697
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3827": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8698,
        8705
      ],
      "op": "DUP6",
      "path": "2"
    },
    "3828": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8690,
        8706
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3829": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8690,
        8706
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3830": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8690,
        8706
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3831": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8690,
        8706
      ],
      "op": "LT",
      "path": "2"
    },
    "3832": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8690,
        8706
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF03"
    },
    "3835": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8690,
        8706
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3836": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8690,
        8706
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF03"
    },
    "3839": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8690,
        8706
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3DDE"
    },
    "3842": {
      "fn": "Governance.getTasksAssignedToWiz",
      "jump": "i",
      "offset": [
        8690,
        8706
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3843": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8690,
        8706
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3844": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8690,
        8706
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3846": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8690,
        8706
      ],
      "op": "MUL",
      "path": "2"
    },
    "3847": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8690,
        8706
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3849": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8690,
        8706
      ],
      "op": "ADD",
      "path": "2"
    },
    "3850": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8690,
        8706
      ],
      "op": "ADD",
      "path": "2"
    },
    "3851": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8690,
        8715
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3852": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8690,
        8715
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3853": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8690,
        8715
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3854": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8690,
        8715
      ],
      "op": "POP",
      "path": "2"
    },
    "3855": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8754,
        8760
      ],
      "op": "DUP6",
      "path": "2",
      "statement": 18
    },
    "3856": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8733,
        8742
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3857": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8743,
        8750
      ],
      "op": "DUP6",
      "path": "2"
    },
    "3858": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8733,
        8751
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3859": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8733,
        8751
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3860": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8733,
        8751
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3861": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8733,
        8751
      ],
      "op": "LT",
      "path": "2"
    },
    "3862": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8733,
        8751
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF21"
    },
    "3865": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8733,
        8751
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3866": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8733,
        8751
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF21"
    },
    "3869": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8733,
        8751
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3DDE"
    },
    "3872": {
      "fn": "Governance.getTasksAssignedToWiz",
      "jump": "i",
      "offset": [
        8733,
        8751
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3873": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8733,
        8751
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3874": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8733,
        8751
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3876": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8733,
        8751
      ],
      "op": "MUL",
      "path": "2"
    },
    "3877": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8733,
        8751
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3879": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8733,
        8751
      ],
      "op": "ADD",
      "path": "2"
    },
    "3880": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8733,
        8751
      ],
      "op": "ADD",
      "path": "2"
    },
    "3881": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8733,
        8760
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3882": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8733,
        8760
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3883": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8733,
        8760
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3884": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8733,
        8760
      ],
      "op": "POP",
      "path": "2"
    },
    "3885": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8733,
        8760
      ],
      "op": "POP",
      "path": "2"
    },
    "3886": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8788,
        8797
      ],
      "op": "DUP4",
      "path": "2",
      "statement": 19
    },
    "3887": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8788,
        8797
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "3889": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8788,
        8797
      ],
      "op": "ADD",
      "path": "2"
    },
    "3890": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8788,
        8797
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "3891": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8788,
        8797
      ],
      "op": "POP",
      "path": "2"
    },
    "3892": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8827,
        8832
      ],
      "op": "DUP5",
      "path": "2"
    },
    "3893": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8819,
        8826
      ],
      "op": "DUP5",
      "path": "2"
    },
    "3894": {
      "branch": 137,
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8819,
        8832
      ],
      "op": "GT",
      "path": "2"
    },
    "3895": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8834,
        8839
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 20,
      "value": "0xF43"
    },
    "3898": {
      "branch": 137,
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8816,
        8841
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3899": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8816,
        8841
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3900": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8878,
        8881
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 21,
      "value": "0x1"
    },
    "3902": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8878,
        8881
      ],
      "op": "ADD",
      "path": "2"
    },
    "3903": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8409,
        8893
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xD7C"
    },
    "3906": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8409,
        8893
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3907": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8409,
        8893
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3908": {
      "op": "POP"
    },
    "3909": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8910,
        8917
      ],
      "op": "SWAP1",
      "path": "2",
      "statement": 22
    },
    "3910": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8910,
        8917
      ],
      "op": "SWAP10",
      "path": "2"
    },
    "3911": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8919,
        8928
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3912": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        8919,
        8928
      ],
      "op": "SWAP9",
      "path": "2"
    },
    "3913": {
      "op": "POP"
    },
    "3914": {
      "fn": "Governance.getTasksAssignedToWiz",
      "offset": [
        7327,
        8936
      ],
      "op": "SWAP7",
      "path": "2"
    },
    "3915": {
      "op": "POP"
    },
    "3916": {
      "op": "POP"
    },
    "3917": {
      "op": "POP"
    },
    "3918": {
      "op": "POP"
    },
    "3919": {
      "op": "POP"
    },
    "3920": {
      "op": "POP"
    },
    "3921": {
      "op": "POP"
    },
    "3922": {
      "fn": "Governance.getTasksAssignedToWiz",
      "jump": "o",
      "offset": [
        7327,
        8936
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3923": {
      "fn": "Governance.createTaskType",
      "offset": [
        14081,
        14401
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3924": {
      "offset": [
        23762,
        23779
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF5B"
    },
    "3927": {
      "offset": [
        23762,
        23777
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x9B1"
    },
    "3930": {
      "jump": "i",
      "offset": [
        23762,
        23779
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3931": {
      "fn": "Governance.createTaskType",
      "offset": [
        23762,
        23779
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3932": {
      "offset": [
        23754,
        23804
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFA3"
    },
    "3935": {
      "offset": [
        23754,
        23804
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3936": {
      "fn": "Governance.createTaskType",
      "offset": [
        23754,
        23804
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3938": {
      "fn": "Governance.createTaskType",
      "offset": [
        23754,
        23804
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3939": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3943": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3945": {
      "op": "SHL"
    },
    "3946": {
      "offset": [
        23754,
        23804
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3947": {
      "fn": "Governance.createTaskType",
      "offset": [
        23754,
        23804
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3948": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3950": {
      "offset": [
        23754,
        23804
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3952": {
      "fn": "Governance.createTaskType",
      "offset": [
        23754,
        23804
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3953": {
      "fn": "Governance.createTaskType",
      "offset": [
        23754,
        23804
      ],
      "op": "ADD",
      "path": "2"
    },
    "3954": {
      "op": "MSTORE"
    },
    "3955": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "3957": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3959": {
      "op": "DUP3"
    },
    "3960": {
      "op": "ADD"
    },
    "3961": {
      "op": "MSTORE"
    },
    "3962": {
      "op": "PUSH20",
      "value": "0x135D5CDD081899481BDB881D1A1948189BD85C99"
    },
    "3983": {
      "op": "PUSH1",
      "value": "0x62"
    },
    "3985": {
      "op": "SHL"
    },
    "3986": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3988": {
      "op": "DUP3"
    },
    "3989": {
      "op": "ADD"
    },
    "3990": {
      "op": "MSTORE"
    },
    "3991": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3993": {
      "op": "ADD"
    },
    "3994": {
      "offset": [
        23754,
        23804
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3995": {
      "fn": "Governance.createTaskType",
      "offset": [
        23754,
        23804
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3997": {
      "fn": "Governance.createTaskType",
      "offset": [
        23754,
        23804
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3998": {
      "fn": "Governance.createTaskType",
      "offset": [
        23754,
        23804
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3999": {
      "fn": "Governance.createTaskType",
      "offset": [
        23754,
        23804
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4000": {
      "fn": "Governance.createTaskType",
      "offset": [
        23754,
        23804
      ],
      "op": "SUB",
      "path": "2"
    },
    "4001": {
      "fn": "Governance.createTaskType",
      "offset": [
        23754,
        23804
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4002": {
      "fn": "Governance.createTaskType",
      "offset": [
        23754,
        23804
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "2"
    },
    "4003": {
      "fn": "Governance.createTaskType",
      "offset": [
        23754,
        23804
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4004": {
      "fn": "Governance.createTaskType",
      "offset": [
        14288,
        14394
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 23,
      "value": "0xFB4"
    },
    "4007": {
      "fn": "Governance.createTaskType",
      "offset": [
        14304,
        14313
      ],
      "op": "DUP8",
      "path": "2"
    },
    "4008": {
      "fn": "Governance.createTaskType",
      "offset": [
        14304,
        14313
      ],
      "op": "DUP8",
      "path": "2"
    },
    "4009": {
      "fn": "Governance.createTaskType",
      "offset": [
        14315,
        14316
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4011": {
      "fn": "Governance.createTaskType",
      "offset": [
        14318,
        14334
      ],
      "op": "DUP9",
      "path": "2"
    },
    "4012": {
      "fn": "Governance.createTaskType",
      "offset": [
        14336,
        14346
      ],
      "op": "DUP9",
      "path": "2"
    },
    "4013": {
      "fn": "Governance.createTaskType",
      "offset": [
        14348,
        14361
      ],
      "op": "DUP9",
      "path": "2"
    },
    "4014": {
      "fn": "Governance.createTaskType",
      "offset": [
        14363,
        14376
      ],
      "op": "DUP9",
      "path": "2"
    },
    "4015": {
      "fn": "Governance.createTaskType",
      "offset": [
        14378,
        14393
      ],
      "op": "DUP9",
      "path": "2"
    },
    "4016": {
      "fn": "Governance.createTaskType",
      "offset": [
        14288,
        14303
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3172"
    },
    "4019": {
      "fn": "Governance.createTaskType",
      "jump": "i",
      "offset": [
        14288,
        14394
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4020": {
      "fn": "Governance.createTaskType",
      "offset": [
        14288,
        14394
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4021": {
      "fn": "Governance.createTaskType",
      "offset": [
        14081,
        14401
      ],
      "op": "POP",
      "path": "2"
    },
    "4022": {
      "fn": "Governance.createTaskType",
      "offset": [
        14081,
        14401
      ],
      "op": "POP",
      "path": "2"
    },
    "4023": {
      "fn": "Governance.createTaskType",
      "offset": [
        14081,
        14401
      ],
      "op": "POP",
      "path": "2"
    },
    "4024": {
      "fn": "Governance.createTaskType",
      "offset": [
        14081,
        14401
      ],
      "op": "POP",
      "path": "2"
    },
    "4025": {
      "fn": "Governance.createTaskType",
      "offset": [
        14081,
        14401
      ],
      "op": "POP",
      "path": "2"
    },
    "4026": {
      "fn": "Governance.createTaskType",
      "offset": [
        14081,
        14401
      ],
      "op": "POP",
      "path": "2"
    },
    "4027": {
      "fn": "Governance.createTaskType",
      "offset": [
        14081,
        14401
      ],
      "op": "POP",
      "path": "2"
    },
    "4028": {
      "fn": "Governance.createTaskType",
      "jump": "o",
      "offset": [
        14081,
        14401
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4029": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        10622,
        10723
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4030": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "4032": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "4033": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4035": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4037": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4039": {
      "op": "SHL"
    },
    "4040": {
      "op": "SUB"
    },
    "4041": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "AND",
      "path": "11"
    },
    "4042": {
      "fn": "Context._msgSender",
      "offset": [
        679,
        689
      ],
      "op": "CALLER",
      "path": "5",
      "statement": 24
    },
    "4043": {
      "offset": [
        1221,
        1244
      ],
      "op": "EQ",
      "path": "11"
    },
    "4044": {
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xFE7"
    },
    "4047": {
      "offset": [
        1213,
        1281
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "4048": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "4050": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "4051": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4055": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4057": {
      "op": "SHL"
    },
    "4058": {
      "offset": [
        1213,
        1281
      ],
      "op": "DUP2",
      "path": "11"
    },
    "4059": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "4060": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "4062": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "ADD",
      "path": "11"
    },
    "4063": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xF9A"
    },
    "4066": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "4067": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x3E91"
    },
    "4070": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1213,
        1281
      ],
      "op": "JUMP",
      "path": "11"
    },
    "4071": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "4072": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        10689,
        10699
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 25,
      "value": "0x2"
    },
    "4074": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        10689,
        10716
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4075": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        10689,
        10716
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4076": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4078": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4080": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4082": {
      "op": "SHL"
    },
    "4083": {
      "op": "SUB"
    },
    "4084": {
      "op": "NOT"
    },
    "4085": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        10689,
        10716
      ],
      "op": "AND",
      "path": "2"
    },
    "4086": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4088": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4090": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4092": {
      "op": "SHL"
    },
    "4093": {
      "op": "SUB"
    },
    "4094": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        10689,
        10716
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "4095": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        10689,
        10716
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4096": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        10689,
        10716
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "4097": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        10689,
        10716
      ],
      "op": "AND",
      "path": "2"
    },
    "4098": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        10689,
        10716
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4099": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        10689,
        10716
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4100": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        10689,
        10716
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4101": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        10689,
        10716
      ],
      "op": "OR",
      "path": "2"
    },
    "4102": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        10689,
        10716
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4103": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        10689,
        10716
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "4104": {
      "fn": "Governance.setNFTAddress",
      "jump": "o",
      "offset": [
        10622,
        10723
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4105": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "4106": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "4108": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "4109": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4111": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4113": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4115": {
      "op": "SHL"
    },
    "4116": {
      "op": "SUB"
    },
    "4117": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "AND",
      "path": "11"
    },
    "4118": {
      "fn": "Context._msgSender",
      "offset": [
        679,
        689
      ],
      "op": "CALLER",
      "path": "5"
    },
    "4119": {
      "offset": [
        1221,
        1244
      ],
      "op": "EQ",
      "path": "11"
    },
    "4120": {
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1033"
    },
    "4123": {
      "offset": [
        1213,
        1281
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "4124": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "4126": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "4127": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4131": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4133": {
      "op": "SHL"
    },
    "4134": {
      "offset": [
        1213,
        1281
      ],
      "op": "DUP2",
      "path": "11"
    },
    "4135": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "4136": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "4138": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "ADD",
      "path": "11"
    },
    "4139": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xF9A"
    },
    "4142": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "4143": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x3E91"
    },
    "4146": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1213,
        1281
      ],
      "op": "JUMP",
      "path": "11"
    },
    "4147": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "4148": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1717,
        1738
      ],
      "op": "PUSH2",
      "path": "11",
      "statement": 26,
      "value": "0x103D"
    },
    "4151": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1735,
        1736
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "4153": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1717,
        1726
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x32F1"
    },
    "4156": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1717,
        1738
      ],
      "op": "JUMP",
      "path": "11"
    },
    "4157": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1717,
        1738
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "4158": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        1652,
        1746
      ],
      "op": "JUMP",
      "path": "11"
    },
    "4159": {
      "fn": "Governance.completeTask",
      "offset": [
        16479,
        17765
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4160": {
      "fn": "Governance.completeTask",
      "offset": [
        16663,
        16672
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4162": {
      "fn": "Governance.completeTask",
      "offset": [
        16659,
        17739
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4163": {
      "fn": "Governance.completeTask",
      "offset": [
        16680,
        16689
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "4165": {
      "fn": "Governance.completeTask",
      "offset": [
        16680,
        16696
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4166": {
      "fn": "Governance.completeTask",
      "offset": [
        16678,
        16696
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4167": {
      "fn": "Governance.completeTask",
      "offset": [
        16678,
        16696
      ],
      "op": "LT",
      "path": "2"
    },
    "4168": {
      "fn": "Governance.completeTask",
      "offset": [
        16659,
        17739
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "4169": {
      "fn": "Governance.completeTask",
      "offset": [
        16659,
        17739
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x14AF"
    },
    "4172": {
      "fn": "Governance.completeTask",
      "offset": [
        16659,
        17739
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4173": {
      "fn": "Governance.completeTask",
      "offset": [
        16784,
        16793
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4174": {
      "fn": "Governance.completeTask",
      "offset": [
        16773,
        16794
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4176": {
      "fn": "Governance.completeTask",
      "offset": [
        16773,
        16794
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4177": {
      "fn": "Governance.completeTask",
      "offset": [
        16773,
        16794
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4179": {
      "fn": "Governance.completeTask",
      "offset": [
        16773,
        16794
      ],
      "op": "ADD",
      "path": "2"
    },
    "4180": {
      "fn": "Governance.completeTask",
      "offset": [
        16773,
        16794
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x105D"
    },
    "4183": {
      "fn": "Governance.completeTask",
      "offset": [
        16773,
        16794
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4184": {
      "fn": "Governance.completeTask",
      "offset": [
        16773,
        16794
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4185": {
      "fn": "Governance.completeTask",
      "offset": [
        16773,
        16794
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3EC6"
    },
    "4188": {
      "fn": "Governance.completeTask",
      "jump": "i",
      "offset": [
        16773,
        16794
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4189": {
      "fn": "Governance.completeTask",
      "offset": [
        16773,
        16794
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4190": {
      "fn": "Governance.completeTask",
      "offset": [
        16773,
        16794
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4192": {
      "fn": "Governance.completeTask",
      "offset": [
        16773,
        16794
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4193": {
      "fn": "Governance.completeTask",
      "offset": [
        16773,
        16794
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4195": {
      "fn": "Governance.completeTask",
      "offset": [
        16773,
        16794
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4196": {
      "fn": "Governance.completeTask",
      "offset": [
        16773,
        16794
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4197": {
      "fn": "Governance.completeTask",
      "offset": [
        16773,
        16794
      ],
      "op": "SUB",
      "path": "2"
    },
    "4198": {
      "fn": "Governance.completeTask",
      "offset": [
        16773,
        16794
      ],
      "op": "SUB",
      "path": "2"
    },
    "4199": {
      "fn": "Governance.completeTask",
      "offset": [
        16773,
        16794
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4200": {
      "fn": "Governance.completeTask",
      "offset": [
        16773,
        16794
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4201": {
      "fn": "Governance.completeTask",
      "offset": [
        16773,
        16794
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4202": {
      "fn": "Governance.completeTask",
      "offset": [
        16773,
        16794
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4204": {
      "fn": "Governance.completeTask",
      "offset": [
        16773,
        16794
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4205": {
      "fn": "Governance.completeTask",
      "offset": [
        16763,
        16795
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4206": {
      "fn": "Governance.completeTask",
      "offset": [
        16763,
        16795
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4207": {
      "fn": "Governance.completeTask",
      "offset": [
        16763,
        16795
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4208": {
      "fn": "Governance.completeTask",
      "offset": [
        16763,
        16795
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4210": {
      "fn": "Governance.completeTask",
      "offset": [
        16763,
        16795
      ],
      "op": "ADD",
      "path": "2"
    },
    "4211": {
      "fn": "Governance.completeTask",
      "offset": [
        16763,
        16795
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "4212": {
      "fn": "Governance.completeTask",
      "offset": [
        16736,
        16745
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "4214": {
      "fn": "Governance.completeTask",
      "offset": [
        16746,
        16747
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4215": {
      "fn": "Governance.completeTask",
      "offset": [
        16736,
        16748
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4216": {
      "fn": "Governance.completeTask",
      "offset": [
        16736,
        16748
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4217": {
      "fn": "Governance.completeTask",
      "offset": [
        16736,
        16748
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4218": {
      "fn": "Governance.completeTask",
      "offset": [
        16736,
        16748
      ],
      "op": "LT",
      "path": "2"
    },
    "4219": {
      "fn": "Governance.completeTask",
      "offset": [
        16736,
        16748
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1086"
    },
    "4222": {
      "fn": "Governance.completeTask",
      "offset": [
        16736,
        16748
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4223": {
      "fn": "Governance.completeTask",
      "offset": [
        16736,
        16748
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1086"
    },
    "4226": {
      "fn": "Governance.completeTask",
      "offset": [
        16736,
        16748
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3DDE"
    },
    "4229": {
      "fn": "Governance.completeTask",
      "jump": "i",
      "offset": [
        16736,
        16748
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4230": {
      "fn": "Governance.completeTask",
      "offset": [
        16736,
        16748
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4231": {
      "fn": "Governance.completeTask",
      "offset": [
        16736,
        16748
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4232": {
      "fn": "Governance.completeTask",
      "offset": [
        16736,
        16748
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4234": {
      "fn": "Governance.completeTask",
      "offset": [
        16736,
        16748
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4235": {
      "fn": "Governance.completeTask",
      "offset": [
        16736,
        16748
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4237": {
      "fn": "Governance.completeTask",
      "offset": [
        16736,
        16748
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4239": {
      "fn": "Governance.completeTask",
      "offset": [
        16736,
        16748
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "4240": {
      "fn": "Governance.completeTask",
      "offset": [
        16736,
        16748
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4241": {
      "fn": "Governance.completeTask",
      "offset": [
        16736,
        16748
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "4243": {
      "fn": "Governance.completeTask",
      "offset": [
        16736,
        16748
      ],
      "op": "MUL",
      "path": "2"
    },
    "4244": {
      "fn": "Governance.completeTask",
      "offset": [
        16736,
        16748
      ],
      "op": "ADD",
      "path": "2"
    },
    "4245": {
      "fn": "Governance.completeTask",
      "offset": [
        16736,
        16757
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "4247": {
      "fn": "Governance.completeTask",
      "offset": [
        16736,
        16757
      ],
      "op": "ADD",
      "path": "2"
    },
    "4248": {
      "fn": "Governance.completeTask",
      "offset": [
        16725,
        16758
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4250": {
      "fn": "Governance.completeTask",
      "offset": [
        16725,
        16758
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4251": {
      "fn": "Governance.completeTask",
      "offset": [
        16725,
        16758
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4253": {
      "fn": "Governance.completeTask",
      "offset": [
        16725,
        16758
      ],
      "op": "ADD",
      "path": "2"
    },
    "4254": {
      "fn": "Governance.completeTask",
      "offset": [
        16725,
        16758
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x10A7"
    },
    "4257": {
      "fn": "Governance.completeTask",
      "offset": [
        16725,
        16758
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4258": {
      "fn": "Governance.completeTask",
      "offset": [
        16725,
        16758
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4259": {
      "fn": "Governance.completeTask",
      "offset": [
        16725,
        16758
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3F56"
    },
    "4262": {
      "fn": "Governance.completeTask",
      "jump": "i",
      "offset": [
        16725,
        16758
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4263": {
      "fn": "Governance.completeTask",
      "offset": [
        16725,
        16758
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4264": {
      "fn": "Governance.completeTask",
      "offset": [
        16725,
        16758
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4266": {
      "fn": "Governance.completeTask",
      "offset": [
        16725,
        16758
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4267": {
      "fn": "Governance.completeTask",
      "offset": [
        16725,
        16758
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4269": {
      "fn": "Governance.completeTask",
      "offset": [
        16725,
        16758
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4270": {
      "fn": "Governance.completeTask",
      "offset": [
        16725,
        16758
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4271": {
      "fn": "Governance.completeTask",
      "offset": [
        16725,
        16758
      ],
      "op": "SUB",
      "path": "2"
    },
    "4272": {
      "fn": "Governance.completeTask",
      "offset": [
        16725,
        16758
      ],
      "op": "SUB",
      "path": "2"
    },
    "4273": {
      "fn": "Governance.completeTask",
      "offset": [
        16725,
        16758
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4274": {
      "fn": "Governance.completeTask",
      "offset": [
        16725,
        16758
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4275": {
      "fn": "Governance.completeTask",
      "offset": [
        16725,
        16758
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4276": {
      "fn": "Governance.completeTask",
      "offset": [
        16725,
        16758
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4278": {
      "fn": "Governance.completeTask",
      "offset": [
        16725,
        16758
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4279": {
      "fn": "Governance.completeTask",
      "offset": [
        16715,
        16759
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4280": {
      "fn": "Governance.completeTask",
      "offset": [
        16715,
        16759
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4281": {
      "fn": "Governance.completeTask",
      "offset": [
        16715,
        16759
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4282": {
      "fn": "Governance.completeTask",
      "offset": [
        16715,
        16759
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4284": {
      "fn": "Governance.completeTask",
      "offset": [
        16715,
        16759
      ],
      "op": "ADD",
      "path": "2"
    },
    "4285": {
      "fn": "Governance.completeTask",
      "offset": [
        16715,
        16759
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "4286": {
      "branch": 138,
      "fn": "Governance.completeTask",
      "offset": [
        16715,
        16795
      ],
      "op": "SUB",
      "path": "2"
    },
    "4287": {
      "fn": "Governance.completeTask",
      "offset": [
        16712,
        17701
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x14A7"
    },
    "4290": {
      "branch": 138,
      "fn": "Governance.completeTask",
      "offset": [
        16712,
        17701
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4291": {
      "fn": "Governance.completeTask",
      "offset": [
        16911,
        16926
      ],
      "op": "TIMESTAMP",
      "path": "2",
      "statement": 27
    },
    "4292": {
      "fn": "Governance.completeTask",
      "offset": [
        16882,
        16891
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "4294": {
      "fn": "Governance.completeTask",
      "offset": [
        16892,
        16893
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4295": {
      "fn": "Governance.completeTask",
      "offset": [
        16882,
        16894
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4296": {
      "fn": "Governance.completeTask",
      "offset": [
        16882,
        16894
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4297": {
      "fn": "Governance.completeTask",
      "offset": [
        16882,
        16894
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4298": {
      "fn": "Governance.completeTask",
      "offset": [
        16882,
        16894
      ],
      "op": "LT",
      "path": "2"
    },
    "4299": {
      "fn": "Governance.completeTask",
      "offset": [
        16882,
        16894
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x10D6"
    },
    "4302": {
      "fn": "Governance.completeTask",
      "offset": [
        16882,
        16894
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4303": {
      "fn": "Governance.completeTask",
      "offset": [
        16882,
        16894
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x10D6"
    },
    "4306": {
      "fn": "Governance.completeTask",
      "offset": [
        16882,
        16894
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3DDE"
    },
    "4309": {
      "fn": "Governance.completeTask",
      "jump": "i",
      "offset": [
        16882,
        16894
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4310": {
      "fn": "Governance.completeTask",
      "offset": [
        16882,
        16894
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4311": {
      "fn": "Governance.completeTask",
      "offset": [
        16882,
        16894
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4313": {
      "fn": "Governance.completeTask",
      "offset": [
        16882,
        16894
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4314": {
      "fn": "Governance.completeTask",
      "offset": [
        16882,
        16894
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4315": {
      "fn": "Governance.completeTask",
      "offset": [
        16882,
        16894
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4316": {
      "fn": "Governance.completeTask",
      "offset": [
        16882,
        16894
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4318": {
      "fn": "Governance.completeTask",
      "offset": [
        16882,
        16894
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4319": {
      "fn": "Governance.completeTask",
      "offset": [
        16882,
        16894
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4320": {
      "fn": "Governance.completeTask",
      "offset": [
        16882,
        16894
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "4321": {
      "fn": "Governance.completeTask",
      "offset": [
        16882,
        16894
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "4323": {
      "fn": "Governance.completeTask",
      "offset": [
        16882,
        16894
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4324": {
      "fn": "Governance.completeTask",
      "offset": [
        16882,
        16894
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4325": {
      "fn": "Governance.completeTask",
      "offset": [
        16882,
        16894
      ],
      "op": "MUL",
      "path": "2"
    },
    "4326": {
      "fn": "Governance.completeTask",
      "offset": [
        16882,
        16894
      ],
      "op": "ADD",
      "path": "2"
    },
    "4327": {
      "fn": "Governance.completeTask",
      "offset": [
        16882,
        16907
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "4329": {
      "fn": "Governance.completeTask",
      "offset": [
        16882,
        16907
      ],
      "op": "ADD",
      "path": "2"
    },
    "4330": {
      "fn": "Governance.completeTask",
      "offset": [
        16882,
        16907
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4331": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4333": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "4335": {
      "op": "SHL"
    },
    "4336": {
      "fn": "Governance.completeTask",
      "offset": [
        16882,
        16907
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4337": {
      "fn": "Governance.completeTask",
      "offset": [
        16882,
        16907
      ],
      "op": "DIV",
      "path": "2"
    },
    "4338": {
      "fn": "Governance.completeTask",
      "offset": [
        16882,
        16907
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "4344": {
      "fn": "Governance.completeTask",
      "offset": [
        16882,
        16907
      ],
      "op": "AND",
      "path": "2"
    },
    "4345": {
      "fn": "Governance.completeTask",
      "offset": [
        16882,
        16926
      ],
      "op": "GT",
      "path": "2"
    },
    "4346": {
      "fn": "Governance.completeTask",
      "offset": [
        16882,
        16926
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4347": {
      "fn": "Governance.completeTask",
      "offset": [
        16882,
        16926
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "4348": {
      "branch": 139,
      "fn": "Governance.completeTask",
      "offset": [
        16882,
        16926
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4349": {
      "fn": "Governance.completeTask",
      "offset": [
        16882,
        16974
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x113A"
    },
    "4352": {
      "branch": 139,
      "fn": "Governance.completeTask",
      "offset": [
        16882,
        16974
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4353": {
      "fn": "Governance.completeTask",
      "offset": [
        16882,
        16974
      ],
      "op": "POP",
      "path": "2"
    },
    "4354": {
      "fn": "Governance.completeTask",
      "offset": [
        16949,
        16958
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "4356": {
      "fn": "Governance.completeTask",
      "offset": [
        16959,
        16960
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4357": {
      "fn": "Governance.completeTask",
      "offset": [
        16949,
        16961
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4358": {
      "fn": "Governance.completeTask",
      "offset": [
        16949,
        16961
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4359": {
      "fn": "Governance.completeTask",
      "offset": [
        16949,
        16961
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4360": {
      "fn": "Governance.completeTask",
      "offset": [
        16949,
        16961
      ],
      "op": "LT",
      "path": "2"
    },
    "4361": {
      "fn": "Governance.completeTask",
      "offset": [
        16949,
        16961
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1114"
    },
    "4364": {
      "fn": "Governance.completeTask",
      "offset": [
        16949,
        16961
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4365": {
      "fn": "Governance.completeTask",
      "offset": [
        16949,
        16961
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1114"
    },
    "4368": {
      "fn": "Governance.completeTask",
      "offset": [
        16949,
        16961
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3DDE"
    },
    "4371": {
      "fn": "Governance.completeTask",
      "jump": "i",
      "offset": [
        16949,
        16961
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4372": {
      "fn": "Governance.completeTask",
      "offset": [
        16949,
        16961
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4373": {
      "fn": "Governance.completeTask",
      "offset": [
        16949,
        16961
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4375": {
      "fn": "Governance.completeTask",
      "offset": [
        16949,
        16961
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4376": {
      "fn": "Governance.completeTask",
      "offset": [
        16949,
        16961
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4377": {
      "fn": "Governance.completeTask",
      "offset": [
        16949,
        16961
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4378": {
      "fn": "Governance.completeTask",
      "offset": [
        16949,
        16961
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4380": {
      "fn": "Governance.completeTask",
      "offset": [
        16949,
        16961
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4381": {
      "fn": "Governance.completeTask",
      "offset": [
        16949,
        16961
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4382": {
      "fn": "Governance.completeTask",
      "offset": [
        16949,
        16961
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "4383": {
      "fn": "Governance.completeTask",
      "offset": [
        16949,
        16961
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "4385": {
      "fn": "Governance.completeTask",
      "offset": [
        16949,
        16961
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4386": {
      "fn": "Governance.completeTask",
      "offset": [
        16949,
        16961
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4387": {
      "fn": "Governance.completeTask",
      "offset": [
        16949,
        16961
      ],
      "op": "MUL",
      "path": "2"
    },
    "4388": {
      "fn": "Governance.completeTask",
      "offset": [
        16949,
        16961
      ],
      "op": "ADD",
      "path": "2"
    },
    "4389": {
      "fn": "Governance.completeTask",
      "offset": [
        16949,
        16974
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "4391": {
      "fn": "Governance.completeTask",
      "offset": [
        16949,
        16974
      ],
      "op": "ADD",
      "path": "2"
    },
    "4392": {
      "fn": "Governance.completeTask",
      "offset": [
        16949,
        16974
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4393": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4395": {
      "op": "PUSH1",
      "value": "0x78"
    },
    "4397": {
      "op": "SHL"
    },
    "4398": {
      "fn": "Governance.completeTask",
      "offset": [
        16949,
        16974
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4399": {
      "fn": "Governance.completeTask",
      "offset": [
        16949,
        16974
      ],
      "op": "DIV",
      "path": "2"
    },
    "4400": {
      "fn": "Governance.completeTask",
      "offset": [
        16949,
        16974
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "4406": {
      "fn": "Governance.completeTask",
      "offset": [
        16949,
        16974
      ],
      "op": "AND",
      "path": "2"
    },
    "4407": {
      "fn": "Governance.completeTask",
      "offset": [
        16930,
        16945
      ],
      "op": "TIMESTAMP",
      "path": "2"
    },
    "4408": {
      "fn": "Governance.completeTask",
      "offset": [
        16930,
        16974
      ],
      "op": "GT",
      "path": "2"
    },
    "4409": {
      "branch": 140,
      "fn": "Governance.completeTask",
      "offset": [
        16930,
        16974
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "4410": {
      "fn": "Governance.completeTask",
      "offset": [
        16882,
        16974
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4411": {
      "fn": "Governance.completeTask",
      "offset": [
        16874,
        16998
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x117C"
    },
    "4414": {
      "branch": 140,
      "fn": "Governance.completeTask",
      "offset": [
        16874,
        16998
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4415": {
      "fn": "Governance.completeTask",
      "offset": [
        16874,
        16998
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4417": {
      "fn": "Governance.completeTask",
      "offset": [
        16874,
        16998
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4418": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4422": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4424": {
      "op": "SHL"
    },
    "4425": {
      "fn": "Governance.completeTask",
      "offset": [
        16874,
        16998
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4426": {
      "fn": "Governance.completeTask",
      "offset": [
        16874,
        16998
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4427": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4429": {
      "fn": "Governance.completeTask",
      "offset": [
        16874,
        16998
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "4431": {
      "fn": "Governance.completeTask",
      "offset": [
        16874,
        16998
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4432": {
      "fn": "Governance.completeTask",
      "offset": [
        16874,
        16998
      ],
      "op": "ADD",
      "path": "2"
    },
    "4433": {
      "op": "MSTORE"
    },
    "4434": {
      "op": "PUSH1",
      "value": "0x13"
    },
    "4436": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4438": {
      "op": "DUP3"
    },
    "4439": {
      "op": "ADD"
    },
    "4440": {
      "op": "MSTORE"
    },
    "4441": {
      "op": "PUSH19",
      "value": "0x13DD5D1CDA5919481D1A5B59481C195C9A5BD9"
    },
    "4461": {
      "op": "PUSH1",
      "value": "0x6A"
    },
    "4463": {
      "op": "SHL"
    },
    "4464": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4466": {
      "op": "DUP3"
    },
    "4467": {
      "op": "ADD"
    },
    "4468": {
      "op": "MSTORE"
    },
    "4469": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4471": {
      "op": "ADD"
    },
    "4472": {
      "fn": "Governance.completeTask",
      "offset": [
        16874,
        16998
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF9A"
    },
    "4475": {
      "op": "JUMP"
    },
    "4476": {
      "fn": "Governance.completeTask",
      "offset": [
        16874,
        16998
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4477": {
      "fn": "Governance.completeTask",
      "offset": [
        17051,
        17069
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4479": {
      "fn": "Governance.completeTask",
      "offset": [
        17072,
        17170
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4481": {
      "fn": "Governance.completeTask",
      "offset": [
        17072,
        17170
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4482": {
      "fn": "Governance.completeTask",
      "offset": [
        17072,
        17170
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4483": {
      "fn": "Governance.completeTask",
      "offset": [
        17072,
        17170
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x140"
    },
    "4486": {
      "fn": "Governance.completeTask",
      "offset": [
        17072,
        17170
      ],
      "op": "ADD",
      "path": "2"
    },
    "4487": {
      "fn": "Governance.completeTask",
      "offset": [
        17072,
        17170
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4489": {
      "fn": "Governance.completeTask",
      "offset": [
        17072,
        17170
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4490": {
      "fn": "Governance.completeTask",
      "offset": [
        17072,
        17170
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4491": {
      "fn": "Governance.completeTask",
      "offset": [
        17077,
        17086
      ],
      "op": "DUP7",
      "path": "2"
    },
    "4492": {
      "fn": "Governance.completeTask",
      "offset": [
        17072,
        17170
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4493": {
      "fn": "Governance.completeTask",
      "offset": [
        17072,
        17170
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4494": {
      "fn": "Governance.completeTask",
      "offset": [
        17072,
        17170
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4496": {
      "fn": "Governance.completeTask",
      "offset": [
        17072,
        17170
      ],
      "op": "ADD",
      "path": "2"
    },
    "4497": {
      "fn": "Governance.completeTask",
      "offset": [
        17087,
        17093
      ],
      "op": "DUP5",
      "path": "2"
    },
    "4498": {
      "fn": "Governance.completeTask",
      "offset": [
        17072,
        17170
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "4504": {
      "fn": "Governance.completeTask",
      "offset": [
        17072,
        17170
      ],
      "op": "AND",
      "path": "2"
    },
    "4505": {
      "fn": "Governance.completeTask",
      "offset": [
        17072,
        17170
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4506": {
      "fn": "Governance.completeTask",
      "offset": [
        17072,
        17170
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4507": {
      "fn": "Governance.completeTask",
      "offset": [
        17072,
        17170
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4509": {
      "fn": "Governance.completeTask",
      "offset": [
        17072,
        17170
      ],
      "op": "ADD",
      "path": "2"
    },
    "4510": {
      "fn": "Governance.completeTask",
      "offset": [
        17095,
        17100
      ],
      "op": "DUP6",
      "path": "2"
    },
    "4511": {
      "fn": "Governance.completeTask",
      "offset": [
        17072,
        17170
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4512": {
      "fn": "Governance.completeTask",
      "offset": [
        17072,
        17170
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4513": {
      "fn": "Governance.completeTask",
      "offset": [
        17072,
        17170
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4515": {
      "fn": "Governance.completeTask",
      "offset": [
        17072,
        17170
      ],
      "op": "ADD",
      "path": "2"
    },
    "4516": {
      "fn": "Governance.completeTask",
      "offset": [
        17102,
        17103
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4518": {
      "fn": "Governance.completeTask",
      "offset": [
        17072,
        17170
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4519": {
      "fn": "Governance.completeTask",
      "offset": [
        17072,
        17170
      ],
      "op": "SHL",
      "path": "2"
    },
    "4520": {
      "fn": "Governance.completeTask",
      "offset": [
        17072,
        17170
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4521": {
      "fn": "Governance.completeTask",
      "offset": [
        17072,
        17170
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4522": {
      "fn": "Governance.completeTask",
      "offset": [
        17072,
        17170
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4524": {
      "fn": "Governance.completeTask",
      "offset": [
        17072,
        17170
      ],
      "op": "ADD",
      "path": "2"
    },
    "4525": {
      "fn": "Governance.completeTask",
      "offset": [
        17105,
        17114
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "4527": {
      "fn": "Governance.completeTask",
      "offset": [
        17115,
        17116
      ],
      "op": "DUP5",
      "path": "2"
    },
    "4528": {
      "fn": "Governance.completeTask",
      "offset": [
        17105,
        17117
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4529": {
      "fn": "Governance.completeTask",
      "offset": [
        17105,
        17117
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4530": {
      "fn": "Governance.completeTask",
      "offset": [
        17105,
        17117
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4531": {
      "fn": "Governance.completeTask",
      "offset": [
        17105,
        17117
      ],
      "op": "LT",
      "path": "2"
    },
    "4532": {
      "fn": "Governance.completeTask",
      "offset": [
        17105,
        17117
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x11BF"
    },
    "4535": {
      "fn": "Governance.completeTask",
      "offset": [
        17105,
        17117
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4536": {
      "fn": "Governance.completeTask",
      "offset": [
        17105,
        17117
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x11BF"
    },
    "4539": {
      "fn": "Governance.completeTask",
      "offset": [
        17105,
        17117
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3DDE"
    },
    "4542": {
      "fn": "Governance.completeTask",
      "jump": "i",
      "offset": [
        17105,
        17117
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4543": {
      "fn": "Governance.completeTask",
      "offset": [
        17105,
        17117
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4544": {
      "fn": "Governance.completeTask",
      "offset": [
        17105,
        17117
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4545": {
      "fn": "Governance.completeTask",
      "offset": [
        17105,
        17117
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4547": {
      "fn": "Governance.completeTask",
      "offset": [
        17105,
        17117
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4548": {
      "fn": "Governance.completeTask",
      "offset": [
        17105,
        17117
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4550": {
      "fn": "Governance.completeTask",
      "offset": [
        17105,
        17117
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4552": {
      "fn": "Governance.completeTask",
      "offset": [
        17105,
        17117
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "4553": {
      "fn": "Governance.completeTask",
      "offset": [
        17105,
        17117
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4554": {
      "fn": "Governance.completeTask",
      "offset": [
        17105,
        17117
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "4556": {
      "fn": "Governance.completeTask",
      "offset": [
        17105,
        17117
      ],
      "op": "MUL",
      "path": "2"
    },
    "4557": {
      "fn": "Governance.completeTask",
      "offset": [
        17105,
        17117
      ],
      "op": "ADD",
      "path": "2"
    },
    "4558": {
      "fn": "Governance.completeTask",
      "offset": [
        17105,
        17133
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "4560": {
      "fn": "Governance.completeTask",
      "offset": [
        17105,
        17133
      ],
      "op": "ADD",
      "path": "2"
    },
    "4561": {
      "fn": "Governance.completeTask",
      "offset": [
        17105,
        17133
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x6"
    },
    "4563": {
      "fn": "Governance.completeTask",
      "offset": [
        17105,
        17133
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4564": {
      "fn": "Governance.completeTask",
      "offset": [
        17105,
        17133
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4565": {
      "fn": "Governance.completeTask",
      "offset": [
        17105,
        17133
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4566": {
      "fn": "Governance.completeTask",
      "offset": [
        17105,
        17133
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "4569": {
      "fn": "Governance.completeTask",
      "offset": [
        17105,
        17133
      ],
      "op": "EXP",
      "path": "2"
    },
    "4570": {
      "fn": "Governance.completeTask",
      "offset": [
        17105,
        17133
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4571": {
      "fn": "Governance.completeTask",
      "offset": [
        17105,
        17133
      ],
      "op": "DIV",
      "path": "2"
    },
    "4572": {
      "fn": "Governance.completeTask",
      "offset": [
        17105,
        17133
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "4574": {
      "fn": "Governance.completeTask",
      "offset": [
        17105,
        17133
      ],
      "op": "AND",
      "path": "2"
    },
    "4575": {
      "fn": "Governance.completeTask",
      "offset": [
        17072,
        17170
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "4577": {
      "fn": "Governance.completeTask",
      "offset": [
        17072,
        17170
      ],
      "op": "AND",
      "path": "2"
    },
    "4578": {
      "fn": "Governance.completeTask",
      "offset": [
        17072,
        17170
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4579": {
      "fn": "Governance.completeTask",
      "offset": [
        17072,
        17170
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4580": {
      "fn": "Governance.completeTask",
      "offset": [
        17072,
        17170
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4582": {
      "fn": "Governance.completeTask",
      "offset": [
        17072,
        17170
      ],
      "op": "ADD",
      "path": "2"
    },
    "4583": {
      "fn": "Governance.completeTask",
      "offset": [
        17135,
        17144
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "4585": {
      "fn": "Governance.completeTask",
      "offset": [
        17145,
        17146
      ],
      "op": "DUP5",
      "path": "2"
    },
    "4586": {
      "fn": "Governance.completeTask",
      "offset": [
        17135,
        17147
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4587": {
      "fn": "Governance.completeTask",
      "offset": [
        17135,
        17147
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4588": {
      "fn": "Governance.completeTask",
      "offset": [
        17135,
        17147
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4589": {
      "fn": "Governance.completeTask",
      "offset": [
        17135,
        17147
      ],
      "op": "LT",
      "path": "2"
    },
    "4590": {
      "fn": "Governance.completeTask",
      "offset": [
        17135,
        17147
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x11F9"
    },
    "4593": {
      "fn": "Governance.completeTask",
      "offset": [
        17135,
        17147
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4594": {
      "fn": "Governance.completeTask",
      "offset": [
        17135,
        17147
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x11F9"
    },
    "4597": {
      "fn": "Governance.completeTask",
      "offset": [
        17135,
        17147
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3DDE"
    },
    "4600": {
      "fn": "Governance.completeTask",
      "jump": "i",
      "offset": [
        17135,
        17147
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4601": {
      "fn": "Governance.completeTask",
      "offset": [
        17135,
        17147
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4602": {
      "fn": "Governance.completeTask",
      "offset": [
        17135,
        17147
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4604": {
      "fn": "Governance.completeTask",
      "offset": [
        17135,
        17147
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4605": {
      "fn": "Governance.completeTask",
      "offset": [
        17135,
        17147
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4606": {
      "fn": "Governance.completeTask",
      "offset": [
        17135,
        17147
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4607": {
      "fn": "Governance.completeTask",
      "offset": [
        17135,
        17147
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4609": {
      "fn": "Governance.completeTask",
      "offset": [
        17135,
        17147
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4610": {
      "fn": "Governance.completeTask",
      "offset": [
        17135,
        17147
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4611": {
      "fn": "Governance.completeTask",
      "offset": [
        17135,
        17147
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "4612": {
      "fn": "Governance.completeTask",
      "offset": [
        17135,
        17147
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "4614": {
      "fn": "Governance.completeTask",
      "offset": [
        17135,
        17147
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "4615": {
      "fn": "Governance.completeTask",
      "offset": [
        17135,
        17147
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4616": {
      "fn": "Governance.completeTask",
      "offset": [
        17135,
        17147
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "4617": {
      "fn": "Governance.completeTask",
      "offset": [
        17135,
        17147
      ],
      "op": "MUL",
      "path": "2"
    },
    "4618": {
      "fn": "Governance.completeTask",
      "offset": [
        17135,
        17147
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4619": {
      "fn": "Governance.completeTask",
      "offset": [
        17135,
        17147
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4620": {
      "fn": "Governance.completeTask",
      "offset": [
        17135,
        17147
      ],
      "op": "ADD",
      "path": "2"
    },
    "4621": {
      "fn": "Governance.completeTask",
      "offset": [
        17135,
        17157
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "4623": {
      "fn": "Governance.completeTask",
      "offset": [
        17135,
        17157
      ],
      "op": "ADD",
      "path": "2"
    },
    "4624": {
      "fn": "Governance.completeTask",
      "offset": [
        17135,
        17157
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4625": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4627": {
      "op": "PUSH1",
      "value": "0x38"
    },
    "4629": {
      "op": "SHL"
    },
    "4630": {
      "fn": "Governance.completeTask",
      "offset": [
        17135,
        17157
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4631": {
      "fn": "Governance.completeTask",
      "offset": [
        17135,
        17157
      ],
      "op": "DIV",
      "path": "2"
    },
    "4632": {
      "fn": "Governance.completeTask",
      "offset": [
        17135,
        17157
      ],
      "op": "PUSH3",
      "path": "2",
      "value": "0xFFFFFF"
    },
    "4636": {
      "fn": "Governance.completeTask",
      "offset": [
        17135,
        17157
      ],
      "op": "AND",
      "path": "2"
    },
    "4637": {
      "fn": "Governance.completeTask",
      "offset": [
        17072,
        17170
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4638": {
      "fn": "Governance.completeTask",
      "offset": [
        17072,
        17170
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4639": {
      "fn": "Governance.completeTask",
      "offset": [
        17072,
        17170
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4640": {
      "fn": "Governance.completeTask",
      "offset": [
        17072,
        17170
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4641": {
      "fn": "Governance.completeTask",
      "offset": [
        17072,
        17170
      ],
      "op": "ADD",
      "path": "2"
    },
    "4642": {
      "fn": "Governance.completeTask",
      "offset": [
        17072,
        17170
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4643": {
      "fn": "Governance.completeTask",
      "offset": [
        17072,
        17170
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4644": {
      "fn": "Governance.completeTask",
      "offset": [
        17072,
        17170
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4645": {
      "fn": "Governance.completeTask",
      "offset": [
        17072,
        17170
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4647": {
      "fn": "Governance.completeTask",
      "offset": [
        17072,
        17170
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4648": {
      "fn": "Governance.completeTask",
      "offset": [
        17072,
        17170
      ],
      "op": "DUP5",
      "path": "2"
    },
    "4649": {
      "fn": "Governance.completeTask",
      "offset": [
        17072,
        17170
      ],
      "op": "ADD",
      "path": "2"
    },
    "4650": {
      "fn": "Governance.completeTask",
      "offset": [
        17072,
        17170
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4651": {
      "fn": "Governance.completeTask",
      "offset": [
        17072,
        17170
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4652": {
      "fn": "Governance.completeTask",
      "offset": [
        17072,
        17170
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4653": {
      "fn": "Governance.completeTask",
      "offset": [
        17072,
        17170
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "4655": {
      "fn": "Governance.completeTask",
      "offset": [
        17072,
        17170
      ],
      "op": "DUP5",
      "path": "2"
    },
    "4656": {
      "fn": "Governance.completeTask",
      "offset": [
        17072,
        17170
      ],
      "op": "ADD",
      "path": "2"
    },
    "4657": {
      "fn": "Governance.completeTask",
      "offset": [
        17072,
        17170
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4658": {
      "fn": "Governance.completeTask",
      "offset": [
        17072,
        17170
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4659": {
      "fn": "Governance.completeTask",
      "offset": [
        17072,
        17170
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4660": {
      "fn": "Governance.completeTask",
      "offset": [
        17072,
        17170
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x80"
    },
    "4662": {
      "fn": "Governance.completeTask",
      "offset": [
        17072,
        17170
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4663": {
      "fn": "Governance.completeTask",
      "offset": [
        17072,
        17170
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "4664": {
      "fn": "Governance.completeTask",
      "offset": [
        17072,
        17170
      ],
      "op": "ADD",
      "path": "2"
    },
    "4665": {
      "fn": "Governance.completeTask",
      "offset": [
        17072,
        17170
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4666": {
      "fn": "Governance.completeTask",
      "offset": [
        17072,
        17170
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4667": {
      "fn": "Governance.completeTask",
      "offset": [
        17072,
        17170
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4668": {
      "fn": "Governance.completeTask",
      "offset": [
        17248,
        17267
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 28,
      "value": "0xB"
    },
    "4670": {
      "fn": "Governance.completeTask",
      "offset": [
        17248,
        17267
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4671": {
      "fn": "Governance.completeTask",
      "offset": [
        17214,
        17238
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x6"
    },
    "4673": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2187,
        2197
      ],
      "op": "DUP1",
      "path": "1"
    },
    "4674": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2187,
        2197
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "4675": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4677": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4679": {
      "op": "SHL"
    },
    "4680": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2187,
        2197
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4681": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2187,
        2197
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4682": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2187,
        2197
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4683": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2187,
        2197
      ],
      "op": "DIV",
      "path": "1"
    },
    "4684": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2187,
        2197
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xF"
    },
    "4686": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2187,
        2197
      ],
      "op": "SIGNEXTEND",
      "path": "1"
    },
    "4687": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2207,
        2229
      ],
      "op": "DUP1",
      "path": "1",
      "statement": 29
    },
    "4688": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2207,
        2229
      ],
      "op": "DUP7",
      "path": "1"
    },
    "4689": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2207,
        2229
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4690": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2207,
        2218
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x7"
    },
    "4692": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2207,
        2229
      ],
      "op": "DUP6",
      "path": "1"
    },
    "4693": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2207,
        2229
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4694": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2207,
        2229
      ],
      "op": "DUP7",
      "path": "1"
    },
    "4695": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2207,
        2229
      ],
      "op": "DUP7",
      "path": "1"
    },
    "4696": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2207,
        2229
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "4697": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2207,
        2237
      ],
      "op": "DUP5",
      "path": "1"
    },
    "4698": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2207,
        2237
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4699": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2207,
        2237
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "4700": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2271,
        2297
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 30
    },
    "4701": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2271,
        2297
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "4702": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4704": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4706": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4708": {
      "op": "SHL"
    },
    "4709": {
      "op": "SUB"
    },
    "4710": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2271,
        2297
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4711": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2271,
        2297
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4712": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2271,
        2297
      ],
      "op": "AND",
      "path": "1"
    },
    "4713": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2207,
        2218
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "4715": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2284,
        2297
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4716": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2284,
        2297
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "4717": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2284,
        2297
      ],
      "op": "ADD",
      "path": "1"
    },
    "4718": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2271,
        2297
      ],
      "op": "AND",
      "path": "1"
    },
    "4719": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2271,
        2297
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4720": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2271,
        2297
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "4721": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2271,
        2297
      ],
      "op": "MUL",
      "path": "1"
    },
    "4722": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2271,
        2297
      ],
      "op": "OR",
      "path": "1"
    },
    "4723": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2271,
        2297
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4724": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2271,
        2297
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "4725": {
      "fn": "Governance.completeTask",
      "offset": [
        17287,
        17313
      ],
      "op": "DUP3",
      "path": "2",
      "statement": 31
    },
    "4726": {
      "fn": "Governance.completeTask",
      "offset": [
        17287,
        17313
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4727": {
      "fn": "Governance.completeTask",
      "offset": [
        17287,
        17292
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA"
    },
    "4729": {
      "fn": "Governance.completeTask",
      "offset": [
        17287,
        17313
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4730": {
      "fn": "Governance.completeTask",
      "offset": [
        17287,
        17313
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4731": {
      "fn": "Governance.completeTask",
      "offset": [
        17287,
        17313
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "4732": {
      "fn": "Governance.completeTask",
      "offset": [
        17287,
        17322
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4733": {
      "fn": "Governance.completeTask",
      "offset": [
        17287,
        17322
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4734": {
      "fn": "Governance.completeTask",
      "offset": [
        17287,
        17322
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4735": {
      "fn": "Governance.completeTask",
      "offset": [
        17287,
        17322
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "4736": {
      "op": "POP"
    },
    "4737": {
      "fn": "Governance.completeTask",
      "offset": [
        17287,
        17322
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4738": {
      "fn": "Governance.completeTask",
      "offset": [
        17287,
        17322
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4739": {
      "fn": "Governance.completeTask",
      "offset": [
        17287,
        17313
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4740": {
      "fn": "Governance.completeTask",
      "offset": [
        17287,
        17313
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4741": {
      "fn": "Governance.completeTask",
      "offset": [
        17287,
        17322
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x128E"
    },
    "4744": {
      "fn": "Governance.completeTask",
      "offset": [
        17287,
        17322
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4745": {
      "fn": "Governance.completeTask",
      "offset": [
        17287,
        17313
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4746": {
      "fn": "Governance.completeTask",
      "offset": [
        17287,
        17322
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3FB8"
    },
    "4749": {
      "fn": "Governance.completeTask",
      "jump": "i",
      "offset": [
        17287,
        17322
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4750": {
      "fn": "Governance.completeTask",
      "offset": [
        17287,
        17322
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4751": {
      "op": "POP"
    },
    "4752": {
      "fn": "Governance.completeTask",
      "offset": [
        17287,
        17322
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4754": {
      "fn": "Governance.completeTask",
      "offset": [
        17287,
        17322
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4755": {
      "fn": "Governance.completeTask",
      "offset": [
        17287,
        17322
      ],
      "op": "ADD",
      "path": "2"
    },
    "4756": {
      "fn": "Governance.completeTask",
      "offset": [
        17287,
        17322
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4757": {
      "fn": "Governance.completeTask",
      "offset": [
        17287,
        17322
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "4759": {
      "fn": "Governance.completeTask",
      "offset": [
        17287,
        17322
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4760": {
      "fn": "Governance.completeTask",
      "offset": [
        17287,
        17322
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4761": {
      "fn": "Governance.completeTask",
      "offset": [
        17287,
        17322
      ],
      "op": "ADD",
      "path": "2"
    },
    "4762": {
      "fn": "Governance.completeTask",
      "offset": [
        17287,
        17322
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4763": {
      "fn": "Governance.completeTask",
      "offset": [
        17287,
        17322
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4764": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "4770": {
      "op": "NOT"
    },
    "4771": {
      "fn": "Governance.completeTask",
      "offset": [
        17287,
        17322
      ],
      "op": "AND",
      "path": "2"
    },
    "4772": {
      "fn": "Governance.completeTask",
      "offset": [
        17287,
        17322
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "4778": {
      "fn": "Governance.completeTask",
      "offset": [
        17287,
        17322
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "4779": {
      "fn": "Governance.completeTask",
      "offset": [
        17287,
        17322
      ],
      "op": "DUP5",
      "path": "2"
    },
    "4780": {
      "fn": "Governance.completeTask",
      "offset": [
        17287,
        17322
      ],
      "op": "AND",
      "path": "2"
    },
    "4781": {
      "fn": "Governance.completeTask",
      "offset": [
        17287,
        17322
      ],
      "op": "OR",
      "path": "2"
    },
    "4782": {
      "fn": "Governance.completeTask",
      "offset": [
        17287,
        17322
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4783": {
      "fn": "Governance.completeTask",
      "offset": [
        17287,
        17322
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "4784": {
      "fn": "Governance.completeTask",
      "offset": [
        17287,
        17322
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4786": {
      "fn": "Governance.completeTask",
      "offset": [
        17287,
        17322
      ],
      "op": "DUP5",
      "path": "2"
    },
    "4787": {
      "fn": "Governance.completeTask",
      "offset": [
        17287,
        17322
      ],
      "op": "ADD",
      "path": "2"
    },
    "4788": {
      "fn": "Governance.completeTask",
      "offset": [
        17287,
        17322
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4789": {
      "fn": "Governance.completeTask",
      "offset": [
        17287,
        17322
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "4791": {
      "fn": "Governance.completeTask",
      "offset": [
        17287,
        17322
      ],
      "op": "DUP5",
      "path": "2"
    },
    "4792": {
      "fn": "Governance.completeTask",
      "offset": [
        17287,
        17322
      ],
      "op": "ADD",
      "path": "2"
    },
    "4793": {
      "fn": "Governance.completeTask",
      "offset": [
        17287,
        17322
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "4794": {
      "fn": "Governance.completeTask",
      "offset": [
        17287,
        17322
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "4796": {
      "fn": "Governance.completeTask",
      "offset": [
        17287,
        17322
      ],
      "op": "DUP5",
      "path": "2"
    },
    "4797": {
      "fn": "Governance.completeTask",
      "offset": [
        17287,
        17322
      ],
      "op": "ADD",
      "path": "2"
    },
    "4798": {
      "fn": "Governance.completeTask",
      "offset": [
        17287,
        17322
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4799": {
      "fn": "Governance.completeTask",
      "offset": [
        17287,
        17322
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "4801": {
      "fn": "Governance.completeTask",
      "offset": [
        17287,
        17322
      ],
      "op": "DUP5",
      "path": "2"
    },
    "4802": {
      "fn": "Governance.completeTask",
      "offset": [
        17287,
        17322
      ],
      "op": "ADD",
      "path": "2"
    },
    "4803": {
      "fn": "Governance.completeTask",
      "offset": [
        17287,
        17322
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "4804": {
      "fn": "Governance.completeTask",
      "offset": [
        17287,
        17322
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x80"
    },
    "4806": {
      "fn": "Governance.completeTask",
      "offset": [
        17287,
        17322
      ],
      "op": "DUP5",
      "path": "2"
    },
    "4807": {
      "fn": "Governance.completeTask",
      "offset": [
        17287,
        17322
      ],
      "op": "ADD",
      "path": "2"
    },
    "4808": {
      "fn": "Governance.completeTask",
      "offset": [
        17287,
        17322
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4809": {
      "fn": "Governance.completeTask",
      "offset": [
        17287,
        17322
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "4811": {
      "fn": "Governance.completeTask",
      "offset": [
        17287,
        17322
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4812": {
      "fn": "Governance.completeTask",
      "offset": [
        17287,
        17322
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "4813": {
      "fn": "Governance.completeTask",
      "offset": [
        17287,
        17322
      ],
      "op": "ADD",
      "path": "2"
    },
    "4814": {
      "fn": "Governance.completeTask",
      "offset": [
        17287,
        17322
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4815": {
      "fn": "Governance.completeTask",
      "offset": [
        17287,
        17322
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4816": {
      "fn": "Governance.completeTask",
      "offset": [
        17287,
        17322
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA0"
    },
    "4818": {
      "fn": "Governance.completeTask",
      "offset": [
        17287,
        17322
      ],
      "op": "DUP7",
      "path": "2"
    },
    "4819": {
      "fn": "Governance.completeTask",
      "offset": [
        17287,
        17322
      ],
      "op": "ADD",
      "path": "2"
    },
    "4820": {
      "fn": "Governance.completeTask",
      "offset": [
        17287,
        17322
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4821": {
      "fn": "Governance.completeTask",
      "offset": [
        17287,
        17322
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xC0"
    },
    "4823": {
      "fn": "Governance.completeTask",
      "offset": [
        17287,
        17322
      ],
      "op": "DUP8",
      "path": "2"
    },
    "4824": {
      "fn": "Governance.completeTask",
      "offset": [
        17287,
        17322
      ],
      "op": "ADD",
      "path": "2"
    },
    "4825": {
      "fn": "Governance.completeTask",
      "offset": [
        17287,
        17322
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4826": {
      "fn": "Governance.completeTask",
      "offset": [
        17287,
        17322
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE0"
    },
    "4828": {
      "fn": "Governance.completeTask",
      "offset": [
        17287,
        17322
      ],
      "op": "DUP9",
      "path": "2"
    },
    "4829": {
      "fn": "Governance.completeTask",
      "offset": [
        17287,
        17322
      ],
      "op": "ADD",
      "path": "2"
    },
    "4830": {
      "fn": "Governance.completeTask",
      "offset": [
        17287,
        17322
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4831": {
      "fn": "Governance.completeTask",
      "offset": [
        17287,
        17322
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "4834": {
      "fn": "Governance.completeTask",
      "offset": [
        17287,
        17322
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4835": {
      "fn": "Governance.completeTask",
      "offset": [
        17287,
        17322
      ],
      "op": "DUP11",
      "path": "2"
    },
    "4836": {
      "fn": "Governance.completeTask",
      "offset": [
        17287,
        17322
      ],
      "op": "ADD",
      "path": "2"
    },
    "4837": {
      "fn": "Governance.completeTask",
      "offset": [
        17287,
        17322
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4838": {
      "fn": "Governance.completeTask",
      "offset": [
        17287,
        17322
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x120"
    },
    "4841": {
      "fn": "Governance.completeTask",
      "offset": [
        17287,
        17322
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4842": {
      "fn": "Governance.completeTask",
      "offset": [
        17287,
        17322
      ],
      "op": "SWAP11",
      "path": "2"
    },
    "4843": {
      "fn": "Governance.completeTask",
      "offset": [
        17287,
        17322
      ],
      "op": "ADD",
      "path": "2"
    },
    "4844": {
      "fn": "Governance.completeTask",
      "offset": [
        17287,
        17322
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4845": {
      "fn": "Governance.completeTask",
      "offset": [
        17287,
        17322
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "4847": {
      "fn": "Governance.completeTask",
      "offset": [
        17287,
        17322
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4848": {
      "fn": "Governance.completeTask",
      "offset": [
        17287,
        17322
      ],
      "op": "SWAP10",
      "path": "2"
    },
    "4849": {
      "fn": "Governance.completeTask",
      "offset": [
        17287,
        17322
      ],
      "op": "AND",
      "path": "2"
    },
    "4850": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "4855": {
      "op": "NOT"
    },
    "4856": {
      "fn": "Governance.completeTask",
      "offset": [
        17287,
        17322
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4857": {
      "fn": "Governance.completeTask",
      "offset": [
        17287,
        17322
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "4858": {
      "fn": "Governance.completeTask",
      "offset": [
        17287,
        17322
      ],
      "op": "AND",
      "path": "2"
    },
    "4859": {
      "fn": "Governance.completeTask",
      "offset": [
        17287,
        17322
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "4860": {
      "fn": "Governance.completeTask",
      "offset": [
        17287,
        17322
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4861": {
      "fn": "Governance.completeTask",
      "offset": [
        17287,
        17322
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "4862": {
      "fn": "Governance.completeTask",
      "offset": [
        17287,
        17322
      ],
      "op": "OR",
      "path": "2"
    },
    "4863": {
      "fn": "Governance.completeTask",
      "offset": [
        17287,
        17322
      ],
      "op": "PUSH3",
      "path": "2",
      "value": "0xFFFFFF"
    },
    "4867": {
      "fn": "Governance.completeTask",
      "offset": [
        17287,
        17322
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4868": {
      "fn": "Governance.completeTask",
      "offset": [
        17287,
        17322
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "4869": {
      "fn": "Governance.completeTask",
      "offset": [
        17287,
        17322
      ],
      "op": "AND",
      "path": "2"
    },
    "4870": {
      "fn": "Governance.completeTask",
      "offset": [
        17287,
        17322
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4871": {
      "fn": "Governance.completeTask",
      "offset": [
        17287,
        17322
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "4872": {
      "fn": "Governance.completeTask",
      "offset": [
        17287,
        17322
      ],
      "op": "MUL",
      "path": "2"
    },
    "4873": {
      "fn": "Governance.completeTask",
      "offset": [
        17287,
        17322
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4874": {
      "fn": "Governance.completeTask",
      "offset": [
        17287,
        17322
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4875": {
      "fn": "Governance.completeTask",
      "offset": [
        17287,
        17322
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4876": {
      "fn": "Governance.completeTask",
      "offset": [
        17287,
        17322
      ],
      "op": "OR",
      "path": "2"
    },
    "4877": {
      "op": "PUSH5",
      "value": "0x100000000"
    },
    "4883": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4885": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4887": {
      "op": "SHL"
    },
    "4888": {
      "op": "SUB"
    },
    "4889": {
      "op": "NOT"
    },
    "4890": {
      "fn": "Governance.completeTask",
      "offset": [
        17287,
        17322
      ],
      "op": "AND",
      "path": "2"
    },
    "4891": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4893": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4895": {
      "op": "SHL"
    },
    "4896": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4898": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4900": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "4902": {
      "op": "SHL"
    },
    "4903": {
      "op": "SUB"
    },
    "4904": {
      "fn": "Governance.completeTask",
      "offset": [
        17287,
        17322
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4905": {
      "fn": "Governance.completeTask",
      "offset": [
        17287,
        17322
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "4906": {
      "fn": "Governance.completeTask",
      "offset": [
        17287,
        17322
      ],
      "op": "AND",
      "path": "2"
    },
    "4907": {
      "fn": "Governance.completeTask",
      "offset": [
        17287,
        17322
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4908": {
      "fn": "Governance.completeTask",
      "offset": [
        17287,
        17322
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4909": {
      "fn": "Governance.completeTask",
      "offset": [
        17287,
        17322
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4910": {
      "fn": "Governance.completeTask",
      "offset": [
        17287,
        17322
      ],
      "op": "MUL",
      "path": "2"
    },
    "4911": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "4914": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "4916": {
      "op": "SHL"
    },
    "4917": {
      "op": "NOT"
    },
    "4918": {
      "fn": "Governance.completeTask",
      "offset": [
        17287,
        17322
      ],
      "op": "AND",
      "path": "2"
    },
    "4919": {
      "fn": "Governance.completeTask",
      "offset": [
        17287,
        17322
      ],
      "op": "OR",
      "path": "2"
    },
    "4920": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4922": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "4924": {
      "op": "SHL"
    },
    "4925": {
      "fn": "Governance.completeTask",
      "offset": [
        17287,
        17322
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "4928": {
      "fn": "Governance.completeTask",
      "offset": [
        17287,
        17322
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "4929": {
      "fn": "Governance.completeTask",
      "offset": [
        17287,
        17322
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4930": {
      "fn": "Governance.completeTask",
      "offset": [
        17287,
        17322
      ],
      "op": "AND",
      "path": "2"
    },
    "4931": {
      "fn": "Governance.completeTask",
      "offset": [
        17287,
        17322
      ],
      "op": "MUL",
      "path": "2"
    },
    "4932": {
      "fn": "Governance.completeTask",
      "offset": [
        17287,
        17322
      ],
      "op": "OR",
      "path": "2"
    },
    "4933": {
      "op": "PUSH7",
      "value": "0xFFFFFFFFFFFFFF"
    },
    "4941": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4943": {
      "op": "SHL"
    },
    "4944": {
      "op": "NOT"
    },
    "4945": {
      "fn": "Governance.completeTask",
      "offset": [
        17287,
        17322
      ],
      "op": "AND",
      "path": "2"
    },
    "4946": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4948": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4950": {
      "op": "SHL"
    },
    "4951": {
      "fn": "Governance.completeTask",
      "offset": [
        17287,
        17322
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4952": {
      "fn": "Governance.completeTask",
      "offset": [
        17287,
        17322
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4953": {
      "fn": "Governance.completeTask",
      "offset": [
        17287,
        17322
      ],
      "op": "SWAP7",
      "path": "2"
    },
    "4954": {
      "fn": "Governance.completeTask",
      "offset": [
        17287,
        17322
      ],
      "op": "AND",
      "path": "2"
    },
    "4955": {
      "fn": "Governance.completeTask",
      "offset": [
        17287,
        17322
      ],
      "op": "MUL",
      "path": "2"
    },
    "4956": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "4962": {
      "op": "PUSH1",
      "value": "0x90"
    },
    "4964": {
      "op": "SHL"
    },
    "4965": {
      "op": "NOT"
    },
    "4966": {
      "fn": "Governance.completeTask",
      "offset": [
        17287,
        17322
      ],
      "op": "AND",
      "path": "2"
    },
    "4967": {
      "fn": "Governance.completeTask",
      "offset": [
        17287,
        17322
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "4968": {
      "fn": "Governance.completeTask",
      "offset": [
        17287,
        17322
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4969": {
      "fn": "Governance.completeTask",
      "offset": [
        17287,
        17322
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "4970": {
      "fn": "Governance.completeTask",
      "offset": [
        17287,
        17322
      ],
      "op": "OR",
      "path": "2"
    },
    "4971": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4973": {
      "op": "PUSH1",
      "value": "0x90"
    },
    "4975": {
      "op": "SHL"
    },
    "4976": {
      "fn": "Governance.completeTask",
      "offset": [
        17287,
        17322
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "4977": {
      "fn": "Governance.completeTask",
      "offset": [
        17287,
        17322
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4978": {
      "fn": "Governance.completeTask",
      "offset": [
        17287,
        17322
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "4979": {
      "fn": "Governance.completeTask",
      "offset": [
        17287,
        17322
      ],
      "op": "AND",
      "path": "2"
    },
    "4980": {
      "fn": "Governance.completeTask",
      "offset": [
        17287,
        17322
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "4981": {
      "fn": "Governance.completeTask",
      "offset": [
        17287,
        17322
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4982": {
      "fn": "Governance.completeTask",
      "offset": [
        17287,
        17322
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "4983": {
      "fn": "Governance.completeTask",
      "offset": [
        17287,
        17322
      ],
      "op": "MUL",
      "path": "2"
    },
    "4984": {
      "fn": "Governance.completeTask",
      "offset": [
        17287,
        17322
      ],
      "op": "OR",
      "path": "2"
    },
    "4985": {
      "fn": "Governance.completeTask",
      "offset": [
        17287,
        17322
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4986": {
      "fn": "Governance.completeTask",
      "offset": [
        17287,
        17322
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4987": {
      "fn": "Governance.completeTask",
      "offset": [
        17287,
        17322
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "4988": {
      "fn": "Governance.completeTask",
      "offset": [
        17340,
        17359
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 32,
      "value": "0xB"
    },
    "4990": {
      "fn": "Governance.completeTask",
      "offset": [
        17340,
        17362
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4991": {
      "fn": "Governance.completeTask",
      "offset": [
        17340,
        17362
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4992": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4994": {
      "op": "SWAP1"
    },
    "4995": {
      "fn": "Governance.completeTask",
      "offset": [
        17340,
        17362
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x138D"
    },
    "4998": {
      "fn": "Governance.completeTask",
      "offset": [
        17340,
        17362
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4999": {
      "fn": "Governance.completeTask",
      "offset": [
        17287,
        17322
      ],
      "op": "DUP5",
      "path": "2"
    },
    "5000": {
      "fn": "Governance.completeTask",
      "offset": [
        17287,
        17322
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5001": {
      "fn": "Governance.completeTask",
      "offset": [
        17340,
        17362
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x408D"
    },
    "5004": {
      "fn": "Governance.completeTask",
      "jump": "i",
      "offset": [
        17340,
        17362
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5005": {
      "fn": "Governance.completeTask",
      "offset": [
        17340,
        17362
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5006": {
      "fn": "Governance.completeTask",
      "offset": [
        17340,
        17362
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5007": {
      "fn": "Governance.completeTask",
      "offset": [
        17340,
        17362
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5008": {
      "fn": "Governance.completeTask",
      "offset": [
        17340,
        17362
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "5009": {
      "op": "POP"
    },
    "5010": {
      "fn": "Governance.completeTask",
      "offset": [
        17464,
        17488
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 33,
      "value": "0x13A0"
    },
    "5013": {
      "fn": "Governance.completeTask",
      "offset": [
        17464,
        17488
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5014": {
      "op": "POP"
    },
    "5015": {
      "fn": "Governance.completeTask",
      "offset": [
        17464,
        17479
      ],
      "op": "TIMESTAMP",
      "path": "2"
    },
    "5016": {
      "fn": "Governance.completeTask",
      "offset": [
        17482,
        17488
      ],
      "op": "PUSH3",
      "path": "2",
      "value": "0x15180"
    },
    "5020": {
      "fn": "Governance.completeTask",
      "offset": [
        17464,
        17488
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x408D"
    },
    "5023": {
      "fn": "Governance.completeTask",
      "jump": "i",
      "offset": [
        17464,
        17488
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5024": {
      "fn": "Governance.completeTask",
      "offset": [
        17464,
        17488
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5025": {
      "fn": "Governance.completeTask",
      "offset": [
        17417,
        17426
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "5027": {
      "fn": "Governance.completeTask",
      "offset": [
        17427,
        17428
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5028": {
      "fn": "Governance.completeTask",
      "offset": [
        17417,
        17429
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5029": {
      "fn": "Governance.completeTask",
      "offset": [
        17417,
        17429
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5030": {
      "fn": "Governance.completeTask",
      "offset": [
        17417,
        17429
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5031": {
      "fn": "Governance.completeTask",
      "offset": [
        17417,
        17429
      ],
      "op": "LT",
      "path": "2"
    },
    "5032": {
      "fn": "Governance.completeTask",
      "offset": [
        17417,
        17429
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x13B3"
    },
    "5035": {
      "fn": "Governance.completeTask",
      "offset": [
        17417,
        17429
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5036": {
      "fn": "Governance.completeTask",
      "offset": [
        17417,
        17429
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x13B3"
    },
    "5039": {
      "fn": "Governance.completeTask",
      "offset": [
        17417,
        17429
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3DDE"
    },
    "5042": {
      "fn": "Governance.completeTask",
      "jump": "i",
      "offset": [
        17417,
        17429
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5043": {
      "fn": "Governance.completeTask",
      "offset": [
        17417,
        17429
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5044": {
      "fn": "Governance.completeTask",
      "offset": [
        17417,
        17429
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5046": {
      "fn": "Governance.completeTask",
      "offset": [
        17417,
        17429
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5047": {
      "fn": "Governance.completeTask",
      "offset": [
        17417,
        17429
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5048": {
      "fn": "Governance.completeTask",
      "offset": [
        17417,
        17429
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5049": {
      "fn": "Governance.completeTask",
      "offset": [
        17417,
        17429
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5051": {
      "fn": "Governance.completeTask",
      "offset": [
        17417,
        17429
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5052": {
      "fn": "Governance.completeTask",
      "offset": [
        17417,
        17429
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5053": {
      "fn": "Governance.completeTask",
      "offset": [
        17417,
        17429
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "5054": {
      "fn": "Governance.completeTask",
      "offset": [
        17417,
        17461
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "5060": {
      "fn": "Governance.completeTask",
      "offset": [
        17417,
        17461
      ],
      "op": "DUP9",
      "path": "2"
    },
    "5061": {
      "fn": "Governance.completeTask",
      "offset": [
        17417,
        17461
      ],
      "op": "AND",
      "path": "2"
    },
    "5062": {
      "fn": "Governance.completeTask",
      "offset": [
        17417,
        17461
      ],
      "op": "DUP5",
      "path": "2"
    },
    "5063": {
      "fn": "Governance.completeTask",
      "offset": [
        17417,
        17461
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5064": {
      "fn": "Governance.completeTask",
      "offset": [
        17417,
        17429
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "5066": {
      "fn": "Governance.completeTask",
      "offset": [
        17417,
        17429
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5067": {
      "fn": "Governance.completeTask",
      "offset": [
        17417,
        17429
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "5068": {
      "fn": "Governance.completeTask",
      "offset": [
        17417,
        17429
      ],
      "op": "MUL",
      "path": "2"
    },
    "5069": {
      "fn": "Governance.completeTask",
      "offset": [
        17417,
        17429
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5070": {
      "fn": "Governance.completeTask",
      "offset": [
        17417,
        17429
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5071": {
      "fn": "Governance.completeTask",
      "offset": [
        17417,
        17429
      ],
      "op": "ADD",
      "path": "2"
    },
    "5072": {
      "fn": "Governance.completeTask",
      "offset": [
        17417,
        17461
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5073": {
      "fn": "Governance.completeTask",
      "offset": [
        17417,
        17461
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5074": {
      "fn": "Governance.completeTask",
      "offset": [
        17417,
        17461
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5076": {
      "fn": "Governance.completeTask",
      "offset": [
        17417,
        17461
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5077": {
      "fn": "Governance.completeTask",
      "offset": [
        17417,
        17461
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "5078": {
      "fn": "Governance.completeTask",
      "offset": [
        17417,
        17488
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "5079": {
      "fn": "Governance.completeTask",
      "offset": [
        17536,
        17545
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 34,
      "value": "0x5"
    },
    "5081": {
      "fn": "Governance.completeTask",
      "offset": [
        17536,
        17548
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5082": {
      "fn": "Governance.completeTask",
      "offset": [
        17536,
        17548
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5083": {
      "fn": "Governance.completeTask",
      "offset": [
        17566,
        17567
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "5085": {
      "fn": "Governance.completeTask",
      "offset": [
        17566,
        17567
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5086": {
      "fn": "Governance.completeTask",
      "offset": [
        17536,
        17545
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5087": {
      "fn": "Governance.completeTask",
      "offset": [
        17546,
        17547
      ],
      "op": "DUP5",
      "path": "2"
    },
    "5088": {
      "fn": "Governance.completeTask",
      "offset": [
        17546,
        17547
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5089": {
      "fn": "Governance.completeTask",
      "offset": [
        17536,
        17548
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5090": {
      "fn": "Governance.completeTask",
      "offset": [
        17536,
        17548
      ],
      "op": "LT",
      "path": "2"
    },
    "5091": {
      "fn": "Governance.completeTask",
      "offset": [
        17536,
        17548
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x13EE"
    },
    "5094": {
      "fn": "Governance.completeTask",
      "offset": [
        17536,
        17548
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5095": {
      "fn": "Governance.completeTask",
      "offset": [
        17536,
        17548
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x13EE"
    },
    "5098": {
      "fn": "Governance.completeTask",
      "offset": [
        17536,
        17548
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3DDE"
    },
    "5101": {
      "fn": "Governance.completeTask",
      "jump": "i",
      "offset": [
        17536,
        17548
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5102": {
      "fn": "Governance.completeTask",
      "offset": [
        17536,
        17548
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5103": {
      "fn": "Governance.completeTask",
      "offset": [
        17536,
        17548
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5104": {
      "fn": "Governance.completeTask",
      "offset": [
        17536,
        17548
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5106": {
      "fn": "Governance.completeTask",
      "offset": [
        17536,
        17548
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5107": {
      "fn": "Governance.completeTask",
      "offset": [
        17536,
        17548
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5109": {
      "fn": "Governance.completeTask",
      "offset": [
        17536,
        17548
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5111": {
      "fn": "Governance.completeTask",
      "offset": [
        17536,
        17548
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "5112": {
      "fn": "Governance.completeTask",
      "offset": [
        17536,
        17548
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5113": {
      "fn": "Governance.completeTask",
      "offset": [
        17536,
        17548
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "5115": {
      "fn": "Governance.completeTask",
      "offset": [
        17536,
        17548
      ],
      "op": "MUL",
      "path": "2"
    },
    "5116": {
      "fn": "Governance.completeTask",
      "offset": [
        17536,
        17548
      ],
      "op": "ADD",
      "path": "2"
    },
    "5117": {
      "fn": "Governance.completeTask",
      "offset": [
        17536,
        17563
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "5119": {
      "fn": "Governance.completeTask",
      "offset": [
        17536,
        17563
      ],
      "op": "ADD",
      "path": "2"
    },
    "5120": {
      "fn": "Governance.completeTask",
      "offset": [
        17536,
        17563
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x14"
    },
    "5122": {
      "fn": "Governance.completeTask",
      "offset": [
        17536,
        17563
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5123": {
      "fn": "Governance.completeTask",
      "offset": [
        17536,
        17563
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5124": {
      "fn": "Governance.completeTask",
      "offset": [
        17536,
        17563
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5125": {
      "fn": "Governance.completeTask",
      "offset": [
        17536,
        17563
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "5128": {
      "fn": "Governance.completeTask",
      "offset": [
        17536,
        17563
      ],
      "op": "EXP",
      "path": "2"
    },
    "5129": {
      "fn": "Governance.completeTask",
      "offset": [
        17536,
        17563
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5130": {
      "fn": "Governance.completeTask",
      "offset": [
        17536,
        17563
      ],
      "op": "DIV",
      "path": "2"
    },
    "5131": {
      "fn": "Governance.completeTask",
      "offset": [
        17536,
        17563
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "5134": {
      "fn": "Governance.completeTask",
      "offset": [
        17536,
        17563
      ],
      "op": "AND",
      "path": "2"
    },
    "5135": {
      "fn": "Governance.completeTask",
      "offset": [
        17536,
        17567
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1418"
    },
    "5138": {
      "fn": "Governance.completeTask",
      "offset": [
        17536,
        17567
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5139": {
      "fn": "Governance.completeTask",
      "offset": [
        17536,
        17567
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5140": {
      "fn": "Governance.completeTask",
      "offset": [
        17536,
        17567
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x40A5"
    },
    "5143": {
      "fn": "Governance.completeTask",
      "jump": "i",
      "offset": [
        17536,
        17567
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5144": {
      "fn": "Governance.completeTask",
      "offset": [
        17536,
        17567
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5145": {
      "fn": "Governance.completeTask",
      "offset": [
        17506,
        17515
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "5147": {
      "fn": "Governance.completeTask",
      "offset": [
        17516,
        17517
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5148": {
      "fn": "Governance.completeTask",
      "offset": [
        17506,
        17518
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5149": {
      "fn": "Governance.completeTask",
      "offset": [
        17506,
        17518
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5150": {
      "fn": "Governance.completeTask",
      "offset": [
        17506,
        17518
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5151": {
      "fn": "Governance.completeTask",
      "offset": [
        17506,
        17518
      ],
      "op": "LT",
      "path": "2"
    },
    "5152": {
      "fn": "Governance.completeTask",
      "offset": [
        17506,
        17518
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x142B"
    },
    "5155": {
      "fn": "Governance.completeTask",
      "offset": [
        17506,
        17518
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5156": {
      "fn": "Governance.completeTask",
      "offset": [
        17506,
        17518
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x142B"
    },
    "5159": {
      "fn": "Governance.completeTask",
      "offset": [
        17506,
        17518
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3DDE"
    },
    "5162": {
      "fn": "Governance.completeTask",
      "jump": "i",
      "offset": [
        17506,
        17518
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5163": {
      "fn": "Governance.completeTask",
      "offset": [
        17506,
        17518
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5164": {
      "fn": "Governance.completeTask",
      "offset": [
        17506,
        17518
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5165": {
      "fn": "Governance.completeTask",
      "offset": [
        17506,
        17518
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5167": {
      "fn": "Governance.completeTask",
      "offset": [
        17506,
        17518
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5168": {
      "fn": "Governance.completeTask",
      "offset": [
        17506,
        17518
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5170": {
      "fn": "Governance.completeTask",
      "offset": [
        17506,
        17518
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5172": {
      "fn": "Governance.completeTask",
      "offset": [
        17506,
        17518
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "5173": {
      "fn": "Governance.completeTask",
      "offset": [
        17506,
        17518
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5174": {
      "fn": "Governance.completeTask",
      "offset": [
        17506,
        17518
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "5176": {
      "fn": "Governance.completeTask",
      "offset": [
        17506,
        17518
      ],
      "op": "MUL",
      "path": "2"
    },
    "5177": {
      "fn": "Governance.completeTask",
      "offset": [
        17506,
        17518
      ],
      "op": "ADD",
      "path": "2"
    },
    "5178": {
      "fn": "Governance.completeTask",
      "offset": [
        17506,
        17533
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "5180": {
      "fn": "Governance.completeTask",
      "offset": [
        17506,
        17533
      ],
      "op": "ADD",
      "path": "2"
    },
    "5181": {
      "fn": "Governance.completeTask",
      "offset": [
        17506,
        17533
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x14"
    },
    "5183": {
      "fn": "Governance.completeTask",
      "offset": [
        17506,
        17567
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "5186": {
      "fn": "Governance.completeTask",
      "offset": [
        17506,
        17567
      ],
      "op": "EXP",
      "path": "2"
    },
    "5187": {
      "fn": "Governance.completeTask",
      "offset": [
        17506,
        17567
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5188": {
      "fn": "Governance.completeTask",
      "offset": [
        17506,
        17567
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5189": {
      "fn": "Governance.completeTask",
      "offset": [
        17506,
        17567
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5190": {
      "fn": "Governance.completeTask",
      "offset": [
        17506,
        17567
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "5193": {
      "fn": "Governance.completeTask",
      "offset": [
        17506,
        17567
      ],
      "op": "MUL",
      "path": "2"
    },
    "5194": {
      "fn": "Governance.completeTask",
      "offset": [
        17506,
        17567
      ],
      "op": "NOT",
      "path": "2"
    },
    "5195": {
      "fn": "Governance.completeTask",
      "offset": [
        17506,
        17567
      ],
      "op": "AND",
      "path": "2"
    },
    "5196": {
      "fn": "Governance.completeTask",
      "offset": [
        17506,
        17567
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5197": {
      "fn": "Governance.completeTask",
      "offset": [
        17506,
        17567
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5198": {
      "fn": "Governance.completeTask",
      "offset": [
        17506,
        17567
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "5201": {
      "fn": "Governance.completeTask",
      "offset": [
        17506,
        17567
      ],
      "op": "AND",
      "path": "2"
    },
    "5202": {
      "fn": "Governance.completeTask",
      "offset": [
        17506,
        17567
      ],
      "op": "MUL",
      "path": "2"
    },
    "5203": {
      "fn": "Governance.completeTask",
      "offset": [
        17506,
        17567
      ],
      "op": "OR",
      "path": "2"
    },
    "5204": {
      "fn": "Governance.completeTask",
      "offset": [
        17506,
        17567
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5205": {
      "fn": "Governance.completeTask",
      "offset": [
        17506,
        17567
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "5206": {
      "fn": "Governance.completeTask",
      "offset": [
        17506,
        17567
      ],
      "op": "POP",
      "path": "2"
    },
    "5207": {
      "fn": "Governance.completeTask",
      "offset": [
        17591,
        17663
      ],
      "op": "PUSH32",
      "path": "2",
      "statement": 35,
      "value": "0xBCC1EA15519F3ACFB49E91DE851E553B2C024B9AB85CEE8FFD8FE4E4E0A7876D"
    },
    "5240": {
      "fn": "Governance.completeTask",
      "offset": [
        17605,
        17611
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5241": {
      "fn": "Governance.completeTask",
      "offset": [
        17633,
        17634
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "5243": {
      "fn": "Governance.completeTask",
      "offset": [
        17612,
        17631
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xB"
    },
    "5245": {
      "fn": "Governance.completeTask",
      "offset": [
        17612,
        17631
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5246": {
      "fn": "Governance.completeTask",
      "offset": [
        17612,
        17634
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1487"
    },
    "5249": {
      "fn": "Governance.completeTask",
      "offset": [
        17612,
        17634
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5250": {
      "fn": "Governance.completeTask",
      "offset": [
        17612,
        17634
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5251": {
      "fn": "Governance.completeTask",
      "offset": [
        17612,
        17634
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x40C8"
    },
    "5254": {
      "fn": "Governance.completeTask",
      "jump": "i",
      "offset": [
        17612,
        17634
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5255": {
      "fn": "Governance.completeTask",
      "offset": [
        17612,
        17634
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5256": {
      "fn": "Governance.completeTask",
      "offset": [
        17636,
        17645
      ],
      "op": "DUP8",
      "path": "2"
    },
    "5257": {
      "fn": "Governance.completeTask",
      "offset": [
        17647,
        17662
      ],
      "op": "TIMESTAMP",
      "path": "2"
    },
    "5258": {
      "fn": "Governance.completeTask",
      "offset": [
        17591,
        17663
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5260": {
      "fn": "Governance.completeTask",
      "offset": [
        17591,
        17663
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5261": {
      "fn": "Governance.completeTask",
      "offset": [
        17591,
        17663
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1499"
    },
    "5264": {
      "fn": "Governance.completeTask",
      "offset": [
        17591,
        17663
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "5265": {
      "fn": "Governance.completeTask",
      "offset": [
        17591,
        17663
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "5266": {
      "fn": "Governance.completeTask",
      "offset": [
        17591,
        17663
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "5267": {
      "fn": "Governance.completeTask",
      "offset": [
        17591,
        17663
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5268": {
      "fn": "Governance.completeTask",
      "offset": [
        17591,
        17663
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5269": {
      "fn": "Governance.completeTask",
      "offset": [
        17591,
        17663
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x40DF"
    },
    "5272": {
      "fn": "Governance.completeTask",
      "jump": "i",
      "offset": [
        17591,
        17663
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5273": {
      "fn": "Governance.completeTask",
      "offset": [
        17591,
        17663
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5274": {
      "fn": "Governance.completeTask",
      "offset": [
        17591,
        17663
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5276": {
      "fn": "Governance.completeTask",
      "offset": [
        17591,
        17663
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5277": {
      "fn": "Governance.completeTask",
      "offset": [
        17591,
        17663
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5278": {
      "fn": "Governance.completeTask",
      "offset": [
        17591,
        17663
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5279": {
      "fn": "Governance.completeTask",
      "offset": [
        17591,
        17663
      ],
      "op": "SUB",
      "path": "2"
    },
    "5280": {
      "fn": "Governance.completeTask",
      "offset": [
        17591,
        17663
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5281": {
      "fn": "Governance.completeTask",
      "offset": [
        17591,
        17663
      ],
      "op": "LOG1",
      "path": "2"
    },
    "5282": {
      "fn": "Governance.completeTask",
      "offset": [
        17681,
        17686
      ],
      "op": "POP",
      "path": "2",
      "statement": 36
    },
    "5283": {
      "fn": "Governance.completeTask",
      "offset": [
        17681,
        17686
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x14AF"
    },
    "5286": {
      "fn": "Governance.completeTask",
      "offset": [
        17681,
        17686
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5287": {
      "fn": "Governance.completeTask",
      "offset": [
        16712,
        17701
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5288": {
      "fn": "Governance.completeTask",
      "offset": [
        17724,
        17727
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 37,
      "value": "0x1"
    },
    "5290": {
      "fn": "Governance.completeTask",
      "offset": [
        17724,
        17727
      ],
      "op": "ADD",
      "path": "2"
    },
    "5291": {
      "fn": "Governance.completeTask",
      "offset": [
        16659,
        17739
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1042"
    },
    "5294": {
      "fn": "Governance.completeTask",
      "offset": [
        16659,
        17739
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5295": {
      "fn": "Governance.completeTask",
      "offset": [
        16659,
        17739
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5296": {
      "fn": "Governance.completeTask",
      "offset": [
        16659,
        17739
      ],
      "op": "POP",
      "path": "2"
    },
    "5297": {
      "fn": "Governance.completeTask",
      "offset": [
        16479,
        17765
      ],
      "op": "POP",
      "path": "2"
    },
    "5298": {
      "fn": "Governance.completeTask",
      "offset": [
        16479,
        17765
      ],
      "op": "POP",
      "path": "2"
    },
    "5299": {
      "fn": "Governance.completeTask",
      "offset": [
        16479,
        17765
      ],
      "op": "POP",
      "path": "2"
    },
    "5300": {
      "fn": "Governance.completeTask",
      "jump": "o",
      "offset": [
        16479,
        17765
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5301": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5616,
        6585
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5302": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5683,
        5690
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5304": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5724,
        5738
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 38,
      "value": "0x9"
    },
    "5306": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5724,
        5738
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5307": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5711,
        5721
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5308": {
      "branch": 141,
      "fn": "Governance.getWinningVote",
      "offset": [
        5711,
        5738
      ],
      "op": "LT",
      "path": "2"
    },
    "5309": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5703,
        5759
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x14FB"
    },
    "5312": {
      "branch": 141,
      "fn": "Governance.getWinningVote",
      "offset": [
        5703,
        5759
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5313": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5703,
        5759
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5315": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5703,
        5759
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5316": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5320": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5322": {
      "op": "SHL"
    },
    "5323": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5703,
        5759
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5324": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5703,
        5759
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5325": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5327": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5703,
        5759
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "5329": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5703,
        5759
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5330": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5703,
        5759
      ],
      "op": "ADD",
      "path": "2"
    },
    "5331": {
      "op": "MSTORE"
    },
    "5332": {
      "op": "PUSH1",
      "value": "0x10"
    },
    "5334": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5336": {
      "op": "DUP3"
    },
    "5337": {
      "op": "ADD"
    },
    "5338": {
      "op": "MSTORE"
    },
    "5339": {
      "op": "PUSH16",
      "value": "0x1B9BC81CDD58DA081C1C9BDC1BDCD85B"
    },
    "5356": {
      "op": "PUSH1",
      "value": "0x82"
    },
    "5358": {
      "op": "SHL"
    },
    "5359": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5361": {
      "op": "DUP3"
    },
    "5362": {
      "op": "ADD"
    },
    "5363": {
      "op": "MSTORE"
    },
    "5364": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5366": {
      "op": "ADD"
    },
    "5367": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5703,
        5759
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF9A"
    },
    "5370": {
      "op": "JUMP"
    },
    "5371": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5703,
        5759
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5372": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5796,
        5817
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 39,
      "value": "0x0"
    },
    "5374": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5796,
        5817
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5375": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5796,
        5817
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5376": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5796,
        5817
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5377": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5796,
        5805
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x8"
    },
    "5379": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5796,
        5817
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5381": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5796,
        5817
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5382": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5796,
        5817
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5384": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5796,
        5817
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5385": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5796,
        5817
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "5386": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5796,
        5830
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "5388": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5796,
        5830
      ],
      "op": "ADD",
      "path": "2"
    },
    "5389": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5796,
        5830
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5390": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5392": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "5394": {
      "op": "SHL"
    },
    "5395": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5796,
        5830
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5396": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5796,
        5830
      ],
      "op": "DIV",
      "path": "2"
    },
    "5397": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5796,
        5830
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "5403": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5796,
        5830
      ],
      "op": "AND",
      "path": "2"
    },
    "5404": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5778,
        5793
      ],
      "op": "TIMESTAMP",
      "path": "2"
    },
    "5405": {
      "branch": 142,
      "fn": "Governance.getWinningVote",
      "offset": [
        5778,
        5830
      ],
      "op": "GT",
      "path": "2"
    },
    "5406": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5769,
        5854
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x155F"
    },
    "5409": {
      "branch": 142,
      "fn": "Governance.getWinningVote",
      "offset": [
        5769,
        5854
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5410": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5769,
        5854
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5412": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5769,
        5854
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5413": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5417": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5419": {
      "op": "SHL"
    },
    "5420": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5769,
        5854
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5421": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5769,
        5854
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5422": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5424": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5769,
        5854
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "5426": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5769,
        5854
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5427": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5769,
        5854
      ],
      "op": "ADD",
      "path": "2"
    },
    "5428": {
      "op": "MSTORE"
    },
    "5429": {
      "op": "PUSH1",
      "value": "0x13"
    },
    "5431": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5433": {
      "op": "DUP3"
    },
    "5434": {
      "op": "ADD"
    },
    "5435": {
      "op": "MSTORE"
    },
    "5436": {
      "op": "PUSH19",
      "value": "0x766F74696E67207374696C6C20616374697665"
    },
    "5456": {
      "op": "PUSH1",
      "value": "0x68"
    },
    "5458": {
      "op": "SHL"
    },
    "5459": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5461": {
      "op": "DUP3"
    },
    "5462": {
      "op": "ADD"
    },
    "5463": {
      "op": "MSTORE"
    },
    "5464": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5466": {
      "op": "ADD"
    },
    "5467": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5769,
        5854
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF9A"
    },
    "5470": {
      "op": "JUMP"
    },
    "5471": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5769,
        5854
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5472": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5974,
        5993
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5474": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6003,
        6028
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5475": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6038,
        6049
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5477": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6065,
        6074
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5478": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6061,
        6506
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5479": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6081,
        6102
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5481": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6081,
        6102
      ],
      "op": "DUP7",
      "path": "2"
    },
    "5482": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6081,
        6102
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5483": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6081,
        6102
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5484": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6081,
        6090
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x8"
    },
    "5486": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6081,
        6102
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5488": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6081,
        6102
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5489": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6081,
        6102
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5491": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6081,
        6102
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5492": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6081,
        6102
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "5493": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6081,
        6118
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "5495": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6081,
        6118
      ],
      "op": "ADD",
      "path": "2"
    },
    "5496": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6081,
        6118
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5497": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6081,
        6118
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "5500": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6081,
        6118
      ],
      "op": "AND",
      "path": "2"
    },
    "5501": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6078,
        6118
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5502": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6078,
        6118
      ],
      "op": "LT",
      "path": "2"
    },
    "5503": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6061,
        6506
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "5504": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6061,
        6506
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x168D"
    },
    "5507": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6061,
        6506
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5508": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6210,
        6227
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5509": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6177,
        6186
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x8"
    },
    "5511": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6177,
        6198
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5513": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6187,
        6197
      ],
      "op": "DUP9",
      "path": "2"
    },
    "5514": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6177,
        6198
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5515": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6177,
        6198
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5516": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6177,
        6198
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5518": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6177,
        6198
      ],
      "op": "ADD",
      "path": "2"
    },
    "5519": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6177,
        6198
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5520": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6177,
        6198
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5521": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6177,
        6198
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5522": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6177,
        6198
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5524": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6177,
        6198
      ],
      "op": "ADD",
      "path": "2"
    },
    "5525": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6177,
        6198
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5527": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6177,
        6198
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "5528": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6177,
        6204
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "5530": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6177,
        6204
      ],
      "op": "ADD",
      "path": "2"
    },
    "5531": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6205,
        6206
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5532": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6177,
        6207
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x8"
    },
    "5534": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6177,
        6207
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5535": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6177,
        6207
      ],
      "op": "LT",
      "path": "2"
    },
    "5536": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6177,
        6207
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x15AB"
    },
    "5539": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6177,
        6207
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5540": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6177,
        6207
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x15AB"
    },
    "5543": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6177,
        6207
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3DDE"
    },
    "5546": {
      "fn": "Governance.getWinningVote",
      "jump": "i",
      "offset": [
        6177,
        6207
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5547": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6177,
        6207
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5548": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6177,
        6207
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x10"
    },
    "5550": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6177,
        6207
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5551": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6177,
        6207
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5552": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6177,
        6207
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5553": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6177,
        6207
      ],
      "op": "DIV",
      "path": "2"
    },
    "5554": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6177,
        6207
      ],
      "op": "ADD",
      "path": "2"
    },
    "5555": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6177,
        6207
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5556": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6177,
        6207
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5557": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6177,
        6207
      ],
      "op": "MOD",
      "path": "2"
    },
    "5558": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6177,
        6207
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "5560": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6177,
        6207
      ],
      "op": "MUL",
      "path": "2"
    },
    "5561": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6177,
        6207
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5562": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6177,
        6207
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5563": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6177,
        6207
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5564": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6177,
        6207
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "5567": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6177,
        6207
      ],
      "op": "EXP",
      "path": "2"
    },
    "5568": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6177,
        6207
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5569": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6177,
        6207
      ],
      "op": "DIV",
      "path": "2"
    },
    "5570": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6177,
        6207
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "5573": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6177,
        6207
      ],
      "op": "AND",
      "path": "2"
    },
    "5574": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6177,
        6227
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "5577": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6177,
        6227
      ],
      "op": "AND",
      "path": "2"
    },
    "5578": {
      "branch": 143,
      "fn": "Governance.getWinningVote",
      "offset": [
        6177,
        6227
      ],
      "op": "GT",
      "path": "2"
    },
    "5579": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6174,
        6496
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "5580": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6174,
        6496
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x162B"
    },
    "5583": {
      "branch": 143,
      "fn": "Governance.getWinningVote",
      "offset": [
        6174,
        6496
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5584": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6267,
        6276
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 40,
      "value": "0x8"
    },
    "5586": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6267,
        6288
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5588": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6277,
        6287
      ],
      "op": "DUP8",
      "path": "2"
    },
    "5589": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6267,
        6288
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5590": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6267,
        6288
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5591": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6267,
        6288
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5593": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6267,
        6288
      ],
      "op": "ADD",
      "path": "2"
    },
    "5594": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6267,
        6288
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5595": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6267,
        6288
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5596": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6267,
        6288
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5597": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6267,
        6288
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5599": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6267,
        6288
      ],
      "op": "ADD",
      "path": "2"
    },
    "5600": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6267,
        6288
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5602": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6267,
        6288
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "5603": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6267,
        6294
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "5605": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6267,
        6294
      ],
      "op": "ADD",
      "path": "2"
    },
    "5606": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6295,
        6296
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5607": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6267,
        6297
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x8"
    },
    "5609": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6267,
        6297
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5610": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6267,
        6297
      ],
      "op": "LT",
      "path": "2"
    },
    "5611": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6267,
        6297
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x15F6"
    },
    "5614": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6267,
        6297
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5615": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6267,
        6297
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x15F6"
    },
    "5618": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6267,
        6297
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3DDE"
    },
    "5621": {
      "fn": "Governance.getWinningVote",
      "jump": "i",
      "offset": [
        6267,
        6297
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5622": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6267,
        6297
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5623": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6267,
        6297
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x10"
    },
    "5625": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6267,
        6297
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5626": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6267,
        6297
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5627": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6267,
        6297
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5628": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6267,
        6297
      ],
      "op": "DIV",
      "path": "2"
    },
    "5629": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6267,
        6297
      ],
      "op": "ADD",
      "path": "2"
    },
    "5630": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6267,
        6297
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5631": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6267,
        6297
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5632": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6267,
        6297
      ],
      "op": "MOD",
      "path": "2"
    },
    "5633": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6267,
        6297
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "5635": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6267,
        6297
      ],
      "op": "MUL",
      "path": "2"
    },
    "5636": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6267,
        6297
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5637": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6267,
        6297
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5638": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6267,
        6297
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5639": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6267,
        6297
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "5642": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6267,
        6297
      ],
      "op": "EXP",
      "path": "2"
    },
    "5643": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6267,
        6297
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5644": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6267,
        6297
      ],
      "op": "DIV",
      "path": "2"
    },
    "5645": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6267,
        6297
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "5648": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6267,
        6297
      ],
      "op": "AND",
      "path": "2"
    },
    "5649": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6247,
        6297
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "5652": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6247,
        6297
      ],
      "op": "AND",
      "path": "2"
    },
    "5653": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6247,
        6297
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "5654": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6247,
        6297
      ],
      "op": "POP",
      "path": "2"
    },
    "5655": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6329,
        6330
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 41
    },
    "5656": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6315,
        6330
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "5657": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6315,
        6330
      ],
      "op": "POP",
      "path": "2"
    },
    "5658": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6352,
        6355
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5659": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6357,
        6358
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "5661": {
      "branch": 144,
      "fn": "Governance.getWinningVote",
      "offset": [
        6352,
        6358
      ],
      "op": "SUB",
      "path": "2"
    },
    "5662": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6348,
        6371
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1626"
    },
    "5665": {
      "branch": 144,
      "fn": "Governance.getWinningVote",
      "offset": [
        6348,
        6371
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5666": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6368,
        6369
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 42,
      "value": "0x0"
    },
    "5668": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6362,
        6369
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5669": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6362,
        6369
      ],
      "op": "POP",
      "path": "2"
    },
    "5670": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6348,
        6371
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5671": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6174,
        6496
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x167B"
    },
    "5674": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6174,
        6496
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5675": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6174,
        6496
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5676": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6440,
        6457
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5677": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6406,
        6415
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x8"
    },
    "5679": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6406,
        6427
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5681": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6416,
        6426
      ],
      "op": "DUP9",
      "path": "2"
    },
    "5682": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6406,
        6427
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5683": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6406,
        6427
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5684": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6406,
        6427
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5686": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6406,
        6427
      ],
      "op": "ADD",
      "path": "2"
    },
    "5687": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6406,
        6427
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5688": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6406,
        6427
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5689": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6406,
        6427
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5690": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6406,
        6427
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5692": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6406,
        6427
      ],
      "op": "ADD",
      "path": "2"
    },
    "5693": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6406,
        6427
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5695": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6406,
        6427
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "5696": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6406,
        6433
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "5698": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6406,
        6433
      ],
      "op": "ADD",
      "path": "2"
    },
    "5699": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6434,
        6435
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5700": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6406,
        6436
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x8"
    },
    "5702": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6406,
        6436
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5703": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6406,
        6436
      ],
      "op": "LT",
      "path": "2"
    },
    "5704": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6406,
        6436
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1653"
    },
    "5707": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6406,
        6436
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5708": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6406,
        6436
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1653"
    },
    "5711": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6406,
        6436
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3DDE"
    },
    "5714": {
      "fn": "Governance.getWinningVote",
      "jump": "i",
      "offset": [
        6406,
        6436
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5715": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6406,
        6436
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5716": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6406,
        6436
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x10"
    },
    "5718": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6406,
        6436
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5719": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6406,
        6436
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5720": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6406,
        6436
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5721": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6406,
        6436
      ],
      "op": "DIV",
      "path": "2"
    },
    "5722": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6406,
        6436
      ],
      "op": "ADD",
      "path": "2"
    },
    "5723": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6406,
        6436
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5724": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6406,
        6436
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5725": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6406,
        6436
      ],
      "op": "MOD",
      "path": "2"
    },
    "5726": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6406,
        6436
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "5728": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6406,
        6436
      ],
      "op": "MUL",
      "path": "2"
    },
    "5729": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6406,
        6436
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5730": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6406,
        6436
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5731": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6406,
        6436
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5732": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6406,
        6436
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "5735": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6406,
        6436
      ],
      "op": "EXP",
      "path": "2"
    },
    "5736": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6406,
        6436
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5737": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6406,
        6436
      ],
      "op": "DIV",
      "path": "2"
    },
    "5738": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6406,
        6436
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "5741": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6406,
        6436
      ],
      "op": "AND",
      "path": "2"
    },
    "5742": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6406,
        6457
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "5745": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6406,
        6457
      ],
      "op": "AND",
      "path": "2"
    },
    "5746": {
      "branch": 145,
      "fn": "Governance.getWinningVote",
      "offset": [
        6406,
        6457
      ],
      "op": "SUB",
      "path": "2"
    },
    "5747": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6403,
        6496
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x167B"
    },
    "5750": {
      "branch": 145,
      "fn": "Governance.getWinningVote",
      "offset": [
        6403,
        6496
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5751": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6480,
        6481
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 43,
      "value": "0x1"
    },
    "5753": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6476,
        6481
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5754": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6476,
        6481
      ],
      "op": "POP",
      "path": "2"
    },
    "5755": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6403,
        6496
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5756": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6120,
        6123
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 44
    },
    "5757": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6120,
        6123
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1685"
    },
    "5760": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6120,
        6123
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5761": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6120,
        6123
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4116"
    },
    "5764": {
      "fn": "Governance.getWinningVote",
      "jump": "i",
      "offset": [
        6120,
        6123
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5765": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6120,
        6123
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5766": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6120,
        6123
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5767": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6120,
        6123
      ],
      "op": "POP",
      "path": "2"
    },
    "5768": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6120,
        6123
      ],
      "op": "POP",
      "path": "2"
    },
    "5769": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6061,
        6506
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1566"
    },
    "5772": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6061,
        6506
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5773": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6061,
        6506
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5774": {
      "op": "POP"
    },
    "5775": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6523,
        6529
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 45
    },
    "5776": {
      "branch": 146,
      "fn": "Governance.getWinningVote",
      "offset": [
        6523,
        6529
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "5777": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6515,
        6550
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x16CF"
    },
    "5780": {
      "branch": 146,
      "fn": "Governance.getWinningVote",
      "offset": [
        6515,
        6550
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5781": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6515,
        6550
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5783": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6515,
        6550
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5784": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5788": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5790": {
      "op": "SHL"
    },
    "5791": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6515,
        6550
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5792": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6515,
        6550
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5793": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5795": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6515,
        6550
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "5797": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6515,
        6550
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5798": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6515,
        6550
      ],
      "op": "ADD",
      "path": "2"
    },
    "5799": {
      "op": "MSTORE"
    },
    "5800": {
      "op": "PUSH1",
      "value": "0x10"
    },
    "5802": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5804": {
      "op": "DUP3"
    },
    "5805": {
      "op": "ADD"
    },
    "5806": {
      "op": "MSTORE"
    },
    "5807": {
      "op": "PUSH16",
      "value": "0x3A3432B932903BB0B99030903A34B297"
    },
    "5824": {
      "op": "PUSH1",
      "value": "0x81"
    },
    "5826": {
      "op": "SHL"
    },
    "5827": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5829": {
      "op": "DUP3"
    },
    "5830": {
      "op": "ADD"
    },
    "5831": {
      "op": "MSTORE"
    },
    "5832": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5834": {
      "op": "ADD"
    },
    "5835": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6515,
        6550
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF9A"
    },
    "5838": {
      "op": "JUMP"
    },
    "5839": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6515,
        6550
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5840": {
      "op": "POP"
    },
    "5841": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6567,
        6578
      ],
      "op": "SWAP1",
      "path": "2",
      "statement": 46
    },
    "5842": {
      "fn": "Governance.getWinningVote",
      "offset": [
        6567,
        6578
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "5843": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5616,
        6585
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "5844": {
      "op": "POP"
    },
    "5845": {
      "op": "POP"
    },
    "5846": {
      "op": "POP"
    },
    "5847": {
      "fn": "Governance.getWinningVote",
      "jump": "o",
      "offset": [
        5616,
        6585
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5848": {
      "fn": "Governance.vote",
      "offset": [
        12602,
        13266
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5849": {
      "offset": [
        23590,
        23621
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5851": {
      "fn": "Governance.vote",
      "offset": [
        23590,
        23621
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5852": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5856": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5858": {
      "op": "SHL"
    },
    "5859": {
      "offset": [
        23590,
        23621
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5860": {
      "fn": "Governance.vote",
      "offset": [
        23590,
        23621
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5861": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5863": {
      "offset": [
        23590,
        23621
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "5865": {
      "fn": "Governance.vote",
      "offset": [
        23590,
        23621
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5866": {
      "fn": "Governance.vote",
      "offset": [
        23590,
        23621
      ],
      "op": "ADD",
      "path": "2"
    },
    "5867": {
      "op": "MSTORE"
    },
    "5868": {
      "op": "PUSH1",
      "value": "0xE"
    },
    "5870": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5872": {
      "op": "DUP3"
    },
    "5873": {
      "op": "ADD"
    },
    "5874": {
      "op": "MSTORE"
    },
    "5875": {
      "op": "PUSH14",
      "value": "0x26BAB9BA1031329036B2B6B132B9"
    },
    "5890": {
      "op": "PUSH1",
      "value": "0x91"
    },
    "5892": {
      "op": "SHL"
    },
    "5893": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5895": {
      "op": "DUP3"
    },
    "5896": {
      "op": "ADD"
    },
    "5897": {
      "op": "MSTORE"
    },
    "5898": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5900": {
      "op": "ADD"
    },
    "5901": {
      "offset": [
        23590,
        23621
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF9A"
    },
    "5904": {
      "op": "JUMP"
    },
    "5905": {
      "offset": [
        2840,
        2878
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5906": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA"
    },
    "5908": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5910": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5911": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5913": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5914": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5915": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5916": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5918": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5919": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "5920": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5921": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5922": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5923": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5924": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x172C"
    },
    "5927": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5928": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3DA4"
    },
    "5931": {
      "fn": "Governance.vote",
      "jump": "i",
      "offset": [
        2840,
        2878
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5932": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5933": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5934": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "5936": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "ADD",
      "path": "2"
    },
    "5937": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5939": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5940": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5941": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "DIV",
      "path": "2"
    },
    "5942": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "MUL",
      "path": "2"
    },
    "5943": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5945": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "ADD",
      "path": "2"
    },
    "5946": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5948": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5949": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5950": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5951": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "ADD",
      "path": "2"
    },
    "5952": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5954": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5955": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5956": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "5957": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5958": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5959": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5960": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5961": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5962": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5964": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "ADD",
      "path": "2"
    },
    "5965": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5966": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5967": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5968": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1758"
    },
    "5971": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5972": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3DA4"
    },
    "5975": {
      "fn": "Governance.vote",
      "jump": "i",
      "offset": [
        2840,
        2878
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5976": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5977": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5978": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "5979": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x17A5"
    },
    "5982": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5983": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5984": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "5986": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "LT",
      "path": "2"
    },
    "5987": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x177A"
    },
    "5990": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5991": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "5994": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5995": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5996": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5997": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "DIV",
      "path": "2"
    },
    "5998": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "MUL",
      "path": "2"
    },
    "5999": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6000": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6001": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6002": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6004": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "ADD",
      "path": "2"
    },
    "6005": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6006": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x17A5"
    },
    "6009": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6010": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6011": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6012": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "ADD",
      "path": "2"
    },
    "6013": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6014": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6015": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6017": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6018": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6020": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6022": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "6023": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6024": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6025": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6026": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6027": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6028": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6029": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6030": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "6032": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "ADD",
      "path": "2"
    },
    "6033": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6034": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6036": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "ADD",
      "path": "2"
    },
    "6037": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6038": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6039": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "GT",
      "path": "2"
    },
    "6040": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1788"
    },
    "6043": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6044": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6045": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6046": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SUB",
      "path": "2"
    },
    "6047": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "6049": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "AND",
      "path": "2"
    },
    "6050": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6051": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "ADD",
      "path": "2"
    },
    "6052": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6053": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6054": {
      "op": "POP"
    },
    "6055": {
      "op": "POP"
    },
    "6056": {
      "op": "POP"
    },
    "6057": {
      "offset": [
        2840,
        2878
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "6059": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "DUP5",
      "path": "2"
    },
    "6060": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "ADD",
      "path": "2"
    },
    "6061": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6062": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "6064": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "DUP6",
      "path": "2"
    },
    "6065": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "ADD",
      "path": "2"
    },
    "6066": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6067": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "6069": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "DUP7",
      "path": "2"
    },
    "6070": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "ADD",
      "path": "2"
    },
    "6071": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6072": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "6074": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6075": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP7",
      "path": "2"
    },
    "6076": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "ADD",
      "path": "2"
    },
    "6077": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6078": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "6079": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "6080": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "6086": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "6087": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6088": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "AND",
      "path": "2"
    },
    "6089": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "6090": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6091": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "6092": {
      "op": "POP"
    },
    "6093": {
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "6094": {
      "op": "POP"
    },
    "6095": {
      "offset": [
        2840,
        2878
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "6097": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6098": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "AND",
      "path": "2"
    },
    "6099": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6100": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "PUSH3",
      "path": "2",
      "value": "0xFFFFFF"
    },
    "6104": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "6107": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6108": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "DIV",
      "path": "2"
    },
    "6109": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "AND",
      "path": "2"
    },
    "6110": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6111": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6113": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6115": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "6117": {
      "op": "SHL"
    },
    "6118": {
      "op": "SUB"
    },
    "6119": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6121": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6123": {
      "op": "SHL"
    },
    "6124": {
      "offset": [
        2840,
        2878
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6125": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "DIV",
      "path": "2"
    },
    "6126": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "AND",
      "path": "2"
    },
    "6127": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6128": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "6131": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6133": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "6135": {
      "op": "SHL"
    },
    "6136": {
      "offset": [
        2840,
        2878
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6137": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "DIV",
      "path": "2"
    },
    "6138": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6139": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "AND",
      "path": "2"
    },
    "6140": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "6141": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6143": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6145": {
      "op": "SHL"
    },
    "6146": {
      "offset": [
        2840,
        2878
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6147": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "DIV",
      "path": "2"
    },
    "6148": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6149": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6150": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "AND",
      "path": "2"
    },
    "6151": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6152": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6154": {
      "op": "PUSH1",
      "value": "0x90"
    },
    "6156": {
      "op": "SHL"
    },
    "6157": {
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6158": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6159": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "DIV",
      "path": "2"
    },
    "6160": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "AND",
      "path": "2"
    },
    "6161": {
      "fn": "Governance.vote",
      "offset": [
        2840,
        2878
      ],
      "op": "DUP11",
      "path": "2"
    },
    "6162": {
      "fn": "Governance.vote",
      "jump": "o",
      "offset": [
        2840,
        2878
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6163": {
      "fn": "Governance.getTaskById",
      "offset": [
        5103,
        5215
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6164": {
      "fn": "Governance.getTaskById",
      "offset": [
        5164,
        5175
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x181B"
    },
    "6167": {
      "fn": "Governance.getTaskById",
      "offset": [
        5164,
        5175
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x34BF"
    },
    "6170": {
      "fn": "Governance.getTaskById",
      "jump": "i",
      "offset": [
        5164,
        5175
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6171": {
      "fn": "Governance.getTaskById",
      "offset": [
        5164,
        5175
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6172": {
      "fn": "Governance.getTaskById",
      "offset": [
        5194,
        5208
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 47,
      "value": "0x0"
    },
    "6174": {
      "fn": "Governance.getTaskById",
      "offset": [
        5194,
        5208
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6175": {
      "fn": "Governance.getTaskById",
      "offset": [
        5194,
        5208
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6176": {
      "fn": "Governance.getTaskById",
      "offset": [
        5194,
        5208
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6177": {
      "fn": "Governance.getTaskById",
      "offset": [
        5194,
        5199
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA"
    },
    "6179": {
      "fn": "Governance.getTaskById",
      "offset": [
        5194,
        5208
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6181": {
      "fn": "Governance.getTaskById",
      "offset": [
        5194,
        5208
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6182": {
      "fn": "Governance.getTaskById",
      "offset": [
        5194,
        5208
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6184": {
      "fn": "Governance.getTaskById",
      "offset": [
        5194,
        5208
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6185": {
      "fn": "Governance.getTaskById",
      "offset": [
        5194,
        5208
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6186": {
      "fn": "Governance.getTaskById",
      "offset": [
        5194,
        5208
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6187": {
      "fn": "Governance.getTaskById",
      "offset": [
        5194,
        5208
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "6188": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6189": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6190": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x140"
    },
    "6193": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6194": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "ADD",
      "path": "2"
    },
    "6195": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6196": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "6197": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6198": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6199": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6200": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6201": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6202": {
      "fn": "Governance.getTaskById",
      "offset": [
        5194,
        5208
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6203": {
      "fn": "Governance.getTaskById",
      "offset": [
        5194,
        5208
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6204": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1844"
    },
    "6207": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6208": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3DA4"
    },
    "6211": {
      "fn": "Governance.getTaskById",
      "jump": "i",
      "offset": [
        5187,
        5208
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6212": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6213": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6214": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "6216": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "ADD",
      "path": "2"
    },
    "6217": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6219": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6220": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6221": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "DIV",
      "path": "2"
    },
    "6222": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "MUL",
      "path": "2"
    },
    "6223": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6225": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "ADD",
      "path": "2"
    },
    "6226": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6228": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6229": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6230": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6231": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "ADD",
      "path": "2"
    },
    "6232": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6234": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6235": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6236": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "6237": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6238": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6239": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6240": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6241": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6242": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6244": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "ADD",
      "path": "2"
    },
    "6245": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6246": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6247": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6248": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1870"
    },
    "6251": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6252": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3DA4"
    },
    "6255": {
      "fn": "Governance.getTaskById",
      "jump": "i",
      "offset": [
        5187,
        5208
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6256": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6257": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6258": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "6259": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x18BD"
    },
    "6262": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6263": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6264": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "6266": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "LT",
      "path": "2"
    },
    "6267": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1892"
    },
    "6270": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6271": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "6274": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6275": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6276": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6277": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "DIV",
      "path": "2"
    },
    "6278": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "MUL",
      "path": "2"
    },
    "6279": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6280": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6281": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6282": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6284": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "ADD",
      "path": "2"
    },
    "6285": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6286": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x18BD"
    },
    "6289": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6290": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6291": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6292": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "ADD",
      "path": "2"
    },
    "6293": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6294": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6295": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6297": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6298": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6300": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6302": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "6303": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6304": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6305": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6306": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6307": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6308": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6309": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6310": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "6312": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "ADD",
      "path": "2"
    },
    "6313": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6314": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6316": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "ADD",
      "path": "2"
    },
    "6317": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6318": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6319": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "GT",
      "path": "2"
    },
    "6320": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x18A0"
    },
    "6323": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6324": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6325": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6326": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "SUB",
      "path": "2"
    },
    "6327": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "6329": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "AND",
      "path": "2"
    },
    "6330": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6331": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "ADD",
      "path": "2"
    },
    "6332": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6333": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6334": {
      "op": "POP"
    },
    "6335": {
      "op": "POP"
    },
    "6336": {
      "op": "POP"
    },
    "6337": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6338": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6339": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6340": {
      "op": "POP"
    },
    "6341": {
      "op": "POP"
    },
    "6342": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "6344": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6345": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "ADD",
      "path": "2"
    },
    "6346": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6347": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "6353": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6354": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6355": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "AND",
      "path": "2"
    },
    "6356": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6358": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6359": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "ADD",
      "path": "2"
    },
    "6360": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6361": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "6363": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6364": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "ADD",
      "path": "2"
    },
    "6365": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6366": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6368": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6369": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "ADD",
      "path": "2"
    },
    "6370": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6371": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "6373": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6374": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "ADD",
      "path": "2"
    },
    "6375": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6376": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "6378": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6379": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "ADD",
      "path": "2"
    },
    "6380": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6381": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "6383": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6384": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "6385": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "ADD",
      "path": "2"
    },
    "6386": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6387": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "6389": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6390": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "AND",
      "path": "2"
    },
    "6391": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x80"
    },
    "6393": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6394": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "ADD",
      "path": "2"
    },
    "6395": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6396": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "6399": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6400": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6401": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "DIV",
      "path": "2"
    },
    "6402": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "PUSH3",
      "path": "2",
      "value": "0xFFFFFF"
    },
    "6406": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "AND",
      "path": "2"
    },
    "6407": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA0"
    },
    "6409": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "DUP5",
      "path": "2"
    },
    "6410": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "ADD",
      "path": "2"
    },
    "6411": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6412": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6414": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6416": {
      "op": "SHL"
    },
    "6417": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6418": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "DIV",
      "path": "2"
    },
    "6419": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6421": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6423": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "6425": {
      "op": "SHL"
    },
    "6426": {
      "op": "SUB"
    },
    "6427": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "AND",
      "path": "2"
    },
    "6428": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xC0"
    },
    "6430": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "DUP5",
      "path": "2"
    },
    "6431": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "ADD",
      "path": "2"
    },
    "6432": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6433": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6435": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "6437": {
      "op": "SHL"
    },
    "6438": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6439": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "DIV",
      "path": "2"
    },
    "6440": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "6443": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6444": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6445": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "AND",
      "path": "2"
    },
    "6446": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE0"
    },
    "6448": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "DUP6",
      "path": "2"
    },
    "6449": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "ADD",
      "path": "2"
    },
    "6450": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6451": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6453": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6455": {
      "op": "SHL"
    },
    "6456": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6457": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "DIV",
      "path": "2"
    },
    "6458": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "AND",
      "path": "2"
    },
    "6459": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6460": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6461": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "ADD",
      "path": "2"
    },
    "6462": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6463": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6465": {
      "op": "PUSH1",
      "value": "0x90"
    },
    "6467": {
      "op": "SHL"
    },
    "6468": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6469": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "DIV",
      "path": "2"
    },
    "6470": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6471": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6472": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "AND",
      "path": "2"
    },
    "6473": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x120"
    },
    "6476": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6477": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6478": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "ADD",
      "path": "2"
    },
    "6479": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6480": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "6481": {
      "fn": "Governance.getTaskById",
      "offset": [
        5187,
        5208
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6482": {
      "op": "POP"
    },
    "6483": {
      "op": "POP"
    },
    "6484": {
      "fn": "Governance.getTaskById",
      "jump": "o",
      "offset": [
        5103,
        5215
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6485": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9012,
        10512
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6486": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9083,
        9098
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "6488": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9110,
        9123
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6490": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9110,
        9123
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6491": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9133,
        9677
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6492": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9153,
        9162
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "6494": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9153,
        9169
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6495": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9150,
        9169
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6496": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9150,
        9169
      ],
      "op": "LT",
      "path": "2"
    },
    "6497": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9133,
        9677
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "6498": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9133,
        9677
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A6D"
    },
    "6501": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9133,
        9677
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6502": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9235,
        9250
      ],
      "op": "TIMESTAMP",
      "path": "2"
    },
    "6503": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9188,
        9197
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "6505": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9198,
        9199
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6506": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9188,
        9200
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6507": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9188,
        9200
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6508": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9188,
        9200
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6509": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9188,
        9200
      ],
      "op": "LT",
      "path": "2"
    },
    "6510": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9188,
        9200
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1979"
    },
    "6513": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9188,
        9200
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6514": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9188,
        9200
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1979"
    },
    "6517": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9188,
        9200
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3DDE"
    },
    "6520": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        9188,
        9200
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6521": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9188,
        9200
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6522": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9188,
        9200
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6524": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9188,
        9200
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6525": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9188,
        9200
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6526": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9188,
        9200
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6527": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9188,
        9200
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6529": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9188,
        9200
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6530": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9188,
        9200
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6531": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9188,
        9200
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "6532": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9188,
        9232
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "6538": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9188,
        9232
      ],
      "op": "DUP10",
      "path": "2"
    },
    "6539": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9188,
        9232
      ],
      "op": "AND",
      "path": "2"
    },
    "6540": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9188,
        9232
      ],
      "op": "DUP5",
      "path": "2"
    },
    "6541": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9188,
        9232
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6542": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9188,
        9200
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "6544": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9188,
        9200
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6545": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9188,
        9200
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "6546": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9188,
        9200
      ],
      "op": "MUL",
      "path": "2"
    },
    "6547": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9188,
        9200
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6548": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9188,
        9200
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6549": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9188,
        9200
      ],
      "op": "ADD",
      "path": "2"
    },
    "6550": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9188,
        9232
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6551": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9188,
        9232
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6552": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9188,
        9232
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6554": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9188,
        9232
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6555": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9188,
        9232
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "6556": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9188,
        9232
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6557": {
      "branch": 147,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9188,
        9250
      ],
      "op": "LT",
      "path": "2"
    },
    "6558": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9188,
        9310
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6559": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9188,
        9310
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "6560": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9188,
        9310
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x19DD"
    },
    "6563": {
      "branch": 147,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9188,
        9310
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6564": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9188,
        9310
      ],
      "op": "POP",
      "path": "2"
    },
    "6565": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9295,
        9310
      ],
      "op": "TIMESTAMP",
      "path": "2"
    },
    "6566": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9266,
        9275
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "6568": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9276,
        9277
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6569": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9266,
        9278
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6570": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9266,
        9278
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6571": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9266,
        9278
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6572": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9266,
        9278
      ],
      "op": "LT",
      "path": "2"
    },
    "6573": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9266,
        9278
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x19B8"
    },
    "6576": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9266,
        9278
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6577": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9266,
        9278
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x19B8"
    },
    "6580": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9266,
        9278
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3DDE"
    },
    "6583": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        9266,
        9278
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6584": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9266,
        9278
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6585": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9266,
        9278
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6587": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9266,
        9278
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6588": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9266,
        9278
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6589": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9266,
        9278
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6590": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9266,
        9278
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6592": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9266,
        9278
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6593": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9266,
        9278
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6594": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9266,
        9278
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "6595": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9266,
        9278
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "6597": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9266,
        9278
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6598": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9266,
        9278
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6599": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9266,
        9278
      ],
      "op": "MUL",
      "path": "2"
    },
    "6600": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9266,
        9278
      ],
      "op": "ADD",
      "path": "2"
    },
    "6601": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9266,
        9291
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "6603": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9266,
        9291
      ],
      "op": "ADD",
      "path": "2"
    },
    "6604": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9266,
        9291
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6605": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6607": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "6609": {
      "op": "SHL"
    },
    "6610": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9266,
        9291
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6611": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9266,
        9291
      ],
      "op": "DIV",
      "path": "2"
    },
    "6612": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9266,
        9291
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "6618": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9266,
        9291
      ],
      "op": "AND",
      "path": "2"
    },
    "6619": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9266,
        9310
      ],
      "op": "GT",
      "path": "2"
    },
    "6620": {
      "branch": 148,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9266,
        9310
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "6621": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9188,
        9310
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6622": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9188,
        9357
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6623": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9188,
        9357
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "6624": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9188,
        9357
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A1C"
    },
    "6627": {
      "branch": 148,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9188,
        9357
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6628": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9188,
        9357
      ],
      "op": "POP",
      "path": "2"
    },
    "6629": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9342,
        9357
      ],
      "op": "TIMESTAMP",
      "path": "2"
    },
    "6630": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9314,
        9323
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "6632": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9324,
        9325
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6633": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9314,
        9326
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6634": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9314,
        9326
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6635": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9314,
        9326
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6636": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9314,
        9326
      ],
      "op": "LT",
      "path": "2"
    },
    "6637": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9314,
        9326
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x19F8"
    },
    "6640": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9314,
        9326
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6641": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9314,
        9326
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x19F8"
    },
    "6644": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9314,
        9326
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3DDE"
    },
    "6647": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        9314,
        9326
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6648": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9314,
        9326
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6649": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9314,
        9326
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6651": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9314,
        9326
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6652": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9314,
        9326
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6653": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9314,
        9326
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6654": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9314,
        9326
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6656": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9314,
        9326
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6657": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9314,
        9326
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6658": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9314,
        9326
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "6659": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9314,
        9326
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "6661": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9314,
        9326
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6662": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9314,
        9326
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6663": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9314,
        9326
      ],
      "op": "MUL",
      "path": "2"
    },
    "6664": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9314,
        9326
      ],
      "op": "ADD",
      "path": "2"
    },
    "6665": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9314,
        9339
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "6667": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9314,
        9339
      ],
      "op": "ADD",
      "path": "2"
    },
    "6668": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9314,
        9339
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6669": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6671": {
      "op": "PUSH1",
      "value": "0x78"
    },
    "6673": {
      "op": "SHL"
    },
    "6674": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9314,
        9339
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6675": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9314,
        9339
      ],
      "op": "DIV",
      "path": "2"
    },
    "6676": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9314,
        9339
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "6682": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9314,
        9339
      ],
      "op": "AND",
      "path": "2"
    },
    "6683": {
      "branch": 149,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9314,
        9357
      ],
      "op": "GT",
      "path": "2"
    },
    "6684": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9188,
        9357
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6685": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9188,
        9404
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6686": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9188,
        9404
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "6687": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9188,
        9404
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A59"
    },
    "6690": {
      "branch": 149,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9188,
        9404
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6691": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9188,
        9404
      ],
      "op": "POP",
      "path": "2"
    },
    "6692": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9403,
        9404
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "6694": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9373,
        9382
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "6696": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9383,
        9384
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6697": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9373,
        9385
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6698": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9373,
        9385
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6699": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9373,
        9385
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6700": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9373,
        9385
      ],
      "op": "LT",
      "path": "2"
    },
    "6701": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9373,
        9385
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A38"
    },
    "6704": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9373,
        9385
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6705": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9373,
        9385
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A38"
    },
    "6708": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9373,
        9385
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3DDE"
    },
    "6711": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        9373,
        9385
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6712": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9373,
        9385
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6713": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9373,
        9385
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6715": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9373,
        9385
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6716": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9373,
        9385
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6717": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9373,
        9385
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6718": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9373,
        9385
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6720": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9373,
        9385
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6721": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9373,
        9385
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6722": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9373,
        9385
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "6723": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9373,
        9385
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "6725": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9373,
        9385
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6726": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9373,
        9385
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6727": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9373,
        9385
      ],
      "op": "MUL",
      "path": "2"
    },
    "6728": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9373,
        9385
      ],
      "op": "ADD",
      "path": "2"
    },
    "6729": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9373,
        9400
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "6731": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9373,
        9400
      ],
      "op": "ADD",
      "path": "2"
    },
    "6732": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9373,
        9400
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6733": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6735": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6737": {
      "op": "SHL"
    },
    "6738": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9373,
        9400
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6739": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9373,
        9400
      ],
      "op": "DIV",
      "path": "2"
    },
    "6740": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9373,
        9400
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "6743": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9373,
        9400
      ],
      "op": "AND",
      "path": "2"
    },
    "6744": {
      "branch": 150,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9373,
        9404
      ],
      "op": "GT",
      "path": "2"
    },
    "6745": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9188,
        9404
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6746": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9185,
        9470
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "6747": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9185,
        9470
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A65"
    },
    "6750": {
      "branch": 150,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9185,
        9470
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6751": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9447,
        9454
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 48
    },
    "6752": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9447,
        9454
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "6754": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9447,
        9454
      ],
      "op": "ADD",
      "path": "2"
    },
    "6755": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9447,
        9454
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6756": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9447,
        9454
      ],
      "op": "POP",
      "path": "2"
    },
    "6757": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9185,
        9470
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6758": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9662,
        9665
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 49,
      "value": "0x1"
    },
    "6760": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9662,
        9665
      ],
      "op": "ADD",
      "path": "2"
    },
    "6761": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9133,
        9677
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x195B"
    },
    "6764": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9133,
        9677
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6765": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9133,
        9677
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6766": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9133,
        9677
      ],
      "op": "POP",
      "path": "2"
    },
    "6767": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9734,
        9739
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6768": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9741,
        9742
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6770": {
      "branch": 151,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9734,
        9742
      ],
      "op": "SUB",
      "path": "2"
    },
    "6771": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9730,
        9869
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1AD9"
    },
    "6774": {
      "branch": 151,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9730,
        9869
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6775": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9784,
        9799
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6777": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9784,
        9799
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6778": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9784,
        9799
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6779": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9797,
        9798
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "6781": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9784,
        9799
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6782": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9784,
        9799
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6783": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9784,
        9799
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6784": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9784,
        9799
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6785": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9784,
        9799
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6786": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9784,
        9799
      ],
      "op": "ADD",
      "path": "2"
    },
    "6787": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9784,
        9799
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6788": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9784,
        9799
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "6789": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9784,
        9799
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6790": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9758,
        9782
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6792": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9758,
        9782
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6793": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9784,
        9799
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6794": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9784,
        9799
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6796": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9784,
        9799
      ],
      "op": "ADD",
      "path": "2"
    },
    "6797": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9784,
        9799
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6798": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9784,
        9799
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "6800": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9784,
        9799
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6801": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9784,
        9799
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6802": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9784,
        9799
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6804": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9784,
        9799
      ],
      "op": "ADD",
      "path": "2"
    },
    "6805": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9784,
        9799
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6806": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9784,
        9799
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "6808": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9784,
        9799
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6809": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9784,
        9799
      ],
      "op": "SUB",
      "path": "2"
    },
    "6810": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9784,
        9799
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6811": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9784,
        9799
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6812": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9784,
        9799
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A8D"
    },
    "6815": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9784,
        9799
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6816": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9784,
        9799
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6817": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9784,
        9799
      ],
      "op": "POP",
      "path": "2"
    },
    "6818": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9784,
        9799
      ],
      "op": "POP",
      "path": "2"
    },
    "6819": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9758,
        9799
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6820": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9758,
        9799
      ],
      "op": "POP",
      "path": "2"
    },
    "6821": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9813,
        9829
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 50,
      "value": "0x40"
    },
    "6823": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9813,
        9829
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6824": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9813,
        9829
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6825": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9813,
        9829
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6827": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9813,
        9829
      ],
      "op": "ADD",
      "path": "2"
    },
    "6828": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9813,
        9829
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6830": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9813,
        9829
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6831": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9813,
        9829
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6832": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9813,
        9829
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6834": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9813,
        9829
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6835": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9813,
        9829
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6836": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9813,
        9829
      ],
      "op": "POP",
      "path": "2"
    },
    "6837": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9813,
        9821
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6838": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9822,
        9823
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6840": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9813,
        9824
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6841": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9813,
        9824
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6842": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9813,
        9824
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6843": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9813,
        9824
      ],
      "op": "LT",
      "path": "2"
    },
    "6844": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9813,
        9824
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1AC7"
    },
    "6847": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9813,
        9824
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6848": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9813,
        9824
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1AC7"
    },
    "6851": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9813,
        9824
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3DDE"
    },
    "6854": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        9813,
        9824
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6855": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9813,
        9824
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6856": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9813,
        9824
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6858": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9813,
        9824
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6859": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9813,
        9824
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6860": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9813,
        9824
      ],
      "op": "MUL",
      "path": "2"
    },
    "6861": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9813,
        9824
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6862": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9813,
        9824
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6863": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9813,
        9824
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6864": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9813,
        9824
      ],
      "op": "ADD",
      "path": "2"
    },
    "6865": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9813,
        9824
      ],
      "op": "ADD",
      "path": "2"
    },
    "6866": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9813,
        9829
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6867": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9850,
        9858
      ],
      "op": "SWAP4",
      "path": "2",
      "statement": 51
    },
    "6868": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9012,
        10512
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "6869": {
      "op": "POP"
    },
    "6870": {
      "op": "POP"
    },
    "6871": {
      "op": "POP"
    },
    "6872": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "o",
      "offset": [
        9012,
        10512
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6873": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9730,
        9869
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6874": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9879,
        9902
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6876": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9918,
        9923
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6877": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6879": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6881": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6883": {
      "op": "SHL"
    },
    "6884": {
      "op": "SUB"
    },
    "6885": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9905,
        9924
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6886": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9905,
        9924
      ],
      "op": "GT",
      "path": "2"
    },
    "6887": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9905,
        9924
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "6888": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9905,
        9924
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1AF3"
    },
    "6891": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9905,
        9924
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6892": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9905,
        9924
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1AF3"
    },
    "6895": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9905,
        9924
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3612"
    },
    "6898": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        9905,
        9924
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6899": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9905,
        9924
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6900": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9905,
        9924
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6902": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9905,
        9924
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6903": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9905,
        9924
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6904": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9905,
        9924
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6905": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9905,
        9924
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6906": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9905,
        9924
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6907": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9905,
        9924
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6908": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9905,
        9924
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6910": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9905,
        9924
      ],
      "op": "MUL",
      "path": "2"
    },
    "6911": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9905,
        9924
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6913": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9905,
        9924
      ],
      "op": "ADD",
      "path": "2"
    },
    "6914": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9905,
        9924
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6915": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9905,
        9924
      ],
      "op": "ADD",
      "path": "2"
    },
    "6916": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9905,
        9924
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6918": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9905,
        9924
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6919": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9905,
        9924
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6920": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9905,
        9924
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "6921": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9905,
        9924
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1B26"
    },
    "6924": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9905,
        9924
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6925": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9905,
        9924
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6926": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9905,
        9924
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6928": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9905,
        9924
      ],
      "op": "ADD",
      "path": "2"
    },
    "6929": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9905,
        9924
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6930": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9905,
        9924
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "6932": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9905,
        9924
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6933": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9905,
        9924
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6934": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9905,
        9924
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6936": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9905,
        9924
      ],
      "op": "ADD",
      "path": "2"
    },
    "6937": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9905,
        9924
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6938": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9905,
        9924
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "6940": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9905,
        9924
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6941": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9905,
        9924
      ],
      "op": "SUB",
      "path": "2"
    },
    "6942": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9905,
        9924
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6943": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9905,
        9924
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6944": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9905,
        9924
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1B11"
    },
    "6947": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9905,
        9924
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6948": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9905,
        9924
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6949": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9905,
        9924
      ],
      "op": "POP",
      "path": "2"
    },
    "6950": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9905,
        9924
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6951": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9905,
        9924
      ],
      "op": "POP",
      "path": "2"
    },
    "6952": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9879,
        9924
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6953": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9879,
        9924
      ],
      "op": "POP",
      "path": "2"
    },
    "6954": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9934,
        9949
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6956": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9967,
        9976
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6957": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9963,
        10482
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6958": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9983,
        9992
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "6960": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9983,
        9999
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6961": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9980,
        9999
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6962": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9980,
        9999
      ],
      "op": "LT",
      "path": "2"
    },
    "6963": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9963,
        10482
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "6964": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9963,
        10482
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1D11"
    },
    "6967": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9963,
        10482
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6968": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10065,
        10080
      ],
      "op": "TIMESTAMP",
      "path": "2"
    },
    "6969": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10018,
        10027
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "6971": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10028,
        10029
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6972": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10018,
        10030
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6973": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10018,
        10030
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6974": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10018,
        10030
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6975": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10018,
        10030
      ],
      "op": "LT",
      "path": "2"
    },
    "6976": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10018,
        10030
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1B4B"
    },
    "6979": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10018,
        10030
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6980": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10018,
        10030
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1B4B"
    },
    "6983": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10018,
        10030
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3DDE"
    },
    "6986": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        10018,
        10030
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6987": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10018,
        10030
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6988": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10018,
        10030
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6990": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10018,
        10030
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6991": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10018,
        10030
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6992": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10018,
        10030
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6993": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10018,
        10030
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6995": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10018,
        10030
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6996": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10018,
        10030
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6997": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10018,
        10030
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "6998": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10018,
        10062
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "7004": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10018,
        10062
      ],
      "op": "DUP12",
      "path": "2"
    },
    "7005": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10018,
        10062
      ],
      "op": "AND",
      "path": "2"
    },
    "7006": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10018,
        10062
      ],
      "op": "DUP5",
      "path": "2"
    },
    "7007": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10018,
        10062
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7008": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10018,
        10030
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "7010": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10018,
        10030
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7011": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10018,
        10030
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "7012": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10018,
        10030
      ],
      "op": "MUL",
      "path": "2"
    },
    "7013": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10018,
        10030
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7014": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10018,
        10030
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7015": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10018,
        10030
      ],
      "op": "ADD",
      "path": "2"
    },
    "7016": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10018,
        10062
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7017": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10018,
        10062
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7018": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10018,
        10062
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7020": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10018,
        10062
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7021": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10018,
        10062
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "7022": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10018,
        10062
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7023": {
      "branch": 152,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10018,
        10080
      ],
      "op": "LT",
      "path": "2"
    },
    "7024": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10018,
        10140
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7025": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10018,
        10140
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "7026": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10018,
        10140
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1BAF"
    },
    "7029": {
      "branch": 152,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10018,
        10140
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7030": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10018,
        10140
      ],
      "op": "POP",
      "path": "2"
    },
    "7031": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10125,
        10140
      ],
      "op": "TIMESTAMP",
      "path": "2"
    },
    "7032": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10096,
        10105
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "7034": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10106,
        10107
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7035": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10096,
        10108
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7036": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10096,
        10108
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7037": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10096,
        10108
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7038": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10096,
        10108
      ],
      "op": "LT",
      "path": "2"
    },
    "7039": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10096,
        10108
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1B8A"
    },
    "7042": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10096,
        10108
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7043": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10096,
        10108
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1B8A"
    },
    "7046": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10096,
        10108
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3DDE"
    },
    "7049": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        10096,
        10108
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7050": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10096,
        10108
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7051": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10096,
        10108
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7053": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10096,
        10108
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7054": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10096,
        10108
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7055": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10096,
        10108
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7056": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10096,
        10108
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7058": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10096,
        10108
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7059": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10096,
        10108
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7060": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10096,
        10108
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "7061": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10096,
        10108
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "7063": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10096,
        10108
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7064": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10096,
        10108
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7065": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10096,
        10108
      ],
      "op": "MUL",
      "path": "2"
    },
    "7066": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10096,
        10108
      ],
      "op": "ADD",
      "path": "2"
    },
    "7067": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10096,
        10121
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "7069": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10096,
        10121
      ],
      "op": "ADD",
      "path": "2"
    },
    "7070": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10096,
        10121
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7071": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7073": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "7075": {
      "op": "SHL"
    },
    "7076": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10096,
        10121
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7077": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10096,
        10121
      ],
      "op": "DIV",
      "path": "2"
    },
    "7078": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10096,
        10121
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "7084": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10096,
        10121
      ],
      "op": "AND",
      "path": "2"
    },
    "7085": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10096,
        10140
      ],
      "op": "GT",
      "path": "2"
    },
    "7086": {
      "branch": 153,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10096,
        10140
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "7087": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10018,
        10140
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7088": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10018,
        10187
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7089": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10018,
        10187
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "7090": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10018,
        10187
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1BEE"
    },
    "7093": {
      "branch": 153,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10018,
        10187
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7094": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10018,
        10187
      ],
      "op": "POP",
      "path": "2"
    },
    "7095": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10172,
        10187
      ],
      "op": "TIMESTAMP",
      "path": "2"
    },
    "7096": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10144,
        10153
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "7098": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10154,
        10155
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7099": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10144,
        10156
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7100": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10144,
        10156
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7101": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10144,
        10156
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7102": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10144,
        10156
      ],
      "op": "LT",
      "path": "2"
    },
    "7103": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10144,
        10156
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1BCA"
    },
    "7106": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10144,
        10156
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7107": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10144,
        10156
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1BCA"
    },
    "7110": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10144,
        10156
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3DDE"
    },
    "7113": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        10144,
        10156
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7114": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10144,
        10156
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7115": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10144,
        10156
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7117": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10144,
        10156
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7118": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10144,
        10156
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7119": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10144,
        10156
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7120": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10144,
        10156
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7122": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10144,
        10156
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7123": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10144,
        10156
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7124": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10144,
        10156
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "7125": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10144,
        10156
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "7127": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10144,
        10156
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7128": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10144,
        10156
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7129": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10144,
        10156
      ],
      "op": "MUL",
      "path": "2"
    },
    "7130": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10144,
        10156
      ],
      "op": "ADD",
      "path": "2"
    },
    "7131": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10144,
        10169
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "7133": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10144,
        10169
      ],
      "op": "ADD",
      "path": "2"
    },
    "7134": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10144,
        10169
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7135": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7137": {
      "op": "PUSH1",
      "value": "0x78"
    },
    "7139": {
      "op": "SHL"
    },
    "7140": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10144,
        10169
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7141": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10144,
        10169
      ],
      "op": "DIV",
      "path": "2"
    },
    "7142": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10144,
        10169
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "7148": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10144,
        10169
      ],
      "op": "AND",
      "path": "2"
    },
    "7149": {
      "branch": 154,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10144,
        10187
      ],
      "op": "GT",
      "path": "2"
    },
    "7150": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10018,
        10187
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7151": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10018,
        10234
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7152": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10018,
        10234
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "7153": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10018,
        10234
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1C2B"
    },
    "7156": {
      "branch": 154,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10018,
        10234
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7157": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10018,
        10234
      ],
      "op": "POP",
      "path": "2"
    },
    "7158": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10233,
        10234
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "7160": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10203,
        10212
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "7162": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10213,
        10214
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7163": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10203,
        10215
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7164": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10203,
        10215
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7165": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10203,
        10215
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7166": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10203,
        10215
      ],
      "op": "LT",
      "path": "2"
    },
    "7167": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10203,
        10215
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1C0A"
    },
    "7170": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10203,
        10215
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7171": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10203,
        10215
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1C0A"
    },
    "7174": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10203,
        10215
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3DDE"
    },
    "7177": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        10203,
        10215
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7178": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10203,
        10215
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7179": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10203,
        10215
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7181": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10203,
        10215
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7182": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10203,
        10215
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7183": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10203,
        10215
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7184": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10203,
        10215
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7186": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10203,
        10215
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7187": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10203,
        10215
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7188": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10203,
        10215
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "7189": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10203,
        10215
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "7191": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10203,
        10215
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7192": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10203,
        10215
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7193": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10203,
        10215
      ],
      "op": "MUL",
      "path": "2"
    },
    "7194": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10203,
        10215
      ],
      "op": "ADD",
      "path": "2"
    },
    "7195": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10203,
        10230
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "7197": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10203,
        10230
      ],
      "op": "ADD",
      "path": "2"
    },
    "7198": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10203,
        10230
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7199": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7201": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7203": {
      "op": "SHL"
    },
    "7204": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10203,
        10230
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7205": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10203,
        10230
      ],
      "op": "DIV",
      "path": "2"
    },
    "7206": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10203,
        10230
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "7209": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10203,
        10230
      ],
      "op": "AND",
      "path": "2"
    },
    "7210": {
      "branch": 155,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10203,
        10234
      ],
      "op": "GT",
      "path": "2"
    },
    "7211": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10018,
        10234
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7212": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10015,
        10444
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "7213": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10015,
        10444
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1D09"
    },
    "7216": {
      "branch": 155,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10015,
        10444
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7217": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10286,
        10295
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 52,
      "value": "0x5"
    },
    "7219": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10296,
        10297
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7220": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10286,
        10298
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7221": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10286,
        10298
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7222": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10286,
        10298
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7223": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10286,
        10298
      ],
      "op": "LT",
      "path": "2"
    },
    "7224": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10286,
        10298
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1C43"
    },
    "7227": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10286,
        10298
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7228": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10286,
        10298
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1C43"
    },
    "7231": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10286,
        10298
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3DDE"
    },
    "7234": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        10286,
        10298
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7235": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10286,
        10298
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7236": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10286,
        10298
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7237": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10286,
        10298
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7239": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10286,
        10298
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7240": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10286,
        10298
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7242": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10286,
        10298
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7244": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10286,
        10298
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "7245": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10286,
        10298
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7246": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10286,
        10298
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "7248": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10286,
        10298
      ],
      "op": "MUL",
      "path": "2"
    },
    "7249": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10286,
        10298
      ],
      "op": "ADD",
      "path": "2"
    },
    "7250": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10286,
        10307
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "7252": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10286,
        10307
      ],
      "op": "ADD",
      "path": "2"
    },
    "7253": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10267,
        10307
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7254": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10267,
        10307
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7255": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10267,
        10307
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1C5F"
    },
    "7258": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10267,
        10307
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7259": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10267,
        10307
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3DA4"
    },
    "7262": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        10267,
        10307
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7263": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10267,
        10307
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7264": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10267,
        10307
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7265": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10267,
        10307
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "7267": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10267,
        10307
      ],
      "op": "ADD",
      "path": "2"
    },
    "7268": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10267,
        10307
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7270": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10267,
        10307
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7271": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10267,
        10307
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7272": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10267,
        10307
      ],
      "op": "DIV",
      "path": "2"
    },
    "7273": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10267,
        10307
      ],
      "op": "MUL",
      "path": "2"
    },
    "7274": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10267,
        10307
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7276": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10267,
        10307
      ],
      "op": "ADD",
      "path": "2"
    },
    "7277": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10267,
        10307
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7279": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10267,
        10307
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7280": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10267,
        10307
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7281": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10267,
        10307
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7282": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10267,
        10307
      ],
      "op": "ADD",
      "path": "2"
    },
    "7283": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10267,
        10307
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7285": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10267,
        10307
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7286": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10267,
        10307
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7287": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10267,
        10307
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "7288": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10267,
        10307
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7289": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10267,
        10307
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7290": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10267,
        10307
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7291": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10267,
        10307
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7292": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10267,
        10307
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7293": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10267,
        10307
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7295": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10267,
        10307
      ],
      "op": "ADD",
      "path": "2"
    },
    "7296": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10267,
        10307
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7297": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10267,
        10307
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7298": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10267,
        10307
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7299": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10267,
        10307
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1C8B"
    },
    "7302": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10267,
        10307
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7303": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10267,
        10307
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3DA4"
    },
    "7306": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        10267,
        10307
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7307": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10267,
        10307
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7308": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10267,
        10307
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7309": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10267,
        10307
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "7310": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10267,
        10307
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1CD8"
    },
    "7313": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10267,
        10307
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7314": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10267,
        10307
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7315": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10267,
        10307
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "7317": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10267,
        10307
      ],
      "op": "LT",
      "path": "2"
    },
    "7318": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10267,
        10307
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1CAD"
    },
    "7321": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10267,
        10307
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7322": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10267,
        10307
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "7325": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10267,
        10307
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7326": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10267,
        10307
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7327": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10267,
        10307
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7328": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10267,
        10307
      ],
      "op": "DIV",
      "path": "2"
    },
    "7329": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10267,
        10307
      ],
      "op": "MUL",
      "path": "2"
    },
    "7330": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10267,
        10307
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7331": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10267,
        10307
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7332": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10267,
        10307
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7333": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10267,
        10307
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7335": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10267,
        10307
      ],
      "op": "ADD",
      "path": "2"
    },
    "7336": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10267,
        10307
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7337": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10267,
        10307
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1CD8"
    },
    "7340": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10267,
        10307
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7341": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10267,
        10307
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7342": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10267,
        10307
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7343": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10267,
        10307
      ],
      "op": "ADD",
      "path": "2"
    },
    "7344": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10267,
        10307
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7345": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10267,
        10307
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7346": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10267,
        10307
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7348": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10267,
        10307
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7349": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10267,
        10307
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7351": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10267,
        10307
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7353": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10267,
        10307
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "7354": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10267,
        10307
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7355": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10267,
        10307
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7356": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10267,
        10307
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7357": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10267,
        10307
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7358": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10267,
        10307
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7359": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10267,
        10307
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7360": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10267,
        10307
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7361": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10267,
        10307
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "7363": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10267,
        10307
      ],
      "op": "ADD",
      "path": "2"
    },
    "7364": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10267,
        10307
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7365": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10267,
        10307
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7367": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10267,
        10307
      ],
      "op": "ADD",
      "path": "2"
    },
    "7368": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10267,
        10307
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7369": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10267,
        10307
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7370": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10267,
        10307
      ],
      "op": "GT",
      "path": "2"
    },
    "7371": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10267,
        10307
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1CBB"
    },
    "7374": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10267,
        10307
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7375": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10267,
        10307
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7376": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10267,
        10307
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7377": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10267,
        10307
      ],
      "op": "SUB",
      "path": "2"
    },
    "7378": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10267,
        10307
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "7380": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10267,
        10307
      ],
      "op": "AND",
      "path": "2"
    },
    "7381": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10267,
        10307
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7382": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10267,
        10307
      ],
      "op": "ADD",
      "path": "2"
    },
    "7383": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10267,
        10307
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7384": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10267,
        10307
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7385": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10267,
        10307
      ],
      "op": "POP",
      "path": "2"
    },
    "7386": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10267,
        10307
      ],
      "op": "POP",
      "path": "2"
    },
    "7387": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10267,
        10307
      ],
      "op": "POP",
      "path": "2"
    },
    "7388": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10267,
        10307
      ],
      "op": "POP",
      "path": "2"
    },
    "7389": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10267,
        10307
      ],
      "op": "POP",
      "path": "2"
    },
    "7390": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10267,
        10274
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7391": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10275,
        10282
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7392": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10267,
        10283
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7393": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10267,
        10283
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7394": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10267,
        10283
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7395": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10267,
        10283
      ],
      "op": "LT",
      "path": "2"
    },
    "7396": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10267,
        10283
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1CEF"
    },
    "7399": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10267,
        10283
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7400": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10267,
        10283
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1CEF"
    },
    "7403": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10267,
        10283
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3DDE"
    },
    "7406": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        10267,
        10283
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7407": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10267,
        10283
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7408": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10267,
        10283
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7410": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10267,
        10283
      ],
      "op": "MUL",
      "path": "2"
    },
    "7411": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10267,
        10283
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7413": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10267,
        10283
      ],
      "op": "ADD",
      "path": "2"
    },
    "7414": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10267,
        10283
      ],
      "op": "ADD",
      "path": "2"
    },
    "7415": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10267,
        10307
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7416": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10267,
        10307
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7417": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10267,
        10307
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7418": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10267,
        10307
      ],
      "op": "POP",
      "path": "2"
    },
    "7419": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10335,
        10344
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 53
    },
    "7420": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10335,
        10344
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "7422": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10335,
        10344
      ],
      "op": "ADD",
      "path": "2"
    },
    "7423": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10335,
        10344
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7424": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10335,
        10344
      ],
      "op": "POP",
      "path": "2"
    },
    "7425": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10377,
        10382
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7426": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10366,
        10373
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7427": {
      "branch": 156,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10366,
        10382
      ],
      "op": "LT",
      "path": "2"
    },
    "7428": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10363,
        10430
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "7429": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10406,
        10411
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 54,
      "value": "0x1D11"
    },
    "7432": {
      "branch": 156,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10363,
        10430
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7433": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10363,
        10430
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7434": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10467,
        10470
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 55,
      "value": "0x1"
    },
    "7436": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10467,
        10470
      ],
      "op": "ADD",
      "path": "2"
    },
    "7437": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9963,
        10482
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1B2D"
    },
    "7440": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9963,
        10482
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7441": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9963,
        10482
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7442": {
      "op": "POP"
    },
    "7443": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10498,
        10505
      ],
      "op": "SWAP1",
      "path": "2",
      "statement": 56
    },
    "7444": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        10498,
        10505
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "7445": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        9012,
        10512
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "7446": {
      "op": "POP"
    },
    "7447": {
      "op": "POP"
    },
    "7448": {
      "op": "POP"
    },
    "7449": {
      "op": "POP"
    },
    "7450": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "o",
      "offset": [
        9012,
        10512
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7451": {
      "fn": "Governance.createProposal",
      "offset": [
        13312,
        14074
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7452": {
      "offset": [
        23762,
        23779
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1D23"
    },
    "7455": {
      "offset": [
        23762,
        23777
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x9B1"
    },
    "7458": {
      "jump": "i",
      "offset": [
        23762,
        23779
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7459": {
      "branch": 157,
      "fn": "Governance.createProposal",
      "offset": [
        23762,
        23779
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7460": {
      "offset": [
        23754,
        23804
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1D66"
    },
    "7463": {
      "branch": 157,
      "offset": [
        23754,
        23804
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7464": {
      "fn": "Governance.createProposal",
      "offset": [
        23754,
        23804
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7466": {
      "fn": "Governance.createProposal",
      "offset": [
        23754,
        23804
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7467": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7471": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7473": {
      "op": "SHL"
    },
    "7474": {
      "offset": [
        23754,
        23804
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7475": {
      "fn": "Governance.createProposal",
      "offset": [
        23754,
        23804
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7476": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7478": {
      "offset": [
        23754,
        23804
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "7480": {
      "fn": "Governance.createProposal",
      "offset": [
        23754,
        23804
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7481": {
      "fn": "Governance.createProposal",
      "offset": [
        23754,
        23804
      ],
      "op": "ADD",
      "path": "2"
    },
    "7482": {
      "op": "MSTORE"
    },
    "7483": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "7485": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7487": {
      "op": "DUP3"
    },
    "7488": {
      "op": "ADD"
    },
    "7489": {
      "op": "MSTORE"
    },
    "7490": {
      "op": "PUSH20",
      "value": "0x135D5CDD081899481BDB881D1A1948189BD85C99"
    },
    "7511": {
      "op": "PUSH1",
      "value": "0x62"
    },
    "7513": {
      "op": "SHL"
    },
    "7514": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7516": {
      "op": "DUP3"
    },
    "7517": {
      "op": "ADD"
    },
    "7518": {
      "op": "MSTORE"
    },
    "7519": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7521": {
      "op": "ADD"
    },
    "7522": {
      "offset": [
        23754,
        23804
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF9A"
    },
    "7525": {
      "op": "JUMP"
    },
    "7526": {
      "offset": [
        23754,
        23804
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7527": {
      "fn": "Governance.createProposal",
      "offset": [
        13531,
        13532
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 57,
      "value": "0x1"
    },
    "7529": {
      "fn": "Governance.createProposal",
      "offset": [
        13512,
        13528
      ],
      "op": "DUP6",
      "path": "2"
    },
    "7530": {
      "fn": "Governance.createProposal",
      "offset": [
        13512,
        13532
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "7533": {
      "fn": "Governance.createProposal",
      "offset": [
        13512,
        13532
      ],
      "op": "AND",
      "path": "2"
    },
    "7534": {
      "branch": 158,
      "fn": "Governance.createProposal",
      "offset": [
        13512,
        13532
      ],
      "op": "GT",
      "path": "2"
    },
    "7535": {
      "fn": "Governance.createProposal",
      "offset": [
        13512,
        13558
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7536": {
      "fn": "Governance.createProposal",
      "offset": [
        13512,
        13558
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "7537": {
      "fn": "Governance.createProposal",
      "offset": [
        13512,
        13558
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1D7F"
    },
    "7540": {
      "branch": 158,
      "fn": "Governance.createProposal",
      "offset": [
        13512,
        13558
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7541": {
      "fn": "Governance.createProposal",
      "offset": [
        13512,
        13558
      ],
      "op": "POP",
      "path": "2"
    },
    "7542": {
      "fn": "Governance.createProposal",
      "offset": [
        13555,
        13558
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x101"
    },
    "7545": {
      "fn": "Governance.createProposal",
      "offset": [
        13536,
        13552
      ],
      "op": "DUP6",
      "path": "2"
    },
    "7546": {
      "fn": "Governance.createProposal",
      "offset": [
        13536,
        13558
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "7549": {
      "fn": "Governance.createProposal",
      "offset": [
        13536,
        13558
      ],
      "op": "AND",
      "path": "2"
    },
    "7550": {
      "branch": 159,
      "fn": "Governance.createProposal",
      "offset": [
        13536,
        13558
      ],
      "op": "LT",
      "path": "2"
    },
    "7551": {
      "fn": "Governance.createProposal",
      "offset": [
        13512,
        13558
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7552": {
      "fn": "Governance.createProposal",
      "offset": [
        13504,
        13588
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1DCB"
    },
    "7555": {
      "branch": 159,
      "fn": "Governance.createProposal",
      "offset": [
        13504,
        13588
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7556": {
      "fn": "Governance.createProposal",
      "offset": [
        13504,
        13588
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7558": {
      "fn": "Governance.createProposal",
      "offset": [
        13504,
        13588
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7559": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7563": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7565": {
      "op": "SHL"
    },
    "7566": {
      "fn": "Governance.createProposal",
      "offset": [
        13504,
        13588
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7567": {
      "fn": "Governance.createProposal",
      "offset": [
        13504,
        13588
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7568": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7570": {
      "fn": "Governance.createProposal",
      "offset": [
        13504,
        13588
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "7572": {
      "fn": "Governance.createProposal",
      "offset": [
        13504,
        13588
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7573": {
      "fn": "Governance.createProposal",
      "offset": [
        13504,
        13588
      ],
      "op": "ADD",
      "path": "2"
    },
    "7574": {
      "op": "MSTORE"
    },
    "7575": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "7577": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7579": {
      "op": "DUP3"
    },
    "7580": {
      "op": "ADD"
    },
    "7581": {
      "op": "MSTORE"
    },
    "7582": {
      "op": "PUSH32",
      "value": "0x696E76616C6964206E756D626572206F66206F7074696F6E7300000000000000"
    },
    "7615": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7617": {
      "op": "DUP3"
    },
    "7618": {
      "op": "ADD"
    },
    "7619": {
      "op": "MSTORE"
    },
    "7620": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7622": {
      "op": "ADD"
    },
    "7623": {
      "fn": "Governance.createProposal",
      "offset": [
        13504,
        13588
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF9A"
    },
    "7626": {
      "op": "JUMP"
    },
    "7627": {
      "fn": "Governance.createProposal",
      "offset": [
        13504,
        13588
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7628": {
      "fn": "Governance.createProposal",
      "offset": [
        13616,
        13617
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 58,
      "value": "0x1"
    },
    "7630": {
      "fn": "Governance.createProposal",
      "offset": [
        13598,
        13612
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x9"
    },
    "7632": {
      "fn": "Governance.createProposal",
      "offset": [
        13598,
        13612
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7634": {
      "fn": "Governance.createProposal",
      "offset": [
        13598,
        13617
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7635": {
      "fn": "Governance.createProposal",
      "offset": [
        13598,
        13617
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7636": {
      "fn": "Governance.createProposal",
      "offset": [
        13598,
        13617
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7637": {
      "fn": "Governance.createProposal",
      "offset": [
        13598,
        13617
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1DDE"
    },
    "7640": {
      "fn": "Governance.createProposal",
      "offset": [
        13598,
        13617
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7641": {
      "fn": "Governance.createProposal",
      "offset": [
        13598,
        13617
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7642": {
      "fn": "Governance.createProposal",
      "offset": [
        13598,
        13617
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x408D"
    },
    "7645": {
      "fn": "Governance.createProposal",
      "jump": "i",
      "offset": [
        13598,
        13617
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7646": {
      "fn": "Governance.createProposal",
      "offset": [
        13598,
        13617
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7647": {
      "fn": "Governance.createProposal",
      "offset": [
        13598,
        13617
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7648": {
      "fn": "Governance.createProposal",
      "offset": [
        13598,
        13617
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7649": {
      "fn": "Governance.createProposal",
      "offset": [
        13598,
        13617
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "7650": {
      "op": "POP"
    },
    "7651": {
      "op": "POP"
    },
    "7652": {
      "fn": "Governance.createProposal",
      "offset": [
        13688,
        13702
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x9"
    },
    "7654": {
      "fn": "Governance.createProposal",
      "offset": [
        13688,
        13702
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7655": {
      "fn": "Governance.createProposal",
      "offset": [
        13648,
        13675
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7657": {
      "fn": "Governance.createProposal",
      "offset": [
        13678,
        13703
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7658": {
      "fn": "Governance.createProposal",
      "offset": [
        13678,
        13703
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7659": {
      "fn": "Governance.createProposal",
      "offset": [
        13678,
        13703
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7660": {
      "fn": "Governance.createProposal",
      "offset": [
        13678,
        13687
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x8"
    },
    "7662": {
      "fn": "Governance.createProposal",
      "offset": [
        13678,
        13703
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7664": {
      "fn": "Governance.createProposal",
      "offset": [
        13678,
        13703
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7665": {
      "fn": "Governance.createProposal",
      "offset": [
        13678,
        13703
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7667": {
      "fn": "Governance.createProposal",
      "offset": [
        13678,
        13703
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7668": {
      "fn": "Governance.createProposal",
      "offset": [
        13678,
        13703
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "7669": {
      "fn": "Governance.createProposal",
      "offset": [
        13717,
        13740
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 59,
      "value": "0x3"
    },
    "7671": {
      "fn": "Governance.createProposal",
      "offset": [
        13717,
        13740
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7672": {
      "fn": "Governance.createProposal",
      "offset": [
        13717,
        13740
      ],
      "op": "ADD",
      "path": "2"
    },
    "7673": {
      "fn": "Governance.createProposal",
      "offset": [
        13717,
        13756
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7674": {
      "fn": "Governance.createProposal",
      "offset": [
        13717,
        13756
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7675": {
      "op": "PUSH15",
      "value": "0xFFFFFFFFFFFFFFFFFFFF0000000000"
    },
    "7691": {
      "op": "NOT"
    },
    "7692": {
      "fn": "Governance.createProposal",
      "offset": [
        13770,
        13809
      ],
      "op": "AND",
      "path": "2",
      "statement": 60
    },
    "7693": {
      "fn": "Governance.createProposal",
      "offset": [
        13717,
        13756
      ],
      "op": "PUSH6",
      "path": "2",
      "value": "0x10000000000"
    },
    "7700": {
      "fn": "Governance.createProposal",
      "offset": [
        13717,
        13756
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "7706": {
      "fn": "Governance.createProposal",
      "offset": [
        13717,
        13756
      ],
      "op": "DUP8",
      "path": "2"
    },
    "7707": {
      "fn": "Governance.createProposal",
      "offset": [
        13717,
        13756
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7708": {
      "fn": "Governance.createProposal",
      "offset": [
        13717,
        13756
      ],
      "op": "AND",
      "path": "2"
    },
    "7709": {
      "fn": "Governance.createProposal",
      "offset": [
        13717,
        13756
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7710": {
      "fn": "Governance.createProposal",
      "offset": [
        13717,
        13756
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7711": {
      "fn": "Governance.createProposal",
      "offset": [
        13717,
        13756
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7712": {
      "fn": "Governance.createProposal",
      "offset": [
        13717,
        13756
      ],
      "op": "MUL",
      "path": "2"
    },
    "7713": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "7719": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "7721": {
      "op": "SHL"
    },
    "7722": {
      "op": "NOT"
    },
    "7723": {
      "fn": "Governance.createProposal",
      "offset": [
        13770,
        13809
      ],
      "op": "AND",
      "path": "2"
    },
    "7724": {
      "fn": "Governance.createProposal",
      "offset": [
        13770,
        13809
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7725": {
      "fn": "Governance.createProposal",
      "offset": [
        13770,
        13809
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7726": {
      "fn": "Governance.createProposal",
      "offset": [
        13770,
        13809
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7727": {
      "fn": "Governance.createProposal",
      "offset": [
        13770,
        13809
      ],
      "op": "OR",
      "path": "2"
    },
    "7728": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7730": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "7732": {
      "op": "SHL"
    },
    "7733": {
      "fn": "Governance.createProposal",
      "offset": [
        13770,
        13809
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7734": {
      "fn": "Governance.createProposal",
      "offset": [
        13770,
        13809
      ],
      "op": "DUP7",
      "path": "2"
    },
    "7735": {
      "fn": "Governance.createProposal",
      "offset": [
        13770,
        13809
      ],
      "op": "AND",
      "path": "2"
    },
    "7736": {
      "fn": "Governance.createProposal",
      "offset": [
        13770,
        13809
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7737": {
      "fn": "Governance.createProposal",
      "offset": [
        13770,
        13809
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7738": {
      "fn": "Governance.createProposal",
      "offset": [
        13770,
        13809
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7739": {
      "fn": "Governance.createProposal",
      "offset": [
        13770,
        13809
      ],
      "op": "MUL",
      "path": "2"
    },
    "7740": {
      "fn": "Governance.createProposal",
      "offset": [
        13770,
        13809
      ],
      "op": "OR",
      "path": "2"
    },
    "7741": {
      "fn": "Governance.createProposal",
      "offset": [
        13770,
        13809
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7742": {
      "fn": "Governance.createProposal",
      "offset": [
        13770,
        13809
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "7743": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7745": {
      "fn": "Governance.createProposal",
      "offset": [
        13823,
        13849
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 61
    },
    "7746": {
      "fn": "Governance.createProposal",
      "offset": [
        13823,
        13849
      ],
      "op": "ADD",
      "path": "2"
    },
    "7747": {
      "fn": "Governance.createProposal",
      "offset": [
        13823,
        13868
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7748": {
      "fn": "Governance.createProposal",
      "offset": [
        13823,
        13868
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7749": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "7752": {
      "op": "NOT"
    },
    "7753": {
      "fn": "Governance.createProposal",
      "offset": [
        13823,
        13868
      ],
      "op": "AND",
      "path": "2"
    },
    "7754": {
      "fn": "Governance.createProposal",
      "offset": [
        13823,
        13868
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "7757": {
      "fn": "Governance.createProposal",
      "offset": [
        13823,
        13868
      ],
      "op": "DUP9",
      "path": "2"
    },
    "7758": {
      "fn": "Governance.createProposal",
      "offset": [
        13823,
        13868
      ],
      "op": "AND",
      "path": "2"
    },
    "7759": {
      "fn": "Governance.createProposal",
      "offset": [
        13823,
        13868
      ],
      "op": "OR",
      "path": "2"
    },
    "7760": {
      "fn": "Governance.createProposal",
      "offset": [
        13823,
        13868
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7761": {
      "fn": "Governance.createProposal",
      "offset": [
        13823,
        13868
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "7762": {
      "fn": "Governance.createProposal",
      "offset": [
        13678,
        13703
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7763": {
      "fn": "Governance.createProposal",
      "offset": [
        13882,
        13913
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 62,
      "value": "0x1E5D"
    },
    "7766": {
      "fn": "Governance.createProposal",
      "offset": [
        13904,
        13913
      ],
      "op": "DUP9",
      "path": "2"
    },
    "7767": {
      "fn": "Governance.createProposal",
      "offset": [
        13904,
        13913
      ],
      "op": "DUP11",
      "path": "2"
    },
    "7768": {
      "fn": "Governance.createProposal",
      "offset": [
        13678,
        13703
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7769": {
      "fn": "Governance.createProposal",
      "offset": [
        13882,
        13913
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x412F"
    },
    "7772": {
      "fn": "Governance.createProposal",
      "jump": "i",
      "offset": [
        13882,
        13913
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7773": {
      "fn": "Governance.createProposal",
      "offset": [
        13882,
        13913
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7774": {
      "fn": "Governance.createProposal",
      "offset": [
        13882,
        13913
      ],
      "op": "POP",
      "path": "2"
    },
    "7775": {
      "fn": "Governance.createProposal",
      "offset": [
        13924,
        14036
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 63,
      "value": "0x1E71"
    },
    "7778": {
      "fn": "Governance.createProposal",
      "offset": [
        13940,
        13949
      ],
      "op": "DUP9",
      "path": "2"
    },
    "7779": {
      "fn": "Governance.createProposal",
      "offset": [
        13940,
        13949
      ],
      "op": "DUP9",
      "path": "2"
    },
    "7780": {
      "fn": "Governance.createProposal",
      "offset": [
        13958,
        13972
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x9"
    },
    "7782": {
      "fn": "Governance.createProposal",
      "offset": [
        13958,
        13972
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7783": {
      "fn": "Governance.createProposal",
      "offset": [
        13975,
        13976
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7785": {
      "fn": "Governance.createProposal",
      "offset": [
        13978,
        13988
      ],
      "op": "DUP10",
      "path": "2"
    },
    "7786": {
      "fn": "Governance.createProposal",
      "offset": [
        13990,
        14003
      ],
      "op": "DUP10",
      "path": "2"
    },
    "7787": {
      "fn": "Governance.createProposal",
      "offset": [
        14005,
        14018
      ],
      "op": "DUP10",
      "path": "2"
    },
    "7788": {
      "fn": "Governance.createProposal",
      "offset": [
        14020,
        14035
      ],
      "op": "DUP10",
      "path": "2"
    },
    "7789": {
      "fn": "Governance.createProposal",
      "offset": [
        13924,
        13939
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3172"
    },
    "7792": {
      "fn": "Governance.createProposal",
      "jump": "i",
      "offset": [
        13924,
        14036
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7793": {
      "fn": "Governance.createProposal",
      "offset": [
        13924,
        14036
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7794": {
      "fn": "Governance.createProposal",
      "offset": [
        13494,
        14074
      ],
      "op": "POP",
      "path": "2"
    },
    "7795": {
      "fn": "Governance.createProposal",
      "offset": [
        13312,
        14074
      ],
      "op": "POP",
      "path": "2"
    },
    "7796": {
      "fn": "Governance.createProposal",
      "offset": [
        13312,
        14074
      ],
      "op": "POP",
      "path": "2"
    },
    "7797": {
      "fn": "Governance.createProposal",
      "offset": [
        13312,
        14074
      ],
      "op": "POP",
      "path": "2"
    },
    "7798": {
      "fn": "Governance.createProposal",
      "offset": [
        13312,
        14074
      ],
      "op": "POP",
      "path": "2"
    },
    "7799": {
      "fn": "Governance.createProposal",
      "offset": [
        13312,
        14074
      ],
      "op": "POP",
      "path": "2"
    },
    "7800": {
      "fn": "Governance.createProposal",
      "offset": [
        13312,
        14074
      ],
      "op": "POP",
      "path": "2"
    },
    "7801": {
      "fn": "Governance.createProposal",
      "offset": [
        13312,
        14074
      ],
      "op": "POP",
      "path": "2"
    },
    "7802": {
      "fn": "Governance.createProposal",
      "jump": "o",
      "offset": [
        13312,
        14074
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7803": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15345,
        16473
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7804": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15420,
        15447
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7806": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15450,
        15499
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1E96"
    },
    "7809": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15474,
        15498
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x6"
    },
    "7811": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5676,
        5688
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "7812": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5676,
        5688
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xF"
    },
    "7814": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5676,
        5688
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7815": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5676,
        5688
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7816": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5676,
        5688
      ],
      "op": "SIGNEXTEND",
      "path": "1"
    },
    "7817": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7819": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7821": {
      "op": "SHL"
    },
    "7822": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5655,
        5665
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7823": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5655,
        5665
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "7824": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5655,
        5665
      ],
      "op": "DIV",
      "path": "1"
    },
    "7825": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5655,
        5665
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7826": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5655,
        5665
      ],
      "op": "SIGNEXTEND",
      "path": "1"
    },
    "7827": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5648,
        5689
      ],
      "op": "SUB",
      "path": "1"
    },
    "7828": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5648,
        5689
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7829": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5344,
        5707
      ],
      "op": "JUMP",
      "path": "1"
    },
    "7830": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15450,
        15499
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7831": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15420,
        15499
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7832": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15420,
        15499
      ],
      "op": "POP",
      "path": "2"
    },
    "7833": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15509,
        15527
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1EA0"
    },
    "7836": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15509,
        15527
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x34BF"
    },
    "7839": {
      "fn": "Governance.claimRandomTaskForVerification",
      "jump": "i",
      "offset": [
        15509,
        15527
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7840": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15509,
        15527
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7841": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15551
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7843": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15537,
        15551
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7844": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15648,
        16414
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7845": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15670,
        15689
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7846": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15666,
        15667
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7847": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15666,
        15689
      ],
      "op": "LT",
      "path": "2"
    },
    "7848": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15648,
        16414
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "7849": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15648,
        16414
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x21AB"
    },
    "7852": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15648,
        16414
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7853": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15723,
        15771
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 64,
      "value": "0x1EB7"
    },
    "7856": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15743,
        15767
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x6"
    },
    "7858": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15769,
        15770
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7859": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15723,
        15742
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3101"
    },
    "7862": {
      "fn": "Governance.claimRandomTaskForVerification",
      "jump": "i",
      "offset": [
        15723,
        15771
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7863": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15723,
        15771
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7864": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15715,
        15772
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7866": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15795,
        15808
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 65
    },
    "7867": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15795,
        15808
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7868": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15795,
        15808
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7869": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15795,
        15800
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA"
    },
    "7871": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15795,
        15808
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7873": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15795,
        15808
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7874": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15795,
        15808
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7876": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15795,
        15808
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7877": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15795,
        15808
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7878": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15795,
        15808
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7879": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15795,
        15808
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "7880": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7881": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7882": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x140"
    },
    "7885": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7886": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "ADD",
      "path": "2"
    },
    "7887": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7888": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "7889": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7890": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7891": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7892": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15715,
        15772
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "7893": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15715,
        15772
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "7894": {
      "op": "POP"
    },
    "7895": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7896": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7897": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7898": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7899": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15795,
        15808
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7900": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15795,
        15808
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7901": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1EE5"
    },
    "7904": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7905": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3DA4"
    },
    "7908": {
      "fn": "Governance.claimRandomTaskForVerification",
      "jump": "i",
      "offset": [
        15786,
        15808
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7909": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7910": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7911": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "7913": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "ADD",
      "path": "2"
    },
    "7914": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7916": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7917": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7918": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "DIV",
      "path": "2"
    },
    "7919": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "MUL",
      "path": "2"
    },
    "7920": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7922": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "ADD",
      "path": "2"
    },
    "7923": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7925": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7926": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7927": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7928": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "ADD",
      "path": "2"
    },
    "7929": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7931": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7932": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7933": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "7934": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7935": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7936": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7937": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7938": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7939": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7941": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "ADD",
      "path": "2"
    },
    "7942": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7943": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7944": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7945": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1F11"
    },
    "7948": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7949": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3DA4"
    },
    "7952": {
      "fn": "Governance.claimRandomTaskForVerification",
      "jump": "i",
      "offset": [
        15786,
        15808
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7953": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7954": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7955": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "7956": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1F5E"
    },
    "7959": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7960": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7961": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "7963": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "LT",
      "path": "2"
    },
    "7964": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1F33"
    },
    "7967": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7968": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "7971": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7972": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7973": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7974": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "DIV",
      "path": "2"
    },
    "7975": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "MUL",
      "path": "2"
    },
    "7976": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7977": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7978": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7979": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7981": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "ADD",
      "path": "2"
    },
    "7982": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7983": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1F5E"
    },
    "7986": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7987": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7988": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7989": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "ADD",
      "path": "2"
    },
    "7990": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7991": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7992": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7994": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7995": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7997": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7999": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "8000": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8001": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8002": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8003": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8004": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8005": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8006": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8007": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "8009": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "ADD",
      "path": "2"
    },
    "8010": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8011": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8013": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "ADD",
      "path": "2"
    },
    "8014": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8015": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "DUP4",
      "path": "2"
    },
    "8016": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "GT",
      "path": "2"
    },
    "8017": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1F41"
    },
    "8020": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "8021": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8022": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8023": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "SUB",
      "path": "2"
    },
    "8024": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "8026": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "AND",
      "path": "2"
    },
    "8027": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8028": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "ADD",
      "path": "2"
    },
    "8029": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8030": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8031": {
      "op": "POP"
    },
    "8032": {
      "op": "POP"
    },
    "8033": {
      "op": "POP"
    },
    "8034": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8035": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "DUP4",
      "path": "2"
    },
    "8036": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8037": {
      "op": "POP"
    },
    "8038": {
      "op": "POP"
    },
    "8039": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "8041": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8042": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "ADD",
      "path": "2"
    },
    "8043": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8044": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "8050": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8051": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8052": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "AND",
      "path": "2"
    },
    "8053": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8055": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "DUP4",
      "path": "2"
    },
    "8056": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "ADD",
      "path": "2"
    },
    "8057": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8058": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "8060": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "DUP4",
      "path": "2"
    },
    "8061": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "ADD",
      "path": "2"
    },
    "8062": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8063": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8065": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "DUP4",
      "path": "2"
    },
    "8066": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "ADD",
      "path": "2"
    },
    "8067": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8068": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "8070": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "DUP4",
      "path": "2"
    },
    "8071": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "ADD",
      "path": "2"
    },
    "8072": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8073": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "8075": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "DUP4",
      "path": "2"
    },
    "8076": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "ADD",
      "path": "2"
    },
    "8077": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8078": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "8080": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8081": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "8082": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "ADD",
      "path": "2"
    },
    "8083": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8084": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "8086": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8087": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "AND",
      "path": "2"
    },
    "8088": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x80"
    },
    "8090": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "DUP4",
      "path": "2"
    },
    "8091": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "ADD",
      "path": "2"
    },
    "8092": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8093": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "8096": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8097": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8098": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "DIV",
      "path": "2"
    },
    "8099": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "PUSH3",
      "path": "2",
      "value": "0xFFFFFF"
    },
    "8103": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "AND",
      "path": "2"
    },
    "8104": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA0"
    },
    "8106": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "DUP5",
      "path": "2"
    },
    "8107": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "ADD",
      "path": "2"
    },
    "8108": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8109": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8111": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8113": {
      "op": "SHL"
    },
    "8114": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8115": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "DIV",
      "path": "2"
    },
    "8116": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8118": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8120": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "8122": {
      "op": "SHL"
    },
    "8123": {
      "op": "SUB"
    },
    "8124": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "AND",
      "path": "2"
    },
    "8125": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xC0"
    },
    "8127": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "DUP5",
      "path": "2"
    },
    "8128": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "ADD",
      "path": "2"
    },
    "8129": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8130": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8132": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "8134": {
      "op": "SHL"
    },
    "8135": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8136": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "DIV",
      "path": "2"
    },
    "8137": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "8140": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8141": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8142": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "AND",
      "path": "2"
    },
    "8143": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE0"
    },
    "8145": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "DUP6",
      "path": "2"
    },
    "8146": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "ADD",
      "path": "2"
    },
    "8147": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8148": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8150": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "8152": {
      "op": "SHL"
    },
    "8153": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "DUP4",
      "path": "2"
    },
    "8154": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "DIV",
      "path": "2"
    },
    "8155": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "AND",
      "path": "2"
    },
    "8156": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8157": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "DUP4",
      "path": "2"
    },
    "8158": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "ADD",
      "path": "2"
    },
    "8159": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8160": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8162": {
      "op": "PUSH1",
      "value": "0x90"
    },
    "8164": {
      "op": "SHL"
    },
    "8165": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8166": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "DIV",
      "path": "2"
    },
    "8167": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8168": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "AND",
      "path": "2"
    },
    "8169": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x120"
    },
    "8172": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8173": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8174": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "ADD",
      "path": "2"
    },
    "8175": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15786,
        15808
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8176": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15826,
        15862
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8177": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15826,
        15862
      ],
      "op": "ADD",
      "path": "2"
    },
    "8178": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15826,
        15862
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8179": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15826,
        15862
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8180": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15826,
        15862
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "8181": {
      "op": "POP"
    },
    "8182": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15865,
        15880
      ],
      "op": "TIMESTAMP",
      "path": "2"
    },
    "8183": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15826,
        15880
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8184": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15826,
        15880
      ],
      "op": "AND",
      "path": "2"
    },
    "8185": {
      "branch": 160,
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15826,
        15880
      ],
      "op": "LT",
      "path": "2"
    },
    "8186": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15826,
        15906
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8187": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15826,
        15906
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "8188": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15826,
        15906
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2010"
    },
    "8191": {
      "branch": 160,
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15826,
        15906
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "8192": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15826,
        15906
      ],
      "op": "POP",
      "path": "2"
    },
    "8193": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15900,
        15906
      ],
      "op": "DUP5",
      "path": "2"
    },
    "8194": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15884,
        15890
      ],
      "op": "DUP4",
      "path": "2"
    },
    "8195": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15884,
        15896
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8197": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15884,
        15896
      ],
      "op": "ADD",
      "path": "2"
    },
    "8198": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15884,
        15896
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8199": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15884,
        15906
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "8205": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15884,
        15906
      ],
      "op": "AND",
      "path": "2"
    },
    "8206": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15884,
        15906
      ],
      "op": "EQ",
      "path": "2"
    },
    "8207": {
      "branch": 161,
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15884,
        15906
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "8208": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15826,
        15906
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8209": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15826,
        15935
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8210": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15826,
        15935
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "8211": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15826,
        15935
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2025"
    },
    "8214": {
      "branch": 161,
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15826,
        15935
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "8215": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15826,
        15935
      ],
      "op": "POP",
      "path": "2"
    },
    "8216": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15929,
        15935
      ],
      "op": "DUP5",
      "path": "2"
    },
    "8217": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15910,
        15916
      ],
      "op": "DUP4",
      "path": "2"
    },
    "8218": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15910,
        15926
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "8221": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15910,
        15926
      ],
      "op": "ADD",
      "path": "2"
    },
    "8222": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15910,
        15926
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8223": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15910,
        15935
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "8226": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15910,
        15935
      ],
      "op": "AND",
      "path": "2"
    },
    "8227": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15910,
        15935
      ],
      "op": "EQ",
      "path": "2"
    },
    "8228": {
      "branch": 162,
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15910,
        15935
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "8229": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15826,
        15935
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8230": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        16376
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "8231": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        16376
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x21A3"
    },
    "8234": {
      "branch": 162,
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        16376
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "8235": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16114,
        16148
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 66,
      "value": "0xFFFF"
    },
    "8238": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16114,
        16148
      ],
      "op": "DUP6",
      "path": "2"
    },
    "8239": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16114,
        16148
      ],
      "op": "AND",
      "path": "2"
    },
    "8240": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16114,
        16131
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE0"
    },
    "8242": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16114,
        16131
      ],
      "op": "DUP5",
      "path": "2"
    },
    "8243": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16114,
        16131
      ],
      "op": "ADD",
      "path": "2"
    },
    "8244": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16114,
        16148
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8245": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16230,
        16246
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 67,
      "value": "0xC"
    },
    "8247": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16230,
        16246
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8248": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16212,
        16246
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2041"
    },
    "8251": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16212,
        16246
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8252": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16212,
        16227
      ],
      "op": "TIMESTAMP",
      "path": "2"
    },
    "8253": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16212,
        16246
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x408D"
    },
    "8256": {
      "fn": "Governance.claimRandomTaskForVerification",
      "jump": "i",
      "offset": [
        16212,
        16246
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8257": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16212,
        16246
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8258": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16166,
        16247
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "8264": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16166,
        16247
      ],
      "op": "AND",
      "path": "2"
    },
    "8265": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16166,
        16202
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x120"
    },
    "8268": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16166,
        16202
      ],
      "op": "DUP5",
      "path": "2"
    },
    "8269": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16166,
        16202
      ],
      "op": "ADD",
      "path": "2"
    },
    "8270": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16166,
        16247
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8271": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16265,
        16278
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 68,
      "value": "0x0"
    },
    "8273": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16265,
        16278
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8274": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16265,
        16278
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8275": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16265,
        16278
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8276": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16265,
        16270
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA"
    },
    "8278": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16265,
        16278
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8280": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16265,
        16278
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8281": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16265,
        16278
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8283": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16265,
        16278
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8284": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16265,
        16278
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "8285": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16265,
        16287
      ],
      "op": "DUP4",
      "path": "2"
    },
    "8286": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16265,
        16287
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8287": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16166,
        16172
      ],
      "op": "DUP5",
      "path": "2"
    },
    "8288": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16166,
        16172
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8289": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16265,
        16278
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8290": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16265,
        16278
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8291": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16265,
        16278
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8292": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16265,
        16287
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x206D"
    },
    "8295": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16265,
        16287
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8296": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16265,
        16278
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8297": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16265,
        16287
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3FB8"
    },
    "8300": {
      "fn": "Governance.claimRandomTaskForVerification",
      "jump": "i",
      "offset": [
        16265,
        16287
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8301": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16265,
        16287
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8302": {
      "op": "POP"
    },
    "8303": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16265,
        16287
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8305": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16265,
        16287
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8306": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16265,
        16287
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8307": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16265,
        16287
      ],
      "op": "ADD",
      "path": "2"
    },
    "8308": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16265,
        16287
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8309": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16265,
        16287
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "8311": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16265,
        16287
      ],
      "op": "DUP4",
      "path": "2"
    },
    "8312": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16265,
        16287
      ],
      "op": "ADD",
      "path": "2"
    },
    "8313": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16265,
        16287
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8314": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16265,
        16287
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8315": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "8321": {
      "op": "NOT"
    },
    "8322": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16265,
        16287
      ],
      "op": "AND",
      "path": "2"
    },
    "8323": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16265,
        16287
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "8329": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16265,
        16287
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "8330": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16265,
        16287
      ],
      "op": "DUP4",
      "path": "2"
    },
    "8331": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16265,
        16287
      ],
      "op": "AND",
      "path": "2"
    },
    "8332": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16265,
        16287
      ],
      "op": "OR",
      "path": "2"
    },
    "8333": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16265,
        16287
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8334": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16265,
        16287
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "8335": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16265,
        16287
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8337": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16265,
        16287
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8338": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16265,
        16287
      ],
      "op": "DUP6",
      "path": "2"
    },
    "8339": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16265,
        16287
      ],
      "op": "ADD",
      "path": "2"
    },
    "8340": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16265,
        16287
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8341": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16265,
        16287
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "8343": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16265,
        16287
      ],
      "op": "DUP6",
      "path": "2"
    },
    "8344": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16265,
        16287
      ],
      "op": "ADD",
      "path": "2"
    },
    "8345": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16265,
        16287
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "8346": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16265,
        16287
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "8348": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16265,
        16287
      ],
      "op": "DUP6",
      "path": "2"
    },
    "8349": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16265,
        16287
      ],
      "op": "ADD",
      "path": "2"
    },
    "8350": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16265,
        16287
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8351": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16265,
        16287
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "8353": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16265,
        16287
      ],
      "op": "DUP6",
      "path": "2"
    },
    "8354": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16265,
        16287
      ],
      "op": "ADD",
      "path": "2"
    },
    "8355": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16265,
        16287
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "8356": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16265,
        16287
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x80"
    },
    "8358": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16265,
        16287
      ],
      "op": "DUP6",
      "path": "2"
    },
    "8359": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16265,
        16287
      ],
      "op": "ADD",
      "path": "2"
    },
    "8360": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16265,
        16287
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8361": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16265,
        16287
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "8363": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16265,
        16287
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8364": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16265,
        16287
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "8365": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16265,
        16287
      ],
      "op": "ADD",
      "path": "2"
    },
    "8366": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16265,
        16287
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8367": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16265,
        16287
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8368": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16265,
        16287
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA0"
    },
    "8370": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16265,
        16287
      ],
      "op": "DUP8",
      "path": "2"
    },
    "8371": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16265,
        16287
      ],
      "op": "ADD",
      "path": "2"
    },
    "8372": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16265,
        16287
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8373": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16265,
        16287
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xC0"
    },
    "8375": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16265,
        16287
      ],
      "op": "DUP9",
      "path": "2"
    },
    "8376": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16265,
        16287
      ],
      "op": "ADD",
      "path": "2"
    },
    "8377": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16265,
        16287
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8378": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16265,
        16287
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE0"
    },
    "8380": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16265,
        16287
      ],
      "op": "DUP10",
      "path": "2"
    },
    "8381": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16265,
        16287
      ],
      "op": "ADD",
      "path": "2"
    },
    "8382": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16265,
        16287
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8383": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16265,
        16287
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "8386": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16265,
        16287
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8387": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16265,
        16287
      ],
      "op": "DUP12",
      "path": "2"
    },
    "8388": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16265,
        16287
      ],
      "op": "ADD",
      "path": "2"
    },
    "8389": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16265,
        16287
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8390": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16265,
        16287
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x120"
    },
    "8393": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16265,
        16287
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8394": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16265,
        16287
      ],
      "op": "SWAP12",
      "path": "2"
    },
    "8395": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16265,
        16287
      ],
      "op": "ADD",
      "path": "2"
    },
    "8396": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16265,
        16287
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8397": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16265,
        16287
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "8399": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16265,
        16287
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8400": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16265,
        16287
      ],
      "op": "SWAP11",
      "path": "2"
    },
    "8401": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16265,
        16287
      ],
      "op": "AND",
      "path": "2"
    },
    "8402": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "8407": {
      "op": "NOT"
    },
    "8408": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16265,
        16287
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8409": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16265,
        16287
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "8410": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16265,
        16287
      ],
      "op": "AND",
      "path": "2"
    },
    "8411": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16265,
        16287
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "8412": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16265,
        16287
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8413": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16265,
        16287
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "8414": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16265,
        16287
      ],
      "op": "OR",
      "path": "2"
    },
    "8415": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16265,
        16287
      ],
      "op": "PUSH3",
      "path": "2",
      "value": "0xFFFFFF"
    },
    "8419": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16265,
        16287
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8420": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16265,
        16287
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "8421": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16265,
        16287
      ],
      "op": "AND",
      "path": "2"
    },
    "8422": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16265,
        16287
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8423": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16265,
        16287
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "8424": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16265,
        16287
      ],
      "op": "MUL",
      "path": "2"
    },
    "8425": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16265,
        16287
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8426": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16265,
        16287
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8427": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16265,
        16287
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8428": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16265,
        16287
      ],
      "op": "OR",
      "path": "2"
    },
    "8429": {
      "op": "PUSH5",
      "value": "0x100000000"
    },
    "8435": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8437": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "8439": {
      "op": "SHL"
    },
    "8440": {
      "op": "SUB"
    },
    "8441": {
      "op": "NOT"
    },
    "8442": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16265,
        16287
      ],
      "op": "AND",
      "path": "2"
    },
    "8443": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8445": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8447": {
      "op": "SHL"
    },
    "8448": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8450": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8452": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "8454": {
      "op": "SHL"
    },
    "8455": {
      "op": "SUB"
    },
    "8456": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16265,
        16287
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8457": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16265,
        16287
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "8458": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16265,
        16287
      ],
      "op": "AND",
      "path": "2"
    },
    "8459": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16265,
        16287
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8460": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16265,
        16287
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8461": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16265,
        16287
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8462": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16265,
        16287
      ],
      "op": "MUL",
      "path": "2"
    },
    "8463": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "8466": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "8468": {
      "op": "SHL"
    },
    "8469": {
      "op": "NOT"
    },
    "8470": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16265,
        16287
      ],
      "op": "AND",
      "path": "2"
    },
    "8471": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16265,
        16287
      ],
      "op": "OR",
      "path": "2"
    },
    "8472": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8474": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "8476": {
      "op": "SHL"
    },
    "8477": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16265,
        16287
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "8480": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16265,
        16287
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "8481": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16265,
        16287
      ],
      "op": "DUP4",
      "path": "2"
    },
    "8482": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16265,
        16287
      ],
      "op": "AND",
      "path": "2"
    },
    "8483": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16265,
        16287
      ],
      "op": "MUL",
      "path": "2"
    },
    "8484": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16265,
        16287
      ],
      "op": "OR",
      "path": "2"
    },
    "8485": {
      "op": "PUSH7",
      "value": "0xFFFFFFFFFFFFFF"
    },
    "8493": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "8495": {
      "op": "SHL"
    },
    "8496": {
      "op": "NOT"
    },
    "8497": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16265,
        16287
      ],
      "op": "AND",
      "path": "2"
    },
    "8498": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8500": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "8502": {
      "op": "SHL"
    },
    "8503": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16265,
        16287
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8504": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16265,
        16287
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8505": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16265,
        16287
      ],
      "op": "SWAP8",
      "path": "2"
    },
    "8506": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16265,
        16287
      ],
      "op": "AND",
      "path": "2"
    },
    "8507": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16265,
        16287
      ],
      "op": "MUL",
      "path": "2"
    },
    "8508": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "8514": {
      "op": "PUSH1",
      "value": "0x90"
    },
    "8516": {
      "op": "SHL"
    },
    "8517": {
      "op": "NOT"
    },
    "8518": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16265,
        16287
      ],
      "op": "AND",
      "path": "2"
    },
    "8519": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16265,
        16287
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "8520": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16265,
        16287
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8521": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16265,
        16287
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "8522": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16265,
        16287
      ],
      "op": "OR",
      "path": "2"
    },
    "8523": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8525": {
      "op": "PUSH1",
      "value": "0x90"
    },
    "8527": {
      "op": "SHL"
    },
    "8528": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16265,
        16287
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "8529": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16265,
        16287
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8530": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16265,
        16287
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "8531": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16265,
        16287
      ],
      "op": "AND",
      "path": "2"
    },
    "8532": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16265,
        16287
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "8533": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16265,
        16287
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8534": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16265,
        16287
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "8535": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16265,
        16287
      ],
      "op": "MUL",
      "path": "2"
    },
    "8536": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16265,
        16287
      ],
      "op": "OR",
      "path": "2"
    },
    "8537": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16265,
        16287
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8538": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16265,
        16287
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "8539": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16265,
        16287
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "8540": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8542": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16347,
        16360
      ],
      "op": "DUP5",
      "path": "2",
      "statement": 69
    },
    "8543": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16347,
        16360
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8544": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16347,
        16360
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8545": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16347,
        16352
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA"
    },
    "8547": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16347,
        16360
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8548": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16347,
        16360
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "8549": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16347,
        16360
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8550": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16347,
        16360
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8551": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16347,
        16360
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8552": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16347,
        16360
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8553": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16347,
        16360
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "8554": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16310,
        16361
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8555": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16310,
        16361
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8556": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16310,
        16361
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0xF20A22B1AA6D8BA4BF99C845FB1F02F4879BA83155BDE0F82F49CB58675DF268"
    },
    "8589": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16310,
        16361
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8590": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16310,
        16361
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x219A"
    },
    "8593": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16310,
        16361
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8594": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16331,
        16337
      ],
      "op": "DUP9",
      "path": "2"
    },
    "8595": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16331,
        16337
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8596": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16347,
        16360
      ],
      "op": "DUP7",
      "path": "2"
    },
    "8597": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16347,
        16360
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8598": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16310,
        16361
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x41EE"
    },
    "8601": {
      "fn": "Governance.claimRandomTaskForVerification",
      "jump": "i",
      "offset": [
        16310,
        16361
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8602": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16310,
        16361
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8603": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16310,
        16361
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8605": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16310,
        16361
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8606": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16310,
        16361
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8607": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16310,
        16361
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8608": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16310,
        16361
      ],
      "op": "SUB",
      "path": "2"
    },
    "8609": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16310,
        16361
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8610": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16310,
        16361
      ],
      "op": "LOG1",
      "path": "2"
    },
    "8611": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15822,
        16376
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8612": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16399,
        16402
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 70,
      "value": "0x1"
    },
    "8614": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        16399,
        16402
      ],
      "op": "ADD",
      "path": "2"
    },
    "8615": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15648,
        16414
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1EA4"
    },
    "8618": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15648,
        16414
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8619": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15648,
        16414
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8620": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15648,
        16414
      ],
      "op": "POP",
      "path": "2"
    },
    "8621": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15410,
        16473
      ],
      "op": "POP",
      "path": "2"
    },
    "8622": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15410,
        16473
      ],
      "op": "POP",
      "path": "2"
    },
    "8623": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15410,
        16473
      ],
      "op": "POP",
      "path": "2"
    },
    "8624": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        15345,
        16473
      ],
      "op": "POP",
      "path": "2"
    },
    "8625": {
      "fn": "Governance.claimRandomTaskForVerification",
      "jump": "o",
      "offset": [
        15345,
        16473
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8626": {
      "fn": "Governance.submitVerification",
      "offset": [
        18980,
        23188
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8627": {
      "fn": "Governance.submitVerification",
      "offset": [
        19144,
        19154
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 71,
      "value": "0x2"
    },
    "8629": {
      "fn": "Governance.submitVerification",
      "offset": [
        19144,
        19154
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8630": {
      "fn": "Governance.submitVerification",
      "offset": [
        19144,
        19170
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8632": {
      "fn": "Governance.submitVerification",
      "offset": [
        19144,
        19170
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8633": {
      "op": "PUSH4",
      "value": "0x31A9108F"
    },
    "8638": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "8640": {
      "op": "SHL"
    },
    "8641": {
      "fn": "Governance.submitVerification",
      "offset": [
        19144,
        19170
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8642": {
      "fn": "Governance.submitVerification",
      "offset": [
        19144,
        19170
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8643": {
      "fn": "Governance.submitVerification",
      "offset": [
        19144,
        19170
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "8645": {
      "fn": "Governance.submitVerification",
      "offset": [
        19144,
        19170
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8646": {
      "fn": "Governance.submitVerification",
      "offset": [
        19144,
        19170
      ],
      "op": "ADD",
      "path": "2"
    },
    "8647": {
      "op": "DUP6"
    },
    "8648": {
      "op": "SWAP1"
    },
    "8649": {
      "op": "MSTORE"
    },
    "8650": {
      "fn": "Governance.submitVerification",
      "offset": [
        19174,
        19184
      ],
      "op": "CALLER",
      "path": "2"
    },
    "8651": {
      "fn": "Governance.submitVerification",
      "offset": [
        19174,
        19184
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8652": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8654": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8656": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8658": {
      "op": "SHL"
    },
    "8659": {
      "op": "SUB"
    },
    "8660": {
      "fn": "Governance.submitVerification",
      "offset": [
        19144,
        19154
      ],
      "op": "AND",
      "path": "2"
    },
    "8661": {
      "fn": "Governance.submitVerification",
      "offset": [
        19144,
        19154
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8662": {
      "fn": "Governance.submitVerification",
      "offset": [
        19144,
        19162
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x6352211E"
    },
    "8667": {
      "fn": "Governance.submitVerification",
      "offset": [
        19144,
        19162
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8668": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8670": {
      "op": "ADD"
    },
    "8671": {
      "fn": "Governance.submitVerification",
      "offset": [
        19144,
        19170
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8673": {
      "fn": "Governance.submitVerification",
      "offset": [
        19144,
        19170
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8675": {
      "fn": "Governance.submitVerification",
      "offset": [
        19144,
        19170
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8676": {
      "fn": "Governance.submitVerification",
      "offset": [
        19144,
        19170
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8677": {
      "fn": "Governance.submitVerification",
      "offset": [
        19144,
        19170
      ],
      "op": "DUP4",
      "path": "2"
    },
    "8678": {
      "fn": "Governance.submitVerification",
      "offset": [
        19144,
        19170
      ],
      "op": "SUB",
      "path": "2"
    },
    "8679": {
      "fn": "Governance.submitVerification",
      "offset": [
        19144,
        19170
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8680": {
      "fn": "Governance.submitVerification",
      "offset": [
        19144,
        19170
      ],
      "op": "DUP7",
      "path": "2"
    },
    "8681": {
      "fn": "Governance.submitVerification",
      "offset": [
        19144,
        19170
      ],
      "op": "GAS",
      "path": "2"
    },
    "8682": {
      "fn": "Governance.submitVerification",
      "offset": [
        19144,
        19170
      ],
      "op": "STATICCALL",
      "path": "2"
    },
    "8683": {
      "fn": "Governance.submitVerification",
      "offset": [
        19144,
        19170
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "8684": {
      "fn": "Governance.submitVerification",
      "offset": [
        19144,
        19170
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8685": {
      "fn": "Governance.submitVerification",
      "offset": [
        19144,
        19170
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "8686": {
      "fn": "Governance.submitVerification",
      "offset": [
        19144,
        19170
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x21FB"
    },
    "8689": {
      "fn": "Governance.submitVerification",
      "offset": [
        19144,
        19170
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "8690": {
      "fn": "Governance.submitVerification",
      "offset": [
        19144,
        19170
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "8691": {
      "fn": "Governance.submitVerification",
      "offset": [
        19144,
        19170
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8693": {
      "fn": "Governance.submitVerification",
      "offset": [
        19144,
        19170
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8694": {
      "fn": "Governance.submitVerification",
      "offset": [
        19144,
        19170
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "8695": {
      "fn": "Governance.submitVerification",
      "offset": [
        19144,
        19170
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "8696": {
      "fn": "Governance.submitVerification",
      "offset": [
        19144,
        19170
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8698": {
      "fn": "Governance.submitVerification",
      "offset": [
        19144,
        19170
      ],
      "op": "REVERT",
      "path": "2"
    },
    "8699": {
      "fn": "Governance.submitVerification",
      "offset": [
        19144,
        19170
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8700": {
      "fn": "Governance.submitVerification",
      "offset": [
        19144,
        19170
      ],
      "op": "POP",
      "path": "2"
    },
    "8701": {
      "fn": "Governance.submitVerification",
      "offset": [
        19144,
        19170
      ],
      "op": "POP",
      "path": "2"
    },
    "8702": {
      "fn": "Governance.submitVerification",
      "offset": [
        19144,
        19170
      ],
      "op": "POP",
      "path": "2"
    },
    "8703": {
      "fn": "Governance.submitVerification",
      "offset": [
        19144,
        19170
      ],
      "op": "POP",
      "path": "2"
    },
    "8704": {
      "fn": "Governance.submitVerification",
      "offset": [
        19144,
        19170
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8706": {
      "fn": "Governance.submitVerification",
      "offset": [
        19144,
        19170
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8707": {
      "fn": "Governance.submitVerification",
      "offset": [
        19144,
        19170
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "8708": {
      "fn": "Governance.submitVerification",
      "offset": [
        19144,
        19170
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "8710": {
      "fn": "Governance.submitVerification",
      "offset": [
        19144,
        19170
      ],
      "op": "NOT",
      "path": "2"
    },
    "8711": {
      "fn": "Governance.submitVerification",
      "offset": [
        19144,
        19170
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "8713": {
      "fn": "Governance.submitVerification",
      "offset": [
        19144,
        19170
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8714": {
      "fn": "Governance.submitVerification",
      "offset": [
        19144,
        19170
      ],
      "op": "ADD",
      "path": "2"
    },
    "8715": {
      "fn": "Governance.submitVerification",
      "offset": [
        19144,
        19170
      ],
      "op": "AND",
      "path": "2"
    },
    "8716": {
      "fn": "Governance.submitVerification",
      "offset": [
        19144,
        19170
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8717": {
      "fn": "Governance.submitVerification",
      "offset": [
        19144,
        19170
      ],
      "op": "ADD",
      "path": "2"
    },
    "8718": {
      "fn": "Governance.submitVerification",
      "offset": [
        19144,
        19170
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8719": {
      "fn": "Governance.submitVerification",
      "offset": [
        19144,
        19170
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8721": {
      "fn": "Governance.submitVerification",
      "offset": [
        19144,
        19170
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8722": {
      "fn": "Governance.submitVerification",
      "offset": [
        19144,
        19170
      ],
      "op": "POP",
      "path": "2"
    },
    "8723": {
      "fn": "Governance.submitVerification",
      "offset": [
        19144,
        19170
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8724": {
      "fn": "Governance.submitVerification",
      "offset": [
        19144,
        19170
      ],
      "op": "ADD",
      "path": "2"
    },
    "8725": {
      "fn": "Governance.submitVerification",
      "offset": [
        19144,
        19170
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8726": {
      "fn": "Governance.submitVerification",
      "offset": [
        19144,
        19170
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x221F"
    },
    "8729": {
      "fn": "Governance.submitVerification",
      "offset": [
        19144,
        19170
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8730": {
      "fn": "Governance.submitVerification",
      "offset": [
        19144,
        19170
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8731": {
      "fn": "Governance.submitVerification",
      "offset": [
        19144,
        19170
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3E5B"
    },
    "8734": {
      "fn": "Governance.submitVerification",
      "jump": "i",
      "offset": [
        19144,
        19170
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8735": {
      "fn": "Governance.submitVerification",
      "offset": [
        19144,
        19170
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8736": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8738": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8740": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8742": {
      "op": "SHL"
    },
    "8743": {
      "op": "SUB"
    },
    "8744": {
      "fn": "Governance.submitVerification",
      "offset": [
        19144,
        19184
      ],
      "op": "AND",
      "path": "2"
    },
    "8745": {
      "branch": 163,
      "fn": "Governance.submitVerification",
      "offset": [
        19144,
        19184
      ],
      "op": "EQ",
      "path": "2"
    },
    "8746": {
      "fn": "Governance.submitVerification",
      "offset": [
        19144,
        19221
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8747": {
      "fn": "Governance.submitVerification",
      "offset": [
        19144,
        19221
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "8748": {
      "fn": "Governance.submitVerification",
      "offset": [
        19144,
        19221
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2250"
    },
    "8751": {
      "branch": 163,
      "fn": "Governance.submitVerification",
      "offset": [
        19144,
        19221
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "8752": {
      "op": "POP"
    },
    "8753": {
      "fn": "Governance.submitVerification",
      "offset": [
        19188,
        19202
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8755": {
      "fn": "Governance.submitVerification",
      "offset": [
        19188,
        19202
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8756": {
      "fn": "Governance.submitVerification",
      "offset": [
        19188,
        19202
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8757": {
      "fn": "Governance.submitVerification",
      "offset": [
        19188,
        19202
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8758": {
      "fn": "Governance.submitVerification",
      "offset": [
        19188,
        19193
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA"
    },
    "8760": {
      "fn": "Governance.submitVerification",
      "offset": [
        19188,
        19202
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8762": {
      "fn": "Governance.submitVerification",
      "offset": [
        19188,
        19202
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8763": {
      "fn": "Governance.submitVerification",
      "offset": [
        19188,
        19202
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8765": {
      "fn": "Governance.submitVerification",
      "offset": [
        19188,
        19202
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8766": {
      "fn": "Governance.submitVerification",
      "offset": [
        19188,
        19202
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "8767": {
      "fn": "Governance.submitVerification",
      "offset": [
        19188,
        19213
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "8769": {
      "fn": "Governance.submitVerification",
      "offset": [
        19188,
        19213
      ],
      "op": "ADD",
      "path": "2"
    },
    "8770": {
      "fn": "Governance.submitVerification",
      "offset": [
        19188,
        19213
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8771": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8773": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "8775": {
      "op": "SHL"
    },
    "8776": {
      "fn": "Governance.submitVerification",
      "offset": [
        19188,
        19213
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8777": {
      "fn": "Governance.submitVerification",
      "offset": [
        19188,
        19213
      ],
      "op": "DIV",
      "path": "2"
    },
    "8778": {
      "fn": "Governance.submitVerification",
      "offset": [
        19188,
        19213
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "8781": {
      "fn": "Governance.submitVerification",
      "offset": [
        19188,
        19213
      ],
      "op": "AND",
      "path": "2"
    },
    "8782": {
      "fn": "Governance.submitVerification",
      "offset": [
        19188,
        19221
      ],
      "op": "DUP4",
      "path": "2"
    },
    "8783": {
      "branch": 164,
      "fn": "Governance.submitVerification",
      "offset": [
        19188,
        19221
      ],
      "op": "EQ",
      "path": "2"
    },
    "8784": {
      "fn": "Governance.submitVerification",
      "offset": [
        19144,
        19221
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8785": {
      "fn": "Governance.submitVerification",
      "offset": [
        19136,
        19258
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x229C"
    },
    "8788": {
      "branch": 164,
      "fn": "Governance.submitVerification",
      "offset": [
        19136,
        19258
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "8789": {
      "fn": "Governance.submitVerification",
      "offset": [
        19136,
        19258
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8791": {
      "fn": "Governance.submitVerification",
      "offset": [
        19136,
        19258
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8792": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8796": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8798": {
      "op": "SHL"
    },
    "8799": {
      "fn": "Governance.submitVerification",
      "offset": [
        19136,
        19258
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8800": {
      "fn": "Governance.submitVerification",
      "offset": [
        19136,
        19258
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8801": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8803": {
      "fn": "Governance.submitVerification",
      "offset": [
        19136,
        19258
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "8805": {
      "fn": "Governance.submitVerification",
      "offset": [
        19136,
        19258
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8806": {
      "fn": "Governance.submitVerification",
      "offset": [
        19136,
        19258
      ],
      "op": "ADD",
      "path": "2"
    },
    "8807": {
      "op": "DUP2"
    },
    "8808": {
      "op": "SWAP1"
    },
    "8809": {
      "op": "MSTORE"
    },
    "8810": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8812": {
      "op": "DUP3"
    },
    "8813": {
      "op": "ADD"
    },
    "8814": {
      "op": "MSTORE"
    },
    "8815": {
      "op": "PUSH32",
      "value": "0x4D757374206265206F776E6572206F662061737369676E65642077697A617264"
    },
    "8848": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8850": {
      "op": "DUP3"
    },
    "8851": {
      "op": "ADD"
    },
    "8852": {
      "op": "MSTORE"
    },
    "8853": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8855": {
      "op": "ADD"
    },
    "8856": {
      "fn": "Governance.submitVerification",
      "offset": [
        19136,
        19258
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF9A"
    },
    "8859": {
      "op": "JUMP"
    },
    "8860": {
      "fn": "Governance.submitVerification",
      "offset": [
        19136,
        19258
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8861": {
      "fn": "Governance.submitVerification",
      "offset": [
        19293,
        19294
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 72,
      "value": "0x0"
    },
    "8863": {
      "fn": "Governance.submitVerification",
      "offset": [
        19276,
        19283
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8864": {
      "fn": "Governance.submitVerification",
      "offset": [
        19276,
        19290
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8865": {
      "branch": 165,
      "fn": "Governance.submitVerification",
      "offset": [
        19276,
        19294
      ],
      "op": "GT",
      "path": "2"
    },
    "8866": {
      "fn": "Governance.submitVerification",
      "offset": [
        19268,
        19295
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x22AA"
    },
    "8869": {
      "branch": 165,
      "fn": "Governance.submitVerification",
      "offset": [
        19268,
        19295
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "8870": {
      "fn": "Governance.submitVerification",
      "offset": [
        19268,
        19295
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8872": {
      "fn": "Governance.submitVerification",
      "offset": [
        19268,
        19295
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8873": {
      "fn": "Governance.submitVerification",
      "offset": [
        19268,
        19295
      ],
      "op": "REVERT",
      "path": "2"
    },
    "8874": {
      "fn": "Governance.submitVerification",
      "offset": [
        19268,
        19295
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8875": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19324
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8877": {
      "fn": "Governance.submitVerification",
      "offset": [
        19327,
        19341
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8878": {
      "fn": "Governance.submitVerification",
      "offset": [
        19327,
        19341
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8879": {
      "fn": "Governance.submitVerification",
      "offset": [
        19327,
        19341
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8880": {
      "fn": "Governance.submitVerification",
      "offset": [
        19327,
        19332
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA"
    },
    "8882": {
      "fn": "Governance.submitVerification",
      "offset": [
        19327,
        19341
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8884": {
      "fn": "Governance.submitVerification",
      "offset": [
        19327,
        19341
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8885": {
      "fn": "Governance.submitVerification",
      "offset": [
        19327,
        19341
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8887": {
      "fn": "Governance.submitVerification",
      "offset": [
        19327,
        19341
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8888": {
      "fn": "Governance.submitVerification",
      "offset": [
        19327,
        19341
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8889": {
      "fn": "Governance.submitVerification",
      "offset": [
        19327,
        19341
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "8890": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8891": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8892": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x140"
    },
    "8895": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8896": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "ADD",
      "path": "2"
    },
    "8897": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8898": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "8899": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8900": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8901": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8902": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8903": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8904": {
      "fn": "Governance.submitVerification",
      "offset": [
        19327,
        19341
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8905": {
      "fn": "Governance.submitVerification",
      "offset": [
        19327,
        19341
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8906": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x22D2"
    },
    "8909": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8910": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3DA4"
    },
    "8913": {
      "fn": "Governance.submitVerification",
      "jump": "i",
      "offset": [
        19306,
        19341
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8914": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8915": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8916": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "8918": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "ADD",
      "path": "2"
    },
    "8919": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8921": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8922": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8923": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "DIV",
      "path": "2"
    },
    "8924": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "MUL",
      "path": "2"
    },
    "8925": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8927": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "ADD",
      "path": "2"
    },
    "8928": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8930": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8931": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8932": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8933": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "ADD",
      "path": "2"
    },
    "8934": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8936": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8937": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8938": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "8939": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8940": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8941": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8942": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8943": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8944": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8946": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "ADD",
      "path": "2"
    },
    "8947": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8948": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8949": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8950": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x22FE"
    },
    "8953": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8954": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3DA4"
    },
    "8957": {
      "fn": "Governance.submitVerification",
      "jump": "i",
      "offset": [
        19306,
        19341
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8958": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8959": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8960": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "8961": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x234B"
    },
    "8964": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "8965": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8966": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "8968": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "LT",
      "path": "2"
    },
    "8969": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2320"
    },
    "8972": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "8973": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "8976": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8977": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "DUP4",
      "path": "2"
    },
    "8978": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8979": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "DIV",
      "path": "2"
    },
    "8980": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "MUL",
      "path": "2"
    },
    "8981": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "DUP4",
      "path": "2"
    },
    "8982": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8983": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8984": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8986": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "ADD",
      "path": "2"
    },
    "8987": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8988": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x234B"
    },
    "8991": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8992": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8993": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8994": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "ADD",
      "path": "2"
    },
    "8995": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8996": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8997": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8999": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9000": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "9002": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9004": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "9005": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9006": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9007": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9008": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "9009": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9010": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9011": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9012": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "9014": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "ADD",
      "path": "2"
    },
    "9015": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9016": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "9018": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "ADD",
      "path": "2"
    },
    "9019": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9020": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "DUP4",
      "path": "2"
    },
    "9021": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "GT",
      "path": "2"
    },
    "9022": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x232E"
    },
    "9025": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "9026": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "DUP3",
      "path": "2"
    },
    "9027": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9028": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "SUB",
      "path": "2"
    },
    "9029": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "9031": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "AND",
      "path": "2"
    },
    "9032": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "DUP3",
      "path": "2"
    },
    "9033": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "ADD",
      "path": "2"
    },
    "9034": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9035": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9036": {
      "op": "POP"
    },
    "9037": {
      "op": "POP"
    },
    "9038": {
      "op": "POP"
    },
    "9039": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9040": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "DUP4",
      "path": "2"
    },
    "9041": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9042": {
      "op": "POP"
    },
    "9043": {
      "op": "POP"
    },
    "9044": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "9046": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "DUP3",
      "path": "2"
    },
    "9047": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9048": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "ADD",
      "path": "2"
    },
    "9049": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "9050": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "9056": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9057": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9058": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "AND",
      "path": "2"
    },
    "9059": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "9061": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "DUP5",
      "path": "2"
    },
    "9062": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "ADD",
      "path": "2"
    },
    "9063": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9064": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "9066": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "DUP5",
      "path": "2"
    },
    "9067": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "ADD",
      "path": "2"
    },
    "9068": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "9069": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9071": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "DUP5",
      "path": "2"
    },
    "9072": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "ADD",
      "path": "2"
    },
    "9073": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9074": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "9076": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "DUP5",
      "path": "2"
    },
    "9077": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "ADD",
      "path": "2"
    },
    "9078": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "9079": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "9081": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "DUP5",
      "path": "2"
    },
    "9082": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "ADD",
      "path": "2"
    },
    "9083": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9084": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "9086": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9087": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "9088": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "ADD",
      "path": "2"
    },
    "9089": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "9090": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "9092": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9093": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "AND",
      "path": "2"
    },
    "9094": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x80"
    },
    "9096": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "DUP5",
      "path": "2"
    },
    "9097": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "ADD",
      "path": "2"
    },
    "9098": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9099": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "9102": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9103": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "DUP3",
      "path": "2"
    },
    "9104": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "DIV",
      "path": "2"
    },
    "9105": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "PUSH3",
      "path": "2",
      "value": "0xFFFFFF"
    },
    "9109": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "AND",
      "path": "2"
    },
    "9110": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA0"
    },
    "9112": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "DUP6",
      "path": "2"
    },
    "9113": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "ADD",
      "path": "2"
    },
    "9114": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9115": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9117": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9119": {
      "op": "SHL"
    },
    "9120": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "DUP3",
      "path": "2"
    },
    "9121": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "DIV",
      "path": "2"
    },
    "9122": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9124": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9126": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "9128": {
      "op": "SHL"
    },
    "9129": {
      "op": "SUB"
    },
    "9130": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "AND",
      "path": "2"
    },
    "9131": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xC0"
    },
    "9133": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "DUP6",
      "path": "2"
    },
    "9134": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "ADD",
      "path": "2"
    },
    "9135": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9136": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9138": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "9140": {
      "op": "SHL"
    },
    "9141": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "DUP3",
      "path": "2"
    },
    "9142": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "DIV",
      "path": "2"
    },
    "9143": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "9146": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9147": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9148": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "AND",
      "path": "2"
    },
    "9149": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE0"
    },
    "9151": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "DUP7",
      "path": "2"
    },
    "9152": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "ADD",
      "path": "2"
    },
    "9153": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9154": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9156": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "9158": {
      "op": "SHL"
    },
    "9159": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "DUP4",
      "path": "2"
    },
    "9160": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "DIV",
      "path": "2"
    },
    "9161": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9162": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "AND",
      "path": "2"
    },
    "9163": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "DUP3",
      "path": "2"
    },
    "9164": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "DUP7",
      "path": "2"
    },
    "9165": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "ADD",
      "path": "2"
    },
    "9166": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9167": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9169": {
      "op": "PUSH1",
      "value": "0x90"
    },
    "9171": {
      "op": "SHL"
    },
    "9172": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9173": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "9174": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "DIV",
      "path": "2"
    },
    "9175": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9176": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "9177": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "AND",
      "path": "2"
    },
    "9178": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x120"
    },
    "9181": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9182": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "9183": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "ADD",
      "path": "2"
    },
    "9184": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "9185": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9186": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "9187": {
      "fn": "Governance.submitVerification",
      "offset": [
        19306,
        19341
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9188": {
      "fn": "Governance.submitVerification",
      "offset": [
        19463,
        19479
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9189": {
      "fn": "Governance.submitVerification",
      "offset": [
        19463,
        19479
      ],
      "op": "DUP4",
      "path": "2"
    },
    "9190": {
      "fn": "Governance.submitVerification",
      "offset": [
        19463,
        19479
      ],
      "op": "ADD",
      "path": "2"
    },
    "9191": {
      "fn": "Governance.submitVerification",
      "offset": [
        19463,
        19479
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9192": {
      "fn": "Governance.submitVerification",
      "offset": [
        19463,
        19479
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "9193": {
      "fn": "Governance.submitVerification",
      "offset": [
        19463,
        19479
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "9194": {
      "op": "POP"
    },
    "9195": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9197": {
      "op": "SWAP3"
    },
    "9198": {
      "fn": "Governance.submitVerification",
      "offset": [
        19463,
        19483
      ],
      "op": "AND",
      "path": "2"
    },
    "9199": {
      "branch": 166,
      "fn": "Governance.submitVerification",
      "offset": [
        19463,
        19483
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "9200": {
      "fn": "Governance.submitVerification",
      "offset": [
        19460,
        19665
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2468"
    },
    "9203": {
      "branch": 166,
      "fn": "Governance.submitVerification",
      "offset": [
        19460,
        19665
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "9204": {
      "fn": "Governance.submitVerification",
      "offset": [
        19503,
        19512
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9206": {
      "fn": "Governance.submitVerification",
      "offset": [
        19499,
        19655
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9207": {
      "fn": "Governance.submitVerification",
      "offset": [
        19522,
        19529
      ],
      "op": "DUP5",
      "path": "2"
    },
    "9208": {
      "fn": "Governance.submitVerification",
      "offset": [
        19522,
        19536
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9209": {
      "fn": "Governance.submitVerification",
      "offset": [
        19518,
        19519
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9210": {
      "fn": "Governance.submitVerification",
      "offset": [
        19518,
        19536
      ],
      "op": "LT",
      "path": "2"
    },
    "9211": {
      "fn": "Governance.submitVerification",
      "offset": [
        19499,
        19655
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "9212": {
      "fn": "Governance.submitVerification",
      "offset": [
        19499,
        19655
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2466"
    },
    "9215": {
      "fn": "Governance.submitVerification",
      "offset": [
        19499,
        19655
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "9216": {
      "fn": "Governance.submitVerification",
      "offset": [
        19596,
        19603
      ],
      "op": "DUP5",
      "path": "2",
      "statement": 73
    },
    "9217": {
      "fn": "Governance.submitVerification",
      "offset": [
        19604,
        19605
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9218": {
      "fn": "Governance.submitVerification",
      "offset": [
        19596,
        19606
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9219": {
      "fn": "Governance.submitVerification",
      "offset": [
        19596,
        19606
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9220": {
      "fn": "Governance.submitVerification",
      "offset": [
        19596,
        19606
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9221": {
      "fn": "Governance.submitVerification",
      "offset": [
        19596,
        19606
      ],
      "op": "LT",
      "path": "2"
    },
    "9222": {
      "fn": "Governance.submitVerification",
      "offset": [
        19596,
        19606
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2411"
    },
    "9225": {
      "fn": "Governance.submitVerification",
      "offset": [
        19596,
        19606
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "9226": {
      "fn": "Governance.submitVerification",
      "offset": [
        19596,
        19606
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2411"
    },
    "9229": {
      "fn": "Governance.submitVerification",
      "offset": [
        19596,
        19606
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3DDE"
    },
    "9232": {
      "fn": "Governance.submitVerification",
      "jump": "i",
      "offset": [
        19596,
        19606
      ],
      "op": "JUMP",
      "path": "2"
    },
    "9233": {
      "fn": "Governance.submitVerification",
      "offset": [
        19596,
        19606
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9234": {
      "fn": "Governance.submitVerification",
      "offset": [
        19596,
        19606
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "9236": {
      "fn": "Governance.submitVerification",
      "offset": [
        19596,
        19606
      ],
      "op": "MUL",
      "path": "2"
    },
    "9237": {
      "fn": "Governance.submitVerification",
      "offset": [
        19596,
        19606
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "9239": {
      "fn": "Governance.submitVerification",
      "offset": [
        19596,
        19606
      ],
      "op": "ADD",
      "path": "2"
    },
    "9240": {
      "fn": "Governance.submitVerification",
      "offset": [
        19596,
        19606
      ],
      "op": "ADD",
      "path": "2"
    },
    "9241": {
      "fn": "Governance.submitVerification",
      "offset": [
        19596,
        19606
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9242": {
      "fn": "Governance.submitVerification",
      "offset": [
        19579,
        19607
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9244": {
      "fn": "Governance.submitVerification",
      "offset": [
        19579,
        19607
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9245": {
      "fn": "Governance.submitVerification",
      "offset": [
        19579,
        19607
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "9247": {
      "fn": "Governance.submitVerification",
      "offset": [
        19579,
        19607
      ],
      "op": "ADD",
      "path": "2"
    },
    "9248": {
      "fn": "Governance.submitVerification",
      "offset": [
        19579,
        19607
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x242B"
    },
    "9251": {
      "fn": "Governance.submitVerification",
      "offset": [
        19579,
        19607
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9252": {
      "op": "DUP2"
    },
    "9253": {
      "op": "MSTORE"
    },
    "9254": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9256": {
      "op": "ADD"
    },
    "9257": {
      "op": "SWAP1"
    },
    "9258": {
      "op": "JUMP"
    },
    "9259": {
      "fn": "Governance.submitVerification",
      "offset": [
        19579,
        19607
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9260": {
      "fn": "Governance.submitVerification",
      "offset": [
        19579,
        19607
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9262": {
      "fn": "Governance.submitVerification",
      "offset": [
        19579,
        19607
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9263": {
      "fn": "Governance.submitVerification",
      "offset": [
        19579,
        19607
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "9265": {
      "fn": "Governance.submitVerification",
      "offset": [
        19579,
        19607
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9266": {
      "fn": "Governance.submitVerification",
      "offset": [
        19579,
        19607
      ],
      "op": "DUP4",
      "path": "2"
    },
    "9267": {
      "fn": "Governance.submitVerification",
      "offset": [
        19579,
        19607
      ],
      "op": "SUB",
      "path": "2"
    },
    "9268": {
      "fn": "Governance.submitVerification",
      "offset": [
        19579,
        19607
      ],
      "op": "SUB",
      "path": "2"
    },
    "9269": {
      "fn": "Governance.submitVerification",
      "offset": [
        19579,
        19607
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9270": {
      "fn": "Governance.submitVerification",
      "offset": [
        19579,
        19607
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9271": {
      "fn": "Governance.submitVerification",
      "offset": [
        19579,
        19607
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9272": {
      "fn": "Governance.submitVerification",
      "offset": [
        19579,
        19607
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9274": {
      "fn": "Governance.submitVerification",
      "offset": [
        19579,
        19607
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9275": {
      "fn": "Governance.submitVerification",
      "offset": [
        19569,
        19608
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9276": {
      "fn": "Governance.submitVerification",
      "offset": [
        19569,
        19608
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9277": {
      "fn": "Governance.submitVerification",
      "offset": [
        19569,
        19608
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9278": {
      "fn": "Governance.submitVerification",
      "offset": [
        19569,
        19608
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "9280": {
      "fn": "Governance.submitVerification",
      "offset": [
        19569,
        19608
      ],
      "op": "ADD",
      "path": "2"
    },
    "9281": {
      "fn": "Governance.submitVerification",
      "offset": [
        19569,
        19608
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "9282": {
      "fn": "Governance.submitVerification",
      "offset": [
        19556,
        19563
      ],
      "op": "DUP6",
      "path": "2"
    },
    "9283": {
      "fn": "Governance.submitVerification",
      "offset": [
        19564,
        19565
      ],
      "op": "DUP3",
      "path": "2"
    },
    "9284": {
      "fn": "Governance.submitVerification",
      "offset": [
        19556,
        19566
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9285": {
      "fn": "Governance.submitVerification",
      "offset": [
        19556,
        19566
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9286": {
      "fn": "Governance.submitVerification",
      "offset": [
        19556,
        19566
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9287": {
      "fn": "Governance.submitVerification",
      "offset": [
        19556,
        19566
      ],
      "op": "LT",
      "path": "2"
    },
    "9288": {
      "fn": "Governance.submitVerification",
      "offset": [
        19556,
        19566
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2453"
    },
    "9291": {
      "fn": "Governance.submitVerification",
      "offset": [
        19556,
        19566
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "9292": {
      "fn": "Governance.submitVerification",
      "offset": [
        19556,
        19566
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2453"
    },
    "9295": {
      "fn": "Governance.submitVerification",
      "offset": [
        19556,
        19566
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3DDE"
    },
    "9298": {
      "fn": "Governance.submitVerification",
      "jump": "i",
      "offset": [
        19556,
        19566
      ],
      "op": "JUMP",
      "path": "2"
    },
    "9299": {
      "fn": "Governance.submitVerification",
      "offset": [
        19556,
        19566
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9300": {
      "fn": "Governance.submitVerification",
      "offset": [
        19556,
        19566
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "9302": {
      "fn": "Governance.submitVerification",
      "offset": [
        19556,
        19566
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9303": {
      "fn": "Governance.submitVerification",
      "offset": [
        19556,
        19566
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9304": {
      "fn": "Governance.submitVerification",
      "offset": [
        19556,
        19566
      ],
      "op": "MUL",
      "path": "2"
    },
    "9305": {
      "fn": "Governance.submitVerification",
      "offset": [
        19556,
        19566
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9306": {
      "fn": "Governance.submitVerification",
      "offset": [
        19556,
        19566
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9307": {
      "fn": "Governance.submitVerification",
      "offset": [
        19556,
        19566
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9308": {
      "fn": "Governance.submitVerification",
      "offset": [
        19556,
        19566
      ],
      "op": "ADD",
      "path": "2"
    },
    "9309": {
      "fn": "Governance.submitVerification",
      "offset": [
        19556,
        19566
      ],
      "op": "ADD",
      "path": "2"
    },
    "9310": {
      "fn": "Governance.submitVerification",
      "offset": [
        19556,
        19608
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9311": {
      "fn": "Governance.submitVerification",
      "offset": [
        19636,
        19639
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 74,
      "value": "0x1"
    },
    "9313": {
      "fn": "Governance.submitVerification",
      "offset": [
        19636,
        19639
      ],
      "op": "ADD",
      "path": "2"
    },
    "9314": {
      "fn": "Governance.submitVerification",
      "offset": [
        19499,
        19655
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x23F6"
    },
    "9317": {
      "fn": "Governance.submitVerification",
      "offset": [
        19499,
        19655
      ],
      "op": "JUMP",
      "path": "2"
    },
    "9318": {
      "fn": "Governance.submitVerification",
      "offset": [
        19499,
        19655
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9319": {
      "fn": "Governance.submitVerification",
      "offset": [
        19499,
        19655
      ],
      "op": "POP",
      "path": "2"
    },
    "9320": {
      "fn": "Governance.submitVerification",
      "offset": [
        19460,
        19665
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9321": {
      "fn": "Governance.submitVerification",
      "offset": [
        19674,
        19688
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9323": {
      "fn": "Governance.submitVerification",
      "offset": [
        19718,
        19725
      ],
      "op": "DUP5",
      "path": "2"
    },
    "9324": {
      "fn": "Governance.submitVerification",
      "offset": [
        19701,
        19726
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9326": {
      "fn": "Governance.submitVerification",
      "offset": [
        19701,
        19726
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9327": {
      "fn": "Governance.submitVerification",
      "offset": [
        19701,
        19726
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "9329": {
      "fn": "Governance.submitVerification",
      "offset": [
        19701,
        19726
      ],
      "op": "ADD",
      "path": "2"
    },
    "9330": {
      "fn": "Governance.submitVerification",
      "offset": [
        19701,
        19726
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x247B"
    },
    "9333": {
      "fn": "Governance.submitVerification",
      "offset": [
        19701,
        19726
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9334": {
      "fn": "Governance.submitVerification",
      "offset": [
        19701,
        19726
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9335": {
      "fn": "Governance.submitVerification",
      "offset": [
        19701,
        19726
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3DF4"
    },
    "9338": {
      "fn": "Governance.submitVerification",
      "jump": "i",
      "offset": [
        19701,
        19726
      ],
      "op": "JUMP",
      "path": "2"
    },
    "9339": {
      "fn": "Governance.submitVerification",
      "offset": [
        19701,
        19726
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9340": {
      "fn": "Governance.submitVerification",
      "offset": [
        19701,
        19726
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9342": {
      "fn": "Governance.submitVerification",
      "offset": [
        19701,
        19726
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9343": {
      "fn": "Governance.submitVerification",
      "offset": [
        19701,
        19726
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "9345": {
      "fn": "Governance.submitVerification",
      "offset": [
        19701,
        19726
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9346": {
      "fn": "Governance.submitVerification",
      "offset": [
        19701,
        19726
      ],
      "op": "DUP4",
      "path": "2"
    },
    "9347": {
      "fn": "Governance.submitVerification",
      "offset": [
        19701,
        19726
      ],
      "op": "SUB",
      "path": "2"
    },
    "9348": {
      "fn": "Governance.submitVerification",
      "offset": [
        19701,
        19726
      ],
      "op": "SUB",
      "path": "2"
    },
    "9349": {
      "fn": "Governance.submitVerification",
      "offset": [
        19701,
        19726
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9350": {
      "fn": "Governance.submitVerification",
      "offset": [
        19701,
        19726
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9351": {
      "fn": "Governance.submitVerification",
      "offset": [
        19701,
        19726
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9352": {
      "fn": "Governance.submitVerification",
      "offset": [
        19701,
        19726
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9354": {
      "fn": "Governance.submitVerification",
      "offset": [
        19701,
        19726
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9355": {
      "fn": "Governance.submitVerification",
      "offset": [
        19691,
        19727
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9356": {
      "fn": "Governance.submitVerification",
      "offset": [
        19691,
        19727
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9357": {
      "fn": "Governance.submitVerification",
      "offset": [
        19691,
        19727
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9358": {
      "fn": "Governance.submitVerification",
      "offset": [
        19691,
        19727
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "9360": {
      "fn": "Governance.submitVerification",
      "offset": [
        19691,
        19727
      ],
      "op": "ADD",
      "path": "2"
    },
    "9361": {
      "fn": "Governance.submitVerification",
      "offset": [
        19691,
        19727
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "9362": {
      "fn": "Governance.submitVerification",
      "offset": [
        19674,
        19727
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9363": {
      "fn": "Governance.submitVerification",
      "offset": [
        19674,
        19727
      ],
      "op": "POP",
      "path": "2"
    },
    "9364": {
      "fn": "Governance.submitVerification",
      "offset": [
        19738,
        19757
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9366": {
      "fn": "Governance.submitVerification",
      "offset": [
        19775,
        19781
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9367": {
      "fn": "Governance.submitVerification",
      "offset": [
        19760,
        19766
      ],
      "op": "DUP6",
      "path": "2"
    },
    "9368": {
      "fn": "Governance.submitVerification",
      "offset": [
        19760,
        19771
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9370": {
      "fn": "Governance.submitVerification",
      "offset": [
        19760,
        19771
      ],
      "op": "ADD",
      "path": "2"
    },
    "9371": {
      "fn": "Governance.submitVerification",
      "offset": [
        19760,
        19771
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9372": {
      "branch": 167,
      "fn": "Governance.submitVerification",
      "offset": [
        19760,
        19781
      ],
      "op": "EQ",
      "path": "2"
    },
    "9373": {
      "fn": "Governance.submitVerification",
      "offset": [
        19760,
        19789
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x24A7"
    },
    "9376": {
      "branch": 167,
      "fn": "Governance.submitVerification",
      "offset": [
        19760,
        19789
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "9377": {
      "fn": "Governance.submitVerification",
      "offset": [
        19788,
        19789
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9379": {
      "fn": "Governance.submitVerification",
      "offset": [
        19760,
        19789
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x24AA"
    },
    "9382": {
      "fn": "Governance.submitVerification",
      "offset": [
        19760,
        19789
      ],
      "op": "JUMP",
      "path": "2"
    },
    "9383": {
      "fn": "Governance.submitVerification",
      "offset": [
        19760,
        19789
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9384": {
      "fn": "Governance.submitVerification",
      "offset": [
        19784,
        19785
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "9386": {
      "fn": "Governance.submitVerification",
      "offset": [
        19760,
        19789
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9387": {
      "fn": "Governance.submitVerification",
      "offset": [
        19835,
        19847
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 75,
      "value": "0x20"
    },
    "9389": {
      "fn": "Governance.submitVerification",
      "offset": [
        19835,
        19847
      ],
      "op": "DUP7",
      "path": "2"
    },
    "9390": {
      "fn": "Governance.submitVerification",
      "offset": [
        19835,
        19847
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9391": {
      "fn": "Governance.submitVerification",
      "offset": [
        19835,
        19847
      ],
      "op": "ADD",
      "path": "2"
    },
    "9392": {
      "fn": "Governance.submitVerification",
      "offset": [
        19835,
        19847
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9393": {
      "fn": "Governance.submitVerification",
      "offset": [
        19805,
        19881
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9395": {
      "fn": "Governance.submitVerification",
      "offset": [
        19805,
        19881
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9396": {
      "fn": "Governance.submitVerification",
      "offset": [
        19805,
        19881
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9397": {
      "op": "DUP13"
    },
    "9398": {
      "op": "DUP2"
    },
    "9399": {
      "op": "MSTORE"
    },
    "9400": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "9406": {
      "op": "SWAP1"
    },
    "9407": {
      "op": "SWAP3"
    },
    "9408": {
      "op": "AND"
    },
    "9409": {
      "op": "SWAP3"
    },
    "9410": {
      "op": "DUP3"
    },
    "9411": {
      "op": "ADD"
    },
    "9412": {
      "op": "SWAP3"
    },
    "9413": {
      "op": "SWAP1"
    },
    "9414": {
      "op": "SWAP3"
    },
    "9415": {
      "op": "MSTORE"
    },
    "9416": {
      "op": "SWAP1"
    },
    "9417": {
      "op": "DUP2"
    },
    "9418": {
      "op": "ADD"
    },
    "9419": {
      "op": "DUP10"
    },
    "9420": {
      "op": "SWAP1"
    },
    "9421": {
      "op": "MSTORE"
    },
    "9422": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "9424": {
      "op": "DUP2"
    },
    "9425": {
      "op": "ADD"
    },
    "9426": {
      "op": "DUP5"
    },
    "9427": {
      "op": "SWAP1"
    },
    "9428": {
      "op": "MSTORE"
    },
    "9429": {
      "fn": "Governance.submitVerification",
      "offset": [
        19738,
        19789
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "9431": {
      "fn": "Governance.submitVerification",
      "offset": [
        19738,
        19789
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9432": {
      "fn": "Governance.submitVerification",
      "offset": [
        19738,
        19789
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9433": {
      "fn": "Governance.submitVerification",
      "offset": [
        19738,
        19789
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9434": {
      "fn": "Governance.submitVerification",
      "offset": [
        19738,
        19789
      ],
      "op": "AND",
      "path": "2"
    },
    "9435": {
      "fn": "Governance.submitVerification",
      "offset": [
        19879,
        19880
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "9437": {
      "fn": "Governance.submitVerification",
      "offset": [
        19866,
        19880
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9438": {
      "fn": "Governance.submitVerification",
      "offset": [
        19866,
        19880
      ],
      "op": "EQ",
      "path": "2"
    },
    "9439": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "9441": {
      "op": "DUP4"
    },
    "9442": {
      "op": "ADD"
    },
    "9443": {
      "op": "MSTORE"
    },
    "9444": {
      "fn": "Governance.submitVerification",
      "offset": [
        19738,
        19789
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9445": {
      "op": "POP"
    },
    "9446": {
      "fn": "Governance.submitVerification",
      "offset": [
        19805,
        19881
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0xE3F0E138F100DEAF328BA1DEF71C39DADE8CD971BA0074D935EE648E54532FAE"
    },
    "9479": {
      "fn": "Governance.submitVerification",
      "offset": [
        19805,
        19881
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9480": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9482": {
      "op": "ADD"
    },
    "9483": {
      "fn": "Governance.submitVerification",
      "offset": [
        19805,
        19881
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9485": {
      "fn": "Governance.submitVerification",
      "offset": [
        19805,
        19881
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9486": {
      "fn": "Governance.submitVerification",
      "offset": [
        19805,
        19881
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9487": {
      "fn": "Governance.submitVerification",
      "offset": [
        19805,
        19881
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9488": {
      "fn": "Governance.submitVerification",
      "offset": [
        19805,
        19881
      ],
      "op": "SUB",
      "path": "2"
    },
    "9489": {
      "fn": "Governance.submitVerification",
      "offset": [
        19805,
        19881
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9490": {
      "fn": "Governance.submitVerification",
      "offset": [
        19805,
        19881
      ],
      "op": "LOG1",
      "path": "2"
    },
    "9491": {
      "fn": "Governance.submitVerification",
      "offset": [
        19896,
        19907
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9492": {
      "fn": "Governance.submitVerification",
      "offset": [
        19910,
        19911
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "9494": {
      "branch": 168,
      "fn": "Governance.submitVerification",
      "offset": [
        19896,
        19911
      ],
      "op": "SUB",
      "path": "2"
    },
    "9495": {
      "fn": "Governance.submitVerification",
      "offset": [
        19892,
        22389
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x27CD"
    },
    "9498": {
      "branch": 168,
      "fn": "Governance.submitVerification",
      "offset": [
        19892,
        22389
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "9499": {
      "fn": "Governance.submitVerification",
      "offset": [
        19990,
        20003
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9501": {
      "fn": "Governance.submitVerification",
      "offset": [
        20021,
        20022
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "9503": {
      "fn": "Governance.submitVerification",
      "offset": [
        20006,
        20012
      ],
      "op": "DUP7",
      "path": "2"
    },
    "9504": {
      "fn": "Governance.submitVerification",
      "offset": [
        20006,
        20020
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xC0"
    },
    "9506": {
      "fn": "Governance.submitVerification",
      "offset": [
        20006,
        20020
      ],
      "op": "ADD",
      "path": "2"
    },
    "9507": {
      "fn": "Governance.submitVerification",
      "offset": [
        20006,
        20020
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9508": {
      "fn": "Governance.submitVerification",
      "offset": [
        20006,
        20022
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x252D"
    },
    "9511": {
      "fn": "Governance.submitVerification",
      "offset": [
        20006,
        20022
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9512": {
      "fn": "Governance.submitVerification",
      "offset": [
        20006,
        20022
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9513": {
      "fn": "Governance.submitVerification",
      "offset": [
        20006,
        20022
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x42B9"
    },
    "9516": {
      "fn": "Governance.submitVerification",
      "jump": "i",
      "offset": [
        20006,
        20022
      ],
      "op": "JUMP",
      "path": "2"
    },
    "9517": {
      "fn": "Governance.submitVerification",
      "offset": [
        20006,
        20022
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9518": {
      "fn": "Governance.submitVerification",
      "offset": [
        20076,
        20086
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "9520": {
      "fn": "Governance.submitVerification",
      "offset": [
        20076,
        20086
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "9521": {
      "fn": "Governance.submitVerification",
      "offset": [
        20095,
        20112
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE0"
    },
    "9523": {
      "fn": "Governance.submitVerification",
      "offset": [
        20095,
        20112
      ],
      "op": "DUP9",
      "path": "2"
    },
    "9524": {
      "fn": "Governance.submitVerification",
      "offset": [
        20095,
        20112
      ],
      "op": "ADD",
      "path": "2"
    },
    "9525": {
      "fn": "Governance.submitVerification",
      "offset": [
        20095,
        20112
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9526": {
      "fn": "Governance.submitVerification",
      "offset": [
        20076,
        20113
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9528": {
      "fn": "Governance.submitVerification",
      "offset": [
        20076,
        20113
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9529": {
      "op": "PUSH4",
      "value": "0x31A9108F"
    },
    "9534": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "9536": {
      "op": "SHL"
    },
    "9537": {
      "fn": "Governance.submitVerification",
      "offset": [
        20076,
        20113
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9538": {
      "fn": "Governance.submitVerification",
      "offset": [
        20076,
        20113
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9539": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "9542": {
      "op": "SWAP1"
    },
    "9543": {
      "op": "SWAP2"
    },
    "9544": {
      "op": "AND"
    },
    "9545": {
      "fn": "Governance.submitVerification",
      "offset": [
        20076,
        20113
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "9547": {
      "fn": "Governance.submitVerification",
      "offset": [
        20076,
        20113
      ],
      "op": "DUP3",
      "path": "2"
    },
    "9548": {
      "fn": "Governance.submitVerification",
      "offset": [
        20076,
        20113
      ],
      "op": "ADD",
      "path": "2"
    },
    "9549": {
      "op": "MSTORE"
    },
    "9550": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9552": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9554": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "9556": {
      "op": "SHL"
    },
    "9557": {
      "op": "SUB"
    },
    "9558": {
      "fn": "Governance.submitVerification",
      "offset": [
        19990,
        20022
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "9559": {
      "fn": "Governance.submitVerification",
      "offset": [
        19990,
        20022
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9560": {
      "fn": "Governance.submitVerification",
      "offset": [
        19990,
        20022
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "9561": {
      "fn": "Governance.submitVerification",
      "offset": [
        19990,
        20022
      ],
      "op": "AND",
      "path": "2"
    },
    "9562": {
      "fn": "Governance.submitVerification",
      "offset": [
        19990,
        20022
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "9563": {
      "op": "POP"
    },
    "9564": {
      "fn": "Governance.submitVerification",
      "offset": [
        20036,
        20065
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9566": {
      "fn": "Governance.submitVerification",
      "offset": [
        20036,
        20065
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9567": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9569": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9571": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9573": {
      "op": "SHL"
    },
    "9574": {
      "op": "SUB"
    },
    "9575": {
      "fn": "Governance.submitVerification",
      "offset": [
        20076,
        20086
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9576": {
      "fn": "Governance.submitVerification",
      "offset": [
        20076,
        20086
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9577": {
      "fn": "Governance.submitVerification",
      "offset": [
        20076,
        20086
      ],
      "op": "AND",
      "path": "2"
    },
    "9578": {
      "fn": "Governance.submitVerification",
      "offset": [
        20076,
        20086
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9579": {
      "fn": "Governance.submitVerification",
      "offset": [
        20076,
        20094
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x6352211E"
    },
    "9584": {
      "fn": "Governance.submitVerification",
      "offset": [
        20076,
        20094
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9585": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9587": {
      "op": "ADD"
    },
    "9588": {
      "fn": "Governance.submitVerification",
      "offset": [
        20076,
        20113
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "9590": {
      "fn": "Governance.submitVerification",
      "offset": [
        20076,
        20113
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9592": {
      "fn": "Governance.submitVerification",
      "offset": [
        20076,
        20113
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9593": {
      "fn": "Governance.submitVerification",
      "offset": [
        20076,
        20113
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9594": {
      "fn": "Governance.submitVerification",
      "offset": [
        20076,
        20113
      ],
      "op": "DUP4",
      "path": "2"
    },
    "9595": {
      "fn": "Governance.submitVerification",
      "offset": [
        20076,
        20113
      ],
      "op": "SUB",
      "path": "2"
    },
    "9596": {
      "fn": "Governance.submitVerification",
      "offset": [
        20076,
        20113
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9597": {
      "fn": "Governance.submitVerification",
      "offset": [
        20076,
        20113
      ],
      "op": "DUP7",
      "path": "2"
    },
    "9598": {
      "fn": "Governance.submitVerification",
      "offset": [
        20076,
        20113
      ],
      "op": "GAS",
      "path": "2"
    },
    "9599": {
      "fn": "Governance.submitVerification",
      "offset": [
        20076,
        20113
      ],
      "op": "STATICCALL",
      "path": "2"
    },
    "9600": {
      "fn": "Governance.submitVerification",
      "offset": [
        20076,
        20113
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "9601": {
      "fn": "Governance.submitVerification",
      "offset": [
        20076,
        20113
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9602": {
      "fn": "Governance.submitVerification",
      "offset": [
        20076,
        20113
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "9603": {
      "fn": "Governance.submitVerification",
      "offset": [
        20076,
        20113
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2590"
    },
    "9606": {
      "fn": "Governance.submitVerification",
      "offset": [
        20076,
        20113
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "9607": {
      "fn": "Governance.submitVerification",
      "offset": [
        20076,
        20113
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "9608": {
      "fn": "Governance.submitVerification",
      "offset": [
        20076,
        20113
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9610": {
      "fn": "Governance.submitVerification",
      "offset": [
        20076,
        20113
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9611": {
      "fn": "Governance.submitVerification",
      "offset": [
        20076,
        20113
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "9612": {
      "fn": "Governance.submitVerification",
      "offset": [
        20076,
        20113
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "9613": {
      "fn": "Governance.submitVerification",
      "offset": [
        20076,
        20113
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9615": {
      "fn": "Governance.submitVerification",
      "offset": [
        20076,
        20113
      ],
      "op": "REVERT",
      "path": "2"
    },
    "9616": {
      "fn": "Governance.submitVerification",
      "offset": [
        20076,
        20113
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9617": {
      "fn": "Governance.submitVerification",
      "offset": [
        20076,
        20113
      ],
      "op": "POP",
      "path": "2"
    },
    "9618": {
      "fn": "Governance.submitVerification",
      "offset": [
        20076,
        20113
      ],
      "op": "POP",
      "path": "2"
    },
    "9619": {
      "fn": "Governance.submitVerification",
      "offset": [
        20076,
        20113
      ],
      "op": "POP",
      "path": "2"
    },
    "9620": {
      "fn": "Governance.submitVerification",
      "offset": [
        20076,
        20113
      ],
      "op": "POP",
      "path": "2"
    },
    "9621": {
      "fn": "Governance.submitVerification",
      "offset": [
        20076,
        20113
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9623": {
      "fn": "Governance.submitVerification",
      "offset": [
        20076,
        20113
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9624": {
      "fn": "Governance.submitVerification",
      "offset": [
        20076,
        20113
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "9625": {
      "fn": "Governance.submitVerification",
      "offset": [
        20076,
        20113
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "9627": {
      "fn": "Governance.submitVerification",
      "offset": [
        20076,
        20113
      ],
      "op": "NOT",
      "path": "2"
    },
    "9628": {
      "fn": "Governance.submitVerification",
      "offset": [
        20076,
        20113
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "9630": {
      "fn": "Governance.submitVerification",
      "offset": [
        20076,
        20113
      ],
      "op": "DUP3",
      "path": "2"
    },
    "9631": {
      "fn": "Governance.submitVerification",
      "offset": [
        20076,
        20113
      ],
      "op": "ADD",
      "path": "2"
    },
    "9632": {
      "fn": "Governance.submitVerification",
      "offset": [
        20076,
        20113
      ],
      "op": "AND",
      "path": "2"
    },
    "9633": {
      "fn": "Governance.submitVerification",
      "offset": [
        20076,
        20113
      ],
      "op": "DUP3",
      "path": "2"
    },
    "9634": {
      "fn": "Governance.submitVerification",
      "offset": [
        20076,
        20113
      ],
      "op": "ADD",
      "path": "2"
    },
    "9635": {
      "fn": "Governance.submitVerification",
      "offset": [
        20076,
        20113
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9636": {
      "fn": "Governance.submitVerification",
      "offset": [
        20076,
        20113
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9638": {
      "fn": "Governance.submitVerification",
      "offset": [
        20076,
        20113
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9639": {
      "fn": "Governance.submitVerification",
      "offset": [
        20076,
        20113
      ],
      "op": "POP",
      "path": "2"
    },
    "9640": {
      "fn": "Governance.submitVerification",
      "offset": [
        20076,
        20113
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9641": {
      "fn": "Governance.submitVerification",
      "offset": [
        20076,
        20113
      ],
      "op": "ADD",
      "path": "2"
    },
    "9642": {
      "fn": "Governance.submitVerification",
      "offset": [
        20076,
        20113
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9643": {
      "fn": "Governance.submitVerification",
      "offset": [
        20076,
        20113
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x25B4"
    },
    "9646": {
      "fn": "Governance.submitVerification",
      "offset": [
        20076,
        20113
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9647": {
      "fn": "Governance.submitVerification",
      "offset": [
        20076,
        20113
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9648": {
      "fn": "Governance.submitVerification",
      "offset": [
        20076,
        20113
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3E5B"
    },
    "9651": {
      "fn": "Governance.submitVerification",
      "jump": "i",
      "offset": [
        20076,
        20113
      ],
      "op": "JUMP",
      "path": "2"
    },
    "9652": {
      "fn": "Governance.submitVerification",
      "offset": [
        20076,
        20113
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9653": {
      "fn": "Governance.submitVerification",
      "offset": [
        20182,
        20192
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 76,
      "value": "0x2"
    },
    "9655": {
      "fn": "Governance.submitVerification",
      "offset": [
        20182,
        20192
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "9656": {
      "fn": "Governance.submitVerification",
      "offset": [
        20204,
        20216
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "9658": {
      "fn": "Governance.submitVerification",
      "offset": [
        20204,
        20216
      ],
      "op": "DUP10",
      "path": "2"
    },
    "9659": {
      "fn": "Governance.submitVerification",
      "offset": [
        20204,
        20216
      ],
      "op": "ADD",
      "path": "2"
    },
    "9660": {
      "fn": "Governance.submitVerification",
      "offset": [
        20204,
        20216
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9661": {
      "fn": "Governance.submitVerification",
      "offset": [
        20218,
        20234
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA0"
    },
    "9663": {
      "fn": "Governance.submitVerification",
      "offset": [
        20218,
        20234
      ],
      "op": "DUP11",
      "path": "2"
    },
    "9664": {
      "fn": "Governance.submitVerification",
      "offset": [
        20218,
        20234
      ],
      "op": "ADD",
      "path": "2"
    },
    "9665": {
      "fn": "Governance.submitVerification",
      "offset": [
        20218,
        20234
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9666": {
      "fn": "Governance.submitVerification",
      "offset": [
        20182,
        20235
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9668": {
      "fn": "Governance.submitVerification",
      "offset": [
        20182,
        20235
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9669": {
      "op": "PUSH4",
      "value": "0x8AD4D6A5"
    },
    "9674": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9676": {
      "op": "SHL"
    },
    "9677": {
      "fn": "Governance.submitVerification",
      "offset": [
        20182,
        20235
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9678": {
      "fn": "Governance.submitVerification",
      "offset": [
        20182,
        20235
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9679": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "9685": {
      "op": "SWAP1"
    },
    "9686": {
      "op": "SWAP3"
    },
    "9687": {
      "op": "AND"
    },
    "9688": {
      "fn": "Governance.submitVerification",
      "offset": [
        20182,
        20235
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "9690": {
      "fn": "Governance.submitVerification",
      "offset": [
        20182,
        20235
      ],
      "op": "DUP4",
      "path": "2"
    },
    "9691": {
      "fn": "Governance.submitVerification",
      "offset": [
        20182,
        20235
      ],
      "op": "ADD",
      "path": "2"
    },
    "9692": {
      "op": "MSTORE"
    },
    "9693": {
      "op": "PUSH3",
      "value": "0xFFFFFF"
    },
    "9697": {
      "op": "AND"
    },
    "9698": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9700": {
      "op": "DUP3"
    },
    "9701": {
      "op": "ADD"
    },
    "9702": {
      "op": "MSTORE"
    },
    "9703": {
      "fn": "Governance.submitVerification",
      "offset": [
        20036,
        20114
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9704": {
      "fn": "Governance.submitVerification",
      "offset": [
        20036,
        20114
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "9705": {
      "op": "POP"
    },
    "9706": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9708": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9710": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9712": {
      "op": "SHL"
    },
    "9713": {
      "op": "SUB"
    },
    "9714": {
      "fn": "Governance.submitVerification",
      "offset": [
        20182,
        20192
      ],
      "op": "AND",
      "path": "2"
    },
    "9715": {
      "fn": "Governance.submitVerification",
      "offset": [
        20182,
        20192
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9716": {
      "fn": "Governance.submitVerification",
      "offset": [
        20182,
        20203
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x8AD4D6A5"
    },
    "9721": {
      "fn": "Governance.submitVerification",
      "offset": [
        20182,
        20203
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9722": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9724": {
      "op": "ADD"
    },
    "9725": {
      "fn": "Governance.submitVerification",
      "offset": [
        20182,
        20235
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9727": {
      "fn": "Governance.submitVerification",
      "offset": [
        20182,
        20235
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9729": {
      "fn": "Governance.submitVerification",
      "offset": [
        20182,
        20235
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9730": {
      "fn": "Governance.submitVerification",
      "offset": [
        20182,
        20235
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9731": {
      "fn": "Governance.submitVerification",
      "offset": [
        20182,
        20235
      ],
      "op": "DUP4",
      "path": "2"
    },
    "9732": {
      "fn": "Governance.submitVerification",
      "offset": [
        20182,
        20235
      ],
      "op": "SUB",
      "path": "2"
    },
    "9733": {
      "fn": "Governance.submitVerification",
      "offset": [
        20182,
        20235
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9734": {
      "fn": "Governance.submitVerification",
      "offset": [
        20182,
        20235
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9736": {
      "fn": "Governance.submitVerification",
      "offset": [
        20182,
        20235
      ],
      "op": "DUP8",
      "path": "2"
    },
    "9737": {
      "fn": "Governance.submitVerification",
      "offset": [
        20182,
        20235
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9738": {
      "fn": "Governance.submitVerification",
      "offset": [
        20182,
        20235
      ],
      "op": "EXTCODESIZE",
      "path": "2"
    },
    "9739": {
      "fn": "Governance.submitVerification",
      "offset": [
        20182,
        20235
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "9740": {
      "fn": "Governance.submitVerification",
      "offset": [
        20182,
        20235
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9741": {
      "fn": "Governance.submitVerification",
      "offset": [
        20182,
        20235
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "9742": {
      "fn": "Governance.submitVerification",
      "offset": [
        20182,
        20235
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2616"
    },
    "9745": {
      "fn": "Governance.submitVerification",
      "offset": [
        20182,
        20235
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "9746": {
      "fn": "Governance.submitVerification",
      "offset": [
        20182,
        20235
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9748": {
      "fn": "Governance.submitVerification",
      "offset": [
        20182,
        20235
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9749": {
      "fn": "Governance.submitVerification",
      "offset": [
        20182,
        20235
      ],
      "op": "REVERT",
      "path": "2"
    },
    "9750": {
      "fn": "Governance.submitVerification",
      "offset": [
        20182,
        20235
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9751": {
      "fn": "Governance.submitVerification",
      "offset": [
        20182,
        20235
      ],
      "op": "POP",
      "path": "2"
    },
    "9752": {
      "fn": "Governance.submitVerification",
      "offset": [
        20182,
        20235
      ],
      "op": "GAS",
      "path": "2"
    },
    "9753": {
      "fn": "Governance.submitVerification",
      "offset": [
        20182,
        20235
      ],
      "op": "CALL",
      "path": "2"
    },
    "9754": {
      "fn": "Governance.submitVerification",
      "offset": [
        20182,
        20235
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "9755": {
      "fn": "Governance.submitVerification",
      "offset": [
        20182,
        20235
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9756": {
      "fn": "Governance.submitVerification",
      "offset": [
        20182,
        20235
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "9757": {
      "fn": "Governance.submitVerification",
      "offset": [
        20182,
        20235
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x262A"
    },
    "9760": {
      "fn": "Governance.submitVerification",
      "offset": [
        20182,
        20235
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "9761": {
      "fn": "Governance.submitVerification",
      "offset": [
        20182,
        20235
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "9762": {
      "fn": "Governance.submitVerification",
      "offset": [
        20182,
        20235
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9764": {
      "fn": "Governance.submitVerification",
      "offset": [
        20182,
        20235
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9765": {
      "fn": "Governance.submitVerification",
      "offset": [
        20182,
        20235
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "9766": {
      "fn": "Governance.submitVerification",
      "offset": [
        20182,
        20235
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "9767": {
      "fn": "Governance.submitVerification",
      "offset": [
        20182,
        20235
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9769": {
      "fn": "Governance.submitVerification",
      "offset": [
        20182,
        20235
      ],
      "op": "REVERT",
      "path": "2"
    },
    "9770": {
      "fn": "Governance.submitVerification",
      "offset": [
        20182,
        20235
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9771": {
      "op": "POP"
    },
    "9772": {
      "op": "POP"
    },
    "9773": {
      "fn": "Governance.submitVerification",
      "offset": [
        20249,
        20259
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 77,
      "value": "0x2"
    },
    "9775": {
      "fn": "Governance.submitVerification",
      "offset": [
        20249,
        20259
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "9776": {
      "fn": "Governance.submitVerification",
      "offset": [
        20271,
        20288
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE0"
    },
    "9778": {
      "fn": "Governance.submitVerification",
      "offset": [
        20271,
        20288
      ],
      "op": "DUP11",
      "path": "2"
    },
    "9779": {
      "fn": "Governance.submitVerification",
      "offset": [
        20271,
        20288
      ],
      "op": "ADD",
      "path": "2"
    },
    "9780": {
      "fn": "Governance.submitVerification",
      "offset": [
        20271,
        20288
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9781": {
      "fn": "Governance.submitVerification",
      "offset": [
        20290,
        20315
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xD"
    },
    "9783": {
      "fn": "Governance.submitVerification",
      "offset": [
        20290,
        20315
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "9784": {
      "fn": "Governance.submitVerification",
      "offset": [
        20249,
        20316
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9786": {
      "fn": "Governance.submitVerification",
      "offset": [
        20249,
        20316
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9787": {
      "op": "PUSH4",
      "value": "0x8AD4D6A5"
    },
    "9792": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9794": {
      "op": "SHL"
    },
    "9795": {
      "fn": "Governance.submitVerification",
      "offset": [
        20249,
        20316
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9796": {
      "fn": "Governance.submitVerification",
      "offset": [
        20249,
        20316
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9797": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "9800": {
      "op": "SWAP1"
    },
    "9801": {
      "op": "SWAP3"
    },
    "9802": {
      "op": "AND"
    },
    "9803": {
      "fn": "Governance.submitVerification",
      "offset": [
        20249,
        20316
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "9805": {
      "fn": "Governance.submitVerification",
      "offset": [
        20249,
        20316
      ],
      "op": "DUP4",
      "path": "2"
    },
    "9806": {
      "fn": "Governance.submitVerification",
      "offset": [
        20249,
        20316
      ],
      "op": "ADD",
      "path": "2"
    },
    "9807": {
      "op": "MSTORE"
    },
    "9808": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9810": {
      "op": "DUP3"
    },
    "9811": {
      "op": "ADD"
    },
    "9812": {
      "op": "MSTORE"
    },
    "9813": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9815": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9817": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9819": {
      "op": "SHL"
    },
    "9820": {
      "op": "SUB"
    },
    "9821": {
      "fn": "Governance.submitVerification",
      "offset": [
        20249,
        20259
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9822": {
      "fn": "Governance.submitVerification",
      "offset": [
        20249,
        20259
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9823": {
      "fn": "Governance.submitVerification",
      "offset": [
        20249,
        20259
      ],
      "op": "AND",
      "path": "2"
    },
    "9824": {
      "fn": "Governance.submitVerification",
      "offset": [
        20249,
        20259
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "9825": {
      "op": "POP"
    },
    "9826": {
      "fn": "Governance.submitVerification",
      "offset": [
        20249,
        20270
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x8AD4D6A5"
    },
    "9831": {
      "fn": "Governance.submitVerification",
      "offset": [
        20249,
        20270
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9832": {
      "op": "POP"
    },
    "9833": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9835": {
      "op": "ADD"
    },
    "9836": {
      "fn": "Governance.submitVerification",
      "offset": [
        20249,
        20316
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9837": {
      "fn": "Governance.submitVerification",
      "offset": [
        20249,
        20316
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9839": {
      "fn": "Governance.submitVerification",
      "offset": [
        20249,
        20316
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9841": {
      "fn": "Governance.submitVerification",
      "offset": [
        20249,
        20316
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9842": {
      "fn": "Governance.submitVerification",
      "offset": [
        20249,
        20316
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9843": {
      "fn": "Governance.submitVerification",
      "offset": [
        20249,
        20316
      ],
      "op": "DUP4",
      "path": "2"
    },
    "9844": {
      "fn": "Governance.submitVerification",
      "offset": [
        20249,
        20316
      ],
      "op": "SUB",
      "path": "2"
    },
    "9845": {
      "fn": "Governance.submitVerification",
      "offset": [
        20249,
        20316
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9846": {
      "fn": "Governance.submitVerification",
      "offset": [
        20249,
        20316
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9848": {
      "fn": "Governance.submitVerification",
      "offset": [
        20249,
        20316
      ],
      "op": "DUP8",
      "path": "2"
    },
    "9849": {
      "fn": "Governance.submitVerification",
      "offset": [
        20249,
        20316
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9850": {
      "fn": "Governance.submitVerification",
      "offset": [
        20249,
        20316
      ],
      "op": "EXTCODESIZE",
      "path": "2"
    },
    "9851": {
      "fn": "Governance.submitVerification",
      "offset": [
        20249,
        20316
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "9852": {
      "fn": "Governance.submitVerification",
      "offset": [
        20249,
        20316
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9853": {
      "fn": "Governance.submitVerification",
      "offset": [
        20249,
        20316
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "9854": {
      "fn": "Governance.submitVerification",
      "offset": [
        20249,
        20316
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2686"
    },
    "9857": {
      "fn": "Governance.submitVerification",
      "offset": [
        20249,
        20316
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "9858": {
      "fn": "Governance.submitVerification",
      "offset": [
        20249,
        20316
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9860": {
      "fn": "Governance.submitVerification",
      "offset": [
        20249,
        20316
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9861": {
      "fn": "Governance.submitVerification",
      "offset": [
        20249,
        20316
      ],
      "op": "REVERT",
      "path": "2"
    },
    "9862": {
      "fn": "Governance.submitVerification",
      "offset": [
        20249,
        20316
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9863": {
      "fn": "Governance.submitVerification",
      "offset": [
        20249,
        20316
      ],
      "op": "POP",
      "path": "2"
    },
    "9864": {
      "fn": "Governance.submitVerification",
      "offset": [
        20249,
        20316
      ],
      "op": "GAS",
      "path": "2"
    },
    "9865": {
      "fn": "Governance.submitVerification",
      "offset": [
        20249,
        20316
      ],
      "op": "CALL",
      "path": "2"
    },
    "9866": {
      "fn": "Governance.submitVerification",
      "offset": [
        20249,
        20316
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "9867": {
      "fn": "Governance.submitVerification",
      "offset": [
        20249,
        20316
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9868": {
      "fn": "Governance.submitVerification",
      "offset": [
        20249,
        20316
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "9869": {
      "fn": "Governance.submitVerification",
      "offset": [
        20249,
        20316
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x269A"
    },
    "9872": {
      "fn": "Governance.submitVerification",
      "offset": [
        20249,
        20316
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "9873": {
      "fn": "Governance.submitVerification",
      "offset": [
        20249,
        20316
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "9874": {
      "fn": "Governance.submitVerification",
      "offset": [
        20249,
        20316
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9876": {
      "fn": "Governance.submitVerification",
      "offset": [
        20249,
        20316
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9877": {
      "fn": "Governance.submitVerification",
      "offset": [
        20249,
        20316
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "9878": {
      "fn": "Governance.submitVerification",
      "offset": [
        20249,
        20316
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "9879": {
      "fn": "Governance.submitVerification",
      "offset": [
        20249,
        20316
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9881": {
      "fn": "Governance.submitVerification",
      "offset": [
        20249,
        20316
      ],
      "op": "REVERT",
      "path": "2"
    },
    "9882": {
      "fn": "Governance.submitVerification",
      "offset": [
        20249,
        20316
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9883": {
      "op": "POP"
    },
    "9884": {
      "op": "POP"
    },
    "9885": {
      "op": "POP"
    },
    "9886": {
      "fn": "Governance.submitVerification",
      "offset": [
        20400,
        20414
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 78,
      "value": "0x0"
    },
    "9888": {
      "fn": "Governance.submitVerification",
      "offset": [
        20400,
        20414
      ],
      "op": "DUP11",
      "path": "2"
    },
    "9889": {
      "fn": "Governance.submitVerification",
      "offset": [
        20400,
        20414
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9890": {
      "fn": "Governance.submitVerification",
      "offset": [
        20400,
        20414
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9891": {
      "fn": "Governance.submitVerification",
      "offset": [
        20400,
        20405
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA"
    },
    "9893": {
      "fn": "Governance.submitVerification",
      "offset": [
        20400,
        20414
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "9895": {
      "fn": "Governance.submitVerification",
      "offset": [
        20400,
        20414
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9896": {
      "fn": "Governance.submitVerification",
      "offset": [
        20400,
        20414
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9898": {
      "fn": "Governance.submitVerification",
      "offset": [
        20400,
        20414
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9899": {
      "fn": "Governance.submitVerification",
      "offset": [
        20400,
        20414
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "9900": {
      "fn": "Governance.submitVerification",
      "offset": [
        20400,
        20414
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9901": {
      "op": "POP"
    },
    "9902": {
      "fn": "Governance.submitVerification",
      "offset": [
        20393,
        20414
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x26B7"
    },
    "9905": {
      "fn": "Governance.submitVerification",
      "offset": [
        20400,
        20414
      ],
      "op": "DUP3",
      "path": "2"
    },
    "9906": {
      "fn": "Governance.submitVerification",
      "offset": [
        20400,
        20414
      ],
      "op": "DUP3",
      "path": "2"
    },
    "9907": {
      "fn": "Governance.submitVerification",
      "offset": [
        20393,
        20414
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3513"
    },
    "9910": {
      "fn": "Governance.submitVerification",
      "jump": "i",
      "offset": [
        20393,
        20414
      ],
      "op": "JUMP",
      "path": "2"
    },
    "9911": {
      "fn": "Governance.submitVerification",
      "offset": [
        20393,
        20414
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9912": {
      "op": "POP"
    },
    "9913": {
      "fn": "Governance.submitVerification",
      "offset": [
        20393,
        20414
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "9915": {
      "fn": "Governance.submitVerification",
      "offset": [
        20393,
        20414
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9916": {
      "fn": "Governance.submitVerification",
      "offset": [
        20393,
        20414
      ],
      "op": "ADD",
      "path": "2"
    },
    "9917": {
      "fn": "Governance.submitVerification",
      "offset": [
        20393,
        20414
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9918": {
      "fn": "Governance.submitVerification",
      "offset": [
        20393,
        20414
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "9919": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "9925": {
      "op": "NOT"
    },
    "9926": {
      "fn": "Governance.submitVerification",
      "offset": [
        20393,
        20414
      ],
      "op": "AND",
      "path": "2"
    },
    "9927": {
      "fn": "Governance.submitVerification",
      "offset": [
        20393,
        20414
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9928": {
      "fn": "Governance.submitVerification",
      "offset": [
        20393,
        20414
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "9929": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9931": {
      "fn": "Governance.submitVerification",
      "offset": [
        20393,
        20414
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "9933": {
      "fn": "Governance.submitVerification",
      "offset": [
        20393,
        20414
      ],
      "op": "DUP3",
      "path": "2"
    },
    "9934": {
      "fn": "Governance.submitVerification",
      "offset": [
        20393,
        20414
      ],
      "op": "ADD",
      "path": "2"
    },
    "9935": {
      "fn": "Governance.submitVerification",
      "offset": [
        20393,
        20414
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9936": {
      "fn": "Governance.submitVerification",
      "offset": [
        20393,
        20414
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9937": {
      "fn": "Governance.submitVerification",
      "offset": [
        20393,
        20414
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "9938": {
      "fn": "Governance.submitVerification",
      "offset": [
        20393,
        20414
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "9940": {
      "fn": "Governance.submitVerification",
      "offset": [
        20393,
        20414
      ],
      "op": "DUP3",
      "path": "2"
    },
    "9941": {
      "fn": "Governance.submitVerification",
      "offset": [
        20393,
        20414
      ],
      "op": "ADD",
      "path": "2"
    },
    "9942": {
      "fn": "Governance.submitVerification",
      "offset": [
        20393,
        20414
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9943": {
      "fn": "Governance.submitVerification",
      "offset": [
        20393,
        20414
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9944": {
      "fn": "Governance.submitVerification",
      "offset": [
        20393,
        20414
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "9945": {
      "fn": "Governance.submitVerification",
      "offset": [
        20393,
        20414
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "9947": {
      "fn": "Governance.submitVerification",
      "offset": [
        20393,
        20414
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9948": {
      "fn": "Governance.submitVerification",
      "offset": [
        20393,
        20414
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9949": {
      "fn": "Governance.submitVerification",
      "offset": [
        20393,
        20414
      ],
      "op": "ADD",
      "path": "2"
    },
    "9950": {
      "fn": "Governance.submitVerification",
      "offset": [
        20393,
        20414
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9951": {
      "fn": "Governance.submitVerification",
      "offset": [
        20393,
        20414
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "9952": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9954": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9956": {
      "op": "PUSH1",
      "value": "0xB8"
    },
    "9958": {
      "op": "SHL"
    },
    "9959": {
      "op": "SUB"
    },
    "9960": {
      "op": "NOT"
    },
    "9961": {
      "fn": "Governance.submitVerification",
      "offset": [
        20393,
        20414
      ],
      "op": "AND",
      "path": "2"
    },
    "9962": {
      "fn": "Governance.submitVerification",
      "offset": [
        20393,
        20414
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9963": {
      "fn": "Governance.submitVerification",
      "offset": [
        20393,
        20414
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "9964": {
      "fn": "Governance.submitVerification",
      "offset": [
        20500,
        20536
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9966": {
      "fn": "Governance.submitVerification",
      "offset": [
        20500,
        20536
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9967": {
      "op": "DUP2"
    },
    "9968": {
      "op": "SWAP1"
    },
    "9969": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9971": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9973": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9975": {
      "op": "SHL"
    },
    "9976": {
      "op": "SUB"
    },
    "9977": {
      "fn": "Governance.submitVerification",
      "offset": [
        20500,
        20518
      ],
      "op": "DUP5",
      "path": "2"
    },
    "9978": {
      "fn": "Governance.submitVerification",
      "offset": [
        20500,
        20518
      ],
      "op": "AND",
      "path": "2"
    },
    "9979": {
      "fn": "Governance.submitVerification",
      "offset": [
        20500,
        20518
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9980": {
      "fn": "Governance.submitVerification",
      "offset": [
        20526,
        20531
      ],
      "op": "DUP6",
      "path": "2"
    },
    "9981": {
      "fn": "Governance.submitVerification",
      "offset": [
        20526,
        20531
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9982": {
      "op": "DUP4"
    },
    "9983": {
      "fn": "Governance.submitVerification",
      "offset": [
        20500,
        20536
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9984": {
      "op": "DUP2"
    },
    "9985": {
      "fn": "Governance.submitVerification",
      "offset": [
        20500,
        20536
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9986": {
      "fn": "Governance.submitVerification",
      "offset": [
        20526,
        20531
      ],
      "op": "DUP6",
      "path": "2"
    },
    "9987": {
      "fn": "Governance.submitVerification",
      "offset": [
        20500,
        20518
      ],
      "op": "DUP8",
      "path": "2"
    },
    "9988": {
      "fn": "Governance.submitVerification",
      "offset": [
        20500,
        20536
      ],
      "op": "GAS",
      "path": "2"
    },
    "9989": {
      "fn": "Governance.submitVerification",
      "offset": [
        20500,
        20536
      ],
      "op": "CALL",
      "path": "2"
    },
    "9990": {
      "fn": "Governance.submitVerification",
      "offset": [
        20500,
        20536
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "9991": {
      "fn": "Governance.submitVerification",
      "offset": [
        20500,
        20536
      ],
      "op": "POP",
      "path": "2"
    },
    "9992": {
      "fn": "Governance.submitVerification",
      "offset": [
        20500,
        20536
      ],
      "op": "POP",
      "path": "2"
    },
    "9993": {
      "fn": "Governance.submitVerification",
      "offset": [
        20500,
        20536
      ],
      "op": "POP",
      "path": "2"
    },
    "9994": {
      "fn": "Governance.submitVerification",
      "offset": [
        20500,
        20536
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "9995": {
      "fn": "Governance.submitVerification",
      "offset": [
        20500,
        20536
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9996": {
      "fn": "Governance.submitVerification",
      "offset": [
        20500,
        20536
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9998": {
      "fn": "Governance.submitVerification",
      "offset": [
        20500,
        20536
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9999": {
      "fn": "Governance.submitVerification",
      "offset": [
        20500,
        20536
      ],
      "op": "EQ",
      "path": "2"
    },
    "10000": {
      "fn": "Governance.submitVerification",
      "offset": [
        20500,
        20536
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2735"
    },
    "10003": {
      "fn": "Governance.submitVerification",
      "offset": [
        20500,
        20536
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "10004": {
      "fn": "Governance.submitVerification",
      "offset": [
        20500,
        20536
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "10006": {
      "fn": "Governance.submitVerification",
      "offset": [
        20500,
        20536
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "10007": {
      "fn": "Governance.submitVerification",
      "offset": [
        20500,
        20536
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "10008": {
      "fn": "Governance.submitVerification",
      "offset": [
        20500,
        20536
      ],
      "op": "POP",
      "path": "2"
    },
    "10009": {
      "fn": "Governance.submitVerification",
      "offset": [
        20500,
        20536
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "10011": {
      "fn": "Governance.submitVerification",
      "offset": [
        20500,
        20536
      ],
      "op": "NOT",
      "path": "2"
    },
    "10012": {
      "fn": "Governance.submitVerification",
      "offset": [
        20500,
        20536
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3F"
    },
    "10014": {
      "fn": "Governance.submitVerification",
      "offset": [
        20500,
        20536
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "10015": {
      "fn": "Governance.submitVerification",
      "offset": [
        20500,
        20536
      ],
      "op": "ADD",
      "path": "2"
    },
    "10016": {
      "fn": "Governance.submitVerification",
      "offset": [
        20500,
        20536
      ],
      "op": "AND",
      "path": "2"
    },
    "10017": {
      "fn": "Governance.submitVerification",
      "offset": [
        20500,
        20536
      ],
      "op": "DUP3",
      "path": "2"
    },
    "10018": {
      "fn": "Governance.submitVerification",
      "offset": [
        20500,
        20536
      ],
      "op": "ADD",
      "path": "2"
    },
    "10019": {
      "fn": "Governance.submitVerification",
      "offset": [
        20500,
        20536
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "10021": {
      "fn": "Governance.submitVerification",
      "offset": [
        20500,
        20536
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10022": {
      "fn": "Governance.submitVerification",
      "offset": [
        20500,
        20536
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "10023": {
      "fn": "Governance.submitVerification",
      "offset": [
        20500,
        20536
      ],
      "op": "DUP3",
      "path": "2"
    },
    "10024": {
      "fn": "Governance.submitVerification",
      "offset": [
        20500,
        20536
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10025": {
      "fn": "Governance.submitVerification",
      "offset": [
        20500,
        20536
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "10026": {
      "fn": "Governance.submitVerification",
      "offset": [
        20500,
        20536
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "10028": {
      "fn": "Governance.submitVerification",
      "offset": [
        20500,
        20536
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "10030": {
      "fn": "Governance.submitVerification",
      "offset": [
        20500,
        20536
      ],
      "op": "DUP5",
      "path": "2"
    },
    "10031": {
      "fn": "Governance.submitVerification",
      "offset": [
        20500,
        20536
      ],
      "op": "ADD",
      "path": "2"
    },
    "10032": {
      "fn": "Governance.submitVerification",
      "offset": [
        20500,
        20536
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "10033": {
      "fn": "Governance.submitVerification",
      "offset": [
        20500,
        20536
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x273A"
    },
    "10036": {
      "fn": "Governance.submitVerification",
      "offset": [
        20500,
        20536
      ],
      "op": "JUMP",
      "path": "2"
    },
    "10037": {
      "fn": "Governance.submitVerification",
      "offset": [
        20500,
        20536
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10038": {
      "fn": "Governance.submitVerification",
      "offset": [
        20500,
        20536
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "10040": {
      "fn": "Governance.submitVerification",
      "offset": [
        20500,
        20536
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "10041": {
      "fn": "Governance.submitVerification",
      "offset": [
        20500,
        20536
      ],
      "op": "POP",
      "path": "2"
    },
    "10042": {
      "fn": "Governance.submitVerification",
      "offset": [
        20500,
        20536
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10043": {
      "fn": "Governance.submitVerification",
      "offset": [
        20500,
        20536
      ],
      "op": "POP",
      "path": "2"
    },
    "10044": {
      "fn": "Governance.submitVerification",
      "offset": [
        20467,
        20536
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "10045": {
      "fn": "Governance.submitVerification",
      "offset": [
        20467,
        20536
      ],
      "op": "POP",
      "path": "2"
    },
    "10046": {
      "fn": "Governance.submitVerification",
      "offset": [
        20467,
        20536
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "10047": {
      "fn": "Governance.submitVerification",
      "offset": [
        20467,
        20536
      ],
      "op": "POP",
      "path": "2"
    },
    "10048": {
      "branch": 169,
      "fn": "Governance.submitVerification",
      "offset": [
        20558,
        20562
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 79
    },
    "10049": {
      "fn": "Governance.submitVerification",
      "offset": [
        20550,
        20587
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x275C"
    },
    "10052": {
      "branch": 169,
      "fn": "Governance.submitVerification",
      "offset": [
        20550,
        20587
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "10053": {
      "fn": "Governance.submitVerification",
      "offset": [
        20550,
        20587
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "10055": {
      "fn": "Governance.submitVerification",
      "offset": [
        20550,
        20587
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "10056": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10060": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10062": {
      "op": "SHL"
    },
    "10063": {
      "fn": "Governance.submitVerification",
      "offset": [
        20550,
        20587
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10064": {
      "fn": "Governance.submitVerification",
      "offset": [
        20550,
        20587
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10065": {
      "fn": "Governance.submitVerification",
      "offset": [
        20550,
        20587
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "10067": {
      "fn": "Governance.submitVerification",
      "offset": [
        20550,
        20587
      ],
      "op": "ADD",
      "path": "2"
    },
    "10068": {
      "fn": "Governance.submitVerification",
      "offset": [
        20550,
        20587
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF9A"
    },
    "10071": {
      "fn": "Governance.submitVerification",
      "offset": [
        20550,
        20587
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10072": {
      "fn": "Governance.submitVerification",
      "offset": [
        20550,
        20587
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x42ED"
    },
    "10075": {
      "fn": "Governance.submitVerification",
      "jump": "i",
      "offset": [
        20550,
        20587
      ],
      "op": "JUMP",
      "path": "2"
    },
    "10076": {
      "fn": "Governance.submitVerification",
      "offset": [
        20550,
        20587
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10077": {
      "fn": "Governance.submitVerification",
      "offset": [
        20649,
        20682
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 80,
      "value": "0x40"
    },
    "10079": {
      "fn": "Governance.submitVerification",
      "offset": [
        20649,
        20682
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "10080": {
      "fn": "Governance.submitVerification",
      "offset": [
        20649,
        20659
      ],
      "op": "CALLER",
      "path": "2"
    },
    "10081": {
      "fn": "Governance.submitVerification",
      "offset": [
        20649,
        20659
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10082": {
      "fn": "Governance.submitVerification",
      "offset": [
        20672,
        20677
      ],
      "op": "DUP6",
      "path": "2"
    },
    "10083": {
      "fn": "Governance.submitVerification",
      "offset": [
        20672,
        20677
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10084": {
      "fn": "Governance.submitVerification",
      "offset": [
        20649,
        20682
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "10086": {
      "fn": "Governance.submitVerification",
      "offset": [
        20649,
        20682
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10087": {
      "fn": "Governance.submitVerification",
      "offset": [
        20649,
        20682
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10088": {
      "fn": "Governance.submitVerification",
      "offset": [
        20649,
        20682
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10089": {
      "fn": "Governance.submitVerification",
      "offset": [
        20672,
        20677
      ],
      "op": "DUP6",
      "path": "2"
    },
    "10090": {
      "fn": "Governance.submitVerification",
      "offset": [
        20649,
        20659
      ],
      "op": "DUP8",
      "path": "2"
    },
    "10091": {
      "fn": "Governance.submitVerification",
      "offset": [
        20649,
        20682
      ],
      "op": "GAS",
      "path": "2"
    },
    "10092": {
      "fn": "Governance.submitVerification",
      "offset": [
        20649,
        20682
      ],
      "op": "CALL",
      "path": "2"
    },
    "10093": {
      "fn": "Governance.submitVerification",
      "offset": [
        20649,
        20682
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "10094": {
      "fn": "Governance.submitVerification",
      "offset": [
        20649,
        20682
      ],
      "op": "POP",
      "path": "2"
    },
    "10095": {
      "fn": "Governance.submitVerification",
      "offset": [
        20649,
        20682
      ],
      "op": "POP",
      "path": "2"
    },
    "10096": {
      "fn": "Governance.submitVerification",
      "offset": [
        20649,
        20682
      ],
      "op": "POP",
      "path": "2"
    },
    "10097": {
      "fn": "Governance.submitVerification",
      "offset": [
        20649,
        20682
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "10098": {
      "fn": "Governance.submitVerification",
      "offset": [
        20649,
        20682
      ],
      "op": "DUP1",
      "path": "2"
    },
    "10099": {
      "fn": "Governance.submitVerification",
      "offset": [
        20649,
        20682
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "10101": {
      "fn": "Governance.submitVerification",
      "offset": [
        20649,
        20682
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10102": {
      "fn": "Governance.submitVerification",
      "offset": [
        20649,
        20682
      ],
      "op": "EQ",
      "path": "2"
    },
    "10103": {
      "fn": "Governance.submitVerification",
      "offset": [
        20649,
        20682
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x279C"
    },
    "10106": {
      "fn": "Governance.submitVerification",
      "offset": [
        20649,
        20682
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "10107": {
      "fn": "Governance.submitVerification",
      "offset": [
        20649,
        20682
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "10109": {
      "fn": "Governance.submitVerification",
      "offset": [
        20649,
        20682
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "10110": {
      "fn": "Governance.submitVerification",
      "offset": [
        20649,
        20682
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "10111": {
      "fn": "Governance.submitVerification",
      "offset": [
        20649,
        20682
      ],
      "op": "POP",
      "path": "2"
    },
    "10112": {
      "fn": "Governance.submitVerification",
      "offset": [
        20649,
        20682
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "10114": {
      "fn": "Governance.submitVerification",
      "offset": [
        20649,
        20682
      ],
      "op": "NOT",
      "path": "2"
    },
    "10115": {
      "fn": "Governance.submitVerification",
      "offset": [
        20649,
        20682
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3F"
    },
    "10117": {
      "fn": "Governance.submitVerification",
      "offset": [
        20649,
        20682
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "10118": {
      "fn": "Governance.submitVerification",
      "offset": [
        20649,
        20682
      ],
      "op": "ADD",
      "path": "2"
    },
    "10119": {
      "fn": "Governance.submitVerification",
      "offset": [
        20649,
        20682
      ],
      "op": "AND",
      "path": "2"
    },
    "10120": {
      "fn": "Governance.submitVerification",
      "offset": [
        20649,
        20682
      ],
      "op": "DUP3",
      "path": "2"
    },
    "10121": {
      "fn": "Governance.submitVerification",
      "offset": [
        20649,
        20682
      ],
      "op": "ADD",
      "path": "2"
    },
    "10122": {
      "fn": "Governance.submitVerification",
      "offset": [
        20649,
        20682
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "10124": {
      "fn": "Governance.submitVerification",
      "offset": [
        20649,
        20682
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10125": {
      "fn": "Governance.submitVerification",
      "offset": [
        20649,
        20682
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "10126": {
      "fn": "Governance.submitVerification",
      "offset": [
        20649,
        20682
      ],
      "op": "DUP3",
      "path": "2"
    },
    "10127": {
      "fn": "Governance.submitVerification",
      "offset": [
        20649,
        20682
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10128": {
      "fn": "Governance.submitVerification",
      "offset": [
        20649,
        20682
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "10129": {
      "fn": "Governance.submitVerification",
      "offset": [
        20649,
        20682
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "10131": {
      "fn": "Governance.submitVerification",
      "offset": [
        20649,
        20682
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "10133": {
      "fn": "Governance.submitVerification",
      "offset": [
        20649,
        20682
      ],
      "op": "DUP5",
      "path": "2"
    },
    "10134": {
      "fn": "Governance.submitVerification",
      "offset": [
        20649,
        20682
      ],
      "op": "ADD",
      "path": "2"
    },
    "10135": {
      "fn": "Governance.submitVerification",
      "offset": [
        20649,
        20682
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "10136": {
      "fn": "Governance.submitVerification",
      "offset": [
        20649,
        20682
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x27A1"
    },
    "10139": {
      "fn": "Governance.submitVerification",
      "offset": [
        20649,
        20682
      ],
      "op": "JUMP",
      "path": "2"
    },
    "10140": {
      "fn": "Governance.submitVerification",
      "offset": [
        20649,
        20682
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10141": {
      "fn": "Governance.submitVerification",
      "offset": [
        20649,
        20682
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "10143": {
      "fn": "Governance.submitVerification",
      "offset": [
        20649,
        20682
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "10144": {
      "fn": "Governance.submitVerification",
      "offset": [
        20649,
        20682
      ],
      "op": "POP",
      "path": "2"
    },
    "10145": {
      "fn": "Governance.submitVerification",
      "offset": [
        20649,
        20682
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10146": {
      "op": "POP"
    },
    "10147": {
      "fn": "Governance.submitVerification",
      "offset": [
        20634,
        20682
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10148": {
      "fn": "Governance.submitVerification",
      "offset": [
        20634,
        20682
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "10149": {
      "op": "POP"
    },
    "10150": {
      "fn": "Governance.submitVerification",
      "offset": [
        20634,
        20682
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10151": {
      "op": "POP"
    },
    "10152": {
      "fn": "Governance.submitVerification",
      "offset": [
        20634,
        20682
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10153": {
      "fn": "Governance.submitVerification",
      "offset": [
        20696,
        20733
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 81,
      "value": "0x27C4"
    },
    "10156": {
      "fn": "Governance.submitVerification",
      "offset": [
        20696,
        20733
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "10157": {
      "fn": "Governance.submitVerification",
      "offset": [
        20696,
        20733
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "10159": {
      "fn": "Governance.submitVerification",
      "offset": [
        20696,
        20733
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "10160": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10164": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10166": {
      "op": "SHL"
    },
    "10167": {
      "fn": "Governance.submitVerification",
      "offset": [
        20696,
        20733
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10168": {
      "fn": "Governance.submitVerification",
      "offset": [
        20696,
        20733
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10169": {
      "fn": "Governance.submitVerification",
      "offset": [
        20696,
        20733
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "10171": {
      "fn": "Governance.submitVerification",
      "offset": [
        20696,
        20733
      ],
      "op": "ADD",
      "path": "2"
    },
    "10172": {
      "fn": "Governance.submitVerification",
      "offset": [
        20696,
        20733
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF9A"
    },
    "10175": {
      "fn": "Governance.submitVerification",
      "offset": [
        20696,
        20733
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10176": {
      "fn": "Governance.submitVerification",
      "offset": [
        20696,
        20733
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x42ED"
    },
    "10179": {
      "fn": "Governance.submitVerification",
      "jump": "i",
      "offset": [
        20696,
        20733
      ],
      "op": "JUMP",
      "path": "2"
    },
    "10180": {
      "fn": "Governance.submitVerification",
      "offset": [
        20696,
        20733
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10181": {
      "fn": "Governance.submitVerification",
      "offset": [
        19912,
        20745
      ],
      "op": "POP",
      "path": "2"
    },
    "10182": {
      "fn": "Governance.submitVerification",
      "offset": [
        19912,
        20745
      ],
      "op": "POP",
      "path": "2"
    },
    "10183": {
      "fn": "Governance.submitVerification",
      "offset": [
        19912,
        20745
      ],
      "op": "POP",
      "path": "2"
    },
    "10184": {
      "fn": "Governance.submitVerification",
      "offset": [
        19912,
        20745
      ],
      "op": "POP",
      "path": "2"
    },
    "10185": {
      "fn": "Governance.submitVerification",
      "offset": [
        19892,
        22389
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2B38"
    },
    "10188": {
      "fn": "Governance.submitVerification",
      "offset": [
        19892,
        22389
      ],
      "op": "JUMP",
      "path": "2"
    },
    "10189": {
      "fn": "Governance.submitVerification",
      "offset": [
        19892,
        22389
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10190": {
      "fn": "Governance.submitVerification",
      "offset": [
        20849,
        20855
      ],
      "op": "DUP5",
      "path": "2"
    },
    "10191": {
      "fn": "Governance.submitVerification",
      "offset": [
        20849,
        20865
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "10194": {
      "fn": "Governance.submitVerification",
      "offset": [
        20849,
        20865
      ],
      "op": "ADD",
      "path": "2"
    },
    "10195": {
      "fn": "Governance.submitVerification",
      "offset": [
        20849,
        20865
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "10196": {
      "fn": "Governance.submitVerification",
      "offset": [
        20849,
        20868
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "10199": {
      "fn": "Governance.submitVerification",
      "offset": [
        20849,
        20868
      ],
      "op": "AND",
      "path": "2"
    },
    "10200": {
      "fn": "Governance.submitVerification",
      "offset": [
        20867,
        20868
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "10202": {
      "branch": 170,
      "fn": "Governance.submitVerification",
      "offset": [
        20849,
        20868
      ],
      "op": "SUB",
      "path": "2"
    },
    "10203": {
      "fn": "Governance.submitVerification",
      "offset": [
        20846,
        21057
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x28FF"
    },
    "10206": {
      "branch": 170,
      "fn": "Governance.submitVerification",
      "offset": [
        20846,
        21057
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "10207": {
      "fn": "Governance.submitVerification",
      "offset": [
        20887,
        20918
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 82,
      "value": "0xFFFF"
    },
    "10210": {
      "fn": "Governance.submitVerification",
      "offset": [
        20887,
        20918
      ],
      "op": "DUP9",
      "path": "2"
    },
    "10211": {
      "fn": "Governance.submitVerification",
      "offset": [
        20887,
        20918
      ],
      "op": "AND",
      "path": "2"
    },
    "10212": {
      "fn": "Governance.submitVerification",
      "offset": [
        20887,
        20903
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "10215": {
      "fn": "Governance.submitVerification",
      "offset": [
        20887,
        20903
      ],
      "op": "DUP7",
      "path": "2"
    },
    "10216": {
      "fn": "Governance.submitVerification",
      "offset": [
        20887,
        20903
      ],
      "op": "ADD",
      "path": "2"
    },
    "10217": {
      "fn": "Governance.submitVerification",
      "offset": [
        20887,
        20918
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10218": {
      "fn": "Governance.submitVerification",
      "offset": [
        20936,
        20954
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 83,
      "value": "0x60"
    },
    "10220": {
      "fn": "Governance.submitVerification",
      "offset": [
        20936,
        20954
      ],
      "op": "DUP6",
      "path": "2"
    },
    "10221": {
      "fn": "Governance.submitVerification",
      "offset": [
        20936,
        20954
      ],
      "op": "ADD",
      "path": "2"
    },
    "10222": {
      "fn": "Governance.submitVerification",
      "offset": [
        20936,
        20961
      ],
      "op": "DUP3",
      "path": "2"
    },
    "10223": {
      "fn": "Governance.submitVerification",
      "offset": [
        20936,
        20961
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10224": {
      "fn": "Governance.submitVerification",
      "offset": [
        20936,
        20961
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10225": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10227": {
      "fn": "Governance.submitVerification",
      "offset": [
        20979,
        20993
      ],
      "op": "DUP8",
      "path": "2",
      "statement": 84
    },
    "10228": {
      "fn": "Governance.submitVerification",
      "offset": [
        20979,
        20993
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10229": {
      "fn": "Governance.submitVerification",
      "offset": [
        20979,
        20993
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10230": {
      "fn": "Governance.submitVerification",
      "offset": [
        20979,
        20984
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA"
    },
    "10232": {
      "fn": "Governance.submitVerification",
      "offset": [
        20979,
        20993
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "10234": {
      "fn": "Governance.submitVerification",
      "offset": [
        20979,
        20993
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10235": {
      "fn": "Governance.submitVerification",
      "offset": [
        20979,
        20993
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "10237": {
      "fn": "Governance.submitVerification",
      "offset": [
        20979,
        20993
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10238": {
      "fn": "Governance.submitVerification",
      "offset": [
        20979,
        20993
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "10239": {
      "fn": "Governance.submitVerification",
      "offset": [
        20979,
        21002
      ],
      "op": "DUP6",
      "path": "2"
    },
    "10240": {
      "fn": "Governance.submitVerification",
      "offset": [
        20979,
        21002
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "10241": {
      "fn": "Governance.submitVerification",
      "offset": [
        20887,
        20893
      ],
      "op": "DUP7",
      "path": "2"
    },
    "10242": {
      "fn": "Governance.submitVerification",
      "offset": [
        20887,
        20893
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "10243": {
      "fn": "Governance.submitVerification",
      "offset": [
        20979,
        20993
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10244": {
      "fn": "Governance.submitVerification",
      "offset": [
        20979,
        20993
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10245": {
      "fn": "Governance.submitVerification",
      "offset": [
        20979,
        20993
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10246": {
      "fn": "Governance.submitVerification",
      "offset": [
        20979,
        21002
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x280F"
    },
    "10249": {
      "fn": "Governance.submitVerification",
      "offset": [
        20979,
        21002
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10250": {
      "fn": "Governance.submitVerification",
      "offset": [
        20979,
        20993
      ],
      "op": "DUP3",
      "path": "2"
    },
    "10251": {
      "fn": "Governance.submitVerification",
      "offset": [
        20979,
        21002
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3FB8"
    },
    "10254": {
      "fn": "Governance.submitVerification",
      "jump": "i",
      "offset": [
        20979,
        21002
      ],
      "op": "JUMP",
      "path": "2"
    },
    "10255": {
      "fn": "Governance.submitVerification",
      "offset": [
        20979,
        21002
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10256": {
      "op": "POP"
    },
    "10257": {
      "fn": "Governance.submitVerification",
      "offset": [
        20979,
        21002
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "10259": {
      "fn": "Governance.submitVerification",
      "offset": [
        20979,
        21002
      ],
      "op": "DUP3",
      "path": "2"
    },
    "10260": {
      "fn": "Governance.submitVerification",
      "offset": [
        20979,
        21002
      ],
      "op": "ADD",
      "path": "2"
    },
    "10261": {
      "fn": "Governance.submitVerification",
      "offset": [
        20979,
        21002
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "10262": {
      "fn": "Governance.submitVerification",
      "offset": [
        20979,
        21002
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "10264": {
      "fn": "Governance.submitVerification",
      "offset": [
        20979,
        21002
      ],
      "op": "DUP3",
      "path": "2"
    },
    "10265": {
      "fn": "Governance.submitVerification",
      "offset": [
        20979,
        21002
      ],
      "op": "ADD",
      "path": "2"
    },
    "10266": {
      "fn": "Governance.submitVerification",
      "offset": [
        20979,
        21002
      ],
      "op": "DUP1",
      "path": "2"
    },
    "10267": {
      "fn": "Governance.submitVerification",
      "offset": [
        20979,
        21002
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "10268": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "10274": {
      "op": "NOT"
    },
    "10275": {
      "fn": "Governance.submitVerification",
      "offset": [
        20979,
        21002
      ],
      "op": "AND",
      "path": "2"
    },
    "10276": {
      "fn": "Governance.submitVerification",
      "offset": [
        20979,
        21002
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "10282": {
      "fn": "Governance.submitVerification",
      "offset": [
        20979,
        21002
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "10283": {
      "fn": "Governance.submitVerification",
      "offset": [
        20979,
        21002
      ],
      "op": "DUP4",
      "path": "2"
    },
    "10284": {
      "fn": "Governance.submitVerification",
      "offset": [
        20979,
        21002
      ],
      "op": "AND",
      "path": "2"
    },
    "10285": {
      "fn": "Governance.submitVerification",
      "offset": [
        20979,
        21002
      ],
      "op": "OR",
      "path": "2"
    },
    "10286": {
      "fn": "Governance.submitVerification",
      "offset": [
        20979,
        21002
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10287": {
      "fn": "Governance.submitVerification",
      "offset": [
        20979,
        21002
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "10288": {
      "fn": "Governance.submitVerification",
      "offset": [
        20979,
        21002
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "10290": {
      "fn": "Governance.submitVerification",
      "offset": [
        20979,
        21002
      ],
      "op": "DUP4",
      "path": "2"
    },
    "10291": {
      "fn": "Governance.submitVerification",
      "offset": [
        20979,
        21002
      ],
      "op": "ADD",
      "path": "2"
    },
    "10292": {
      "fn": "Governance.submitVerification",
      "offset": [
        20979,
        21002
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "10293": {
      "fn": "Governance.submitVerification",
      "offset": [
        20979,
        21002
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "10295": {
      "fn": "Governance.submitVerification",
      "offset": [
        20979,
        21002
      ],
      "op": "DUP4",
      "path": "2"
    },
    "10296": {
      "fn": "Governance.submitVerification",
      "offset": [
        20979,
        21002
      ],
      "op": "ADD",
      "path": "2"
    },
    "10297": {
      "fn": "Governance.submitVerification",
      "offset": [
        20979,
        21002
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "10298": {
      "fn": "Governance.submitVerification",
      "offset": [
        20979,
        21002
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "10300": {
      "fn": "Governance.submitVerification",
      "offset": [
        20979,
        21002
      ],
      "op": "DUP4",
      "path": "2"
    },
    "10301": {
      "fn": "Governance.submitVerification",
      "offset": [
        20979,
        21002
      ],
      "op": "ADD",
      "path": "2"
    },
    "10302": {
      "fn": "Governance.submitVerification",
      "offset": [
        20979,
        21002
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "10303": {
      "fn": "Governance.submitVerification",
      "offset": [
        20979,
        21002
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "10305": {
      "fn": "Governance.submitVerification",
      "offset": [
        20979,
        21002
      ],
      "op": "DUP4",
      "path": "2"
    },
    "10306": {
      "fn": "Governance.submitVerification",
      "offset": [
        20979,
        21002
      ],
      "op": "ADD",
      "path": "2"
    },
    "10307": {
      "fn": "Governance.submitVerification",
      "offset": [
        20979,
        21002
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "10308": {
      "fn": "Governance.submitVerification",
      "offset": [
        20979,
        21002
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x80"
    },
    "10310": {
      "fn": "Governance.submitVerification",
      "offset": [
        20979,
        21002
      ],
      "op": "DUP4",
      "path": "2"
    },
    "10311": {
      "fn": "Governance.submitVerification",
      "offset": [
        20979,
        21002
      ],
      "op": "ADD",
      "path": "2"
    },
    "10312": {
      "fn": "Governance.submitVerification",
      "offset": [
        20979,
        21002
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "10313": {
      "fn": "Governance.submitVerification",
      "offset": [
        20979,
        21002
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "10315": {
      "fn": "Governance.submitVerification",
      "offset": [
        20979,
        21002
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10316": {
      "fn": "Governance.submitVerification",
      "offset": [
        20979,
        21002
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "10317": {
      "fn": "Governance.submitVerification",
      "offset": [
        20979,
        21002
      ],
      "op": "ADD",
      "path": "2"
    },
    "10318": {
      "fn": "Governance.submitVerification",
      "offset": [
        20979,
        21002
      ],
      "op": "DUP1",
      "path": "2"
    },
    "10319": {
      "fn": "Governance.submitVerification",
      "offset": [
        20979,
        21002
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "10320": {
      "fn": "Governance.submitVerification",
      "offset": [
        20979,
        21002
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA0"
    },
    "10322": {
      "fn": "Governance.submitVerification",
      "offset": [
        20979,
        21002
      ],
      "op": "DUP6",
      "path": "2"
    },
    "10323": {
      "fn": "Governance.submitVerification",
      "offset": [
        20979,
        21002
      ],
      "op": "ADD",
      "path": "2"
    },
    "10324": {
      "fn": "Governance.submitVerification",
      "offset": [
        20979,
        21002
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "10325": {
      "fn": "Governance.submitVerification",
      "offset": [
        20979,
        21002
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xC0"
    },
    "10327": {
      "fn": "Governance.submitVerification",
      "offset": [
        20979,
        21002
      ],
      "op": "DUP7",
      "path": "2"
    },
    "10328": {
      "fn": "Governance.submitVerification",
      "offset": [
        20979,
        21002
      ],
      "op": "ADD",
      "path": "2"
    },
    "10329": {
      "fn": "Governance.submitVerification",
      "offset": [
        20979,
        21002
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "10330": {
      "fn": "Governance.submitVerification",
      "offset": [
        20979,
        21002
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE0"
    },
    "10332": {
      "fn": "Governance.submitVerification",
      "offset": [
        20979,
        21002
      ],
      "op": "DUP8",
      "path": "2"
    },
    "10333": {
      "fn": "Governance.submitVerification",
      "offset": [
        20979,
        21002
      ],
      "op": "ADD",
      "path": "2"
    },
    "10334": {
      "fn": "Governance.submitVerification",
      "offset": [
        20979,
        21002
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "10335": {
      "fn": "Governance.submitVerification",
      "offset": [
        20979,
        21002
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "10338": {
      "fn": "Governance.submitVerification",
      "offset": [
        20979,
        21002
      ],
      "op": "DUP1",
      "path": "2"
    },
    "10339": {
      "fn": "Governance.submitVerification",
      "offset": [
        20979,
        21002
      ],
      "op": "DUP10",
      "path": "2"
    },
    "10340": {
      "fn": "Governance.submitVerification",
      "offset": [
        20979,
        21002
      ],
      "op": "ADD",
      "path": "2"
    },
    "10341": {
      "fn": "Governance.submitVerification",
      "offset": [
        20979,
        21002
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "10342": {
      "fn": "Governance.submitVerification",
      "offset": [
        20979,
        21002
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x120"
    },
    "10345": {
      "fn": "Governance.submitVerification",
      "offset": [
        20979,
        21002
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10346": {
      "fn": "Governance.submitVerification",
      "offset": [
        20979,
        21002
      ],
      "op": "SWAP10",
      "path": "2"
    },
    "10347": {
      "fn": "Governance.submitVerification",
      "offset": [
        20979,
        21002
      ],
      "op": "ADD",
      "path": "2"
    },
    "10348": {
      "fn": "Governance.submitVerification",
      "offset": [
        20979,
        21002
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "10349": {
      "fn": "Governance.submitVerification",
      "offset": [
        20979,
        21002
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "10351": {
      "fn": "Governance.submitVerification",
      "offset": [
        20979,
        21002
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10352": {
      "fn": "Governance.submitVerification",
      "offset": [
        20979,
        21002
      ],
      "op": "SWAP9",
      "path": "2"
    },
    "10353": {
      "fn": "Governance.submitVerification",
      "offset": [
        20979,
        21002
      ],
      "op": "AND",
      "path": "2"
    },
    "10354": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "10359": {
      "op": "NOT"
    },
    "10360": {
      "fn": "Governance.submitVerification",
      "offset": [
        20979,
        21002
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10361": {
      "fn": "Governance.submitVerification",
      "offset": [
        20979,
        21002
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "10362": {
      "fn": "Governance.submitVerification",
      "offset": [
        20979,
        21002
      ],
      "op": "AND",
      "path": "2"
    },
    "10363": {
      "fn": "Governance.submitVerification",
      "offset": [
        20979,
        21002
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "10364": {
      "fn": "Governance.submitVerification",
      "offset": [
        20979,
        21002
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10365": {
      "fn": "Governance.submitVerification",
      "offset": [
        20979,
        21002
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "10366": {
      "fn": "Governance.submitVerification",
      "offset": [
        20979,
        21002
      ],
      "op": "OR",
      "path": "2"
    },
    "10367": {
      "fn": "Governance.submitVerification",
      "offset": [
        20979,
        21002
      ],
      "op": "PUSH3",
      "path": "2",
      "value": "0xFFFFFF"
    },
    "10371": {
      "fn": "Governance.submitVerification",
      "offset": [
        20979,
        21002
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10372": {
      "fn": "Governance.submitVerification",
      "offset": [
        20979,
        21002
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "10373": {
      "fn": "Governance.submitVerification",
      "offset": [
        20979,
        21002
      ],
      "op": "AND",
      "path": "2"
    },
    "10374": {
      "fn": "Governance.submitVerification",
      "offset": [
        20979,
        21002
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10375": {
      "fn": "Governance.submitVerification",
      "offset": [
        20979,
        21002
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "10376": {
      "fn": "Governance.submitVerification",
      "offset": [
        20979,
        21002
      ],
      "op": "MUL",
      "path": "2"
    },
    "10377": {
      "fn": "Governance.submitVerification",
      "offset": [
        20979,
        21002
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "10378": {
      "fn": "Governance.submitVerification",
      "offset": [
        20979,
        21002
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10379": {
      "fn": "Governance.submitVerification",
      "offset": [
        20979,
        21002
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "10380": {
      "fn": "Governance.submitVerification",
      "offset": [
        20979,
        21002
      ],
      "op": "OR",
      "path": "2"
    },
    "10381": {
      "op": "PUSH5",
      "value": "0x100000000"
    },
    "10387": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10389": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "10391": {
      "op": "SHL"
    },
    "10392": {
      "op": "SUB"
    },
    "10393": {
      "op": "NOT"
    },
    "10394": {
      "fn": "Governance.submitVerification",
      "offset": [
        20979,
        21002
      ],
      "op": "AND",
      "path": "2"
    },
    "10395": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10397": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10399": {
      "op": "SHL"
    },
    "10400": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10402": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10404": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "10406": {
      "op": "SHL"
    },
    "10407": {
      "op": "SUB"
    },
    "10408": {
      "fn": "Governance.submitVerification",
      "offset": [
        20979,
        21002
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10409": {
      "fn": "Governance.submitVerification",
      "offset": [
        20979,
        21002
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "10410": {
      "fn": "Governance.submitVerification",
      "offset": [
        20979,
        21002
      ],
      "op": "AND",
      "path": "2"
    },
    "10411": {
      "fn": "Governance.submitVerification",
      "offset": [
        20979,
        21002
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "10412": {
      "fn": "Governance.submitVerification",
      "offset": [
        20979,
        21002
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10413": {
      "fn": "Governance.submitVerification",
      "offset": [
        20979,
        21002
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "10414": {
      "fn": "Governance.submitVerification",
      "offset": [
        20979,
        21002
      ],
      "op": "MUL",
      "path": "2"
    },
    "10415": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "10418": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "10420": {
      "op": "SHL"
    },
    "10421": {
      "op": "NOT"
    },
    "10422": {
      "fn": "Governance.submitVerification",
      "offset": [
        20979,
        21002
      ],
      "op": "AND",
      "path": "2"
    },
    "10423": {
      "fn": "Governance.submitVerification",
      "offset": [
        20979,
        21002
      ],
      "op": "OR",
      "path": "2"
    },
    "10424": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10426": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "10428": {
      "op": "SHL"
    },
    "10429": {
      "fn": "Governance.submitVerification",
      "offset": [
        20979,
        21002
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "10432": {
      "fn": "Governance.submitVerification",
      "offset": [
        20979,
        21002
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "10433": {
      "fn": "Governance.submitVerification",
      "offset": [
        20979,
        21002
      ],
      "op": "DUP4",
      "path": "2"
    },
    "10434": {
      "fn": "Governance.submitVerification",
      "offset": [
        20979,
        21002
      ],
      "op": "AND",
      "path": "2"
    },
    "10435": {
      "fn": "Governance.submitVerification",
      "offset": [
        20979,
        21002
      ],
      "op": "MUL",
      "path": "2"
    },
    "10436": {
      "fn": "Governance.submitVerification",
      "offset": [
        20979,
        21002
      ],
      "op": "OR",
      "path": "2"
    },
    "10437": {
      "op": "PUSH7",
      "value": "0xFFFFFFFFFFFFFF"
    },
    "10445": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "10447": {
      "op": "SHL"
    },
    "10448": {
      "op": "NOT"
    },
    "10449": {
      "fn": "Governance.submitVerification",
      "offset": [
        20979,
        21002
      ],
      "op": "AND",
      "path": "2"
    },
    "10450": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10452": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "10454": {
      "op": "SHL"
    },
    "10455": {
      "fn": "Governance.submitVerification",
      "offset": [
        20979,
        21002
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "10456": {
      "fn": "Governance.submitVerification",
      "offset": [
        20979,
        21002
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10457": {
      "fn": "Governance.submitVerification",
      "offset": [
        20979,
        21002
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "10458": {
      "fn": "Governance.submitVerification",
      "offset": [
        20979,
        21002
      ],
      "op": "AND",
      "path": "2"
    },
    "10459": {
      "fn": "Governance.submitVerification",
      "offset": [
        20979,
        21002
      ],
      "op": "MUL",
      "path": "2"
    },
    "10460": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "10466": {
      "op": "PUSH1",
      "value": "0x90"
    },
    "10468": {
      "op": "SHL"
    },
    "10469": {
      "op": "NOT"
    },
    "10470": {
      "fn": "Governance.submitVerification",
      "offset": [
        20979,
        21002
      ],
      "op": "AND",
      "path": "2"
    },
    "10471": {
      "fn": "Governance.submitVerification",
      "offset": [
        20979,
        21002
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "10472": {
      "fn": "Governance.submitVerification",
      "offset": [
        20979,
        21002
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10473": {
      "fn": "Governance.submitVerification",
      "offset": [
        20979,
        21002
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "10474": {
      "fn": "Governance.submitVerification",
      "offset": [
        20979,
        21002
      ],
      "op": "OR",
      "path": "2"
    },
    "10475": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10477": {
      "op": "PUSH1",
      "value": "0x90"
    },
    "10479": {
      "op": "SHL"
    },
    "10480": {
      "fn": "Governance.submitVerification",
      "offset": [
        20979,
        21002
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "10481": {
      "fn": "Governance.submitVerification",
      "offset": [
        20979,
        21002
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10482": {
      "fn": "Governance.submitVerification",
      "offset": [
        20979,
        21002
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "10483": {
      "fn": "Governance.submitVerification",
      "offset": [
        20979,
        21002
      ],
      "op": "AND",
      "path": "2"
    },
    "10484": {
      "fn": "Governance.submitVerification",
      "offset": [
        20979,
        21002
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "10485": {
      "fn": "Governance.submitVerification",
      "offset": [
        20979,
        21002
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10486": {
      "fn": "Governance.submitVerification",
      "offset": [
        20979,
        21002
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "10487": {
      "fn": "Governance.submitVerification",
      "offset": [
        20979,
        21002
      ],
      "op": "MUL",
      "path": "2"
    },
    "10488": {
      "fn": "Governance.submitVerification",
      "offset": [
        20979,
        21002
      ],
      "op": "OR",
      "path": "2"
    },
    "10489": {
      "fn": "Governance.submitVerification",
      "offset": [
        20979,
        21002
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10490": {
      "fn": "Governance.submitVerification",
      "offset": [
        20979,
        21002
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "10491": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10493": {
      "op": "SWAP3"
    },
    "10494": {
      "op": "POP"
    },
    "10495": {
      "fn": "Governance.submitVerification",
      "offset": [
        20846,
        21057
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10496": {
      "fn": "Governance.submitVerification",
      "offset": [
        21153,
        21159
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10497": {
      "fn": "Governance.submitVerification",
      "offset": [
        21133,
        21139
      ],
      "op": "DUP6",
      "path": "2"
    },
    "10498": {
      "fn": "Governance.submitVerification",
      "offset": [
        21133,
        21151
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "10500": {
      "fn": "Governance.submitVerification",
      "offset": [
        21133,
        21151
      ],
      "op": "ADD",
      "path": "2"
    },
    "10501": {
      "fn": "Governance.submitVerification",
      "offset": [
        21133,
        21151
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "10502": {
      "branch": 171,
      "fn": "Governance.submitVerification",
      "offset": [
        21133,
        21159
      ],
      "op": "SUB",
      "path": "2"
    },
    "10503": {
      "fn": "Governance.submitVerification",
      "offset": [
        21130,
        22379
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2A52"
    },
    "10506": {
      "branch": 171,
      "fn": "Governance.submitVerification",
      "offset": [
        21130,
        22379
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "10507": {
      "fn": "Governance.submitVerification",
      "offset": [
        21178,
        21191
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "10509": {
      "fn": "Governance.submitVerification",
      "offset": [
        21209,
        21210
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "10511": {
      "fn": "Governance.submitVerification",
      "offset": [
        21194,
        21200
      ],
      "op": "DUP7",
      "path": "2"
    },
    "10512": {
      "fn": "Governance.submitVerification",
      "offset": [
        21194,
        21208
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xC0"
    },
    "10514": {
      "fn": "Governance.submitVerification",
      "offset": [
        21194,
        21208
      ],
      "op": "ADD",
      "path": "2"
    },
    "10515": {
      "fn": "Governance.submitVerification",
      "offset": [
        21194,
        21208
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "10516": {
      "fn": "Governance.submitVerification",
      "offset": [
        21194,
        21210
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x291D"
    },
    "10519": {
      "fn": "Governance.submitVerification",
      "offset": [
        21194,
        21210
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "10520": {
      "fn": "Governance.submitVerification",
      "offset": [
        21194,
        21210
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10521": {
      "fn": "Governance.submitVerification",
      "offset": [
        21194,
        21210
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x42B9"
    },
    "10524": {
      "fn": "Governance.submitVerification",
      "jump": "i",
      "offset": [
        21194,
        21210
      ],
      "op": "JUMP",
      "path": "2"
    },
    "10525": {
      "fn": "Governance.submitVerification",
      "offset": [
        21194,
        21210
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10526": {
      "fn": "Governance.submitVerification",
      "offset": [
        21266,
        21276
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "10528": {
      "fn": "Governance.submitVerification",
      "offset": [
        21266,
        21276
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "10529": {
      "fn": "Governance.submitVerification",
      "offset": [
        21266,
        21276
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "10532": {
      "fn": "Governance.submitVerification",
      "offset": [
        21285,
        21301
      ],
      "op": "DUP9",
      "path": "2"
    },
    "10533": {
      "fn": "Governance.submitVerification",
      "offset": [
        21285,
        21301
      ],
      "op": "ADD",
      "path": "2"
    },
    "10534": {
      "fn": "Governance.submitVerification",
      "offset": [
        21285,
        21301
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "10535": {
      "fn": "Governance.submitVerification",
      "offset": [
        21266,
        21302
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "10537": {
      "fn": "Governance.submitVerification",
      "offset": [
        21266,
        21302
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "10538": {
      "op": "PUSH4",
      "value": "0x31A9108F"
    },
    "10543": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "10545": {
      "op": "SHL"
    },
    "10546": {
      "fn": "Governance.submitVerification",
      "offset": [
        21266,
        21302
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10547": {
      "fn": "Governance.submitVerification",
      "offset": [
        21266,
        21302
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10548": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "10551": {
      "op": "SWAP1"
    },
    "10552": {
      "op": "SWAP2"
    },
    "10553": {
      "op": "AND"
    },
    "10554": {
      "fn": "Governance.submitVerification",
      "offset": [
        21266,
        21302
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "10556": {
      "fn": "Governance.submitVerification",
      "offset": [
        21266,
        21302
      ],
      "op": "DUP3",
      "path": "2"
    },
    "10557": {
      "fn": "Governance.submitVerification",
      "offset": [
        21266,
        21302
      ],
      "op": "ADD",
      "path": "2"
    },
    "10558": {
      "op": "MSTORE"
    },
    "10559": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10561": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10563": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "10565": {
      "op": "SHL"
    },
    "10566": {
      "op": "SUB"
    },
    "10567": {
      "fn": "Governance.submitVerification",
      "offset": [
        21178,
        21210
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "10568": {
      "fn": "Governance.submitVerification",
      "offset": [
        21178,
        21210
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10569": {
      "fn": "Governance.submitVerification",
      "offset": [
        21178,
        21210
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "10570": {
      "fn": "Governance.submitVerification",
      "offset": [
        21178,
        21210
      ],
      "op": "AND",
      "path": "2"
    },
    "10571": {
      "fn": "Governance.submitVerification",
      "offset": [
        21178,
        21210
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "10572": {
      "op": "POP"
    },
    "10573": {
      "fn": "Governance.submitVerification",
      "offset": [
        21228,
        21255
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "10575": {
      "fn": "Governance.submitVerification",
      "offset": [
        21228,
        21255
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "10576": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10578": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10580": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10582": {
      "op": "SHL"
    },
    "10583": {
      "op": "SUB"
    },
    "10584": {
      "fn": "Governance.submitVerification",
      "offset": [
        21266,
        21276
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10585": {
      "fn": "Governance.submitVerification",
      "offset": [
        21266,
        21276
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "10586": {
      "fn": "Governance.submitVerification",
      "offset": [
        21266,
        21276
      ],
      "op": "AND",
      "path": "2"
    },
    "10587": {
      "fn": "Governance.submitVerification",
      "offset": [
        21266,
        21276
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10588": {
      "fn": "Governance.submitVerification",
      "offset": [
        21266,
        21284
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x6352211E"
    },
    "10593": {
      "fn": "Governance.submitVerification",
      "offset": [
        21266,
        21284
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10594": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10596": {
      "op": "ADD"
    },
    "10597": {
      "fn": "Governance.submitVerification",
      "offset": [
        21266,
        21302
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "10599": {
      "fn": "Governance.submitVerification",
      "offset": [
        21266,
        21302
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "10601": {
      "fn": "Governance.submitVerification",
      "offset": [
        21266,
        21302
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "10602": {
      "fn": "Governance.submitVerification",
      "offset": [
        21266,
        21302
      ],
      "op": "DUP1",
      "path": "2"
    },
    "10603": {
      "fn": "Governance.submitVerification",
      "offset": [
        21266,
        21302
      ],
      "op": "DUP4",
      "path": "2"
    },
    "10604": {
      "fn": "Governance.submitVerification",
      "offset": [
        21266,
        21302
      ],
      "op": "SUB",
      "path": "2"
    },
    "10605": {
      "fn": "Governance.submitVerification",
      "offset": [
        21266,
        21302
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10606": {
      "fn": "Governance.submitVerification",
      "offset": [
        21266,
        21302
      ],
      "op": "DUP7",
      "path": "2"
    },
    "10607": {
      "fn": "Governance.submitVerification",
      "offset": [
        21266,
        21302
      ],
      "op": "GAS",
      "path": "2"
    },
    "10608": {
      "fn": "Governance.submitVerification",
      "offset": [
        21266,
        21302
      ],
      "op": "STATICCALL",
      "path": "2"
    },
    "10609": {
      "fn": "Governance.submitVerification",
      "offset": [
        21266,
        21302
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "10610": {
      "fn": "Governance.submitVerification",
      "offset": [
        21266,
        21302
      ],
      "op": "DUP1",
      "path": "2"
    },
    "10611": {
      "fn": "Governance.submitVerification",
      "offset": [
        21266,
        21302
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "10612": {
      "fn": "Governance.submitVerification",
      "offset": [
        21266,
        21302
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2981"
    },
    "10615": {
      "fn": "Governance.submitVerification",
      "offset": [
        21266,
        21302
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "10616": {
      "fn": "Governance.submitVerification",
      "offset": [
        21266,
        21302
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "10617": {
      "fn": "Governance.submitVerification",
      "offset": [
        21266,
        21302
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "10619": {
      "fn": "Governance.submitVerification",
      "offset": [
        21266,
        21302
      ],
      "op": "DUP1",
      "path": "2"
    },
    "10620": {
      "fn": "Governance.submitVerification",
      "offset": [
        21266,
        21302
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "10621": {
      "fn": "Governance.submitVerification",
      "offset": [
        21266,
        21302
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "10622": {
      "fn": "Governance.submitVerification",
      "offset": [
        21266,
        21302
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "10624": {
      "fn": "Governance.submitVerification",
      "offset": [
        21266,
        21302
      ],
      "op": "REVERT",
      "path": "2"
    },
    "10625": {
      "fn": "Governance.submitVerification",
      "offset": [
        21266,
        21302
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10626": {
      "fn": "Governance.submitVerification",
      "offset": [
        21266,
        21302
      ],
      "op": "POP",
      "path": "2"
    },
    "10627": {
      "fn": "Governance.submitVerification",
      "offset": [
        21266,
        21302
      ],
      "op": "POP",
      "path": "2"
    },
    "10628": {
      "fn": "Governance.submitVerification",
      "offset": [
        21266,
        21302
      ],
      "op": "POP",
      "path": "2"
    },
    "10629": {
      "fn": "Governance.submitVerification",
      "offset": [
        21266,
        21302
      ],
      "op": "POP",
      "path": "2"
    },
    "10630": {
      "fn": "Governance.submitVerification",
      "offset": [
        21266,
        21302
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "10632": {
      "fn": "Governance.submitVerification",
      "offset": [
        21266,
        21302
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "10633": {
      "fn": "Governance.submitVerification",
      "offset": [
        21266,
        21302
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "10634": {
      "fn": "Governance.submitVerification",
      "offset": [
        21266,
        21302
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "10636": {
      "fn": "Governance.submitVerification",
      "offset": [
        21266,
        21302
      ],
      "op": "NOT",
      "path": "2"
    },
    "10637": {
      "fn": "Governance.submitVerification",
      "offset": [
        21266,
        21302
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "10639": {
      "fn": "Governance.submitVerification",
      "offset": [
        21266,
        21302
      ],
      "op": "DUP3",
      "path": "2"
    },
    "10640": {
      "fn": "Governance.submitVerification",
      "offset": [
        21266,
        21302
      ],
      "op": "ADD",
      "path": "2"
    },
    "10641": {
      "fn": "Governance.submitVerification",
      "offset": [
        21266,
        21302
      ],
      "op": "AND",
      "path": "2"
    },
    "10642": {
      "fn": "Governance.submitVerification",
      "offset": [
        21266,
        21302
      ],
      "op": "DUP3",
      "path": "2"
    },
    "10643": {
      "fn": "Governance.submitVerification",
      "offset": [
        21266,
        21302
      ],
      "op": "ADD",
      "path": "2"
    },
    "10644": {
      "fn": "Governance.submitVerification",
      "offset": [
        21266,
        21302
      ],
      "op": "DUP1",
      "path": "2"
    },
    "10645": {
      "fn": "Governance.submitVerification",
      "offset": [
        21266,
        21302
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "10647": {
      "fn": "Governance.submitVerification",
      "offset": [
        21266,
        21302
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10648": {
      "fn": "Governance.submitVerification",
      "offset": [
        21266,
        21302
      ],
      "op": "POP",
      "path": "2"
    },
    "10649": {
      "fn": "Governance.submitVerification",
      "offset": [
        21266,
        21302
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10650": {
      "fn": "Governance.submitVerification",
      "offset": [
        21266,
        21302
      ],
      "op": "ADD",
      "path": "2"
    },
    "10651": {
      "fn": "Governance.submitVerification",
      "offset": [
        21266,
        21302
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10652": {
      "fn": "Governance.submitVerification",
      "offset": [
        21266,
        21302
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x29A5"
    },
    "10655": {
      "fn": "Governance.submitVerification",
      "offset": [
        21266,
        21302
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "10656": {
      "fn": "Governance.submitVerification",
      "offset": [
        21266,
        21302
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10657": {
      "fn": "Governance.submitVerification",
      "offset": [
        21266,
        21302
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3E5B"
    },
    "10660": {
      "fn": "Governance.submitVerification",
      "jump": "i",
      "offset": [
        21266,
        21302
      ],
      "op": "JUMP",
      "path": "2"
    },
    "10661": {
      "fn": "Governance.submitVerification",
      "offset": [
        21266,
        21302
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10662": {
      "fn": "Governance.submitVerification",
      "offset": [
        21322,
        21332
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 85,
      "value": "0x2"
    },
    "10664": {
      "fn": "Governance.submitVerification",
      "offset": [
        21322,
        21332
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "10665": {
      "fn": "Governance.submitVerification",
      "offset": [
        21322,
        21332
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "10668": {
      "fn": "Governance.submitVerification",
      "offset": [
        21344,
        21360
      ],
      "op": "DUP10",
      "path": "2"
    },
    "10669": {
      "fn": "Governance.submitVerification",
      "offset": [
        21344,
        21360
      ],
      "op": "ADD",
      "path": "2"
    },
    "10670": {
      "fn": "Governance.submitVerification",
      "offset": [
        21344,
        21360
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "10671": {
      "fn": "Governance.submitVerification",
      "offset": [
        21362,
        21387
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xD"
    },
    "10673": {
      "fn": "Governance.submitVerification",
      "offset": [
        21362,
        21387
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "10674": {
      "fn": "Governance.submitVerification",
      "offset": [
        21322,
        21388
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "10676": {
      "fn": "Governance.submitVerification",
      "offset": [
        21322,
        21388
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "10677": {
      "op": "PUSH4",
      "value": "0x8AD4D6A5"
    },
    "10682": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10684": {
      "op": "SHL"
    },
    "10685": {
      "fn": "Governance.submitVerification",
      "offset": [
        21322,
        21388
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10686": {
      "fn": "Governance.submitVerification",
      "offset": [
        21322,
        21388
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10687": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "10690": {
      "op": "SWAP1"
    },
    "10691": {
      "op": "SWAP3"
    },
    "10692": {
      "op": "AND"
    },
    "10693": {
      "fn": "Governance.submitVerification",
      "offset": [
        21322,
        21388
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "10695": {
      "fn": "Governance.submitVerification",
      "offset": [
        21322,
        21388
      ],
      "op": "DUP4",
      "path": "2"
    },
    "10696": {
      "fn": "Governance.submitVerification",
      "offset": [
        21322,
        21388
      ],
      "op": "ADD",
      "path": "2"
    },
    "10697": {
      "op": "MSTORE"
    },
    "10698": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10700": {
      "op": "DUP3"
    },
    "10701": {
      "op": "ADD"
    },
    "10702": {
      "op": "MSTORE"
    },
    "10703": {
      "fn": "Governance.submitVerification",
      "offset": [
        21228,
        21303
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "10704": {
      "fn": "Governance.submitVerification",
      "offset": [
        21228,
        21303
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "10705": {
      "op": "POP"
    },
    "10706": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10708": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10710": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10712": {
      "op": "SHL"
    },
    "10713": {
      "op": "SUB"
    },
    "10714": {
      "fn": "Governance.submitVerification",
      "offset": [
        21322,
        21332
      ],
      "op": "AND",
      "path": "2"
    },
    "10715": {
      "fn": "Governance.submitVerification",
      "offset": [
        21322,
        21332
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10716": {
      "fn": "Governance.submitVerification",
      "offset": [
        21322,
        21343
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x8AD4D6A5"
    },
    "10721": {
      "fn": "Governance.submitVerification",
      "offset": [
        21322,
        21343
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10722": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "10724": {
      "op": "ADD"
    },
    "10725": {
      "fn": "Governance.submitVerification",
      "offset": [
        21322,
        21388
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "10727": {
      "fn": "Governance.submitVerification",
      "offset": [
        21322,
        21388
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "10729": {
      "fn": "Governance.submitVerification",
      "offset": [
        21322,
        21388
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "10730": {
      "fn": "Governance.submitVerification",
      "offset": [
        21322,
        21388
      ],
      "op": "DUP1",
      "path": "2"
    },
    "10731": {
      "fn": "Governance.submitVerification",
      "offset": [
        21322,
        21388
      ],
      "op": "DUP4",
      "path": "2"
    },
    "10732": {
      "fn": "Governance.submitVerification",
      "offset": [
        21322,
        21388
      ],
      "op": "SUB",
      "path": "2"
    },
    "10733": {
      "fn": "Governance.submitVerification",
      "offset": [
        21322,
        21388
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10734": {
      "fn": "Governance.submitVerification",
      "offset": [
        21322,
        21388
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "10736": {
      "fn": "Governance.submitVerification",
      "offset": [
        21322,
        21388
      ],
      "op": "DUP8",
      "path": "2"
    },
    "10737": {
      "fn": "Governance.submitVerification",
      "offset": [
        21322,
        21388
      ],
      "op": "DUP1",
      "path": "2"
    },
    "10738": {
      "fn": "Governance.submitVerification",
      "offset": [
        21322,
        21388
      ],
      "op": "EXTCODESIZE",
      "path": "2"
    },
    "10739": {
      "fn": "Governance.submitVerification",
      "offset": [
        21322,
        21388
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "10740": {
      "fn": "Governance.submitVerification",
      "offset": [
        21322,
        21388
      ],
      "op": "DUP1",
      "path": "2"
    },
    "10741": {
      "fn": "Governance.submitVerification",
      "offset": [
        21322,
        21388
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "10742": {
      "fn": "Governance.submitVerification",
      "offset": [
        21322,
        21388
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x29FE"
    },
    "10745": {
      "fn": "Governance.submitVerification",
      "offset": [
        21322,
        21388
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "10746": {
      "fn": "Governance.submitVerification",
      "offset": [
        21322,
        21388
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "10748": {
      "fn": "Governance.submitVerification",
      "offset": [
        21322,
        21388
      ],
      "op": "DUP1",
      "path": "2"
    },
    "10749": {
      "fn": "Governance.submitVerification",
      "offset": [
        21322,
        21388
      ],
      "op": "REVERT",
      "path": "2"
    },
    "10750": {
      "fn": "Governance.submitVerification",
      "offset": [
        21322,
        21388
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10751": {
      "fn": "Governance.submitVerification",
      "offset": [
        21322,
        21388
      ],
      "op": "POP",
      "path": "2"
    },
    "10752": {
      "fn": "Governance.submitVerification",
      "offset": [
        21322,
        21388
      ],
      "op": "GAS",
      "path": "2"
    },
    "10753": {
      "fn": "Governance.submitVerification",
      "offset": [
        21322,
        21388
      ],
      "op": "CALL",
      "path": "2"
    },
    "10754": {
      "fn": "Governance.submitVerification",
      "offset": [
        21322,
        21388
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "10755": {
      "fn": "Governance.submitVerification",
      "offset": [
        21322,
        21388
      ],
      "op": "DUP1",
      "path": "2"
    },
    "10756": {
      "fn": "Governance.submitVerification",
      "offset": [
        21322,
        21388
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "10757": {
      "fn": "Governance.submitVerification",
      "offset": [
        21322,
        21388
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2A12"
    },
    "10760": {
      "fn": "Governance.submitVerification",
      "offset": [
        21322,
        21388
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "10761": {
      "fn": "Governance.submitVerification",
      "offset": [
        21322,
        21388
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "10762": {
      "fn": "Governance.submitVerification",
      "offset": [
        21322,
        21388
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "10764": {
      "fn": "Governance.submitVerification",
      "offset": [
        21322,
        21388
      ],
      "op": "DUP1",
      "path": "2"
    },
    "10765": {
      "fn": "Governance.submitVerification",
      "offset": [
        21322,
        21388
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "10766": {
      "fn": "Governance.submitVerification",
      "offset": [
        21322,
        21388
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "10767": {
      "fn": "Governance.submitVerification",
      "offset": [
        21322,
        21388
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "10769": {
      "fn": "Governance.submitVerification",
      "offset": [
        21322,
        21388
      ],
      "op": "REVERT",
      "path": "2"
    },
    "10770": {
      "fn": "Governance.submitVerification",
      "offset": [
        21322,
        21388
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10771": {
      "op": "POP"
    },
    "10772": {
      "op": "POP"
    },
    "10773": {
      "fn": "Governance.submitVerification",
      "offset": [
        21406,
        21416
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 86,
      "value": "0x2"
    },
    "10775": {
      "fn": "Governance.submitVerification",
      "offset": [
        21406,
        21416
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "10776": {
      "fn": "Governance.submitVerification",
      "offset": [
        21436,
        21461
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xD"
    },
    "10778": {
      "fn": "Governance.submitVerification",
      "offset": [
        21436,
        21461
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "10779": {
      "fn": "Governance.submitVerification",
      "offset": [
        21406,
        21462
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "10781": {
      "fn": "Governance.submitVerification",
      "offset": [
        21406,
        21462
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "10782": {
      "op": "PUSH4",
      "value": "0x8AD4D6A5"
    },
    "10787": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10789": {
      "op": "SHL"
    },
    "10790": {
      "fn": "Governance.submitVerification",
      "offset": [
        21406,
        21462
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10791": {
      "fn": "Governance.submitVerification",
      "offset": [
        21406,
        21462
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10792": {
      "fn": "Governance.submitVerification",
      "offset": [
        21406,
        21462
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "10794": {
      "fn": "Governance.submitVerification",
      "offset": [
        21406,
        21462
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10795": {
      "fn": "Governance.submitVerification",
      "offset": [
        21406,
        21462
      ],
      "op": "ADD",
      "path": "2"
    },
    "10796": {
      "op": "DUP16"
    },
    "10797": {
      "op": "SWAP1"
    },
    "10798": {
      "op": "MSTORE"
    },
    "10799": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10801": {
      "op": "DUP2"
    },
    "10802": {
      "op": "ADD"
    },
    "10803": {
      "op": "SWAP2"
    },
    "10804": {
      "op": "SWAP1"
    },
    "10805": {
      "op": "SWAP2"
    },
    "10806": {
      "op": "MSTORE"
    },
    "10807": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10809": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10811": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10813": {
      "op": "SHL"
    },
    "10814": {
      "op": "SUB"
    },
    "10815": {
      "fn": "Governance.submitVerification",
      "offset": [
        21406,
        21416
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10816": {
      "fn": "Governance.submitVerification",
      "offset": [
        21406,
        21416
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "10817": {
      "fn": "Governance.submitVerification",
      "offset": [
        21406,
        21416
      ],
      "op": "AND",
      "path": "2"
    },
    "10818": {
      "fn": "Governance.submitVerification",
      "offset": [
        21406,
        21416
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "10819": {
      "op": "POP"
    },
    "10820": {
      "fn": "Governance.submitVerification",
      "offset": [
        21406,
        21427
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x8AD4D6A5"
    },
    "10825": {
      "fn": "Governance.submitVerification",
      "offset": [
        21406,
        21427
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "10826": {
      "op": "POP"
    },
    "10827": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "10829": {
      "op": "ADD"
    },
    "10830": {
      "fn": "Governance.submitVerification",
      "offset": [
        21406,
        21462
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x266C"
    },
    "10833": {
      "op": "JUMP"
    },
    "10834": {
      "fn": "Governance.submitVerification",
      "offset": [
        21130,
        22379
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10835": {
      "fn": "Governance.submitVerification",
      "offset": [
        22094,
        22108
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xC0"
    },
    "10837": {
      "fn": "Governance.submitVerification",
      "offset": [
        22094,
        22108
      ],
      "op": "DUP6",
      "path": "2"
    },
    "10838": {
      "fn": "Governance.submitVerification",
      "offset": [
        22094,
        22108
      ],
      "op": "ADD",
      "path": "2"
    },
    "10839": {
      "fn": "Governance.submitVerification",
      "offset": [
        22094,
        22108
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "10840": {
      "fn": "Governance.submitVerification",
      "offset": [
        22078,
        22091
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "10842": {
      "fn": "Governance.submitVerification",
      "offset": [
        22133,
        22147
      ],
      "op": "DUP9",
      "path": "2",
      "statement": 87
    },
    "10843": {
      "fn": "Governance.submitVerification",
      "offset": [
        22133,
        22147
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10844": {
      "fn": "Governance.submitVerification",
      "offset": [
        22133,
        22147
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10845": {
      "fn": "Governance.submitVerification",
      "offset": [
        22133,
        22138
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA"
    },
    "10847": {
      "fn": "Governance.submitVerification",
      "offset": [
        22133,
        22147
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "10849": {
      "fn": "Governance.submitVerification",
      "offset": [
        22133,
        22147
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10850": {
      "fn": "Governance.submitVerification",
      "offset": [
        22133,
        22147
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "10852": {
      "fn": "Governance.submitVerification",
      "offset": [
        22133,
        22147
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10853": {
      "fn": "Governance.submitVerification",
      "offset": [
        22133,
        22147
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "10854": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10856": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10858": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "10860": {
      "op": "SHL"
    },
    "10861": {
      "op": "SUB"
    },
    "10862": {
      "fn": "Governance.submitVerification",
      "offset": [
        22078,
        22108
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10863": {
      "fn": "Governance.submitVerification",
      "offset": [
        22078,
        22108
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "10864": {
      "fn": "Governance.submitVerification",
      "offset": [
        22078,
        22108
      ],
      "op": "AND",
      "path": "2"
    },
    "10865": {
      "fn": "Governance.submitVerification",
      "offset": [
        22078,
        22108
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "10866": {
      "fn": "Governance.submitVerification",
      "offset": [
        22133,
        22147
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10867": {
      "fn": "Governance.submitVerification",
      "offset": [
        22126,
        22147
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2A7C"
    },
    "10870": {
      "fn": "Governance.submitVerification",
      "offset": [
        22133,
        22147
      ],
      "op": "DUP3",
      "path": "2"
    },
    "10871": {
      "fn": "Governance.submitVerification",
      "offset": [
        22078,
        22091
      ],
      "op": "DUP3",
      "path": "2"
    },
    "10872": {
      "fn": "Governance.submitVerification",
      "offset": [
        22126,
        22147
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3513"
    },
    "10875": {
      "fn": "Governance.submitVerification",
      "jump": "i",
      "offset": [
        22126,
        22147
      ],
      "op": "JUMP",
      "path": "2"
    },
    "10876": {
      "fn": "Governance.submitVerification",
      "offset": [
        22126,
        22147
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10877": {
      "op": "POP"
    },
    "10878": {
      "fn": "Governance.submitVerification",
      "offset": [
        22126,
        22147
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "10880": {
      "fn": "Governance.submitVerification",
      "offset": [
        22126,
        22147
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10881": {
      "fn": "Governance.submitVerification",
      "offset": [
        22126,
        22147
      ],
      "op": "ADD",
      "path": "2"
    },
    "10882": {
      "fn": "Governance.submitVerification",
      "offset": [
        22126,
        22147
      ],
      "op": "DUP1",
      "path": "2"
    },
    "10883": {
      "fn": "Governance.submitVerification",
      "offset": [
        22126,
        22147
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "10884": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "10890": {
      "op": "NOT"
    },
    "10891": {
      "fn": "Governance.submitVerification",
      "offset": [
        22126,
        22147
      ],
      "op": "AND",
      "path": "2"
    },
    "10892": {
      "fn": "Governance.submitVerification",
      "offset": [
        22126,
        22147
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10893": {
      "fn": "Governance.submitVerification",
      "offset": [
        22126,
        22147
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "10894": {
      "fn": "Governance.submitVerification",
      "offset": [
        22126,
        22147
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "10896": {
      "fn": "Governance.submitVerification",
      "offset": [
        22126,
        22147
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "10898": {
      "fn": "Governance.submitVerification",
      "offset": [
        22126,
        22147
      ],
      "op": "DUP3",
      "path": "2"
    },
    "10899": {
      "fn": "Governance.submitVerification",
      "offset": [
        22126,
        22147
      ],
      "op": "ADD",
      "path": "2"
    },
    "10900": {
      "fn": "Governance.submitVerification",
      "offset": [
        22126,
        22147
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10901": {
      "fn": "Governance.submitVerification",
      "offset": [
        22126,
        22147
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10902": {
      "fn": "Governance.submitVerification",
      "offset": [
        22126,
        22147
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "10903": {
      "fn": "Governance.submitVerification",
      "offset": [
        22126,
        22147
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "10905": {
      "fn": "Governance.submitVerification",
      "offset": [
        22126,
        22147
      ],
      "op": "DUP3",
      "path": "2"
    },
    "10906": {
      "fn": "Governance.submitVerification",
      "offset": [
        22126,
        22147
      ],
      "op": "ADD",
      "path": "2"
    },
    "10907": {
      "fn": "Governance.submitVerification",
      "offset": [
        22126,
        22147
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10908": {
      "fn": "Governance.submitVerification",
      "offset": [
        22126,
        22147
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10909": {
      "fn": "Governance.submitVerification",
      "offset": [
        22126,
        22147
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "10910": {
      "fn": "Governance.submitVerification",
      "offset": [
        22126,
        22147
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "10912": {
      "fn": "Governance.submitVerification",
      "offset": [
        22126,
        22147
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10913": {
      "fn": "Governance.submitVerification",
      "offset": [
        22126,
        22147
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "10914": {
      "fn": "Governance.submitVerification",
      "offset": [
        22126,
        22147
      ],
      "op": "ADD",
      "path": "2"
    },
    "10915": {
      "fn": "Governance.submitVerification",
      "offset": [
        22126,
        22147
      ],
      "op": "DUP1",
      "path": "2"
    },
    "10916": {
      "fn": "Governance.submitVerification",
      "offset": [
        22126,
        22147
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "10917": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10919": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10921": {
      "op": "PUSH1",
      "value": "0xB8"
    },
    "10923": {
      "op": "SHL"
    },
    "10924": {
      "op": "SUB"
    },
    "10925": {
      "op": "NOT"
    },
    "10926": {
      "fn": "Governance.submitVerification",
      "offset": [
        22126,
        22147
      ],
      "op": "AND",
      "path": "2"
    },
    "10927": {
      "fn": "Governance.submitVerification",
      "offset": [
        22126,
        22147
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10928": {
      "fn": "Governance.submitVerification",
      "offset": [
        22126,
        22147
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "10929": {
      "fn": "Governance.submitVerification",
      "offset": [
        22126,
        22147
      ],
      "op": "DUP1",
      "path": "2"
    },
    "10930": {
      "fn": "Governance.submitVerification",
      "offset": [
        22198,
        22205
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2AC3"
    },
    "10933": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "10935": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "10936": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10938": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10940": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10942": {
      "op": "SHL"
    },
    "10943": {
      "op": "SUB"
    },
    "10944": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "AND",
      "path": "11"
    },
    "10945": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "10946": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "JUMP",
      "path": "11"
    },
    "10947": {
      "fn": "Governance.submitVerification",
      "offset": [
        22198,
        22205
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10948": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10950": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10952": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10954": {
      "op": "SHL"
    },
    "10955": {
      "op": "SUB"
    },
    "10956": {
      "fn": "Governance.submitVerification",
      "offset": [
        22198,
        22210
      ],
      "op": "AND",
      "path": "2"
    },
    "10957": {
      "fn": "Governance.submitVerification",
      "offset": [
        22218,
        22223
      ],
      "op": "DUP4",
      "path": "2"
    },
    "10958": {
      "fn": "Governance.submitVerification",
      "offset": [
        22198,
        22228
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "10960": {
      "fn": "Governance.submitVerification",
      "offset": [
        22198,
        22228
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "10961": {
      "fn": "Governance.submitVerification",
      "offset": [
        22198,
        22228
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "10963": {
      "fn": "Governance.submitVerification",
      "offset": [
        22198,
        22228
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "10965": {
      "fn": "Governance.submitVerification",
      "offset": [
        22198,
        22228
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "10966": {
      "fn": "Governance.submitVerification",
      "offset": [
        22198,
        22228
      ],
      "op": "DUP1",
      "path": "2"
    },
    "10967": {
      "fn": "Governance.submitVerification",
      "offset": [
        22198,
        22228
      ],
      "op": "DUP4",
      "path": "2"
    },
    "10968": {
      "fn": "Governance.submitVerification",
      "offset": [
        22198,
        22228
      ],
      "op": "SUB",
      "path": "2"
    },
    "10969": {
      "fn": "Governance.submitVerification",
      "offset": [
        22198,
        22228
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10970": {
      "fn": "Governance.submitVerification",
      "offset": [
        22198,
        22228
      ],
      "op": "DUP6",
      "path": "2"
    },
    "10971": {
      "fn": "Governance.submitVerification",
      "offset": [
        22198,
        22228
      ],
      "op": "DUP8",
      "path": "2"
    },
    "10972": {
      "fn": "Governance.submitVerification",
      "offset": [
        22198,
        22228
      ],
      "op": "GAS",
      "path": "2"
    },
    "10973": {
      "fn": "Governance.submitVerification",
      "offset": [
        22198,
        22228
      ],
      "op": "CALL",
      "path": "2"
    },
    "10974": {
      "fn": "Governance.submitVerification",
      "offset": [
        22198,
        22228
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "10975": {
      "fn": "Governance.submitVerification",
      "offset": [
        22198,
        22228
      ],
      "op": "POP",
      "path": "2"
    },
    "10976": {
      "fn": "Governance.submitVerification",
      "offset": [
        22198,
        22228
      ],
      "op": "POP",
      "path": "2"
    },
    "10977": {
      "fn": "Governance.submitVerification",
      "offset": [
        22198,
        22228
      ],
      "op": "POP",
      "path": "2"
    },
    "10978": {
      "fn": "Governance.submitVerification",
      "offset": [
        22198,
        22228
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "10979": {
      "fn": "Governance.submitVerification",
      "offset": [
        22198,
        22228
      ],
      "op": "DUP1",
      "path": "2"
    },
    "10980": {
      "fn": "Governance.submitVerification",
      "offset": [
        22198,
        22228
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "10982": {
      "fn": "Governance.submitVerification",
      "offset": [
        22198,
        22228
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10983": {
      "fn": "Governance.submitVerification",
      "offset": [
        22198,
        22228
      ],
      "op": "EQ",
      "path": "2"
    },
    "10984": {
      "fn": "Governance.submitVerification",
      "offset": [
        22198,
        22228
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2B0D"
    },
    "10987": {
      "fn": "Governance.submitVerification",
      "offset": [
        22198,
        22228
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "10988": {
      "fn": "Governance.submitVerification",
      "offset": [
        22198,
        22228
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "10990": {
      "fn": "Governance.submitVerification",
      "offset": [
        22198,
        22228
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "10991": {
      "fn": "Governance.submitVerification",
      "offset": [
        22198,
        22228
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "10992": {
      "fn": "Governance.submitVerification",
      "offset": [
        22198,
        22228
      ],
      "op": "POP",
      "path": "2"
    },
    "10993": {
      "fn": "Governance.submitVerification",
      "offset": [
        22198,
        22228
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "10995": {
      "fn": "Governance.submitVerification",
      "offset": [
        22198,
        22228
      ],
      "op": "NOT",
      "path": "2"
    },
    "10996": {
      "fn": "Governance.submitVerification",
      "offset": [
        22198,
        22228
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3F"
    },
    "10998": {
      "fn": "Governance.submitVerification",
      "offset": [
        22198,
        22228
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "10999": {
      "fn": "Governance.submitVerification",
      "offset": [
        22198,
        22228
      ],
      "op": "ADD",
      "path": "2"
    },
    "11000": {
      "fn": "Governance.submitVerification",
      "offset": [
        22198,
        22228
      ],
      "op": "AND",
      "path": "2"
    },
    "11001": {
      "fn": "Governance.submitVerification",
      "offset": [
        22198,
        22228
      ],
      "op": "DUP3",
      "path": "2"
    },
    "11002": {
      "fn": "Governance.submitVerification",
      "offset": [
        22198,
        22228
      ],
      "op": "ADD",
      "path": "2"
    },
    "11003": {
      "fn": "Governance.submitVerification",
      "offset": [
        22198,
        22228
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "11005": {
      "fn": "Governance.submitVerification",
      "offset": [
        22198,
        22228
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11006": {
      "fn": "Governance.submitVerification",
      "offset": [
        22198,
        22228
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "11007": {
      "fn": "Governance.submitVerification",
      "offset": [
        22198,
        22228
      ],
      "op": "DUP3",
      "path": "2"
    },
    "11008": {
      "fn": "Governance.submitVerification",
      "offset": [
        22198,
        22228
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11009": {
      "fn": "Governance.submitVerification",
      "offset": [
        22198,
        22228
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "11010": {
      "fn": "Governance.submitVerification",
      "offset": [
        22198,
        22228
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "11012": {
      "fn": "Governance.submitVerification",
      "offset": [
        22198,
        22228
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "11014": {
      "fn": "Governance.submitVerification",
      "offset": [
        22198,
        22228
      ],
      "op": "DUP5",
      "path": "2"
    },
    "11015": {
      "fn": "Governance.submitVerification",
      "offset": [
        22198,
        22228
      ],
      "op": "ADD",
      "path": "2"
    },
    "11016": {
      "fn": "Governance.submitVerification",
      "offset": [
        22198,
        22228
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "11017": {
      "fn": "Governance.submitVerification",
      "offset": [
        22198,
        22228
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2B12"
    },
    "11020": {
      "fn": "Governance.submitVerification",
      "offset": [
        22198,
        22228
      ],
      "op": "JUMP",
      "path": "2"
    },
    "11021": {
      "fn": "Governance.submitVerification",
      "offset": [
        22198,
        22228
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11022": {
      "fn": "Governance.submitVerification",
      "offset": [
        22198,
        22228
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "11024": {
      "fn": "Governance.submitVerification",
      "offset": [
        22198,
        22228
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "11025": {
      "fn": "Governance.submitVerification",
      "offset": [
        22198,
        22228
      ],
      "op": "POP",
      "path": "2"
    },
    "11026": {
      "fn": "Governance.submitVerification",
      "offset": [
        22198,
        22228
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11027": {
      "fn": "Governance.submitVerification",
      "offset": [
        22198,
        22228
      ],
      "op": "POP",
      "path": "2"
    },
    "11028": {
      "fn": "Governance.submitVerification",
      "offset": [
        22165,
        22228
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "11029": {
      "fn": "Governance.submitVerification",
      "offset": [
        22165,
        22228
      ],
      "op": "POP",
      "path": "2"
    },
    "11030": {
      "fn": "Governance.submitVerification",
      "offset": [
        22165,
        22228
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "11031": {
      "fn": "Governance.submitVerification",
      "offset": [
        22165,
        22228
      ],
      "op": "POP",
      "path": "2"
    },
    "11032": {
      "branch": 172,
      "fn": "Governance.submitVerification",
      "offset": [
        22304,
        22308
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 88
    },
    "11033": {
      "fn": "Governance.submitVerification",
      "offset": [
        22296,
        22333
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2B34"
    },
    "11036": {
      "branch": 172,
      "fn": "Governance.submitVerification",
      "offset": [
        22296,
        22333
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "11037": {
      "fn": "Governance.submitVerification",
      "offset": [
        22296,
        22333
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "11039": {
      "fn": "Governance.submitVerification",
      "offset": [
        22296,
        22333
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "11040": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11044": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11046": {
      "op": "SHL"
    },
    "11047": {
      "fn": "Governance.submitVerification",
      "offset": [
        22296,
        22333
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11048": {
      "fn": "Governance.submitVerification",
      "offset": [
        22296,
        22333
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11049": {
      "fn": "Governance.submitVerification",
      "offset": [
        22296,
        22333
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "11051": {
      "fn": "Governance.submitVerification",
      "offset": [
        22296,
        22333
      ],
      "op": "ADD",
      "path": "2"
    },
    "11052": {
      "fn": "Governance.submitVerification",
      "offset": [
        22296,
        22333
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF9A"
    },
    "11055": {
      "fn": "Governance.submitVerification",
      "offset": [
        22296,
        22333
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11056": {
      "fn": "Governance.submitVerification",
      "offset": [
        22296,
        22333
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x42ED"
    },
    "11059": {
      "fn": "Governance.submitVerification",
      "jump": "i",
      "offset": [
        22296,
        22333
      ],
      "op": "JUMP",
      "path": "2"
    },
    "11060": {
      "fn": "Governance.submitVerification",
      "offset": [
        22296,
        22333
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11061": {
      "fn": "Governance.submitVerification",
      "offset": [
        21972,
        22379
      ],
      "op": "POP",
      "path": "2"
    },
    "11062": {
      "fn": "Governance.submitVerification",
      "offset": [
        21972,
        22379
      ],
      "op": "POP",
      "path": "2"
    },
    "11063": {
      "fn": "Governance.submitVerification",
      "offset": [
        21972,
        22379
      ],
      "op": "POP",
      "path": "2"
    },
    "11064": {
      "fn": "Governance.submitVerification",
      "offset": [
        21130,
        22379
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11065": {
      "branch": 173,
      "fn": "Governance.submitVerification",
      "offset": [
        22453,
        22467
      ],
      "op": "DUP3",
      "path": "2"
    },
    "11066": {
      "fn": "Governance.submitVerification",
      "offset": [
        22450,
        23181
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "11067": {
      "fn": "Governance.submitVerification",
      "offset": [
        22450,
        23181
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1E71"
    },
    "11070": {
      "branch": 173,
      "fn": "Governance.submitVerification",
      "offset": [
        22450,
        23181
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "11071": {
      "fn": "Governance.submitVerification",
      "offset": [
        22482,
        22509
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "11073": {
      "fn": "Governance.submitVerification",
      "offset": [
        22512,
        22561
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2B59"
    },
    "11076": {
      "fn": "Governance.submitVerification",
      "offset": [
        22536,
        22560
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x6"
    },
    "11078": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5676,
        5688
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "11079": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5676,
        5688
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xF"
    },
    "11081": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5676,
        5688
      ],
      "op": "DUP2",
      "path": "1"
    },
    "11082": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5676,
        5688
      ],
      "op": "DUP2",
      "path": "1"
    },
    "11083": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5676,
        5688
      ],
      "op": "SIGNEXTEND",
      "path": "1"
    },
    "11084": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11086": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "11088": {
      "op": "SHL"
    },
    "11089": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5655,
        5665
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "11090": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5655,
        5665
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "11091": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5655,
        5665
      ],
      "op": "DIV",
      "path": "1"
    },
    "11092": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5655,
        5665
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "11093": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5655,
        5665
      ],
      "op": "SIGNEXTEND",
      "path": "1"
    },
    "11094": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5648,
        5689
      ],
      "op": "SUB",
      "path": "1"
    },
    "11095": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5648,
        5689
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "11096": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5344,
        5707
      ],
      "op": "JUMP",
      "path": "1"
    },
    "11097": {
      "fn": "Governance.submitVerification",
      "offset": [
        22512,
        22561
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11098": {
      "fn": "Governance.submitVerification",
      "offset": [
        22482,
        22561
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11099": {
      "fn": "Governance.submitVerification",
      "offset": [
        22482,
        22561
      ],
      "op": "POP",
      "path": "2"
    },
    "11100": {
      "fn": "Governance.submitVerification",
      "offset": [
        22663,
        22672
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "11102": {
      "fn": "Governance.submitVerification",
      "offset": [
        22659,
        23171
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11103": {
      "fn": "Governance.submitVerification",
      "offset": [
        22681,
        22700
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11104": {
      "fn": "Governance.submitVerification",
      "offset": [
        22677,
        22678
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11105": {
      "fn": "Governance.submitVerification",
      "offset": [
        22677,
        22700
      ],
      "op": "LT",
      "path": "2"
    },
    "11106": {
      "fn": "Governance.submitVerification",
      "offset": [
        22659,
        23171
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "11107": {
      "fn": "Governance.submitVerification",
      "offset": [
        22659,
        23171
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2BC3"
    },
    "11110": {
      "fn": "Governance.submitVerification",
      "offset": [
        22659,
        23171
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "11111": {
      "fn": "Governance.submitVerification",
      "offset": [
        22784,
        22791
      ],
      "op": "DUP9",
      "path": "2"
    },
    "11112": {
      "fn": "Governance.submitVerification",
      "offset": [
        22733,
        22781
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2B72"
    },
    "11115": {
      "fn": "Governance.submitVerification",
      "offset": [
        22753,
        22777
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x6"
    },
    "11117": {
      "fn": "Governance.submitVerification",
      "offset": [
        22779,
        22780
      ],
      "op": "DUP4",
      "path": "2"
    },
    "11118": {
      "fn": "Governance.submitVerification",
      "offset": [
        22733,
        22752
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3101"
    },
    "11121": {
      "fn": "Governance.submitVerification",
      "jump": "i",
      "offset": [
        22733,
        22781
      ],
      "op": "JUMP",
      "path": "2"
    },
    "11122": {
      "fn": "Governance.submitVerification",
      "offset": [
        22733,
        22781
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11123": {
      "branch": 174,
      "fn": "Governance.submitVerification",
      "offset": [
        22725,
        22791
      ],
      "op": "SUB",
      "path": "2"
    },
    "11124": {
      "fn": "Governance.submitVerification",
      "offset": [
        22721,
        23125
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2BBB"
    },
    "11127": {
      "branch": 174,
      "fn": "Governance.submitVerification",
      "offset": [
        22721,
        23125
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "11128": {
      "fn": "Governance.submitVerification",
      "offset": [
        22814,
        22831
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "11130": {
      "fn": "Governance.submitVerification",
      "offset": [
        22834,
        22885
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2B83"
    },
    "11133": {
      "fn": "Governance.submitVerification",
      "offset": [
        22860,
        22884
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x6"
    },
    "11135": {
      "fn": "Governance.submitVerification",
      "offset": [
        22834,
        22859
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3343"
    },
    "11138": {
      "fn": "Governance.submitVerification",
      "jump": "i",
      "offset": [
        22834,
        22885
      ],
      "op": "JUMP",
      "path": "2"
    },
    "11139": {
      "fn": "Governance.submitVerification",
      "offset": [
        22834,
        22885
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11140": {
      "fn": "Governance.submitVerification",
      "offset": [
        22814,
        22885
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11141": {
      "op": "POP"
    },
    "11142": {
      "fn": "Governance.submitVerification",
      "offset": [
        22910,
        22914
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11143": {
      "branch": 175,
      "fn": "Governance.submitVerification",
      "offset": [
        22910,
        22914
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "11144": {
      "fn": "Governance.submitVerification",
      "offset": [
        22907,
        23107
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2BB9"
    },
    "11147": {
      "branch": 175,
      "fn": "Governance.submitVerification",
      "offset": [
        22907,
        23107
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "11148": {
      "fn": "Governance.submitVerification",
      "offset": [
        22992,
        23016
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 89,
      "value": "0x6"
    },
    "11150": {
      "fn": "Governance.submitVerification",
      "offset": [
        23030,
        23061
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "11151": {
      "fn": "Governance.submitVerification",
      "offset": [
        23075,
        23084
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11152": {
      "fn": "Governance.submitVerification",
      "offset": [
        23075,
        23084
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11153": {
      "fn": "Governance.submitVerification",
      "offset": [
        22992,
        23022
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "11155": {
      "fn": "Governance.submitVerification",
      "offset": [
        22992,
        23022
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11156": {
      "fn": "Governance.submitVerification",
      "offset": [
        22992,
        23072
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "11158": {
      "fn": "Governance.submitVerification",
      "offset": [
        22992,
        23072
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11159": {
      "fn": "Governance.submitVerification",
      "offset": [
        23030,
        23070
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2BA4"
    },
    "11162": {
      "fn": "Governance.submitVerification",
      "offset": [
        23030,
        23070
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11163": {
      "fn": "Governance.submitVerification",
      "offset": [
        23068,
        23069
      ],
      "op": "DUP7",
      "path": "2"
    },
    "11164": {
      "fn": "Governance.submitVerification",
      "offset": [
        23068,
        23069
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11165": {
      "fn": "Governance.submitVerification",
      "offset": [
        23030,
        23061
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xF"
    },
    "11167": {
      "fn": "Governance.submitVerification",
      "offset": [
        23030,
        23061
      ],
      "op": "SIGNEXTEND",
      "path": "2"
    },
    "11168": {
      "fn": "Governance.submitVerification",
      "offset": [
        23030,
        23070
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x431B"
    },
    "11171": {
      "fn": "Governance.submitVerification",
      "jump": "i",
      "offset": [
        23030,
        23070
      ],
      "op": "JUMP",
      "path": "2"
    },
    "11172": {
      "fn": "Governance.submitVerification",
      "offset": [
        23030,
        23070
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11173": {
      "fn": "Governance.submitVerification",
      "offset": [
        22992,
        23072
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xF"
    },
    "11175": {
      "fn": "Governance.submitVerification",
      "offset": [
        22992,
        23072
      ],
      "op": "SIGNEXTEND",
      "path": "2"
    },
    "11176": {
      "fn": "Governance.submitVerification",
      "offset": [
        22992,
        23072
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11177": {
      "fn": "Governance.submitVerification",
      "offset": [
        22992,
        23072
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11178": {
      "fn": "Governance.submitVerification",
      "offset": [
        22992,
        23072
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "11180": {
      "fn": "Governance.submitVerification",
      "offset": [
        22992,
        23072
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11181": {
      "fn": "Governance.submitVerification",
      "offset": [
        22992,
        23072
      ],
      "op": "ADD",
      "path": "2"
    },
    "11182": {
      "fn": "Governance.submitVerification",
      "offset": [
        22992,
        23072
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "11183": {
      "fn": "Governance.submitVerification",
      "offset": [
        22992,
        23072
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11184": {
      "fn": "Governance.submitVerification",
      "offset": [
        22992,
        23072
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "11185": {
      "fn": "Governance.submitVerification",
      "offset": [
        22992,
        23072
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11186": {
      "fn": "Governance.submitVerification",
      "offset": [
        22992,
        23072
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "11188": {
      "fn": "Governance.submitVerification",
      "offset": [
        22992,
        23072
      ],
      "op": "ADD",
      "path": "2"
    },
    "11189": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11191": {
      "fn": "Governance.submitVerification",
      "offset": [
        22992,
        23072
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "11192": {
      "fn": "Governance.submitVerification",
      "offset": [
        22992,
        23084
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "11193": {
      "fn": "Governance.submitVerification",
      "offset": [
        22907,
        23107
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11194": {
      "fn": "Governance.submitVerification",
      "offset": [
        22792,
        23125
      ],
      "op": "POP",
      "path": "2"
    },
    "11195": {
      "fn": "Governance.submitVerification",
      "offset": [
        22721,
        23125
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11196": {
      "fn": "Governance.submitVerification",
      "offset": [
        23152,
        23155
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 90,
      "value": "0x1"
    },
    "11198": {
      "fn": "Governance.submitVerification",
      "offset": [
        23152,
        23155
      ],
      "op": "ADD",
      "path": "2"
    },
    "11199": {
      "fn": "Governance.submitVerification",
      "offset": [
        22659,
        23171
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2B5E"
    },
    "11202": {
      "fn": "Governance.submitVerification",
      "offset": [
        22659,
        23171
      ],
      "op": "JUMP",
      "path": "2"
    },
    "11203": {
      "fn": "Governance.submitVerification",
      "offset": [
        22659,
        23171
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11204": {
      "fn": "Governance.submitVerification",
      "offset": [
        22659,
        23171
      ],
      "op": "POP",
      "path": "2"
    },
    "11205": {
      "fn": "Governance.submitVerification",
      "offset": [
        22468,
        23181
      ],
      "op": "POP",
      "path": "2"
    },
    "11206": {
      "fn": "Governance.submitVerification",
      "offset": [
        19076,
        23188
      ],
      "op": "POP",
      "path": "2"
    },
    "11207": {
      "fn": "Governance.submitVerification",
      "offset": [
        19076,
        23188
      ],
      "op": "POP",
      "path": "2"
    },
    "11208": {
      "fn": "Governance.submitVerification",
      "offset": [
        19076,
        23188
      ],
      "op": "POP",
      "path": "2"
    },
    "11209": {
      "fn": "Governance.submitVerification",
      "offset": [
        19076,
        23188
      ],
      "op": "POP",
      "path": "2"
    },
    "11210": {
      "fn": "Governance.submitVerification",
      "offset": [
        19076,
        23188
      ],
      "op": "POP",
      "path": "2"
    },
    "11211": {
      "fn": "Governance.submitVerification",
      "offset": [
        18980,
        23188
      ],
      "op": "POP",
      "path": "2"
    },
    "11212": {
      "fn": "Governance.submitVerification",
      "offset": [
        18980,
        23188
      ],
      "op": "POP",
      "path": "2"
    },
    "11213": {
      "fn": "Governance.submitVerification",
      "offset": [
        18980,
        23188
      ],
      "op": "POP",
      "path": "2"
    },
    "11214": {
      "fn": "Governance.submitVerification",
      "jump": "o",
      "offset": [
        18980,
        23188
      ],
      "op": "JUMP",
      "path": "2"
    },
    "11215": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "11216": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "11218": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "11219": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11221": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11223": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11225": {
      "op": "SHL"
    },
    "11226": {
      "op": "SUB"
    },
    "11227": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "AND",
      "path": "11"
    },
    "11228": {
      "fn": "Context._msgSender",
      "offset": [
        679,
        689
      ],
      "op": "CALLER",
      "path": "5"
    },
    "11229": {
      "offset": [
        1221,
        1244
      ],
      "op": "EQ",
      "path": "11"
    },
    "11230": {
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2BF9"
    },
    "11233": {
      "offset": [
        1213,
        1281
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "11234": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "11236": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "11237": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11241": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11243": {
      "op": "SHL"
    },
    "11244": {
      "offset": [
        1213,
        1281
      ],
      "op": "DUP2",
      "path": "11"
    },
    "11245": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "11246": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "11248": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "ADD",
      "path": "11"
    },
    "11249": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xF9A"
    },
    "11252": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "11253": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x3E91"
    },
    "11256": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1213,
        1281
      ],
      "op": "JUMP",
      "path": "11"
    },
    "11257": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "11258": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11260": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11262": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11264": {
      "op": "SHL"
    },
    "11265": {
      "op": "SUB"
    },
    "11266": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1990,
        2012
      ],
      "op": "DUP2",
      "path": "11",
      "statement": 91
    },
    "11267": {
      "branch": 183,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1990,
        2012
      ],
      "op": "AND",
      "path": "11"
    },
    "11268": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2C5E"
    },
    "11271": {
      "branch": 183,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "11272": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "11274": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "11275": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11279": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11281": {
      "op": "SHL"
    },
    "11282": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "DUP2",
      "path": "11"
    },
    "11283": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "11284": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11286": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "11288": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "DUP3",
      "path": "11"
    },
    "11289": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "ADD",
      "path": "11"
    },
    "11290": {
      "op": "MSTORE"
    },
    "11291": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "11293": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11295": {
      "op": "DUP3"
    },
    "11296": {
      "op": "ADD"
    },
    "11297": {
      "op": "MSTORE"
    },
    "11298": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
    },
    "11331": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "11333": {
      "op": "DUP3"
    },
    "11334": {
      "op": "ADD"
    },
    "11335": {
      "op": "MSTORE"
    },
    "11336": {
      "op": "PUSH6",
      "value": "0x646472657373"
    },
    "11343": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "11345": {
      "op": "SHL"
    },
    "11346": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "11348": {
      "op": "DUP3"
    },
    "11349": {
      "op": "ADD"
    },
    "11350": {
      "op": "MSTORE"
    },
    "11351": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "11353": {
      "op": "ADD"
    },
    "11354": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xF9A"
    },
    "11357": {
      "op": "JUMP"
    },
    "11358": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "11359": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2066,
        2085
      ],
      "op": "PUSH2",
      "path": "11",
      "statement": 92,
      "value": "0x2C67"
    },
    "11362": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2076,
        2084
      ],
      "op": "DUP2",
      "path": "11"
    },
    "11363": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2066,
        2075
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x32F1"
    },
    "11366": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2066,
        2085
      ],
      "op": "JUMP",
      "path": "11"
    },
    "11367": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2066,
        2085
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "11368": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "POP",
      "path": "11"
    },
    "11369": {
      "fn": "Ownable.transferOwnership",
      "jump": "o",
      "offset": [
        1901,
        2093
      ],
      "op": "JUMP",
      "path": "11"
    },
    "11370": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6632,
        7320
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11371": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6707,
        6711
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "11373": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6723,
        6750
      ],
      "op": "DUP1",
      "path": "2"
    },
    "11374": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6753,
        6802
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2C86"
    },
    "11377": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6777,
        6801
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x6"
    },
    "11379": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5676,
        5688
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "11380": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5676,
        5688
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xF"
    },
    "11382": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5676,
        5688
      ],
      "op": "DUP2",
      "path": "1"
    },
    "11383": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5676,
        5688
      ],
      "op": "DUP2",
      "path": "1"
    },
    "11384": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5676,
        5688
      ],
      "op": "SIGNEXTEND",
      "path": "1"
    },
    "11385": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11387": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "11389": {
      "op": "SHL"
    },
    "11390": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5655,
        5665
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "11391": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5655,
        5665
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "11392": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5655,
        5665
      ],
      "op": "DIV",
      "path": "1"
    },
    "11393": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5655,
        5665
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "11394": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5655,
        5665
      ],
      "op": "SIGNEXTEND",
      "path": "1"
    },
    "11395": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5648,
        5689
      ],
      "op": "SUB",
      "path": "1"
    },
    "11396": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5648,
        5689
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "11397": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5344,
        5707
      ],
      "op": "JUMP",
      "path": "1"
    },
    "11398": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6753,
        6802
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11399": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6723,
        6802
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11400": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6723,
        6802
      ],
      "op": "POP",
      "path": "2"
    },
    "11401": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6812,
        6830
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2C90"
    },
    "11404": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6812,
        6830
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x34BF"
    },
    "11407": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "jump": "i",
      "offset": [
        6812,
        6830
      ],
      "op": "JUMP",
      "path": "2"
    },
    "11408": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6812,
        6830
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11409": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6956,
        6965
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "11411": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6952,
        7292
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11412": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6974,
        6993
      ],
      "op": "DUP3",
      "path": "2"
    },
    "11413": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6970,
        6971
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11414": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6970,
        6993
      ],
      "op": "LT",
      "path": "2"
    },
    "11415": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6952,
        7292
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "11416": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6952,
        7292
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2E2F"
    },
    "11419": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6952,
        7292
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "11420": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7019,
        7024
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 93,
      "value": "0xA"
    },
    "11422": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7019,
        7082
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "11424": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7033,
        7080
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2CAA"
    },
    "11427": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7053,
        7077
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x6"
    },
    "11429": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7078,
        7079
      ],
      "op": "DUP5",
      "path": "2"
    },
    "11430": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7033,
        7052
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3101"
    },
    "11433": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "jump": "i",
      "offset": [
        7033,
        7080
      ],
      "op": "JUMP",
      "path": "2"
    },
    "11434": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7033,
        7080
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11435": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7025,
        7081
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "11437": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7025,
        7081
      ],
      "op": "SHR",
      "path": "2"
    },
    "11438": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7019,
        7082
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11439": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7019,
        7082
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11440": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7019,
        7082
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "11442": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7019,
        7082
      ],
      "op": "ADD",
      "path": "2"
    },
    "11443": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7019,
        7082
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11444": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7019,
        7082
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11445": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7019,
        7082
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11446": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7019,
        7082
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "11448": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7019,
        7082
      ],
      "op": "ADD",
      "path": "2"
    },
    "11449": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7019,
        7082
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "11451": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7019,
        7082
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "11452": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "11454": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "11455": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "DUP1",
      "path": "2"
    },
    "11456": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x140"
    },
    "11459": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "ADD",
      "path": "2"
    },
    "11460": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "11462": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11463": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11464": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11465": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "11467": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "DUP3",
      "path": "2"
    },
    "11468": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "ADD",
      "path": "2"
    },
    "11469": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "DUP1",
      "path": "2"
    },
    "11470": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "11471": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2CD7"
    },
    "11474": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11475": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3DA4"
    },
    "11478": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "jump": "i",
      "offset": [
        7010,
        7082
      ],
      "op": "JUMP",
      "path": "2"
    },
    "11479": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11480": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "DUP1",
      "path": "2"
    },
    "11481": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "11483": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "ADD",
      "path": "2"
    },
    "11484": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "11486": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "DUP1",
      "path": "2"
    },
    "11487": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "11488": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "DIV",
      "path": "2"
    },
    "11489": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "MUL",
      "path": "2"
    },
    "11490": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "11492": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "ADD",
      "path": "2"
    },
    "11493": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "11495": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "11496": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11497": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11498": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "ADD",
      "path": "2"
    },
    "11499": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "11501": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11502": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "DUP1",
      "path": "2"
    },
    "11503": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "11504": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "11505": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11506": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11507": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11508": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11509": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "11511": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "ADD",
      "path": "2"
    },
    "11512": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "DUP3",
      "path": "2"
    },
    "11513": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "DUP1",
      "path": "2"
    },
    "11514": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "11515": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2D03"
    },
    "11518": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11519": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3DA4"
    },
    "11522": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "jump": "i",
      "offset": [
        7010,
        7082
      ],
      "op": "JUMP",
      "path": "2"
    },
    "11523": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11524": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "DUP1",
      "path": "2"
    },
    "11525": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "11526": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2D50"
    },
    "11529": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "11530": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "DUP1",
      "path": "2"
    },
    "11531": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "11533": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "LT",
      "path": "2"
    },
    "11534": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2D25"
    },
    "11537": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "11538": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "11541": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "DUP1",
      "path": "2"
    },
    "11542": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "DUP4",
      "path": "2"
    },
    "11543": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "11544": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "DIV",
      "path": "2"
    },
    "11545": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "MUL",
      "path": "2"
    },
    "11546": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "DUP4",
      "path": "2"
    },
    "11547": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11548": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "11549": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "11551": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "ADD",
      "path": "2"
    },
    "11552": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "11553": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2D50"
    },
    "11556": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "JUMP",
      "path": "2"
    },
    "11557": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11558": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "DUP3",
      "path": "2"
    },
    "11559": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "ADD",
      "path": "2"
    },
    "11560": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "11561": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11562": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "11564": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11565": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "11567": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "11569": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "11570": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11571": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11572": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11573": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "11574": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11575": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11576": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11577": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "11579": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "ADD",
      "path": "2"
    },
    "11580": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11581": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "11583": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "ADD",
      "path": "2"
    },
    "11584": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "DUP1",
      "path": "2"
    },
    "11585": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "DUP4",
      "path": "2"
    },
    "11586": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "GT",
      "path": "2"
    },
    "11587": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2D33"
    },
    "11590": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "11591": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "DUP3",
      "path": "2"
    },
    "11592": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11593": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "SUB",
      "path": "2"
    },
    "11594": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "11596": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "AND",
      "path": "2"
    },
    "11597": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "DUP3",
      "path": "2"
    },
    "11598": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "ADD",
      "path": "2"
    },
    "11599": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "11600": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11601": {
      "op": "POP"
    },
    "11602": {
      "op": "POP"
    },
    "11603": {
      "op": "POP"
    },
    "11604": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "11605": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "DUP4",
      "path": "2"
    },
    "11606": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11607": {
      "op": "POP"
    },
    "11608": {
      "op": "POP"
    },
    "11609": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "11611": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "DUP3",
      "path": "2"
    },
    "11612": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "ADD",
      "path": "2"
    },
    "11613": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "11614": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "11620": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11621": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11622": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "AND",
      "path": "2"
    },
    "11623": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "11625": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "DUP4",
      "path": "2"
    },
    "11626": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "ADD",
      "path": "2"
    },
    "11627": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11628": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "11630": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "DUP4",
      "path": "2"
    },
    "11631": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "ADD",
      "path": "2"
    },
    "11632": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "11633": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "11635": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "DUP4",
      "path": "2"
    },
    "11636": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "ADD",
      "path": "2"
    },
    "11637": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11638": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "11640": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "DUP4",
      "path": "2"
    },
    "11641": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "ADD",
      "path": "2"
    },
    "11642": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "11643": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "11645": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "DUP4",
      "path": "2"
    },
    "11646": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "ADD",
      "path": "2"
    },
    "11647": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11648": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "11650": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11651": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "11652": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "ADD",
      "path": "2"
    },
    "11653": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "11654": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "11656": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11657": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "AND",
      "path": "2"
    },
    "11658": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x80"
    },
    "11660": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "DUP4",
      "path": "2"
    },
    "11661": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "ADD",
      "path": "2"
    },
    "11662": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11663": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "11666": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "DUP1",
      "path": "2"
    },
    "11667": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "DUP3",
      "path": "2"
    },
    "11668": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "DIV",
      "path": "2"
    },
    "11669": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "PUSH3",
      "path": "2",
      "value": "0xFFFFFF"
    },
    "11673": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "AND",
      "path": "2"
    },
    "11674": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA0"
    },
    "11676": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "DUP5",
      "path": "2"
    },
    "11677": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "ADD",
      "path": "2"
    },
    "11678": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11679": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11681": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11683": {
      "op": "SHL"
    },
    "11684": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "DUP3",
      "path": "2"
    },
    "11685": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "DIV",
      "path": "2"
    },
    "11686": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11688": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11690": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "11692": {
      "op": "SHL"
    },
    "11693": {
      "op": "SUB"
    },
    "11694": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "AND",
      "path": "2"
    },
    "11695": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xC0"
    },
    "11697": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "DUP5",
      "path": "2"
    },
    "11698": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "ADD",
      "path": "2"
    },
    "11699": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11700": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11702": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "11704": {
      "op": "SHL"
    },
    "11705": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "DUP3",
      "path": "2"
    },
    "11706": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "DIV",
      "path": "2"
    },
    "11707": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "11710": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11711": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11712": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "AND",
      "path": "2"
    },
    "11713": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE0"
    },
    "11715": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "DUP6",
      "path": "2"
    },
    "11716": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "ADD",
      "path": "2"
    },
    "11717": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11718": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11720": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "11722": {
      "op": "SHL"
    },
    "11723": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "DUP4",
      "path": "2"
    },
    "11724": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "DIV",
      "path": "2"
    },
    "11725": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "AND",
      "path": "2"
    },
    "11726": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11727": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "DUP4",
      "path": "2"
    },
    "11728": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "ADD",
      "path": "2"
    },
    "11729": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11730": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11732": {
      "op": "PUSH1",
      "value": "0x90"
    },
    "11734": {
      "op": "SHL"
    },
    "11735": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11736": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "DIV",
      "path": "2"
    },
    "11737": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "DUP3",
      "path": "2"
    },
    "11738": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "AND",
      "path": "2"
    },
    "11739": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x120"
    },
    "11742": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "11743": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "DUP3",
      "path": "2"
    },
    "11744": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "ADD",
      "path": "2"
    },
    "11745": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7010,
        7082
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11746": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7100,
        7136
      ],
      "op": "DUP3",
      "path": "2"
    },
    "11747": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7100,
        7136
      ],
      "op": "ADD",
      "path": "2"
    },
    "11748": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7100,
        7136
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "11749": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7100,
        7136
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "11750": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7100,
        7136
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "11751": {
      "op": "POP"
    },
    "11752": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7139,
        7154
      ],
      "op": "TIMESTAMP",
      "path": "2"
    },
    "11753": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7100,
        7154
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "11754": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7100,
        7154
      ],
      "op": "AND",
      "path": "2"
    },
    "11755": {
      "branch": 176,
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7100,
        7154
      ],
      "op": "LT",
      "path": "2"
    },
    "11756": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7100,
        7180
      ],
      "op": "DUP1",
      "path": "2"
    },
    "11757": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7100,
        7180
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "11758": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7100,
        7180
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2E02"
    },
    "11761": {
      "branch": 176,
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7100,
        7180
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "11762": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7100,
        7180
      ],
      "op": "POP",
      "path": "2"
    },
    "11763": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7174,
        7180
      ],
      "op": "DUP5",
      "path": "2"
    },
    "11764": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7158,
        7164
      ],
      "op": "DUP3",
      "path": "2"
    },
    "11765": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7158,
        7170
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "11767": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7158,
        7170
      ],
      "op": "ADD",
      "path": "2"
    },
    "11768": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7158,
        7170
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "11769": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7158,
        7180
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "11775": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7158,
        7180
      ],
      "op": "AND",
      "path": "2"
    },
    "11776": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7158,
        7180
      ],
      "op": "EQ",
      "path": "2"
    },
    "11777": {
      "branch": 177,
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7158,
        7180
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "11778": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7100,
        7180
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11779": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7100,
        7209
      ],
      "op": "DUP1",
      "path": "2"
    },
    "11780": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7100,
        7209
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "11781": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7100,
        7209
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2E17"
    },
    "11784": {
      "branch": 177,
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7100,
        7209
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "11785": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7100,
        7209
      ],
      "op": "POP",
      "path": "2"
    },
    "11786": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7203,
        7209
      ],
      "op": "DUP5",
      "path": "2"
    },
    "11787": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7184,
        7190
      ],
      "op": "DUP3",
      "path": "2"
    },
    "11788": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7184,
        7200
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "11791": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7184,
        7200
      ],
      "op": "ADD",
      "path": "2"
    },
    "11792": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7184,
        7200
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "11793": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7184,
        7209
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "11796": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7184,
        7209
      ],
      "op": "AND",
      "path": "2"
    },
    "11797": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7184,
        7209
      ],
      "op": "EQ",
      "path": "2"
    },
    "11798": {
      "branch": 178,
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7184,
        7209
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "11799": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7100,
        7209
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11800": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7096,
        7254
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "11801": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7096,
        7254
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2E27"
    },
    "11804": {
      "branch": 178,
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7096,
        7254
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "11805": {
      "op": "POP"
    },
    "11806": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7235,
        7239
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 94,
      "value": "0x1"
    },
    "11808": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7235,
        7239
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "11809": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6632,
        7320
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "11810": {
      "op": "POP"
    },
    "11811": {
      "op": "POP"
    },
    "11812": {
      "op": "POP"
    },
    "11813": {
      "op": "POP"
    },
    "11814": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "jump": "o",
      "offset": [
        6632,
        7320
      ],
      "op": "JUMP",
      "path": "2"
    },
    "11815": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7096,
        7254
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11816": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7277,
        7280
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 95,
      "value": "0x1"
    },
    "11818": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7277,
        7280
      ],
      "op": "ADD",
      "path": "2"
    },
    "11819": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6952,
        7292
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2C93"
    },
    "11822": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6952,
        7292
      ],
      "op": "JUMP",
      "path": "2"
    },
    "11823": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6952,
        7292
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11824": {
      "op": "POP"
    },
    "11825": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7308,
        7313
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 96,
      "value": "0x0"
    },
    "11827": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        7308,
        7313
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "11828": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6632,
        7320
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "11829": {
      "op": "POP"
    },
    "11830": {
      "op": "POP"
    },
    "11831": {
      "op": "POP"
    },
    "11832": {
      "op": "POP"
    },
    "11833": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "jump": "o",
      "offset": [
        6632,
        7320
      ],
      "op": "JUMP",
      "path": "2"
    },
    "11834": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10849,
        12070
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11835": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10931,
        10940
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "11837": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10927,
        12064
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11838": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10946,
        10955
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "11840": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10946,
        10962
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "11841": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10944,
        10962
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11842": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10944,
        10962
      ],
      "op": "LT",
      "path": "2"
    },
    "11843": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10927,
        12064
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "11844": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10927,
        12064
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2FD3"
    },
    "11847": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10927,
        12064
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "11848": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11062,
        11071
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11849": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11045,
        11072
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "11851": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11045,
        11072
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "11852": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11045,
        11072
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "11854": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11045,
        11072
      ],
      "op": "ADD",
      "path": "2"
    },
    "11855": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11045,
        11072
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2E58"
    },
    "11858": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11045,
        11072
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "11859": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11045,
        11072
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11860": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11045,
        11072
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x435C"
    },
    "11863": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "jump": "i",
      "offset": [
        11045,
        11072
      ],
      "op": "JUMP",
      "path": "2"
    },
    "11864": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11045,
        11072
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11865": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11045,
        11072
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "11867": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11045,
        11072
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "11868": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11045,
        11072
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "11870": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11045,
        11072
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11871": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11045,
        11072
      ],
      "op": "DUP4",
      "path": "2"
    },
    "11872": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11045,
        11072
      ],
      "op": "SUB",
      "path": "2"
    },
    "11873": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11045,
        11072
      ],
      "op": "SUB",
      "path": "2"
    },
    "11874": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11045,
        11072
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11875": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11045,
        11072
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11876": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11045,
        11072
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11877": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11045,
        11072
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "11879": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11045,
        11072
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11880": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11035,
        11073
      ],
      "op": "DUP1",
      "path": "2"
    },
    "11881": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11035,
        11073
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "11882": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11035,
        11073
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11883": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11035,
        11073
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "11885": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11035,
        11073
      ],
      "op": "ADD",
      "path": "2"
    },
    "11886": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11035,
        11073
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "11887": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11008,
        11017
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "11889": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11018,
        11019
      ],
      "op": "DUP3",
      "path": "2"
    },
    "11890": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11008,
        11020
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11891": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11008,
        11020
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "11892": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11008,
        11020
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11893": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11008,
        11020
      ],
      "op": "LT",
      "path": "2"
    },
    "11894": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11008,
        11020
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2E81"
    },
    "11897": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11008,
        11020
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "11898": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11008,
        11020
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2E81"
    },
    "11901": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11008,
        11020
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3DDE"
    },
    "11904": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "jump": "i",
      "offset": [
        11008,
        11020
      ],
      "op": "JUMP",
      "path": "2"
    },
    "11905": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11008,
        11020
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11906": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11008,
        11020
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11907": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11008,
        11020
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "11909": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11008,
        11020
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11910": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11008,
        11020
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "11912": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11008,
        11020
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "11914": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11008,
        11020
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "11915": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11008,
        11020
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11916": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11008,
        11020
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "11918": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11008,
        11020
      ],
      "op": "MUL",
      "path": "2"
    },
    "11919": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11008,
        11020
      ],
      "op": "ADD",
      "path": "2"
    },
    "11920": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11008,
        11029
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "11922": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11008,
        11029
      ],
      "op": "ADD",
      "path": "2"
    },
    "11923": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10991,
        11030
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "11925": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10991,
        11030
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "11926": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10991,
        11030
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "11928": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10991,
        11030
      ],
      "op": "ADD",
      "path": "2"
    },
    "11929": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10991,
        11030
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2EA2"
    },
    "11932": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10991,
        11030
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "11933": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10991,
        11030
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11934": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10991,
        11030
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4378"
    },
    "11937": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "jump": "i",
      "offset": [
        10991,
        11030
      ],
      "op": "JUMP",
      "path": "2"
    },
    "11938": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10991,
        11030
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11939": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10991,
        11030
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "11941": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10991,
        11030
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "11942": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10991,
        11030
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "11944": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10991,
        11030
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11945": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10991,
        11030
      ],
      "op": "DUP4",
      "path": "2"
    },
    "11946": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10991,
        11030
      ],
      "op": "SUB",
      "path": "2"
    },
    "11947": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10991,
        11030
      ],
      "op": "SUB",
      "path": "2"
    },
    "11948": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10991,
        11030
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11949": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10991,
        11030
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11950": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10991,
        11030
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11951": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10991,
        11030
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "11953": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10991,
        11030
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11954": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10981,
        11031
      ],
      "op": "DUP1",
      "path": "2"
    },
    "11955": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10981,
        11031
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "11956": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10981,
        11031
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11957": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10981,
        11031
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "11959": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10981,
        11031
      ],
      "op": "ADD",
      "path": "2"
    },
    "11960": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10981,
        11031
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "11961": {
      "branch": 179,
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10981,
        11073
      ],
      "op": "SUB",
      "path": "2"
    },
    "11962": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10978,
        12026
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2FCB"
    },
    "11965": {
      "branch": 179,
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10978,
        12026
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "11966": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11156,
        11183
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "11968": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11186,
        11195
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "11970": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11196,
        11197
      ],
      "op": "DUP3",
      "path": "2"
    },
    "11971": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11186,
        11198
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11972": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11186,
        11198
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "11973": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11186,
        11198
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11974": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11186,
        11198
      ],
      "op": "LT",
      "path": "2"
    },
    "11975": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11186,
        11198
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2ED2"
    },
    "11978": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11186,
        11198
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "11979": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11186,
        11198
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2ED2"
    },
    "11982": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11186,
        11198
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3DDE"
    },
    "11985": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "jump": "i",
      "offset": [
        11186,
        11198
      ],
      "op": "JUMP",
      "path": "2"
    },
    "11986": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11186,
        11198
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11987": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11186,
        11198
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11988": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11186,
        11198
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "11990": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11186,
        11198
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11991": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11186,
        11198
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "11993": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11186,
        11198
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "11995": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11186,
        11198
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "11996": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11186,
        11198
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11997": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11186,
        11198
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "11999": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11186,
        11198
      ],
      "op": "MUL",
      "path": "2"
    },
    "12000": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11186,
        11198
      ],
      "op": "ADD",
      "path": "2"
    },
    "12001": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11156,
        11198
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12002": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11156,
        11198
      ],
      "op": "POP",
      "path": "2"
    },
    "12003": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11216,
        11250
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "12005": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11253,
        11262
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "12007": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11280,
        11281
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "12009": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11263,
        11272
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "12011": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11263,
        11279
      ],
      "op": "DUP1",
      "path": "2"
    },
    "12012": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11263,
        11279
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "12013": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11263,
        11279
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12014": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11263,
        11279
      ],
      "op": "POP",
      "path": "2"
    },
    "12015": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11263,
        11281
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2EF8"
    },
    "12018": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11263,
        11281
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "12019": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11263,
        11281
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12020": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11263,
        11281
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x40C8"
    },
    "12023": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "jump": "i",
      "offset": [
        11263,
        11281
      ],
      "op": "JUMP",
      "path": "2"
    },
    "12024": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11263,
        11281
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12025": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11253,
        11282
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12026": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11253,
        11282
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "12027": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11253,
        11282
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12028": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11253,
        11282
      ],
      "op": "LT",
      "path": "2"
    },
    "12029": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11253,
        11282
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2F08"
    },
    "12032": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11253,
        11282
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "12033": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11253,
        11282
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2F08"
    },
    "12036": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11253,
        11282
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3DDE"
    },
    "12039": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "jump": "i",
      "offset": [
        11253,
        11282
      ],
      "op": "JUMP",
      "path": "2"
    },
    "12040": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11253,
        11282
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12041": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11253,
        11282
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12042": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11253,
        11282
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "12044": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11253,
        11282
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "12045": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11253,
        11282
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "12047": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11253,
        11282
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "12049": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11253,
        11282
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "12050": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11253,
        11282
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12051": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11253,
        11282
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "12053": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11253,
        11282
      ],
      "op": "MUL",
      "path": "2"
    },
    "12054": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11253,
        11282
      ],
      "op": "ADD",
      "path": "2"
    },
    "12055": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11216,
        11282
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12056": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11216,
        11282
      ],
      "op": "POP",
      "path": "2"
    },
    "12057": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11411,
        11428
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 97
    },
    "12058": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11398,
        11428
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "12059": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11398,
        11428
      ],
      "op": "POP",
      "path": "2"
    },
    "12060": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11453,
        11462
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 98,
      "value": "0x5"
    },
    "12062": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11480,
        11481
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "12064": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11463,
        11472
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "12066": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11463,
        11479
      ],
      "op": "DUP1",
      "path": "2"
    },
    "12067": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11463,
        11479
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "12068": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11463,
        11479
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12069": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11463,
        11479
      ],
      "op": "POP",
      "path": "2"
    },
    "12070": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11463,
        11481
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2F2F"
    },
    "12073": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11463,
        11481
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "12074": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11463,
        11481
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12075": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11463,
        11481
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x40C8"
    },
    "12078": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "jump": "i",
      "offset": [
        11463,
        11481
      ],
      "op": "JUMP",
      "path": "2"
    },
    "12079": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11463,
        11481
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12080": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11453,
        11482
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12081": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11453,
        11482
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "12082": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11453,
        11482
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12083": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11453,
        11482
      ],
      "op": "LT",
      "path": "2"
    },
    "12084": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11453,
        11482
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2F3F"
    },
    "12087": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11453,
        11482
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "12088": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11453,
        11482
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2F3F"
    },
    "12091": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11453,
        11482
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3DDE"
    },
    "12094": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "jump": "i",
      "offset": [
        11453,
        11482
      ],
      "op": "JUMP",
      "path": "2"
    },
    "12095": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11453,
        11482
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12096": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11453,
        11482
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12097": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11453,
        11482
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "12099": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11453,
        11482
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "12100": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11453,
        11482
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "12102": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11453,
        11482
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "12104": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11453,
        11482
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "12105": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11453,
        11482
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12106": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11453,
        11482
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "12108": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11453,
        11482
      ],
      "op": "MUL",
      "path": "2"
    },
    "12109": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11453,
        11482
      ],
      "op": "ADD",
      "path": "2"
    },
    "12110": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11453,
        11482
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "12112": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11446,
        11482
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "12114": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11446,
        11482
      ],
      "op": "DUP3",
      "path": "2"
    },
    "12115": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11446,
        11482
      ],
      "op": "ADD",
      "path": "2"
    },
    "12116": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11446,
        11482
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "12118": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11446,
        11482
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2F5F"
    },
    "12121": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11446,
        11482
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "12122": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11446,
        11482
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12123": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11446,
        11482
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3513"
    },
    "12126": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "jump": "i",
      "offset": [
        11446,
        11482
      ],
      "op": "JUMP",
      "path": "2"
    },
    "12127": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11446,
        11482
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12128": {
      "op": "POP"
    },
    "12129": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11446,
        11482
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "12131": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11446,
        11482
      ],
      "op": "ADD",
      "path": "2"
    },
    "12132": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11446,
        11482
      ],
      "op": "DUP1",
      "path": "2"
    },
    "12133": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11446,
        11482
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "12134": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12136": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12138": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "12140": {
      "op": "SHL"
    },
    "12141": {
      "op": "SUB"
    },
    "12142": {
      "op": "NOT"
    },
    "12143": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11446,
        11482
      ],
      "op": "AND",
      "path": "2"
    },
    "12144": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11446,
        11482
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12145": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11446,
        11482
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "12146": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11959,
        11968
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 99,
      "value": "0x5"
    },
    "12148": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11969,
        11985
      ],
      "op": "DUP1",
      "path": "2"
    },
    "12149": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11969,
        11985
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "12150": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11969,
        11987
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2F81"
    },
    "12153": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11969,
        11987
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12154": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11446,
        11482
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "12156": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11446,
        11482
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12157": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11969,
        11987
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x40C8"
    },
    "12160": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "jump": "i",
      "offset": [
        11969,
        11987
      ],
      "op": "JUMP",
      "path": "2"
    },
    "12161": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11969,
        11987
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12162": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11959,
        11988
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12163": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11959,
        11988
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "12164": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11959,
        11988
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12165": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11959,
        11988
      ],
      "op": "LT",
      "path": "2"
    },
    "12166": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11959,
        11988
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2F91"
    },
    "12169": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11959,
        11988
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "12170": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11959,
        11988
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2F91"
    },
    "12173": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11959,
        11988
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3DDE"
    },
    "12176": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "jump": "i",
      "offset": [
        11959,
        11988
      ],
      "op": "JUMP",
      "path": "2"
    },
    "12177": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11959,
        11988
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12178": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11959,
        11988
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12179": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11959,
        11988
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "12181": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11959,
        11988
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "12182": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11959,
        11988
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "12184": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11959,
        11988
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "12186": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11959,
        11988
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "12187": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11959,
        11988
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12188": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11959,
        11988
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "12190": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11959,
        11988
      ],
      "op": "MUL",
      "path": "2"
    },
    "12191": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11959,
        11988
      ],
      "op": "ADD",
      "path": "2"
    },
    "12192": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11959,
        11988
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "12194": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11952,
        11988
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "12196": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11952,
        11988
      ],
      "op": "DUP3",
      "path": "2"
    },
    "12197": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11952,
        11988
      ],
      "op": "ADD",
      "path": "2"
    },
    "12198": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11952,
        11988
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "12200": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11952,
        11988
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2FB1"
    },
    "12203": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11952,
        11988
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "12204": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11952,
        11988
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12205": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11952,
        11988
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3513"
    },
    "12208": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "jump": "i",
      "offset": [
        11952,
        11988
      ],
      "op": "JUMP",
      "path": "2"
    },
    "12209": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11952,
        11988
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12210": {
      "op": "POP"
    },
    "12211": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11952,
        11988
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "12213": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11952,
        11988
      ],
      "op": "ADD",
      "path": "2"
    },
    "12214": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11952,
        11988
      ],
      "op": "DUP1",
      "path": "2"
    },
    "12215": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11952,
        11988
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "12216": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12218": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12220": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "12222": {
      "op": "SHL"
    },
    "12223": {
      "op": "SUB"
    },
    "12224": {
      "op": "NOT"
    },
    "12225": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11952,
        11988
      ],
      "op": "AND",
      "path": "2"
    },
    "12226": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11952,
        11988
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12227": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        11952,
        11988
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "12228": {
      "op": "POP"
    },
    "12229": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        12006,
        12011
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 100,
      "value": "0x2FD3"
    },
    "12232": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        12006,
        12011
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12233": {
      "op": "POP"
    },
    "12234": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        12006,
        12011
      ],
      "op": "JUMP",
      "path": "2"
    },
    "12235": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10978,
        12026
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12236": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        12049,
        12052
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 101,
      "value": "0x1"
    },
    "12238": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        12049,
        12052
      ],
      "op": "ADD",
      "path": "2"
    },
    "12239": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10927,
        12064
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2E3D"
    },
    "12242": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10927,
        12064
      ],
      "op": "JUMP",
      "path": "2"
    },
    "12243": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10927,
        12064
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12244": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10927,
        12064
      ],
      "op": "POP",
      "path": "2"
    },
    "12245": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        10849,
        12070
      ],
      "op": "POP",
      "path": "2"
    },
    "12246": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "jump": "o",
      "offset": [
        10849,
        12070
      ],
      "op": "JUMP",
      "path": "2"
    },
    "12247": {
      "fn": "Governance.getVotes",
      "offset": [
        5221,
        5610
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12248": {
      "fn": "Governance.getVotes",
      "offset": [
        5282,
        5297
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "12250": {
      "fn": "Governance.getVotes",
      "offset": [
        5330,
        5344
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 102,
      "value": "0x9"
    },
    "12252": {
      "fn": "Governance.getVotes",
      "offset": [
        5330,
        5344
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "12253": {
      "fn": "Governance.getVotes",
      "offset": [
        5317,
        5327
      ],
      "op": "DUP3",
      "path": "2"
    },
    "12254": {
      "branch": 180,
      "fn": "Governance.getVotes",
      "offset": [
        5317,
        5344
      ],
      "op": "LT",
      "path": "2"
    },
    "12255": {
      "fn": "Governance.getVotes",
      "offset": [
        5309,
        5365
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x301D"
    },
    "12258": {
      "branch": 180,
      "fn": "Governance.getVotes",
      "offset": [
        5309,
        5365
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "12259": {
      "fn": "Governance.getVotes",
      "offset": [
        5309,
        5365
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "12261": {
      "fn": "Governance.getVotes",
      "offset": [
        5309,
        5365
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "12262": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "12266": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "12268": {
      "op": "SHL"
    },
    "12269": {
      "fn": "Governance.getVotes",
      "offset": [
        5309,
        5365
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12270": {
      "fn": "Governance.getVotes",
      "offset": [
        5309,
        5365
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "12271": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12273": {
      "fn": "Governance.getVotes",
      "offset": [
        5309,
        5365
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "12275": {
      "fn": "Governance.getVotes",
      "offset": [
        5309,
        5365
      ],
      "op": "DUP3",
      "path": "2"
    },
    "12276": {
      "fn": "Governance.getVotes",
      "offset": [
        5309,
        5365
      ],
      "op": "ADD",
      "path": "2"
    },
    "12277": {
      "op": "MSTORE"
    },
    "12278": {
      "op": "PUSH1",
      "value": "0x10"
    },
    "12280": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "12282": {
      "op": "DUP3"
    },
    "12283": {
      "op": "ADD"
    },
    "12284": {
      "op": "MSTORE"
    },
    "12285": {
      "op": "PUSH16",
      "value": "0x1B9BC81CDD58DA081C1C9BDC1BDCD85B"
    },
    "12302": {
      "op": "PUSH1",
      "value": "0x82"
    },
    "12304": {
      "op": "SHL"
    },
    "12305": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "12307": {
      "op": "DUP3"
    },
    "12308": {
      "op": "ADD"
    },
    "12309": {
      "op": "MSTORE"
    },
    "12310": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "12312": {
      "op": "ADD"
    },
    "12313": {
      "fn": "Governance.getVotes",
      "offset": [
        5309,
        5365
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF9A"
    },
    "12316": {
      "op": "JUMP"
    },
    "12317": {
      "fn": "Governance.getVotes",
      "offset": [
        5309,
        5365
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12318": {
      "fn": "Governance.getVotes",
      "offset": [
        5375,
        5400
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "12320": {
      "fn": "Governance.getVotes",
      "offset": [
        5416,
        5437
      ],
      "op": "DUP3",
      "path": "2"
    },
    "12321": {
      "fn": "Governance.getVotes",
      "offset": [
        5416,
        5437
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12322": {
      "fn": "Governance.getVotes",
      "offset": [
        5416,
        5437
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "12323": {
      "fn": "Governance.getVotes",
      "offset": [
        5416,
        5425
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x8"
    },
    "12325": {
      "fn": "Governance.getVotes",
      "offset": [
        5416,
        5437
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "12327": {
      "fn": "Governance.getVotes",
      "offset": [
        5416,
        5437
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "12328": {
      "fn": "Governance.getVotes",
      "offset": [
        5416,
        5437
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "12330": {
      "fn": "Governance.getVotes",
      "offset": [
        5416,
        5437
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12331": {
      "fn": "Governance.getVotes",
      "offset": [
        5416,
        5437
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "12332": {
      "fn": "Governance.getVotes",
      "offset": [
        5416,
        5453
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "12334": {
      "fn": "Governance.getVotes",
      "offset": [
        5416,
        5453
      ],
      "op": "ADD",
      "path": "2"
    },
    "12335": {
      "fn": "Governance.getVotes",
      "offset": [
        5416,
        5453
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "12336": {
      "fn": "Governance.getVotes",
      "offset": [
        5416,
        5453
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "12339": {
      "fn": "Governance.getVotes",
      "offset": [
        5416,
        5453
      ],
      "op": "AND",
      "path": "2"
    },
    "12340": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12342": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12344": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12346": {
      "op": "SHL"
    },
    "12347": {
      "op": "SUB"
    },
    "12348": {
      "fn": "Governance.getVotes",
      "offset": [
        5403,
        5454
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12349": {
      "fn": "Governance.getVotes",
      "offset": [
        5403,
        5454
      ],
      "op": "GT",
      "path": "2"
    },
    "12350": {
      "fn": "Governance.getVotes",
      "offset": [
        5403,
        5454
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "12351": {
      "fn": "Governance.getVotes",
      "offset": [
        5403,
        5454
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x304A"
    },
    "12354": {
      "fn": "Governance.getVotes",
      "offset": [
        5403,
        5454
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "12355": {
      "fn": "Governance.getVotes",
      "offset": [
        5403,
        5454
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x304A"
    },
    "12358": {
      "fn": "Governance.getVotes",
      "offset": [
        5403,
        5454
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3612"
    },
    "12361": {
      "fn": "Governance.getVotes",
      "jump": "i",
      "offset": [
        5403,
        5454
      ],
      "op": "JUMP",
      "path": "2"
    },
    "12362": {
      "fn": "Governance.getVotes",
      "offset": [
        5403,
        5454
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12363": {
      "fn": "Governance.getVotes",
      "offset": [
        5403,
        5454
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "12365": {
      "fn": "Governance.getVotes",
      "offset": [
        5403,
        5454
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "12366": {
      "fn": "Governance.getVotes",
      "offset": [
        5403,
        5454
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12367": {
      "fn": "Governance.getVotes",
      "offset": [
        5403,
        5454
      ],
      "op": "DUP1",
      "path": "2"
    },
    "12368": {
      "fn": "Governance.getVotes",
      "offset": [
        5403,
        5454
      ],
      "op": "DUP3",
      "path": "2"
    },
    "12369": {
      "fn": "Governance.getVotes",
      "offset": [
        5403,
        5454
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "12370": {
      "fn": "Governance.getVotes",
      "offset": [
        5403,
        5454
      ],
      "op": "DUP1",
      "path": "2"
    },
    "12371": {
      "fn": "Governance.getVotes",
      "offset": [
        5403,
        5454
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "12373": {
      "fn": "Governance.getVotes",
      "offset": [
        5403,
        5454
      ],
      "op": "MUL",
      "path": "2"
    },
    "12374": {
      "fn": "Governance.getVotes",
      "offset": [
        5403,
        5454
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "12376": {
      "fn": "Governance.getVotes",
      "offset": [
        5403,
        5454
      ],
      "op": "ADD",
      "path": "2"
    },
    "12377": {
      "fn": "Governance.getVotes",
      "offset": [
        5403,
        5454
      ],
      "op": "DUP3",
      "path": "2"
    },
    "12378": {
      "fn": "Governance.getVotes",
      "offset": [
        5403,
        5454
      ],
      "op": "ADD",
      "path": "2"
    },
    "12379": {
      "fn": "Governance.getVotes",
      "offset": [
        5403,
        5454
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "12381": {
      "fn": "Governance.getVotes",
      "offset": [
        5403,
        5454
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "12382": {
      "fn": "Governance.getVotes",
      "offset": [
        5403,
        5454
      ],
      "op": "DUP1",
      "path": "2"
    },
    "12383": {
      "fn": "Governance.getVotes",
      "offset": [
        5403,
        5454
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "12384": {
      "fn": "Governance.getVotes",
      "offset": [
        5403,
        5454
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3073"
    },
    "12387": {
      "fn": "Governance.getVotes",
      "offset": [
        5403,
        5454
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "12388": {
      "fn": "Governance.getVotes",
      "offset": [
        5403,
        5454
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12389": {
      "fn": "Governance.getVotes",
      "offset": [
        5403,
        5454
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "12391": {
      "fn": "Governance.getVotes",
      "offset": [
        5403,
        5454
      ],
      "op": "ADD",
      "path": "2"
    },
    "12392": {
      "fn": "Governance.getVotes",
      "offset": [
        5403,
        5454
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "12394": {
      "fn": "Governance.getVotes",
      "offset": [
        5403,
        5454
      ],
      "op": "DUP3",
      "path": "2"
    },
    "12395": {
      "fn": "Governance.getVotes",
      "offset": [
        5403,
        5454
      ],
      "op": "MUL",
      "path": "2"
    },
    "12396": {
      "fn": "Governance.getVotes",
      "offset": [
        5403,
        5454
      ],
      "op": "DUP1",
      "path": "2"
    },
    "12397": {
      "fn": "Governance.getVotes",
      "offset": [
        5403,
        5454
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "12398": {
      "fn": "Governance.getVotes",
      "offset": [
        5403,
        5454
      ],
      "op": "DUP4",
      "path": "2"
    },
    "12399": {
      "fn": "Governance.getVotes",
      "offset": [
        5403,
        5454
      ],
      "op": "CALLDATACOPY",
      "path": "2"
    },
    "12400": {
      "fn": "Governance.getVotes",
      "offset": [
        5403,
        5454
      ],
      "op": "ADD",
      "path": "2"
    },
    "12401": {
      "fn": "Governance.getVotes",
      "offset": [
        5403,
        5454
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12402": {
      "op": "POP"
    },
    "12403": {
      "fn": "Governance.getVotes",
      "offset": [
        5403,
        5454
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12404": {
      "fn": "Governance.getVotes",
      "offset": [
        5403,
        5454
      ],
      "op": "POP",
      "path": "2"
    },
    "12405": {
      "fn": "Governance.getVotes",
      "offset": [
        5375,
        5454
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12406": {
      "fn": "Governance.getVotes",
      "offset": [
        5375,
        5454
      ],
      "op": "POP",
      "path": "2"
    },
    "12407": {
      "fn": "Governance.getVotes",
      "offset": [
        5468,
        5477
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "12409": {
      "fn": "Governance.getVotes",
      "offset": [
        5464,
        5578
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12410": {
      "fn": "Governance.getVotes",
      "offset": [
        5486,
        5495
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12411": {
      "fn": "Governance.getVotes",
      "offset": [
        5486,
        5502
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "12412": {
      "fn": "Governance.getVotes",
      "offset": [
        5483,
        5484
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12413": {
      "fn": "Governance.getVotes",
      "offset": [
        5483,
        5502
      ],
      "op": "LT",
      "path": "2"
    },
    "12414": {
      "fn": "Governance.getVotes",
      "offset": [
        5464,
        5578
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "12415": {
      "fn": "Governance.getVotes",
      "offset": [
        5464,
        5578
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x30FA"
    },
    "12418": {
      "fn": "Governance.getVotes",
      "offset": [
        5464,
        5578
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "12419": {
      "fn": "Governance.getVotes",
      "offset": [
        5537,
        5546
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 103,
      "value": "0x8"
    },
    "12421": {
      "fn": "Governance.getVotes",
      "offset": [
        5537,
        5558
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "12423": {
      "fn": "Governance.getVotes",
      "offset": [
        5547,
        5557
      ],
      "op": "DUP6",
      "path": "2"
    },
    "12424": {
      "fn": "Governance.getVotes",
      "offset": [
        5537,
        5558
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12425": {
      "fn": "Governance.getVotes",
      "offset": [
        5537,
        5558
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "12426": {
      "fn": "Governance.getVotes",
      "offset": [
        5537,
        5558
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "12428": {
      "fn": "Governance.getVotes",
      "offset": [
        5537,
        5558
      ],
      "op": "ADD",
      "path": "2"
    },
    "12429": {
      "fn": "Governance.getVotes",
      "offset": [
        5537,
        5558
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12430": {
      "fn": "Governance.getVotes",
      "offset": [
        5537,
        5558
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12431": {
      "fn": "Governance.getVotes",
      "offset": [
        5537,
        5558
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "12432": {
      "fn": "Governance.getVotes",
      "offset": [
        5537,
        5558
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "12434": {
      "fn": "Governance.getVotes",
      "offset": [
        5537,
        5558
      ],
      "op": "ADD",
      "path": "2"
    },
    "12435": {
      "fn": "Governance.getVotes",
      "offset": [
        5537,
        5558
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "12437": {
      "fn": "Governance.getVotes",
      "offset": [
        5537,
        5558
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "12438": {
      "fn": "Governance.getVotes",
      "offset": [
        5537,
        5564
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "12440": {
      "fn": "Governance.getVotes",
      "offset": [
        5537,
        5564
      ],
      "op": "ADD",
      "path": "2"
    },
    "12441": {
      "fn": "Governance.getVotes",
      "offset": [
        5565,
        5566
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12442": {
      "fn": "Governance.getVotes",
      "offset": [
        5537,
        5567
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x8"
    },
    "12444": {
      "fn": "Governance.getVotes",
      "offset": [
        5537,
        5567
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12445": {
      "fn": "Governance.getVotes",
      "offset": [
        5537,
        5567
      ],
      "op": "LT",
      "path": "2"
    },
    "12446": {
      "fn": "Governance.getVotes",
      "offset": [
        5537,
        5567
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x30A9"
    },
    "12449": {
      "fn": "Governance.getVotes",
      "offset": [
        5537,
        5567
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "12450": {
      "fn": "Governance.getVotes",
      "offset": [
        5537,
        5567
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x30A9"
    },
    "12453": {
      "fn": "Governance.getVotes",
      "offset": [
        5537,
        5567
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3DDE"
    },
    "12456": {
      "fn": "Governance.getVotes",
      "jump": "i",
      "offset": [
        5537,
        5567
      ],
      "op": "JUMP",
      "path": "2"
    },
    "12457": {
      "fn": "Governance.getVotes",
      "offset": [
        5537,
        5567
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12458": {
      "fn": "Governance.getVotes",
      "offset": [
        5537,
        5567
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x10"
    },
    "12460": {
      "fn": "Governance.getVotes",
      "offset": [
        5537,
        5567
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "12461": {
      "fn": "Governance.getVotes",
      "offset": [
        5537,
        5567
      ],
      "op": "DUP3",
      "path": "2"
    },
    "12462": {
      "fn": "Governance.getVotes",
      "offset": [
        5537,
        5567
      ],
      "op": "DUP3",
      "path": "2"
    },
    "12463": {
      "fn": "Governance.getVotes",
      "offset": [
        5537,
        5567
      ],
      "op": "DIV",
      "path": "2"
    },
    "12464": {
      "fn": "Governance.getVotes",
      "offset": [
        5537,
        5567
      ],
      "op": "ADD",
      "path": "2"
    },
    "12465": {
      "fn": "Governance.getVotes",
      "offset": [
        5537,
        5567
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "12466": {
      "fn": "Governance.getVotes",
      "offset": [
        5537,
        5567
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12467": {
      "fn": "Governance.getVotes",
      "offset": [
        5537,
        5567
      ],
      "op": "MOD",
      "path": "2"
    },
    "12468": {
      "fn": "Governance.getVotes",
      "offset": [
        5537,
        5567
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "12470": {
      "fn": "Governance.getVotes",
      "offset": [
        5537,
        5567
      ],
      "op": "MUL",
      "path": "2"
    },
    "12471": {
      "fn": "Governance.getVotes",
      "offset": [
        5537,
        5567
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12472": {
      "fn": "Governance.getVotes",
      "offset": [
        5537,
        5567
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "12473": {
      "fn": "Governance.getVotes",
      "offset": [
        5537,
        5567
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12474": {
      "fn": "Governance.getVotes",
      "offset": [
        5537,
        5567
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "12477": {
      "fn": "Governance.getVotes",
      "offset": [
        5537,
        5567
      ],
      "op": "EXP",
      "path": "2"
    },
    "12478": {
      "fn": "Governance.getVotes",
      "offset": [
        5537,
        5567
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12479": {
      "fn": "Governance.getVotes",
      "offset": [
        5537,
        5567
      ],
      "op": "DIV",
      "path": "2"
    },
    "12480": {
      "fn": "Governance.getVotes",
      "offset": [
        5537,
        5567
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "12483": {
      "fn": "Governance.getVotes",
      "offset": [
        5537,
        5567
      ],
      "op": "AND",
      "path": "2"
    },
    "12484": {
      "fn": "Governance.getVotes",
      "offset": [
        5522,
        5531
      ],
      "op": "DUP3",
      "path": "2"
    },
    "12485": {
      "fn": "Governance.getVotes",
      "offset": [
        5532,
        5533
      ],
      "op": "DUP3",
      "path": "2"
    },
    "12486": {
      "fn": "Governance.getVotes",
      "offset": [
        5522,
        5534
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12487": {
      "fn": "Governance.getVotes",
      "offset": [
        5522,
        5534
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "12488": {
      "fn": "Governance.getVotes",
      "offset": [
        5522,
        5534
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12489": {
      "fn": "Governance.getVotes",
      "offset": [
        5522,
        5534
      ],
      "op": "LT",
      "path": "2"
    },
    "12490": {
      "fn": "Governance.getVotes",
      "offset": [
        5522,
        5534
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x30D5"
    },
    "12493": {
      "fn": "Governance.getVotes",
      "offset": [
        5522,
        5534
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "12494": {
      "fn": "Governance.getVotes",
      "offset": [
        5522,
        5534
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x30D5"
    },
    "12497": {
      "fn": "Governance.getVotes",
      "offset": [
        5522,
        5534
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3DDE"
    },
    "12500": {
      "fn": "Governance.getVotes",
      "jump": "i",
      "offset": [
        5522,
        5534
      ],
      "op": "JUMP",
      "path": "2"
    },
    "12501": {
      "fn": "Governance.getVotes",
      "offset": [
        5522,
        5534
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12502": {
      "fn": "Governance.getVotes",
      "offset": [
        5522,
        5567
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "12505": {
      "fn": "Governance.getVotes",
      "offset": [
        5522,
        5567
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12506": {
      "fn": "Governance.getVotes",
      "offset": [
        5522,
        5567
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "12507": {
      "fn": "Governance.getVotes",
      "offset": [
        5522,
        5567
      ],
      "op": "AND",
      "path": "2"
    },
    "12508": {
      "fn": "Governance.getVotes",
      "offset": [
        5522,
        5534
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "12510": {
      "fn": "Governance.getVotes",
      "offset": [
        5522,
        5534
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "12511": {
      "fn": "Governance.getVotes",
      "offset": [
        5522,
        5534
      ],
      "op": "DUP4",
      "path": "2"
    },
    "12512": {
      "fn": "Governance.getVotes",
      "offset": [
        5522,
        5534
      ],
      "op": "MUL",
      "path": "2"
    },
    "12513": {
      "fn": "Governance.getVotes",
      "offset": [
        5522,
        5534
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "12514": {
      "fn": "Governance.getVotes",
      "offset": [
        5522,
        5534
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12515": {
      "fn": "Governance.getVotes",
      "offset": [
        5522,
        5534
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "12516": {
      "fn": "Governance.getVotes",
      "offset": [
        5522,
        5534
      ],
      "op": "ADD",
      "path": "2"
    },
    "12517": {
      "fn": "Governance.getVotes",
      "offset": [
        5522,
        5534
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12518": {
      "fn": "Governance.getVotes",
      "offset": [
        5522,
        5534
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "12519": {
      "fn": "Governance.getVotes",
      "offset": [
        5522,
        5534
      ],
      "op": "ADD",
      "path": "2"
    },
    "12520": {
      "fn": "Governance.getVotes",
      "offset": [
        5522,
        5567
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "12521": {
      "fn": "Governance.getVotes",
      "offset": [
        5504,
        5507
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 104
    },
    "12522": {
      "fn": "Governance.getVotes",
      "offset": [
        5504,
        5507
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x30F2"
    },
    "12525": {
      "fn": "Governance.getVotes",
      "offset": [
        5504,
        5507
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12526": {
      "fn": "Governance.getVotes",
      "offset": [
        5504,
        5507
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4116"
    },
    "12529": {
      "fn": "Governance.getVotes",
      "jump": "i",
      "offset": [
        5504,
        5507
      ],
      "op": "JUMP",
      "path": "2"
    },
    "12530": {
      "fn": "Governance.getVotes",
      "offset": [
        5504,
        5507
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12531": {
      "fn": "Governance.getVotes",
      "offset": [
        5504,
        5507
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "12532": {
      "fn": "Governance.getVotes",
      "offset": [
        5504,
        5507
      ],
      "op": "POP",
      "path": "2"
    },
    "12533": {
      "fn": "Governance.getVotes",
      "offset": [
        5504,
        5507
      ],
      "op": "POP",
      "path": "2"
    },
    "12534": {
      "fn": "Governance.getVotes",
      "offset": [
        5464,
        5578
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3079"
    },
    "12537": {
      "fn": "Governance.getVotes",
      "offset": [
        5464,
        5578
      ],
      "op": "JUMP",
      "path": "2"
    },
    "12538": {
      "fn": "Governance.getVotes",
      "offset": [
        5464,
        5578
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12539": {
      "op": "POP"
    },
    "12540": {
      "fn": "Governance.getVotes",
      "offset": [
        5594,
        5603
      ],
      "op": "SWAP3",
      "path": "2",
      "statement": 105
    },
    "12541": {
      "fn": "Governance.getVotes",
      "offset": [
        5221,
        5610
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "12542": {
      "op": "POP"
    },
    "12543": {
      "op": "POP"
    },
    "12544": {
      "fn": "Governance.getVotes",
      "jump": "o",
      "offset": [
        5221,
        5610
      ],
      "op": "JUMP",
      "path": "2"
    },
    "12545": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4598,
        4922
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "12546": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4676,
        4689
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "12548": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4750,
        4760
      ],
      "op": "DUP1",
      "path": "1"
    },
    "12549": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4763,
        4829
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3124"
    },
    "12552": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4804,
        4828
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3110"
    },
    "12555": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4822,
        4827
      ],
      "op": "DUP5",
      "path": "1"
    },
    "12556": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4804,
        4821
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x33C2"
    },
    "12559": {
      "fn": "DoubleEndedQueue.at",
      "jump": "i",
      "offset": [
        4804,
        4828
      ],
      "op": "JUMP",
      "path": "1"
    },
    "12560": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4804,
        4828
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "12561": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4788,
        4800
      ],
      "op": "DUP6",
      "path": "1"
    },
    "12562": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4788,
        4800
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "12563": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4781,
        4828
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x311F"
    },
    "12566": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4781,
        4828
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "12567": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4781,
        4828
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "12568": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4788,
        4800
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xF"
    },
    "12570": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4788,
        4800
      ],
      "op": "SIGNEXTEND",
      "path": "1"
    },
    "12571": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4781,
        4828
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x431B"
    },
    "12574": {
      "fn": "DoubleEndedQueue.at",
      "jump": "i",
      "offset": [
        4781,
        4828
      ],
      "op": "JUMP",
      "path": "1"
    },
    "12575": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4781,
        4828
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "12576": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4763,
        4780
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3430"
    },
    "12579": {
      "fn": "DoubleEndedQueue.at",
      "jump": "i",
      "offset": [
        4763,
        4829
      ],
      "op": "JUMP",
      "path": "1"
    },
    "12580": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4763,
        4829
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "12581": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4850,
        4860
      ],
      "op": "DUP5",
      "path": "1",
      "statement": 106
    },
    "12582": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4850,
        4860
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "12583": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4750,
        4829
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "12584": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4750,
        4829
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "12585": {
      "op": "POP"
    },
    "12586": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12588": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "12590": {
      "op": "SHL"
    },
    "12591": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4850,
        4860
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "12592": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4850,
        4860
      ],
      "op": "DIV",
      "path": "1"
    },
    "12593": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4850,
        4860
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xF"
    },
    "12595": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4850,
        4860
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "12596": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4850,
        4860
      ],
      "op": "DUP2",
      "path": "1"
    },
    "12597": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4850,
        4860
      ],
      "op": "SIGNEXTEND",
      "path": "1"
    },
    "12598": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4843,
        4860
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "12599": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4843,
        4860
      ],
      "op": "DUP3",
      "path": "1"
    },
    "12600": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4843,
        4860
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "12601": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4843,
        4860
      ],
      "op": "SIGNEXTEND",
      "path": "1"
    },
    "12602": {
      "branch": 181,
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4843,
        4860
      ],
      "op": "SLT",
      "path": "1"
    },
    "12603": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4839,
        4882
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3157"
    },
    "12606": {
      "branch": 181,
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4839,
        4882
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "12607": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4869,
        4882
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "12609": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4869,
        4882
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "12610": {
      "op": "PUSH4",
      "value": "0x2D0483C5"
    },
    "12615": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "12617": {
      "op": "SHL"
    },
    "12618": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4869,
        4882
      ],
      "op": "DUP2",
      "path": "1"
    },
    "12619": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4869,
        4882
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "12620": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4869,
        4882
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "12622": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4869,
        4882
      ],
      "op": "ADD",
      "path": "1"
    },
    "12623": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4869,
        4882
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "12625": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4869,
        4882
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "12626": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4869,
        4882
      ],
      "op": "DUP1",
      "path": "1"
    },
    "12627": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4869,
        4882
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "12628": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4869,
        4882
      ],
      "op": "SUB",
      "path": "1"
    },
    "12629": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4869,
        4882
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "12630": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4869,
        4882
      ],
      "op": "REVERT",
      "path": "1"
    },
    "12631": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4839,
        4882
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "12632": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4915
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 107,
      "value": "0xF"
    },
    "12634": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4915
      ],
      "op": "SIGNEXTEND",
      "path": "1"
    },
    "12635": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4915
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "12637": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4915
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "12638": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4915
      ],
      "op": "DUP2",
      "path": "1"
    },
    "12639": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4915
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "12640": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4910
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "12642": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4910
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "12643": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4910
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "12644": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4910
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "12645": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4910
      ],
      "op": "ADD",
      "path": "1"
    },
    "12646": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4915
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "12648": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4915
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "12649": {
      "op": "POP"
    },
    "12650": {
      "op": "POP"
    },
    "12651": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4915
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "12653": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4915
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "12654": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4915
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "12655": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4915
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "12656": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4915
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "12657": {
      "fn": "DoubleEndedQueue.at",
      "jump": "o",
      "offset": [
        4598,
        4922
      ],
      "op": "JUMP",
      "path": "1"
    },
    "12658": {
      "fn": "Governance._createTaskType",
      "offset": [
        14407,
        15338
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12659": {
      "fn": "Governance._createTaskType",
      "offset": [
        14648,
        14657
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "12661": {
      "fn": "Governance._createTaskType",
      "offset": [
        14648,
        14664
      ],
      "op": "DUP1",
      "path": "2"
    },
    "12662": {
      "fn": "Governance._createTaskType",
      "offset": [
        14648,
        14664
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "12663": {
      "fn": "Governance._createTaskType",
      "offset": [
        14674,
        14690
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 108,
      "value": "0x1"
    },
    "12665": {
      "fn": "Governance._createTaskType",
      "offset": [
        14674,
        14690
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12666": {
      "fn": "Governance._createTaskType",
      "offset": [
        14674,
        14690
      ],
      "op": "ADD",
      "path": "2"
    },
    "12667": {
      "fn": "Governance._createTaskType",
      "offset": [
        14674,
        14690
      ],
      "op": "DUP1",
      "path": "2"
    },
    "12668": {
      "fn": "Governance._createTaskType",
      "offset": [
        14674,
        14690
      ],
      "op": "DUP4",
      "path": "2"
    },
    "12669": {
      "fn": "Governance._createTaskType",
      "offset": [
        14674,
        14690
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "12670": {
      "fn": "Governance._createTaskType",
      "offset": [
        14622,
        14645
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "12672": {
      "fn": "Governance._createTaskType",
      "offset": [
        14674,
        14690
      ],
      "op": "DUP4",
      "path": "2"
    },
    "12673": {
      "fn": "Governance._createTaskType",
      "offset": [
        14674,
        14690
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12674": {
      "fn": "Governance._createTaskType",
      "offset": [
        14674,
        14690
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "12675": {
      "fn": "Governance._createTaskType",
      "offset": [
        14648,
        14664
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "12676": {
      "fn": "Governance._createTaskType",
      "offset": [
        14648,
        14664
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "12677": {
      "fn": "Governance._createTaskType",
      "offset": [
        14648,
        14657
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12678": {
      "fn": "Governance._createTaskType",
      "offset": [
        14648,
        14664
      ],
      "op": "DUP4",
      "path": "2"
    },
    "12679": {
      "fn": "Governance._createTaskType",
      "offset": [
        14648,
        14664
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12680": {
      "fn": "Governance._createTaskType",
      "offset": [
        14731,
        14757
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12681": {
      "fn": "Governance._createTaskType",
      "offset": [
        14731,
        14757
      ],
      "op": "LT",
      "path": "2"
    },
    "12682": {
      "fn": "Governance._createTaskType",
      "offset": [
        14731,
        14757
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3195"
    },
    "12685": {
      "fn": "Governance._createTaskType",
      "offset": [
        14731,
        14757
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "12686": {
      "fn": "Governance._createTaskType",
      "offset": [
        14731,
        14757
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3195"
    },
    "12689": {
      "fn": "Governance._createTaskType",
      "offset": [
        14731,
        14757
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3DDE"
    },
    "12692": {
      "fn": "Governance._createTaskType",
      "jump": "i",
      "offset": [
        14731,
        14757
      ],
      "op": "JUMP",
      "path": "2"
    },
    "12693": {
      "fn": "Governance._createTaskType",
      "offset": [
        14731,
        14757
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12694": {
      "fn": "Governance._createTaskType",
      "offset": [
        14731,
        14757
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "12696": {
      "fn": "Governance._createTaskType",
      "offset": [
        14731,
        14757
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "12697": {
      "fn": "Governance._createTaskType",
      "offset": [
        14731,
        14757
      ],
      "op": "DUP3",
      "path": "2"
    },
    "12698": {
      "fn": "Governance._createTaskType",
      "offset": [
        14731,
        14757
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "12699": {
      "fn": "Governance._createTaskType",
      "offset": [
        14731,
        14757
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "12701": {
      "fn": "Governance._createTaskType",
      "offset": [
        14731,
        14757
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12702": {
      "fn": "Governance._createTaskType",
      "offset": [
        14731,
        14757
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "12703": {
      "fn": "Governance._createTaskType",
      "offset": [
        14731,
        14757
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "12704": {
      "fn": "Governance._createTaskType",
      "offset": [
        14731,
        14757
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "12706": {
      "fn": "Governance._createTaskType",
      "offset": [
        14731,
        14757
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12707": {
      "fn": "Governance._createTaskType",
      "offset": [
        14731,
        14757
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "12708": {
      "fn": "Governance._createTaskType",
      "offset": [
        14731,
        14757
      ],
      "op": "MUL",
      "path": "2"
    },
    "12709": {
      "fn": "Governance._createTaskType",
      "offset": [
        14731,
        14757
      ],
      "op": "ADD",
      "path": "2"
    },
    "12710": {
      "fn": "Governance._createTaskType",
      "offset": [
        14731,
        14757
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12711": {
      "op": "POP"
    },
    "12712": {
      "fn": "Governance._createTaskType",
      "offset": [
        14771,
        14791
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 109,
      "value": "0x1"
    },
    "12714": {
      "fn": "Governance._createTaskType",
      "offset": [
        14771,
        14791
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12715": {
      "fn": "Governance._createTaskType",
      "offset": [
        14771,
        14791
      ],
      "op": "ADD",
      "path": "2"
    },
    "12716": {
      "fn": "Governance._createTaskType",
      "offset": [
        14771,
        14802
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x31B6"
    },
    "12719": {
      "fn": "Governance._createTaskType",
      "offset": [
        14793,
        14802
      ],
      "op": "DUP11",
      "path": "2"
    },
    "12720": {
      "fn": "Governance._createTaskType",
      "offset": [
        14793,
        14802
      ],
      "op": "DUP13",
      "path": "2"
    },
    "12721": {
      "fn": "Governance._createTaskType",
      "offset": [
        14771,
        14791
      ],
      "op": "DUP4",
      "path": "2"
    },
    "12722": {
      "fn": "Governance._createTaskType",
      "offset": [
        14771,
        14802
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x412F"
    },
    "12725": {
      "fn": "Governance._createTaskType",
      "jump": "i",
      "offset": [
        14771,
        14802
      ],
      "op": "JUMP",
      "path": "2"
    },
    "12726": {
      "fn": "Governance._createTaskType",
      "offset": [
        14771,
        14802
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12727": {
      "fn": "Governance._createTaskType",
      "offset": [
        14771,
        14802
      ],
      "op": "POP",
      "path": "2"
    },
    "12728": {
      "fn": "Governance._createTaskType",
      "offset": [
        14837,
        14842
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 110,
      "value": "0x0"
    },
    "12730": {
      "fn": "Governance._createTaskType",
      "offset": [
        14816,
        14827
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12731": {
      "fn": "Governance._createTaskType",
      "offset": [
        14816,
        14834
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "12733": {
      "fn": "Governance._createTaskType",
      "offset": [
        14816,
        14834
      ],
      "op": "ADD",
      "path": "2"
    },
    "12734": {
      "fn": "Governance._createTaskType",
      "offset": [
        14816,
        14834
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "12736": {
      "fn": "Governance._createTaskType",
      "offset": [
        14816,
        14842
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "12739": {
      "fn": "Governance._createTaskType",
      "offset": [
        14816,
        14842
      ],
      "op": "EXP",
      "path": "2"
    },
    "12740": {
      "fn": "Governance._createTaskType",
      "offset": [
        14816,
        14842
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12741": {
      "fn": "Governance._createTaskType",
      "offset": [
        14816,
        14842
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "12742": {
      "fn": "Governance._createTaskType",
      "offset": [
        14816,
        14842
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12743": {
      "fn": "Governance._createTaskType",
      "offset": [
        14816,
        14842
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "12745": {
      "fn": "Governance._createTaskType",
      "offset": [
        14816,
        14842
      ],
      "op": "MUL",
      "path": "2"
    },
    "12746": {
      "fn": "Governance._createTaskType",
      "offset": [
        14816,
        14842
      ],
      "op": "NOT",
      "path": "2"
    },
    "12747": {
      "fn": "Governance._createTaskType",
      "offset": [
        14816,
        14842
      ],
      "op": "AND",
      "path": "2"
    },
    "12748": {
      "fn": "Governance._createTaskType",
      "offset": [
        14816,
        14842
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12749": {
      "fn": "Governance._createTaskType",
      "offset": [
        14816,
        14842
      ],
      "op": "DUP4",
      "path": "2"
    },
    "12750": {
      "fn": "Governance._createTaskType",
      "offset": [
        14816,
        14842
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "12751": {
      "fn": "Governance._createTaskType",
      "offset": [
        14816,
        14842
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "12752": {
      "fn": "Governance._createTaskType",
      "offset": [
        14816,
        14842
      ],
      "op": "MUL",
      "path": "2"
    },
    "12753": {
      "fn": "Governance._createTaskType",
      "offset": [
        14816,
        14842
      ],
      "op": "OR",
      "path": "2"
    },
    "12754": {
      "fn": "Governance._createTaskType",
      "offset": [
        14816,
        14842
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12755": {
      "fn": "Governance._createTaskType",
      "offset": [
        14816,
        14842
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "12756": {
      "fn": "Governance._createTaskType",
      "offset": [
        14816,
        14842
      ],
      "op": "POP",
      "path": "2"
    },
    "12757": {
      "fn": "Governance._createTaskType",
      "offset": [
        14881,
        14892
      ],
      "op": "DUP8",
      "path": "2",
      "statement": 111
    },
    "12758": {
      "fn": "Governance._createTaskType",
      "offset": [
        14856,
        14867
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12759": {
      "fn": "Governance._createTaskType",
      "offset": [
        14856,
        14878
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "12761": {
      "fn": "Governance._createTaskType",
      "offset": [
        14856,
        14878
      ],
      "op": "ADD",
      "path": "2"
    },
    "12762": {
      "fn": "Governance._createTaskType",
      "offset": [
        14856,
        14878
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "12764": {
      "fn": "Governance._createTaskType",
      "offset": [
        14856,
        14892
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "12767": {
      "fn": "Governance._createTaskType",
      "offset": [
        14856,
        14892
      ],
      "op": "EXP",
      "path": "2"
    },
    "12768": {
      "fn": "Governance._createTaskType",
      "offset": [
        14856,
        14892
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12769": {
      "fn": "Governance._createTaskType",
      "offset": [
        14856,
        14892
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "12770": {
      "fn": "Governance._createTaskType",
      "offset": [
        14856,
        14892
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12771": {
      "fn": "Governance._createTaskType",
      "offset": [
        14856,
        14892
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "12777": {
      "fn": "Governance._createTaskType",
      "offset": [
        14856,
        14892
      ],
      "op": "MUL",
      "path": "2"
    },
    "12778": {
      "fn": "Governance._createTaskType",
      "offset": [
        14856,
        14892
      ],
      "op": "NOT",
      "path": "2"
    },
    "12779": {
      "fn": "Governance._createTaskType",
      "offset": [
        14856,
        14892
      ],
      "op": "AND",
      "path": "2"
    },
    "12780": {
      "fn": "Governance._createTaskType",
      "offset": [
        14856,
        14892
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12781": {
      "fn": "Governance._createTaskType",
      "offset": [
        14856,
        14892
      ],
      "op": "DUP4",
      "path": "2"
    },
    "12782": {
      "fn": "Governance._createTaskType",
      "offset": [
        14856,
        14892
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "12788": {
      "fn": "Governance._createTaskType",
      "offset": [
        14856,
        14892
      ],
      "op": "AND",
      "path": "2"
    },
    "12789": {
      "fn": "Governance._createTaskType",
      "offset": [
        14856,
        14892
      ],
      "op": "MUL",
      "path": "2"
    },
    "12790": {
      "fn": "Governance._createTaskType",
      "offset": [
        14856,
        14892
      ],
      "op": "OR",
      "path": "2"
    },
    "12791": {
      "fn": "Governance._createTaskType",
      "offset": [
        14856,
        14892
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12792": {
      "fn": "Governance._createTaskType",
      "offset": [
        14856,
        14892
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "12793": {
      "fn": "Governance._createTaskType",
      "offset": [
        14856,
        14892
      ],
      "op": "POP",
      "path": "2"
    },
    "12794": {
      "fn": "Governance._createTaskType",
      "offset": [
        14936,
        14952
      ],
      "op": "DUP7",
      "path": "2",
      "statement": 112
    },
    "12795": {
      "fn": "Governance._createTaskType",
      "offset": [
        14906,
        14917
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12796": {
      "fn": "Governance._createTaskType",
      "offset": [
        14906,
        14933
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "12798": {
      "fn": "Governance._createTaskType",
      "offset": [
        14906,
        14933
      ],
      "op": "ADD",
      "path": "2"
    },
    "12799": {
      "fn": "Governance._createTaskType",
      "offset": [
        14906,
        14933
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x6"
    },
    "12801": {
      "fn": "Governance._createTaskType",
      "offset": [
        14906,
        14952
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "12804": {
      "fn": "Governance._createTaskType",
      "offset": [
        14906,
        14952
      ],
      "op": "EXP",
      "path": "2"
    },
    "12805": {
      "fn": "Governance._createTaskType",
      "offset": [
        14906,
        14952
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12806": {
      "fn": "Governance._createTaskType",
      "offset": [
        14906,
        14952
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "12807": {
      "fn": "Governance._createTaskType",
      "offset": [
        14906,
        14952
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12808": {
      "fn": "Governance._createTaskType",
      "offset": [
        14906,
        14952
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "12810": {
      "fn": "Governance._createTaskType",
      "offset": [
        14906,
        14952
      ],
      "op": "MUL",
      "path": "2"
    },
    "12811": {
      "fn": "Governance._createTaskType",
      "offset": [
        14906,
        14952
      ],
      "op": "NOT",
      "path": "2"
    },
    "12812": {
      "fn": "Governance._createTaskType",
      "offset": [
        14906,
        14952
      ],
      "op": "AND",
      "path": "2"
    },
    "12813": {
      "fn": "Governance._createTaskType",
      "offset": [
        14906,
        14952
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12814": {
      "fn": "Governance._createTaskType",
      "offset": [
        14906,
        14952
      ],
      "op": "DUP4",
      "path": "2"
    },
    "12815": {
      "fn": "Governance._createTaskType",
      "offset": [
        14906,
        14952
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "12817": {
      "fn": "Governance._createTaskType",
      "offset": [
        14906,
        14952
      ],
      "op": "AND",
      "path": "2"
    },
    "12818": {
      "fn": "Governance._createTaskType",
      "offset": [
        14906,
        14952
      ],
      "op": "MUL",
      "path": "2"
    },
    "12819": {
      "fn": "Governance._createTaskType",
      "offset": [
        14906,
        14952
      ],
      "op": "OR",
      "path": "2"
    },
    "12820": {
      "fn": "Governance._createTaskType",
      "offset": [
        14906,
        14952
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12821": {
      "fn": "Governance._createTaskType",
      "offset": [
        14906,
        14952
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "12822": {
      "fn": "Governance._createTaskType",
      "offset": [
        14906,
        14952
      ],
      "op": "POP",
      "path": "2"
    },
    "12823": {
      "fn": "Governance._createTaskType",
      "offset": [
        14990,
        15000
      ],
      "op": "DUP6",
      "path": "2",
      "statement": 113
    },
    "12824": {
      "fn": "Governance._createTaskType",
      "offset": [
        14966,
        14977
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12825": {
      "fn": "Governance._createTaskType",
      "offset": [
        14966,
        14987
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "12827": {
      "fn": "Governance._createTaskType",
      "offset": [
        14966,
        14987
      ],
      "op": "ADD",
      "path": "2"
    },
    "12828": {
      "fn": "Governance._createTaskType",
      "offset": [
        14966,
        14987
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "12830": {
      "fn": "Governance._createTaskType",
      "offset": [
        14966,
        15000
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "12833": {
      "fn": "Governance._createTaskType",
      "offset": [
        14966,
        15000
      ],
      "op": "EXP",
      "path": "2"
    },
    "12834": {
      "fn": "Governance._createTaskType",
      "offset": [
        14966,
        15000
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12835": {
      "fn": "Governance._createTaskType",
      "offset": [
        14966,
        15000
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "12836": {
      "fn": "Governance._createTaskType",
      "offset": [
        14966,
        15000
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12837": {
      "fn": "Governance._createTaskType",
      "offset": [
        14966,
        15000
      ],
      "op": "PUSH3",
      "path": "2",
      "value": "0xFFFFFF"
    },
    "12841": {
      "fn": "Governance._createTaskType",
      "offset": [
        14966,
        15000
      ],
      "op": "MUL",
      "path": "2"
    },
    "12842": {
      "fn": "Governance._createTaskType",
      "offset": [
        14966,
        15000
      ],
      "op": "NOT",
      "path": "2"
    },
    "12843": {
      "fn": "Governance._createTaskType",
      "offset": [
        14966,
        15000
      ],
      "op": "AND",
      "path": "2"
    },
    "12844": {
      "fn": "Governance._createTaskType",
      "offset": [
        14966,
        15000
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12845": {
      "fn": "Governance._createTaskType",
      "offset": [
        14966,
        15000
      ],
      "op": "DUP4",
      "path": "2"
    },
    "12846": {
      "fn": "Governance._createTaskType",
      "offset": [
        14966,
        15000
      ],
      "op": "PUSH3",
      "path": "2",
      "value": "0xFFFFFF"
    },
    "12850": {
      "fn": "Governance._createTaskType",
      "offset": [
        14966,
        15000
      ],
      "op": "AND",
      "path": "2"
    },
    "12851": {
      "fn": "Governance._createTaskType",
      "offset": [
        14966,
        15000
      ],
      "op": "MUL",
      "path": "2"
    },
    "12852": {
      "fn": "Governance._createTaskType",
      "offset": [
        14966,
        15000
      ],
      "op": "OR",
      "path": "2"
    },
    "12853": {
      "fn": "Governance._createTaskType",
      "offset": [
        14966,
        15000
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12854": {
      "fn": "Governance._createTaskType",
      "offset": [
        14966,
        15000
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "12855": {
      "fn": "Governance._createTaskType",
      "offset": [
        14966,
        15000
      ],
      "op": "POP",
      "path": "2"
    },
    "12856": {
      "fn": "Governance._createTaskType",
      "offset": [
        15041,
        15054
      ],
      "op": "DUP5",
      "path": "2",
      "statement": 114
    },
    "12857": {
      "fn": "Governance._createTaskType",
      "offset": [
        15014,
        15025
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12858": {
      "fn": "Governance._createTaskType",
      "offset": [
        15014,
        15038
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "12860": {
      "fn": "Governance._createTaskType",
      "offset": [
        15014,
        15038
      ],
      "op": "ADD",
      "path": "2"
    },
    "12861": {
      "fn": "Governance._createTaskType",
      "offset": [
        15014,
        15038
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA"
    },
    "12863": {
      "fn": "Governance._createTaskType",
      "offset": [
        15014,
        15054
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "12866": {
      "fn": "Governance._createTaskType",
      "offset": [
        15014,
        15054
      ],
      "op": "EXP",
      "path": "2"
    },
    "12867": {
      "fn": "Governance._createTaskType",
      "offset": [
        15014,
        15054
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12868": {
      "fn": "Governance._createTaskType",
      "offset": [
        15014,
        15054
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "12869": {
      "fn": "Governance._createTaskType",
      "offset": [
        15014,
        15054
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12870": {
      "fn": "Governance._createTaskType",
      "offset": [
        15014,
        15054
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "12876": {
      "fn": "Governance._createTaskType",
      "offset": [
        15014,
        15054
      ],
      "op": "MUL",
      "path": "2"
    },
    "12877": {
      "fn": "Governance._createTaskType",
      "offset": [
        15014,
        15054
      ],
      "op": "NOT",
      "path": "2"
    },
    "12878": {
      "fn": "Governance._createTaskType",
      "offset": [
        15014,
        15054
      ],
      "op": "AND",
      "path": "2"
    },
    "12879": {
      "fn": "Governance._createTaskType",
      "offset": [
        15014,
        15054
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12880": {
      "fn": "Governance._createTaskType",
      "offset": [
        15014,
        15054
      ],
      "op": "DUP4",
      "path": "2"
    },
    "12881": {
      "fn": "Governance._createTaskType",
      "offset": [
        15014,
        15054
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "12887": {
      "fn": "Governance._createTaskType",
      "offset": [
        15014,
        15054
      ],
      "op": "AND",
      "path": "2"
    },
    "12888": {
      "fn": "Governance._createTaskType",
      "offset": [
        15014,
        15054
      ],
      "op": "MUL",
      "path": "2"
    },
    "12889": {
      "fn": "Governance._createTaskType",
      "offset": [
        15014,
        15054
      ],
      "op": "OR",
      "path": "2"
    },
    "12890": {
      "fn": "Governance._createTaskType",
      "offset": [
        15014,
        15054
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12891": {
      "fn": "Governance._createTaskType",
      "offset": [
        15014,
        15054
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "12892": {
      "fn": "Governance._createTaskType",
      "offset": [
        15014,
        15054
      ],
      "op": "POP",
      "path": "2"
    },
    "12893": {
      "fn": "Governance._createTaskType",
      "offset": [
        15095,
        15108
      ],
      "op": "DUP4",
      "path": "2",
      "statement": 115
    },
    "12894": {
      "fn": "Governance._createTaskType",
      "offset": [
        15068,
        15079
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12895": {
      "fn": "Governance._createTaskType",
      "offset": [
        15068,
        15092
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "12897": {
      "fn": "Governance._createTaskType",
      "offset": [
        15068,
        15092
      ],
      "op": "ADD",
      "path": "2"
    },
    "12898": {
      "fn": "Governance._createTaskType",
      "offset": [
        15068,
        15092
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xF"
    },
    "12900": {
      "fn": "Governance._createTaskType",
      "offset": [
        15068,
        15108
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "12903": {
      "fn": "Governance._createTaskType",
      "offset": [
        15068,
        15108
      ],
      "op": "EXP",
      "path": "2"
    },
    "12904": {
      "fn": "Governance._createTaskType",
      "offset": [
        15068,
        15108
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12905": {
      "fn": "Governance._createTaskType",
      "offset": [
        15068,
        15108
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "12906": {
      "fn": "Governance._createTaskType",
      "offset": [
        15068,
        15108
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12907": {
      "fn": "Governance._createTaskType",
      "offset": [
        15068,
        15108
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "12913": {
      "fn": "Governance._createTaskType",
      "offset": [
        15068,
        15108
      ],
      "op": "MUL",
      "path": "2"
    },
    "12914": {
      "fn": "Governance._createTaskType",
      "offset": [
        15068,
        15108
      ],
      "op": "NOT",
      "path": "2"
    },
    "12915": {
      "fn": "Governance._createTaskType",
      "offset": [
        15068,
        15108
      ],
      "op": "AND",
      "path": "2"
    },
    "12916": {
      "fn": "Governance._createTaskType",
      "offset": [
        15068,
        15108
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12917": {
      "fn": "Governance._createTaskType",
      "offset": [
        15068,
        15108
      ],
      "op": "DUP4",
      "path": "2"
    },
    "12918": {
      "fn": "Governance._createTaskType",
      "offset": [
        15068,
        15108
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "12924": {
      "fn": "Governance._createTaskType",
      "offset": [
        15068,
        15108
      ],
      "op": "AND",
      "path": "2"
    },
    "12925": {
      "fn": "Governance._createTaskType",
      "offset": [
        15068,
        15108
      ],
      "op": "MUL",
      "path": "2"
    },
    "12926": {
      "fn": "Governance._createTaskType",
      "offset": [
        15068,
        15108
      ],
      "op": "OR",
      "path": "2"
    },
    "12927": {
      "fn": "Governance._createTaskType",
      "offset": [
        15068,
        15108
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12928": {
      "fn": "Governance._createTaskType",
      "offset": [
        15068,
        15108
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "12929": {
      "fn": "Governance._createTaskType",
      "offset": [
        15068,
        15108
      ],
      "op": "POP",
      "path": "2"
    },
    "12930": {
      "fn": "Governance._createTaskType",
      "offset": [
        15151,
        15166
      ],
      "op": "DUP3",
      "path": "2",
      "statement": 116
    },
    "12931": {
      "fn": "Governance._createTaskType",
      "offset": [
        15122,
        15133
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12932": {
      "fn": "Governance._createTaskType",
      "offset": [
        15122,
        15148
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "12934": {
      "fn": "Governance._createTaskType",
      "offset": [
        15122,
        15148
      ],
      "op": "ADD",
      "path": "2"
    },
    "12935": {
      "fn": "Governance._createTaskType",
      "offset": [
        15122,
        15148
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x14"
    },
    "12937": {
      "fn": "Governance._createTaskType",
      "offset": [
        15122,
        15166
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "12940": {
      "fn": "Governance._createTaskType",
      "offset": [
        15122,
        15166
      ],
      "op": "EXP",
      "path": "2"
    },
    "12941": {
      "fn": "Governance._createTaskType",
      "offset": [
        15122,
        15166
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12942": {
      "fn": "Governance._createTaskType",
      "offset": [
        15122,
        15166
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "12943": {
      "fn": "Governance._createTaskType",
      "offset": [
        15122,
        15166
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12944": {
      "fn": "Governance._createTaskType",
      "offset": [
        15122,
        15166
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "12947": {
      "fn": "Governance._createTaskType",
      "offset": [
        15122,
        15166
      ],
      "op": "MUL",
      "path": "2"
    },
    "12948": {
      "fn": "Governance._createTaskType",
      "offset": [
        15122,
        15166
      ],
      "op": "NOT",
      "path": "2"
    },
    "12949": {
      "fn": "Governance._createTaskType",
      "offset": [
        15122,
        15166
      ],
      "op": "AND",
      "path": "2"
    },
    "12950": {
      "fn": "Governance._createTaskType",
      "offset": [
        15122,
        15166
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12951": {
      "fn": "Governance._createTaskType",
      "offset": [
        15122,
        15166
      ],
      "op": "DUP4",
      "path": "2"
    },
    "12952": {
      "fn": "Governance._createTaskType",
      "offset": [
        15122,
        15166
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "12955": {
      "fn": "Governance._createTaskType",
      "offset": [
        15122,
        15166
      ],
      "op": "AND",
      "path": "2"
    },
    "12956": {
      "fn": "Governance._createTaskType",
      "offset": [
        15122,
        15166
      ],
      "op": "MUL",
      "path": "2"
    },
    "12957": {
      "fn": "Governance._createTaskType",
      "offset": [
        15122,
        15166
      ],
      "op": "OR",
      "path": "2"
    },
    "12958": {
      "fn": "Governance._createTaskType",
      "offset": [
        15122,
        15166
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12959": {
      "fn": "Governance._createTaskType",
      "offset": [
        15122,
        15166
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "12960": {
      "fn": "Governance._createTaskType",
      "offset": [
        15122,
        15166
      ],
      "op": "POP",
      "path": "2"
    },
    "12961": {
      "fn": "Governance._createTaskType",
      "offset": [
        15212,
        15331
      ],
      "op": "PUSH32",
      "path": "2",
      "statement": 117,
      "value": "0x2810025950962E3CD71FD98C2DC111FFBDB2A129B36771DF8D36A7DE2FE3E4E0"
    },
    "12994": {
      "fn": "Governance._createTaskType",
      "offset": [
        15231,
        15240
      ],
      "op": "DUP11",
      "path": "2"
    },
    "12995": {
      "fn": "Governance._createTaskType",
      "offset": [
        15231,
        15240
      ],
      "op": "DUP11",
      "path": "2"
    },
    "12996": {
      "fn": "Governance._createTaskType",
      "offset": [
        15242,
        15253
      ],
      "op": "DUP11",
      "path": "2"
    },
    "12997": {
      "fn": "Governance._createTaskType",
      "offset": [
        15255,
        15271
      ],
      "op": "DUP11",
      "path": "2"
    },
    "12998": {
      "fn": "Governance._createTaskType",
      "offset": [
        15273,
        15283
      ],
      "op": "DUP11",
      "path": "2"
    },
    "12999": {
      "fn": "Governance._createTaskType",
      "offset": [
        15285,
        15298
      ],
      "op": "DUP11",
      "path": "2"
    },
    "13000": {
      "fn": "Governance._createTaskType",
      "offset": [
        15300,
        15313
      ],
      "op": "DUP11",
      "path": "2"
    },
    "13001": {
      "fn": "Governance._createTaskType",
      "offset": [
        15315,
        15330
      ],
      "op": "DUP11",
      "path": "2"
    },
    "13002": {
      "fn": "Governance._createTaskType",
      "offset": [
        15212,
        15331
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "13004": {
      "fn": "Governance._createTaskType",
      "offset": [
        15212,
        15331
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "13005": {
      "fn": "Governance._createTaskType",
      "offset": [
        15212,
        15331
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x32DD"
    },
    "13008": {
      "fn": "Governance._createTaskType",
      "offset": [
        15212,
        15331
      ],
      "op": "SWAP9",
      "path": "2"
    },
    "13009": {
      "fn": "Governance._createTaskType",
      "offset": [
        15212,
        15331
      ],
      "op": "SWAP8",
      "path": "2"
    },
    "13010": {
      "fn": "Governance._createTaskType",
      "offset": [
        15212,
        15331
      ],
      "op": "SWAP7",
      "path": "2"
    },
    "13011": {
      "fn": "Governance._createTaskType",
      "offset": [
        15212,
        15331
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "13012": {
      "fn": "Governance._createTaskType",
      "offset": [
        15212,
        15331
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "13013": {
      "fn": "Governance._createTaskType",
      "offset": [
        15212,
        15331
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "13014": {
      "fn": "Governance._createTaskType",
      "offset": [
        15212,
        15331
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "13015": {
      "fn": "Governance._createTaskType",
      "offset": [
        15212,
        15331
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "13016": {
      "fn": "Governance._createTaskType",
      "offset": [
        15212,
        15331
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "13017": {
      "fn": "Governance._createTaskType",
      "offset": [
        15212,
        15331
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x43EA"
    },
    "13020": {
      "fn": "Governance._createTaskType",
      "jump": "i",
      "offset": [
        15212,
        15331
      ],
      "op": "JUMP",
      "path": "2"
    },
    "13021": {
      "fn": "Governance._createTaskType",
      "offset": [
        15212,
        15331
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "13022": {
      "fn": "Governance._createTaskType",
      "offset": [
        15212,
        15331
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "13024": {
      "fn": "Governance._createTaskType",
      "offset": [
        15212,
        15331
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "13025": {
      "fn": "Governance._createTaskType",
      "offset": [
        15212,
        15331
      ],
      "op": "DUP1",
      "path": "2"
    },
    "13026": {
      "fn": "Governance._createTaskType",
      "offset": [
        15212,
        15331
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "13027": {
      "fn": "Governance._createTaskType",
      "offset": [
        15212,
        15331
      ],
      "op": "SUB",
      "path": "2"
    },
    "13028": {
      "fn": "Governance._createTaskType",
      "offset": [
        15212,
        15331
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "13029": {
      "fn": "Governance._createTaskType",
      "offset": [
        15212,
        15331
      ],
      "op": "LOG1",
      "path": "2"
    },
    "13030": {
      "fn": "Governance._createTaskType",
      "offset": [
        14612,
        15338
      ],
      "op": "POP",
      "path": "2"
    },
    "13031": {
      "fn": "Governance._createTaskType",
      "offset": [
        14612,
        15338
      ],
      "op": "POP",
      "path": "2"
    },
    "13032": {
      "fn": "Governance._createTaskType",
      "offset": [
        14407,
        15338
      ],
      "op": "POP",
      "path": "2"
    },
    "13033": {
      "fn": "Governance._createTaskType",
      "offset": [
        14407,
        15338
      ],
      "op": "POP",
      "path": "2"
    },
    "13034": {
      "fn": "Governance._createTaskType",
      "offset": [
        14407,
        15338
      ],
      "op": "POP",
      "path": "2"
    },
    "13035": {
      "fn": "Governance._createTaskType",
      "offset": [
        14407,
        15338
      ],
      "op": "POP",
      "path": "2"
    },
    "13036": {
      "fn": "Governance._createTaskType",
      "offset": [
        14407,
        15338
      ],
      "op": "POP",
      "path": "2"
    },
    "13037": {
      "fn": "Governance._createTaskType",
      "offset": [
        14407,
        15338
      ],
      "op": "POP",
      "path": "2"
    },
    "13038": {
      "fn": "Governance._createTaskType",
      "offset": [
        14407,
        15338
      ],
      "op": "POP",
      "path": "2"
    },
    "13039": {
      "fn": "Governance._createTaskType",
      "offset": [
        14407,
        15338
      ],
      "op": "POP",
      "path": "2"
    },
    "13040": {
      "fn": "Governance._createTaskType",
      "jump": "o",
      "offset": [
        14407,
        15338
      ],
      "op": "JUMP",
      "path": "2"
    },
    "13041": {
      "fn": "Ownable._setOwner",
      "offset": [
        2101,
        2274
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "13042": {
      "fn": "Ownable._setOwner",
      "offset": [
        2176,
        2182
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "13044": {
      "fn": "Ownable._setOwner",
      "offset": [
        2176,
        2182
      ],
      "op": "DUP1",
      "path": "11"
    },
    "13045": {
      "fn": "Ownable._setOwner",
      "offset": [
        2176,
        2182
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "13046": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13048": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13050": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13052": {
      "op": "SHL"
    },
    "13053": {
      "op": "SUB"
    },
    "13054": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "DUP4",
      "path": "11",
      "statement": 118
    },
    "13055": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "DUP2",
      "path": "11"
    },
    "13056": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "AND",
      "path": "11"
    },
    "13057": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13059": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13061": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13063": {
      "op": "SHL"
    },
    "13064": {
      "op": "SUB"
    },
    "13065": {
      "op": "NOT"
    },
    "13066": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "DUP4",
      "path": "11"
    },
    "13067": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "AND",
      "path": "11"
    },
    "13068": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "DUP2",
      "path": "11"
    },
    "13069": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "OR",
      "path": "11"
    },
    "13070": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "13071": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "SWAP4",
      "path": "11"
    },
    "13072": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "SSTORE",
      "path": "11"
    },
    "13073": {
      "fn": "Ownable._setOwner",
      "offset": [
        2226,
        2266
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 119,
      "value": "0x40"
    },
    "13075": {
      "fn": "Ownable._setOwner",
      "offset": [
        2226,
        2266
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "13076": {
      "fn": "Ownable._setOwner",
      "offset": [
        2176,
        2182
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "13077": {
      "fn": "Ownable._setOwner",
      "offset": [
        2176,
        2182
      ],
      "op": "AND",
      "path": "11"
    },
    "13078": {
      "fn": "Ownable._setOwner",
      "offset": [
        2176,
        2182
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "13079": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "13080": {
      "fn": "Ownable._setOwner",
      "offset": [
        2176,
        2182
      ],
      "op": "DUP3",
      "path": "11"
    },
    "13081": {
      "fn": "Ownable._setOwner",
      "offset": [
        2176,
        2182
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "13082": {
      "fn": "Ownable._setOwner",
      "offset": [
        2226,
        2266
      ],
      "op": "PUSH32",
      "path": "11",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "13115": {
      "fn": "Ownable._setOwner",
      "offset": [
        2226,
        2266
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "13116": {
      "fn": "Ownable._setOwner",
      "offset": [
        2157,
        2173
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "13118": {
      "fn": "Ownable._setOwner",
      "offset": [
        2157,
        2173
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "13119": {
      "fn": "Ownable._setOwner",
      "offset": [
        2226,
        2266
      ],
      "op": "LOG3",
      "path": "11"
    },
    "13120": {
      "fn": "Ownable._setOwner",
      "offset": [
        2146,
        2274
      ],
      "op": "POP",
      "path": "11"
    },
    "13121": {
      "fn": "Ownable._setOwner",
      "offset": [
        2101,
        2274
      ],
      "op": "POP",
      "path": "11"
    },
    "13122": {
      "fn": "Ownable._setOwner",
      "jump": "o",
      "offset": [
        2101,
        2274
      ],
      "op": "JUMP",
      "path": "11"
    },
    "13123": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3287,
        3611
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "13124": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3351,
        3364
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "13126": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3380,
        3392
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 120,
      "value": "0x335E"
    },
    "13129": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3386,
        3391
      ],
      "op": "DUP3",
      "path": "1"
    },
    "13130": {
      "fn": "DoubleEndedQueue.empty",
      "offset": [
        5880,
        5892
      ],
      "op": "SLOAD",
      "path": "1",
      "statement": 121
    },
    "13131": {
      "fn": "DoubleEndedQueue.empty",
      "offset": [
        5880,
        5892
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xF"
    },
    "13133": {
      "fn": "DoubleEndedQueue.empty",
      "offset": [
        5880,
        5892
      ],
      "op": "DUP2",
      "path": "1"
    },
    "13134": {
      "fn": "DoubleEndedQueue.empty",
      "offset": [
        5880,
        5892
      ],
      "op": "DUP2",
      "path": "1"
    },
    "13135": {
      "fn": "DoubleEndedQueue.empty",
      "offset": [
        5880,
        5892
      ],
      "op": "SIGNEXTEND",
      "path": "1"
    },
    "13136": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13138": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "13140": {
      "op": "SHL"
    },
    "13141": {
      "fn": "DoubleEndedQueue.empty",
      "offset": [
        5866,
        5876
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "13142": {
      "fn": "DoubleEndedQueue.empty",
      "offset": [
        5866,
        5876
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "13143": {
      "fn": "DoubleEndedQueue.empty",
      "offset": [
        5866,
        5876
      ],
      "op": "DIV",
      "path": "1"
    },
    "13144": {
      "fn": "DoubleEndedQueue.empty",
      "offset": [
        5866,
        5876
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "13145": {
      "fn": "DoubleEndedQueue.empty",
      "offset": [
        5866,
        5876
      ],
      "op": "SIGNEXTEND",
      "path": "1"
    },
    "13146": {
      "fn": "DoubleEndedQueue.empty",
      "offset": [
        5866,
        5892
      ],
      "op": "SGT",
      "path": "1"
    },
    "13147": {
      "fn": "DoubleEndedQueue.empty",
      "offset": [
        5866,
        5892
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "13148": {
      "fn": "DoubleEndedQueue.empty",
      "offset": [
        5866,
        5892
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "13149": {
      "fn": "DoubleEndedQueue.empty",
      "offset": [
        5777,
        5899
      ],
      "op": "JUMP",
      "path": "1"
    },
    "13150": {
      "branch": 182,
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3380,
        3392
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "13151": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3376,
        3408
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "13152": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3376,
        3408
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x337C"
    },
    "13155": {
      "branch": 182,
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3376,
        3408
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "13156": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3401,
        3408
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "13158": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3401,
        3408
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "13159": {
      "op": "PUSH4",
      "value": "0x1ED95095"
    },
    "13164": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "13166": {
      "op": "SHL"
    },
    "13167": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3401,
        3408
      ],
      "op": "DUP2",
      "path": "1"
    },
    "13168": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3401,
        3408
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "13169": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3401,
        3408
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "13171": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3401,
        3408
      ],
      "op": "ADD",
      "path": "1"
    },
    "13172": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3401,
        3408
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "13174": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3401,
        3408
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "13175": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3401,
        3408
      ],
      "op": "DUP1",
      "path": "1"
    },
    "13176": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3401,
        3408
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "13177": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3401,
        3408
      ],
      "op": "SUB",
      "path": "1"
    },
    "13178": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3401,
        3408
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "13179": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3401,
        3408
      ],
      "op": "REVERT",
      "path": "1"
    },
    "13180": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3376,
        3408
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "13181": {
      "op": "POP"
    },
    "13182": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3438,
        3450
      ],
      "op": "DUP1",
      "path": "1"
    },
    "13183": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3438,
        3450
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "13184": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3438,
        3450
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xF"
    },
    "13186": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3438,
        3450
      ],
      "op": "SIGNEXTEND",
      "path": "1"
    },
    "13187": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3418,
        3435
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "13189": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3468,
        3491
      ],
      "op": "DUP2",
      "path": "1",
      "statement": 122
    },
    "13190": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3468,
        3491
      ],
      "op": "DUP2",
      "path": "1"
    },
    "13191": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3468,
        3491
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "13192": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3438,
        3450
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "13194": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3468,
        3479
      ],
      "op": "DUP1",
      "path": "1"
    },
    "13195": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3468,
        3479
      ],
      "op": "DUP5",
      "path": "1"
    },
    "13196": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3468,
        3479
      ],
      "op": "ADD",
      "path": "1"
    },
    "13197": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3468,
        3491
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "13199": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3468,
        3491
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "13200": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3468,
        3491
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "13202": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3468,
        3491
      ],
      "op": "DUP3",
      "path": "1"
    },
    "13203": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3468,
        3491
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "13204": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3468,
        3491
      ],
      "op": "DUP1",
      "path": "1"
    },
    "13205": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3468,
        3491
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "13206": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3501,
        3531
      ],
      "op": "SWAP3",
      "path": "1",
      "statement": 123
    },
    "13207": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3501,
        3531
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "13208": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3501,
        3531
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "13209": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3565,
        3594
      ],
      "op": "DUP4",
      "path": "1",
      "statement": 124
    },
    "13210": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3565,
        3594
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "13211": {
      "op": "PUSH16",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "13228": {
      "op": "NOT"
    },
    "13229": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3565,
        3594
      ],
      "op": "AND",
      "path": "1"
    },
    "13230": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3580,
        3594
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "13231": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3580,
        3594
      ],
      "op": "ADD",
      "path": "1"
    },
    "13232": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13234": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13236": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "13238": {
      "op": "SHL"
    },
    "13239": {
      "op": "SUB"
    },
    "13240": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3565,
        3594
      ],
      "op": "AND",
      "path": "1"
    },
    "13241": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3565,
        3594
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "13242": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3565,
        3594
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "13243": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3565,
        3594
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "13244": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3565,
        3594
      ],
      "op": "OR",
      "path": "1"
    },
    "13245": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3565,
        3594
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "13246": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3565,
        3594
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "13247": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3565,
        3594
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "13248": {
      "fn": "DoubleEndedQueue.popFront",
      "offset": [
        3468,
        3491
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "13249": {
      "fn": "DoubleEndedQueue.popFront",
      "jump": "o",
      "offset": [
        3287,
        3611
      ],
      "op": "JUMP",
      "path": "1"
    },
    "13250": {
      "fn": "SafeCast.toInt256",
      "offset": [
        35228,
        35525
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "13251": {
      "fn": "SafeCast.toInt256",
      "offset": [
        35284,
        35290
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "13253": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13255": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13257": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "13259": {
      "op": "SHL"
    },
    "13260": {
      "op": "SUB"
    },
    "13261": {
      "fn": "SafeCast.toInt256",
      "offset": [
        35409,
        35414
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 125
    },
    "13262": {
      "fn": "SafeCast.toInt256",
      "offset": [
        35409,
        35443
      ],
      "op": "GT",
      "path": "0"
    },
    "13263": {
      "branch": 184,
      "fn": "SafeCast.toInt256",
      "offset": [
        35409,
        35443
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "13264": {
      "fn": "SafeCast.toInt256",
      "offset": [
        35401,
        35488
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x342C"
    },
    "13267": {
      "branch": 184,
      "fn": "SafeCast.toInt256",
      "offset": [
        35401,
        35488
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "13268": {
      "fn": "SafeCast.toInt256",
      "offset": [
        35401,
        35488
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "13270": {
      "fn": "SafeCast.toInt256",
      "offset": [
        35401,
        35488
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "13271": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "13275": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "13277": {
      "op": "SHL"
    },
    "13278": {
      "fn": "SafeCast.toInt256",
      "offset": [
        35401,
        35488
      ],
      "op": "DUP2",
      "path": "0"
    },
    "13279": {
      "fn": "SafeCast.toInt256",
      "offset": [
        35401,
        35488
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "13280": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13282": {
      "fn": "SafeCast.toInt256",
      "offset": [
        35401,
        35488
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "13284": {
      "fn": "SafeCast.toInt256",
      "offset": [
        35401,
        35488
      ],
      "op": "DUP3",
      "path": "0"
    },
    "13285": {
      "fn": "SafeCast.toInt256",
      "offset": [
        35401,
        35488
      ],
      "op": "ADD",
      "path": "0"
    },
    "13286": {
      "op": "MSTORE"
    },
    "13287": {
      "op": "PUSH1",
      "value": "0x28"
    },
    "13289": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "13291": {
      "op": "DUP3"
    },
    "13292": {
      "op": "ADD"
    },
    "13293": {
      "op": "MSTORE"
    },
    "13294": {
      "op": "PUSH32",
      "value": "0x53616665436173743A2076616C756520646F65736E27742066697420696E2061"
    },
    "13327": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "13329": {
      "op": "DUP3"
    },
    "13330": {
      "op": "ADD"
    },
    "13331": {
      "op": "MSTORE"
    },
    "13332": {
      "op": "PUSH8",
      "value": "0x371034B73A191A9B"
    },
    "13341": {
      "op": "PUSH1",
      "value": "0xC1"
    },
    "13343": {
      "op": "SHL"
    },
    "13344": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "13346": {
      "op": "DUP3"
    },
    "13347": {
      "op": "ADD"
    },
    "13348": {
      "op": "MSTORE"
    },
    "13349": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "13351": {
      "op": "ADD"
    },
    "13352": {
      "fn": "SafeCast.toInt256",
      "offset": [
        35401,
        35488
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF9A"
    },
    "13355": {
      "op": "JUMP"
    },
    "13356": {
      "fn": "SafeCast.toInt256",
      "offset": [
        35401,
        35488
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "13357": {
      "op": "POP"
    },
    "13358": {
      "fn": "SafeCast.toInt256",
      "offset": [
        35512,
        35517
      ],
      "op": "SWAP1",
      "path": "0",
      "statement": 126
    },
    "13359": {
      "fn": "SafeCast.toInt256",
      "jump": "o",
      "offset": [
        35228,
        35525
      ],
      "op": "JUMP",
      "path": "0"
    },
    "13360": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26286,
        26502
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "13361": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26341,
        26347
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "13363": {
      "op": "PUSH16",
      "value": "0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "13380": {
      "op": "NOT"
    },
    "13381": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26367,
        26392
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 127
    },
    "13382": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26367,
        26392
      ],
      "op": "SLT",
      "path": "0"
    },
    "13383": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26367,
        26392
      ],
      "op": "DUP1",
      "path": "0"
    },
    "13384": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26367,
        26392
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "13385": {
      "branch": 185,
      "fn": "SafeCast.toInt128",
      "offset": [
        26367,
        26392
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "13386": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26367,
        26421
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3463"
    },
    "13389": {
      "branch": 185,
      "fn": "SafeCast.toInt128",
      "offset": [
        26367,
        26421
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "13390": {
      "op": "POP"
    },
    "13391": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26405,
        26421
      ],
      "op": "PUSH16",
      "path": "0",
      "value": "0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "13408": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26396,
        26421
      ],
      "op": "DUP3",
      "path": "0"
    },
    "13409": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26396,
        26421
      ],
      "op": "SGT",
      "path": "0"
    },
    "13410": {
      "branch": 186,
      "fn": "SafeCast.toInt128",
      "offset": [
        26396,
        26421
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "13411": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26367,
        26421
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "13412": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26359,
        26465
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x342C"
    },
    "13415": {
      "branch": 186,
      "fn": "SafeCast.toInt128",
      "offset": [
        26359,
        26465
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "13416": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26359,
        26465
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "13418": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26359,
        26465
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "13419": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "13423": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "13425": {
      "op": "SHL"
    },
    "13426": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26359,
        26465
      ],
      "op": "DUP2",
      "path": "0"
    },
    "13427": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26359,
        26465
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "13428": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13430": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26359,
        26465
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "13432": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26359,
        26465
      ],
      "op": "DUP3",
      "path": "0"
    },
    "13433": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26359,
        26465
      ],
      "op": "ADD",
      "path": "0"
    },
    "13434": {
      "op": "MSTORE"
    },
    "13435": {
      "op": "PUSH1",
      "value": "0x27"
    },
    "13437": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "13439": {
      "op": "DUP3"
    },
    "13440": {
      "op": "ADD"
    },
    "13441": {
      "op": "MSTORE"
    },
    "13442": {
      "op": "PUSH32",
      "value": "0x53616665436173743A2076616C756520646F65736E27742066697420696E2031"
    },
    "13475": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "13477": {
      "op": "DUP3"
    },
    "13478": {
      "op": "ADD"
    },
    "13479": {
      "op": "MSTORE"
    },
    "13480": {
      "op": "PUSH7",
      "value": "0x32382062697473"
    },
    "13488": {
      "op": "PUSH1",
      "value": "0xC8"
    },
    "13490": {
      "op": "SHL"
    },
    "13491": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "13493": {
      "op": "DUP3"
    },
    "13494": {
      "op": "ADD"
    },
    "13495": {
      "op": "MSTORE"
    },
    "13496": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "13498": {
      "op": "ADD"
    },
    "13499": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26359,
        26465
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF9A"
    },
    "13502": {
      "op": "JUMP"
    },
    "13503": {
      "op": "JUMPDEST"
    },
    "13504": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13506": {
      "op": "DUP1"
    },
    "13507": {
      "op": "MLOAD"
    },
    "13508": {
      "op": "PUSH2",
      "value": "0x140"
    },
    "13511": {
      "op": "DUP2"
    },
    "13512": {
      "op": "ADD"
    },
    "13513": {
      "op": "DUP3"
    },
    "13514": {
      "op": "MSTORE"
    },
    "13515": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "13517": {
      "op": "DUP1"
    },
    "13518": {
      "op": "DUP3"
    },
    "13519": {
      "op": "MSTORE"
    },
    "13520": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13522": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13524": {
      "op": "DUP4"
    },
    "13525": {
      "op": "ADD"
    },
    "13526": {
      "op": "DUP2"
    },
    "13527": {
      "op": "SWAP1"
    },
    "13528": {
      "op": "MSTORE"
    },
    "13529": {
      "op": "SWAP3"
    },
    "13530": {
      "op": "DUP3"
    },
    "13531": {
      "op": "ADD"
    },
    "13532": {
      "op": "DUP4"
    },
    "13533": {
      "op": "SWAP1"
    },
    "13534": {
      "op": "MSTORE"
    },
    "13535": {
      "op": "DUP2"
    },
    "13536": {
      "op": "ADD"
    },
    "13537": {
      "op": "DUP3"
    },
    "13538": {
      "op": "SWAP1"
    },
    "13539": {
      "op": "MSTORE"
    },
    "13540": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "13542": {
      "op": "DUP2"
    },
    "13543": {
      "op": "ADD"
    },
    "13544": {
      "op": "DUP3"
    },
    "13545": {
      "op": "SWAP1"
    },
    "13546": {
      "op": "MSTORE"
    },
    "13547": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13549": {
      "op": "DUP2"
    },
    "13550": {
      "op": "ADD"
    },
    "13551": {
      "op": "DUP3"
    },
    "13552": {
      "op": "SWAP1"
    },
    "13553": {
      "op": "MSTORE"
    },
    "13554": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "13556": {
      "op": "DUP2"
    },
    "13557": {
      "op": "ADD"
    },
    "13558": {
      "op": "DUP3"
    },
    "13559": {
      "op": "SWAP1"
    },
    "13560": {
      "op": "MSTORE"
    },
    "13561": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "13563": {
      "op": "DUP2"
    },
    "13564": {
      "op": "ADD"
    },
    "13565": {
      "op": "DUP3"
    },
    "13566": {
      "op": "SWAP1"
    },
    "13567": {
      "op": "MSTORE"
    },
    "13568": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "13571": {
      "op": "DUP2"
    },
    "13572": {
      "op": "ADD"
    },
    "13573": {
      "op": "DUP3"
    },
    "13574": {
      "op": "SWAP1"
    },
    "13575": {
      "op": "MSTORE"
    },
    "13576": {
      "op": "PUSH2",
      "value": "0x120"
    },
    "13579": {
      "op": "DUP2"
    },
    "13580": {
      "op": "ADD"
    },
    "13581": {
      "op": "SWAP2"
    },
    "13582": {
      "op": "SWAP1"
    },
    "13583": {
      "op": "SWAP2"
    },
    "13584": {
      "op": "MSTORE"
    },
    "13585": {
      "op": "SWAP1"
    },
    "13586": {
      "jump": "o",
      "op": "JUMP"
    },
    "13587": {
      "op": "JUMPDEST"
    },
    "13588": {
      "op": "POP"
    },
    "13589": {
      "op": "DUP1"
    },
    "13590": {
      "op": "SLOAD"
    },
    "13591": {
      "op": "PUSH2",
      "value": "0x351F"
    },
    "13594": {
      "op": "SWAP1"
    },
    "13595": {
      "op": "PUSH2",
      "value": "0x3DA4"
    },
    "13598": {
      "jump": "i",
      "op": "JUMP"
    },
    "13599": {
      "op": "JUMPDEST"
    },
    "13600": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13602": {
      "op": "DUP3"
    },
    "13603": {
      "op": "SSTORE"
    },
    "13604": {
      "op": "DUP1"
    },
    "13605": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "13607": {
      "op": "LT"
    },
    "13608": {
      "op": "PUSH2",
      "value": "0x352F"
    },
    "13611": {
      "op": "JUMPI"
    },
    "13612": {
      "op": "POP"
    },
    "13613": {
      "op": "POP"
    },
    "13614": {
      "jump": "o",
      "op": "JUMP"
    },
    "13615": {
      "op": "JUMPDEST"
    },
    "13616": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "13618": {
      "op": "ADD"
    },
    "13619": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13621": {
      "op": "SWAP1"
    },
    "13622": {
      "op": "DIV"
    },
    "13623": {
      "op": "SWAP1"
    },
    "13624": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13626": {
      "op": "MSTORE"
    },
    "13627": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13629": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13631": {
      "op": "KECCAK256"
    },
    "13632": {
      "op": "SWAP1"
    },
    "13633": {
      "op": "DUP2"
    },
    "13634": {
      "op": "ADD"
    },
    "13635": {
      "op": "SWAP1"
    },
    "13636": {
      "op": "PUSH2",
      "value": "0x2C67"
    },
    "13639": {
      "op": "SWAP2"
    },
    "13640": {
      "op": "SWAP1"
    },
    "13641": {
      "op": "JUMPDEST"
    },
    "13642": {
      "op": "DUP1"
    },
    "13643": {
      "op": "DUP3"
    },
    "13644": {
      "op": "GT"
    },
    "13645": {
      "op": "ISZERO"
    },
    "13646": {
      "op": "PUSH2",
      "value": "0x342C"
    },
    "13649": {
      "op": "JUMPI"
    },
    "13650": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13652": {
      "op": "DUP2"
    },
    "13653": {
      "op": "SSTORE"
    },
    "13654": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13656": {
      "op": "ADD"
    },
    "13657": {
      "op": "PUSH2",
      "value": "0x3549"
    },
    "13660": {
      "op": "JUMP"
    },
    "13661": {
      "op": "JUMPDEST"
    },
    "13662": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13664": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13666": {
      "op": "DUP3"
    },
    "13667": {
      "op": "DUP5"
    },
    "13668": {
      "op": "SUB"
    },
    "13669": {
      "op": "SLT"
    },
    "13670": {
      "op": "ISZERO"
    },
    "13671": {
      "op": "PUSH2",
      "value": "0x356F"
    },
    "13674": {
      "op": "JUMPI"
    },
    "13675": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13677": {
      "op": "DUP1"
    },
    "13678": {
      "op": "REVERT"
    },
    "13679": {
      "op": "JUMPDEST"
    },
    "13680": {
      "op": "POP"
    },
    "13681": {
      "op": "CALLDATALOAD"
    },
    "13682": {
      "op": "SWAP2"
    },
    "13683": {
      "op": "SWAP1"
    },
    "13684": {
      "op": "POP"
    },
    "13685": {
      "jump": "o",
      "op": "JUMP"
    },
    "13686": {
      "op": "JUMPDEST"
    },
    "13687": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13689": {
      "op": "JUMPDEST"
    },
    "13690": {
      "op": "DUP4"
    },
    "13691": {
      "op": "DUP2"
    },
    "13692": {
      "op": "LT"
    },
    "13693": {
      "op": "ISZERO"
    },
    "13694": {
      "op": "PUSH2",
      "value": "0x3591"
    },
    "13697": {
      "op": "JUMPI"
    },
    "13698": {
      "op": "DUP2"
    },
    "13699": {
      "op": "DUP2"
    },
    "13700": {
      "op": "ADD"
    },
    "13701": {
      "op": "MLOAD"
    },
    "13702": {
      "op": "DUP4"
    },
    "13703": {
      "op": "DUP3"
    },
    "13704": {
      "op": "ADD"
    },
    "13705": {
      "op": "MSTORE"
    },
    "13706": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13708": {
      "op": "ADD"
    },
    "13709": {
      "op": "PUSH2",
      "value": "0x3579"
    },
    "13712": {
      "op": "JUMP"
    },
    "13713": {
      "op": "JUMPDEST"
    },
    "13714": {
      "op": "DUP4"
    },
    "13715": {
      "op": "DUP2"
    },
    "13716": {
      "op": "GT"
    },
    "13717": {
      "op": "ISZERO"
    },
    "13718": {
      "op": "PUSH2",
      "value": "0x14AF"
    },
    "13721": {
      "op": "JUMPI"
    },
    "13722": {
      "op": "POP"
    },
    "13723": {
      "op": "POP"
    },
    "13724": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13726": {
      "op": "SWAP2"
    },
    "13727": {
      "op": "ADD"
    },
    "13728": {
      "op": "MSTORE"
    },
    "13729": {
      "jump": "o",
      "op": "JUMP"
    },
    "13730": {
      "op": "JUMPDEST"
    },
    "13731": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13733": {
      "op": "DUP2"
    },
    "13734": {
      "op": "MLOAD"
    },
    "13735": {
      "op": "DUP1"
    },
    "13736": {
      "op": "DUP5"
    },
    "13737": {
      "op": "MSTORE"
    },
    "13738": {
      "op": "PUSH2",
      "value": "0x35BA"
    },
    "13741": {
      "op": "DUP2"
    },
    "13742": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13744": {
      "op": "DUP7"
    },
    "13745": {
      "op": "ADD"
    },
    "13746": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13748": {
      "op": "DUP7"
    },
    "13749": {
      "op": "ADD"
    },
    "13750": {
      "op": "PUSH2",
      "value": "0x3576"
    },
    "13753": {
      "jump": "i",
      "op": "JUMP"
    },
    "13754": {
      "op": "JUMPDEST"
    },
    "13755": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "13757": {
      "op": "ADD"
    },
    "13758": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "13760": {
      "op": "NOT"
    },
    "13761": {
      "op": "AND"
    },
    "13762": {
      "op": "SWAP3"
    },
    "13763": {
      "op": "SWAP1"
    },
    "13764": {
      "op": "SWAP3"
    },
    "13765": {
      "op": "ADD"
    },
    "13766": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13768": {
      "op": "ADD"
    },
    "13769": {
      "op": "SWAP3"
    },
    "13770": {
      "op": "SWAP2"
    },
    "13771": {
      "op": "POP"
    },
    "13772": {
      "op": "POP"
    },
    "13773": {
      "jump": "o",
      "op": "JUMP"
    },
    "13774": {
      "op": "JUMPDEST"
    },
    "13775": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13777": {
      "op": "DUP2"
    },
    "13778": {
      "op": "MSTORE"
    },
    "13779": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13781": {
      "op": "PUSH2",
      "value": "0x35E1"
    },
    "13784": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13786": {
      "op": "DUP4"
    },
    "13787": {
      "op": "ADD"
    },
    "13788": {
      "op": "DUP9"
    },
    "13789": {
      "op": "PUSH2",
      "value": "0x35A2"
    },
    "13792": {
      "jump": "i",
      "op": "JUMP"
    },
    "13793": {
      "op": "JUMPDEST"
    },
    "13794": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "13797": {
      "op": "SWAP7"
    },
    "13798": {
      "op": "SWAP1"
    },
    "13799": {
      "op": "SWAP7"
    },
    "13800": {
      "op": "AND"
    },
    "13801": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13803": {
      "op": "DUP4"
    },
    "13804": {
      "op": "ADD"
    },
    "13805": {
      "op": "MSTORE"
    },
    "13806": {
      "op": "POP"
    },
    "13807": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "13813": {
      "op": "SWAP4"
    },
    "13814": {
      "op": "DUP5"
    },
    "13815": {
      "op": "AND"
    },
    "13816": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13818": {
      "op": "DUP3"
    },
    "13819": {
      "op": "ADD"
    },
    "13820": {
      "op": "MSTORE"
    },
    "13821": {
      "op": "SWAP2"
    },
    "13822": {
      "op": "DUP4"
    },
    "13823": {
      "op": "AND"
    },
    "13824": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "13826": {
      "op": "DUP4"
    },
    "13827": {
      "op": "ADD"
    },
    "13828": {
      "op": "MSTORE"
    },
    "13829": {
      "op": "SWAP1"
    },
    "13830": {
      "op": "SWAP2"
    },
    "13831": {
      "op": "AND"
    },
    "13832": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "13834": {
      "op": "SWAP1"
    },
    "13835": {
      "op": "SWAP2"
    },
    "13836": {
      "op": "ADD"
    },
    "13837": {
      "op": "MSTORE"
    },
    "13838": {
      "op": "SWAP2"
    },
    "13839": {
      "op": "SWAP1"
    },
    "13840": {
      "op": "POP"
    },
    "13841": {
      "jump": "o",
      "op": "JUMP"
    },
    "13842": {
      "op": "JUMPDEST"
    },
    "13843": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "13848": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "13850": {
      "op": "SHL"
    },
    "13851": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13853": {
      "op": "MSTORE"
    },
    "13854": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "13856": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "13858": {
      "op": "MSTORE"
    },
    "13859": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "13861": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13863": {
      "op": "REVERT"
    },
    "13864": {
      "op": "JUMPDEST"
    },
    "13865": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13867": {
      "op": "MLOAD"
    },
    "13868": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "13870": {
      "op": "DUP3"
    },
    "13871": {
      "op": "ADD"
    },
    "13872": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "13874": {
      "op": "NOT"
    },
    "13875": {
      "op": "AND"
    },
    "13876": {
      "op": "DUP2"
    },
    "13877": {
      "op": "ADD"
    },
    "13878": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13880": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13882": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13884": {
      "op": "SHL"
    },
    "13885": {
      "op": "SUB"
    },
    "13886": {
      "op": "DUP2"
    },
    "13887": {
      "op": "GT"
    },
    "13888": {
      "op": "DUP3"
    },
    "13889": {
      "op": "DUP3"
    },
    "13890": {
      "op": "LT"
    },
    "13891": {
      "op": "OR"
    },
    "13892": {
      "op": "ISZERO"
    },
    "13893": {
      "op": "PUSH2",
      "value": "0x3650"
    },
    "13896": {
      "op": "JUMPI"
    },
    "13897": {
      "op": "PUSH2",
      "value": "0x3650"
    },
    "13900": {
      "op": "PUSH2",
      "value": "0x3612"
    },
    "13903": {
      "jump": "i",
      "op": "JUMP"
    },
    "13904": {
      "op": "JUMPDEST"
    },
    "13905": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13907": {
      "op": "MSTORE"
    },
    "13908": {
      "op": "SWAP2"
    },
    "13909": {
      "op": "SWAP1"
    },
    "13910": {
      "op": "POP"
    },
    "13911": {
      "jump": "o",
      "op": "JUMP"
    },
    "13912": {
      "op": "JUMPDEST"
    },
    "13913": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13915": {
      "op": "DUP3"
    },
    "13916": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "13918": {
      "op": "DUP4"
    },
    "13919": {
      "op": "ADD"
    },
    "13920": {
      "op": "SLT"
    },
    "13921": {
      "op": "PUSH2",
      "value": "0x3669"
    },
    "13924": {
      "op": "JUMPI"
    },
    "13925": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13927": {
      "op": "DUP1"
    },
    "13928": {
      "op": "REVERT"
    },
    "13929": {
      "op": "JUMPDEST"
    },
    "13930": {
      "op": "DUP2"
    },
    "13931": {
      "op": "CALLDATALOAD"
    },
    "13932": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13934": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13936": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13938": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13940": {
      "op": "SHL"
    },
    "13941": {
      "op": "SUB"
    },
    "13942": {
      "op": "DUP3"
    },
    "13943": {
      "op": "GT"
    },
    "13944": {
      "op": "ISZERO"
    },
    "13945": {
      "op": "PUSH2",
      "value": "0x3684"
    },
    "13948": {
      "op": "JUMPI"
    },
    "13949": {
      "op": "PUSH2",
      "value": "0x3684"
    },
    "13952": {
      "op": "PUSH2",
      "value": "0x3612"
    },
    "13955": {
      "jump": "i",
      "op": "JUMP"
    },
    "13956": {
      "op": "JUMPDEST"
    },
    "13957": {
      "op": "DUP2"
    },
    "13958": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "13960": {
      "op": "SHL"
    },
    "13961": {
      "op": "PUSH2",
      "value": "0x3693"
    },
    "13964": {
      "op": "DUP3"
    },
    "13965": {
      "op": "DUP3"
    },
    "13966": {
      "op": "ADD"
    },
    "13967": {
      "op": "PUSH2",
      "value": "0x3628"
    },
    "13970": {
      "jump": "i",
      "op": "JUMP"
    },
    "13971": {
      "op": "JUMPDEST"
    },
    "13972": {
      "op": "SWAP3"
    },
    "13973": {
      "op": "DUP4"
    },
    "13974": {
      "op": "MSTORE"
    },
    "13975": {
      "op": "DUP5"
    },
    "13976": {
      "op": "DUP2"
    },
    "13977": {
      "op": "ADD"
    },
    "13978": {
      "op": "DUP3"
    },
    "13979": {
      "op": "ADD"
    },
    "13980": {
      "op": "SWAP3"
    },
    "13981": {
      "op": "DUP3"
    },
    "13982": {
      "op": "DUP2"
    },
    "13983": {
      "op": "ADD"
    },
    "13984": {
      "op": "SWAP1"
    },
    "13985": {
      "op": "DUP8"
    },
    "13986": {
      "op": "DUP6"
    },
    "13987": {
      "op": "GT"
    },
    "13988": {
      "op": "ISZERO"
    },
    "13989": {
      "op": "PUSH2",
      "value": "0x36AD"
    },
    "13992": {
      "op": "JUMPI"
    },
    "13993": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13995": {
      "op": "DUP1"
    },
    "13996": {
      "op": "REVERT"
    },
    "13997": {
      "op": "JUMPDEST"
    },
    "13998": {
      "op": "DUP4"
    },
    "13999": {
      "op": "DUP8"
    },
    "14000": {
      "op": "ADD"
    },
    "14001": {
      "op": "SWAP3"
    },
    "14002": {
      "op": "POP"
    },
    "14003": {
      "op": "JUMPDEST"
    },
    "14004": {
      "op": "DUP5"
    },
    "14005": {
      "op": "DUP4"
    },
    "14006": {
      "op": "LT"
    },
    "14007": {
      "op": "ISZERO"
    },
    "14008": {
      "op": "PUSH2",
      "value": "0x36CC"
    },
    "14011": {
      "op": "JUMPI"
    },
    "14012": {
      "op": "DUP3"
    },
    "14013": {
      "op": "CALLDATALOAD"
    },
    "14014": {
      "op": "DUP3"
    },
    "14015": {
      "op": "MSTORE"
    },
    "14016": {
      "op": "SWAP2"
    },
    "14017": {
      "op": "DUP4"
    },
    "14018": {
      "op": "ADD"
    },
    "14019": {
      "op": "SWAP2"
    },
    "14020": {
      "op": "SWAP1"
    },
    "14021": {
      "op": "DUP4"
    },
    "14022": {
      "op": "ADD"
    },
    "14023": {
      "op": "SWAP1"
    },
    "14024": {
      "op": "PUSH2",
      "value": "0x36B3"
    },
    "14027": {
      "op": "JUMP"
    },
    "14028": {
      "op": "JUMPDEST"
    },
    "14029": {
      "op": "SWAP8"
    },
    "14030": {
      "op": "SWAP7"
    },
    "14031": {
      "op": "POP"
    },
    "14032": {
      "op": "POP"
    },
    "14033": {
      "op": "POP"
    },
    "14034": {
      "op": "POP"
    },
    "14035": {
      "op": "POP"
    },
    "14036": {
      "op": "POP"
    },
    "14037": {
      "op": "POP"
    },
    "14038": {
      "jump": "o",
      "op": "JUMP"
    },
    "14039": {
      "op": "JUMPDEST"
    },
    "14040": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14042": {
      "op": "DUP1"
    },
    "14043": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14045": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "14047": {
      "op": "DUP5"
    },
    "14048": {
      "op": "DUP7"
    },
    "14049": {
      "op": "SUB"
    },
    "14050": {
      "op": "SLT"
    },
    "14051": {
      "op": "ISZERO"
    },
    "14052": {
      "op": "PUSH2",
      "value": "0x36EC"
    },
    "14055": {
      "op": "JUMPI"
    },
    "14056": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14058": {
      "op": "DUP1"
    },
    "14059": {
      "op": "REVERT"
    },
    "14060": {
      "op": "JUMPDEST"
    },
    "14061": {
      "op": "DUP4"
    },
    "14062": {
      "op": "CALLDATALOAD"
    },
    "14063": {
      "op": "SWAP3"
    },
    "14064": {
      "op": "POP"
    },
    "14065": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14067": {
      "op": "DUP5"
    },
    "14068": {
      "op": "ADD"
    },
    "14069": {
      "op": "CALLDATALOAD"
    },
    "14070": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14072": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14074": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14076": {
      "op": "SHL"
    },
    "14077": {
      "op": "SUB"
    },
    "14078": {
      "op": "DUP2"
    },
    "14079": {
      "op": "GT"
    },
    "14080": {
      "op": "ISZERO"
    },
    "14081": {
      "op": "PUSH2",
      "value": "0x3709"
    },
    "14084": {
      "op": "JUMPI"
    },
    "14085": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14087": {
      "op": "DUP1"
    },
    "14088": {
      "op": "REVERT"
    },
    "14089": {
      "op": "JUMPDEST"
    },
    "14090": {
      "op": "PUSH2",
      "value": "0x3715"
    },
    "14093": {
      "op": "DUP7"
    },
    "14094": {
      "op": "DUP3"
    },
    "14095": {
      "op": "DUP8"
    },
    "14096": {
      "op": "ADD"
    },
    "14097": {
      "op": "PUSH2",
      "value": "0x3658"
    },
    "14100": {
      "jump": "i",
      "op": "JUMP"
    },
    "14101": {
      "op": "JUMPDEST"
    },
    "14102": {
      "op": "SWAP3"
    },
    "14103": {
      "op": "POP"
    },
    "14104": {
      "op": "POP"
    },
    "14105": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14107": {
      "op": "DUP5"
    },
    "14108": {
      "op": "ADD"
    },
    "14109": {
      "op": "CALLDATALOAD"
    },
    "14110": {
      "op": "DUP1"
    },
    "14111": {
      "op": "ISZERO"
    },
    "14112": {
      "op": "ISZERO"
    },
    "14113": {
      "op": "DUP2"
    },
    "14114": {
      "op": "EQ"
    },
    "14115": {
      "op": "PUSH2",
      "value": "0x372B"
    },
    "14118": {
      "op": "JUMPI"
    },
    "14119": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14121": {
      "op": "DUP1"
    },
    "14122": {
      "op": "REVERT"
    },
    "14123": {
      "op": "JUMPDEST"
    },
    "14124": {
      "op": "DUP1"
    },
    "14125": {
      "op": "SWAP2"
    },
    "14126": {
      "op": "POP"
    },
    "14127": {
      "op": "POP"
    },
    "14128": {
      "op": "SWAP3"
    },
    "14129": {
      "op": "POP"
    },
    "14130": {
      "op": "SWAP3"
    },
    "14131": {
      "op": "POP"
    },
    "14132": {
      "op": "SWAP3"
    },
    "14133": {
      "jump": "o",
      "op": "JUMP"
    },
    "14134": {
      "op": "JUMPDEST"
    },
    "14135": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14137": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "14140": {
      "op": "DUP1"
    },
    "14141": {
      "op": "DUP4"
    },
    "14142": {
      "op": "MSTORE"
    },
    "14143": {
      "op": "PUSH2",
      "value": "0x374A"
    },
    "14146": {
      "op": "DUP2"
    },
    "14147": {
      "op": "DUP5"
    },
    "14148": {
      "op": "ADD"
    },
    "14149": {
      "op": "DUP13"
    },
    "14150": {
      "op": "PUSH2",
      "value": "0x35A2"
    },
    "14153": {
      "jump": "i",
      "op": "JUMP"
    },
    "14154": {
      "op": "JUMPDEST"
    },
    "14155": {
      "op": "SWAP10"
    },
    "14156": {
      "op": "ISZERO"
    },
    "14157": {
      "op": "ISZERO"
    },
    "14158": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14160": {
      "op": "DUP5"
    },
    "14161": {
      "op": "ADD"
    },
    "14162": {
      "op": "MSTORE"
    },
    "14163": {
      "op": "POP"
    },
    "14164": {
      "op": "POP"
    },
    "14165": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "14171": {
      "op": "SWAP7"
    },
    "14172": {
      "op": "DUP8"
    },
    "14173": {
      "op": "AND"
    },
    "14174": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14176": {
      "op": "DUP3"
    },
    "14177": {
      "op": "ADD"
    },
    "14178": {
      "op": "MSTORE"
    },
    "14179": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "14181": {
      "op": "SWAP6"
    },
    "14182": {
      "op": "SWAP1"
    },
    "14183": {
      "op": "SWAP6"
    },
    "14184": {
      "op": "AND"
    },
    "14185": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "14187": {
      "op": "DUP7"
    },
    "14188": {
      "op": "ADD"
    },
    "14189": {
      "op": "MSTORE"
    },
    "14190": {
      "op": "PUSH3",
      "value": "0xFFFFFF"
    },
    "14194": {
      "op": "SWAP4"
    },
    "14195": {
      "op": "SWAP1"
    },
    "14196": {
      "op": "SWAP4"
    },
    "14197": {
      "op": "AND"
    },
    "14198": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "14200": {
      "op": "DUP6"
    },
    "14201": {
      "op": "ADD"
    },
    "14202": {
      "op": "MSTORE"
    },
    "14203": {
      "op": "SWAP1"
    },
    "14204": {
      "op": "DUP5"
    },
    "14205": {
      "op": "AND"
    },
    "14206": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14208": {
      "op": "DUP5"
    },
    "14209": {
      "op": "ADD"
    },
    "14210": {
      "op": "MSTORE"
    },
    "14211": {
      "op": "SWAP1"
    },
    "14212": {
      "op": "SWAP3"
    },
    "14213": {
      "op": "AND"
    },
    "14214": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "14216": {
      "op": "DUP3"
    },
    "14217": {
      "op": "ADD"
    },
    "14218": {
      "op": "MSTORE"
    },
    "14219": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "14222": {
      "op": "SWAP1"
    },
    "14223": {
      "op": "SWAP2"
    },
    "14224": {
      "op": "AND"
    },
    "14225": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "14227": {
      "op": "SWAP1"
    },
    "14228": {
      "op": "SWAP2"
    },
    "14229": {
      "op": "ADD"
    },
    "14230": {
      "op": "MSTORE"
    },
    "14231": {
      "op": "SWAP2"
    },
    "14232": {
      "op": "SWAP1"
    },
    "14233": {
      "op": "POP"
    },
    "14234": {
      "jump": "o",
      "op": "JUMP"
    },
    "14235": {
      "op": "JUMPDEST"
    },
    "14236": {
      "op": "DUP1"
    },
    "14237": {
      "op": "CALLDATALOAD"
    },
    "14238": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "14244": {
      "op": "DUP2"
    },
    "14245": {
      "op": "AND"
    },
    "14246": {
      "op": "DUP2"
    },
    "14247": {
      "op": "EQ"
    },
    "14248": {
      "op": "PUSH2",
      "value": "0x37B0"
    },
    "14251": {
      "op": "JUMPI"
    },
    "14252": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14254": {
      "op": "DUP1"
    },
    "14255": {
      "op": "REVERT"
    },
    "14256": {
      "op": "JUMPDEST"
    },
    "14257": {
      "op": "SWAP2"
    },
    "14258": {
      "op": "SWAP1"
    },
    "14259": {
      "op": "POP"
    },
    "14260": {
      "jump": "o",
      "op": "JUMP"
    },
    "14261": {
      "op": "JUMPDEST"
    },
    "14262": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14264": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14266": {
      "op": "DUP3"
    },
    "14267": {
      "op": "DUP5"
    },
    "14268": {
      "op": "SUB"
    },
    "14269": {
      "op": "SLT"
    },
    "14270": {
      "op": "ISZERO"
    },
    "14271": {
      "op": "PUSH2",
      "value": "0x37C7"
    },
    "14274": {
      "op": "JUMPI"
    },
    "14275": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14277": {
      "op": "DUP1"
    },
    "14278": {
      "op": "REVERT"
    },
    "14279": {
      "op": "JUMPDEST"
    },
    "14280": {
      "op": "PUSH2",
      "value": "0x37D0"
    },
    "14283": {
      "op": "DUP3"
    },
    "14284": {
      "op": "PUSH2",
      "value": "0x379B"
    },
    "14287": {
      "jump": "i",
      "op": "JUMP"
    },
    "14288": {
      "op": "JUMPDEST"
    },
    "14289": {
      "op": "SWAP4"
    },
    "14290": {
      "op": "SWAP3"
    },
    "14291": {
      "op": "POP"
    },
    "14292": {
      "op": "POP"
    },
    "14293": {
      "op": "POP"
    },
    "14294": {
      "jump": "o",
      "op": "JUMP"
    },
    "14295": {
      "op": "JUMPDEST"
    },
    "14296": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14298": {
      "op": "PUSH2",
      "value": "0x140"
    },
    "14301": {
      "op": "DUP3"
    },
    "14302": {
      "op": "MLOAD"
    },
    "14303": {
      "op": "DUP2"
    },
    "14304": {
      "op": "DUP6"
    },
    "14305": {
      "op": "MSTORE"
    },
    "14306": {
      "op": "PUSH2",
      "value": "0x37ED"
    },
    "14309": {
      "op": "DUP3"
    },
    "14310": {
      "op": "DUP7"
    },
    "14311": {
      "op": "ADD"
    },
    "14312": {
      "op": "DUP3"
    },
    "14313": {
      "op": "PUSH2",
      "value": "0x35A2"
    },
    "14316": {
      "jump": "i",
      "op": "JUMP"
    },
    "14317": {
      "op": "JUMPDEST"
    },
    "14318": {
      "op": "SWAP2"
    },
    "14319": {
      "op": "POP"
    },
    "14320": {
      "op": "POP"
    },
    "14321": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14323": {
      "op": "DUP4"
    },
    "14324": {
      "op": "ADD"
    },
    "14325": {
      "op": "MLOAD"
    },
    "14326": {
      "op": "PUSH2",
      "value": "0x3808"
    },
    "14329": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14331": {
      "op": "DUP7"
    },
    "14332": {
      "op": "ADD"
    },
    "14333": {
      "op": "DUP3"
    },
    "14334": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "14340": {
      "op": "AND"
    },
    "14341": {
      "op": "SWAP1"
    },
    "14342": {
      "op": "MSTORE"
    },
    "14343": {
      "op": "JUMP"
    },
    "14344": {
      "op": "JUMPDEST"
    },
    "14345": {
      "op": "POP"
    },
    "14346": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14348": {
      "op": "DUP4"
    },
    "14349": {
      "op": "ADD"
    },
    "14350": {
      "op": "MLOAD"
    },
    "14351": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14353": {
      "op": "DUP6"
    },
    "14354": {
      "op": "ADD"
    },
    "14355": {
      "op": "MSTORE"
    },
    "14356": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "14358": {
      "op": "DUP4"
    },
    "14359": {
      "op": "ADD"
    },
    "14360": {
      "op": "MLOAD"
    },
    "14361": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "14363": {
      "op": "DUP6"
    },
    "14364": {
      "op": "ADD"
    },
    "14365": {
      "op": "MSTORE"
    },
    "14366": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "14368": {
      "op": "DUP4"
    },
    "14369": {
      "op": "ADD"
    },
    "14370": {
      "op": "MLOAD"
    },
    "14371": {
      "op": "PUSH2",
      "value": "0x3831"
    },
    "14374": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "14376": {
      "op": "DUP7"
    },
    "14377": {
      "op": "ADD"
    },
    "14378": {
      "op": "DUP3"
    },
    "14379": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "14381": {
      "op": "AND"
    },
    "14382": {
      "op": "SWAP1"
    },
    "14383": {
      "op": "MSTORE"
    },
    "14384": {
      "op": "JUMP"
    },
    "14385": {
      "op": "JUMPDEST"
    },
    "14386": {
      "op": "POP"
    },
    "14387": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14389": {
      "op": "DUP4"
    },
    "14390": {
      "op": "ADD"
    },
    "14391": {
      "op": "MLOAD"
    },
    "14392": {
      "op": "PUSH2",
      "value": "0x3848"
    },
    "14395": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14397": {
      "op": "DUP7"
    },
    "14398": {
      "op": "ADD"
    },
    "14399": {
      "op": "DUP3"
    },
    "14400": {
      "op": "PUSH3",
      "value": "0xFFFFFF"
    },
    "14404": {
      "op": "AND"
    },
    "14405": {
      "op": "SWAP1"
    },
    "14406": {
      "op": "MSTORE"
    },
    "14407": {
      "op": "JUMP"
    },
    "14408": {
      "op": "JUMPDEST"
    },
    "14409": {
      "op": "POP"
    },
    "14410": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "14412": {
      "op": "DUP4"
    },
    "14413": {
      "op": "ADD"
    },
    "14414": {
      "op": "MLOAD"
    },
    "14415": {
      "op": "PUSH2",
      "value": "0x3863"
    },
    "14418": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "14420": {
      "op": "DUP7"
    },
    "14421": {
      "op": "ADD"
    },
    "14422": {
      "op": "DUP3"
    },
    "14423": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14425": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14427": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "14429": {
      "op": "SHL"
    },
    "14430": {
      "op": "SUB"
    },
    "14431": {
      "op": "AND"
    },
    "14432": {
      "op": "SWAP1"
    },
    "14433": {
      "op": "MSTORE"
    },
    "14434": {
      "op": "JUMP"
    },
    "14435": {
      "op": "JUMPDEST"
    },
    "14436": {
      "op": "POP"
    },
    "14437": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "14439": {
      "op": "DUP4"
    },
    "14440": {
      "op": "ADD"
    },
    "14441": {
      "op": "MLOAD"
    },
    "14442": {
      "op": "PUSH2",
      "value": "0x3879"
    },
    "14445": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "14447": {
      "op": "DUP7"
    },
    "14448": {
      "op": "ADD"
    },
    "14449": {
      "op": "DUP3"
    },
    "14450": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "14453": {
      "op": "AND"
    },
    "14454": {
      "op": "SWAP1"
    },
    "14455": {
      "op": "MSTORE"
    },
    "14456": {
      "op": "JUMP"
    },
    "14457": {
      "op": "JUMPDEST"
    },
    "14458": {
      "op": "POP"
    },
    "14459": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "14462": {
      "op": "DUP4"
    },
    "14463": {
      "op": "DUP2"
    },
    "14464": {
      "op": "ADD"
    },
    "14465": {
      "op": "MLOAD"
    },
    "14466": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "14469": {
      "op": "AND"
    },
    "14470": {
      "op": "SWAP1"
    },
    "14471": {
      "op": "DUP6"
    },
    "14472": {
      "op": "ADD"
    },
    "14473": {
      "op": "MSTORE"
    },
    "14474": {
      "op": "PUSH2",
      "value": "0x120"
    },
    "14477": {
      "op": "DUP1"
    },
    "14478": {
      "op": "DUP5"
    },
    "14479": {
      "op": "ADD"
    },
    "14480": {
      "op": "MLOAD"
    },
    "14481": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "14487": {
      "op": "DUP2"
    },
    "14488": {
      "op": "AND"
    },
    "14489": {
      "op": "DUP3"
    },
    "14490": {
      "op": "DUP8"
    },
    "14491": {
      "op": "ADD"
    },
    "14492": {
      "op": "MSTORE"
    },
    "14493": {
      "op": "PUSH2",
      "value": "0x1D11"
    },
    "14496": {
      "op": "JUMP"
    },
    "14497": {
      "op": "JUMPDEST"
    },
    "14498": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14500": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14502": {
      "op": "DUP3"
    },
    "14503": {
      "op": "ADD"
    },
    "14504": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14506": {
      "op": "DUP4"
    },
    "14507": {
      "op": "MSTORE"
    },
    "14508": {
      "op": "DUP1"
    },
    "14509": {
      "op": "DUP6"
    },
    "14510": {
      "op": "MLOAD"
    },
    "14511": {
      "op": "DUP1"
    },
    "14512": {
      "op": "DUP4"
    },
    "14513": {
      "op": "MSTORE"
    },
    "14514": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "14516": {
      "op": "DUP6"
    },
    "14517": {
      "op": "ADD"
    },
    "14518": {
      "op": "SWAP2"
    },
    "14519": {
      "op": "POP"
    },
    "14520": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "14522": {
      "op": "DUP2"
    },
    "14523": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "14525": {
      "op": "SHL"
    },
    "14526": {
      "op": "DUP7"
    },
    "14527": {
      "op": "ADD"
    },
    "14528": {
      "op": "ADD"
    },
    "14529": {
      "op": "SWAP3"
    },
    "14530": {
      "op": "POP"
    },
    "14531": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14533": {
      "op": "DUP1"
    },
    "14534": {
      "op": "DUP9"
    },
    "14535": {
      "op": "ADD"
    },
    "14536": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14538": {
      "op": "JUMPDEST"
    },
    "14539": {
      "op": "DUP4"
    },
    "14540": {
      "op": "DUP2"
    },
    "14541": {
      "op": "LT"
    },
    "14542": {
      "op": "ISZERO"
    },
    "14543": {
      "op": "PUSH2",
      "value": "0x38F8"
    },
    "14546": {
      "op": "JUMPI"
    },
    "14547": {
      "op": "PUSH1",
      "value": "0x5F"
    },
    "14549": {
      "op": "NOT"
    },
    "14550": {
      "op": "DUP9"
    },
    "14551": {
      "op": "DUP8"
    },
    "14552": {
      "op": "SUB"
    },
    "14553": {
      "op": "ADD"
    },
    "14554": {
      "op": "DUP6"
    },
    "14555": {
      "op": "MSTORE"
    },
    "14556": {
      "op": "PUSH2",
      "value": "0x38E6"
    },
    "14559": {
      "op": "DUP7"
    },
    "14560": {
      "op": "DUP4"
    },
    "14561": {
      "op": "MLOAD"
    },
    "14562": {
      "op": "PUSH2",
      "value": "0x37D7"
    },
    "14565": {
      "jump": "i",
      "op": "JUMP"
    },
    "14566": {
      "op": "JUMPDEST"
    },
    "14567": {
      "op": "SWAP6"
    },
    "14568": {
      "op": "POP"
    },
    "14569": {
      "op": "SWAP4"
    },
    "14570": {
      "op": "DUP3"
    },
    "14571": {
      "op": "ADD"
    },
    "14572": {
      "op": "SWAP4"
    },
    "14573": {
      "op": "SWAP1"
    },
    "14574": {
      "op": "DUP3"
    },
    "14575": {
      "op": "ADD"
    },
    "14576": {
      "op": "SWAP1"
    },
    "14577": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14579": {
      "op": "ADD"
    },
    "14580": {
      "op": "PUSH2",
      "value": "0x38CA"
    },
    "14583": {
      "op": "JUMP"
    },
    "14584": {
      "op": "JUMPDEST"
    },
    "14585": {
      "op": "POP"
    },
    "14586": {
      "op": "POP"
    },
    "14587": {
      "op": "DUP6"
    },
    "14588": {
      "op": "DUP5"
    },
    "14589": {
      "op": "SUB"
    },
    "14590": {
      "op": "DUP2"
    },
    "14591": {
      "op": "DUP8"
    },
    "14592": {
      "op": "ADD"
    },
    "14593": {
      "op": "MSTORE"
    },
    "14594": {
      "op": "DUP7"
    },
    "14595": {
      "op": "MLOAD"
    },
    "14596": {
      "op": "DUP1"
    },
    "14597": {
      "op": "DUP6"
    },
    "14598": {
      "op": "MSTORE"
    },
    "14599": {
      "op": "DUP8"
    },
    "14600": {
      "op": "DUP3"
    },
    "14601": {
      "op": "ADD"
    },
    "14602": {
      "op": "SWAP5"
    },
    "14603": {
      "op": "DUP3"
    },
    "14604": {
      "op": "ADD"
    },
    "14605": {
      "op": "SWAP4"
    },
    "14606": {
      "op": "POP"
    },
    "14607": {
      "op": "SWAP2"
    },
    "14608": {
      "op": "POP"
    },
    "14609": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14611": {
      "op": "JUMPDEST"
    },
    "14612": {
      "op": "DUP3"
    },
    "14613": {
      "op": "DUP2"
    },
    "14614": {
      "op": "LT"
    },
    "14615": {
      "op": "ISZERO"
    },
    "14616": {
      "op": "PUSH2",
      "value": "0x392F"
    },
    "14619": {
      "op": "JUMPI"
    },
    "14620": {
      "op": "DUP5"
    },
    "14621": {
      "op": "MLOAD"
    },
    "14622": {
      "op": "DUP5"
    },
    "14623": {
      "op": "MSTORE"
    },
    "14624": {
      "op": "SWAP4"
    },
    "14625": {
      "op": "DUP2"
    },
    "14626": {
      "op": "ADD"
    },
    "14627": {
      "op": "SWAP4"
    },
    "14628": {
      "op": "SWAP3"
    },
    "14629": {
      "op": "DUP2"
    },
    "14630": {
      "op": "ADD"
    },
    "14631": {
      "op": "SWAP3"
    },
    "14632": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14634": {
      "op": "ADD"
    },
    "14635": {
      "op": "PUSH2",
      "value": "0x3913"
    },
    "14638": {
      "op": "JUMP"
    },
    "14639": {
      "op": "JUMPDEST"
    },
    "14640": {
      "op": "POP"
    },
    "14641": {
      "op": "SWAP2"
    },
    "14642": {
      "op": "SWAP8"
    },
    "14643": {
      "op": "SWAP7"
    },
    "14644": {
      "op": "POP"
    },
    "14645": {
      "op": "POP"
    },
    "14646": {
      "op": "POP"
    },
    "14647": {
      "op": "POP"
    },
    "14648": {
      "op": "POP"
    },
    "14649": {
      "op": "POP"
    },
    "14650": {
      "op": "POP"
    },
    "14651": {
      "jump": "o",
      "op": "JUMP"
    },
    "14652": {
      "op": "JUMPDEST"
    },
    "14653": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14655": {
      "op": "DUP1"
    },
    "14656": {
      "op": "DUP4"
    },
    "14657": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "14659": {
      "op": "DUP5"
    },
    "14660": {
      "op": "ADD"
    },
    "14661": {
      "op": "SLT"
    },
    "14662": {
      "op": "PUSH2",
      "value": "0x394E"
    },
    "14665": {
      "op": "JUMPI"
    },
    "14666": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14668": {
      "op": "DUP1"
    },
    "14669": {
      "op": "REVERT"
    },
    "14670": {
      "op": "JUMPDEST"
    },
    "14671": {
      "op": "POP"
    },
    "14672": {
      "op": "DUP2"
    },
    "14673": {
      "op": "CALLDATALOAD"
    },
    "14674": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14676": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14678": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14680": {
      "op": "SHL"
    },
    "14681": {
      "op": "SUB"
    },
    "14682": {
      "op": "DUP2"
    },
    "14683": {
      "op": "GT"
    },
    "14684": {
      "op": "ISZERO"
    },
    "14685": {
      "op": "PUSH2",
      "value": "0x3965"
    },
    "14688": {
      "op": "JUMPI"
    },
    "14689": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14691": {
      "op": "DUP1"
    },
    "14692": {
      "op": "REVERT"
    },
    "14693": {
      "op": "JUMPDEST"
    },
    "14694": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14696": {
      "op": "DUP4"
    },
    "14697": {
      "op": "ADD"
    },
    "14698": {
      "op": "SWAP2"
    },
    "14699": {
      "op": "POP"
    },
    "14700": {
      "op": "DUP4"
    },
    "14701": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14703": {
      "op": "DUP3"
    },
    "14704": {
      "op": "DUP6"
    },
    "14705": {
      "op": "ADD"
    },
    "14706": {
      "op": "ADD"
    },
    "14707": {
      "op": "GT"
    },
    "14708": {
      "op": "ISZERO"
    },
    "14709": {
      "op": "PUSH2",
      "value": "0x397D"
    },
    "14712": {
      "op": "JUMPI"
    },
    "14713": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14715": {
      "op": "DUP1"
    },
    "14716": {
      "op": "REVERT"
    },
    "14717": {
      "op": "JUMPDEST"
    },
    "14718": {
      "op": "SWAP3"
    },
    "14719": {
      "op": "POP"
    },
    "14720": {
      "op": "SWAP3"
    },
    "14721": {
      "op": "SWAP1"
    },
    "14722": {
      "op": "POP"
    },
    "14723": {
      "jump": "o",
      "op": "JUMP"
    },
    "14724": {
      "op": "JUMPDEST"
    },
    "14725": {
      "op": "DUP1"
    },
    "14726": {
      "op": "CALLDATALOAD"
    },
    "14727": {
      "op": "PUSH3",
      "value": "0xFFFFFF"
    },
    "14731": {
      "op": "DUP2"
    },
    "14732": {
      "op": "AND"
    },
    "14733": {
      "op": "DUP2"
    },
    "14734": {
      "op": "EQ"
    },
    "14735": {
      "op": "PUSH2",
      "value": "0x37B0"
    },
    "14738": {
      "op": "JUMPI"
    },
    "14739": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14741": {
      "op": "DUP1"
    },
    "14742": {
      "op": "REVERT"
    },
    "14743": {
      "op": "JUMPDEST"
    },
    "14744": {
      "op": "DUP1"
    },
    "14745": {
      "op": "CALLDATALOAD"
    },
    "14746": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "14749": {
      "op": "DUP2"
    },
    "14750": {
      "op": "AND"
    },
    "14751": {
      "op": "DUP2"
    },
    "14752": {
      "op": "EQ"
    },
    "14753": {
      "op": "PUSH2",
      "value": "0x37B0"
    },
    "14756": {
      "op": "JUMPI"
    },
    "14757": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14759": {
      "op": "DUP1"
    },
    "14760": {
      "op": "REVERT"
    },
    "14761": {
      "op": "JUMPDEST"
    },
    "14762": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14764": {
      "op": "DUP1"
    },
    "14765": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14767": {
      "op": "DUP1"
    },
    "14768": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14770": {
      "op": "DUP1"
    },
    "14771": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14773": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "14775": {
      "op": "DUP9"
    },
    "14776": {
      "op": "DUP11"
    },
    "14777": {
      "op": "SUB"
    },
    "14778": {
      "op": "SLT"
    },
    "14779": {
      "op": "ISZERO"
    },
    "14780": {
      "op": "PUSH2",
      "value": "0x39C4"
    },
    "14783": {
      "op": "JUMPI"
    },
    "14784": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14786": {
      "op": "DUP1"
    },
    "14787": {
      "op": "REVERT"
    },
    "14788": {
      "op": "JUMPDEST"
    },
    "14789": {
      "op": "DUP8"
    },
    "14790": {
      "op": "CALLDATALOAD"
    },
    "14791": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14793": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14795": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14797": {
      "op": "SHL"
    },
    "14798": {
      "op": "SUB"
    },
    "14799": {
      "op": "DUP2"
    },
    "14800": {
      "op": "GT"
    },
    "14801": {
      "op": "ISZERO"
    },
    "14802": {
      "op": "PUSH2",
      "value": "0x39DA"
    },
    "14805": {
      "op": "JUMPI"
    },
    "14806": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14808": {
      "op": "DUP1"
    },
    "14809": {
      "op": "REVERT"
    },
    "14810": {
      "op": "JUMPDEST"
    },
    "14811": {
      "op": "PUSH2",
      "value": "0x39E6"
    },
    "14814": {
      "op": "DUP11"
    },
    "14815": {
      "op": "DUP3"
    },
    "14816": {
      "op": "DUP12"
    },
    "14817": {
      "op": "ADD"
    },
    "14818": {
      "op": "PUSH2",
      "value": "0x393C"
    },
    "14821": {
      "jump": "i",
      "op": "JUMP"
    },
    "14822": {
      "op": "JUMPDEST"
    },
    "14823": {
      "op": "SWAP1"
    },
    "14824": {
      "op": "SWAP9"
    },
    "14825": {
      "op": "POP"
    },
    "14826": {
      "op": "SWAP7"
    },
    "14827": {
      "op": "POP"
    },
    "14828": {
      "op": "POP"
    },
    "14829": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14831": {
      "op": "DUP9"
    },
    "14832": {
      "op": "ADD"
    },
    "14833": {
      "op": "CALLDATALOAD"
    },
    "14834": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "14836": {
      "op": "DUP2"
    },
    "14837": {
      "op": "AND"
    },
    "14838": {
      "op": "DUP2"
    },
    "14839": {
      "op": "EQ"
    },
    "14840": {
      "op": "PUSH2",
      "value": "0x3A00"
    },
    "14843": {
      "op": "JUMPI"
    },
    "14844": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14846": {
      "op": "DUP1"
    },
    "14847": {
      "op": "REVERT"
    },
    "14848": {
      "op": "JUMPDEST"
    },
    "14849": {
      "op": "SWAP5"
    },
    "14850": {
      "op": "POP"
    },
    "14851": {
      "op": "PUSH2",
      "value": "0x3A0E"
    },
    "14854": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14856": {
      "op": "DUP10"
    },
    "14857": {
      "op": "ADD"
    },
    "14858": {
      "op": "PUSH2",
      "value": "0x3984"
    },
    "14861": {
      "jump": "i",
      "op": "JUMP"
    },
    "14862": {
      "op": "JUMPDEST"
    },
    "14863": {
      "op": "SWAP4"
    },
    "14864": {
      "op": "POP"
    },
    "14865": {
      "op": "PUSH2",
      "value": "0x3A1C"
    },
    "14868": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "14870": {
      "op": "DUP10"
    },
    "14871": {
      "op": "ADD"
    },
    "14872": {
      "op": "PUSH2",
      "value": "0x379B"
    },
    "14875": {
      "jump": "i",
      "op": "JUMP"
    },
    "14876": {
      "op": "JUMPDEST"
    },
    "14877": {
      "op": "SWAP3"
    },
    "14878": {
      "op": "POP"
    },
    "14879": {
      "op": "PUSH2",
      "value": "0x3A2A"
    },
    "14882": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "14884": {
      "op": "DUP10"
    },
    "14885": {
      "op": "ADD"
    },
    "14886": {
      "op": "PUSH2",
      "value": "0x379B"
    },
    "14889": {
      "jump": "i",
      "op": "JUMP"
    },
    "14890": {
      "op": "JUMPDEST"
    },
    "14891": {
      "op": "SWAP2"
    },
    "14892": {
      "op": "POP"
    },
    "14893": {
      "op": "PUSH2",
      "value": "0x3A38"
    },
    "14896": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14898": {
      "op": "DUP10"
    },
    "14899": {
      "op": "ADD"
    },
    "14900": {
      "op": "PUSH2",
      "value": "0x3997"
    },
    "14903": {
      "jump": "i",
      "op": "JUMP"
    },
    "14904": {
      "op": "JUMPDEST"
    },
    "14905": {
      "op": "SWAP1"
    },
    "14906": {
      "op": "POP"
    },
    "14907": {
      "op": "SWAP3"
    },
    "14908": {
      "op": "SWAP6"
    },
    "14909": {
      "op": "SWAP9"
    },
    "14910": {
      "op": "SWAP2"
    },
    "14911": {
      "op": "SWAP5"
    },
    "14912": {
      "op": "SWAP8"
    },
    "14913": {
      "op": "POP"
    },
    "14914": {
      "op": "SWAP3"
    },
    "14915": {
      "op": "SWAP6"
    },
    "14916": {
      "op": "POP"
    },
    "14917": {
      "jump": "o",
      "op": "JUMP"
    },
    "14918": {
      "op": "JUMPDEST"
    },
    "14919": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14921": {
      "op": "DUP1"
    },
    "14922": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14924": {
      "op": "DUP4"
    },
    "14925": {
      "op": "DUP6"
    },
    "14926": {
      "op": "SUB"
    },
    "14927": {
      "op": "SLT"
    },
    "14928": {
      "op": "ISZERO"
    },
    "14929": {
      "op": "PUSH2",
      "value": "0x3A59"
    },
    "14932": {
      "op": "JUMPI"
    },
    "14933": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14935": {
      "op": "DUP1"
    },
    "14936": {
      "op": "REVERT"
    },
    "14937": {
      "op": "JUMPDEST"
    },
    "14938": {
      "op": "POP"
    },
    "14939": {
      "op": "POP"
    },
    "14940": {
      "op": "DUP1"
    },
    "14941": {
      "op": "CALLDATALOAD"
    },
    "14942": {
      "op": "SWAP3"
    },
    "14943": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14945": {
      "op": "SWAP1"
    },
    "14946": {
      "op": "SWAP2"
    },
    "14947": {
      "op": "ADD"
    },
    "14948": {
      "op": "CALLDATALOAD"
    },
    "14949": {
      "op": "SWAP2"
    },
    "14950": {
      "op": "POP"
    },
    "14951": {
      "jump": "o",
      "op": "JUMP"
    },
    "14952": {
      "op": "JUMPDEST"
    },
    "14953": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14955": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14957": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14959": {
      "op": "SHL"
    },
    "14960": {
      "op": "SUB"
    },
    "14961": {
      "op": "DUP2"
    },
    "14962": {
      "op": "AND"
    },
    "14963": {
      "op": "DUP2"
    },
    "14964": {
      "op": "EQ"
    },
    "14965": {
      "op": "PUSH2",
      "value": "0x2C67"
    },
    "14968": {
      "op": "JUMPI"
    },
    "14969": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14971": {
      "op": "DUP1"
    },
    "14972": {
      "op": "REVERT"
    },
    "14973": {
      "op": "JUMPDEST"
    },
    "14974": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14976": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14978": {
      "op": "DUP3"
    },
    "14979": {
      "op": "DUP5"
    },
    "14980": {
      "op": "SUB"
    },
    "14981": {
      "op": "SLT"
    },
    "14982": {
      "op": "ISZERO"
    },
    "14983": {
      "op": "PUSH2",
      "value": "0x3A8F"
    },
    "14986": {
      "op": "JUMPI"
    },
    "14987": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14989": {
      "op": "DUP1"
    },
    "14990": {
      "op": "REVERT"
    },
    "14991": {
      "op": "JUMPDEST"
    },
    "14992": {
      "op": "DUP2"
    },
    "14993": {
      "op": "CALLDATALOAD"
    },
    "14994": {
      "op": "PUSH2",
      "value": "0x37D0"
    },
    "14997": {
      "op": "DUP2"
    },
    "14998": {
      "op": "PUSH2",
      "value": "0x3A68"
    },
    "15001": {
      "jump": "i",
      "op": "JUMP"
    },
    "15002": {
      "op": "JUMPDEST"
    },
    "15003": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15005": {
      "op": "DUP3"
    },
    "15006": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "15008": {
      "op": "DUP4"
    },
    "15009": {
      "op": "ADD"
    },
    "15010": {
      "op": "SLT"
    },
    "15011": {
      "op": "PUSH2",
      "value": "0x3AAB"
    },
    "15014": {
      "op": "JUMPI"
    },
    "15015": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15017": {
      "op": "DUP1"
    },
    "15018": {
      "op": "REVERT"
    },
    "15019": {
      "op": "JUMPDEST"
    },
    "15020": {
      "op": "DUP2"
    },
    "15021": {
      "op": "CALLDATALOAD"
    },
    "15022": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15024": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15026": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "15028": {
      "op": "SHL"
    },
    "15029": {
      "op": "SUB"
    },
    "15030": {
      "op": "DUP2"
    },
    "15031": {
      "op": "GT"
    },
    "15032": {
      "op": "ISZERO"
    },
    "15033": {
      "op": "PUSH2",
      "value": "0x3AC4"
    },
    "15036": {
      "op": "JUMPI"
    },
    "15037": {
      "op": "PUSH2",
      "value": "0x3AC4"
    },
    "15040": {
      "op": "PUSH2",
      "value": "0x3612"
    },
    "15043": {
      "jump": "i",
      "op": "JUMP"
    },
    "15044": {
      "op": "JUMPDEST"
    },
    "15045": {
      "op": "PUSH2",
      "value": "0x3AD7"
    },
    "15048": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "15050": {
      "op": "DUP3"
    },
    "15051": {
      "op": "ADD"
    },
    "15052": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "15054": {
      "op": "NOT"
    },
    "15055": {
      "op": "AND"
    },
    "15056": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15058": {
      "op": "ADD"
    },
    "15059": {
      "op": "PUSH2",
      "value": "0x3628"
    },
    "15062": {
      "jump": "i",
      "op": "JUMP"
    },
    "15063": {
      "op": "JUMPDEST"
    },
    "15064": {
      "op": "DUP2"
    },
    "15065": {
      "op": "DUP2"
    },
    "15066": {
      "op": "MSTORE"
    },
    "15067": {
      "op": "DUP5"
    },
    "15068": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15070": {
      "op": "DUP4"
    },
    "15071": {
      "op": "DUP7"
    },
    "15072": {
      "op": "ADD"
    },
    "15073": {
      "op": "ADD"
    },
    "15074": {
      "op": "GT"
    },
    "15075": {
      "op": "ISZERO"
    },
    "15076": {
      "op": "PUSH2",
      "value": "0x3AEC"
    },
    "15079": {
      "op": "JUMPI"
    },
    "15080": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15082": {
      "op": "DUP1"
    },
    "15083": {
      "op": "REVERT"
    },
    "15084": {
      "op": "JUMPDEST"
    },
    "15085": {
      "op": "DUP2"
    },
    "15086": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15088": {
      "op": "DUP6"
    },
    "15089": {
      "op": "ADD"
    },
    "15090": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15092": {
      "op": "DUP4"
    },
    "15093": {
      "op": "ADD"
    },
    "15094": {
      "op": "CALLDATACOPY"
    },
    "15095": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15097": {
      "op": "SWAP2"
    },
    "15098": {
      "op": "DUP2"
    },
    "15099": {
      "op": "ADD"
    },
    "15100": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15102": {
      "op": "ADD"
    },
    "15103": {
      "op": "SWAP2"
    },
    "15104": {
      "op": "SWAP1"
    },
    "15105": {
      "op": "SWAP2"
    },
    "15106": {
      "op": "MSTORE"
    },
    "15107": {
      "op": "SWAP4"
    },
    "15108": {
      "op": "SWAP3"
    },
    "15109": {
      "op": "POP"
    },
    "15110": {
      "op": "POP"
    },
    "15111": {
      "op": "POP"
    },
    "15112": {
      "jump": "o",
      "op": "JUMP"
    },
    "15113": {
      "op": "JUMPDEST"
    },
    "15114": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15116": {
      "op": "DUP1"
    },
    "15117": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15119": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "15121": {
      "op": "DUP5"
    },
    "15122": {
      "op": "DUP7"
    },
    "15123": {
      "op": "SUB"
    },
    "15124": {
      "op": "SLT"
    },
    "15125": {
      "op": "ISZERO"
    },
    "15126": {
      "op": "PUSH2",
      "value": "0x3B1E"
    },
    "15129": {
      "op": "JUMPI"
    },
    "15130": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15132": {
      "op": "DUP1"
    },
    "15133": {
      "op": "REVERT"
    },
    "15134": {
      "op": "JUMPDEST"
    },
    "15135": {
      "op": "DUP4"
    },
    "15136": {
      "op": "CALLDATALOAD"
    },
    "15137": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15139": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15141": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "15143": {
      "op": "SHL"
    },
    "15144": {
      "op": "SUB"
    },
    "15145": {
      "op": "DUP2"
    },
    "15146": {
      "op": "GT"
    },
    "15147": {
      "op": "ISZERO"
    },
    "15148": {
      "op": "PUSH2",
      "value": "0x3B34"
    },
    "15151": {
      "op": "JUMPI"
    },
    "15152": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15154": {
      "op": "DUP1"
    },
    "15155": {
      "op": "REVERT"
    },
    "15156": {
      "op": "JUMPDEST"
    },
    "15157": {
      "op": "PUSH2",
      "value": "0x3B40"
    },
    "15160": {
      "op": "DUP7"
    },
    "15161": {
      "op": "DUP3"
    },
    "15162": {
      "op": "DUP8"
    },
    "15163": {
      "op": "ADD"
    },
    "15164": {
      "op": "PUSH2",
      "value": "0x3A9A"
    },
    "15167": {
      "jump": "i",
      "op": "JUMP"
    },
    "15168": {
      "op": "JUMPDEST"
    },
    "15169": {
      "op": "SWAP4"
    },
    "15170": {
      "op": "POP"
    },
    "15171": {
      "op": "POP"
    },
    "15172": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15174": {
      "op": "DUP5"
    },
    "15175": {
      "op": "ADD"
    },
    "15176": {
      "op": "CALLDATALOAD"
    },
    "15177": {
      "op": "SWAP2"
    },
    "15178": {
      "op": "POP"
    },
    "15179": {
      "op": "PUSH2",
      "value": "0x3B56"
    },
    "15182": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "15184": {
      "op": "DUP6"
    },
    "15185": {
      "op": "ADD"
    },
    "15186": {
      "op": "PUSH2",
      "value": "0x379B"
    },
    "15189": {
      "jump": "i",
      "op": "JUMP"
    },
    "15190": {
      "op": "JUMPDEST"
    },
    "15191": {
      "op": "SWAP1"
    },
    "15192": {
      "op": "POP"
    },
    "15193": {
      "op": "SWAP3"
    },
    "15194": {
      "op": "POP"
    },
    "15195": {
      "op": "SWAP3"
    },
    "15196": {
      "op": "POP"
    },
    "15197": {
      "op": "SWAP3"
    },
    "15198": {
      "jump": "o",
      "op": "JUMP"
    },
    "15199": {
      "op": "JUMPDEST"
    },
    "15200": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15202": {
      "op": "DUP1"
    },
    "15203": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15205": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "15207": {
      "op": "DUP5"
    },
    "15208": {
      "op": "DUP7"
    },
    "15209": {
      "op": "SUB"
    },
    "15210": {
      "op": "SLT"
    },
    "15211": {
      "op": "ISZERO"
    },
    "15212": {
      "op": "PUSH2",
      "value": "0x3B74"
    },
    "15215": {
      "op": "JUMPI"
    },
    "15216": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15218": {
      "op": "DUP1"
    },
    "15219": {
      "op": "REVERT"
    },
    "15220": {
      "op": "JUMPDEST"
    },
    "15221": {
      "op": "POP"
    },
    "15222": {
      "op": "POP"
    },
    "15223": {
      "op": "DUP2"
    },
    "15224": {
      "op": "CALLDATALOAD"
    },
    "15225": {
      "op": "SWAP4"
    },
    "15226": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15228": {
      "op": "DUP4"
    },
    "15229": {
      "op": "ADD"
    },
    "15230": {
      "op": "CALLDATALOAD"
    },
    "15231": {
      "op": "SWAP4"
    },
    "15232": {
      "op": "POP"
    },
    "15233": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "15235": {
      "op": "SWAP1"
    },
    "15236": {
      "op": "SWAP3"
    },
    "15237": {
      "op": "ADD"
    },
    "15238": {
      "op": "CALLDATALOAD"
    },
    "15239": {
      "op": "SWAP2"
    },
    "15240": {
      "op": "SWAP1"
    },
    "15241": {
      "op": "POP"
    },
    "15242": {
      "jump": "o",
      "op": "JUMP"
    },
    "15243": {
      "op": "JUMPDEST"
    },
    "15244": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15246": {
      "op": "PUSH2",
      "value": "0x140"
    },
    "15249": {
      "op": "DUP1"
    },
    "15250": {
      "op": "DUP4"
    },
    "15251": {
      "op": "MSTORE"
    },
    "15252": {
      "op": "PUSH2",
      "value": "0x3B9F"
    },
    "15255": {
      "op": "DUP2"
    },
    "15256": {
      "op": "DUP5"
    },
    "15257": {
      "op": "ADD"
    },
    "15258": {
      "op": "DUP15"
    },
    "15259": {
      "op": "PUSH2",
      "value": "0x35A2"
    },
    "15262": {
      "jump": "i",
      "op": "JUMP"
    },
    "15263": {
      "op": "JUMPDEST"
    },
    "15264": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "15270": {
      "op": "SWAP13"
    },
    "15271": {
      "op": "DUP14"
    },
    "15272": {
      "op": "AND"
    },
    "15273": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15275": {
      "op": "DUP6"
    },
    "15276": {
      "op": "ADD"
    },
    "15277": {
      "op": "MSTORE"
    },
    "15278": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "15280": {
      "op": "DUP5"
    },
    "15281": {
      "op": "ADD"
    },
    "15282": {
      "op": "SWAP12"
    },
    "15283": {
      "op": "SWAP1"
    },
    "15284": {
      "op": "SWAP12"
    },
    "15285": {
      "op": "MSTORE"
    },
    "15286": {
      "op": "POP"
    },
    "15287": {
      "op": "POP"
    },
    "15288": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "15290": {
      "op": "DUP2"
    },
    "15291": {
      "op": "ADD"
    },
    "15292": {
      "op": "SWAP8"
    },
    "15293": {
      "op": "SWAP1"
    },
    "15294": {
      "op": "SWAP8"
    },
    "15295": {
      "op": "MSTORE"
    },
    "15296": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "15298": {
      "op": "SWAP6"
    },
    "15299": {
      "op": "SWAP1"
    },
    "15300": {
      "op": "SWAP6"
    },
    "15301": {
      "op": "AND"
    },
    "15302": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "15304": {
      "op": "DUP8"
    },
    "15305": {
      "op": "ADD"
    },
    "15306": {
      "op": "MSTORE"
    },
    "15307": {
      "op": "PUSH3",
      "value": "0xFFFFFF"
    },
    "15311": {
      "op": "SWAP4"
    },
    "15312": {
      "op": "SWAP1"
    },
    "15313": {
      "op": "SWAP4"
    },
    "15314": {
      "op": "AND"
    },
    "15315": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "15317": {
      "op": "DUP7"
    },
    "15318": {
      "op": "ADD"
    },
    "15319": {
      "op": "MSTORE"
    },
    "15320": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15322": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15324": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "15326": {
      "op": "SHL"
    },
    "15327": {
      "op": "SUB"
    },
    "15328": {
      "op": "SWAP2"
    },
    "15329": {
      "op": "SWAP1"
    },
    "15330": {
      "op": "SWAP2"
    },
    "15331": {
      "op": "AND"
    },
    "15332": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "15334": {
      "op": "DUP6"
    },
    "15335": {
      "op": "ADD"
    },
    "15336": {
      "op": "MSTORE"
    },
    "15337": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "15340": {
      "op": "SWAP1"
    },
    "15341": {
      "op": "DUP2"
    },
    "15342": {
      "op": "AND"
    },
    "15343": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "15345": {
      "op": "DUP6"
    },
    "15346": {
      "op": "ADD"
    },
    "15347": {
      "op": "MSTORE"
    },
    "15348": {
      "op": "AND"
    },
    "15349": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "15352": {
      "op": "DUP4"
    },
    "15353": {
      "op": "ADD"
    },
    "15354": {
      "op": "MSTORE"
    },
    "15355": {
      "op": "SWAP1"
    },
    "15356": {
      "op": "SWAP3"
    },
    "15357": {
      "op": "AND"
    },
    "15358": {
      "op": "PUSH2",
      "value": "0x120"
    },
    "15361": {
      "op": "SWAP1"
    },
    "15362": {
      "op": "SWAP3"
    },
    "15363": {
      "op": "ADD"
    },
    "15364": {
      "op": "SWAP2"
    },
    "15365": {
      "op": "SWAP1"
    },
    "15366": {
      "op": "SWAP2"
    },
    "15367": {
      "op": "MSTORE"
    },
    "15368": {
      "op": "SWAP2"
    },
    "15369": {
      "op": "SWAP1"
    },
    "15370": {
      "op": "POP"
    },
    "15371": {
      "jump": "o",
      "op": "JUMP"
    },
    "15372": {
      "op": "JUMPDEST"
    },
    "15373": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15375": {
      "op": "DUP2"
    },
    "15376": {
      "op": "MSTORE"
    },
    "15377": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15379": {
      "op": "PUSH2",
      "value": "0x37D0"
    },
    "15382": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15384": {
      "op": "DUP4"
    },
    "15385": {
      "op": "ADD"
    },
    "15386": {
      "op": "DUP5"
    },
    "15387": {
      "op": "PUSH2",
      "value": "0x37D7"
    },
    "15390": {
      "jump": "i",
      "op": "JUMP"
    },
    "15391": {
      "op": "JUMPDEST"
    },
    "15392": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15394": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15396": {
      "op": "DUP1"
    },
    "15397": {
      "op": "DUP4"
    },
    "15398": {
      "op": "ADD"
    },
    "15399": {
      "op": "DUP2"
    },
    "15400": {
      "op": "DUP5"
    },
    "15401": {
      "op": "MSTORE"
    },
    "15402": {
      "op": "DUP1"
    },
    "15403": {
      "op": "DUP6"
    },
    "15404": {
      "op": "MLOAD"
    },
    "15405": {
      "op": "DUP1"
    },
    "15406": {
      "op": "DUP4"
    },
    "15407": {
      "op": "MSTORE"
    },
    "15408": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "15410": {
      "op": "DUP7"
    },
    "15411": {
      "op": "ADD"
    },
    "15412": {
      "op": "SWAP2"
    },
    "15413": {
      "op": "POP"
    },
    "15414": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "15416": {
      "op": "DUP2"
    },
    "15417": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "15419": {
      "op": "SHL"
    },
    "15420": {
      "op": "DUP8"
    },
    "15421": {
      "op": "ADD"
    },
    "15422": {
      "op": "ADD"
    },
    "15423": {
      "op": "SWAP3"
    },
    "15424": {
      "op": "POP"
    },
    "15425": {
      "op": "DUP4"
    },
    "15426": {
      "op": "DUP8"
    },
    "15427": {
      "op": "ADD"
    },
    "15428": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15430": {
      "op": "JUMPDEST"
    },
    "15431": {
      "op": "DUP3"
    },
    "15432": {
      "op": "DUP2"
    },
    "15433": {
      "op": "LT"
    },
    "15434": {
      "op": "ISZERO"
    },
    "15435": {
      "op": "PUSH2",
      "value": "0x3C74"
    },
    "15438": {
      "op": "JUMPI"
    },
    "15439": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "15441": {
      "op": "NOT"
    },
    "15442": {
      "op": "DUP9"
    },
    "15443": {
      "op": "DUP7"
    },
    "15444": {
      "op": "SUB"
    },
    "15445": {
      "op": "ADD"
    },
    "15446": {
      "op": "DUP5"
    },
    "15447": {
      "op": "MSTORE"
    },
    "15448": {
      "op": "PUSH2",
      "value": "0x3C62"
    },
    "15451": {
      "op": "DUP6"
    },
    "15452": {
      "op": "DUP4"
    },
    "15453": {
      "op": "MLOAD"
    },
    "15454": {
      "op": "PUSH2",
      "value": "0x35A2"
    },
    "15457": {
      "jump": "i",
      "op": "JUMP"
    },
    "15458": {
      "op": "JUMPDEST"
    },
    "15459": {
      "op": "SWAP5"
    },
    "15460": {
      "op": "POP"
    },
    "15461": {
      "op": "SWAP3"
    },
    "15462": {
      "op": "DUP6"
    },
    "15463": {
      "op": "ADD"
    },
    "15464": {
      "op": "SWAP3"
    },
    "15465": {
      "op": "SWAP1"
    },
    "15466": {
      "op": "DUP6"
    },
    "15467": {
      "op": "ADD"
    },
    "15468": {
      "op": "SWAP1"
    },
    "15469": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15471": {
      "op": "ADD"
    },
    "15472": {
      "op": "PUSH2",
      "value": "0x3C46"
    },
    "15475": {
      "op": "JUMP"
    },
    "15476": {
      "op": "JUMPDEST"
    },
    "15477": {
      "op": "POP"
    },
    "15478": {
      "op": "SWAP3"
    },
    "15479": {
      "op": "SWAP8"
    },
    "15480": {
      "op": "SWAP7"
    },
    "15481": {
      "op": "POP"
    },
    "15482": {
      "op": "POP"
    },
    "15483": {
      "op": "POP"
    },
    "15484": {
      "op": "POP"
    },
    "15485": {
      "op": "POP"
    },
    "15486": {
      "op": "POP"
    },
    "15487": {
      "op": "POP"
    },
    "15488": {
      "jump": "o",
      "op": "JUMP"
    },
    "15489": {
      "op": "JUMPDEST"
    },
    "15490": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15492": {
      "op": "DUP1"
    },
    "15493": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15495": {
      "op": "DUP1"
    },
    "15496": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15498": {
      "op": "DUP1"
    },
    "15499": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15501": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "15503": {
      "op": "DUP9"
    },
    "15504": {
      "op": "DUP11"
    },
    "15505": {
      "op": "SUB"
    },
    "15506": {
      "op": "SLT"
    },
    "15507": {
      "op": "ISZERO"
    },
    "15508": {
      "op": "PUSH2",
      "value": "0x3C9C"
    },
    "15511": {
      "op": "JUMPI"
    },
    "15512": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15514": {
      "op": "DUP1"
    },
    "15515": {
      "op": "REVERT"
    },
    "15516": {
      "op": "JUMPDEST"
    },
    "15517": {
      "op": "DUP8"
    },
    "15518": {
      "op": "CALLDATALOAD"
    },
    "15519": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15521": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15523": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "15525": {
      "op": "SHL"
    },
    "15526": {
      "op": "SUB"
    },
    "15527": {
      "op": "DUP2"
    },
    "15528": {
      "op": "GT"
    },
    "15529": {
      "op": "ISZERO"
    },
    "15530": {
      "op": "PUSH2",
      "value": "0x3CB2"
    },
    "15533": {
      "op": "JUMPI"
    },
    "15534": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15536": {
      "op": "DUP1"
    },
    "15537": {
      "op": "REVERT"
    },
    "15538": {
      "op": "JUMPDEST"
    },
    "15539": {
      "op": "PUSH2",
      "value": "0x3CBE"
    },
    "15542": {
      "op": "DUP11"
    },
    "15543": {
      "op": "DUP3"
    },
    "15544": {
      "op": "DUP12"
    },
    "15545": {
      "op": "ADD"
    },
    "15546": {
      "op": "PUSH2",
      "value": "0x393C"
    },
    "15549": {
      "jump": "i",
      "op": "JUMP"
    },
    "15550": {
      "op": "JUMPDEST"
    },
    "15551": {
      "op": "SWAP1"
    },
    "15552": {
      "op": "SWAP9"
    },
    "15553": {
      "op": "POP"
    },
    "15554": {
      "op": "SWAP7"
    },
    "15555": {
      "op": "POP"
    },
    "15556": {
      "op": "PUSH2",
      "value": "0x3A00"
    },
    "15559": {
      "op": "SWAP1"
    },
    "15560": {
      "op": "POP"
    },
    "15561": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15563": {
      "op": "DUP10"
    },
    "15564": {
      "op": "ADD"
    },
    "15565": {
      "op": "PUSH2",
      "value": "0x3997"
    },
    "15568": {
      "jump": "i",
      "op": "JUMP"
    },
    "15569": {
      "op": "JUMPDEST"
    },
    "15570": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15572": {
      "op": "DUP1"
    },
    "15573": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15575": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "15577": {
      "op": "DUP5"
    },
    "15578": {
      "op": "DUP7"
    },
    "15579": {
      "op": "SUB"
    },
    "15580": {
      "op": "SLT"
    },
    "15581": {
      "op": "ISZERO"
    },
    "15582": {
      "op": "PUSH2",
      "value": "0x3CE6"
    },
    "15585": {
      "op": "JUMPI"
    },
    "15586": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15588": {
      "op": "DUP1"
    },
    "15589": {
      "op": "REVERT"
    },
    "15590": {
      "op": "JUMPDEST"
    },
    "15591": {
      "op": "DUP4"
    },
    "15592": {
      "op": "CALLDATALOAD"
    },
    "15593": {
      "op": "SWAP3"
    },
    "15594": {
      "op": "POP"
    },
    "15595": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15597": {
      "op": "DUP5"
    },
    "15598": {
      "op": "ADD"
    },
    "15599": {
      "op": "CALLDATALOAD"
    },
    "15600": {
      "op": "SWAP2"
    },
    "15601": {
      "op": "POP"
    },
    "15602": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "15604": {
      "op": "DUP5"
    },
    "15605": {
      "op": "ADD"
    },
    "15606": {
      "op": "CALLDATALOAD"
    },
    "15607": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15609": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15611": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "15613": {
      "op": "SHL"
    },
    "15614": {
      "op": "SUB"
    },
    "15615": {
      "op": "DUP2"
    },
    "15616": {
      "op": "GT"
    },
    "15617": {
      "op": "ISZERO"
    },
    "15618": {
      "op": "PUSH2",
      "value": "0x3D0A"
    },
    "15621": {
      "op": "JUMPI"
    },
    "15622": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15624": {
      "op": "DUP1"
    },
    "15625": {
      "op": "REVERT"
    },
    "15626": {
      "op": "JUMPDEST"
    },
    "15627": {
      "op": "PUSH2",
      "value": "0x3D16"
    },
    "15630": {
      "op": "DUP7"
    },
    "15631": {
      "op": "DUP3"
    },
    "15632": {
      "op": "DUP8"
    },
    "15633": {
      "op": "ADD"
    },
    "15634": {
      "op": "PUSH2",
      "value": "0x3658"
    },
    "15637": {
      "jump": "i",
      "op": "JUMP"
    },
    "15638": {
      "op": "JUMPDEST"
    },
    "15639": {
      "op": "SWAP2"
    },
    "15640": {
      "op": "POP"
    },
    "15641": {
      "op": "POP"
    },
    "15642": {
      "op": "SWAP3"
    },
    "15643": {
      "op": "POP"
    },
    "15644": {
      "op": "SWAP3"
    },
    "15645": {
      "op": "POP"
    },
    "15646": {
      "op": "SWAP3"
    },
    "15647": {
      "jump": "o",
      "op": "JUMP"
    },
    "15648": {
      "op": "JUMPDEST"
    },
    "15649": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15651": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15653": {
      "op": "DUP3"
    },
    "15654": {
      "op": "DUP5"
    },
    "15655": {
      "op": "SUB"
    },
    "15656": {
      "op": "SLT"
    },
    "15657": {
      "op": "ISZERO"
    },
    "15658": {
      "op": "PUSH2",
      "value": "0x3D32"
    },
    "15661": {
      "op": "JUMPI"
    },
    "15662": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15664": {
      "op": "DUP1"
    },
    "15665": {
      "op": "REVERT"
    },
    "15666": {
      "op": "JUMPDEST"
    },
    "15667": {
      "op": "DUP2"
    },
    "15668": {
      "op": "CALLDATALOAD"
    },
    "15669": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15671": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15673": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "15675": {
      "op": "SHL"
    },
    "15676": {
      "op": "SUB"
    },
    "15677": {
      "op": "DUP2"
    },
    "15678": {
      "op": "GT"
    },
    "15679": {
      "op": "ISZERO"
    },
    "15680": {
      "op": "PUSH2",
      "value": "0x3D48"
    },
    "15683": {
      "op": "JUMPI"
    },
    "15684": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15686": {
      "op": "DUP1"
    },
    "15687": {
      "op": "REVERT"
    },
    "15688": {
      "op": "JUMPDEST"
    },
    "15689": {
      "op": "PUSH2",
      "value": "0x3D54"
    },
    "15692": {
      "op": "DUP5"
    },
    "15693": {
      "op": "DUP3"
    },
    "15694": {
      "op": "DUP6"
    },
    "15695": {
      "op": "ADD"
    },
    "15696": {
      "op": "PUSH2",
      "value": "0x3A9A"
    },
    "15699": {
      "jump": "i",
      "op": "JUMP"
    },
    "15700": {
      "op": "JUMPDEST"
    },
    "15701": {
      "op": "SWAP5"
    },
    "15702": {
      "op": "SWAP4"
    },
    "15703": {
      "op": "POP"
    },
    "15704": {
      "op": "POP"
    },
    "15705": {
      "op": "POP"
    },
    "15706": {
      "op": "POP"
    },
    "15707": {
      "jump": "o",
      "op": "JUMP"
    },
    "15708": {
      "op": "JUMPDEST"
    },
    "15709": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15711": {
      "op": "DUP1"
    },
    "15712": {
      "op": "DUP3"
    },
    "15713": {
      "op": "MSTORE"
    },
    "15714": {
      "op": "DUP3"
    },
    "15715": {
      "op": "MLOAD"
    },
    "15716": {
      "op": "DUP3"
    },
    "15717": {
      "op": "DUP3"
    },
    "15718": {
      "op": "ADD"
    },
    "15719": {
      "op": "DUP2"
    },
    "15720": {
      "op": "SWAP1"
    },
    "15721": {
      "op": "MSTORE"
    },
    "15722": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15724": {
      "op": "SWAP2"
    },
    "15725": {
      "op": "SWAP1"
    },
    "15726": {
      "op": "DUP5"
    },
    "15727": {
      "op": "DUP3"
    },
    "15728": {
      "op": "ADD"
    },
    "15729": {
      "op": "SWAP1"
    },
    "15730": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "15732": {
      "op": "DUP6"
    },
    "15733": {
      "op": "ADD"
    },
    "15734": {
      "op": "SWAP1"
    },
    "15735": {
      "op": "DUP5"
    },
    "15736": {
      "op": "JUMPDEST"
    },
    "15737": {
      "op": "DUP2"
    },
    "15738": {
      "op": "DUP2"
    },
    "15739": {
      "op": "LT"
    },
    "15740": {
      "op": "ISZERO"
    },
    "15741": {
      "op": "PUSH2",
      "value": "0x3D98"
    },
    "15744": {
      "op": "JUMPI"
    },
    "15745": {
      "op": "DUP4"
    },
    "15746": {
      "op": "MLOAD"
    },
    "15747": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "15750": {
      "op": "AND"
    },
    "15751": {
      "op": "DUP4"
    },
    "15752": {
      "op": "MSTORE"
    },
    "15753": {
      "op": "SWAP3"
    },
    "15754": {
      "op": "DUP5"
    },
    "15755": {
      "op": "ADD"
    },
    "15756": {
      "op": "SWAP3"
    },
    "15757": {
      "op": "SWAP2"
    },
    "15758": {
      "op": "DUP5"
    },
    "15759": {
      "op": "ADD"
    },
    "15760": {
      "op": "SWAP2"
    },
    "15761": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15763": {
      "op": "ADD"
    },
    "15764": {
      "op": "PUSH2",
      "value": "0x3D78"
    },
    "15767": {
      "op": "JUMP"
    },
    "15768": {
      "op": "JUMPDEST"
    },
    "15769": {
      "op": "POP"
    },
    "15770": {
      "op": "SWAP1"
    },
    "15771": {
      "op": "SWAP7"
    },
    "15772": {
      "op": "SWAP6"
    },
    "15773": {
      "op": "POP"
    },
    "15774": {
      "op": "POP"
    },
    "15775": {
      "op": "POP"
    },
    "15776": {
      "op": "POP"
    },
    "15777": {
      "op": "POP"
    },
    "15778": {
      "op": "POP"
    },
    "15779": {
      "jump": "o",
      "op": "JUMP"
    },
    "15780": {
      "op": "JUMPDEST"
    },
    "15781": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15783": {
      "op": "DUP2"
    },
    "15784": {
      "op": "DUP2"
    },
    "15785": {
      "op": "SHR"
    },
    "15786": {
      "op": "SWAP1"
    },
    "15787": {
      "op": "DUP3"
    },
    "15788": {
      "op": "AND"
    },
    "15789": {
      "op": "DUP1"
    },
    "15790": {
      "op": "PUSH2",
      "value": "0x3DB8"
    },
    "15793": {
      "op": "JUMPI"
    },
    "15794": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "15796": {
      "op": "DUP3"
    },
    "15797": {
      "op": "AND"
    },
    "15798": {
      "op": "SWAP2"
    },
    "15799": {
      "op": "POP"
    },
    "15800": {
      "op": "JUMPDEST"
    },
    "15801": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15803": {
      "op": "DUP3"
    },
    "15804": {
      "op": "LT"
    },
    "15805": {
      "op": "DUP2"
    },
    "15806": {
      "op": "SUB"
    },
    "15807": {
      "op": "PUSH2",
      "value": "0x3DD8"
    },
    "15810": {
      "op": "JUMPI"
    },
    "15811": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "15816": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "15818": {
      "op": "SHL"
    },
    "15819": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15821": {
      "op": "MSTORE"
    },
    "15822": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "15824": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "15826": {
      "op": "MSTORE"
    },
    "15827": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "15829": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15831": {
      "op": "REVERT"
    },
    "15832": {
      "op": "JUMPDEST"
    },
    "15833": {
      "op": "POP"
    },
    "15834": {
      "op": "SWAP2"
    },
    "15835": {
      "op": "SWAP1"
    },
    "15836": {
      "op": "POP"
    },
    "15837": {
      "jump": "o",
      "op": "JUMP"
    },
    "15838": {
      "op": "JUMPDEST"
    },
    "15839": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "15844": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "15846": {
      "op": "SHL"
    },
    "15847": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15849": {
      "op": "MSTORE"
    },
    "15850": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "15852": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "15854": {
      "op": "MSTORE"
    },
    "15855": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "15857": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15859": {
      "op": "REVERT"
    },
    "15860": {
      "op": "JUMPDEST"
    },
    "15861": {
      "op": "DUP2"
    },
    "15862": {
      "op": "MLOAD"
    },
    "15863": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15865": {
      "op": "SWAP1"
    },
    "15866": {
      "op": "DUP3"
    },
    "15867": {
      "op": "SWAP1"
    },
    "15868": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15870": {
      "op": "DUP1"
    },
    "15871": {
      "op": "DUP7"
    },
    "15872": {
      "op": "ADD"
    },
    "15873": {
      "op": "DUP5"
    },
    "15874": {
      "op": "JUMPDEST"
    },
    "15875": {
      "op": "DUP4"
    },
    "15876": {
      "op": "DUP2"
    },
    "15877": {
      "op": "LT"
    },
    "15878": {
      "op": "ISZERO"
    },
    "15879": {
      "op": "PUSH2",
      "value": "0x3E1E"
    },
    "15882": {
      "op": "JUMPI"
    },
    "15883": {
      "op": "DUP2"
    },
    "15884": {
      "op": "MLOAD"
    },
    "15885": {
      "op": "DUP6"
    },
    "15886": {
      "op": "MSTORE"
    },
    "15887": {
      "op": "SWAP4"
    },
    "15888": {
      "op": "DUP3"
    },
    "15889": {
      "op": "ADD"
    },
    "15890": {
      "op": "SWAP4"
    },
    "15891": {
      "op": "SWAP1"
    },
    "15892": {
      "op": "DUP3"
    },
    "15893": {
      "op": "ADD"
    },
    "15894": {
      "op": "SWAP1"
    },
    "15895": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15897": {
      "op": "ADD"
    },
    "15898": {
      "op": "PUSH2",
      "value": "0x3E02"
    },
    "15901": {
      "op": "JUMP"
    },
    "15902": {
      "op": "JUMPDEST"
    },
    "15903": {
      "op": "POP"
    },
    "15904": {
      "op": "SWAP3"
    },
    "15905": {
      "op": "SWAP7"
    },
    "15906": {
      "op": "SWAP6"
    },
    "15907": {
      "op": "POP"
    },
    "15908": {
      "op": "POP"
    },
    "15909": {
      "op": "POP"
    },
    "15910": {
      "op": "POP"
    },
    "15911": {
      "op": "POP"
    },
    "15912": {
      "op": "POP"
    },
    "15913": {
      "jump": "o",
      "op": "JUMP"
    },
    "15914": {
      "op": "JUMPDEST"
    },
    "15915": {
      "op": "DUP5"
    },
    "15916": {
      "op": "DUP2"
    },
    "15917": {
      "op": "MSTORE"
    },
    "15918": {
      "op": "DUP4"
    },
    "15919": {
      "op": "ISZERO"
    },
    "15920": {
      "op": "ISZERO"
    },
    "15921": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15923": {
      "op": "DUP3"
    },
    "15924": {
      "op": "ADD"
    },
    "15925": {
      "op": "MSTORE"
    },
    "15926": {
      "op": "DUP3"
    },
    "15927": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "15929": {
      "op": "DUP3"
    },
    "15930": {
      "op": "ADD"
    },
    "15931": {
      "op": "MSTORE"
    },
    "15932": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "15934": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "15936": {
      "op": "DUP3"
    },
    "15937": {
      "op": "ADD"
    },
    "15938": {
      "op": "MSTORE"
    },
    "15939": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15941": {
      "op": "PUSH2",
      "value": "0x3E51"
    },
    "15944": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "15946": {
      "op": "DUP4"
    },
    "15947": {
      "op": "ADD"
    },
    "15948": {
      "op": "DUP5"
    },
    "15949": {
      "op": "PUSH2",
      "value": "0x35A2"
    },
    "15952": {
      "jump": "i",
      "op": "JUMP"
    },
    "15953": {
      "op": "JUMPDEST"
    },
    "15954": {
      "op": "SWAP7"
    },
    "15955": {
      "op": "SWAP6"
    },
    "15956": {
      "op": "POP"
    },
    "15957": {
      "op": "POP"
    },
    "15958": {
      "op": "POP"
    },
    "15959": {
      "op": "POP"
    },
    "15960": {
      "op": "POP"
    },
    "15961": {
      "op": "POP"
    },
    "15962": {
      "jump": "o",
      "op": "JUMP"
    },
    "15963": {
      "op": "JUMPDEST"
    },
    "15964": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15966": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15968": {
      "op": "DUP3"
    },
    "15969": {
      "op": "DUP5"
    },
    "15970": {
      "op": "SUB"
    },
    "15971": {
      "op": "SLT"
    },
    "15972": {
      "op": "ISZERO"
    },
    "15973": {
      "op": "PUSH2",
      "value": "0x3E6D"
    },
    "15976": {
      "op": "JUMPI"
    },
    "15977": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15979": {
      "op": "DUP1"
    },
    "15980": {
      "op": "REVERT"
    },
    "15981": {
      "op": "JUMPDEST"
    },
    "15982": {
      "op": "DUP2"
    },
    "15983": {
      "op": "MLOAD"
    },
    "15984": {
      "op": "PUSH2",
      "value": "0x37D0"
    },
    "15987": {
      "op": "DUP2"
    },
    "15988": {
      "op": "PUSH2",
      "value": "0x3A68"
    },
    "15991": {
      "jump": "i",
      "op": "JUMP"
    },
    "15992": {
      "op": "JUMPDEST"
    },
    "15993": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15995": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15997": {
      "op": "DUP3"
    },
    "15998": {
      "op": "DUP5"
    },
    "15999": {
      "op": "SUB"
    },
    "16000": {
      "op": "SLT"
    },
    "16001": {
      "op": "ISZERO"
    },
    "16002": {
      "op": "PUSH2",
      "value": "0x3E8A"
    },
    "16005": {
      "op": "JUMPI"
    },
    "16006": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16008": {
      "op": "DUP1"
    },
    "16009": {
      "op": "REVERT"
    },
    "16010": {
      "op": "JUMPDEST"
    },
    "16011": {
      "op": "POP"
    },
    "16012": {
      "op": "MLOAD"
    },
    "16013": {
      "op": "SWAP2"
    },
    "16014": {
      "op": "SWAP1"
    },
    "16015": {
      "op": "POP"
    },
    "16016": {
      "jump": "o",
      "op": "JUMP"
    },
    "16017": {
      "op": "JUMPDEST"
    },
    "16018": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16020": {
      "op": "DUP1"
    },
    "16021": {
      "op": "DUP3"
    },
    "16022": {
      "op": "MSTORE"
    },
    "16023": {
      "op": "DUP2"
    },
    "16024": {
      "op": "DUP2"
    },
    "16025": {
      "op": "ADD"
    },
    "16026": {
      "op": "MSTORE"
    },
    "16027": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "16060": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "16062": {
      "op": "DUP3"
    },
    "16063": {
      "op": "ADD"
    },
    "16064": {
      "op": "MSTORE"
    },
    "16065": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "16067": {
      "op": "ADD"
    },
    "16068": {
      "op": "SWAP1"
    },
    "16069": {
      "jump": "o",
      "op": "JUMP"
    },
    "16070": {
      "op": "JUMPDEST"
    },
    "16071": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16073": {
      "op": "DUP2"
    },
    "16074": {
      "op": "MSTORE"
    },
    "16075": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16077": {
      "op": "PUSH2",
      "value": "0x37D0"
    },
    "16080": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16082": {
      "op": "DUP4"
    },
    "16083": {
      "op": "ADD"
    },
    "16084": {
      "op": "DUP5"
    },
    "16085": {
      "op": "PUSH2",
      "value": "0x35A2"
    },
    "16088": {
      "jump": "i",
      "op": "JUMP"
    },
    "16089": {
      "op": "JUMPDEST"
    },
    "16090": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16092": {
      "op": "DUP2"
    },
    "16093": {
      "op": "SLOAD"
    },
    "16094": {
      "op": "PUSH2",
      "value": "0x3EE6"
    },
    "16097": {
      "op": "DUP2"
    },
    "16098": {
      "op": "PUSH2",
      "value": "0x3DA4"
    },
    "16101": {
      "jump": "i",
      "op": "JUMP"
    },
    "16102": {
      "op": "JUMPDEST"
    },
    "16103": {
      "op": "DUP1"
    },
    "16104": {
      "op": "DUP6"
    },
    "16105": {
      "op": "MSTORE"
    },
    "16106": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16108": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16110": {
      "op": "DUP4"
    },
    "16111": {
      "op": "DUP2"
    },
    "16112": {
      "op": "AND"
    },
    "16113": {
      "op": "DUP1"
    },
    "16114": {
      "op": "ISZERO"
    },
    "16115": {
      "op": "PUSH2",
      "value": "0x3F03"
    },
    "16118": {
      "op": "JUMPI"
    },
    "16119": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16121": {
      "op": "DUP2"
    },
    "16122": {
      "op": "EQ"
    },
    "16123": {
      "op": "PUSH2",
      "value": "0x3F1D"
    },
    "16126": {
      "op": "JUMPI"
    },
    "16127": {
      "op": "PUSH2",
      "value": "0x3F4B"
    },
    "16130": {
      "op": "JUMP"
    },
    "16131": {
      "op": "JUMPDEST"
    },
    "16132": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "16134": {
      "op": "NOT"
    },
    "16135": {
      "op": "DUP6"
    },
    "16136": {
      "op": "AND"
    },
    "16137": {
      "op": "DUP9"
    },
    "16138": {
      "op": "DUP5"
    },
    "16139": {
      "op": "ADD"
    },
    "16140": {
      "op": "MSTORE"
    },
    "16141": {
      "op": "DUP4"
    },
    "16142": {
      "op": "ISZERO"
    },
    "16143": {
      "op": "ISZERO"
    },
    "16144": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "16146": {
      "op": "SHL"
    },
    "16147": {
      "op": "DUP9"
    },
    "16148": {
      "op": "ADD"
    },
    "16149": {
      "op": "DUP4"
    },
    "16150": {
      "op": "ADD"
    },
    "16151": {
      "op": "SWAP6"
    },
    "16152": {
      "op": "POP"
    },
    "16153": {
      "op": "PUSH2",
      "value": "0x3F4B"
    },
    "16156": {
      "op": "JUMP"
    },
    "16157": {
      "op": "JUMPDEST"
    },
    "16158": {
      "op": "DUP7"
    },
    "16159": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16161": {
      "op": "MSTORE"
    },
    "16162": {
      "op": "DUP3"
    },
    "16163": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16165": {
      "op": "KECCAK256"
    },
    "16166": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16168": {
      "op": "JUMPDEST"
    },
    "16169": {
      "op": "DUP6"
    },
    "16170": {
      "op": "DUP2"
    },
    "16171": {
      "op": "LT"
    },
    "16172": {
      "op": "ISZERO"
    },
    "16173": {
      "op": "PUSH2",
      "value": "0x3F43"
    },
    "16176": {
      "op": "JUMPI"
    },
    "16177": {
      "op": "DUP2"
    },
    "16178": {
      "op": "SLOAD"
    },
    "16179": {
      "op": "DUP11"
    },
    "16180": {
      "op": "DUP3"
    },
    "16181": {
      "op": "ADD"
    },
    "16182": {
      "op": "DUP7"
    },
    "16183": {
      "op": "ADD"
    },
    "16184": {
      "op": "MSTORE"
    },
    "16185": {
      "op": "SWAP1"
    },
    "16186": {
      "op": "DUP4"
    },
    "16187": {
      "op": "ADD"
    },
    "16188": {
      "op": "SWAP1"
    },
    "16189": {
      "op": "DUP5"
    },
    "16190": {
      "op": "ADD"
    },
    "16191": {
      "op": "PUSH2",
      "value": "0x3F28"
    },
    "16194": {
      "op": "JUMP"
    },
    "16195": {
      "op": "JUMPDEST"
    },
    "16196": {
      "op": "DUP10"
    },
    "16197": {
      "op": "ADD"
    },
    "16198": {
      "op": "DUP5"
    },
    "16199": {
      "op": "ADD"
    },
    "16200": {
      "op": "SWAP7"
    },
    "16201": {
      "op": "POP"
    },
    "16202": {
      "op": "POP"
    },
    "16203": {
      "op": "JUMPDEST"
    },
    "16204": {
      "op": "POP"
    },
    "16205": {
      "op": "POP"
    },
    "16206": {
      "op": "POP"
    },
    "16207": {
      "op": "POP"
    },
    "16208": {
      "op": "POP"
    },
    "16209": {
      "op": "SWAP3"
    },
    "16210": {
      "op": "SWAP2"
    },
    "16211": {
      "op": "POP"
    },
    "16212": {
      "op": "POP"
    },
    "16213": {
      "jump": "o",
      "op": "JUMP"
    },
    "16214": {
      "op": "JUMPDEST"
    },
    "16215": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16217": {
      "op": "DUP2"
    },
    "16218": {
      "op": "MSTORE"
    },
    "16219": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16221": {
      "op": "PUSH2",
      "value": "0x37D0"
    },
    "16224": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16226": {
      "op": "DUP4"
    },
    "16227": {
      "op": "ADD"
    },
    "16228": {
      "op": "DUP5"
    },
    "16229": {
      "op": "PUSH2",
      "value": "0x3ED9"
    },
    "16232": {
      "jump": "i",
      "op": "JUMP"
    },
    "16233": {
      "op": "JUMPDEST"
    },
    "16234": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "16236": {
      "op": "DUP3"
    },
    "16237": {
      "op": "GT"
    },
    "16238": {
      "op": "ISZERO"
    },
    "16239": {
      "op": "PUSH2",
      "value": "0x3FB3"
    },
    "16242": {
      "op": "JUMPI"
    },
    "16243": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16245": {
      "op": "DUP2"
    },
    "16246": {
      "op": "DUP2"
    },
    "16247": {
      "op": "MSTORE"
    },
    "16248": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16250": {
      "op": "DUP2"
    },
    "16251": {
      "op": "KECCAK256"
    },
    "16252": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "16254": {
      "op": "DUP6"
    },
    "16255": {
      "op": "ADD"
    },
    "16256": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "16258": {
      "op": "SHR"
    },
    "16259": {
      "op": "DUP2"
    },
    "16260": {
      "op": "ADD"
    },
    "16261": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16263": {
      "op": "DUP7"
    },
    "16264": {
      "op": "LT"
    },
    "16265": {
      "op": "ISZERO"
    },
    "16266": {
      "op": "PUSH2",
      "value": "0x3F90"
    },
    "16269": {
      "op": "JUMPI"
    },
    "16270": {
      "op": "POP"
    },
    "16271": {
      "op": "DUP1"
    },
    "16272": {
      "op": "JUMPDEST"
    },
    "16273": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "16275": {
      "op": "DUP6"
    },
    "16276": {
      "op": "ADD"
    },
    "16277": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "16279": {
      "op": "SHR"
    },
    "16280": {
      "op": "DUP3"
    },
    "16281": {
      "op": "ADD"
    },
    "16282": {
      "op": "SWAP2"
    },
    "16283": {
      "op": "POP"
    },
    "16284": {
      "op": "JUMPDEST"
    },
    "16285": {
      "op": "DUP2"
    },
    "16286": {
      "op": "DUP2"
    },
    "16287": {
      "op": "LT"
    },
    "16288": {
      "op": "ISZERO"
    },
    "16289": {
      "op": "PUSH2",
      "value": "0x3FAF"
    },
    "16292": {
      "op": "JUMPI"
    },
    "16293": {
      "op": "DUP3"
    },
    "16294": {
      "op": "DUP2"
    },
    "16295": {
      "op": "SSTORE"
    },
    "16296": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16298": {
      "op": "ADD"
    },
    "16299": {
      "op": "PUSH2",
      "value": "0x3F9C"
    },
    "16302": {
      "op": "JUMP"
    },
    "16303": {
      "op": "JUMPDEST"
    },
    "16304": {
      "op": "POP"
    },
    "16305": {
      "op": "POP"
    },
    "16306": {
      "op": "POP"
    },
    "16307": {
      "op": "JUMPDEST"
    },
    "16308": {
      "op": "POP"
    },
    "16309": {
      "op": "POP"
    },
    "16310": {
      "op": "POP"
    },
    "16311": {
      "jump": "o",
      "op": "JUMP"
    },
    "16312": {
      "op": "JUMPDEST"
    },
    "16313": {
      "op": "DUP2"
    },
    "16314": {
      "op": "MLOAD"
    },
    "16315": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16317": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16319": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "16321": {
      "op": "SHL"
    },
    "16322": {
      "op": "SUB"
    },
    "16323": {
      "op": "DUP2"
    },
    "16324": {
      "op": "GT"
    },
    "16325": {
      "op": "ISZERO"
    },
    "16326": {
      "op": "PUSH2",
      "value": "0x3FD1"
    },
    "16329": {
      "op": "JUMPI"
    },
    "16330": {
      "op": "PUSH2",
      "value": "0x3FD1"
    },
    "16333": {
      "op": "PUSH2",
      "value": "0x3612"
    },
    "16336": {
      "jump": "i",
      "op": "JUMP"
    },
    "16337": {
      "op": "JUMPDEST"
    },
    "16338": {
      "op": "PUSH2",
      "value": "0x3FE5"
    },
    "16341": {
      "op": "DUP2"
    },
    "16342": {
      "op": "PUSH2",
      "value": "0x3FDF"
    },
    "16345": {
      "op": "DUP5"
    },
    "16346": {
      "op": "SLOAD"
    },
    "16347": {
      "op": "PUSH2",
      "value": "0x3DA4"
    },
    "16350": {
      "jump": "i",
      "op": "JUMP"
    },
    "16351": {
      "op": "JUMPDEST"
    },
    "16352": {
      "op": "DUP5"
    },
    "16353": {
      "op": "PUSH2",
      "value": "0x3F69"
    },
    "16356": {
      "jump": "i",
      "op": "JUMP"
    },
    "16357": {
      "op": "JUMPDEST"
    },
    "16358": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16360": {
      "op": "DUP1"
    },
    "16361": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "16363": {
      "op": "DUP4"
    },
    "16364": {
      "op": "GT"
    },
    "16365": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16367": {
      "op": "DUP2"
    },
    "16368": {
      "op": "EQ"
    },
    "16369": {
      "op": "PUSH2",
      "value": "0x401A"
    },
    "16372": {
      "op": "JUMPI"
    },
    "16373": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16375": {
      "op": "DUP5"
    },
    "16376": {
      "op": "ISZERO"
    },
    "16377": {
      "op": "PUSH2",
      "value": "0x4002"
    },
    "16380": {
      "op": "JUMPI"
    },
    "16381": {
      "op": "POP"
    },
    "16382": {
      "op": "DUP6"
    },
    "16383": {
      "op": "DUP4"
    },
    "16384": {
      "op": "ADD"
    },
    "16385": {
      "op": "MLOAD"
    },
    "16386": {
      "op": "JUMPDEST"
    },
    "16387": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16389": {
      "op": "NOT"
    },
    "16390": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "16392": {
      "op": "DUP7"
    },
    "16393": {
      "op": "SWAP1"
    },
    "16394": {
      "op": "SHL"
    },
    "16395": {
      "op": "SHR"
    },
    "16396": {
      "op": "NOT"
    },
    "16397": {
      "op": "AND"
    },
    "16398": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16400": {
      "op": "DUP6"
    },
    "16401": {
      "op": "SWAP1"
    },
    "16402": {
      "op": "SHL"
    },
    "16403": {
      "op": "OR"
    },
    "16404": {
      "op": "DUP6"
    },
    "16405": {
      "op": "SSTORE"
    },
    "16406": {
      "op": "PUSH2",
      "value": "0x3FAF"
    },
    "16409": {
      "op": "JUMP"
    },
    "16410": {
      "op": "JUMPDEST"
    },
    "16411": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16413": {
      "op": "DUP6"
    },
    "16414": {
      "op": "DUP2"
    },
    "16415": {
      "op": "MSTORE"
    },
    "16416": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16418": {
      "op": "DUP2"
    },
    "16419": {
      "op": "KECCAK256"
    },
    "16420": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "16422": {
      "op": "NOT"
    },
    "16423": {
      "op": "DUP7"
    },
    "16424": {
      "op": "AND"
    },
    "16425": {
      "op": "SWAP2"
    },
    "16426": {
      "op": "JUMPDEST"
    },
    "16427": {
      "op": "DUP3"
    },
    "16428": {
      "op": "DUP2"
    },
    "16429": {
      "op": "LT"
    },
    "16430": {
      "op": "ISZERO"
    },
    "16431": {
      "op": "PUSH2",
      "value": "0x4049"
    },
    "16434": {
      "op": "JUMPI"
    },
    "16435": {
      "op": "DUP9"
    },
    "16436": {
      "op": "DUP7"
    },
    "16437": {
      "op": "ADD"
    },
    "16438": {
      "op": "MLOAD"
    },
    "16439": {
      "op": "DUP3"
    },
    "16440": {
      "op": "SSTORE"
    },
    "16441": {
      "op": "SWAP5"
    },
    "16442": {
      "op": "DUP5"
    },
    "16443": {
      "op": "ADD"
    },
    "16444": {
      "op": "SWAP5"
    },
    "16445": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16447": {
      "op": "SWAP1"
    },
    "16448": {
      "op": "SWAP2"
    },
    "16449": {
      "op": "ADD"
    },
    "16450": {
      "op": "SWAP1"
    },
    "16451": {
      "op": "DUP5"
    },
    "16452": {
      "op": "ADD"
    },
    "16453": {
      "op": "PUSH2",
      "value": "0x402A"
    },
    "16456": {
      "op": "JUMP"
    },
    "16457": {
      "op": "JUMPDEST"
    },
    "16458": {
      "op": "POP"
    },
    "16459": {
      "op": "DUP6"
    },
    "16460": {
      "op": "DUP3"
    },
    "16461": {
      "op": "LT"
    },
    "16462": {
      "op": "ISZERO"
    },
    "16463": {
      "op": "PUSH2",
      "value": "0x4067"
    },
    "16466": {
      "op": "JUMPI"
    },
    "16467": {
      "op": "DUP8"
    },
    "16468": {
      "op": "DUP6"
    },
    "16469": {
      "op": "ADD"
    },
    "16470": {
      "op": "MLOAD"
    },
    "16471": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16473": {
      "op": "NOT"
    },
    "16474": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "16476": {
      "op": "DUP9"
    },
    "16477": {
      "op": "SWAP1"
    },
    "16478": {
      "op": "SHL"
    },
    "16479": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "16481": {
      "op": "AND"
    },
    "16482": {
      "op": "SHR"
    },
    "16483": {
      "op": "NOT"
    },
    "16484": {
      "op": "AND"
    },
    "16485": {
      "op": "DUP2"
    },
    "16486": {
      "op": "SSTORE"
    },
    "16487": {
      "op": "JUMPDEST"
    },
    "16488": {
      "op": "POP"
    },
    "16489": {
      "op": "POP"
    },
    "16490": {
      "op": "POP"
    },
    "16491": {
      "op": "POP"
    },
    "16492": {
      "op": "POP"
    },
    "16493": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16495": {
      "op": "SWAP1"
    },
    "16496": {
      "op": "DUP2"
    },
    "16497": {
      "op": "SHL"
    },
    "16498": {
      "op": "ADD"
    },
    "16499": {
      "op": "SWAP1"
    },
    "16500": {
      "op": "SSTORE"
    },
    "16501": {
      "op": "POP"
    },
    "16502": {
      "jump": "o",
      "op": "JUMP"
    },
    "16503": {
      "op": "JUMPDEST"
    },
    "16504": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "16509": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "16511": {
      "op": "SHL"
    },
    "16512": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16514": {
      "op": "MSTORE"
    },
    "16515": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "16517": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "16519": {
      "op": "MSTORE"
    },
    "16520": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "16522": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16524": {
      "op": "REVERT"
    },
    "16525": {
      "op": "JUMPDEST"
    },
    "16526": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16528": {
      "op": "DUP3"
    },
    "16529": {
      "op": "NOT"
    },
    "16530": {
      "op": "DUP3"
    },
    "16531": {
      "op": "GT"
    },
    "16532": {
      "op": "ISZERO"
    },
    "16533": {
      "op": "PUSH2",
      "value": "0x40A0"
    },
    "16536": {
      "op": "JUMPI"
    },
    "16537": {
      "op": "PUSH2",
      "value": "0x40A0"
    },
    "16540": {
      "op": "PUSH2",
      "value": "0x4077"
    },
    "16543": {
      "jump": "i",
      "op": "JUMP"
    },
    "16544": {
      "op": "JUMPDEST"
    },
    "16545": {
      "op": "POP"
    },
    "16546": {
      "op": "ADD"
    },
    "16547": {
      "op": "SWAP1"
    },
    "16548": {
      "jump": "o",
      "op": "JUMP"
    },
    "16549": {
      "op": "JUMPDEST"
    },
    "16550": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16552": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "16555": {
      "op": "DUP4"
    },
    "16556": {
      "op": "DUP2"
    },
    "16557": {
      "op": "AND"
    },
    "16558": {
      "op": "SWAP1"
    },
    "16559": {
      "op": "DUP4"
    },
    "16560": {
      "op": "AND"
    },
    "16561": {
      "op": "DUP2"
    },
    "16562": {
      "op": "DUP2"
    },
    "16563": {
      "op": "LT"
    },
    "16564": {
      "op": "ISZERO"
    },
    "16565": {
      "op": "PUSH2",
      "value": "0x40C0"
    },
    "16568": {
      "op": "JUMPI"
    },
    "16569": {
      "op": "PUSH2",
      "value": "0x40C0"
    },
    "16572": {
      "op": "PUSH2",
      "value": "0x4077"
    },
    "16575": {
      "jump": "i",
      "op": "JUMP"
    },
    "16576": {
      "op": "JUMPDEST"
    },
    "16577": {
      "op": "SUB"
    },
    "16578": {
      "op": "SWAP4"
    },
    "16579": {
      "op": "SWAP3"
    },
    "16580": {
      "op": "POP"
    },
    "16581": {
      "op": "POP"
    },
    "16582": {
      "op": "POP"
    },
    "16583": {
      "jump": "o",
      "op": "JUMP"
    },
    "16584": {
      "op": "JUMPDEST"
    },
    "16585": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16587": {
      "op": "DUP3"
    },
    "16588": {
      "op": "DUP3"
    },
    "16589": {
      "op": "LT"
    },
    "16590": {
      "op": "ISZERO"
    },
    "16591": {
      "op": "PUSH2",
      "value": "0x40DA"
    },
    "16594": {
      "op": "JUMPI"
    },
    "16595": {
      "op": "PUSH2",
      "value": "0x40DA"
    },
    "16598": {
      "op": "PUSH2",
      "value": "0x4077"
    },
    "16601": {
      "jump": "i",
      "op": "JUMP"
    },
    "16602": {
      "op": "JUMPDEST"
    },
    "16603": {
      "op": "POP"
    },
    "16604": {
      "op": "SUB"
    },
    "16605": {
      "op": "SWAP1"
    },
    "16606": {
      "jump": "o",
      "op": "JUMP"
    },
    "16607": {
      "op": "JUMPDEST"
    },
    "16608": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "16614": {
      "op": "DUP6"
    },
    "16615": {
      "op": "AND"
    },
    "16616": {
      "op": "DUP2"
    },
    "16617": {
      "op": "MSTORE"
    },
    "16618": {
      "op": "DUP4"
    },
    "16619": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16621": {
      "op": "DUP3"
    },
    "16622": {
      "op": "ADD"
    },
    "16623": {
      "op": "MSTORE"
    },
    "16624": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "16626": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "16628": {
      "op": "DUP3"
    },
    "16629": {
      "op": "ADD"
    },
    "16630": {
      "op": "MSTORE"
    },
    "16631": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16633": {
      "op": "PUSH2",
      "value": "0x4105"
    },
    "16636": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "16638": {
      "op": "DUP4"
    },
    "16639": {
      "op": "ADD"
    },
    "16640": {
      "op": "DUP6"
    },
    "16641": {
      "op": "PUSH2",
      "value": "0x35A2"
    },
    "16644": {
      "jump": "i",
      "op": "JUMP"
    },
    "16645": {
      "op": "JUMPDEST"
    },
    "16646": {
      "op": "SWAP1"
    },
    "16647": {
      "op": "POP"
    },
    "16648": {
      "op": "DUP3"
    },
    "16649": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "16651": {
      "op": "DUP4"
    },
    "16652": {
      "op": "ADD"
    },
    "16653": {
      "op": "MSTORE"
    },
    "16654": {
      "op": "SWAP6"
    },
    "16655": {
      "op": "SWAP5"
    },
    "16656": {
      "op": "POP"
    },
    "16657": {
      "op": "POP"
    },
    "16658": {
      "op": "POP"
    },
    "16659": {
      "op": "POP"
    },
    "16660": {
      "op": "POP"
    },
    "16661": {
      "jump": "o",
      "op": "JUMP"
    },
    "16662": {
      "op": "JUMPDEST"
    },
    "16663": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16665": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16667": {
      "op": "DUP3"
    },
    "16668": {
      "op": "ADD"
    },
    "16669": {
      "op": "PUSH2",
      "value": "0x4128"
    },
    "16672": {
      "op": "JUMPI"
    },
    "16673": {
      "op": "PUSH2",
      "value": "0x4128"
    },
    "16676": {
      "op": "PUSH2",
      "value": "0x4077"
    },
    "16679": {
      "jump": "i",
      "op": "JUMP"
    },
    "16680": {
      "op": "JUMPDEST"
    },
    "16681": {
      "op": "POP"
    },
    "16682": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16684": {
      "op": "ADD"
    },
    "16685": {
      "op": "SWAP1"
    },
    "16686": {
      "jump": "o",
      "op": "JUMP"
    },
    "16687": {
      "op": "JUMPDEST"
    },
    "16688": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16690": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16692": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "16694": {
      "op": "SHL"
    },
    "16695": {
      "op": "SUB"
    },
    "16696": {
      "op": "DUP4"
    },
    "16697": {
      "op": "GT"
    },
    "16698": {
      "op": "ISZERO"
    },
    "16699": {
      "op": "PUSH2",
      "value": "0x4146"
    },
    "16702": {
      "op": "JUMPI"
    },
    "16703": {
      "op": "PUSH2",
      "value": "0x4146"
    },
    "16706": {
      "op": "PUSH2",
      "value": "0x3612"
    },
    "16709": {
      "jump": "i",
      "op": "JUMP"
    },
    "16710": {
      "op": "JUMPDEST"
    },
    "16711": {
      "op": "PUSH2",
      "value": "0x415A"
    },
    "16714": {
      "op": "DUP4"
    },
    "16715": {
      "op": "PUSH2",
      "value": "0x4154"
    },
    "16718": {
      "op": "DUP4"
    },
    "16719": {
      "op": "SLOAD"
    },
    "16720": {
      "op": "PUSH2",
      "value": "0x3DA4"
    },
    "16723": {
      "jump": "i",
      "op": "JUMP"
    },
    "16724": {
      "op": "JUMPDEST"
    },
    "16725": {
      "op": "DUP4"
    },
    "16726": {
      "op": "PUSH2",
      "value": "0x3F69"
    },
    "16729": {
      "jump": "i",
      "op": "JUMP"
    },
    "16730": {
      "op": "JUMPDEST"
    },
    "16731": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16733": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "16735": {
      "op": "DUP5"
    },
    "16736": {
      "op": "GT"
    },
    "16737": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16739": {
      "op": "DUP2"
    },
    "16740": {
      "op": "EQ"
    },
    "16741": {
      "op": "PUSH2",
      "value": "0x418E"
    },
    "16744": {
      "op": "JUMPI"
    },
    "16745": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16747": {
      "op": "DUP6"
    },
    "16748": {
      "op": "ISZERO"
    },
    "16749": {
      "op": "PUSH2",
      "value": "0x4176"
    },
    "16752": {
      "op": "JUMPI"
    },
    "16753": {
      "op": "POP"
    },
    "16754": {
      "op": "DUP4"
    },
    "16755": {
      "op": "DUP3"
    },
    "16756": {
      "op": "ADD"
    },
    "16757": {
      "op": "CALLDATALOAD"
    },
    "16758": {
      "op": "JUMPDEST"
    },
    "16759": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16761": {
      "op": "NOT"
    },
    "16762": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "16764": {
      "op": "DUP8"
    },
    "16765": {
      "op": "SWAP1"
    },
    "16766": {
      "op": "SHL"
    },
    "16767": {
      "op": "SHR"
    },
    "16768": {
      "op": "NOT"
    },
    "16769": {
      "op": "AND"
    },
    "16770": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16772": {
      "op": "DUP7"
    },
    "16773": {
      "op": "SWAP1"
    },
    "16774": {
      "op": "SHL"
    },
    "16775": {
      "op": "OR"
    },
    "16776": {
      "op": "DUP4"
    },
    "16777": {
      "op": "SSTORE"
    },
    "16778": {
      "op": "PUSH2",
      "value": "0x21AB"
    },
    "16781": {
      "op": "JUMP"
    },
    "16782": {
      "op": "JUMPDEST"
    },
    "16783": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16785": {
      "op": "DUP4"
    },
    "16786": {
      "op": "DUP2"
    },
    "16787": {
      "op": "MSTORE"
    },
    "16788": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16790": {
      "op": "SWAP1"
    },
    "16791": {
      "op": "KECCAK256"
    },
    "16792": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "16794": {
      "op": "NOT"
    },
    "16795": {
      "op": "DUP7"
    },
    "16796": {
      "op": "AND"
    },
    "16797": {
      "op": "SWAP1"
    },
    "16798": {
      "op": "DUP4"
    },
    "16799": {
      "op": "JUMPDEST"
    },
    "16800": {
      "op": "DUP3"
    },
    "16801": {
      "op": "DUP2"
    },
    "16802": {
      "op": "LT"
    },
    "16803": {
      "op": "ISZERO"
    },
    "16804": {
      "op": "PUSH2",
      "value": "0x41BF"
    },
    "16807": {
      "op": "JUMPI"
    },
    "16808": {
      "op": "DUP7"
    },
    "16809": {
      "op": "DUP6"
    },
    "16810": {
      "op": "ADD"
    },
    "16811": {
      "op": "CALLDATALOAD"
    },
    "16812": {
      "op": "DUP3"
    },
    "16813": {
      "op": "SSTORE"
    },
    "16814": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16816": {
      "op": "SWAP5"
    },
    "16817": {
      "op": "DUP6"
    },
    "16818": {
      "op": "ADD"
    },
    "16819": {
      "op": "SWAP5"
    },
    "16820": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16822": {
      "op": "SWAP1"
    },
    "16823": {
      "op": "SWAP3"
    },
    "16824": {
      "op": "ADD"
    },
    "16825": {
      "op": "SWAP2"
    },
    "16826": {
      "op": "ADD"
    },
    "16827": {
      "op": "PUSH2",
      "value": "0x419F"
    },
    "16830": {
      "op": "JUMP"
    },
    "16831": {
      "op": "JUMPDEST"
    },
    "16832": {
      "op": "POP"
    },
    "16833": {
      "op": "DUP7"
    },
    "16834": {
      "op": "DUP3"
    },
    "16835": {
      "op": "LT"
    },
    "16836": {
      "op": "ISZERO"
    },
    "16837": {
      "op": "PUSH2",
      "value": "0x41DC"
    },
    "16840": {
      "op": "JUMPI"
    },
    "16841": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16843": {
      "op": "NOT"
    },
    "16844": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "16846": {
      "op": "DUP9"
    },
    "16847": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "16849": {
      "op": "SHL"
    },
    "16850": {
      "op": "AND"
    },
    "16851": {
      "op": "SHR"
    },
    "16852": {
      "op": "NOT"
    },
    "16853": {
      "op": "DUP5"
    },
    "16854": {
      "op": "DUP8"
    },
    "16855": {
      "op": "ADD"
    },
    "16856": {
      "op": "CALLDATALOAD"
    },
    "16857": {
      "op": "AND"
    },
    "16858": {
      "op": "DUP2"
    },
    "16859": {
      "op": "SSTORE"
    },
    "16860": {
      "op": "JUMPDEST"
    },
    "16861": {
      "op": "POP"
    },
    "16862": {
      "op": "POP"
    },
    "16863": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16865": {
      "op": "DUP6"
    },
    "16866": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16868": {
      "op": "SHL"
    },
    "16869": {
      "op": "ADD"
    },
    "16870": {
      "op": "DUP4"
    },
    "16871": {
      "op": "SSTORE"
    },
    "16872": {
      "op": "POP"
    },
    "16873": {
      "op": "POP"
    },
    "16874": {
      "op": "POP"
    },
    "16875": {
      "op": "POP"
    },
    "16876": {
      "op": "POP"
    },
    "16877": {
      "jump": "o",
      "op": "JUMP"
    },
    "16878": {
      "op": "JUMPDEST"
    },
    "16879": {
      "op": "DUP4"
    },
    "16880": {
      "op": "DUP2"
    },
    "16881": {
      "op": "MSTORE"
    },
    "16882": {
      "op": "DUP3"
    },
    "16883": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16885": {
      "op": "DUP3"
    },
    "16886": {
      "op": "ADD"
    },
    "16887": {
      "op": "MSTORE"
    },
    "16888": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "16890": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "16892": {
      "op": "DUP3"
    },
    "16893": {
      "op": "ADD"
    },
    "16894": {
      "op": "MSTORE"
    },
    "16895": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16897": {
      "op": "PUSH2",
      "value": "0x140"
    },
    "16900": {
      "op": "DUP1"
    },
    "16901": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "16903": {
      "op": "DUP5"
    },
    "16904": {
      "op": "ADD"
    },
    "16905": {
      "op": "MSTORE"
    },
    "16906": {
      "op": "PUSH2",
      "value": "0x4217"
    },
    "16909": {
      "op": "PUSH2",
      "value": "0x1A0"
    },
    "16912": {
      "op": "DUP5"
    },
    "16913": {
      "op": "ADD"
    },
    "16914": {
      "op": "DUP6"
    },
    "16915": {
      "op": "PUSH2",
      "value": "0x3ED9"
    },
    "16918": {
      "jump": "i",
      "op": "JUMP"
    },
    "16919": {
      "op": "JUMPDEST"
    },
    "16920": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16922": {
      "op": "DUP6"
    },
    "16923": {
      "op": "ADD"
    },
    "16924": {
      "op": "SLOAD"
    },
    "16925": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "16931": {
      "op": "AND"
    },
    "16932": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "16938": {
      "op": "DUP2"
    },
    "16939": {
      "op": "AND"
    },
    "16940": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "16942": {
      "op": "DUP7"
    },
    "16943": {
      "op": "ADD"
    },
    "16944": {
      "op": "MSTORE"
    },
    "16945": {
      "op": "POP"
    },
    "16946": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "16948": {
      "op": "DUP6"
    },
    "16949": {
      "op": "ADD"
    },
    "16950": {
      "op": "SLOAD"
    },
    "16951": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "16953": {
      "op": "DUP6"
    },
    "16954": {
      "op": "ADD"
    },
    "16955": {
      "op": "MSTORE"
    },
    "16956": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "16958": {
      "op": "DUP6"
    },
    "16959": {
      "op": "ADD"
    },
    "16960": {
      "op": "SLOAD"
    },
    "16961": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "16963": {
      "op": "DUP6"
    },
    "16964": {
      "op": "ADD"
    },
    "16965": {
      "op": "MSTORE"
    },
    "16966": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "16968": {
      "op": "DUP6"
    },
    "16969": {
      "op": "ADD"
    },
    "16970": {
      "op": "SLOAD"
    },
    "16971": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "16973": {
      "op": "DUP2"
    },
    "16974": {
      "op": "AND"
    },
    "16975": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "16977": {
      "op": "DUP7"
    },
    "16978": {
      "op": "ADD"
    },
    "16979": {
      "op": "MSTORE"
    },
    "16980": {
      "op": "PUSH1",
      "value": "0x8"
    },
    "16982": {
      "op": "DUP2"
    },
    "16983": {
      "op": "SWAP1"
    },
    "16984": {
      "op": "SHR"
    },
    "16985": {
      "op": "PUSH3",
      "value": "0xFFFFFF"
    },
    "16989": {
      "op": "AND"
    },
    "16990": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "16993": {
      "op": "DUP7"
    },
    "16994": {
      "op": "ADD"
    },
    "16995": {
      "op": "MSTORE"
    },
    "16996": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16998": {
      "op": "DUP2"
    },
    "16999": {
      "op": "SWAP1"
    },
    "17000": {
      "op": "SHR"
    },
    "17001": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17003": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17005": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "17007": {
      "op": "SHL"
    },
    "17008": {
      "op": "SUB"
    },
    "17009": {
      "op": "AND"
    },
    "17010": {
      "op": "PUSH2",
      "value": "0x120"
    },
    "17013": {
      "op": "DUP7"
    },
    "17014": {
      "op": "ADD"
    },
    "17015": {
      "op": "MSTORE"
    },
    "17016": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "17019": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "17021": {
      "op": "DUP3"
    },
    "17022": {
      "op": "SWAP1"
    },
    "17023": {
      "op": "SHR"
    },
    "17024": {
      "op": "DUP2"
    },
    "17025": {
      "op": "AND"
    },
    "17026": {
      "op": "DUP5"
    },
    "17027": {
      "op": "DUP8"
    },
    "17028": {
      "op": "ADD"
    },
    "17029": {
      "op": "MSTORE"
    },
    "17030": {
      "op": "PUSH2",
      "value": "0x429B"
    },
    "17033": {
      "op": "PUSH2",
      "value": "0x160"
    },
    "17036": {
      "op": "DUP8"
    },
    "17037": {
      "op": "ADD"
    },
    "17038": {
      "op": "DUP3"
    },
    "17039": {
      "op": "DUP5"
    },
    "17040": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "17042": {
      "op": "SHR"
    },
    "17043": {
      "op": "AND"
    },
    "17044": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "17047": {
      "op": "AND"
    },
    "17048": {
      "op": "SWAP1"
    },
    "17049": {
      "op": "MSTORE"
    },
    "17050": {
      "op": "JUMP"
    },
    "17051": {
      "op": "JUMPDEST"
    },
    "17052": {
      "op": "POP"
    },
    "17053": {
      "op": "PUSH1",
      "value": "0x90"
    },
    "17055": {
      "op": "DUP2"
    },
    "17056": {
      "op": "SWAP1"
    },
    "17057": {
      "op": "SHR"
    },
    "17058": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "17064": {
      "op": "AND"
    },
    "17065": {
      "op": "PUSH2",
      "value": "0x180"
    },
    "17068": {
      "op": "DUP7"
    },
    "17069": {
      "op": "ADD"
    },
    "17070": {
      "op": "MSTORE"
    },
    "17071": {
      "op": "POP"
    },
    "17072": {
      "op": "SWAP7"
    },
    "17073": {
      "op": "SWAP6"
    },
    "17074": {
      "op": "POP"
    },
    "17075": {
      "op": "POP"
    },
    "17076": {
      "op": "POP"
    },
    "17077": {
      "op": "POP"
    },
    "17078": {
      "op": "POP"
    },
    "17079": {
      "op": "POP"
    },
    "17080": {
      "jump": "o",
      "op": "JUMP"
    },
    "17081": {
      "op": "JUMPDEST"
    },
    "17082": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17084": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17086": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17088": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "17090": {
      "op": "SHL"
    },
    "17091": {
      "op": "SUB"
    },
    "17092": {
      "op": "DUP1"
    },
    "17093": {
      "op": "DUP5"
    },
    "17094": {
      "op": "AND"
    },
    "17095": {
      "op": "DUP1"
    },
    "17096": {
      "op": "PUSH2",
      "value": "0x42E1"
    },
    "17099": {
      "op": "JUMPI"
    },
    "17100": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "17105": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "17107": {
      "op": "SHL"
    },
    "17108": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17110": {
      "op": "MSTORE"
    },
    "17111": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "17113": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "17115": {
      "op": "MSTORE"
    },
    "17116": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "17118": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17120": {
      "op": "REVERT"
    },
    "17121": {
      "op": "JUMPDEST"
    },
    "17122": {
      "op": "SWAP3"
    },
    "17123": {
      "op": "AND"
    },
    "17124": {
      "op": "SWAP2"
    },
    "17125": {
      "op": "SWAP1"
    },
    "17126": {
      "op": "SWAP2"
    },
    "17127": {
      "op": "DIV"
    },
    "17128": {
      "op": "SWAP3"
    },
    "17129": {
      "op": "SWAP2"
    },
    "17130": {
      "op": "POP"
    },
    "17131": {
      "op": "POP"
    },
    "17132": {
      "jump": "o",
      "op": "JUMP"
    },
    "17133": {
      "op": "JUMPDEST"
    },
    "17134": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17136": {
      "op": "DUP1"
    },
    "17137": {
      "op": "DUP3"
    },
    "17138": {
      "op": "MSTORE"
    },
    "17139": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "17141": {
      "op": "SWAP1"
    },
    "17142": {
      "op": "DUP3"
    },
    "17143": {
      "op": "ADD"
    },
    "17144": {
      "op": "MSTORE"
    },
    "17145": {
      "op": "PUSH20",
      "value": "0x2330B4B632B2103A379039B2B7321022BA3432B9"
    },
    "17166": {
      "op": "PUSH1",
      "value": "0x61"
    },
    "17168": {
      "op": "SHL"
    },
    "17169": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "17171": {
      "op": "DUP3"
    },
    "17172": {
      "op": "ADD"
    },
    "17173": {
      "op": "MSTORE"
    },
    "17174": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "17176": {
      "op": "ADD"
    },
    "17177": {
      "op": "SWAP1"
    },
    "17178": {
      "jump": "o",
      "op": "JUMP"
    },
    "17179": {
      "op": "JUMPDEST"
    },
    "17180": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17182": {
      "op": "DUP1"
    },
    "17183": {
      "op": "DUP3"
    },
    "17184": {
      "op": "SLT"
    },
    "17185": {
      "op": "DUP1"
    },
    "17186": {
      "op": "ISZERO"
    },
    "17187": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17189": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17191": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "17193": {
      "op": "SHL"
    },
    "17194": {
      "op": "SUB"
    },
    "17195": {
      "op": "DUP5"
    },
    "17196": {
      "op": "SWAP1"
    },
    "17197": {
      "op": "SUB"
    },
    "17198": {
      "op": "DUP6"
    },
    "17199": {
      "op": "SGT"
    },
    "17200": {
      "op": "AND"
    },
    "17201": {
      "op": "ISZERO"
    },
    "17202": {
      "op": "PUSH2",
      "value": "0x433D"
    },
    "17205": {
      "op": "JUMPI"
    },
    "17206": {
      "op": "PUSH2",
      "value": "0x433D"
    },
    "17209": {
      "op": "PUSH2",
      "value": "0x4077"
    },
    "17212": {
      "jump": "i",
      "op": "JUMP"
    },
    "17213": {
      "op": "JUMPDEST"
    },
    "17214": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17216": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "17218": {
      "op": "SHL"
    },
    "17219": {
      "op": "DUP4"
    },
    "17220": {
      "op": "SWAP1"
    },
    "17221": {
      "op": "SUB"
    },
    "17222": {
      "op": "DUP5"
    },
    "17223": {
      "op": "SLT"
    },
    "17224": {
      "op": "DUP2"
    },
    "17225": {
      "op": "AND"
    },
    "17226": {
      "op": "ISZERO"
    },
    "17227": {
      "op": "PUSH2",
      "value": "0x4356"
    },
    "17230": {
      "op": "JUMPI"
    },
    "17231": {
      "op": "PUSH2",
      "value": "0x4356"
    },
    "17234": {
      "op": "PUSH2",
      "value": "0x4077"
    },
    "17237": {
      "jump": "i",
      "op": "JUMP"
    },
    "17238": {
      "op": "JUMPDEST"
    },
    "17239": {
      "op": "POP"
    },
    "17240": {
      "op": "POP"
    },
    "17241": {
      "op": "ADD"
    },
    "17242": {
      "op": "SWAP1"
    },
    "17243": {
      "jump": "o",
      "op": "JUMP"
    },
    "17244": {
      "op": "JUMPDEST"
    },
    "17245": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17247": {
      "op": "DUP3"
    },
    "17248": {
      "op": "MLOAD"
    },
    "17249": {
      "op": "PUSH2",
      "value": "0x436E"
    },
    "17252": {
      "op": "DUP2"
    },
    "17253": {
      "op": "DUP5"
    },
    "17254": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17256": {
      "op": "DUP8"
    },
    "17257": {
      "op": "ADD"
    },
    "17258": {
      "op": "PUSH2",
      "value": "0x3576"
    },
    "17261": {
      "jump": "i",
      "op": "JUMP"
    },
    "17262": {
      "op": "JUMPDEST"
    },
    "17263": {
      "op": "SWAP2"
    },
    "17264": {
      "op": "SWAP1"
    },
    "17265": {
      "op": "SWAP2"
    },
    "17266": {
      "op": "ADD"
    },
    "17267": {
      "op": "SWAP3"
    },
    "17268": {
      "op": "SWAP2"
    },
    "17269": {
      "op": "POP"
    },
    "17270": {
      "op": "POP"
    },
    "17271": {
      "jump": "o",
      "op": "JUMP"
    },
    "17272": {
      "op": "JUMPDEST"
    },
    "17273": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17275": {
      "op": "DUP1"
    },
    "17276": {
      "op": "DUP4"
    },
    "17277": {
      "op": "SLOAD"
    },
    "17278": {
      "op": "PUSH2",
      "value": "0x4386"
    },
    "17281": {
      "op": "DUP2"
    },
    "17282": {
      "op": "PUSH2",
      "value": "0x3DA4"
    },
    "17285": {
      "jump": "i",
      "op": "JUMP"
    },
    "17286": {
      "op": "JUMPDEST"
    },
    "17287": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17289": {
      "op": "DUP3"
    },
    "17290": {
      "op": "DUP2"
    },
    "17291": {
      "op": "AND"
    },
    "17292": {
      "op": "DUP1"
    },
    "17293": {
      "op": "ISZERO"
    },
    "17294": {
      "op": "PUSH2",
      "value": "0x439E"
    },
    "17297": {
      "op": "JUMPI"
    },
    "17298": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17300": {
      "op": "DUP2"
    },
    "17301": {
      "op": "EQ"
    },
    "17302": {
      "op": "PUSH2",
      "value": "0x43B3"
    },
    "17305": {
      "op": "JUMPI"
    },
    "17306": {
      "op": "PUSH2",
      "value": "0x3E1E"
    },
    "17309": {
      "op": "JUMP"
    },
    "17310": {
      "op": "JUMPDEST"
    },
    "17311": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "17313": {
      "op": "NOT"
    },
    "17314": {
      "op": "DUP5"
    },
    "17315": {
      "op": "AND"
    },
    "17316": {
      "op": "DUP8"
    },
    "17317": {
      "op": "MSTORE"
    },
    "17318": {
      "op": "DUP3"
    },
    "17319": {
      "op": "ISZERO"
    },
    "17320": {
      "op": "ISZERO"
    },
    "17321": {
      "op": "DUP4"
    },
    "17322": {
      "op": "MUL"
    },
    "17323": {
      "op": "DUP8"
    },
    "17324": {
      "op": "ADD"
    },
    "17325": {
      "op": "SWAP5"
    },
    "17326": {
      "op": "POP"
    },
    "17327": {
      "op": "PUSH2",
      "value": "0x3E1E"
    },
    "17330": {
      "op": "JUMP"
    },
    "17331": {
      "op": "JUMPDEST"
    },
    "17332": {
      "op": "DUP8"
    },
    "17333": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17335": {
      "op": "MSTORE"
    },
    "17336": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17338": {
      "op": "DUP1"
    },
    "17339": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17341": {
      "op": "KECCAK256"
    },
    "17342": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17344": {
      "op": "JUMPDEST"
    },
    "17345": {
      "op": "DUP6"
    },
    "17346": {
      "op": "DUP2"
    },
    "17347": {
      "op": "LT"
    },
    "17348": {
      "op": "ISZERO"
    },
    "17349": {
      "op": "PUSH2",
      "value": "0x43D9"
    },
    "17352": {
      "op": "JUMPI"
    },
    "17353": {
      "op": "DUP2"
    },
    "17354": {
      "op": "SLOAD"
    },
    "17355": {
      "op": "DUP11"
    },
    "17356": {
      "op": "DUP3"
    },
    "17357": {
      "op": "ADD"
    },
    "17358": {
      "op": "MSTORE"
    },
    "17359": {
      "op": "SWAP1"
    },
    "17360": {
      "op": "DUP5"
    },
    "17361": {
      "op": "ADD"
    },
    "17362": {
      "op": "SWAP1"
    },
    "17363": {
      "op": "DUP3"
    },
    "17364": {
      "op": "ADD"
    },
    "17365": {
      "op": "PUSH2",
      "value": "0x43C0"
    },
    "17368": {
      "op": "JUMP"
    },
    "17369": {
      "op": "JUMPDEST"
    },
    "17370": {
      "op": "POP"
    },
    "17371": {
      "op": "POP"
    },
    "17372": {
      "op": "POP"
    },
    "17373": {
      "op": "SWAP6"
    },
    "17374": {
      "op": "SWAP1"
    },
    "17375": {
      "op": "SWAP2"
    },
    "17376": {
      "op": "ADD"
    },
    "17377": {
      "op": "SWAP7"
    },
    "17378": {
      "op": "SWAP6"
    },
    "17379": {
      "op": "POP"
    },
    "17380": {
      "op": "POP"
    },
    "17381": {
      "op": "POP"
    },
    "17382": {
      "op": "POP"
    },
    "17383": {
      "op": "POP"
    },
    "17384": {
      "op": "POP"
    },
    "17385": {
      "jump": "o",
      "op": "JUMP"
    },
    "17386": {
      "op": "JUMPDEST"
    },
    "17387": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "17389": {
      "op": "DUP2"
    },
    "17390": {
      "op": "MSTORE"
    },
    "17391": {
      "op": "DUP8"
    },
    "17392": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "17394": {
      "op": "DUP3"
    },
    "17395": {
      "op": "ADD"
    },
    "17396": {
      "op": "MSTORE"
    },
    "17397": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17399": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "17402": {
      "op": "DUP10"
    },
    "17403": {
      "op": "DUP12"
    },
    "17404": {
      "op": "DUP3"
    },
    "17405": {
      "op": "DUP6"
    },
    "17406": {
      "op": "ADD"
    },
    "17407": {
      "op": "CALLDATACOPY"
    },
    "17408": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17410": {
      "op": "DUP11"
    },
    "17411": {
      "op": "DUP5"
    },
    "17412": {
      "op": "ADD"
    },
    "17413": {
      "op": "DUP3"
    },
    "17414": {
      "op": "ADD"
    },
    "17415": {
      "op": "MSTORE"
    },
    "17416": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "17422": {
      "op": "SWAP9"
    },
    "17423": {
      "op": "DUP10"
    },
    "17424": {
      "op": "AND"
    },
    "17425": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17427": {
      "op": "DUP5"
    },
    "17428": {
      "op": "ADD"
    },
    "17429": {
      "op": "MSTORE"
    },
    "17430": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "17432": {
      "op": "SWAP8"
    },
    "17433": {
      "op": "SWAP1"
    },
    "17434": {
      "op": "SWAP8"
    },
    "17435": {
      "op": "AND"
    },
    "17436": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "17438": {
      "op": "DUP4"
    },
    "17439": {
      "op": "ADD"
    },
    "17440": {
      "op": "MSTORE"
    },
    "17441": {
      "op": "POP"
    },
    "17442": {
      "op": "PUSH3",
      "value": "0xFFFFFF"
    },
    "17446": {
      "op": "SWAP5"
    },
    "17447": {
      "op": "SWAP1"
    },
    "17448": {
      "op": "SWAP5"
    },
    "17449": {
      "op": "AND"
    },
    "17450": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "17452": {
      "op": "DUP6"
    },
    "17453": {
      "op": "ADD"
    },
    "17454": {
      "op": "MSTORE"
    },
    "17455": {
      "op": "SWAP2"
    },
    "17456": {
      "op": "DUP6"
    },
    "17457": {
      "op": "AND"
    },
    "17458": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "17460": {
      "op": "DUP5"
    },
    "17461": {
      "op": "ADD"
    },
    "17462": {
      "op": "MSTORE"
    },
    "17463": {
      "op": "SWAP1"
    },
    "17464": {
      "op": "SWAP4"
    },
    "17465": {
      "op": "AND"
    },
    "17466": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "17468": {
      "op": "DUP3"
    },
    "17469": {
      "op": "ADD"
    },
    "17470": {
      "op": "MSTORE"
    },
    "17471": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "17474": {
      "op": "SWAP1"
    },
    "17475": {
      "op": "SWAP3"
    },
    "17476": {
      "op": "AND"
    },
    "17477": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "17479": {
      "op": "DUP4"
    },
    "17480": {
      "op": "ADD"
    },
    "17481": {
      "op": "MSTORE"
    },
    "17482": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "17484": {
      "op": "SWAP1"
    },
    "17485": {
      "op": "SWAP3"
    },
    "17486": {
      "op": "ADD"
    },
    "17487": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "17489": {
      "op": "NOT"
    },
    "17490": {
      "op": "AND"
    },
    "17491": {
      "op": "ADD"
    },
    "17492": {
      "op": "ADD"
    },
    "17493": {
      "op": "SWAP2"
    },
    "17494": {
      "op": "SWAP1"
    },
    "17495": {
      "op": "POP"
    },
    "17496": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "8e62ff751cd938c5334b86f17fd9910cb96ce354",
  "source": "pragma solidity 0.8.15;\n// SPDX-License-Identifier: Unlicensed\n\nimport \"./wizards.sol\";\nimport \"./interfaces/IERC20.sol\";\nimport \"./interfaces/IERC165.sol\";\nimport \"./interfaces/IERC721.sol\";\nimport \"./interfaces/IERC721Enumerable.sol\";\n//import \"./helpers/base64.sol\";\nimport './helpers/ERC721A.sol';\nimport './helpers/ERC721.sol';\nimport './helpers/ERC165.sol';\nimport './helpers/Ownable.sol';\nimport './helpers/Context.sol';\nimport './helpers/ReentrancyGuard.sol';\nimport './helpers/ERC2981Collection.sol';\nimport './libraries/Strings.sol';\nimport './libraries/Address.sol';\nimport './WizardTower.sol';\nimport {DoubleEndedQueue} from \"@openzeppelin/contracts/utils/structs/DoubleEndedQueue.sol\";\n\n//contract BMMultipass is ERC721Enumerable, ReentrancyGuard, Ownable {\ncontract Governance is ReentrancyGuard, Ownable {\n\n//    IERC20  ecosystemTokens;\n    Wizards wizardsNFT;\n    WizardTower wizardTower;\n\n    // the value stored here is shifted over by one because 0 means no vote, 1 means voting for slot 0\n    mapping (uint256 => mapping (uint256 => uint256)) public proposalToNFTVotes;\n\n    // used to find active tasks\n    struct TaskType {\n        mapping (uint40 => uint256) nextActiveTimeThreshold; // for recurring tasks -- todo -- add waitTime or ...\n        string IPFSHash; // holds description\n        bool paused;\n        uint40 proposalID; // proposal ID or 0 if task\n        uint8 numFieldsToHash;\n        uint24 timeBonus;\n        uint40 begTimestamp;\n        uint40 endTimestamp;\n        uint16 availableSlots;\n    }\n\n    // include parent???\n    struct Task {\n        string IPFSHash; // holds description\n        uint40 NFTID; // wizard ID of who is assigned task\n        bytes32 hash; // hashed input to be validated\n        bytes32 refuterHash; // correct hash according to refuter\n        uint8 numFieldsToHash; // input fields\n        uint24 timeBonus; // increases Wizard's activation time, in seconds\n//        uint8 strikes; // number of times confirmation has failed, use existence of refuterID\n        uint80 payment; //\n        uint16 verifierID; // wizardId of Verifier\n        uint16 refuterID; // wizardId of Verifier\n        uint40 verificationReservedTimestamp; // time when verification period ends\n    }\n\n    struct Proposal {\n        string IPFSHash;\n        uint16 numberOfOptions;\n        uint16[8] votes;\n        uint40 totalVotes;\n        uint40 begTimestamp;\n        uint40 endTimestamp;\n    }\n\n\n\n    TaskType[] public taskTypes; // we must keep task types low in quantity to avoid gas issues\n\n    // todo -- these should be dequeues\n    DoubleEndedQueue.Bytes32Deque public tasksWaitingConfirmation;\n//    uint256[] public tasksVerifying; // reduce size?\n\n//    DoubleEndedQueue.Bytes32Deque  public myQueue;\n\n    mapping (uint256 => Proposal) public proposals;\n    uint256 totalProposals;\n\n    mapping (uint256 => Task) public tasks;\n    uint256 public totalTasksAttempted;\n\n    // todo -- Adjustable\n    uint256 verificationTime = 10*60; // 10 minutes\n    uint256 taskVerificationTimeBonus = 1 days; // 1 day\n    uint256 boardSeats = 3;\n\n    event VerificationAssigned(uint256 wizardId, uint256 taskId, Task myTask);\n    event VerificationFailed(uint256 VerifierIdFirst, uint256 VerifierIdSecond, uint256 taskId);\n    event VerificationSucceeded(uint256 taskDoer, uint256 Verifier, uint256 taskId, bytes32 hash, bool isHashCorrect);\n    event HashTesting(bytes32 hash, bool isHashCorrect, bytes32 firstEncoded, bytes firstUnencoded);\n    event NewTaskTypeCreated(string _IPFSHash,uint40 _proposalID, uint8 _numFieldsToHash, uint24 _timeBonus,\n          uint40 _begTimestamp, uint40 _endTimestamp, uint16 _availableSlots);\n    event TaskCompleted(uint256 wizardId, uint256 taskId, string IPFSHash, uint256 data);\n\n    /////////////////////////////\n    //////  TEMP Functions ///////\n    /////////////////////////////\n\n    /*\n    function getFront() view external returns ( uint256) {\n        require(DoubleEndedQueue.length(myQueue)!=0, \"Empty Dequeue\");\n        return uint256(DoubleEndedQueue.front(myQueue));\n    }\n\n    function pushFront(bytes32 _data) external {\n    //  Task memory myTask = Task(\"0 - MYIPFSHASH\", 1, keccak256(4), 3, 4, 5, 6, 7);\n        DoubleEndedQueue.pushFront(myQueue,bytes32(_data));\n    }\n    */\n\n    /////////////////////////////\n    //////  Get Functions ///////\n    /////////////////////////////\n\n    function isCallerOnBoard() public view returns (bool) {\n        for(uint256 i =1; i <= boardSeats;){\n            if(wizardsNFT.ownerOf(wizardTower.getWizardOnFloor(i)) == msg.sender ){\n                return true;\n            }\n            unchecked{++i;}\n        }\n        return false;\n    }\n\n    function isMyWizardOnBoard(uint256 _wizId) public view returns (bool) {\n        if(wizardsNFT.ownerOf(_wizId)==msg.sender && wizardTower.getFloorGivenWizard(_wizId) <=boardSeats){\n            return true;\n        }\n        return false;\n    }\n\n\n/*\n// todo -- delete this helper function\n    function getTaskTypeFields(uint256 _id) external view returns (uint8 ) {\n        return taskTypes[_id].numFieldsToHash;\n    }\n*/\n    function getTaskById(uint256 _taskId) external view returns (Task memory) {\n        return tasks[_taskId];\n    }\n\n    function getVotes(uint256 proposalID) external view returns (uint16[] memory) {\n        require(proposalID < totalProposals, \"no such proposal\");\n        uint16[] memory voteArray = new uint16[](proposals[proposalID].numberOfOptions);\n        for(uint256 i = 0; i< voteArray.length; i++){\n            voteArray[i] = proposals[proposalID].votes[i];\n        }\n        return voteArray;\n    }\n\n    function getWinningVote(uint256 proposalID) external view returns (uint256 ) {\n        require(proposalID < totalProposals, \"no such proposal\");\n        require( block.timestamp > proposals[proposalID].endTimestamp, \"voting still active\"); // todo -- end voting only on time? Or, what?\n        // todo -- is there a need to win by a certain percent?\n        uint256 winningVote;\n        uint256 winningVoteAmount;\n        uint256 tie=0;\n        for(uint256 i=0; i< proposals[proposalID].numberOfOptions; i++){ // start at 1 as 0 means no vote???\n            if(proposals[proposalID].votes[i] > winningVoteAmount) {\n                winningVoteAmount = proposals[proposalID].votes[i];\n                winningVote = i;\n                if (tie==1) { tie = 0;}\n            }\n            else if(proposals[proposalID].votes[i] == winningVoteAmount){\n                tie=1;\n            }\n        }\n        require(tie==0, \"there was a tie.\");\n        return winningVote;\n    }\n\n    // todo -- delete tasktype function\n\n    function areTasksAvailableToConfirm(uint256 _wizId) external view returns (bool) {\n        uint256 totalTasksSubmitted = DoubleEndedQueue.length(tasksWaitingConfirmation);\n        Task memory myTask;\n//        uint256 taskId;\n\n        // todo --implement randomness\n//        uint256[25] memory potentialTasks;\n\n        for(uint256 i =0; i < totalTasksSubmitted; ){\n            myTask = tasks[uint256(DoubleEndedQueue.at(tasksWaitingConfirmation,i))];\n            if( myTask.verificationReservedTimestamp < block.timestamp && myTask.NFTID != _wizId && myTask.refuterID!= _wizId){\n                return true;\n            }\n            unchecked{++i;}\n        }\n        return false;\n    }\n\n\n    function getTasksAssignedToWiz(uint40 _wizId) external view returns (Task[] memory, uint256[] memory) {\n        uint256 totalTasksSubmitted = DoubleEndedQueue.length(tasksWaitingConfirmation);\n        Task memory myTask;\n        uint256 taskId;\n        uint256 count=0;\n\n        for(uint256 i =0; i < totalTasksSubmitted; ){\n            taskId = uint256(DoubleEndedQueue.at(tasksWaitingConfirmation, i));\n            myTask = tasks[taskId];\n            if( myTask.verificationReservedTimestamp > block.timestamp && myTask.verifierID== _wizId){\n                unchecked{++count;}\n            }\n            unchecked{++i;}\n        }\n\n        // if no tasks, return empty array\n        if (count==0) {\n            Task[] memory myReturn= new Task[](1);\n            uint256[] memory myReturnUint= new uint256[](1);\n//            myReturn[0].NFTID=0;\n//            myReturn[0] = \"\";\n            return (myReturn, myReturnUint);\n        }\n\n        uint256 counter = 0;\n        Task[] memory myTasks = new Task[](count);\n        uint256[] memory myTaskIds = new uint256[](count);\n        for(uint256 i =0; i < totalTasksSubmitted; ){\n            taskId = uint256(DoubleEndedQueue.at(tasksWaitingConfirmation, i));\n            myTask = tasks[taskId];\n            if( myTask.verificationReservedTimestamp > block.timestamp && myTask.verifierID== _wizId){\n                myTasks[counter] = myTask;\n                myTaskIds[counter] = taskId;\n                unchecked{++counter;}\n                if(counter>count){break;}\n            }\n            unchecked{++i;}\n        }\n        return (myTasks, myTaskIds);\n    }\n\n\n    // todo -- see if we need to include IDs here -- may not need to\n    function getMyAvailableTaskTypes(uint40 _wizId) external view returns (string[] memory) {\n        uint256 count;\n        for(uint256 i=0; i< taskTypes.length;){\n            if(taskTypes[i].nextActiveTimeThreshold[_wizId] < block.timestamp\n            && taskTypes[i].begTimestamp <= block.timestamp && taskTypes[i].endTimestamp > block.timestamp\n            && taskTypes[i].availableSlots > 1\n            ) {\n                unchecked{++count;}\n            }\n//            else {\n//                string[] memory myReturn= new string[](1);\n//                myReturn[0] = \"\";\n//                return myReturn;\n//            }\n            unchecked{++i;}\n        }\n\n        // if no tasks, return empty array\n        if (count==0) {\n            string[] memory myReturn= new string[](1);\n            myReturn[0] = \"\";\n            return myReturn;\n        }\n\n        string[] memory myTasks = new string[](count);\n        uint256 counter = 0;\n        for(uint256 i=0; i< taskTypes.length;){\n            if(taskTypes[i].nextActiveTimeThreshold[_wizId] < block.timestamp\n            && taskTypes[i].begTimestamp <= block.timestamp && taskTypes[i].endTimestamp > block.timestamp\n            && taskTypes[i].availableSlots > 1\n            ) {\n                myTasks[counter] = taskTypes[i].IPFSHash;\n                unchecked{++counter;}\n                if(counter >= count) {\n                    break;\n                }\n            }\n            unchecked{++i;}\n        }\n        return myTasks;\n    }\n\n\n    /////////////////////////////\n    //////  Set Functions ///////\n    /////////////////////////////\n\n    function setNFTAddress(address _addy) external onlyOwner {\n        wizardsNFT = Wizards(_addy);\n    }\n\n\n//    function setERC20Address(address _addy) external onlyOwner {\n//        ecosystemTokens = IERC20(_addy);\n//    }\n\n    function deleteTaskTypeByIPFSHash(string memory _IPFSHash) external {\n        for(uint256 i=0; i<taskTypes.length;){\n            if(keccak256(abi.encodePacked(taskTypes[i].IPFSHash)) == keccak256(abi.encodePacked(_IPFSHash))){\n//                taskTypes[i] = taskTypes[taskTypes.length-1];\n                TaskType storage myTaskType = taskTypes[i];\n                TaskType storage displacedTaskType = taskTypes[taskTypes.length-1];\n//                myTaskType.nextActiveTimeThreshold = displacedTaskType.nextActiveTimeThreshold;\n                myTaskType = displacedTaskType;\n                delete taskTypes[taskTypes.length-1];\n                // todo see if this works at all\n//        mapping (uint40 => uint256) nextActiveTimeThreshold; // for recurring tasks -- todo -- add waitTime or ...\n//        string IPFSHash; // holds description\n//        bool paused;\n//        uint40 proposalID; // proposal ID or 0 if task\n//        uint8 numFieldsToHash;\n//        uint24 timeBonus;\n//        uint40 begTimestamp;\n//        uint40 endTimestamp;\n//        uint16 availableSlots;\n\n\n                delete taskTypes[taskTypes.length-1];\n                break;\n            }\n            unchecked{++i;}\n        }\n    }\n\n\n\n    //////////////////////////////\n    //////  Main Functions ///////\n    //////////////////////////////\n\n    /** @dev Constructor for HOADAO\n        @param _nft -- contract address for NFTs\n      */\n    constructor(address _nft, address _wizardTower){\n//        ecosystemTokens = IERC20(_erc20);\n        wizardsNFT = Wizards(_nft);\n        wizardTower = WizardTower(_wizardTower);\n\n//        contractSettings = ContractSettings({\n//        });\n\n    }\n\n    // Required to receive ETH\n    receive() external payable {\n    }\n\n    function vote(uint256 proposalID, uint256 NFTID, uint256 _vote) external onlyMember {\n        require(proposalID < totalProposals, \"no such proposal\");\n        require(wizardsNFT.ownerOf(NFTID)==msg.sender, \"not owner of NFT\");\n        require(proposalToNFTVotes[proposalID][NFTID]==0, \"already voted\");\n        require(_vote!=0 && _vote <= proposals[proposalID].numberOfOptions);\n        require(block.timestamp < proposals[proposalID].endTimestamp);\n        proposalToNFTVotes[proposalID][NFTID] = _vote + 1; // vote reference shifted by one\n        proposals[proposalID].votes[_vote] += 1; // increment votes\n        proposals[proposalID].totalVotes += 1;\n    }\n\n    // votes won't need to be confirmed\n    function createProposal(string calldata _IPFSHash, uint16 _numberOfOptions, uint24 _timeBonus, uint40 _begTimestamp, uint40 _endTimestamp, uint16 _availableSlots) external onlyBoard {\n        require(_numberOfOptions > 1 && _numberOfOptions < 257, \"invalid number of options\");\n        totalProposals += 1; // keep nothing at 0\n        Proposal storage myProposal = proposals[totalProposals];\n            myProposal.begTimestamp = _begTimestamp;\n            myProposal.endTimestamp = _endTimestamp;\n            myProposal.numberOfOptions = _numberOfOptions;\n            myProposal.IPFSHash = _IPFSHash;\n\n        _createTaskType(_IPFSHash, uint40(totalProposals), 0, _timeBonus, _begTimestamp, _endTimestamp, _availableSlots);\n        // todo --  emit event\n    }\n\n\n    function createTaskType(string calldata _IPFSHash, uint8 _numFieldsToHash, uint24 _timeBonus, uint40 _begTimestamp,\n                uint40 _endTimestamp, uint16 _availableSlots) external onlyBoard {\n        _createTaskType(_IPFSHash, 0, _numFieldsToHash, _timeBonus, _begTimestamp, _endTimestamp, _availableSlots);\n    }\n\n    function _createTaskType(string calldata _IPFSHash, uint40 _proposalID, uint8 _numFieldsToHash, uint24 _timeBonus,\n             uint40 _begTimestamp, uint40 _endTimestamp, uint16 _availableSlots) internal {\n        uint256 taskTypesLength = taskTypes.length;\n        taskTypes.push();\n        TaskType storage newTaskType = taskTypes[taskTypesLength];\n            newTaskType.IPFSHash =_IPFSHash;\n            newTaskType.paused = false;\n            newTaskType.proposalID = _proposalID;\n            newTaskType.numFieldsToHash = _numFieldsToHash;\n            newTaskType.timeBonus = _timeBonus;\n            newTaskType.begTimestamp = _begTimestamp;\n            newTaskType.endTimestamp = _endTimestamp;\n            newTaskType.availableSlots = _availableSlots;\n        // todo --  emit event\n        emit NewTaskTypeCreated(_IPFSHash, _proposalID, _numFieldsToHash, _timeBonus, _begTimestamp, _endTimestamp, _availableSlots);\n    }\n\n\n    function claimRandomTaskForVerification(uint256 _wizId) external {\n        uint256 totalTasksSubmitted = DoubleEndedQueue.length(tasksWaitingConfirmation);\n        Task memory myTask;\n        uint256 taskId;\n\n        // todo --implement randomness\n        // uint256[25] memory potentialTasks;\n\n        for(uint256 i =0; i < totalTasksSubmitted; ){\n            taskId = uint256(DoubleEndedQueue.at(tasksWaitingConfirmation, i));\n            myTask = tasks[taskId];\n            if( myTask.verificationReservedTimestamp < block.timestamp && myTask.NFTID != _wizId && myTask.refuterID!= _wizId){\n//                taskId = uint256(DoubleEndedQueue.at(tasksWaitingConfirmation, i));\n//                myTask = tasks[taskId];\n\n                // update task\n                myTask.verifierID = uint16(_wizId);\n                myTask.verificationReservedTimestamp = uint40(block.timestamp + verificationTime);\n                tasks[taskId] = myTask;\n                emit VerificationAssigned(_wizId, taskId, tasks[taskId]);\n            }\n            unchecked{++i;}\n        }\n//        emit VerificationAssigned(_wizId, taskId);\n    }\n\n    function completeTask(string memory _IPFSHash, bytes32 _hash, uint40 _wizId) external {\n        // IPFS, hash, wizardID\n\n        // find the task type -- can't be too many\n        for(uint256 i = 0; i<taskTypes.length;){\n            if(keccak256(abi.encode(taskTypes[i].IPFSHash)) == keccak256(abi.encode(_IPFSHash))){ // hashed to compare\n                // verify it is viable\n                require(taskTypes[i].begTimestamp <= block.timestamp && block.timestamp <= taskTypes[i].endTimestamp, \"Outside time period\");\n                // create new task\n                Task memory myTask = Task(_IPFSHash,_wizId, _hash, 0, taskTypes[i].numFieldsToHash, taskTypes[i].timeBonus, 0, 0, 0, 0);\n                DoubleEndedQueue.pushBack(tasksWaitingConfirmation, bytes32(totalTasksAttempted));\n                tasks[totalTasksAttempted] = myTask;\n                totalTasksAttempted+=1;\n\n                // update TaskTypes\n                taskTypes[i].nextActiveTimeThreshold[_wizId] = block.timestamp + 1 days;\n                taskTypes[i].availableSlots = taskTypes[i].availableSlots - 1;\n\n                emit TaskCompleted(_wizId,totalTasksAttempted -1, _IPFSHash, block.timestamp);\n                break;\n            }\n            unchecked{++i;}\n        }\n        // failed\n\n\n    }\n\n    function testHashing(bytes32 _givenHash, bytes32[] memory _fields, bool _refuted) external {\n        bytes memory unencoded = abi.encodePacked(_fields[0]);\n        if(_refuted) {\n            for(uint256 i = 0; i < _fields.length;){\n                _fields[i] = keccak256(abi.encodePacked(_fields[i]));\n                unchecked{++i;}\n            }\n        }\n        bytes32 myHash = keccak256(abi.encodePacked(_fields));\n        emit HashTesting(myHash, myHash==_givenHash, _fields[0], unencoded);\n    }\n\n// working for regular but not refuted.\n//    function testHashing(bytes32 _givenHash, bytes32[] memory _fields, bool _refuted) external {\n//        bytes memory unencoded = abi.encodePacked(_fields[0]);\n//        if(_refuted) {\n//            for(uint256 i = 0; i < _fields.length;){\n//                _fields[i] = keccak256(abi.encodePacked(_fields[i]));\n//                unchecked{++i;}\n//            }\n//        }\n//        bytes32 myHash = keccak256(abi.encodePacked(_fields));\n//        emit HashTesting(myHash, myHash==_givenHash, _fields[0], unencoded);\n//    }\n\n\n\n    // @dev -- hash structure: leaves of merkle tree are hashed. Unrefuted tasks must send in hashed leafs. Refuted, unhashed.\n    function submitVerification(uint256 _wizId, uint256 _taskID, bytes32[] memory _fields) external {\n    //todo -- uncomment out requirement (testing)\n        require(wizardsNFT.ownerOf(_wizId) == msg.sender && tasks[_taskID].verifierID==_wizId, \"Must be owner of assigned wizard\");\n        require(_fields.length > 0);\n\n        Task memory myTask = tasks[_taskID];\n        uint256 count = 0;\n        bool deleteTaskFlag = true;\n\n        // hash leaves if there is a refuter\n        if(myTask.refuterID > 0) {\n            for(uint256 i = 0; i < _fields.length;){\n                _fields[i] = keccak256(abi.encodePacked(_fields[i]));\n                unchecked{++i;}\n            }\n        }\n        bytes32 myHash = keccak256(abi.encodePacked(_fields));\n\n        uint256 correctHash = myTask.hash == myHash ? 1 : 0;\n\n        emit VerificationSucceeded(_wizId, myTask.NFTID, _taskID, myHash, correctHash==1);\n\n        if (correctHash ==1){\n            // if refuterId exists, then refuter gets no refund\n            uint256 split = myTask.payment/2;\n            address payable taskSubmitter = payable(wizardsNFT.ownerOf(myTask.verifierID));\n//            address payable verifier = msg.sender;\n\n            wizardsNFT.verifyDuty(myTask.NFTID, myTask.timeBonus);\n            wizardsNFT.verifyDuty(myTask.verifierID, taskVerificationTimeBonus);\n\n            // myTask.payment=0; // thwart reentrancy attacks\n            delete tasks[_taskID];\n\n            // send to task submitter\n            (bool sent, bytes memory data) = taskSubmitter.call{value: split}(\"\");\n            require(sent, \"Failed to send Ether\");\n\n            // send to verifier\n            (sent, data) = msg.sender.call{value: split}(\"\");\n            require(sent, \"Failed to send Ether\");\n\n        }\n        else { // if incorrect Hash\n            // case 2 -- if no match, send to DAO\n\n\n            if(myTask.refuterID==0){\n                myTask.refuterID=uint16(_wizId);\n                myTask.refuterHash=myHash;\n                tasks[_taskID] = myTask;\n                deleteTaskFlag = false;\n            }\n\n            // case 1 -- if matches hash of refuter, split\n            if(myTask.refuterHash==myHash){\n                uint256 split = myTask.payment/2;\n                address payable taskRefuter = payable(wizardsNFT.ownerOf(myTask.refuterID));\n\n                wizardsNFT.verifyDuty(myTask.refuterID, taskVerificationTimeBonus);\n                wizardsNFT.verifyDuty(_wizId, taskVerificationTimeBonus);\n\n                // myTask.payment=0; // thwart reentrancy attacks\n                delete tasks[_taskID];\n\n                // send to task submitter\n                (bool sent, bytes memory data) = taskRefuter.call{value: split}(\"\");\n                require(sent, \"Failed to send Ether\");\n\n                // send to verifier\n                (sent, data) = msg.sender.call{value: split}(\"\");\n                require(sent, \"Failed to send Ether\");\n\n                // emit event\n            }\n            else{\n                // no agreement in the 3 submissions\n                // send ETH to DAO\n                uint256 split = myTask.payment;\n                delete tasks[_taskID];\n                (bool sent, bytes memory data) = owner().call{value: split}(\"\"); // todo -- decide on how to structure DAO address\n                require(sent, \"Failed to send Ether\");\n\n                // emit event\n            }\n        }\n\n            // delete task from double ended queue\n        if(deleteTaskFlag){\n            uint256 totalTasksSubmitted = DoubleEndedQueue.length(tasksWaitingConfirmation);\n//            Task memory myTask;\n\n            // delete task from doubleEndedQueue\n            for(uint256 i =0; i < totalTasksSubmitted; ){\n                if( uint256(DoubleEndedQueue.at(tasksWaitingConfirmation, i))==_taskID){\n                    bytes32 prevFront = DoubleEndedQueue.popFront(tasksWaitingConfirmation);\n                    if(i!=0){ // add back on if we weren't meant to remove front\n                        tasksWaitingConfirmation._data[int128(tasksWaitingConfirmation._begin + int(i))] = prevFront;\n                    }\n                }\n                unchecked{++i;}\n            }\n        }\n\n    }\n\n    //////////////////////\n    ////// Modifiers /////\n    //////////////////////\n\n    modifier onlyAdmin() {\n        require(false,'Must be admin');\n        _;\n    }\n\n    modifier onlyNFTOwner() {\n        require(false,'Must be admin');\n        _;\n    }\n\n    modifier onlyLessee() {\n        require(false,'Must be lessee');\n        _;\n    }\n\n    modifier onlyMember() { // todo -- onlyMember\n        require(false,'Must be member');\n        _;\n    }\n\n    // top x in tower?\n    modifier onlyBoard() {\n        // check caller against top 3 wizards on tower\n        require(isCallerOnBoard(), \"Must be on the board\");\n//        require(true,'Must be on the board'); // todo -- onlyBoard\n        _;\n    }\n\n\n\n\n\n}",
  "sourceMap": "771:23127:2:-:0;;;2978:5;2951:32;;3039:6;3003:42;;3081:1;3060:22;;12278:247;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1667:1:12;1778:7;:22;889:23:11;679:10:5;889:9:11;:23::i;:::-;12379:10:2;:26;;-1:-1:-1;;;;;12379:26:2;;;-1:-1:-1;;;;;;12379:26:2;;;;;;;12415:11;:39;;;;;;;;;;;771:23127;;2101:173:11;2176:6;;;-1:-1:-1;;;;;2193:17:11;;;-1:-1:-1;;;;;;2193:17:11;;;;;;;2226:40;;2176:6;;;2193:17;2176:6;;2226:40;;2157:16;;2226:40;2146:128;2101:173;:::o;14:177:23:-;93:13;;-1:-1:-1;;;;;135:31:23;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:293::-;275:6;283;336:2;324:9;315:7;311:23;307:32;304:52;;;352:1;349;342:12;304:52;375:40;405:9;375:40;:::i;:::-;365:50;;434:49;479:2;468:9;464:18;434:49;:::i;:::-;424:59;;196:293;;;;;:::o;:::-;771:23127:2;;;;;;",
  "sourcePath": "contracts/Governance.sol",
  "type": "contract"
}