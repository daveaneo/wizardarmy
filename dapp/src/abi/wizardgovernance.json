{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_nft",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "OutOfBounds",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "hash",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "isHashCorrect",
          "type": "bool"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "firstEncoded",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "firstUnencoded",
          "type": "bytes"
        }
      ],
      "name": "HashTesting",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "_IPFSHash",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint40",
          "name": "_proposalID",
          "type": "uint40"
        },
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "_numFieldsToHash",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "uint24",
          "name": "_timeBonus",
          "type": "uint24"
        },
        {
          "indexed": false,
          "internalType": "uint40",
          "name": "_begTimestamp",
          "type": "uint40"
        },
        {
          "indexed": false,
          "internalType": "uint40",
          "name": "_endTimestamp",
          "type": "uint40"
        },
        {
          "indexed": false,
          "internalType": "uint16",
          "name": "_availableSlots",
          "type": "uint16"
        }
      ],
      "name": "NewTaskTypeCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "wizardId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "taskId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "IPFSHash",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "data",
          "type": "uint256"
        }
      ],
      "name": "TaskCompleted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "wizardId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "taskId",
          "type": "uint256"
        }
      ],
      "name": "VerificationAssigned",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "VerifierIdFirst",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "VerifierIdSecond",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "taskId",
          "type": "uint256"
        }
      ],
      "name": "VerificationFailed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "taskDoer",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "Verifier",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "taskId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "hash",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "isHashCorrect",
          "type": "bool"
        }
      ],
      "name": "VerificationSucceeded",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_wizID",
          "type": "uint256"
        }
      ],
      "name": "areTasksAvailableToConfirm",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_wizID",
          "type": "uint256"
        }
      ],
      "name": "claimRandomTaskForVerification",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_IPFSHash",
          "type": "string"
        },
        {
          "internalType": "bytes32",
          "name": "_hash",
          "type": "bytes32"
        },
        {
          "internalType": "uint40",
          "name": "_wizID",
          "type": "uint40"
        }
      ],
      "name": "completeTask",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_IPFSHash",
          "type": "string"
        },
        {
          "internalType": "uint16",
          "name": "_numberOfOptions",
          "type": "uint16"
        },
        {
          "internalType": "uint24",
          "name": "_timeBonus",
          "type": "uint24"
        },
        {
          "internalType": "uint40",
          "name": "_begTimestamp",
          "type": "uint40"
        },
        {
          "internalType": "uint40",
          "name": "_endTimestamp",
          "type": "uint40"
        },
        {
          "internalType": "uint16",
          "name": "_availableSlots",
          "type": "uint16"
        }
      ],
      "name": "createProposal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_IPFSHash",
          "type": "string"
        },
        {
          "internalType": "uint8",
          "name": "_numFieldsToHash",
          "type": "uint8"
        },
        {
          "internalType": "uint24",
          "name": "_timeBonus",
          "type": "uint24"
        },
        {
          "internalType": "uint40",
          "name": "_begTimestamp",
          "type": "uint40"
        },
        {
          "internalType": "uint40",
          "name": "_endTimestamp",
          "type": "uint40"
        },
        {
          "internalType": "uint16",
          "name": "_availableSlots",
          "type": "uint16"
        }
      ],
      "name": "createTaskType",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_IPFSHash",
          "type": "string"
        }
      ],
      "name": "deleteTaskTypeByIPFSHash",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint40",
          "name": "_wizId",
          "type": "uint40"
        }
      ],
      "name": "getMyAvailableTaskTypes",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_taskId",
          "type": "uint256"
        }
      ],
      "name": "getTaskById",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "IPFSHash",
              "type": "string"
            },
            {
              "internalType": "uint40",
              "name": "NFTID",
              "type": "uint40"
            },
            {
              "internalType": "bytes32",
              "name": "hash",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "refuterHash",
              "type": "bytes32"
            },
            {
              "internalType": "uint8",
              "name": "numFieldsToHash",
              "type": "uint8"
            },
            {
              "internalType": "uint24",
              "name": "timeBonus",
              "type": "uint24"
            },
            {
              "internalType": "uint80",
              "name": "payment",
              "type": "uint80"
            },
            {
              "internalType": "uint16",
              "name": "verifierID",
              "type": "uint16"
            },
            {
              "internalType": "uint16",
              "name": "refuterID",
              "type": "uint16"
            },
            {
              "internalType": "uint40",
              "name": "verificationReservedTimestamp",
              "type": "uint40"
            }
          ],
          "internalType": "struct Governance.Task",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalID",
          "type": "uint256"
        }
      ],
      "name": "getVotes",
      "outputs": [
        {
          "internalType": "uint16[]",
          "name": "",
          "type": "uint16[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalID",
          "type": "uint256"
        }
      ],
      "name": "getWinningVote",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "proposalToNFTVotes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "proposals",
      "outputs": [
        {
          "internalType": "string",
          "name": "IPFSHash",
          "type": "string"
        },
        {
          "internalType": "uint16",
          "name": "numberOfOptions",
          "type": "uint16"
        },
        {
          "internalType": "uint40",
          "name": "totalVotes",
          "type": "uint40"
        },
        {
          "internalType": "uint40",
          "name": "begTimestamp",
          "type": "uint40"
        },
        {
          "internalType": "uint40",
          "name": "endTimestamp",
          "type": "uint40"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_addy",
          "type": "address"
        }
      ],
      "name": "setNFTAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_wizId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_taskID",
          "type": "uint256"
        },
        {
          "internalType": "bytes32[]",
          "name": "_fields",
          "type": "bytes32[]"
        }
      ],
      "name": "submitVerification",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "taskTypes",
      "outputs": [
        {
          "internalType": "string",
          "name": "IPFSHash",
          "type": "string"
        },
        {
          "internalType": "bool",
          "name": "paused",
          "type": "bool"
        },
        {
          "internalType": "uint40",
          "name": "proposalID",
          "type": "uint40"
        },
        {
          "internalType": "uint8",
          "name": "numFieldsToHash",
          "type": "uint8"
        },
        {
          "internalType": "uint24",
          "name": "timeBonus",
          "type": "uint24"
        },
        {
          "internalType": "uint40",
          "name": "begTimestamp",
          "type": "uint40"
        },
        {
          "internalType": "uint40",
          "name": "endTimestamp",
          "type": "uint40"
        },
        {
          "internalType": "uint16",
          "name": "availableSlots",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "tasks",
      "outputs": [
        {
          "internalType": "string",
          "name": "IPFSHash",
          "type": "string"
        },
        {
          "internalType": "uint40",
          "name": "NFTID",
          "type": "uint40"
        },
        {
          "internalType": "bytes32",
          "name": "hash",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "refuterHash",
          "type": "bytes32"
        },
        {
          "internalType": "uint8",
          "name": "numFieldsToHash",
          "type": "uint8"
        },
        {
          "internalType": "uint24",
          "name": "timeBonus",
          "type": "uint24"
        },
        {
          "internalType": "uint80",
          "name": "payment",
          "type": "uint80"
        },
        {
          "internalType": "uint16",
          "name": "verifierID",
          "type": "uint16"
        },
        {
          "internalType": "uint16",
          "name": "refuterID",
          "type": "uint16"
        },
        {
          "internalType": "uint40",
          "name": "verificationReservedTimestamp",
          "type": "uint40"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tasksAttempted",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tasksSubmitted",
      "outputs": [
        {
          "internalType": "int128",
          "name": "_begin",
          "type": "int128"
        },
        {
          "internalType": "int128",
          "name": "_end",
          "type": "int128"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_givenHash",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32[]",
          "name": "_fields",
          "type": "bytes32[]"
        },
        {
          "internalType": "bool",
          "name": "_refuted",
          "type": "bool"
        }
      ],
      "name": "testHashing",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalID",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "NFTID",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_vote",
          "type": "uint256"
        }
      ],
      "name": "vote",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "allSourcePaths": {
    "0": "C:/Users/David/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.7.3/contracts/utils/math/SafeCast.sol",
    "1": "C:/Users/David/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.7.3/contracts/utils/structs/DoubleEndedQueue.sol",
    "12": "contracts/helpers/Ownable.sol",
    "13": "contracts/helpers/ReentrancyGuard.sol",
    "2": "contracts/Governance.sol",
    "22": "contracts/libraries/Strings.sol",
    "23": "contracts/wizards.sol",
    "6": "contracts/helpers/Context.sol"
  },
  "ast": {
    "absolutePath": "contracts/Governance.sol",
    "exportedSymbols": {
      "Address": [
        7025
      ],
      "Context": [
        4355
      ],
      "DoubleEndedQueue": [
        4334
      ],
      "ERC165": [
        4379
      ],
      "ERC2981Collection": [
        4463
      ],
      "ERC721": [
        5282
      ],
      "ERC721A": [
        6353
      ],
      "ERC721Enumerable": [
        7596
      ],
      "Governance": [
        1622
      ],
      "IERC165": [
        6509
      ],
      "IERC20": [
        6582
      ],
      "IERC2981": [
        9465
      ],
      "IERC721": [
        6698
      ],
      "IERC721Enumerable": [
        6729
      ],
      "IERC721Metadata": [
        9492
      ],
      "IERC721Receiver": [
        9510
      ],
      "Ownable": [
        6457
      ],
      "ReentrancyGuard": [
        6497
      ],
      "Strings": [
        7228
      ],
      "Wizards": [
        3993
      ]
    },
    "id": 1623,
    "license": "Unlicensed",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "0.8",
          ".15"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:2"
      },
      {
        "absolutePath": "contracts/wizards.sol",
        "file": "./wizards.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1623,
        "sourceUnit": 3994,
        "src": "64:23:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/interfaces/IERC20.sol",
        "file": "./interfaces/IERC20.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1623,
        "sourceUnit": 6583,
        "src": "88:33:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/interfaces/IERC165.sol",
        "file": "./interfaces/IERC165.sol",
        "id": 4,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1623,
        "sourceUnit": 6510,
        "src": "122:34:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/interfaces/IERC721.sol",
        "file": "./interfaces/IERC721.sol",
        "id": 5,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1623,
        "sourceUnit": 6699,
        "src": "157:34:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/interfaces/IERC721Enumerable.sol",
        "file": "./interfaces/IERC721Enumerable.sol",
        "id": 6,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1623,
        "sourceUnit": 6730,
        "src": "192:44:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/helpers/ERC721A.sol",
        "file": "./helpers/ERC721A.sol",
        "id": 7,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1623,
        "sourceUnit": 6354,
        "src": "270:31:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/helpers/ERC721.sol",
        "file": "./helpers/ERC721.sol",
        "id": 8,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1623,
        "sourceUnit": 5283,
        "src": "302:30:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/helpers/ERC165.sol",
        "file": "./helpers/ERC165.sol",
        "id": 9,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1623,
        "sourceUnit": 4380,
        "src": "333:30:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/helpers/Ownable.sol",
        "file": "./helpers/Ownable.sol",
        "id": 10,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1623,
        "sourceUnit": 6458,
        "src": "364:31:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/helpers/Context.sol",
        "file": "./helpers/Context.sol",
        "id": 11,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1623,
        "sourceUnit": 4356,
        "src": "396:31:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/helpers/ReentrancyGuard.sol",
        "file": "./helpers/ReentrancyGuard.sol",
        "id": 12,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1623,
        "sourceUnit": 6498,
        "src": "428:39:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/helpers/ERC2981Collection.sol",
        "file": "./helpers/ERC2981Collection.sol",
        "id": 13,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1623,
        "sourceUnit": 4464,
        "src": "468:41:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/libraries/Strings.sol",
        "file": "./libraries/Strings.sol",
        "id": 14,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1623,
        "sourceUnit": 7229,
        "src": "510:33:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/libraries/Address.sol",
        "file": "./libraries/Address.sol",
        "id": 15,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1623,
        "sourceUnit": 7026,
        "src": "544:33:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/David/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.7.3/contracts/utils/structs/DoubleEndedQueue.sol",
        "file": "@openzeppelin/contracts/utils/structs/DoubleEndedQueue.sol",
        "id": 17,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1623,
        "sourceUnit": 4335,
        "src": "578:92:2",
        "symbolAliases": [
          {
            "foreign": {
              "id": 16,
              "name": "DoubleEndedQueue",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 4334,
              "src": "586:16:2",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 18,
              "name": "ReentrancyGuard",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 6497,
              "src": "766:15:2"
            },
            "id": 19,
            "nodeType": "InheritanceSpecifier",
            "src": "766:15:2"
          },
          {
            "baseName": {
              "id": 20,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 6457,
              "src": "783:7:2"
            },
            "id": 21,
            "nodeType": "InheritanceSpecifier",
            "src": "783:7:2"
          }
        ],
        "canonicalName": "Governance",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1622,
        "linearizedBaseContracts": [
          1622,
          6457,
          4355,
          6497
        ],
        "name": "Governance",
        "nameLocation": "752:10:2",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 24,
            "mutability": "mutable",
            "name": "wizardsNFT",
            "nameLocation": "837:10:2",
            "nodeType": "VariableDeclaration",
            "scope": 1622,
            "src": "829:18:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Wizards_$3993",
              "typeString": "contract Wizards"
            },
            "typeName": {
              "id": 23,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 22,
                "name": "Wizards",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 3993,
                "src": "829:7:2"
              },
              "referencedDeclaration": 3993,
              "src": "829:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Wizards_$3993",
                "typeString": "contract Wizards"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "6215597b",
            "id": 30,
            "mutability": "mutable",
            "name": "proposalToNFTVotes",
            "nameLocation": "1014:18:2",
            "nodeType": "VariableDeclaration",
            "scope": 1622,
            "src": "957:75:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$",
              "typeString": "mapping(uint256 => mapping(uint256 => uint256))"
            },
            "typeName": {
              "id": 29,
              "keyType": {
                "id": 25,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "966:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "957:49:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                "typeString": "mapping(uint256 => mapping(uint256 => uint256))"
              },
              "valueType": {
                "id": 28,
                "keyType": {
                  "id": 26,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "986:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "nodeType": "Mapping",
                "src": "977:28:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                  "typeString": "mapping(uint256 => uint256)"
                },
                "valueType": {
                  "id": 27,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "997:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "Governance.TaskType",
            "id": 51,
            "members": [
              {
                "constant": false,
                "id": 34,
                "mutability": "mutable",
                "name": "nextActiveTimeThreshold",
                "nameLocation": "1126:23:2",
                "nodeType": "VariableDeclaration",
                "scope": 51,
                "src": "1098:51:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_uint40_$_t_uint256_$",
                  "typeString": "mapping(uint40 => uint256)"
                },
                "typeName": {
                  "id": 33,
                  "keyType": {
                    "id": 31,
                    "name": "uint40",
                    "nodeType": "ElementaryTypeName",
                    "src": "1107:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "nodeType": "Mapping",
                  "src": "1098:27:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_uint40_$_t_uint256_$",
                    "typeString": "mapping(uint40 => uint256)"
                  },
                  "valueType": {
                    "id": 32,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1117:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 36,
                "mutability": "mutable",
                "name": "IPFSHash",
                "nameLocation": "1220:8:2",
                "nodeType": "VariableDeclaration",
                "scope": 51,
                "src": "1213:15:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 35,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "1213:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 38,
                "mutability": "mutable",
                "name": "paused",
                "nameLocation": "1264:6:2",
                "nodeType": "VariableDeclaration",
                "scope": 51,
                "src": "1259:11:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 37,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1259:4:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 40,
                "mutability": "mutable",
                "name": "proposalID",
                "nameLocation": "1287:10:2",
                "nodeType": "VariableDeclaration",
                "scope": 51,
                "src": "1280:17:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint40",
                  "typeString": "uint40"
                },
                "typeName": {
                  "id": 39,
                  "name": "uint40",
                  "nodeType": "ElementaryTypeName",
                  "src": "1280:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 42,
                "mutability": "mutable",
                "name": "numFieldsToHash",
                "nameLocation": "1341:15:2",
                "nodeType": "VariableDeclaration",
                "scope": 51,
                "src": "1335:21:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint8",
                  "typeString": "uint8"
                },
                "typeName": {
                  "id": 41,
                  "name": "uint8",
                  "nodeType": "ElementaryTypeName",
                  "src": "1335:5:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 44,
                "mutability": "mutable",
                "name": "timeBonus",
                "nameLocation": "1373:9:2",
                "nodeType": "VariableDeclaration",
                "scope": 51,
                "src": "1366:16:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint24",
                  "typeString": "uint24"
                },
                "typeName": {
                  "id": 43,
                  "name": "uint24",
                  "nodeType": "ElementaryTypeName",
                  "src": "1366:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint24",
                    "typeString": "uint24"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 46,
                "mutability": "mutable",
                "name": "begTimestamp",
                "nameLocation": "1399:12:2",
                "nodeType": "VariableDeclaration",
                "scope": 51,
                "src": "1392:19:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint40",
                  "typeString": "uint40"
                },
                "typeName": {
                  "id": 45,
                  "name": "uint40",
                  "nodeType": "ElementaryTypeName",
                  "src": "1392:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 48,
                "mutability": "mutable",
                "name": "endTimestamp",
                "nameLocation": "1428:12:2",
                "nodeType": "VariableDeclaration",
                "scope": 51,
                "src": "1421:19:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint40",
                  "typeString": "uint40"
                },
                "typeName": {
                  "id": 47,
                  "name": "uint40",
                  "nodeType": "ElementaryTypeName",
                  "src": "1421:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 50,
                "mutability": "mutable",
                "name": "availableSlots",
                "nameLocation": "1457:14:2",
                "nodeType": "VariableDeclaration",
                "scope": 51,
                "src": "1450:21:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint16",
                  "typeString": "uint16"
                },
                "typeName": {
                  "id": 49,
                  "name": "uint16",
                  "nodeType": "ElementaryTypeName",
                  "src": "1450:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "TaskType",
            "nameLocation": "1079:8:2",
            "nodeType": "StructDefinition",
            "scope": 1622,
            "src": "1072:406:2",
            "visibility": "public"
          },
          {
            "canonicalName": "Governance.Task",
            "id": 72,
            "members": [
              {
                "constant": false,
                "id": 53,
                "mutability": "mutable",
                "name": "IPFSHash",
                "nameLocation": "1538:8:2",
                "nodeType": "VariableDeclaration",
                "scope": 72,
                "src": "1531:15:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 52,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "1531:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 55,
                "mutability": "mutable",
                "name": "NFTID",
                "nameLocation": "1584:5:2",
                "nodeType": "VariableDeclaration",
                "scope": 72,
                "src": "1577:12:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint40",
                  "typeString": "uint40"
                },
                "typeName": {
                  "id": 54,
                  "name": "uint40",
                  "nodeType": "ElementaryTypeName",
                  "src": "1577:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 57,
                "mutability": "mutable",
                "name": "hash",
                "nameLocation": "1644:4:2",
                "nodeType": "VariableDeclaration",
                "scope": 72,
                "src": "1636:12:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 56,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "1636:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 59,
                "mutability": "mutable",
                "name": "refuterHash",
                "nameLocation": "1698:11:2",
                "nodeType": "VariableDeclaration",
                "scope": 72,
                "src": "1690:19:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 58,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "1690:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 61,
                "mutability": "mutable",
                "name": "numFieldsToHash",
                "nameLocation": "1762:15:2",
                "nodeType": "VariableDeclaration",
                "scope": 72,
                "src": "1756:21:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint8",
                  "typeString": "uint8"
                },
                "typeName": {
                  "id": 60,
                  "name": "uint8",
                  "nodeType": "ElementaryTypeName",
                  "src": "1756:5:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 63,
                "mutability": "mutable",
                "name": "timeBonus",
                "nameLocation": "1810:9:2",
                "nodeType": "VariableDeclaration",
                "scope": 72,
                "src": "1803:16:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint24",
                  "typeString": "uint24"
                },
                "typeName": {
                  "id": 62,
                  "name": "uint24",
                  "nodeType": "ElementaryTypeName",
                  "src": "1803:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint24",
                    "typeString": "uint24"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 65,
                "mutability": "mutable",
                "name": "payment",
                "nameLocation": "1982:7:2",
                "nodeType": "VariableDeclaration",
                "scope": 72,
                "src": "1975:14:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint80",
                  "typeString": "uint80"
                },
                "typeName": {
                  "id": 64,
                  "name": "uint80",
                  "nodeType": "ElementaryTypeName",
                  "src": "1975:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint80",
                    "typeString": "uint80"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 67,
                "mutability": "mutable",
                "name": "verifierID",
                "nameLocation": "2009:10:2",
                "nodeType": "VariableDeclaration",
                "scope": 72,
                "src": "2002:17:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint16",
                  "typeString": "uint16"
                },
                "typeName": {
                  "id": 66,
                  "name": "uint16",
                  "nodeType": "ElementaryTypeName",
                  "src": "2002:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 69,
                "mutability": "mutable",
                "name": "refuterID",
                "nameLocation": "2060:9:2",
                "nodeType": "VariableDeclaration",
                "scope": 72,
                "src": "2053:16:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint16",
                  "typeString": "uint16"
                },
                "typeName": {
                  "id": 68,
                  "name": "uint16",
                  "nodeType": "ElementaryTypeName",
                  "src": "2053:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 71,
                "mutability": "mutable",
                "name": "verificationReservedTimestamp",
                "nameLocation": "2110:29:2",
                "nodeType": "VariableDeclaration",
                "scope": 72,
                "src": "2103:36:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint40",
                  "typeString": "uint40"
                },
                "typeName": {
                  "id": 70,
                  "name": "uint40",
                  "nodeType": "ElementaryTypeName",
                  "src": "2103:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Task",
            "nameLocation": "1516:4:2",
            "nodeType": "StructDefinition",
            "scope": 1622,
            "src": "1509:675:2",
            "visibility": "public"
          },
          {
            "canonicalName": "Governance.Proposal",
            "id": 87,
            "members": [
              {
                "constant": false,
                "id": 74,
                "mutability": "mutable",
                "name": "IPFSHash",
                "nameLocation": "2223:8:2",
                "nodeType": "VariableDeclaration",
                "scope": 87,
                "src": "2216:15:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 73,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "2216:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 76,
                "mutability": "mutable",
                "name": "numberOfOptions",
                "nameLocation": "2248:15:2",
                "nodeType": "VariableDeclaration",
                "scope": 87,
                "src": "2241:22:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint16",
                  "typeString": "uint16"
                },
                "typeName": {
                  "id": 75,
                  "name": "uint16",
                  "nodeType": "ElementaryTypeName",
                  "src": "2241:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 80,
                "mutability": "mutable",
                "name": "votes",
                "nameLocation": "2283:5:2",
                "nodeType": "VariableDeclaration",
                "scope": 87,
                "src": "2273:15:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_uint16_$8_storage_ptr",
                  "typeString": "uint16[8]"
                },
                "typeName": {
                  "baseType": {
                    "id": 77,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "2273:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "id": 79,
                  "length": {
                    "hexValue": "38",
                    "id": 78,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2280:1:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_8_by_1",
                      "typeString": "int_const 8"
                    },
                    "value": "8"
                  },
                  "nodeType": "ArrayTypeName",
                  "src": "2273:9:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint16_$8_storage_ptr",
                    "typeString": "uint16[8]"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 82,
                "mutability": "mutable",
                "name": "totalVotes",
                "nameLocation": "2305:10:2",
                "nodeType": "VariableDeclaration",
                "scope": 87,
                "src": "2298:17:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint40",
                  "typeString": "uint40"
                },
                "typeName": {
                  "id": 81,
                  "name": "uint40",
                  "nodeType": "ElementaryTypeName",
                  "src": "2298:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 84,
                "mutability": "mutable",
                "name": "begTimestamp",
                "nameLocation": "2332:12:2",
                "nodeType": "VariableDeclaration",
                "scope": 87,
                "src": "2325:19:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint40",
                  "typeString": "uint40"
                },
                "typeName": {
                  "id": 83,
                  "name": "uint40",
                  "nodeType": "ElementaryTypeName",
                  "src": "2325:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 86,
                "mutability": "mutable",
                "name": "endTimestamp",
                "nameLocation": "2361:12:2",
                "nodeType": "VariableDeclaration",
                "scope": 87,
                "src": "2354:19:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint40",
                  "typeString": "uint40"
                },
                "typeName": {
                  "id": 85,
                  "name": "uint40",
                  "nodeType": "ElementaryTypeName",
                  "src": "2354:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Proposal",
            "nameLocation": "2197:8:2",
            "nodeType": "StructDefinition",
            "scope": 1622,
            "src": "2190:190:2",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "10190ef1",
            "id": 91,
            "mutability": "mutable",
            "name": "taskTypes",
            "nameLocation": "2406:9:2",
            "nodeType": "VariableDeclaration",
            "scope": 1622,
            "src": "2388:27:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_TaskType_$51_storage_$dyn_storage",
              "typeString": "struct Governance.TaskType[]"
            },
            "typeName": {
              "baseType": {
                "id": 89,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 88,
                  "name": "TaskType",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 51,
                  "src": "2388:8:2"
                },
                "referencedDeclaration": 51,
                "src": "2388:8:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_TaskType_$51_storage_ptr",
                  "typeString": "struct Governance.TaskType"
                }
              },
              "id": 90,
              "nodeType": "ArrayTypeName",
              "src": "2388:10:2",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_TaskType_$51_storage_$dyn_storage_ptr",
                "typeString": "struct Governance.TaskType[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "379d94cc",
            "id": 94,
            "mutability": "mutable",
            "name": "tasksSubmitted",
            "nameLocation": "2562:14:2",
            "nodeType": "VariableDeclaration",
            "scope": 1622,
            "src": "2525:51:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Bytes32Deque_$4012_storage",
              "typeString": "struct DoubleEndedQueue.Bytes32Deque"
            },
            "typeName": {
              "id": 93,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 92,
                "name": "DoubleEndedQueue.Bytes32Deque",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 4012,
                "src": "2525:29:2"
              },
              "referencedDeclaration": 4012,
              "src": "2525:29:2",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Bytes32Deque_$4012_storage_ptr",
                "typeString": "struct DoubleEndedQueue.Bytes32Deque"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "013cf08b",
            "id": 99,
            "mutability": "mutable",
            "name": "proposals",
            "nameLocation": "2729:9:2",
            "nodeType": "VariableDeclaration",
            "scope": 1622,
            "src": "2692:46:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$87_storage_$",
              "typeString": "mapping(uint256 => struct Governance.Proposal)"
            },
            "typeName": {
              "id": 98,
              "keyType": {
                "id": 95,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2701:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "2692:29:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$87_storage_$",
                "typeString": "mapping(uint256 => struct Governance.Proposal)"
              },
              "valueType": {
                "id": 97,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 96,
                  "name": "Proposal",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 87,
                  "src": "2712:8:2"
                },
                "referencedDeclaration": 87,
                "src": "2712:8:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Proposal_$87_storage_ptr",
                  "typeString": "struct Governance.Proposal"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 101,
            "mutability": "mutable",
            "name": "totalProposals",
            "nameLocation": "2752:14:2",
            "nodeType": "VariableDeclaration",
            "scope": 1622,
            "src": "2744:22:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 100,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2744:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "8d977672",
            "id": 106,
            "mutability": "mutable",
            "name": "tasks",
            "nameLocation": "2806:5:2",
            "nodeType": "VariableDeclaration",
            "scope": 1622,
            "src": "2773:38:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Task_$72_storage_$",
              "typeString": "mapping(uint256 => struct Governance.Task)"
            },
            "typeName": {
              "id": 105,
              "keyType": {
                "id": 102,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2782:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "2773:25:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Task_$72_storage_$",
                "typeString": "mapping(uint256 => struct Governance.Task)"
              },
              "valueType": {
                "id": 104,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 103,
                  "name": "Task",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 72,
                  "src": "2793:4:2"
                },
                "referencedDeclaration": 72,
                "src": "2793:4:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Task_$72_storage_ptr",
                  "typeString": "struct Governance.Task"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "a584a328",
            "id": 108,
            "mutability": "mutable",
            "name": "tasksAttempted",
            "nameLocation": "2832:14:2",
            "nodeType": "VariableDeclaration",
            "scope": 1622,
            "src": "2817:29:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 107,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2817:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 113,
            "mutability": "mutable",
            "name": "verificationTime",
            "nameLocation": "2887:16:2",
            "nodeType": "VariableDeclaration",
            "scope": 1622,
            "src": "2879:32:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 109,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2879:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "commonType": {
                "typeIdentifier": "t_rational_600_by_1",
                "typeString": "int_const 600"
              },
              "id": 112,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "hexValue": "3130",
                "id": 110,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "2906:2:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_10_by_1",
                  "typeString": "int_const 10"
                },
                "value": "10"
              },
              "nodeType": "BinaryOperation",
              "operator": "*",
              "rightExpression": {
                "hexValue": "3630",
                "id": 111,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "2909:2:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_60_by_1",
                  "typeString": "int_const 60"
                },
                "value": "60"
              },
              "src": "2906:5:2",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_600_by_1",
                "typeString": "int_const 600"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 116,
            "mutability": "mutable",
            "name": "taskVerificationTimeBonus",
            "nameLocation": "2939:25:2",
            "nodeType": "VariableDeclaration",
            "scope": 1622,
            "src": "2931:42:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 114,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2931:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31",
              "id": 115,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2967:6:2",
              "subdenomination": "days",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_86400_by_1",
                "typeString": "int_const 86400"
              },
              "value": "1"
            },
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "eventSelector": "4babe4b493069d658924ac325d49ee1adfaccbb176319a54499a34417eaf73ee",
            "id": 122,
            "name": "VerificationAssigned",
            "nameLocation": "2996:20:2",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 121,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 118,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "wizardId",
                  "nameLocation": "3025:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 122,
                  "src": "3017:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 117,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3017:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 120,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "taskId",
                  "nameLocation": "3043:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 122,
                  "src": "3035:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 119,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3035:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3016:34:2"
            },
            "src": "2990:61:2"
          },
          {
            "anonymous": false,
            "eventSelector": "d12a897fdb9082da1e0476e136a51fa43484a8837cfbe517cfff0b1ffeedb19d",
            "id": 130,
            "name": "VerificationFailed",
            "nameLocation": "3062:18:2",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 129,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 124,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "VerifierIdFirst",
                  "nameLocation": "3089:15:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 130,
                  "src": "3081:23:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 123,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3081:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 126,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "VerifierIdSecond",
                  "nameLocation": "3114:16:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 130,
                  "src": "3106:24:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 125,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3106:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 128,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "taskId",
                  "nameLocation": "3140:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 130,
                  "src": "3132:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 127,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3132:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3080:67:2"
            },
            "src": "3056:92:2"
          },
          {
            "anonymous": false,
            "eventSelector": "e3f0e138f100deaf328ba1def71c39dade8cd971ba0074d935ee648e54532fae",
            "id": 142,
            "name": "VerificationSucceeded",
            "nameLocation": "3159:21:2",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 141,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 132,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "taskDoer",
                  "nameLocation": "3189:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 142,
                  "src": "3181:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 131,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3181:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 134,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "Verifier",
                  "nameLocation": "3207:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 142,
                  "src": "3199:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 133,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3199:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 136,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "taskId",
                  "nameLocation": "3225:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 142,
                  "src": "3217:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 135,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3217:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 138,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "hash",
                  "nameLocation": "3241:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 142,
                  "src": "3233:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 137,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3233:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 140,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "isHashCorrect",
                  "nameLocation": "3252:13:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 142,
                  "src": "3247:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 139,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3247:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3180:86:2"
            },
            "src": "3153:114:2"
          },
          {
            "anonymous": false,
            "eventSelector": "637ce8d069e382e64ef71cf191623b88c7e307ce252e908e7f2babbad0cb81ea",
            "id": 152,
            "name": "HashTesting",
            "nameLocation": "3278:11:2",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 151,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 144,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "hash",
                  "nameLocation": "3298:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 152,
                  "src": "3290:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 143,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3290:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 146,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "isHashCorrect",
                  "nameLocation": "3309:13:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 152,
                  "src": "3304:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 145,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3304:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 148,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "firstEncoded",
                  "nameLocation": "3332:12:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 152,
                  "src": "3324:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 147,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3324:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 150,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "firstUnencoded",
                  "nameLocation": "3352:14:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 152,
                  "src": "3346:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 149,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3346:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3289:78:2"
            },
            "src": "3272:96:2"
          },
          {
            "anonymous": false,
            "eventSelector": "2810025950962e3cd71fd98c2dc111ffbdb2a129b36771df8d36a7de2fe3e4e0",
            "id": 168,
            "name": "NewTaskTypeCreated",
            "nameLocation": "3379:18:2",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 167,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 154,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_IPFSHash",
                  "nameLocation": "3405:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 168,
                  "src": "3398:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 153,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3398:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 156,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_proposalID",
                  "nameLocation": "3422:11:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 168,
                  "src": "3415:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  },
                  "typeName": {
                    "id": 155,
                    "name": "uint40",
                    "nodeType": "ElementaryTypeName",
                    "src": "3415:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 158,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_numFieldsToHash",
                  "nameLocation": "3441:16:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 168,
                  "src": "3435:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 157,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "3435:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 160,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_timeBonus",
                  "nameLocation": "3466:10:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 168,
                  "src": "3459:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint24",
                    "typeString": "uint24"
                  },
                  "typeName": {
                    "id": 159,
                    "name": "uint24",
                    "nodeType": "ElementaryTypeName",
                    "src": "3459:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint24",
                      "typeString": "uint24"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 162,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_begTimestamp",
                  "nameLocation": "3495:13:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 168,
                  "src": "3488:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  },
                  "typeName": {
                    "id": 161,
                    "name": "uint40",
                    "nodeType": "ElementaryTypeName",
                    "src": "3488:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 164,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_endTimestamp",
                  "nameLocation": "3517:13:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 168,
                  "src": "3510:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  },
                  "typeName": {
                    "id": 163,
                    "name": "uint40",
                    "nodeType": "ElementaryTypeName",
                    "src": "3510:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 166,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_availableSlots",
                  "nameLocation": "3539:15:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 168,
                  "src": "3532:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 165,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "3532:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3397:158:2"
            },
            "src": "3373:183:2"
          },
          {
            "anonymous": false,
            "eventSelector": "bcc1ea15519f3acfb49e91de851e553b2c024b9ab85cee8ffd8fe4e4e0a7876d",
            "id": 178,
            "name": "TaskCompleted",
            "nameLocation": "3567:13:2",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 177,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 170,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "wizardId",
                  "nameLocation": "3589:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 178,
                  "src": "3581:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 169,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3581:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 172,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "taskId",
                  "nameLocation": "3607:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 178,
                  "src": "3599:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 171,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3599:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 174,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "IPFSHash",
                  "nameLocation": "3622:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 178,
                  "src": "3615:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 173,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3615:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 176,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "3640:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 178,
                  "src": "3632:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 175,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3632:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3580:65:2"
            },
            "src": "3561:85:2"
          },
          {
            "body": {
              "id": 190,
              "nodeType": "Block",
              "src": "4517:38:2",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 186,
                      "name": "tasks",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 106,
                      "src": "4534:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Task_$72_storage_$",
                        "typeString": "mapping(uint256 => struct Governance.Task storage ref)"
                      }
                    },
                    "id": 188,
                    "indexExpression": {
                      "id": 187,
                      "name": "_taskId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 180,
                      "src": "4540:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4534:14:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Task_$72_storage",
                      "typeString": "struct Governance.Task storage ref"
                    }
                  },
                  "functionReturnParameters": 185,
                  "id": 189,
                  "nodeType": "Return",
                  "src": "4527:21:2"
                }
              ]
            },
            "functionSelector": "976217cd",
            "id": 191,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTaskById",
            "nameLocation": "4452:11:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 181,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 180,
                  "mutability": "mutable",
                  "name": "_taskId",
                  "nameLocation": "4472:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 191,
                  "src": "4464:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 179,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4464:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4463:17:2"
            },
            "returnParameters": {
              "id": 185,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 184,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 191,
                  "src": "4504:11:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Task_$72_memory_ptr",
                    "typeString": "struct Governance.Task"
                  },
                  "typeName": {
                    "id": 183,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 182,
                      "name": "Task",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 72,
                      "src": "4504:4:2"
                    },
                    "referencedDeclaration": 72,
                    "src": "4504:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Task_$72_storage_ptr",
                      "typeString": "struct Governance.Task"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4503:13:2"
            },
            "scope": 1622,
            "src": "4443:112:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 246,
              "nodeType": "Block",
              "src": "4639:311:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 202,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 200,
                          "name": "proposalID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 193,
                          "src": "4657:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "id": 201,
                          "name": "totalProposals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 101,
                          "src": "4670:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4657:27:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6e6f20737563682070726f706f73616c",
                        "id": 203,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4686:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7f70e7e117a210e101713c97232a3cb728ce069a6ee3603e8c77d84127a93b4e",
                          "typeString": "literal_string \"no such proposal\""
                        },
                        "value": "no such proposal"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7f70e7e117a210e101713c97232a3cb728ce069a6ee3603e8c77d84127a93b4e",
                          "typeString": "literal_string \"no such proposal\""
                        }
                      ],
                      "id": 199,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4649:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 204,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4649:56:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 205,
                  "nodeType": "ExpressionStatement",
                  "src": "4649:56:2"
                },
                {
                  "assignments": [
                    210
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 210,
                      "mutability": "mutable",
                      "name": "voteArray",
                      "nameLocation": "4731:9:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 246,
                      "src": "4715:25:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint16_$dyn_memory_ptr",
                        "typeString": "uint16[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 208,
                          "name": "uint16",
                          "nodeType": "ElementaryTypeName",
                          "src": "4715:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "id": 209,
                        "nodeType": "ArrayTypeName",
                        "src": "4715:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint16_$dyn_storage_ptr",
                          "typeString": "uint16[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 219,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 214,
                            "name": "proposals",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99,
                            "src": "4756:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$87_storage_$",
                              "typeString": "mapping(uint256 => struct Governance.Proposal storage ref)"
                            }
                          },
                          "id": 216,
                          "indexExpression": {
                            "id": 215,
                            "name": "proposalID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 193,
                            "src": "4766:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4756:21:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Proposal_$87_storage",
                            "typeString": "struct Governance.Proposal storage ref"
                          }
                        },
                        "id": 217,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "numberOfOptions",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 76,
                        "src": "4756:37:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      ],
                      "id": 213,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "4743:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint16_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (uint16[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 211,
                          "name": "uint16",
                          "nodeType": "ElementaryTypeName",
                          "src": "4747:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "id": 212,
                        "nodeType": "ArrayTypeName",
                        "src": "4747:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint16_$dyn_storage_ptr",
                          "typeString": "uint16[]"
                        }
                      }
                    },
                    "id": 218,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4743:51:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint16_$dyn_memory_ptr",
                      "typeString": "uint16[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4715:79:2"
                },
                {
                  "body": {
                    "id": 242,
                    "nodeType": "Block",
                    "src": "4848:70:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 240,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 231,
                              "name": "voteArray",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 210,
                              "src": "4862:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint16_$dyn_memory_ptr",
                                "typeString": "uint16[] memory"
                              }
                            },
                            "id": 233,
                            "indexExpression": {
                              "id": 232,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 221,
                              "src": "4872:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "4862:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 234,
                                  "name": "proposals",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 99,
                                  "src": "4877:9:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$87_storage_$",
                                    "typeString": "mapping(uint256 => struct Governance.Proposal storage ref)"
                                  }
                                },
                                "id": 236,
                                "indexExpression": {
                                  "id": 235,
                                  "name": "proposalID",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 193,
                                  "src": "4887:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "4877:21:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Proposal_$87_storage",
                                  "typeString": "struct Governance.Proposal storage ref"
                                }
                              },
                              "id": 237,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "votes",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 80,
                              "src": "4877:27:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint16_$8_storage",
                                "typeString": "uint16[8] storage ref"
                              }
                            },
                            "id": 239,
                            "indexExpression": {
                              "id": 238,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 221,
                              "src": "4905:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4877:30:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "src": "4862:45:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "id": 241,
                        "nodeType": "ExpressionStatement",
                        "src": "4862:45:2"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 227,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 224,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 221,
                      "src": "4823:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 225,
                        "name": "voteArray",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 210,
                        "src": "4826:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint16_$dyn_memory_ptr",
                          "typeString": "uint16[] memory"
                        }
                      },
                      "id": 226,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "4826:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4823:19:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 243,
                  "initializationExpression": {
                    "assignments": [
                      221
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 221,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "4816:1:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 243,
                        "src": "4808:9:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 220,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4808:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 223,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 222,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4820:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "4808:13:2"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 229,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "4844:3:2",
                      "subExpression": {
                        "id": 228,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 221,
                        "src": "4844:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 230,
                    "nodeType": "ExpressionStatement",
                    "src": "4844:3:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "4804:114:2"
                },
                {
                  "expression": {
                    "id": 244,
                    "name": "voteArray",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 210,
                    "src": "4934:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint16_$dyn_memory_ptr",
                      "typeString": "uint16[] memory"
                    }
                  },
                  "functionReturnParameters": 198,
                  "id": 245,
                  "nodeType": "Return",
                  "src": "4927:16:2"
                }
              ]
            },
            "functionSelector": "ff981099",
            "id": 247,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getVotes",
            "nameLocation": "4570:8:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 194,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 193,
                  "mutability": "mutable",
                  "name": "proposalID",
                  "nameLocation": "4587:10:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 247,
                  "src": "4579:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 192,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4579:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4578:20:2"
            },
            "returnParameters": {
              "id": 198,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 197,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 247,
                  "src": "4622:15:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint16_$dyn_memory_ptr",
                    "typeString": "uint16[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 195,
                      "name": "uint16",
                      "nodeType": "ElementaryTypeName",
                      "src": "4622:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "id": 196,
                    "nodeType": "ArrayTypeName",
                    "src": "4622:8:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint16_$dyn_storage_ptr",
                      "typeString": "uint16[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4621:17:2"
            },
            "scope": 1622,
            "src": "4561:389:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 352,
              "nodeType": "Block",
              "src": "5033:892:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 257,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 255,
                          "name": "proposalID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 249,
                          "src": "5051:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "id": 256,
                          "name": "totalProposals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 101,
                          "src": "5064:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5051:27:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6e6f20737563682070726f706f73616c",
                        "id": 258,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5080:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7f70e7e117a210e101713c97232a3cb728ce069a6ee3603e8c77d84127a93b4e",
                          "typeString": "literal_string \"no such proposal\""
                        },
                        "value": "no such proposal"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7f70e7e117a210e101713c97232a3cb728ce069a6ee3603e8c77d84127a93b4e",
                          "typeString": "literal_string \"no such proposal\""
                        }
                      ],
                      "id": 254,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5043:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 259,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5043:56:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 260,
                  "nodeType": "ExpressionStatement",
                  "src": "5043:56:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 268,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 262,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "5118:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 263,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "5118:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 264,
                              "name": "proposals",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 99,
                              "src": "5136:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$87_storage_$",
                                "typeString": "mapping(uint256 => struct Governance.Proposal storage ref)"
                              }
                            },
                            "id": 266,
                            "indexExpression": {
                              "id": 265,
                              "name": "proposalID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 249,
                              "src": "5146:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5136:21:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Proposal_$87_storage",
                              "typeString": "struct Governance.Proposal storage ref"
                            }
                          },
                          "id": 267,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "endTimestamp",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 86,
                          "src": "5136:34:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint40",
                            "typeString": "uint40"
                          }
                        },
                        "src": "5118:52:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "766f74696e67207374696c6c20616374697665",
                        "id": 269,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5172:21:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_22f2e02cab1835d44c1d530aa3f7458160c75e111c83b0fee59782f82fdc8c00",
                          "typeString": "literal_string \"voting still active\""
                        },
                        "value": "voting still active"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_22f2e02cab1835d44c1d530aa3f7458160c75e111c83b0fee59782f82fdc8c00",
                          "typeString": "literal_string \"voting still active\""
                        }
                      ],
                      "id": 261,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5109:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 270,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5109:85:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 271,
                  "nodeType": "ExpressionStatement",
                  "src": "5109:85:2"
                },
                {
                  "assignments": [
                    273
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 273,
                      "mutability": "mutable",
                      "name": "winningVote",
                      "nameLocation": "5322:11:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 352,
                      "src": "5314:19:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 272,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5314:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 274,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5314:19:2"
                },
                {
                  "assignments": [
                    276
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 276,
                      "mutability": "mutable",
                      "name": "winningVoteAmount",
                      "nameLocation": "5351:17:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 352,
                      "src": "5343:25:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 275,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5343:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 277,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5343:25:2"
                },
                {
                  "assignments": [
                    279
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 279,
                      "mutability": "mutable",
                      "name": "tie",
                      "nameLocation": "5386:3:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 352,
                      "src": "5378:11:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 278,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5378:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 281,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 280,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5390:1:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5378:13:2"
                },
                {
                  "body": {
                    "id": 341,
                    "nodeType": "Block",
                    "src": "5464:382:2",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 302,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 295,
                                  "name": "proposals",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 99,
                                  "src": "5517:9:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$87_storage_$",
                                    "typeString": "mapping(uint256 => struct Governance.Proposal storage ref)"
                                  }
                                },
                                "id": 297,
                                "indexExpression": {
                                  "id": 296,
                                  "name": "proposalID",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 249,
                                  "src": "5527:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "5517:21:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Proposal_$87_storage",
                                  "typeString": "struct Governance.Proposal storage ref"
                                }
                              },
                              "id": 298,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "votes",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 80,
                              "src": "5517:27:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint16_$8_storage",
                                "typeString": "uint16[8] storage ref"
                              }
                            },
                            "id": 300,
                            "indexExpression": {
                              "id": 299,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 283,
                              "src": "5545:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5517:30:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "id": 301,
                            "name": "winningVoteAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 276,
                            "src": "5550:17:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5517:50:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 333,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "baseExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 326,
                                    "name": "proposals",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 99,
                                    "src": "5746:9:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$87_storage_$",
                                      "typeString": "mapping(uint256 => struct Governance.Proposal storage ref)"
                                    }
                                  },
                                  "id": 328,
                                  "indexExpression": {
                                    "id": 327,
                                    "name": "proposalID",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 249,
                                    "src": "5756:10:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "5746:21:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Proposal_$87_storage",
                                    "typeString": "struct Governance.Proposal storage ref"
                                  }
                                },
                                "id": 329,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "votes",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 80,
                                "src": "5746:27:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint16_$8_storage",
                                  "typeString": "uint16[8] storage ref"
                                }
                              },
                              "id": 331,
                              "indexExpression": {
                                "id": 330,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 283,
                                "src": "5774:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5746:30:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 332,
                              "name": "winningVoteAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 276,
                              "src": "5780:17:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "5746:51:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 339,
                          "nodeType": "IfStatement",
                          "src": "5743:93:2",
                          "trueBody": {
                            "id": 338,
                            "nodeType": "Block",
                            "src": "5798:38:2",
                            "statements": [
                              {
                                "expression": {
                                  "id": 336,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftHandSide": {
                                    "id": 334,
                                    "name": "tie",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 279,
                                    "src": "5816:3:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "Assignment",
                                  "operator": "=",
                                  "rightHandSide": {
                                    "hexValue": "31",
                                    "id": 335,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "5820:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    "value": "1"
                                  },
                                  "src": "5816:5:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 337,
                                "nodeType": "ExpressionStatement",
                                "src": "5816:5:2"
                              }
                            ]
                          }
                        },
                        "id": 340,
                        "nodeType": "IfStatement",
                        "src": "5514:322:2",
                        "trueBody": {
                          "id": 325,
                          "nodeType": "Block",
                          "src": "5569:156:2",
                          "statements": [
                            {
                              "expression": {
                                "id": 310,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 303,
                                  "name": "winningVoteAmount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 276,
                                  "src": "5587:17:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "baseExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 304,
                                        "name": "proposals",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 99,
                                        "src": "5607:9:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$87_storage_$",
                                          "typeString": "mapping(uint256 => struct Governance.Proposal storage ref)"
                                        }
                                      },
                                      "id": 306,
                                      "indexExpression": {
                                        "id": 305,
                                        "name": "proposalID",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 249,
                                        "src": "5617:10:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "5607:21:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Proposal_$87_storage",
                                        "typeString": "struct Governance.Proposal storage ref"
                                      }
                                    },
                                    "id": 307,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "votes",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 80,
                                    "src": "5607:27:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint16_$8_storage",
                                      "typeString": "uint16[8] storage ref"
                                    }
                                  },
                                  "id": 309,
                                  "indexExpression": {
                                    "id": 308,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 283,
                                    "src": "5635:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "5607:30:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint16",
                                    "typeString": "uint16"
                                  }
                                },
                                "src": "5587:50:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 311,
                              "nodeType": "ExpressionStatement",
                              "src": "5587:50:2"
                            },
                            {
                              "expression": {
                                "id": 314,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 312,
                                  "name": "winningVote",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 273,
                                  "src": "5655:11:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 313,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 283,
                                  "src": "5669:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "5655:15:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 315,
                              "nodeType": "ExpressionStatement",
                              "src": "5655:15:2"
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 318,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 316,
                                  "name": "tie",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 279,
                                  "src": "5692:3:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "hexValue": "31",
                                  "id": 317,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "5697:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "src": "5692:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 324,
                              "nodeType": "IfStatement",
                              "src": "5688:23:2",
                              "trueBody": {
                                "id": 323,
                                "nodeType": "Block",
                                "src": "5700:11:2",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 321,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "id": 319,
                                        "name": "tie",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 279,
                                        "src": "5702:3:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "hexValue": "30",
                                        "id": 320,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "5708:1:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      },
                                      "src": "5702:7:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 322,
                                    "nodeType": "ExpressionStatement",
                                    "src": "5702:7:2"
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 291,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 286,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 283,
                      "src": "5418:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 287,
                          "name": "proposals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99,
                          "src": "5421:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$87_storage_$",
                            "typeString": "mapping(uint256 => struct Governance.Proposal storage ref)"
                          }
                        },
                        "id": 289,
                        "indexExpression": {
                          "id": 288,
                          "name": "proposalID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 249,
                          "src": "5431:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5421:21:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proposal_$87_storage",
                          "typeString": "struct Governance.Proposal storage ref"
                        }
                      },
                      "id": 290,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "numberOfOptions",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 76,
                      "src": "5421:37:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "src": "5418:40:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 342,
                  "initializationExpression": {
                    "assignments": [
                      283
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 283,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "5413:1:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 342,
                        "src": "5405:9:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 282,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5405:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 285,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 284,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5415:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "5405:11:2"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 293,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "5460:3:2",
                      "subExpression": {
                        "id": 292,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 283,
                        "src": "5460:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 294,
                    "nodeType": "ExpressionStatement",
                    "src": "5460:3:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "5401:445:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 346,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 344,
                          "name": "tie",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 279,
                          "src": "5863:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 345,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5868:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "5863:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7468657265207761732061207469652e",
                        "id": 347,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5871:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a1c2bbbee70a8d13edbf54a9c72401ac19b15698e1d23660ca88991f323433da",
                          "typeString": "literal_string \"there was a tie.\""
                        },
                        "value": "there was a tie."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a1c2bbbee70a8d13edbf54a9c72401ac19b15698e1d23660ca88991f323433da",
                          "typeString": "literal_string \"there was a tie.\""
                        }
                      ],
                      "id": 343,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5855:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 348,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5855:35:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 349,
                  "nodeType": "ExpressionStatement",
                  "src": "5855:35:2"
                },
                {
                  "expression": {
                    "id": 350,
                    "name": "winningVote",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 273,
                    "src": "5907:11:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 253,
                  "id": 351,
                  "nodeType": "Return",
                  "src": "5900:18:2"
                }
              ]
            },
            "functionSelector": "826b8ebd",
            "id": 353,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getWinningVote",
            "nameLocation": "4965:14:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 250,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 249,
                  "mutability": "mutable",
                  "name": "proposalID",
                  "nameLocation": "4988:10:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 353,
                  "src": "4980:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 248,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4980:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4979:20:2"
            },
            "returnParameters": {
              "id": 253,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 252,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 353,
                  "src": "5023:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 251,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5023:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5022:10:2"
            },
            "scope": 1622,
            "src": "4956:969:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 408,
              "nodeType": "Block",
              "src": "6053:546:2",
              "statements": [
                {
                  "assignments": [
                    361
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 361,
                      "mutability": "mutable",
                      "name": "totalTasksSubmitted",
                      "nameLocation": "6071:19:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 408,
                      "src": "6063:27:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 360,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6063:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 366,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 364,
                        "name": "tasksSubmitted",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 94,
                        "src": "6117:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Bytes32Deque_$4012_storage",
                          "typeString": "struct DoubleEndedQueue.Bytes32Deque storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Bytes32Deque_$4012_storage",
                          "typeString": "struct DoubleEndedQueue.Bytes32Deque storage ref"
                        }
                      ],
                      "expression": {
                        "id": 362,
                        "name": "DoubleEndedQueue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4334,
                        "src": "6093:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_DoubleEndedQueue_$4334_$",
                          "typeString": "type(library DoubleEndedQueue)"
                        }
                      },
                      "id": 363,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4317,
                      "src": "6093:23:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32Deque_$4012_storage_ptr_$returns$_t_uint256_$",
                        "typeString": "function (struct DoubleEndedQueue.Bytes32Deque storage pointer) view returns (uint256)"
                      }
                    },
                    "id": 365,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6093:39:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6063:69:2"
                },
                {
                  "assignments": [
                    369
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 369,
                      "mutability": "mutable",
                      "name": "myTask",
                      "nameLocation": "6154:6:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 408,
                      "src": "6142:18:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Task_$72_memory_ptr",
                        "typeString": "struct Governance.Task"
                      },
                      "typeName": {
                        "id": 368,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 367,
                          "name": "Task",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 72,
                          "src": "6142:4:2"
                        },
                        "referencedDeclaration": 72,
                        "src": "6142:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Task_$72_storage_ptr",
                          "typeString": "struct Governance.Task"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 370,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6142:18:2"
                },
                {
                  "assignments": [
                    372
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 372,
                      "mutability": "mutable",
                      "name": "taskId",
                      "nameLocation": "6178:6:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 408,
                      "src": "6170:14:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 371,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6170:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 373,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6170:14:2"
                },
                {
                  "body": {
                    "id": 404,
                    "nodeType": "Block",
                    "src": "6322:249:2",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 395,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 390,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 385,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 381,
                                  "name": "myTask",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 369,
                                  "src": "6340:6:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Task_$72_memory_ptr",
                                    "typeString": "struct Governance.Task memory"
                                  }
                                },
                                "id": 382,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "verificationReservedTimestamp",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 71,
                                "src": "6340:36:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint40",
                                  "typeString": "uint40"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "expression": {
                                  "id": 383,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "6379:5:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 384,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "6379:15:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "6340:54:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "&&",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 389,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 386,
                                  "name": "myTask",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 369,
                                  "src": "6398:6:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Task_$72_memory_ptr",
                                    "typeString": "struct Governance.Task memory"
                                  }
                                },
                                "id": 387,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "NFTID",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 55,
                                "src": "6398:12:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint40",
                                  "typeString": "uint40"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "id": 388,
                                "name": "_wizID",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 355,
                                "src": "6414:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "6398:22:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "6340:80:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 394,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 391,
                                "name": "myTask",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 369,
                                "src": "6424:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Task_$72_memory_ptr",
                                  "typeString": "struct Governance.Task memory"
                                }
                              },
                              "id": 392,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "refuterID",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 69,
                              "src": "6424:16:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "id": 393,
                              "name": "_wizID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 355,
                              "src": "6443:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "6424:25:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "6340:109:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 399,
                        "nodeType": "IfStatement",
                        "src": "6336:197:2",
                        "trueBody": {
                          "id": 398,
                          "nodeType": "Block",
                          "src": "6450:83:2",
                          "statements": [
                            {
                              "expression": {
                                "hexValue": "74727565",
                                "id": 396,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6514:4:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              },
                              "functionReturnParameters": 359,
                              "id": 397,
                              "nodeType": "Return",
                              "src": "6507:11:2"
                            }
                          ]
                        }
                      },
                      {
                        "id": 403,
                        "nodeType": "UncheckedBlock",
                        "src": "6546:15:2",
                        "statements": [
                          {
                            "expression": {
                              "id": 401,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": true,
                              "src": "6556:3:2",
                              "subExpression": {
                                "id": 400,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 375,
                                "src": "6558:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 402,
                            "nodeType": "ExpressionStatement",
                            "src": "6556:3:2"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 380,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 378,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 375,
                      "src": "6296:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 379,
                      "name": "totalTasksSubmitted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 361,
                      "src": "6300:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6296:23:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 405,
                  "initializationExpression": {
                    "assignments": [
                      375
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 375,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "6290:1:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 405,
                        "src": "6282:9:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 374,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6282:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 377,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 376,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6293:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "6282:12:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "6278:293:2"
                },
                {
                  "expression": {
                    "hexValue": "66616c7365",
                    "id": 406,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "6587:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "functionReturnParameters": 359,
                  "id": 407,
                  "nodeType": "Return",
                  "src": "6580:12:2"
                }
              ]
            },
            "functionSelector": "f4739bd9",
            "id": 409,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "areTasksAvailableToConfirm",
            "nameLocation": "5981:26:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 356,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 355,
                  "mutability": "mutable",
                  "name": "_wizID",
                  "nameLocation": "6016:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 409,
                  "src": "6008:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 354,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6008:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6007:16:2"
            },
            "returnParameters": {
              "id": 359,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 358,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 409,
                  "src": "6047:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 357,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6047:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6046:6:2"
            },
            "scope": 1622,
            "src": "5972:627:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 576,
              "nodeType": "Block",
              "src": "6762:1212:2",
              "statements": [
                {
                  "assignments": [
                    418
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 418,
                      "mutability": "mutable",
                      "name": "count",
                      "nameLocation": "6780:5:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 576,
                      "src": "6772:13:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 417,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6772:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 419,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6772:13:2"
                },
                {
                  "body": {
                    "id": 490,
                    "nodeType": "Block",
                    "src": "6833:504:2",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 459,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 452,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 444,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 436,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "baseExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 428,
                                        "name": "taskTypes",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 91,
                                        "src": "6850:9:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_TaskType_$51_storage_$dyn_storage",
                                          "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                        }
                                      },
                                      "id": 430,
                                      "indexExpression": {
                                        "id": 429,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 421,
                                        "src": "6860:1:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "6850:12:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_TaskType_$51_storage",
                                        "typeString": "struct Governance.TaskType storage ref"
                                      }
                                    },
                                    "id": 431,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "nextActiveTimeThreshold",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 34,
                                    "src": "6850:36:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint40_$_t_uint256_$",
                                      "typeString": "mapping(uint40 => uint256)"
                                    }
                                  },
                                  "id": 433,
                                  "indexExpression": {
                                    "id": 432,
                                    "name": "_wizId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 411,
                                    "src": "6887:6:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint40",
                                      "typeString": "uint40"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "6850:44:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<",
                                "rightExpression": {
                                  "expression": {
                                    "id": 434,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "6897:5:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 435,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "6897:15:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "6850:62:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 443,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 437,
                                      "name": "taskTypes",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 91,
                                      "src": "6928:9:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_TaskType_$51_storage_$dyn_storage",
                                        "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                      }
                                    },
                                    "id": 439,
                                    "indexExpression": {
                                      "id": 438,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 421,
                                      "src": "6938:1:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "6928:12:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_TaskType_$51_storage",
                                      "typeString": "struct Governance.TaskType storage ref"
                                    }
                                  },
                                  "id": 440,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "begTimestamp",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 46,
                                  "src": "6928:25:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint40",
                                    "typeString": "uint40"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<=",
                                "rightExpression": {
                                  "expression": {
                                    "id": 441,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "6957:5:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 442,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "6957:15:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "6928:44:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "6850:122:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "&&",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 451,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 445,
                                    "name": "taskTypes",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 91,
                                    "src": "6976:9:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_TaskType_$51_storage_$dyn_storage",
                                      "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                    }
                                  },
                                  "id": 447,
                                  "indexExpression": {
                                    "id": 446,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 421,
                                    "src": "6986:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "6976:12:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_TaskType_$51_storage",
                                    "typeString": "struct Governance.TaskType storage ref"
                                  }
                                },
                                "id": 448,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "endTimestamp",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 48,
                                "src": "6976:25:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint40",
                                  "typeString": "uint40"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "expression": {
                                  "id": 449,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "7004:5:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 450,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "7004:15:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "6976:43:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "6850:169:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            },
                            "id": 458,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 453,
                                  "name": "taskTypes",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 91,
                                  "src": "7035:9:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_TaskType_$51_storage_$dyn_storage",
                                    "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                  }
                                },
                                "id": 455,
                                "indexExpression": {
                                  "id": 454,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 421,
                                  "src": "7045:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "7035:12:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TaskType_$51_storage",
                                  "typeString": "struct Governance.TaskType storage ref"
                                }
                              },
                              "id": 456,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "availableSlots",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 50,
                              "src": "7035:27:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 457,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7065:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "7035:31:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "6850:216:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 484,
                          "nodeType": "Block",
                          "src": "7150:149:2",
                          "statements": [
                            {
                              "assignments": [
                                469
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 469,
                                  "mutability": "mutable",
                                  "name": "myReturn",
                                  "nameLocation": "7184:8:2",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 484,
                                  "src": "7168:24:2",
                                  "stateVariable": false,
                                  "storageLocation": "memory",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                                    "typeString": "string[]"
                                  },
                                  "typeName": {
                                    "baseType": {
                                      "id": 467,
                                      "name": "string",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "7168:6:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_string_storage_ptr",
                                        "typeString": "string"
                                      }
                                    },
                                    "id": 468,
                                    "nodeType": "ArrayTypeName",
                                    "src": "7168:8:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                                      "typeString": "string[]"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 475,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "hexValue": "31",
                                    "id": 473,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "7207:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    "value": "1"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    }
                                  ],
                                  "id": 472,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "NewExpression",
                                  "src": "7194:12:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$",
                                    "typeString": "function (uint256) pure returns (string memory[] memory)"
                                  },
                                  "typeName": {
                                    "baseType": {
                                      "id": 470,
                                      "name": "string",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "7198:6:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_string_storage_ptr",
                                        "typeString": "string"
                                      }
                                    },
                                    "id": 471,
                                    "nodeType": "ArrayTypeName",
                                    "src": "7198:8:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                                      "typeString": "string[]"
                                    }
                                  }
                                },
                                "id": 474,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7194:15:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                                  "typeString": "string memory[] memory"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "7168:41:2"
                            },
                            {
                              "expression": {
                                "id": 480,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 476,
                                    "name": "myReturn",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 469,
                                    "src": "7227:8:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                                      "typeString": "string memory[] memory"
                                    }
                                  },
                                  "id": 478,
                                  "indexExpression": {
                                    "hexValue": "30",
                                    "id": 477,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "7236:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "7227:11:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "4e6f206c75636b2e",
                                  "id": 479,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "7241:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_c69ac3f68cfe1a47905034708a786a2148d121883dbf9372da36b09cc276002a",
                                    "typeString": "literal_string \"No luck.\""
                                  },
                                  "value": "No luck."
                                },
                                "src": "7227:24:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              "id": 481,
                              "nodeType": "ExpressionStatement",
                              "src": "7227:24:2"
                            },
                            {
                              "expression": {
                                "id": 482,
                                "name": "myReturn",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 469,
                                "src": "7276:8:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                                  "typeString": "string memory[] memory"
                                }
                              },
                              "functionReturnParameters": 416,
                              "id": 483,
                              "nodeType": "Return",
                              "src": "7269:15:2"
                            }
                          ]
                        },
                        "id": 485,
                        "nodeType": "IfStatement",
                        "src": "6847:452:2",
                        "trueBody": {
                          "id": 464,
                          "nodeType": "Block",
                          "src": "7081:51:2",
                          "statements": [
                            {
                              "id": 463,
                              "nodeType": "UncheckedBlock",
                              "src": "7099:19:2",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 461,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "UnaryOperation",
                                    "operator": "++",
                                    "prefix": true,
                                    "src": "7109:7:2",
                                    "subExpression": {
                                      "id": 460,
                                      "name": "count",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 418,
                                      "src": "7111:5:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 462,
                                  "nodeType": "ExpressionStatement",
                                  "src": "7109:7:2"
                                }
                              ]
                            }
                          ]
                        }
                      },
                      {
                        "id": 489,
                        "nodeType": "UncheckedBlock",
                        "src": "7312:15:2",
                        "statements": [
                          {
                            "expression": {
                              "id": 487,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": true,
                              "src": "7322:3:2",
                              "subExpression": {
                                "id": 486,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 421,
                                "src": "7324:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 488,
                            "nodeType": "ExpressionStatement",
                            "src": "7322:3:2"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 427,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 424,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 421,
                      "src": "6812:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 425,
                        "name": "taskTypes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 91,
                        "src": "6815:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_TaskType_$51_storage_$dyn_storage",
                          "typeString": "struct Governance.TaskType storage ref[] storage ref"
                        }
                      },
                      "id": 426,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "6815:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6812:19:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 491,
                  "initializationExpression": {
                    "assignments": [
                      421
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 421,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "6807:1:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 491,
                        "src": "6799:9:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 420,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6799:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 423,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 422,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6809:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "6799:11:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "6795:542:2"
                },
                {
                  "assignments": [
                    496
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 496,
                      "mutability": "mutable",
                      "name": "myTasks",
                      "nameLocation": "7363:7:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 576,
                      "src": "7347:23:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                        "typeString": "string[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 494,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "7347:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "id": 495,
                        "nodeType": "ArrayTypeName",
                        "src": "7347:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                          "typeString": "string[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 502,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 500,
                        "name": "count",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 418,
                        "src": "7386:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 499,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "7373:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (string memory[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 497,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "7377:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "id": 498,
                        "nodeType": "ArrayTypeName",
                        "src": "7377:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                          "typeString": "string[]"
                        }
                      }
                    },
                    "id": 501,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7373:19:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                      "typeString": "string memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7347:45:2"
                },
                {
                  "assignments": [
                    504
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 504,
                      "mutability": "mutable",
                      "name": "counter",
                      "nameLocation": "7410:7:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 576,
                      "src": "7402:15:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 503,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7402:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 506,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 505,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "7420:1:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7402:19:2"
                },
                {
                  "body": {
                    "id": 572,
                    "nodeType": "Block",
                    "src": "7469:475:2",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 546,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 539,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 531,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 523,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "baseExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 515,
                                        "name": "taskTypes",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 91,
                                        "src": "7486:9:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_TaskType_$51_storage_$dyn_storage",
                                          "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                        }
                                      },
                                      "id": 517,
                                      "indexExpression": {
                                        "id": 516,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 508,
                                        "src": "7496:1:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "7486:12:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_TaskType_$51_storage",
                                        "typeString": "struct Governance.TaskType storage ref"
                                      }
                                    },
                                    "id": 518,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "nextActiveTimeThreshold",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 34,
                                    "src": "7486:36:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint40_$_t_uint256_$",
                                      "typeString": "mapping(uint40 => uint256)"
                                    }
                                  },
                                  "id": 520,
                                  "indexExpression": {
                                    "id": 519,
                                    "name": "_wizId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 411,
                                    "src": "7523:6:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint40",
                                      "typeString": "uint40"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "7486:44:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<",
                                "rightExpression": {
                                  "expression": {
                                    "id": 521,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "7533:5:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 522,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "7533:15:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "7486:62:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 530,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 524,
                                      "name": "taskTypes",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 91,
                                      "src": "7564:9:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_TaskType_$51_storage_$dyn_storage",
                                        "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                      }
                                    },
                                    "id": 526,
                                    "indexExpression": {
                                      "id": 525,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 508,
                                      "src": "7574:1:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "7564:12:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_TaskType_$51_storage",
                                      "typeString": "struct Governance.TaskType storage ref"
                                    }
                                  },
                                  "id": 527,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "begTimestamp",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 46,
                                  "src": "7564:25:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint40",
                                    "typeString": "uint40"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<=",
                                "rightExpression": {
                                  "expression": {
                                    "id": 528,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "7593:5:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 529,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "7593:15:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "7564:44:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "7486:122:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "&&",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 538,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 532,
                                    "name": "taskTypes",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 91,
                                    "src": "7612:9:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_TaskType_$51_storage_$dyn_storage",
                                      "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                    }
                                  },
                                  "id": 534,
                                  "indexExpression": {
                                    "id": 533,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 508,
                                    "src": "7622:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "7612:12:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_TaskType_$51_storage",
                                    "typeString": "struct Governance.TaskType storage ref"
                                  }
                                },
                                "id": 535,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "endTimestamp",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 48,
                                "src": "7612:25:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint40",
                                  "typeString": "uint40"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "expression": {
                                  "id": 536,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "7640:5:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 537,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "7640:15:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "7612:43:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "7486:169:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            },
                            "id": 545,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 540,
                                  "name": "taskTypes",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 91,
                                  "src": "7671:9:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_TaskType_$51_storage_$dyn_storage",
                                    "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                  }
                                },
                                "id": 542,
                                "indexExpression": {
                                  "id": 541,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 508,
                                  "src": "7681:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "7671:12:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TaskType_$51_storage",
                                  "typeString": "struct Governance.TaskType storage ref"
                                }
                              },
                              "id": 543,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "availableSlots",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 50,
                              "src": "7671:27:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 544,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7701:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "7671:31:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "7486:216:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 567,
                        "nodeType": "IfStatement",
                        "src": "7483:423:2",
                        "trueBody": {
                          "id": 566,
                          "nodeType": "Block",
                          "src": "7717:189:2",
                          "statements": [
                            {
                              "expression": {
                                "id": 554,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 547,
                                    "name": "myTasks",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 496,
                                    "src": "7735:7:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                                      "typeString": "string memory[] memory"
                                    }
                                  },
                                  "id": 549,
                                  "indexExpression": {
                                    "id": 548,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 508,
                                    "src": "7743:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "7735:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 550,
                                      "name": "taskTypes",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 91,
                                      "src": "7748:9:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_TaskType_$51_storage_$dyn_storage",
                                        "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                      }
                                    },
                                    "id": 552,
                                    "indexExpression": {
                                      "id": 551,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 508,
                                      "src": "7758:1:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "7748:12:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_TaskType_$51_storage",
                                      "typeString": "struct Governance.TaskType storage ref"
                                    }
                                  },
                                  "id": 553,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "IPFSHash",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 36,
                                  "src": "7748:21:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_storage",
                                    "typeString": "string storage ref"
                                  }
                                },
                                "src": "7735:34:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              "id": 555,
                              "nodeType": "ExpressionStatement",
                              "src": "7735:34:2"
                            },
                            {
                              "id": 559,
                              "nodeType": "UncheckedBlock",
                              "src": "7787:21:2",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 557,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "UnaryOperation",
                                    "operator": "++",
                                    "prefix": true,
                                    "src": "7797:9:2",
                                    "subExpression": {
                                      "id": 556,
                                      "name": "counter",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 504,
                                      "src": "7799:7:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 558,
                                  "nodeType": "ExpressionStatement",
                                  "src": "7797:9:2"
                                }
                              ]
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 562,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 560,
                                  "name": "counter",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 504,
                                  "src": "7828:7:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">=",
                                "rightExpression": {
                                  "id": 561,
                                  "name": "count",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 418,
                                  "src": "7839:5:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "7828:16:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 565,
                              "nodeType": "IfStatement",
                              "src": "7825:67:2",
                              "trueBody": {
                                "id": 564,
                                "nodeType": "Block",
                                "src": "7846:46:2",
                                "statements": [
                                  {
                                    "id": 563,
                                    "nodeType": "Break",
                                    "src": "7868:5:2"
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      },
                      {
                        "id": 571,
                        "nodeType": "UncheckedBlock",
                        "src": "7919:15:2",
                        "statements": [
                          {
                            "expression": {
                              "id": 569,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": true,
                              "src": "7929:3:2",
                              "subExpression": {
                                "id": 568,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 508,
                                "src": "7931:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 570,
                            "nodeType": "ExpressionStatement",
                            "src": "7929:3:2"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 514,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 511,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 508,
                      "src": "7448:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 512,
                        "name": "taskTypes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 91,
                        "src": "7451:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_TaskType_$51_storage_$dyn_storage",
                          "typeString": "struct Governance.TaskType storage ref[] storage ref"
                        }
                      },
                      "id": 513,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "7451:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7448:19:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 573,
                  "initializationExpression": {
                    "assignments": [
                      508
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 508,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "7443:1:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 573,
                        "src": "7435:9:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 507,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7435:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 510,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 509,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7445:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "7435:11:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "7431:513:2"
                },
                {
                  "expression": {
                    "id": 574,
                    "name": "myTasks",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 496,
                    "src": "7960:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                      "typeString": "string memory[] memory"
                    }
                  },
                  "functionReturnParameters": 416,
                  "id": 575,
                  "nodeType": "Return",
                  "src": "7953:14:2"
                }
              ]
            },
            "functionSelector": "b2bad544",
            "id": 577,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getMyAvailableTaskTypes",
            "nameLocation": "6683:23:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 412,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 411,
                  "mutability": "mutable",
                  "name": "_wizId",
                  "nameLocation": "6714:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 577,
                  "src": "6707:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  },
                  "typeName": {
                    "id": 410,
                    "name": "uint40",
                    "nodeType": "ElementaryTypeName",
                    "src": "6707:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6706:15:2"
            },
            "returnParameters": {
              "id": 416,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 415,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 577,
                  "src": "6745:15:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                    "typeString": "string[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 413,
                      "name": "string",
                      "nodeType": "ElementaryTypeName",
                      "src": "6745:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      }
                    },
                    "id": 414,
                    "nodeType": "ArrayTypeName",
                    "src": "6745:8:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                      "typeString": "string[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6744:17:2"
            },
            "scope": 1622,
            "src": "6674:1300:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 590,
              "nodeType": "Block",
              "src": "8141:44:2",
              "statements": [
                {
                  "expression": {
                    "id": 588,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 584,
                      "name": "wizardsNFT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24,
                      "src": "8151:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Wizards_$3993",
                        "typeString": "contract Wizards"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 586,
                          "name": "_addy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 579,
                          "src": "8172:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 585,
                        "name": "Wizards",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3993,
                        "src": "8164:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Wizards_$3993_$",
                          "typeString": "type(contract Wizards)"
                        }
                      },
                      "id": 587,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8164:14:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Wizards_$3993",
                        "typeString": "contract Wizards"
                      }
                    },
                    "src": "8151:27:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Wizards_$3993",
                      "typeString": "contract Wizards"
                    }
                  },
                  "id": 589,
                  "nodeType": "ExpressionStatement",
                  "src": "8151:27:2"
                }
              ]
            },
            "functionSelector": "69d03738",
            "id": 591,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 582,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 581,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 6400,
                  "src": "8131:9:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "8131:9:2"
              }
            ],
            "name": "setNFTAddress",
            "nameLocation": "8093:13:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 580,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 579,
                  "mutability": "mutable",
                  "name": "_addy",
                  "nameLocation": "8115:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 591,
                  "src": "8107:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 578,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8107:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8106:15:2"
            },
            "returnParameters": {
              "id": 583,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8141:0:2"
            },
            "scope": 1622,
            "src": "8084:101:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 666,
              "nodeType": "Block",
              "src": "8379:1153:2",
              "statements": [
                {
                  "body": {
                    "id": 664,
                    "nodeType": "Block",
                    "src": "8426:1100:2",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          "id": 619,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 607,
                                        "name": "taskTypes",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 91,
                                        "src": "8470:9:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_TaskType_$51_storage_$dyn_storage",
                                          "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                        }
                                      },
                                      "id": 609,
                                      "indexExpression": {
                                        "id": 608,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 597,
                                        "src": "8480:1:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "8470:12:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_TaskType_$51_storage",
                                        "typeString": "struct Governance.TaskType storage ref"
                                      }
                                    },
                                    "id": 610,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "IPFSHash",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 36,
                                    "src": "8470:21:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_storage",
                                      "typeString": "string storage ref"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_string_storage",
                                      "typeString": "string storage ref"
                                    }
                                  ],
                                  "expression": {
                                    "id": 605,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "8453:3:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 606,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "encodePacked",
                                  "nodeType": "MemberAccess",
                                  "src": "8453:16:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 611,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8453:39:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 604,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "8443:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 612,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8443:50:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 616,
                                    "name": "_IPFSHash",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 593,
                                    "src": "8524:9:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  ],
                                  "expression": {
                                    "id": 614,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "8507:3:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 615,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "encodePacked",
                                  "nodeType": "MemberAccess",
                                  "src": "8507:16:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 617,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8507:27:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 613,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "8497:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 618,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8497:38:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "8443:92:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 659,
                        "nodeType": "IfStatement",
                        "src": "8440:1048:2",
                        "trueBody": {
                          "id": 658,
                          "nodeType": "Block",
                          "src": "8536:952:2",
                          "statements": [
                            {
                              "assignments": [
                                622
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 622,
                                  "mutability": "mutable",
                                  "name": "myTaskType",
                                  "nameLocation": "8635:10:2",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 658,
                                  "src": "8618:27:2",
                                  "stateVariable": false,
                                  "storageLocation": "storage",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_TaskType_$51_storage_ptr",
                                    "typeString": "struct Governance.TaskType"
                                  },
                                  "typeName": {
                                    "id": 621,
                                    "nodeType": "UserDefinedTypeName",
                                    "pathNode": {
                                      "id": 620,
                                      "name": "TaskType",
                                      "nodeType": "IdentifierPath",
                                      "referencedDeclaration": 51,
                                      "src": "8618:8:2"
                                    },
                                    "referencedDeclaration": 51,
                                    "src": "8618:8:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_TaskType_$51_storage_ptr",
                                      "typeString": "struct Governance.TaskType"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 626,
                              "initialValue": {
                                "baseExpression": {
                                  "id": 623,
                                  "name": "taskTypes",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 91,
                                  "src": "8648:9:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_TaskType_$51_storage_$dyn_storage",
                                    "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                  }
                                },
                                "id": 625,
                                "indexExpression": {
                                  "id": 624,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 597,
                                  "src": "8658:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "8648:12:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TaskType_$51_storage",
                                  "typeString": "struct Governance.TaskType storage ref"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "8618:42:2"
                            },
                            {
                              "assignments": [
                                629
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 629,
                                  "mutability": "mutable",
                                  "name": "displacedTaskType",
                                  "nameLocation": "8695:17:2",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 658,
                                  "src": "8678:34:2",
                                  "stateVariable": false,
                                  "storageLocation": "storage",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_TaskType_$51_storage_ptr",
                                    "typeString": "struct Governance.TaskType"
                                  },
                                  "typeName": {
                                    "id": 628,
                                    "nodeType": "UserDefinedTypeName",
                                    "pathNode": {
                                      "id": 627,
                                      "name": "TaskType",
                                      "nodeType": "IdentifierPath",
                                      "referencedDeclaration": 51,
                                      "src": "8678:8:2"
                                    },
                                    "referencedDeclaration": 51,
                                    "src": "8678:8:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_TaskType_$51_storage_ptr",
                                      "typeString": "struct Governance.TaskType"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 636,
                              "initialValue": {
                                "baseExpression": {
                                  "id": 630,
                                  "name": "taskTypes",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 91,
                                  "src": "8715:9:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_TaskType_$51_storage_$dyn_storage",
                                    "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                  }
                                },
                                "id": 635,
                                "indexExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 634,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "id": 631,
                                      "name": "taskTypes",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 91,
                                      "src": "8725:9:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_TaskType_$51_storage_$dyn_storage",
                                        "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                      }
                                    },
                                    "id": 632,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "length",
                                    "nodeType": "MemberAccess",
                                    "src": "8725:16:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "hexValue": "31",
                                    "id": 633,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "8742:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    "value": "1"
                                  },
                                  "src": "8725:18:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "8715:29:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TaskType_$51_storage",
                                  "typeString": "struct Governance.TaskType storage ref"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "8678:66:2"
                            },
                            {
                              "expression": {
                                "id": 639,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 637,
                                  "name": "myTaskType",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 622,
                                  "src": "8860:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_TaskType_$51_storage_ptr",
                                    "typeString": "struct Governance.TaskType storage pointer"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 638,
                                  "name": "displacedTaskType",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 629,
                                  "src": "8873:17:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_TaskType_$51_storage_ptr",
                                    "typeString": "struct Governance.TaskType storage pointer"
                                  }
                                },
                                "src": "8860:30:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TaskType_$51_storage_ptr",
                                  "typeString": "struct Governance.TaskType storage pointer"
                                }
                              },
                              "id": 640,
                              "nodeType": "ExpressionStatement",
                              "src": "8860:30:2"
                            },
                            {
                              "expression": {
                                "id": 647,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "delete",
                                "prefix": true,
                                "src": "8908:36:2",
                                "subExpression": {
                                  "baseExpression": {
                                    "id": 641,
                                    "name": "taskTypes",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 91,
                                    "src": "8915:9:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_TaskType_$51_storage_$dyn_storage",
                                      "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                    }
                                  },
                                  "id": 646,
                                  "indexExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 645,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "id": 642,
                                        "name": "taskTypes",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 91,
                                        "src": "8925:9:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_TaskType_$51_storage_$dyn_storage",
                                          "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                        }
                                      },
                                      "id": 643,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "length",
                                      "nodeType": "MemberAccess",
                                      "src": "8925:16:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "-",
                                    "rightExpression": {
                                      "hexValue": "31",
                                      "id": 644,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "8942:1:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1_by_1",
                                        "typeString": "int_const 1"
                                      },
                                      "value": "1"
                                    },
                                    "src": "8925:18:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "8915:29:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_TaskType_$51_storage",
                                    "typeString": "struct Governance.TaskType storage ref"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 648,
                              "nodeType": "ExpressionStatement",
                              "src": "8908:36:2"
                            },
                            {
                              "expression": {
                                "id": 655,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "delete",
                                "prefix": true,
                                "src": "9414:36:2",
                                "subExpression": {
                                  "baseExpression": {
                                    "id": 649,
                                    "name": "taskTypes",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 91,
                                    "src": "9421:9:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_TaskType_$51_storage_$dyn_storage",
                                      "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                    }
                                  },
                                  "id": 654,
                                  "indexExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 653,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "id": 650,
                                        "name": "taskTypes",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 91,
                                        "src": "9431:9:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_TaskType_$51_storage_$dyn_storage",
                                          "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                        }
                                      },
                                      "id": 651,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "length",
                                      "nodeType": "MemberAccess",
                                      "src": "9431:16:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "-",
                                    "rightExpression": {
                                      "hexValue": "31",
                                      "id": 652,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "9448:1:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1_by_1",
                                        "typeString": "int_const 1"
                                      },
                                      "value": "1"
                                    },
                                    "src": "9431:18:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "9421:29:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_TaskType_$51_storage",
                                    "typeString": "struct Governance.TaskType storage ref"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 656,
                              "nodeType": "ExpressionStatement",
                              "src": "9414:36:2"
                            },
                            {
                              "id": 657,
                              "nodeType": "Break",
                              "src": "9468:5:2"
                            }
                          ]
                        }
                      },
                      {
                        "id": 663,
                        "nodeType": "UncheckedBlock",
                        "src": "9501:15:2",
                        "statements": [
                          {
                            "expression": {
                              "id": 661,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": true,
                              "src": "9511:3:2",
                              "subExpression": {
                                "id": 660,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 597,
                                "src": "9513:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 662,
                            "nodeType": "ExpressionStatement",
                            "src": "9511:3:2"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 603,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 600,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 597,
                      "src": "8406:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 601,
                        "name": "taskTypes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 91,
                        "src": "8408:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_TaskType_$51_storage_$dyn_storage",
                          "typeString": "struct Governance.TaskType storage ref[] storage ref"
                        }
                      },
                      "id": 602,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "8408:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8406:18:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 665,
                  "initializationExpression": {
                    "assignments": [
                      597
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 597,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "8401:1:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 665,
                        "src": "8393:9:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 596,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8393:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 599,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 598,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8403:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "8393:11:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "8389:1137:2"
                }
              ]
            },
            "functionSelector": "f713b7ed",
            "id": 667,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deleteTaskTypeByIPFSHash",
            "nameLocation": "8320:24:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 594,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 593,
                  "mutability": "mutable",
                  "name": "_IPFSHash",
                  "nameLocation": "8359:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 667,
                  "src": "8345:23:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 592,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "8345:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8344:25:2"
            },
            "returnParameters": {
              "id": 595,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8379:0:2"
            },
            "scope": 1622,
            "src": "8311:1221:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 679,
              "nodeType": "Block",
              "src": "9765:151:2",
              "statements": [
                {
                  "expression": {
                    "id": 677,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 673,
                      "name": "wizardsNFT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24,
                      "src": "9819:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Wizards_$3993",
                        "typeString": "contract Wizards"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 675,
                          "name": "_nft",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 670,
                          "src": "9840:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 674,
                        "name": "Wizards",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3993,
                        "src": "9832:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Wizards_$3993_$",
                          "typeString": "type(contract Wizards)"
                        }
                      },
                      "id": 676,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9832:13:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Wizards_$3993",
                        "typeString": "contract Wizards"
                      }
                    },
                    "src": "9819:26:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Wizards_$3993",
                      "typeString": "contract Wizards"
                    }
                  },
                  "id": 678,
                  "nodeType": "ExpressionStatement",
                  "src": "9819:26:2"
                }
              ]
            },
            "documentation": {
              "id": 668,
              "nodeType": "StructuredDocumentation",
              "src": "9646:89:2",
              "text": "@dev Constructor for HOADAO\n@param _nft -- contract address for NFTs"
            },
            "id": 680,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 671,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 670,
                  "mutability": "mutable",
                  "name": "_nft",
                  "nameLocation": "9760:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 680,
                  "src": "9752:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 669,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9752:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9751:14:2"
            },
            "returnParameters": {
              "id": 672,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9765:0:2"
            },
            "scope": 1622,
            "src": "9740:176:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 683,
              "nodeType": "Block",
              "src": "9980:7:2",
              "statements": []
            },
            "id": 684,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 681,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9960:2:2"
            },
            "returnParameters": {
              "id": 682,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9980:0:2"
            },
            "scope": 1622,
            "src": "9953:34:2",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 773,
              "nodeType": "Block",
              "src": "10077:580:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 698,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 696,
                          "name": "proposalID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 686,
                          "src": "10095:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "id": 697,
                          "name": "totalProposals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 101,
                          "src": "10108:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "10095:27:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6e6f20737563682070726f706f73616c",
                        "id": 699,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10124:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7f70e7e117a210e101713c97232a3cb728ce069a6ee3603e8c77d84127a93b4e",
                          "typeString": "literal_string \"no such proposal\""
                        },
                        "value": "no such proposal"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7f70e7e117a210e101713c97232a3cb728ce069a6ee3603e8c77d84127a93b4e",
                          "typeString": "literal_string \"no such proposal\""
                        }
                      ],
                      "id": 695,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10087:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 700,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10087:56:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 701,
                  "nodeType": "ExpressionStatement",
                  "src": "10087:56:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 709,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 705,
                              "name": "NFTID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 688,
                              "src": "10180:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 703,
                              "name": "wizardsNFT",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24,
                              "src": "10161:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Wizards_$3993",
                                "typeString": "contract Wizards"
                              }
                            },
                            "id": 704,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "ownerOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4610,
                            "src": "10161:18:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view external returns (address)"
                            }
                          },
                          "id": 706,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10161:25:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 707,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "10188:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 708,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "10188:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "10161:37:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6e6f74206f776e6572206f66204e4654",
                        "id": 710,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10200:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_73759f0e095f46dd731a35f99460bb6e619d6a499dbe8aada299139e4499269c",
                          "typeString": "literal_string \"not owner of NFT\""
                        },
                        "value": "not owner of NFT"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_73759f0e095f46dd731a35f99460bb6e619d6a499dbe8aada299139e4499269c",
                          "typeString": "literal_string \"not owner of NFT\""
                        }
                      ],
                      "id": 702,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10153:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 711,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10153:66:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 712,
                  "nodeType": "ExpressionStatement",
                  "src": "10153:66:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 720,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 714,
                              "name": "proposalToNFTVotes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30,
                              "src": "10237:18:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                                "typeString": "mapping(uint256 => mapping(uint256 => uint256))"
                              }
                            },
                            "id": 716,
                            "indexExpression": {
                              "id": 715,
                              "name": "proposalID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 686,
                              "src": "10256:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "10237:30:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                              "typeString": "mapping(uint256 => uint256)"
                            }
                          },
                          "id": 718,
                          "indexExpression": {
                            "id": 717,
                            "name": "NFTID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 688,
                            "src": "10268:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "10237:37:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 719,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10276:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "10237:40:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "616c726561647920766f746564",
                        "id": 721,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10279:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_300512b688c99720d35ec7d5b6f38f17f9fa91c0bc270419bc4a8ce8e86b6fff",
                          "typeString": "literal_string \"already voted\""
                        },
                        "value": "already voted"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_300512b688c99720d35ec7d5b6f38f17f9fa91c0bc270419bc4a8ce8e86b6fff",
                          "typeString": "literal_string \"already voted\""
                        }
                      ],
                      "id": 713,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10229:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 722,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10229:66:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 723,
                  "nodeType": "ExpressionStatement",
                  "src": "10229:66:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 734,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 727,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 725,
                            "name": "_vote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 690,
                            "src": "10313:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 726,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10320:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "10313:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 733,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 728,
                            "name": "_vote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 690,
                            "src": "10325:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 729,
                                "name": "proposals",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 99,
                                "src": "10334:9:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$87_storage_$",
                                  "typeString": "mapping(uint256 => struct Governance.Proposal storage ref)"
                                }
                              },
                              "id": 731,
                              "indexExpression": {
                                "id": 730,
                                "name": "proposalID",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 686,
                                "src": "10344:10:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "10334:21:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Proposal_$87_storage",
                                "typeString": "struct Governance.Proposal storage ref"
                              }
                            },
                            "id": 732,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "numberOfOptions",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 76,
                            "src": "10334:37:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "src": "10325:46:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "10313:58:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 724,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10305:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 735,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10305:67:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 736,
                  "nodeType": "ExpressionStatement",
                  "src": "10305:67:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 744,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 738,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "10390:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 739,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "10390:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 740,
                              "name": "proposals",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 99,
                              "src": "10408:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$87_storage_$",
                                "typeString": "mapping(uint256 => struct Governance.Proposal storage ref)"
                              }
                            },
                            "id": 742,
                            "indexExpression": {
                              "id": 741,
                              "name": "proposalID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 686,
                              "src": "10418:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "10408:21:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Proposal_$87_storage",
                              "typeString": "struct Governance.Proposal storage ref"
                            }
                          },
                          "id": 743,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "endTimestamp",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 86,
                          "src": "10408:34:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint40",
                            "typeString": "uint40"
                          }
                        },
                        "src": "10390:52:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 737,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10382:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 745,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10382:61:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 746,
                  "nodeType": "ExpressionStatement",
                  "src": "10382:61:2"
                },
                {
                  "expression": {
                    "id": 755,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 747,
                          "name": "proposalToNFTVotes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30,
                          "src": "10453:18:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                            "typeString": "mapping(uint256 => mapping(uint256 => uint256))"
                          }
                        },
                        "id": 750,
                        "indexExpression": {
                          "id": 748,
                          "name": "proposalID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 686,
                          "src": "10472:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "10453:30:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 751,
                      "indexExpression": {
                        "id": 749,
                        "name": "NFTID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 688,
                        "src": "10484:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "10453:37:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 754,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 752,
                        "name": "_vote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 690,
                        "src": "10493:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "hexValue": "31",
                        "id": 753,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10501:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "10493:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10453:49:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 756,
                  "nodeType": "ExpressionStatement",
                  "src": "10453:49:2"
                },
                {
                  "expression": {
                    "id": 764,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "expression": {
                          "baseExpression": {
                            "id": 757,
                            "name": "proposals",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99,
                            "src": "10545:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$87_storage_$",
                              "typeString": "mapping(uint256 => struct Governance.Proposal storage ref)"
                            }
                          },
                          "id": 759,
                          "indexExpression": {
                            "id": 758,
                            "name": "proposalID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 686,
                            "src": "10555:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "10545:21:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Proposal_$87_storage",
                            "typeString": "struct Governance.Proposal storage ref"
                          }
                        },
                        "id": 760,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "votes",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 80,
                        "src": "10545:27:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint16_$8_storage",
                          "typeString": "uint16[8] storage ref"
                        }
                      },
                      "id": 762,
                      "indexExpression": {
                        "id": 761,
                        "name": "_vote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 690,
                        "src": "10573:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "10545:34:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 763,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10583:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "10545:39:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "id": 765,
                  "nodeType": "ExpressionStatement",
                  "src": "10545:39:2"
                },
                {
                  "expression": {
                    "id": 771,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 766,
                          "name": "proposals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99,
                          "src": "10613:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$87_storage_$",
                            "typeString": "mapping(uint256 => struct Governance.Proposal storage ref)"
                          }
                        },
                        "id": 768,
                        "indexExpression": {
                          "id": 767,
                          "name": "proposalID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 686,
                          "src": "10623:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "10613:21:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proposal_$87_storage",
                          "typeString": "struct Governance.Proposal storage ref"
                        }
                      },
                      "id": 769,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "totalVotes",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 82,
                      "src": "10613:32:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint40",
                        "typeString": "uint40"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 770,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10649:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "10613:37:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "id": 772,
                  "nodeType": "ExpressionStatement",
                  "src": "10613:37:2"
                }
              ]
            },
            "functionSelector": "8a6655d6",
            "id": 774,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 693,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 692,
                  "name": "onlyMember",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1612,
                  "src": "10066:10:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "10066:10:2"
              }
            ],
            "name": "vote",
            "nameLocation": "10002:4:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 691,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 686,
                  "mutability": "mutable",
                  "name": "proposalID",
                  "nameLocation": "10015:10:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 774,
                  "src": "10007:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 685,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10007:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 688,
                  "mutability": "mutable",
                  "name": "NFTID",
                  "nameLocation": "10035:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 774,
                  "src": "10027:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 687,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10027:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 690,
                  "mutability": "mutable",
                  "name": "_vote",
                  "nameLocation": "10050:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 774,
                  "src": "10042:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 689,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10042:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10006:50:2"
            },
            "returnParameters": {
              "id": 694,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10077:0:2"
            },
            "scope": 1622,
            "src": "9993:664:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 850,
              "nodeType": "Block",
              "src": "10885:580:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 798,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          },
                          "id": 794,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 792,
                            "name": "_numberOfOptions",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 778,
                            "src": "10903:16:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 793,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10922:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "10903:20:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          },
                          "id": 797,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 795,
                            "name": "_numberOfOptions",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 778,
                            "src": "10927:16:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "hexValue": "323537",
                            "id": 796,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10946:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_257_by_1",
                              "typeString": "int_const 257"
                            },
                            "value": "257"
                          },
                          "src": "10927:22:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "10903:46:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "696e76616c6964206e756d626572206f66206f7074696f6e73",
                        "id": 799,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10951:27:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c4475af82e361be3665e848c2658c7e9ff0d7f613ea39becc6f39f268d955f1b",
                          "typeString": "literal_string \"invalid number of options\""
                        },
                        "value": "invalid number of options"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c4475af82e361be3665e848c2658c7e9ff0d7f613ea39becc6f39f268d955f1b",
                          "typeString": "literal_string \"invalid number of options\""
                        }
                      ],
                      "id": 791,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10895:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 800,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10895:84:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 801,
                  "nodeType": "ExpressionStatement",
                  "src": "10895:84:2"
                },
                {
                  "expression": {
                    "id": 804,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 802,
                      "name": "totalProposals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 101,
                      "src": "10989:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 803,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "11007:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "10989:19:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 805,
                  "nodeType": "ExpressionStatement",
                  "src": "10989:19:2"
                },
                {
                  "assignments": [
                    808
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 808,
                      "mutability": "mutable",
                      "name": "myProposal",
                      "nameLocation": "11056:10:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 850,
                      "src": "11039:27:2",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Proposal_$87_storage_ptr",
                        "typeString": "struct Governance.Proposal"
                      },
                      "typeName": {
                        "id": 807,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 806,
                          "name": "Proposal",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 87,
                          "src": "11039:8:2"
                        },
                        "referencedDeclaration": 87,
                        "src": "11039:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proposal_$87_storage_ptr",
                          "typeString": "struct Governance.Proposal"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 812,
                  "initialValue": {
                    "baseExpression": {
                      "id": 809,
                      "name": "proposals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 99,
                      "src": "11069:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$87_storage_$",
                        "typeString": "mapping(uint256 => struct Governance.Proposal storage ref)"
                      }
                    },
                    "id": 811,
                    "indexExpression": {
                      "id": 810,
                      "name": "totalProposals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 101,
                      "src": "11079:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "11069:25:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Proposal_$87_storage",
                      "typeString": "struct Governance.Proposal storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11039:55:2"
                },
                {
                  "expression": {
                    "id": 817,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 813,
                        "name": "myProposal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 808,
                        "src": "11108:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proposal_$87_storage_ptr",
                          "typeString": "struct Governance.Proposal storage pointer"
                        }
                      },
                      "id": 815,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "begTimestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 84,
                      "src": "11108:23:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint40",
                        "typeString": "uint40"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 816,
                      "name": "_begTimestamp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 782,
                      "src": "11134:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint40",
                        "typeString": "uint40"
                      }
                    },
                    "src": "11108:39:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "id": 818,
                  "nodeType": "ExpressionStatement",
                  "src": "11108:39:2"
                },
                {
                  "expression": {
                    "id": 823,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 819,
                        "name": "myProposal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 808,
                        "src": "11161:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proposal_$87_storage_ptr",
                          "typeString": "struct Governance.Proposal storage pointer"
                        }
                      },
                      "id": 821,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "endTimestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 86,
                      "src": "11161:23:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint40",
                        "typeString": "uint40"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 822,
                      "name": "_endTimestamp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 784,
                      "src": "11187:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint40",
                        "typeString": "uint40"
                      }
                    },
                    "src": "11161:39:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "id": 824,
                  "nodeType": "ExpressionStatement",
                  "src": "11161:39:2"
                },
                {
                  "expression": {
                    "id": 829,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 825,
                        "name": "myProposal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 808,
                        "src": "11214:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proposal_$87_storage_ptr",
                          "typeString": "struct Governance.Proposal storage pointer"
                        }
                      },
                      "id": 827,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "numberOfOptions",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 76,
                      "src": "11214:26:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 828,
                      "name": "_numberOfOptions",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 778,
                      "src": "11243:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "src": "11214:45:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "id": 830,
                  "nodeType": "ExpressionStatement",
                  "src": "11214:45:2"
                },
                {
                  "expression": {
                    "id": 835,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 831,
                        "name": "myProposal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 808,
                        "src": "11273:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Proposal_$87_storage_ptr",
                          "typeString": "struct Governance.Proposal storage pointer"
                        }
                      },
                      "id": 833,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "IPFSHash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 74,
                      "src": "11273:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 834,
                      "name": "_IPFSHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 776,
                      "src": "11295:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_calldata_ptr",
                        "typeString": "string calldata"
                      }
                    },
                    "src": "11273:31:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 836,
                  "nodeType": "ExpressionStatement",
                  "src": "11273:31:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 838,
                        "name": "_IPFSHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 776,
                        "src": "11331:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 841,
                            "name": "totalProposals",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 101,
                            "src": "11349:14:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 840,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11342:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint40_$",
                            "typeString": "type(uint40)"
                          },
                          "typeName": {
                            "id": 839,
                            "name": "uint40",
                            "nodeType": "ElementaryTypeName",
                            "src": "11342:6:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 842,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11342:22:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 843,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11366:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "id": 844,
                        "name": "_timeBonus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 780,
                        "src": "11369:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      },
                      {
                        "id": 845,
                        "name": "_begTimestamp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 782,
                        "src": "11381:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        }
                      },
                      {
                        "id": 846,
                        "name": "_endTimestamp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 784,
                        "src": "11396:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        }
                      },
                      {
                        "id": 847,
                        "name": "_availableSlots",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 786,
                        "src": "11411:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        },
                        {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        },
                        {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        },
                        {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      ],
                      "id": 837,
                      "name": "_createTaskType",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 972,
                      "src": "11315:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_calldata_ptr_$_t_uint40_$_t_uint8_$_t_uint24_$_t_uint40_$_t_uint40_$_t_uint16_$returns$__$",
                        "typeString": "function (string calldata,uint40,uint8,uint24,uint40,uint40,uint16)"
                      }
                    },
                    "id": 848,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11315:112:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 849,
                  "nodeType": "ExpressionStatement",
                  "src": "11315:112:2"
                }
              ]
            },
            "functionSelector": "beca3a16",
            "id": 851,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 789,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 788,
                  "name": "onlyBoard",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1621,
                  "src": "10875:9:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "10875:9:2"
              }
            ],
            "name": "createProposal",
            "nameLocation": "10712:14:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 787,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 776,
                  "mutability": "mutable",
                  "name": "_IPFSHash",
                  "nameLocation": "10743:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 851,
                  "src": "10727:25:2",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 775,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "10727:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 778,
                  "mutability": "mutable",
                  "name": "_numberOfOptions",
                  "nameLocation": "10761:16:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 851,
                  "src": "10754:23:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 777,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "10754:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 780,
                  "mutability": "mutable",
                  "name": "_timeBonus",
                  "nameLocation": "10786:10:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 851,
                  "src": "10779:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint24",
                    "typeString": "uint24"
                  },
                  "typeName": {
                    "id": 779,
                    "name": "uint24",
                    "nodeType": "ElementaryTypeName",
                    "src": "10779:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint24",
                      "typeString": "uint24"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 782,
                  "mutability": "mutable",
                  "name": "_begTimestamp",
                  "nameLocation": "10805:13:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 851,
                  "src": "10798:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  },
                  "typeName": {
                    "id": 781,
                    "name": "uint40",
                    "nodeType": "ElementaryTypeName",
                    "src": "10798:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 784,
                  "mutability": "mutable",
                  "name": "_endTimestamp",
                  "nameLocation": "10827:13:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 851,
                  "src": "10820:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  },
                  "typeName": {
                    "id": 783,
                    "name": "uint40",
                    "nodeType": "ElementaryTypeName",
                    "src": "10820:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 786,
                  "mutability": "mutable",
                  "name": "_availableSlots",
                  "nameLocation": "10849:15:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 851,
                  "src": "10842:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 785,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "10842:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10726:139:2"
            },
            "returnParameters": {
              "id": 790,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10885:0:2"
            },
            "scope": 1622,
            "src": "10703:762:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 878,
              "nodeType": "Block",
              "src": "11669:123:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 869,
                        "name": "_IPFSHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 853,
                        "src": "11695:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 870,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11706:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "id": 871,
                        "name": "_numFieldsToHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 855,
                        "src": "11709:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "id": 872,
                        "name": "_timeBonus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 857,
                        "src": "11727:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      },
                      {
                        "id": 873,
                        "name": "_begTimestamp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 859,
                        "src": "11739:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        }
                      },
                      {
                        "id": 874,
                        "name": "_endTimestamp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 861,
                        "src": "11754:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        }
                      },
                      {
                        "id": 875,
                        "name": "_availableSlots",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 863,
                        "src": "11769:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        },
                        {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        },
                        {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        },
                        {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      ],
                      "id": 868,
                      "name": "_createTaskType",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 972,
                      "src": "11679:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_calldata_ptr_$_t_uint40_$_t_uint8_$_t_uint24_$_t_uint40_$_t_uint40_$_t_uint16_$returns$__$",
                        "typeString": "function (string calldata,uint40,uint8,uint24,uint40,uint40,uint16)"
                      }
                    },
                    "id": 876,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11679:106:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 877,
                  "nodeType": "ExpressionStatement",
                  "src": "11679:106:2"
                }
              ]
            },
            "functionSelector": "61f9e9a8",
            "id": 879,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 866,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 865,
                  "name": "onlyBoard",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1621,
                  "src": "11659:9:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "11659:9:2"
              }
            ],
            "name": "createTaskType",
            "nameLocation": "11481:14:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 864,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 853,
                  "mutability": "mutable",
                  "name": "_IPFSHash",
                  "nameLocation": "11512:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 879,
                  "src": "11496:25:2",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 852,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "11496:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 855,
                  "mutability": "mutable",
                  "name": "_numFieldsToHash",
                  "nameLocation": "11529:16:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 879,
                  "src": "11523:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 854,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "11523:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 857,
                  "mutability": "mutable",
                  "name": "_timeBonus",
                  "nameLocation": "11554:10:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 879,
                  "src": "11547:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint24",
                    "typeString": "uint24"
                  },
                  "typeName": {
                    "id": 856,
                    "name": "uint24",
                    "nodeType": "ElementaryTypeName",
                    "src": "11547:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint24",
                      "typeString": "uint24"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 859,
                  "mutability": "mutable",
                  "name": "_begTimestamp",
                  "nameLocation": "11573:13:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 879,
                  "src": "11566:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  },
                  "typeName": {
                    "id": 858,
                    "name": "uint40",
                    "nodeType": "ElementaryTypeName",
                    "src": "11566:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 861,
                  "mutability": "mutable",
                  "name": "_endTimestamp",
                  "nameLocation": "11611:13:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 879,
                  "src": "11604:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  },
                  "typeName": {
                    "id": 860,
                    "name": "uint40",
                    "nodeType": "ElementaryTypeName",
                    "src": "11604:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 863,
                  "mutability": "mutable",
                  "name": "_availableSlots",
                  "nameLocation": "11633:15:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 879,
                  "src": "11626:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 862,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "11626:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11495:154:2"
            },
            "returnParameters": {
              "id": 867,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11669:0:2"
            },
            "scope": 1622,
            "src": "11472:320:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 971,
              "nodeType": "Block",
              "src": "12003:726:2",
              "statements": [
                {
                  "assignments": [
                    897
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 897,
                      "mutability": "mutable",
                      "name": "taskTypesLength",
                      "nameLocation": "12021:15:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 971,
                      "src": "12013:23:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 896,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "12013:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 900,
                  "initialValue": {
                    "expression": {
                      "id": 898,
                      "name": "taskTypes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 91,
                      "src": "12039:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_TaskType_$51_storage_$dyn_storage",
                        "typeString": "struct Governance.TaskType storage ref[] storage ref"
                      }
                    },
                    "id": 899,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "12039:16:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12013:42:2"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 901,
                        "name": "taskTypes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 91,
                        "src": "12065:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_TaskType_$51_storage_$dyn_storage",
                          "typeString": "struct Governance.TaskType storage ref[] storage ref"
                        }
                      },
                      "id": 903,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "12065:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_TaskType_$51_storage_$dyn_storage_ptr_$returns$_t_struct$_TaskType_$51_storage_$bound_to$_t_array$_t_struct$_TaskType_$51_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct Governance.TaskType storage ref[] storage pointer) returns (struct Governance.TaskType storage ref)"
                      }
                    },
                    "id": 904,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12065:16:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TaskType_$51_storage",
                      "typeString": "struct Governance.TaskType storage ref"
                    }
                  },
                  "id": 905,
                  "nodeType": "ExpressionStatement",
                  "src": "12065:16:2"
                },
                {
                  "assignments": [
                    908
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 908,
                      "mutability": "mutable",
                      "name": "newTaskType",
                      "nameLocation": "12108:11:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 971,
                      "src": "12091:28:2",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TaskType_$51_storage_ptr",
                        "typeString": "struct Governance.TaskType"
                      },
                      "typeName": {
                        "id": 907,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 906,
                          "name": "TaskType",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 51,
                          "src": "12091:8:2"
                        },
                        "referencedDeclaration": 51,
                        "src": "12091:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TaskType_$51_storage_ptr",
                          "typeString": "struct Governance.TaskType"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 912,
                  "initialValue": {
                    "baseExpression": {
                      "id": 909,
                      "name": "taskTypes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 91,
                      "src": "12122:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_TaskType_$51_storage_$dyn_storage",
                        "typeString": "struct Governance.TaskType storage ref[] storage ref"
                      }
                    },
                    "id": 911,
                    "indexExpression": {
                      "id": 910,
                      "name": "taskTypesLength",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 897,
                      "src": "12132:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "12122:26:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TaskType_$51_storage",
                      "typeString": "struct Governance.TaskType storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12091:57:2"
                },
                {
                  "expression": {
                    "id": 917,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 913,
                        "name": "newTaskType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 908,
                        "src": "12162:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TaskType_$51_storage_ptr",
                          "typeString": "struct Governance.TaskType storage pointer"
                        }
                      },
                      "id": 915,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "IPFSHash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 36,
                      "src": "12162:20:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 916,
                      "name": "_IPFSHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 881,
                      "src": "12184:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_calldata_ptr",
                        "typeString": "string calldata"
                      }
                    },
                    "src": "12162:31:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 918,
                  "nodeType": "ExpressionStatement",
                  "src": "12162:31:2"
                },
                {
                  "expression": {
                    "id": 923,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 919,
                        "name": "newTaskType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 908,
                        "src": "12207:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TaskType_$51_storage_ptr",
                          "typeString": "struct Governance.TaskType storage pointer"
                        }
                      },
                      "id": 921,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "paused",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 38,
                      "src": "12207:18:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 922,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "12228:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "12207:26:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 924,
                  "nodeType": "ExpressionStatement",
                  "src": "12207:26:2"
                },
                {
                  "expression": {
                    "id": 929,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 925,
                        "name": "newTaskType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 908,
                        "src": "12247:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TaskType_$51_storage_ptr",
                          "typeString": "struct Governance.TaskType storage pointer"
                        }
                      },
                      "id": 927,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "proposalID",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 40,
                      "src": "12247:22:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint40",
                        "typeString": "uint40"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 928,
                      "name": "_proposalID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 883,
                      "src": "12272:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint40",
                        "typeString": "uint40"
                      }
                    },
                    "src": "12247:36:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "id": 930,
                  "nodeType": "ExpressionStatement",
                  "src": "12247:36:2"
                },
                {
                  "expression": {
                    "id": 935,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 931,
                        "name": "newTaskType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 908,
                        "src": "12297:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TaskType_$51_storage_ptr",
                          "typeString": "struct Governance.TaskType storage pointer"
                        }
                      },
                      "id": 933,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "numFieldsToHash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 42,
                      "src": "12297:27:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 934,
                      "name": "_numFieldsToHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 885,
                      "src": "12327:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "12297:46:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 936,
                  "nodeType": "ExpressionStatement",
                  "src": "12297:46:2"
                },
                {
                  "expression": {
                    "id": 941,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 937,
                        "name": "newTaskType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 908,
                        "src": "12357:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TaskType_$51_storage_ptr",
                          "typeString": "struct Governance.TaskType storage pointer"
                        }
                      },
                      "id": 939,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "timeBonus",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44,
                      "src": "12357:21:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint24",
                        "typeString": "uint24"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 940,
                      "name": "_timeBonus",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 887,
                      "src": "12381:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint24",
                        "typeString": "uint24"
                      }
                    },
                    "src": "12357:34:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint24",
                      "typeString": "uint24"
                    }
                  },
                  "id": 942,
                  "nodeType": "ExpressionStatement",
                  "src": "12357:34:2"
                },
                {
                  "expression": {
                    "id": 947,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 943,
                        "name": "newTaskType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 908,
                        "src": "12405:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TaskType_$51_storage_ptr",
                          "typeString": "struct Governance.TaskType storage pointer"
                        }
                      },
                      "id": 945,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "begTimestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46,
                      "src": "12405:24:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint40",
                        "typeString": "uint40"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 946,
                      "name": "_begTimestamp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 889,
                      "src": "12432:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint40",
                        "typeString": "uint40"
                      }
                    },
                    "src": "12405:40:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "id": 948,
                  "nodeType": "ExpressionStatement",
                  "src": "12405:40:2"
                },
                {
                  "expression": {
                    "id": 953,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 949,
                        "name": "newTaskType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 908,
                        "src": "12459:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TaskType_$51_storage_ptr",
                          "typeString": "struct Governance.TaskType storage pointer"
                        }
                      },
                      "id": 951,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "endTimestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 48,
                      "src": "12459:24:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint40",
                        "typeString": "uint40"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 952,
                      "name": "_endTimestamp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 891,
                      "src": "12486:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint40",
                        "typeString": "uint40"
                      }
                    },
                    "src": "12459:40:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "id": 954,
                  "nodeType": "ExpressionStatement",
                  "src": "12459:40:2"
                },
                {
                  "expression": {
                    "id": 959,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 955,
                        "name": "newTaskType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 908,
                        "src": "12513:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TaskType_$51_storage_ptr",
                          "typeString": "struct Governance.TaskType storage pointer"
                        }
                      },
                      "id": 957,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "availableSlots",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50,
                      "src": "12513:26:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 958,
                      "name": "_availableSlots",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 893,
                      "src": "12542:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "src": "12513:44:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "id": 960,
                  "nodeType": "ExpressionStatement",
                  "src": "12513:44:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 962,
                        "name": "_IPFSHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 881,
                        "src": "12622:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "id": 963,
                        "name": "_proposalID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 883,
                        "src": "12633:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        }
                      },
                      {
                        "id": 964,
                        "name": "_numFieldsToHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 885,
                        "src": "12646:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "id": 965,
                        "name": "_timeBonus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 887,
                        "src": "12664:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      },
                      {
                        "id": 966,
                        "name": "_begTimestamp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 889,
                        "src": "12676:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        }
                      },
                      {
                        "id": 967,
                        "name": "_endTimestamp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 891,
                        "src": "12691:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        }
                      },
                      {
                        "id": 968,
                        "name": "_availableSlots",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 893,
                        "src": "12706:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        },
                        {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        },
                        {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        },
                        {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      ],
                      "id": 961,
                      "name": "NewTaskTypeCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 168,
                      "src": "12603:18:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint40_$_t_uint8_$_t_uint24_$_t_uint40_$_t_uint40_$_t_uint16_$returns$__$",
                        "typeString": "function (string memory,uint40,uint8,uint24,uint40,uint40,uint16)"
                      }
                    },
                    "id": 969,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12603:119:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 970,
                  "nodeType": "EmitStatement",
                  "src": "12598:124:2"
                }
              ]
            },
            "id": 972,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_createTaskType",
            "nameLocation": "11807:15:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 894,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 881,
                  "mutability": "mutable",
                  "name": "_IPFSHash",
                  "nameLocation": "11839:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 972,
                  "src": "11823:25:2",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 880,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "11823:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 883,
                  "mutability": "mutable",
                  "name": "_proposalID",
                  "nameLocation": "11857:11:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 972,
                  "src": "11850:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  },
                  "typeName": {
                    "id": 882,
                    "name": "uint40",
                    "nodeType": "ElementaryTypeName",
                    "src": "11850:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 885,
                  "mutability": "mutable",
                  "name": "_numFieldsToHash",
                  "nameLocation": "11876:16:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 972,
                  "src": "11870:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 884,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "11870:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 887,
                  "mutability": "mutable",
                  "name": "_timeBonus",
                  "nameLocation": "11901:10:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 972,
                  "src": "11894:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint24",
                    "typeString": "uint24"
                  },
                  "typeName": {
                    "id": 886,
                    "name": "uint24",
                    "nodeType": "ElementaryTypeName",
                    "src": "11894:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint24",
                      "typeString": "uint24"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 889,
                  "mutability": "mutable",
                  "name": "_begTimestamp",
                  "nameLocation": "11933:13:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 972,
                  "src": "11926:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  },
                  "typeName": {
                    "id": 888,
                    "name": "uint40",
                    "nodeType": "ElementaryTypeName",
                    "src": "11926:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 891,
                  "mutability": "mutable",
                  "name": "_endTimestamp",
                  "nameLocation": "11955:13:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 972,
                  "src": "11948:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  },
                  "typeName": {
                    "id": 890,
                    "name": "uint40",
                    "nodeType": "ElementaryTypeName",
                    "src": "11948:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 893,
                  "mutability": "mutable",
                  "name": "_availableSlots",
                  "nameLocation": "11977:15:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 972,
                  "src": "11970:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 892,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "11970:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11822:171:2"
            },
            "returnParameters": {
              "id": 895,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12003:0:2"
            },
            "scope": 1622,
            "src": "11798:931:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1073,
              "nodeType": "Block",
              "src": "12801:1781:2",
              "statements": [
                {
                  "assignments": [
                    978
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 978,
                      "mutability": "mutable",
                      "name": "totalTasksSubmitted",
                      "nameLocation": "12819:19:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1073,
                      "src": "12811:27:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 977,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "12811:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 983,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 981,
                        "name": "tasksSubmitted",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 94,
                        "src": "12865:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Bytes32Deque_$4012_storage",
                          "typeString": "struct DoubleEndedQueue.Bytes32Deque storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Bytes32Deque_$4012_storage",
                          "typeString": "struct DoubleEndedQueue.Bytes32Deque storage ref"
                        }
                      ],
                      "expression": {
                        "id": 979,
                        "name": "DoubleEndedQueue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4334,
                        "src": "12841:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_DoubleEndedQueue_$4334_$",
                          "typeString": "type(library DoubleEndedQueue)"
                        }
                      },
                      "id": 980,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4317,
                      "src": "12841:23:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32Deque_$4012_storage_ptr_$returns$_t_uint256_$",
                        "typeString": "function (struct DoubleEndedQueue.Bytes32Deque storage pointer) view returns (uint256)"
                      }
                    },
                    "id": 982,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12841:39:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12811:69:2"
                },
                {
                  "assignments": [
                    986
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 986,
                      "mutability": "mutable",
                      "name": "myTask",
                      "nameLocation": "12902:6:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1073,
                      "src": "12890:18:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Task_$72_memory_ptr",
                        "typeString": "struct Governance.Task"
                      },
                      "typeName": {
                        "id": 985,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 984,
                          "name": "Task",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 72,
                          "src": "12890:4:2"
                        },
                        "referencedDeclaration": 72,
                        "src": "12890:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Task_$72_storage_ptr",
                          "typeString": "struct Governance.Task"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 987,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12890:18:2"
                },
                {
                  "assignments": [
                    989
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 989,
                      "mutability": "mutable",
                      "name": "taskId",
                      "nameLocation": "12926:6:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1073,
                      "src": "12918:14:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 988,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "12918:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 990,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12918:14:2"
                },
                {
                  "body": {
                    "id": 1066,
                    "nodeType": "Block",
                    "src": "13070:1423:2",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 1012,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 1007,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1002,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 998,
                                  "name": "myTask",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 986,
                                  "src": "13088:6:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Task_$72_memory_ptr",
                                    "typeString": "struct Governance.Task memory"
                                  }
                                },
                                "id": 999,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "verificationReservedTimestamp",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 71,
                                "src": "13088:36:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint40",
                                  "typeString": "uint40"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<",
                              "rightExpression": {
                                "expression": {
                                  "id": 1000,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "13127:5:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 1001,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "13127:15:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "13088:54:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "&&",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1006,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 1003,
                                  "name": "myTask",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 986,
                                  "src": "13146:6:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Task_$72_memory_ptr",
                                    "typeString": "struct Governance.Task memory"
                                  }
                                },
                                "id": 1004,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "NFTID",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 55,
                                "src": "13146:12:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint40",
                                  "typeString": "uint40"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "id": 1005,
                                "name": "_wizID",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 974,
                                "src": "13162:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "13146:22:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "13088:80:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1011,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 1008,
                                "name": "myTask",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 986,
                                "src": "13172:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Task_$72_memory_ptr",
                                  "typeString": "struct Governance.Task memory"
                                }
                              },
                              "id": 1009,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "refuterID",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 69,
                              "src": "13172:16:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "id": 1010,
                              "name": "_wizID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 974,
                              "src": "13191:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "13172:25:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "13088:109:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1065,
                        "nodeType": "IfStatement",
                        "src": "13084:1399:2",
                        "trueBody": {
                          "id": 1064,
                          "nodeType": "Block",
                          "src": "13198:1285:2",
                          "statements": [
                            {
                              "expression": {
                                "id": 1022,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 1013,
                                  "name": "taskId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 989,
                                  "src": "13524:6:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "id": 1018,
                                          "name": "tasksSubmitted",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 94,
                                          "src": "13561:14:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Bytes32Deque_$4012_storage",
                                            "typeString": "struct DoubleEndedQueue.Bytes32Deque storage ref"
                                          }
                                        },
                                        {
                                          "id": 1019,
                                          "name": "i",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 992,
                                          "src": "13577:1:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_struct$_Bytes32Deque_$4012_storage",
                                            "typeString": "struct DoubleEndedQueue.Bytes32Deque storage ref"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "expression": {
                                          "id": 1016,
                                          "name": "DoubleEndedQueue",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 4334,
                                          "src": "13541:16:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_contract$_DoubleEndedQueue_$4334_$",
                                            "typeString": "type(library DoubleEndedQueue)"
                                          }
                                        },
                                        "id": 1017,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "at",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 4271,
                                        "src": "13541:19:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32Deque_$4012_storage_ptr_$_t_uint256_$returns$_t_bytes32_$",
                                          "typeString": "function (struct DoubleEndedQueue.Bytes32Deque storage pointer,uint256) view returns (bytes32)"
                                        }
                                      },
                                      "id": 1020,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "13541:38:2",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      }
                                    ],
                                    "id": 1015,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "13533:7:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint256_$",
                                      "typeString": "type(uint256)"
                                    },
                                    "typeName": {
                                      "id": 1014,
                                      "name": "uint256",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "13533:7:2",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 1021,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "13533:47:2",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "13524:56:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1023,
                              "nodeType": "ExpressionStatement",
                              "src": "13524:56:2"
                            },
                            {
                              "expression": {
                                "id": 1028,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 1024,
                                  "name": "myTask",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 986,
                                  "src": "13598:6:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Task_$72_memory_ptr",
                                    "typeString": "struct Governance.Task memory"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "baseExpression": {
                                    "id": 1025,
                                    "name": "tasks",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 106,
                                    "src": "13607:5:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Task_$72_storage_$",
                                      "typeString": "mapping(uint256 => struct Governance.Task storage ref)"
                                    }
                                  },
                                  "id": 1027,
                                  "indexExpression": {
                                    "id": 1026,
                                    "name": "taskId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 989,
                                    "src": "13613:6:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "13607:13:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Task_$72_storage",
                                    "typeString": "struct Governance.Task storage ref"
                                  }
                                },
                                "src": "13598:22:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Task_$72_memory_ptr",
                                  "typeString": "struct Governance.Task memory"
                                }
                              },
                              "id": 1029,
                              "nodeType": "ExpressionStatement",
                              "src": "13598:22:2"
                            },
                            {
                              "expression": {
                                "id": 1037,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 1030,
                                    "name": "myTask",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 986,
                                    "src": "14254:6:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Task_$72_memory_ptr",
                                      "typeString": "struct Governance.Task memory"
                                    }
                                  },
                                  "id": 1032,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "verifierID",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 67,
                                  "src": "14254:17:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint16",
                                    "typeString": "uint16"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "id": 1035,
                                      "name": "_wizID",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 974,
                                      "src": "14281:6:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "id": 1034,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "14274:6:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint16_$",
                                      "typeString": "type(uint16)"
                                    },
                                    "typeName": {
                                      "id": 1033,
                                      "name": "uint16",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "14274:6:2",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 1036,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "14274:14:2",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint16",
                                    "typeString": "uint16"
                                  }
                                },
                                "src": "14254:34:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint16",
                                  "typeString": "uint16"
                                }
                              },
                              "id": 1038,
                              "nodeType": "ExpressionStatement",
                              "src": "14254:34:2"
                            },
                            {
                              "expression": {
                                "id": 1049,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 1039,
                                    "name": "myTask",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 986,
                                    "src": "14306:6:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Task_$72_memory_ptr",
                                      "typeString": "struct Governance.Task memory"
                                    }
                                  },
                                  "id": 1041,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "verificationReservedTimestamp",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 71,
                                  "src": "14306:36:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint40",
                                    "typeString": "uint40"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 1047,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "expression": {
                                          "id": 1044,
                                          "name": "block",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -4,
                                          "src": "14352:5:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_block",
                                            "typeString": "block"
                                          }
                                        },
                                        "id": 1045,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "timestamp",
                                        "nodeType": "MemberAccess",
                                        "src": "14352:15:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "+",
                                      "rightExpression": {
                                        "id": 1046,
                                        "name": "verificationTime",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 113,
                                        "src": "14370:16:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "14352:34:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "id": 1043,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "14345:6:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint40_$",
                                      "typeString": "type(uint40)"
                                    },
                                    "typeName": {
                                      "id": 1042,
                                      "name": "uint40",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "14345:6:2",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 1048,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "14345:42:2",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint40",
                                    "typeString": "uint40"
                                  }
                                },
                                "src": "14306:81:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint40",
                                  "typeString": "uint40"
                                }
                              },
                              "id": 1050,
                              "nodeType": "ExpressionStatement",
                              "src": "14306:81:2"
                            },
                            {
                              "expression": {
                                "id": 1062,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 1051,
                                    "name": "tasks",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 106,
                                    "src": "14405:5:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Task_$72_storage_$",
                                      "typeString": "mapping(uint256 => struct Governance.Task storage ref)"
                                    }
                                  },
                                  "id": 1060,
                                  "indexExpression": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "id": 1056,
                                            "name": "tasksSubmitted",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 94,
                                            "src": "14439:14:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_Bytes32Deque_$4012_storage",
                                              "typeString": "struct DoubleEndedQueue.Bytes32Deque storage ref"
                                            }
                                          },
                                          {
                                            "id": 1057,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 992,
                                            "src": "14455:1:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_struct$_Bytes32Deque_$4012_storage",
                                              "typeString": "struct DoubleEndedQueue.Bytes32Deque storage ref"
                                            },
                                            {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          ],
                                          "expression": {
                                            "id": 1054,
                                            "name": "DoubleEndedQueue",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 4334,
                                            "src": "14419:16:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_contract$_DoubleEndedQueue_$4334_$",
                                              "typeString": "type(library DoubleEndedQueue)"
                                            }
                                          },
                                          "id": 1055,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "at",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 4271,
                                          "src": "14419:19:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32Deque_$4012_storage_ptr_$_t_uint256_$returns$_t_bytes32_$",
                                            "typeString": "function (struct DoubleEndedQueue.Bytes32Deque storage pointer,uint256) view returns (bytes32)"
                                          }
                                        },
                                        "id": 1058,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "14419:38:2",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes32",
                                          "typeString": "bytes32"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_bytes32",
                                          "typeString": "bytes32"
                                        }
                                      ],
                                      "id": 1053,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "14411:7:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_uint256_$",
                                        "typeString": "type(uint256)"
                                      },
                                      "typeName": {
                                        "id": 1052,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "14411:7:2",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 1059,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "14411:47:2",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "14405:54:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Task_$72_storage",
                                    "typeString": "struct Governance.Task storage ref"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 1061,
                                  "name": "myTask",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 986,
                                  "src": "14462:6:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Task_$72_memory_ptr",
                                    "typeString": "struct Governance.Task memory"
                                  }
                                },
                                "src": "14405:63:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Task_$72_storage",
                                  "typeString": "struct Governance.Task storage ref"
                                }
                              },
                              "id": 1063,
                              "nodeType": "ExpressionStatement",
                              "src": "14405:63:2"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 997,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 995,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 992,
                      "src": "13044:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 996,
                      "name": "totalTasksSubmitted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 978,
                      "src": "13048:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "13044:23:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1067,
                  "initializationExpression": {
                    "assignments": [
                      992
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 992,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "13038:1:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 1067,
                        "src": "13030:9:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 991,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "13030:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 994,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 993,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "13041:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "13030:12:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "13026:1467:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1069,
                        "name": "_wizID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 974,
                        "src": "14560:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1070,
                        "name": "taskId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 989,
                        "src": "14568:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1068,
                      "name": "VerificationAssigned",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 122,
                      "src": "14539:20:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 1071,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14539:36:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1072,
                  "nodeType": "EmitStatement",
                  "src": "14534:41:2"
                }
              ]
            },
            "functionSelector": "d374a217",
            "id": 1074,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "claimRandomTaskForVerification",
            "nameLocation": "12745:30:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 975,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 974,
                  "mutability": "mutable",
                  "name": "_wizID",
                  "nameLocation": "12784:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1074,
                  "src": "12776:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 973,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12776:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12775:16:2"
            },
            "returnParameters": {
              "id": 976,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12801:0:2"
            },
            "scope": 1622,
            "src": "12736:1846:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1199,
              "nodeType": "Block",
              "src": "15241:1091:2",
              "statements": [
                {
                  "body": {
                    "id": 1197,
                    "nodeType": "Block",
                    "src": "15374:932:2",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          "id": 1106,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 1094,
                                        "name": "taskTypes",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 91,
                                        "src": "15412:9:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_TaskType_$51_storage_$dyn_storage",
                                          "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                        }
                                      },
                                      "id": 1096,
                                      "indexExpression": {
                                        "id": 1095,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1084,
                                        "src": "15422:1:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "15412:12:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_TaskType_$51_storage",
                                        "typeString": "struct Governance.TaskType storage ref"
                                      }
                                    },
                                    "id": 1097,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "IPFSHash",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 36,
                                    "src": "15412:21:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_storage",
                                      "typeString": "string storage ref"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_string_storage",
                                      "typeString": "string storage ref"
                                    }
                                  ],
                                  "expression": {
                                    "id": 1092,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "15401:3:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 1093,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "encode",
                                  "nodeType": "MemberAccess",
                                  "src": "15401:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 1098,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "15401:33:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 1091,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "15391:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 1099,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "15391:44:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 1103,
                                    "name": "_IPFSHash",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1076,
                                    "src": "15460:9:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  ],
                                  "expression": {
                                    "id": 1101,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "15449:3:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 1102,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "encode",
                                  "nodeType": "MemberAccess",
                                  "src": "15449:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 1104,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "15449:21:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 1100,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "15439:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 1105,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "15439:32:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "15391:80:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1192,
                        "nodeType": "IfStatement",
                        "src": "15388:880:2",
                        "trueBody": {
                          "id": 1191,
                          "nodeType": "Block",
                          "src": "15472:796:2",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    "id": 1122,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 1114,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "expression": {
                                          "baseExpression": {
                                            "id": 1108,
                                            "name": "taskTypes",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 91,
                                            "src": "15558:9:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_struct$_TaskType_$51_storage_$dyn_storage",
                                              "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                            }
                                          },
                                          "id": 1110,
                                          "indexExpression": {
                                            "id": 1109,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1084,
                                            "src": "15568:1:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "15558:12:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_TaskType_$51_storage",
                                            "typeString": "struct Governance.TaskType storage ref"
                                          }
                                        },
                                        "id": 1111,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "begTimestamp",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 46,
                                        "src": "15558:25:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint40",
                                          "typeString": "uint40"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "<=",
                                      "rightExpression": {
                                        "expression": {
                                          "id": 1112,
                                          "name": "block",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -4,
                                          "src": "15587:5:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_block",
                                            "typeString": "block"
                                          }
                                        },
                                        "id": 1113,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "timestamp",
                                        "nodeType": "MemberAccess",
                                        "src": "15587:15:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "15558:44:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "&&",
                                    "rightExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 1121,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "expression": {
                                          "id": 1115,
                                          "name": "block",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -4,
                                          "src": "15606:5:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_block",
                                            "typeString": "block"
                                          }
                                        },
                                        "id": 1116,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "timestamp",
                                        "nodeType": "MemberAccess",
                                        "src": "15606:15:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "<=",
                                      "rightExpression": {
                                        "expression": {
                                          "baseExpression": {
                                            "id": 1117,
                                            "name": "taskTypes",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 91,
                                            "src": "15625:9:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_struct$_TaskType_$51_storage_$dyn_storage",
                                              "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                            }
                                          },
                                          "id": 1119,
                                          "indexExpression": {
                                            "id": 1118,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1084,
                                            "src": "15635:1:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "15625:12:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_TaskType_$51_storage",
                                            "typeString": "struct Governance.TaskType storage ref"
                                          }
                                        },
                                        "id": 1120,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "endTimestamp",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 48,
                                        "src": "15625:25:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint40",
                                          "typeString": "uint40"
                                        }
                                      },
                                      "src": "15606:44:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "src": "15558:92:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "hexValue": "4f7574736964652074696d6520706572696f64",
                                    "id": 1123,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "15652:21:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_2aa371626d645af6c67a3e4026854ea2c35f19ae75ceda6326bf45ca93e956ba",
                                      "typeString": "literal_string \"Outside time period\""
                                    },
                                    "value": "Outside time period"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_2aa371626d645af6c67a3e4026854ea2c35f19ae75ceda6326bf45ca93e956ba",
                                      "typeString": "literal_string \"Outside time period\""
                                    }
                                  ],
                                  "id": 1107,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "15550:7:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 1124,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "15550:124:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1125,
                              "nodeType": "ExpressionStatement",
                              "src": "15550:124:2"
                            },
                            {
                              "assignments": [
                                1128
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 1128,
                                  "mutability": "mutable",
                                  "name": "myTask",
                                  "nameLocation": "15739:6:2",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1191,
                                  "src": "15727:18:2",
                                  "stateVariable": false,
                                  "storageLocation": "memory",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Task_$72_memory_ptr",
                                    "typeString": "struct Governance.Task"
                                  },
                                  "typeName": {
                                    "id": 1127,
                                    "nodeType": "UserDefinedTypeName",
                                    "pathNode": {
                                      "id": 1126,
                                      "name": "Task",
                                      "nodeType": "IdentifierPath",
                                      "referencedDeclaration": 72,
                                      "src": "15727:4:2"
                                    },
                                    "referencedDeclaration": 72,
                                    "src": "15727:4:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Task_$72_storage_ptr",
                                      "typeString": "struct Governance.Task"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 1147,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "id": 1130,
                                    "name": "_IPFSHash",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1076,
                                    "src": "15753:9:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  },
                                  {
                                    "id": 1131,
                                    "name": "_wizID",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1080,
                                    "src": "15763:6:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint40",
                                      "typeString": "uint40"
                                    }
                                  },
                                  {
                                    "id": 1132,
                                    "name": "_hash",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1078,
                                    "src": "15771:5:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  {
                                    "hexValue": "30",
                                    "id": 1133,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "15778:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 1134,
                                        "name": "taskTypes",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 91,
                                        "src": "15781:9:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_TaskType_$51_storage_$dyn_storage",
                                          "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                        }
                                      },
                                      "id": 1136,
                                      "indexExpression": {
                                        "id": 1135,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1084,
                                        "src": "15791:1:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "15781:12:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_TaskType_$51_storage",
                                        "typeString": "struct Governance.TaskType storage ref"
                                      }
                                    },
                                    "id": 1137,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "numFieldsToHash",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 42,
                                    "src": "15781:28:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 1138,
                                        "name": "taskTypes",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 91,
                                        "src": "15811:9:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_TaskType_$51_storage_$dyn_storage",
                                          "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                        }
                                      },
                                      "id": 1140,
                                      "indexExpression": {
                                        "id": 1139,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1084,
                                        "src": "15821:1:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "15811:12:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_TaskType_$51_storage",
                                        "typeString": "struct Governance.TaskType storage ref"
                                      }
                                    },
                                    "id": 1141,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "timeBonus",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 44,
                                    "src": "15811:22:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint24",
                                      "typeString": "uint24"
                                    }
                                  },
                                  {
                                    "hexValue": "30",
                                    "id": 1142,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "15835:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  {
                                    "hexValue": "30",
                                    "id": 1143,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "15838:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  {
                                    "hexValue": "30",
                                    "id": 1144,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "15841:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  {
                                    "hexValue": "30",
                                    "id": 1145,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "15844:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    },
                                    {
                                      "typeIdentifier": "t_uint40",
                                      "typeString": "uint40"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    },
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    },
                                    {
                                      "typeIdentifier": "t_uint24",
                                      "typeString": "uint24"
                                    },
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 1129,
                                  "name": "Task",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 72,
                                  "src": "15748:4:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_struct$_Task_$72_storage_ptr_$",
                                    "typeString": "type(struct Governance.Task storage pointer)"
                                  }
                                },
                                "id": 1146,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "structConstructorCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "15748:98:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Task_$72_memory_ptr",
                                  "typeString": "struct Governance.Task memory"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "15727:119:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1151,
                                    "name": "tasksSubmitted",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 94,
                                    "src": "15890:14:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Bytes32Deque_$4012_storage",
                                      "typeString": "struct DoubleEndedQueue.Bytes32Deque storage ref"
                                    }
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "id": 1154,
                                        "name": "tasksAttempted",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 108,
                                        "src": "15914:14:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "id": 1153,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "15906:7:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_bytes32_$",
                                        "typeString": "type(bytes32)"
                                      },
                                      "typeName": {
                                        "id": 1152,
                                        "name": "bytes32",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "15906:7:2",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 1155,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "15906:23:2",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_struct$_Bytes32Deque_$4012_storage",
                                      "typeString": "struct DoubleEndedQueue.Bytes32Deque storage ref"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  ],
                                  "expression": {
                                    "id": 1148,
                                    "name": "DoubleEndedQueue",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4334,
                                    "src": "15864:16:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_DoubleEndedQueue_$4334_$",
                                      "typeString": "type(library DoubleEndedQueue)"
                                    }
                                  },
                                  "id": 1150,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "pushBack",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 4044,
                                  "src": "15864:25:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Bytes32Deque_$4012_storage_ptr_$_t_bytes32_$returns$__$",
                                    "typeString": "function (struct DoubleEndedQueue.Bytes32Deque storage pointer,bytes32)"
                                  }
                                },
                                "id": 1156,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "15864:66:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1157,
                              "nodeType": "ExpressionStatement",
                              "src": "15864:66:2"
                            },
                            {
                              "expression": {
                                "id": 1162,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 1158,
                                    "name": "tasks",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 106,
                                    "src": "15948:5:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Task_$72_storage_$",
                                      "typeString": "mapping(uint256 => struct Governance.Task storage ref)"
                                    }
                                  },
                                  "id": 1160,
                                  "indexExpression": {
                                    "id": 1159,
                                    "name": "tasksAttempted",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 108,
                                    "src": "15954:14:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "15948:21:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Task_$72_storage",
                                    "typeString": "struct Governance.Task storage ref"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 1161,
                                  "name": "myTask",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1128,
                                  "src": "15972:6:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Task_$72_memory_ptr",
                                    "typeString": "struct Governance.Task memory"
                                  }
                                },
                                "src": "15948:30:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Task_$72_storage",
                                  "typeString": "struct Governance.Task storage ref"
                                }
                              },
                              "id": 1163,
                              "nodeType": "ExpressionStatement",
                              "src": "15948:30:2"
                            },
                            {
                              "expression": {
                                "id": 1166,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 1164,
                                  "name": "tasksAttempted",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 108,
                                  "src": "15996:14:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "hexValue": "31",
                                  "id": 1165,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "16012:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "src": "15996:17:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1167,
                              "nodeType": "ExpressionStatement",
                              "src": "15996:17:2"
                            },
                            {
                              "expression": {
                                "id": 1178,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 1168,
                                        "name": "taskTypes",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 91,
                                        "src": "16068:9:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_TaskType_$51_storage_$dyn_storage",
                                          "typeString": "struct Governance.TaskType storage ref[] storage ref"
                                        }
                                      },
                                      "id": 1170,
                                      "indexExpression": {
                                        "id": 1169,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1084,
                                        "src": "16078:1:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "16068:12:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_TaskType_$51_storage",
                                        "typeString": "struct Governance.TaskType storage ref"
                                      }
                                    },
                                    "id": 1171,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "nextActiveTimeThreshold",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 34,
                                    "src": "16068:36:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint40_$_t_uint256_$",
                                      "typeString": "mapping(uint40 => uint256)"
                                    }
                                  },
                                  "id": 1173,
                                  "indexExpression": {
                                    "id": 1172,
                                    "name": "_wizID",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1080,
                                    "src": "16105:6:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint40",
                                      "typeString": "uint40"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "16068:44:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1177,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "id": 1174,
                                      "name": "block",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -4,
                                      "src": "16115:5:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_block",
                                        "typeString": "block"
                                      }
                                    },
                                    "id": 1175,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "timestamp",
                                    "nodeType": "MemberAccess",
                                    "src": "16115:15:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "+",
                                  "rightExpression": {
                                    "hexValue": "31",
                                    "id": 1176,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "16133:6:2",
                                    "subdenomination": "days",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_86400_by_1",
                                      "typeString": "int_const 86400"
                                    },
                                    "value": "1"
                                  },
                                  "src": "16115:24:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "16068:71:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1179,
                              "nodeType": "ExpressionStatement",
                              "src": "16068:71:2"
                            },
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "id": 1181,
                                    "name": "_wizID",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1080,
                                    "src": "16177:6:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint40",
                                      "typeString": "uint40"
                                    }
                                  },
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 1184,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 1182,
                                      "name": "tasksAttempted",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 108,
                                      "src": "16184:14:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "-",
                                    "rightExpression": {
                                      "hexValue": "31",
                                      "id": 1183,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "16200:1:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1_by_1",
                                        "typeString": "int_const 1"
                                      },
                                      "value": "1"
                                    },
                                    "src": "16184:17:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 1185,
                                    "name": "_IPFSHash",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1076,
                                    "src": "16203:9:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 1186,
                                      "name": "block",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -4,
                                      "src": "16214:5:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_block",
                                        "typeString": "block"
                                      }
                                    },
                                    "id": 1187,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "timestamp",
                                    "nodeType": "MemberAccess",
                                    "src": "16214:15:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint40",
                                      "typeString": "uint40"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 1180,
                                  "name": "TaskCompleted",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 178,
                                  "src": "16163:13:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                                    "typeString": "function (uint256,uint256,string memory,uint256)"
                                  }
                                },
                                "id": 1188,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "16163:67:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1189,
                              "nodeType": "EmitStatement",
                              "src": "16158:72:2"
                            },
                            {
                              "id": 1190,
                              "nodeType": "Break",
                              "src": "16248:5:2"
                            }
                          ]
                        }
                      },
                      {
                        "id": 1196,
                        "nodeType": "UncheckedBlock",
                        "src": "16281:15:2",
                        "statements": [
                          {
                            "expression": {
                              "id": 1194,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": true,
                              "src": "16291:3:2",
                              "subExpression": {
                                "id": 1193,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1084,
                                "src": "16293:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 1195,
                            "nodeType": "ExpressionStatement",
                            "src": "16291:3:2"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1090,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1087,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1084,
                      "src": "15354:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 1088,
                        "name": "taskTypes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 91,
                        "src": "15356:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_TaskType_$51_storage_$dyn_storage",
                          "typeString": "struct Governance.TaskType storage ref[] storage ref"
                        }
                      },
                      "id": 1089,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "15356:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "15354:18:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1198,
                  "initializationExpression": {
                    "assignments": [
                      1084
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1084,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "15347:1:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 1198,
                        "src": "15339:9:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1083,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "15339:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1086,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 1085,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "15351:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "15339:13:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "15335:971:2"
                }
              ]
            },
            "functionSelector": "72e185ce",
            "id": 1200,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "completeTask",
            "nameLocation": "15164:12:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1081,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1076,
                  "mutability": "mutable",
                  "name": "_IPFSHash",
                  "nameLocation": "15191:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1200,
                  "src": "15177:23:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1075,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "15177:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1078,
                  "mutability": "mutable",
                  "name": "_hash",
                  "nameLocation": "15210:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1200,
                  "src": "15202:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1077,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "15202:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1080,
                  "mutability": "mutable",
                  "name": "_wizID",
                  "nameLocation": "15224:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1200,
                  "src": "15217:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  },
                  "typeName": {
                    "id": 1079,
                    "name": "uint40",
                    "nodeType": "ElementaryTypeName",
                    "src": "15217:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15176:55:2"
            },
            "returnParameters": {
              "id": 1082,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15241:0:2"
            },
            "scope": 1622,
            "src": "15155:1177:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1269,
              "nodeType": "Block",
              "src": "16429:412:2",
              "statements": [
                {
                  "assignments": [
                    1211
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1211,
                      "mutability": "mutable",
                      "name": "unencoded",
                      "nameLocation": "16452:9:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1269,
                      "src": "16439:22:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 1210,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "16439:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1218,
                  "initialValue": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 1214,
                          "name": "_fields",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1205,
                          "src": "16481:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                            "typeString": "bytes32[] memory"
                          }
                        },
                        "id": 1216,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 1215,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "16489:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "16481:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 1212,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "16464:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 1213,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "encodePacked",
                      "nodeType": "MemberAccess",
                      "src": "16464:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () pure returns (bytes memory)"
                      }
                    },
                    "id": 1217,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16464:28:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16439:53:2"
                },
                {
                  "condition": {
                    "id": 1219,
                    "name": "_refuted",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1207,
                    "src": "16505:8:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1248,
                  "nodeType": "IfStatement",
                  "src": "16502:193:2",
                  "trueBody": {
                    "id": 1247,
                    "nodeType": "Block",
                    "src": "16515:180:2",
                    "statements": [
                      {
                        "body": {
                          "id": 1245,
                          "nodeType": "Block",
                          "src": "16568:117:2",
                          "statements": [
                            {
                              "expression": {
                                "id": 1239,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 1228,
                                    "name": "_fields",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1205,
                                    "src": "16586:7:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                      "typeString": "bytes32[] memory"
                                    }
                                  },
                                  "id": 1230,
                                  "indexExpression": {
                                    "id": 1229,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1221,
                                    "src": "16594:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "16586:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "baseExpression": {
                                            "id": 1234,
                                            "name": "_fields",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1205,
                                            "src": "16626:7:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                              "typeString": "bytes32[] memory"
                                            }
                                          },
                                          "id": 1236,
                                          "indexExpression": {
                                            "id": 1235,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1221,
                                            "src": "16634:1:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "16626:10:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                          }
                                        ],
                                        "expression": {
                                          "id": 1232,
                                          "name": "abi",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -1,
                                          "src": "16609:3:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_abi",
                                            "typeString": "abi"
                                          }
                                        },
                                        "id": 1233,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberName": "encodePacked",
                                        "nodeType": "MemberAccess",
                                        "src": "16609:16:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                          "typeString": "function () pure returns (bytes memory)"
                                        }
                                      },
                                      "id": 1237,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "16609:28:2",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    ],
                                    "id": 1231,
                                    "name": "keccak256",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -8,
                                    "src": "16599:9:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                      "typeString": "function (bytes memory) pure returns (bytes32)"
                                    }
                                  },
                                  "id": 1238,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "16599:39:2",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "src": "16586:52:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "id": 1240,
                              "nodeType": "ExpressionStatement",
                              "src": "16586:52:2"
                            },
                            {
                              "id": 1244,
                              "nodeType": "UncheckedBlock",
                              "src": "16656:15:2",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 1242,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "UnaryOperation",
                                    "operator": "++",
                                    "prefix": true,
                                    "src": "16666:3:2",
                                    "subExpression": {
                                      "id": 1241,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1221,
                                      "src": "16668:1:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 1243,
                                  "nodeType": "ExpressionStatement",
                                  "src": "16666:3:2"
                                }
                              ]
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1227,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1224,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1221,
                            "src": "16548:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 1225,
                              "name": "_fields",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1205,
                              "src": "16552:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                "typeString": "bytes32[] memory"
                              }
                            },
                            "id": 1226,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "16552:14:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "16548:18:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1246,
                        "initializationExpression": {
                          "assignments": [
                            1221
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 1221,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "16541:1:2",
                              "nodeType": "VariableDeclaration",
                              "scope": 1246,
                              "src": "16533:9:2",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 1220,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "16533:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 1223,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 1222,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "16545:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "16533:13:2"
                        },
                        "nodeType": "ForStatement",
                        "src": "16529:156:2"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    1250
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1250,
                      "mutability": "mutable",
                      "name": "myHash",
                      "nameLocation": "16712:6:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1269,
                      "src": "16704:14:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1249,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "16704:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1257,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1254,
                            "name": "_fields",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1205,
                            "src": "16748:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                              "typeString": "bytes32[] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                              "typeString": "bytes32[] memory"
                            }
                          ],
                          "expression": {
                            "id": 1252,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "16731:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 1253,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "16731:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 1255,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16731:25:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 1251,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "16721:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 1256,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16721:36:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16704:53:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1259,
                        "name": "myHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1250,
                        "src": "16784:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 1262,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1260,
                          "name": "myHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1250,
                          "src": "16792:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 1261,
                          "name": "_givenHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1202,
                          "src": "16800:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "16792:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 1263,
                          "name": "_fields",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1205,
                          "src": "16812:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                            "typeString": "bytes32[] memory"
                          }
                        },
                        "id": 1265,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 1264,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "16820:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "16812:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 1266,
                        "name": "unencoded",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1211,
                        "src": "16824:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 1258,
                      "name": "HashTesting",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 152,
                      "src": "16772:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bool_$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes32,bool,bytes32,bytes memory)"
                      }
                    },
                    "id": 1267,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16772:62:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1268,
                  "nodeType": "EmitStatement",
                  "src": "16767:67:2"
                }
              ]
            },
            "functionSelector": "09265ce6",
            "id": 1270,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testHashing",
            "nameLocation": "16347:11:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1208,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1202,
                  "mutability": "mutable",
                  "name": "_givenHash",
                  "nameLocation": "16367:10:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1270,
                  "src": "16359:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1201,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "16359:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1205,
                  "mutability": "mutable",
                  "name": "_fields",
                  "nameLocation": "16396:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1270,
                  "src": "16379:24:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1203,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "16379:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 1204,
                    "nodeType": "ArrayTypeName",
                    "src": "16379:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1207,
                  "mutability": "mutable",
                  "name": "_refuted",
                  "nameLocation": "16410:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1270,
                  "src": "16405:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1206,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "16405:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16358:61:2"
            },
            "returnParameters": {
              "id": 1209,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16429:0:2"
            },
            "scope": 1622,
            "src": "16338:503:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1575,
              "nodeType": "Block",
              "src": "17643:3524:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1294,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1287,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "id": 1283,
                                "name": "_wizId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1272,
                                "src": "17730:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 1281,
                                "name": "wizardsNFT",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24,
                                "src": "17711:10:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Wizards_$3993",
                                  "typeString": "contract Wizards"
                                }
                              },
                              "id": 1282,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "ownerOf",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 4610,
                              "src": "17711:18:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                                "typeString": "function (uint256) view external returns (address)"
                              }
                            },
                            "id": 1284,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "17711:26:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 1285,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "17741:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1286,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "17741:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "17711:40:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1293,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 1288,
                                "name": "tasks",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 106,
                                "src": "17755:5:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Task_$72_storage_$",
                                  "typeString": "mapping(uint256 => struct Governance.Task storage ref)"
                                }
                              },
                              "id": 1290,
                              "indexExpression": {
                                "id": 1289,
                                "name": "_taskID",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1274,
                                "src": "17761:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "17755:14:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Task_$72_storage",
                                "typeString": "struct Governance.Task storage ref"
                              }
                            },
                            "id": 1291,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "verifierID",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 67,
                            "src": "17755:25:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 1292,
                            "name": "_wizId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1272,
                            "src": "17782:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "17755:33:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "17711:77:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d757374206265206f776e6572206f662061737369676e65642077697a617264",
                        "id": 1295,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17790:34:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_29a5053514bc5f788dbd1548d65ae6067a8703782cd1eb7764fcaabfc0c5129d",
                          "typeString": "literal_string \"Must be owner of assigned wizard\""
                        },
                        "value": "Must be owner of assigned wizard"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_29a5053514bc5f788dbd1548d65ae6067a8703782cd1eb7764fcaabfc0c5129d",
                          "typeString": "literal_string \"Must be owner of assigned wizard\""
                        }
                      ],
                      "id": 1280,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "17703:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1296,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17703:122:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1297,
                  "nodeType": "ExpressionStatement",
                  "src": "17703:122:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1302,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1299,
                            "name": "_fields",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1277,
                            "src": "17843:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                              "typeString": "bytes32[] memory"
                            }
                          },
                          "id": 1300,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "17843:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1301,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "17860:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "17843:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1298,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "17835:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1303,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17835:27:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1304,
                  "nodeType": "ExpressionStatement",
                  "src": "17835:27:2"
                },
                {
                  "assignments": [
                    1307
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1307,
                      "mutability": "mutable",
                      "name": "myTask",
                      "nameLocation": "17886:6:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1575,
                      "src": "17873:19:2",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Task_$72_storage_ptr",
                        "typeString": "struct Governance.Task"
                      },
                      "typeName": {
                        "id": 1306,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1305,
                          "name": "Task",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 72,
                          "src": "17873:4:2"
                        },
                        "referencedDeclaration": 72,
                        "src": "17873:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Task_$72_storage_ptr",
                          "typeString": "struct Governance.Task"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1311,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1308,
                      "name": "tasks",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 106,
                      "src": "17895:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Task_$72_storage_$",
                        "typeString": "mapping(uint256 => struct Governance.Task storage ref)"
                      }
                    },
                    "id": 1310,
                    "indexExpression": {
                      "id": 1309,
                      "name": "_taskID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1274,
                      "src": "17901:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "17895:14:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Task_$72_storage",
                      "typeString": "struct Governance.Task storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17873:36:2"
                },
                {
                  "assignments": [
                    1313
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1313,
                      "mutability": "mutable",
                      "name": "count",
                      "nameLocation": "17927:5:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1575,
                      "src": "17919:13:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1312,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "17919:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1315,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 1314,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "17935:1:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17919:17:2"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    },
                    "id": 1319,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 1316,
                        "name": "myTask",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1307,
                        "src": "18466:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Task_$72_storage_ptr",
                          "typeString": "struct Governance.Task storage pointer"
                        }
                      },
                      "id": 1317,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "refuterID",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 69,
                      "src": "18466:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1318,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "18485:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "18466:20:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1348,
                  "nodeType": "IfStatement",
                  "src": "18463:205:2",
                  "trueBody": {
                    "id": 1347,
                    "nodeType": "Block",
                    "src": "18488:180:2",
                    "statements": [
                      {
                        "body": {
                          "id": 1345,
                          "nodeType": "Block",
                          "src": "18541:117:2",
                          "statements": [
                            {
                              "expression": {
                                "id": 1339,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 1328,
                                    "name": "_fields",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1277,
                                    "src": "18559:7:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                      "typeString": "bytes32[] memory"
                                    }
                                  },
                                  "id": 1330,
                                  "indexExpression": {
                                    "id": 1329,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1321,
                                    "src": "18567:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "18559:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "baseExpression": {
                                            "id": 1334,
                                            "name": "_fields",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1277,
                                            "src": "18599:7:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                              "typeString": "bytes32[] memory"
                                            }
                                          },
                                          "id": 1336,
                                          "indexExpression": {
                                            "id": 1335,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1321,
                                            "src": "18607:1:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "18599:10:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                          }
                                        ],
                                        "expression": {
                                          "id": 1332,
                                          "name": "abi",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -1,
                                          "src": "18582:3:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_abi",
                                            "typeString": "abi"
                                          }
                                        },
                                        "id": 1333,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberName": "encodePacked",
                                        "nodeType": "MemberAccess",
                                        "src": "18582:16:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                          "typeString": "function () pure returns (bytes memory)"
                                        }
                                      },
                                      "id": 1337,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "18582:28:2",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    ],
                                    "id": 1331,
                                    "name": "keccak256",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -8,
                                    "src": "18572:9:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                      "typeString": "function (bytes memory) pure returns (bytes32)"
                                    }
                                  },
                                  "id": 1338,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "18572:39:2",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "src": "18559:52:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "id": 1340,
                              "nodeType": "ExpressionStatement",
                              "src": "18559:52:2"
                            },
                            {
                              "id": 1344,
                              "nodeType": "UncheckedBlock",
                              "src": "18629:15:2",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 1342,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "UnaryOperation",
                                    "operator": "++",
                                    "prefix": true,
                                    "src": "18639:3:2",
                                    "subExpression": {
                                      "id": 1341,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1321,
                                      "src": "18641:1:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 1343,
                                  "nodeType": "ExpressionStatement",
                                  "src": "18639:3:2"
                                }
                              ]
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1327,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1324,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1321,
                            "src": "18521:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 1325,
                              "name": "_fields",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1277,
                              "src": "18525:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                "typeString": "bytes32[] memory"
                              }
                            },
                            "id": 1326,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "18525:14:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "18521:18:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1346,
                        "initializationExpression": {
                          "assignments": [
                            1321
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 1321,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "18514:1:2",
                              "nodeType": "VariableDeclaration",
                              "scope": 1346,
                              "src": "18506:9:2",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 1320,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "18506:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 1323,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 1322,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "18518:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "18506:13:2"
                        },
                        "nodeType": "ForStatement",
                        "src": "18502:156:2"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    1350
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1350,
                      "mutability": "mutable",
                      "name": "myHash",
                      "nameLocation": "18685:6:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1575,
                      "src": "18677:14:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1349,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "18677:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1357,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1354,
                            "name": "_fields",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1277,
                            "src": "18721:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                              "typeString": "bytes32[] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                              "typeString": "bytes32[] memory"
                            }
                          ],
                          "expression": {
                            "id": 1352,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "18704:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 1353,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "18704:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 1355,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18704:25:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 1351,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "18694:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 1356,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18694:36:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "18677:53:2"
                },
                {
                  "assignments": [
                    1359
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1359,
                      "mutability": "mutable",
                      "name": "correctHash",
                      "nameLocation": "18749:11:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1575,
                      "src": "18741:19:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1358,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "18741:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1367,
                  "initialValue": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "id": 1363,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 1360,
                          "name": "myTask",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1307,
                          "src": "18763:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Task_$72_storage_ptr",
                            "typeString": "struct Governance.Task storage pointer"
                          }
                        },
                        "id": 1361,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "hash",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 57,
                        "src": "18763:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "id": 1362,
                        "name": "myHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1350,
                        "src": "18778:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "src": "18763:21:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "hexValue": "30",
                      "id": 1365,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "18791:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "id": 1366,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "18763:29:2",
                    "trueExpression": {
                      "hexValue": "31",
                      "id": 1364,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "18787:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "18741:51:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1369,
                        "name": "_wizId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1272,
                        "src": "18830:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 1370,
                          "name": "myTask",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1307,
                          "src": "18838:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Task_$72_storage_ptr",
                            "typeString": "struct Governance.Task storage pointer"
                          }
                        },
                        "id": 1371,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "NFTID",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 55,
                        "src": "18838:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        }
                      },
                      {
                        "id": 1372,
                        "name": "_taskID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1274,
                        "src": "18852:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1373,
                        "name": "myHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1350,
                        "src": "18861:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1376,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1374,
                          "name": "correctHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1359,
                          "src": "18869:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 1375,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "18882:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "18869:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint40",
                          "typeString": "uint40"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1368,
                      "name": "VerificationSucceeded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 142,
                      "src": "18808:21:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_bytes32_$_t_bool_$returns$__$",
                        "typeString": "function (uint256,uint256,uint256,bytes32,bool)"
                      }
                    },
                    "id": 1377,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18808:76:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1378,
                  "nodeType": "EmitStatement",
                  "src": "18803:81:2"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1381,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1379,
                      "name": "correctHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1359,
                      "src": "18899:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 1380,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "18913:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "18899:15:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 1573,
                    "nodeType": "Block",
                    "src": "19760:1401:2",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          "id": 1465,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 1462,
                              "name": "myTask",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1307,
                              "src": "19908:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Task_$72_storage_ptr",
                                "typeString": "struct Governance.Task storage pointer"
                              }
                            },
                            "id": 1463,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "refuterHash",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 59,
                            "src": "19908:18:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 1464,
                            "name": "myHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1350,
                            "src": "19928:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "19908:26:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 1571,
                          "nodeType": "Block",
                          "src": "20744:407:2",
                          "statements": [
                            {
                              "assignments": [
                                1545
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 1545,
                                  "mutability": "mutable",
                                  "name": "split",
                                  "nameLocation": "20858:5:2",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1571,
                                  "src": "20850:13:2",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 1544,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "20850:7:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 1548,
                              "initialValue": {
                                "expression": {
                                  "id": 1546,
                                  "name": "myTask",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1307,
                                  "src": "20866:6:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Task_$72_storage_ptr",
                                    "typeString": "struct Governance.Task storage pointer"
                                  }
                                },
                                "id": 1547,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "payment",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 65,
                                "src": "20866:14:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint80",
                                  "typeString": "uint80"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "20850:30:2"
                            },
                            {
                              "expression": {
                                "id": 1552,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "delete",
                                "prefix": true,
                                "src": "20898:21:2",
                                "subExpression": {
                                  "baseExpression": {
                                    "id": 1549,
                                    "name": "tasks",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 106,
                                    "src": "20905:5:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Task_$72_storage_$",
                                      "typeString": "mapping(uint256 => struct Governance.Task storage ref)"
                                    }
                                  },
                                  "id": 1551,
                                  "indexExpression": {
                                    "id": 1550,
                                    "name": "_taskID",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1274,
                                    "src": "20911:7:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "20905:14:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Task_$72_storage",
                                    "typeString": "struct Governance.Task storage ref"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1553,
                              "nodeType": "ExpressionStatement",
                              "src": "20898:21:2"
                            },
                            {
                              "assignments": [
                                1555,
                                1557
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 1555,
                                  "mutability": "mutable",
                                  "name": "sent",
                                  "nameLocation": "20943:4:2",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1571,
                                  "src": "20938:9:2",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "typeName": {
                                    "id": 1554,
                                    "name": "bool",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "20938:4:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "visibility": "internal"
                                },
                                {
                                  "constant": false,
                                  "id": 1557,
                                  "mutability": "mutable",
                                  "name": "data",
                                  "nameLocation": "20962:4:2",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1571,
                                  "src": "20949:17:2",
                                  "stateVariable": false,
                                  "storageLocation": "memory",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes"
                                  },
                                  "typeName": {
                                    "id": 1556,
                                    "name": "bytes",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "20949:5:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_storage_ptr",
                                      "typeString": "bytes"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 1565,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "hexValue": "",
                                    "id": 1563,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "20997:2:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                      "typeString": "literal_string \"\""
                                    },
                                    "value": ""
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                      "typeString": "literal_string \"\""
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                        "typeString": "literal_string \"\""
                                      }
                                    ],
                                    "expression": {
                                      "arguments": [],
                                      "expression": {
                                        "argumentTypes": [],
                                        "id": 1558,
                                        "name": "owner",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 6386,
                                        "src": "20970:5:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                          "typeString": "function () view returns (address)"
                                        }
                                      },
                                      "id": 1559,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "20970:7:2",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "id": 1560,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "call",
                                    "nodeType": "MemberAccess",
                                    "src": "20970:12:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                      "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                                    }
                                  },
                                  "id": 1562,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "names": [
                                    "value"
                                  ],
                                  "nodeType": "FunctionCallOptions",
                                  "options": [
                                    {
                                      "id": 1561,
                                      "name": "split",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1545,
                                      "src": "20990:5:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "src": "20970:26:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                                    "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                                  }
                                },
                                "id": 1564,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "20970:30:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                                  "typeString": "tuple(bool,bytes memory)"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "20937:63:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1567,
                                    "name": "sent",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1555,
                                    "src": "21076:4:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "hexValue": "4661696c656420746f2073656e64204574686572",
                                    "id": 1568,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "21082:22:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
                                      "typeString": "literal_string \"Failed to send Ether\""
                                    },
                                    "value": "Failed to send Ether"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
                                      "typeString": "literal_string \"Failed to send Ether\""
                                    }
                                  ],
                                  "id": 1566,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "21068:7:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 1569,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "21068:37:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1570,
                              "nodeType": "ExpressionStatement",
                              "src": "21068:37:2"
                            }
                          ]
                        },
                        "id": 1572,
                        "nodeType": "IfStatement",
                        "src": "19905:1246:2",
                        "trueBody": {
                          "id": 1543,
                          "nodeType": "Block",
                          "src": "19935:792:2",
                          "statements": [
                            {
                              "assignments": [
                                1467
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 1467,
                                  "mutability": "mutable",
                                  "name": "split",
                                  "nameLocation": "19961:5:2",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1543,
                                  "src": "19953:13:2",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 1466,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "19953:7:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 1472,
                              "initialValue": {
                                "commonType": {
                                  "typeIdentifier": "t_uint80",
                                  "typeString": "uint80"
                                },
                                "id": 1471,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 1468,
                                    "name": "myTask",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1307,
                                    "src": "19969:6:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Task_$72_storage_ptr",
                                      "typeString": "struct Governance.Task storage pointer"
                                    }
                                  },
                                  "id": 1469,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "payment",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 65,
                                  "src": "19969:14:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint80",
                                    "typeString": "uint80"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "/",
                                "rightExpression": {
                                  "hexValue": "32",
                                  "id": 1470,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "19984:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_2_by_1",
                                    "typeString": "int_const 2"
                                  },
                                  "value": "2"
                                },
                                "src": "19969:16:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint80",
                                  "typeString": "uint80"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "19953:32:2"
                            },
                            {
                              "assignments": [
                                1474
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 1474,
                                  "mutability": "mutable",
                                  "name": "taskRefuter",
                                  "nameLocation": "20019:11:2",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1543,
                                  "src": "20003:27:2",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  },
                                  "typeName": {
                                    "id": 1473,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "20003:15:2",
                                    "stateMutability": "payable",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 1483,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "expression": {
                                          "id": 1479,
                                          "name": "myTask",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1307,
                                          "src": "20060:6:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Task_$72_storage_ptr",
                                            "typeString": "struct Governance.Task storage pointer"
                                          }
                                        },
                                        "id": 1480,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "refuterID",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 69,
                                        "src": "20060:16:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint16",
                                          "typeString": "uint16"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint16",
                                          "typeString": "uint16"
                                        }
                                      ],
                                      "expression": {
                                        "id": 1477,
                                        "name": "wizardsNFT",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 24,
                                        "src": "20041:10:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_Wizards_$3993",
                                          "typeString": "contract Wizards"
                                        }
                                      },
                                      "id": 1478,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "ownerOf",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 4610,
                                      "src": "20041:18:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                                        "typeString": "function (uint256) view external returns (address)"
                                      }
                                    },
                                    "id": 1481,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "20041:36:2",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 1476,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "20033:8:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_payable_$",
                                    "typeString": "type(address payable)"
                                  },
                                  "typeName": {
                                    "id": 1475,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "20033:8:2",
                                    "stateMutability": "payable",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1482,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "20033:45:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "20003:75:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 1487,
                                      "name": "myTask",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1307,
                                      "src": "20119:6:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Task_$72_storage_ptr",
                                        "typeString": "struct Governance.Task storage pointer"
                                      }
                                    },
                                    "id": 1488,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "refuterID",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 69,
                                    "src": "20119:16:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint16",
                                      "typeString": "uint16"
                                    }
                                  },
                                  {
                                    "id": 1489,
                                    "name": "taskVerificationTimeBonus",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 116,
                                    "src": "20137:25:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint16",
                                      "typeString": "uint16"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 1484,
                                    "name": "wizardsNFT",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 24,
                                    "src": "20097:10:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_Wizards_$3993",
                                      "typeString": "contract Wizards"
                                    }
                                  },
                                  "id": 1486,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "verifyDuty",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3648,
                                  "src": "20097:21:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                                    "typeString": "function (uint256,uint256) external"
                                  }
                                },
                                "id": 1490,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "20097:66:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1491,
                              "nodeType": "ExpressionStatement",
                              "src": "20097:66:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1495,
                                    "name": "_wizId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1272,
                                    "src": "20203:6:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 1496,
                                    "name": "taskVerificationTimeBonus",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 116,
                                    "src": "20211:25:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 1492,
                                    "name": "wizardsNFT",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 24,
                                    "src": "20181:10:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_Wizards_$3993",
                                      "typeString": "contract Wizards"
                                    }
                                  },
                                  "id": 1494,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "verifyDuty",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3648,
                                  "src": "20181:21:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                                    "typeString": "function (uint256,uint256) external"
                                  }
                                },
                                "id": 1497,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "20181:56:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1498,
                              "nodeType": "ExpressionStatement",
                              "src": "20181:56:2"
                            },
                            {
                              "expression": {
                                "id": 1503,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 1499,
                                    "name": "myTask",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1307,
                                    "src": "20256:6:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Task_$72_storage_ptr",
                                      "typeString": "struct Governance.Task storage pointer"
                                    }
                                  },
                                  "id": 1501,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "payment",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 65,
                                  "src": "20256:14:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint80",
                                    "typeString": "uint80"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "30",
                                  "id": 1502,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "20271:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "20256:16:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint80",
                                  "typeString": "uint80"
                                }
                              },
                              "id": 1504,
                              "nodeType": "ExpressionStatement",
                              "src": "20256:16:2"
                            },
                            {
                              "expression": {
                                "id": 1508,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "delete",
                                "prefix": true,
                                "src": "20319:21:2",
                                "subExpression": {
                                  "baseExpression": {
                                    "id": 1505,
                                    "name": "tasks",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 106,
                                    "src": "20326:5:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Task_$72_storage_$",
                                      "typeString": "mapping(uint256 => struct Governance.Task storage ref)"
                                    }
                                  },
                                  "id": 1507,
                                  "indexExpression": {
                                    "id": 1506,
                                    "name": "_taskID",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1274,
                                    "src": "20332:7:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "20326:14:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Task_$72_storage",
                                    "typeString": "struct Governance.Task storage ref"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1509,
                              "nodeType": "ExpressionStatement",
                              "src": "20319:21:2"
                            },
                            {
                              "assignments": [
                                1511,
                                1513
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 1511,
                                  "mutability": "mutable",
                                  "name": "sent",
                                  "nameLocation": "20407:4:2",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1543,
                                  "src": "20402:9:2",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "typeName": {
                                    "id": 1510,
                                    "name": "bool",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "20402:4:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "visibility": "internal"
                                },
                                {
                                  "constant": false,
                                  "id": 1513,
                                  "mutability": "mutable",
                                  "name": "data",
                                  "nameLocation": "20426:4:2",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1543,
                                  "src": "20413:17:2",
                                  "stateVariable": false,
                                  "storageLocation": "memory",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes"
                                  },
                                  "typeName": {
                                    "id": 1512,
                                    "name": "bytes",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "20413:5:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_storage_ptr",
                                      "typeString": "bytes"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 1520,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "hexValue": "",
                                    "id": 1518,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "20465:2:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                      "typeString": "literal_string \"\""
                                    },
                                    "value": ""
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                      "typeString": "literal_string \"\""
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                        "typeString": "literal_string \"\""
                                      }
                                    ],
                                    "expression": {
                                      "id": 1514,
                                      "name": "taskRefuter",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1474,
                                      "src": "20434:11:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address_payable",
                                        "typeString": "address payable"
                                      }
                                    },
                                    "id": 1515,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "call",
                                    "nodeType": "MemberAccess",
                                    "src": "20434:16:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                      "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                                    }
                                  },
                                  "id": 1517,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "names": [
                                    "value"
                                  ],
                                  "nodeType": "FunctionCallOptions",
                                  "options": [
                                    {
                                      "id": 1516,
                                      "name": "split",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1467,
                                      "src": "20458:5:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "src": "20434:30:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                                    "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                                  }
                                },
                                "id": 1519,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "20434:34:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                                  "typeString": "tuple(bool,bytes memory)"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "20401:67:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1522,
                                    "name": "sent",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1511,
                                    "src": "20494:4:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "hexValue": "4661696c656420746f2073656e64204574686572",
                                    "id": 1523,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "20500:22:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
                                      "typeString": "literal_string \"Failed to send Ether\""
                                    },
                                    "value": "Failed to send Ether"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
                                      "typeString": "literal_string \"Failed to send Ether\""
                                    }
                                  ],
                                  "id": 1521,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "20486:7:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 1524,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "20486:37:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1525,
                              "nodeType": "ExpressionStatement",
                              "src": "20486:37:2"
                            },
                            {
                              "expression": {
                                "id": 1536,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "components": [
                                    {
                                      "id": 1526,
                                      "name": "sent",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1511,
                                      "src": "20579:4:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    {
                                      "id": 1527,
                                      "name": "data",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1513,
                                      "src": "20585:4:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    }
                                  ],
                                  "id": 1528,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "TupleExpression",
                                  "src": "20578:12:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                                    "typeString": "tuple(bool,bytes memory)"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "hexValue": "",
                                      "id": 1534,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "string",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "20623:2:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                        "typeString": "literal_string \"\""
                                      },
                                      "value": ""
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                        "typeString": "literal_string \"\""
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                          "typeString": "literal_string \"\""
                                        }
                                      ],
                                      "expression": {
                                        "expression": {
                                          "id": 1529,
                                          "name": "msg",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -15,
                                          "src": "20593:3:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_message",
                                            "typeString": "msg"
                                          }
                                        },
                                        "id": 1530,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "sender",
                                        "nodeType": "MemberAccess",
                                        "src": "20593:10:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "id": 1531,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "call",
                                      "nodeType": "MemberAccess",
                                      "src": "20593:15:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                                      }
                                    },
                                    "id": 1533,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "names": [
                                      "value"
                                    ],
                                    "nodeType": "FunctionCallOptions",
                                    "options": [
                                      {
                                        "id": 1532,
                                        "name": "split",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1467,
                                        "src": "20616:5:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "src": "20593:29:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                                      "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                                    }
                                  },
                                  "id": 1535,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "20593:33:2",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                                    "typeString": "tuple(bool,bytes memory)"
                                  }
                                },
                                "src": "20578:48:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1537,
                              "nodeType": "ExpressionStatement",
                              "src": "20578:48:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1539,
                                    "name": "sent",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1511,
                                    "src": "20652:4:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "hexValue": "4661696c656420746f2073656e64204574686572",
                                    "id": 1540,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "20658:22:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
                                      "typeString": "literal_string \"Failed to send Ether\""
                                    },
                                    "value": "Failed to send Ether"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
                                      "typeString": "literal_string \"Failed to send Ether\""
                                    }
                                  ],
                                  "id": 1538,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "20644:7:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 1541,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "20644:37:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1542,
                              "nodeType": "ExpressionStatement",
                              "src": "20644:37:2"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "id": 1574,
                  "nodeType": "IfStatement",
                  "src": "18895:2266:2",
                  "trueBody": {
                    "id": 1461,
                    "nodeType": "Block",
                    "src": "18915:831:2",
                    "statements": [
                      {
                        "assignments": [
                          1383
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1383,
                            "mutability": "mutable",
                            "name": "split",
                            "nameLocation": "19001:5:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 1461,
                            "src": "18993:13:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1382,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "18993:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1388,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint80",
                            "typeString": "uint80"
                          },
                          "id": 1387,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 1384,
                              "name": "myTask",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1307,
                              "src": "19009:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Task_$72_storage_ptr",
                                "typeString": "struct Governance.Task storage pointer"
                              }
                            },
                            "id": 1385,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "payment",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 65,
                            "src": "19009:14:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint80",
                              "typeString": "uint80"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "32",
                            "id": 1386,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "19024:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "src": "19009:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint80",
                            "typeString": "uint80"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "18993:32:2"
                      },
                      {
                        "assignments": [
                          1390
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1390,
                            "mutability": "mutable",
                            "name": "taskSubmitter",
                            "nameLocation": "19055:13:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 1461,
                            "src": "19039:29:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            "typeName": {
                              "id": 1389,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "19039:15:2",
                              "stateMutability": "payable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1399,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 1395,
                                    "name": "myTask",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1307,
                                    "src": "19098:6:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Task_$72_storage_ptr",
                                      "typeString": "struct Governance.Task storage pointer"
                                    }
                                  },
                                  "id": 1396,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "verifierID",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 67,
                                  "src": "19098:17:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint16",
                                    "typeString": "uint16"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint16",
                                    "typeString": "uint16"
                                  }
                                ],
                                "expression": {
                                  "id": 1393,
                                  "name": "wizardsNFT",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 24,
                                  "src": "19079:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Wizards_$3993",
                                    "typeString": "contract Wizards"
                                  }
                                },
                                "id": 1394,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "ownerOf",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 4610,
                                "src": "19079:18:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                                  "typeString": "function (uint256) view external returns (address)"
                                }
                              },
                              "id": 1397,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "19079:37:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1392,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "19071:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_payable_$",
                              "typeString": "type(address payable)"
                            },
                            "typeName": {
                              "id": 1391,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "19071:8:2",
                              "stateMutability": "payable",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1398,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "19071:46:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "19039:78:2"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1403,
                                "name": "myTask",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1307,
                                "src": "19208:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Task_$72_storage_ptr",
                                  "typeString": "struct Governance.Task storage pointer"
                                }
                              },
                              "id": 1404,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "NFTID",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 55,
                              "src": "19208:12:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint40",
                                "typeString": "uint40"
                              }
                            },
                            {
                              "expression": {
                                "id": 1405,
                                "name": "myTask",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1307,
                                "src": "19222:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Task_$72_storage_ptr",
                                  "typeString": "struct Governance.Task storage pointer"
                                }
                              },
                              "id": 1406,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timeBonus",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 63,
                              "src": "19222:16:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint24",
                                "typeString": "uint24"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint40",
                                "typeString": "uint40"
                              },
                              {
                                "typeIdentifier": "t_uint24",
                                "typeString": "uint24"
                              }
                            ],
                            "expression": {
                              "id": 1400,
                              "name": "wizardsNFT",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24,
                              "src": "19186:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Wizards_$3993",
                                "typeString": "contract Wizards"
                              }
                            },
                            "id": 1402,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "verifyDuty",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3648,
                            "src": "19186:21:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256) external"
                            }
                          },
                          "id": 1407,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "19186:53:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1408,
                        "nodeType": "ExpressionStatement",
                        "src": "19186:53:2"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1412,
                                "name": "myTask",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1307,
                                "src": "19275:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Task_$72_storage_ptr",
                                  "typeString": "struct Governance.Task storage pointer"
                                }
                              },
                              "id": 1413,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "verifierID",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 67,
                              "src": "19275:17:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            },
                            {
                              "id": 1414,
                              "name": "taskVerificationTimeBonus",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 116,
                              "src": "19294:25:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 1409,
                              "name": "wizardsNFT",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24,
                              "src": "19253:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Wizards_$3993",
                                "typeString": "contract Wizards"
                              }
                            },
                            "id": 1411,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "verifyDuty",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3648,
                            "src": "19253:21:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256) external"
                            }
                          },
                          "id": 1415,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "19253:67:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1416,
                        "nodeType": "ExpressionStatement",
                        "src": "19253:67:2"
                      },
                      {
                        "expression": {
                          "id": 1421,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 1417,
                              "name": "myTask",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1307,
                              "src": "19335:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Task_$72_storage_ptr",
                                "typeString": "struct Governance.Task storage pointer"
                              }
                            },
                            "id": 1419,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "payment",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 65,
                            "src": "19335:14:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint80",
                              "typeString": "uint80"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "30",
                            "id": 1420,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "19350:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "19335:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint80",
                            "typeString": "uint80"
                          }
                        },
                        "id": 1422,
                        "nodeType": "ExpressionStatement",
                        "src": "19335:16:2"
                      },
                      {
                        "expression": {
                          "id": 1426,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "delete",
                          "prefix": true,
                          "src": "19394:21:2",
                          "subExpression": {
                            "baseExpression": {
                              "id": 1423,
                              "name": "tasks",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 106,
                              "src": "19401:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Task_$72_storage_$",
                                "typeString": "mapping(uint256 => struct Governance.Task storage ref)"
                              }
                            },
                            "id": 1425,
                            "indexExpression": {
                              "id": 1424,
                              "name": "_taskID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1274,
                              "src": "19407:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "19401:14:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Task_$72_storage",
                              "typeString": "struct Governance.Task storage ref"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1427,
                        "nodeType": "ExpressionStatement",
                        "src": "19394:21:2"
                      },
                      {
                        "assignments": [
                          1429,
                          1431
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1429,
                            "mutability": "mutable",
                            "name": "sent",
                            "nameLocation": "19474:4:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 1461,
                            "src": "19469:9:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 1428,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "19469:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 1431,
                            "mutability": "mutable",
                            "name": "data",
                            "nameLocation": "19493:4:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 1461,
                            "src": "19480:17:2",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 1430,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "19480:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1438,
                        "initialValue": {
                          "arguments": [
                            {
                              "hexValue": "",
                              "id": 1436,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "19534:2:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              },
                              "value": ""
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                }
                              ],
                              "expression": {
                                "id": 1432,
                                "name": "taskSubmitter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1390,
                                "src": "19501:13:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "id": 1433,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "call",
                              "nodeType": "MemberAccess",
                              "src": "19501:18:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                              }
                            },
                            "id": 1435,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "id": 1434,
                                "name": "split",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1383,
                                "src": "19527:5:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "src": "19501:32:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                              "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                            }
                          },
                          "id": 1437,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "19501:36:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "19468:69:2"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1440,
                              "name": "sent",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1429,
                              "src": "19559:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4661696c656420746f2073656e64204574686572",
                              "id": 1441,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "19565:22:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
                                "typeString": "literal_string \"Failed to send Ether\""
                              },
                              "value": "Failed to send Ether"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
                                "typeString": "literal_string \"Failed to send Ether\""
                              }
                            ],
                            "id": 1439,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "19551:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1442,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "19551:37:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1443,
                        "nodeType": "ExpressionStatement",
                        "src": "19551:37:2"
                      },
                      {
                        "expression": {
                          "id": 1454,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "components": [
                              {
                                "id": 1444,
                                "name": "sent",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1429,
                                "src": "19636:4:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              {
                                "id": 1445,
                                "name": "data",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1431,
                                "src": "19642:4:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "id": 1446,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "TupleExpression",
                            "src": "19635:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                              "typeString": "tuple(bool,bytes memory)"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "hexValue": "",
                                "id": 1452,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "19680:2:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                },
                                "value": ""
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                    "typeString": "literal_string \"\""
                                  }
                                ],
                                "expression": {
                                  "expression": {
                                    "id": 1447,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "19650:3:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 1448,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "19650:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "id": 1449,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "call",
                                "nodeType": "MemberAccess",
                                "src": "19650:15:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                  "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                                }
                              },
                              "id": 1451,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "names": [
                                "value"
                              ],
                              "nodeType": "FunctionCallOptions",
                              "options": [
                                {
                                  "id": 1450,
                                  "name": "split",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1383,
                                  "src": "19673:5:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "src": "19650:29:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                                "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                              }
                            },
                            "id": 1453,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "19650:33:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                              "typeString": "tuple(bool,bytes memory)"
                            }
                          },
                          "src": "19635:48:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1455,
                        "nodeType": "ExpressionStatement",
                        "src": "19635:48:2"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1457,
                              "name": "sent",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1429,
                              "src": "19705:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4661696c656420746f2073656e64204574686572",
                              "id": 1458,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "19711:22:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
                                "typeString": "literal_string \"Failed to send Ether\""
                              },
                              "value": "Failed to send Ether"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
                                "typeString": "literal_string \"Failed to send Ether\""
                              }
                            ],
                            "id": 1456,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "19697:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1459,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "19697:37:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1460,
                        "nodeType": "ExpressionStatement",
                        "src": "19697:37:2"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "f18c51d3",
            "id": 1576,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "submitVerification",
            "nameLocation": "17556:18:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1278,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1272,
                  "mutability": "mutable",
                  "name": "_wizId",
                  "nameLocation": "17583:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1576,
                  "src": "17575:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1271,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "17575:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1274,
                  "mutability": "mutable",
                  "name": "_taskID",
                  "nameLocation": "17599:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1576,
                  "src": "17591:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1273,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "17591:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1277,
                  "mutability": "mutable",
                  "name": "_fields",
                  "nameLocation": "17625:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1576,
                  "src": "17608:24:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1275,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "17608:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 1276,
                    "nodeType": "ArrayTypeName",
                    "src": "17608:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17574:59:2"
            },
            "returnParameters": {
              "id": 1279,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17643:0:2"
            },
            "scope": 1622,
            "src": "17547:3620:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1584,
              "nodeType": "Block",
              "src": "21276:58:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "66616c7365",
                        "id": 1579,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21294:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "hexValue": "4d7573742062652061646d696e",
                        "id": 1580,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21300:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bd96b1ed5c7b326773a6be52f6fd399ff9263aeb45597abb2af8de7934df67c1",
                          "typeString": "literal_string \"Must be admin\""
                        },
                        "value": "Must be admin"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bd96b1ed5c7b326773a6be52f6fd399ff9263aeb45597abb2af8de7934df67c1",
                          "typeString": "literal_string \"Must be admin\""
                        }
                      ],
                      "id": 1578,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "21286:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1581,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21286:30:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1582,
                  "nodeType": "ExpressionStatement",
                  "src": "21286:30:2"
                },
                {
                  "id": 1583,
                  "nodeType": "PlaceholderStatement",
                  "src": "21326:1:2"
                }
              ]
            },
            "id": 1585,
            "name": "onlyAdmin",
            "nameLocation": "21264:9:2",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1577,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "21273:2:2"
            },
            "src": "21255:79:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1593,
              "nodeType": "Block",
              "src": "21364:58:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "66616c7365",
                        "id": 1588,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21382:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "hexValue": "4d7573742062652061646d696e",
                        "id": 1589,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21388:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bd96b1ed5c7b326773a6be52f6fd399ff9263aeb45597abb2af8de7934df67c1",
                          "typeString": "literal_string \"Must be admin\""
                        },
                        "value": "Must be admin"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bd96b1ed5c7b326773a6be52f6fd399ff9263aeb45597abb2af8de7934df67c1",
                          "typeString": "literal_string \"Must be admin\""
                        }
                      ],
                      "id": 1587,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "21374:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1590,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21374:30:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1591,
                  "nodeType": "ExpressionStatement",
                  "src": "21374:30:2"
                },
                {
                  "id": 1592,
                  "nodeType": "PlaceholderStatement",
                  "src": "21414:1:2"
                }
              ]
            },
            "id": 1594,
            "name": "onlyNFTOwner",
            "nameLocation": "21349:12:2",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1586,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "21361:2:2"
            },
            "src": "21340:82:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1602,
              "nodeType": "Block",
              "src": "21450:59:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "66616c7365",
                        "id": 1597,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21468:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "hexValue": "4d757374206265206c6573736565",
                        "id": 1598,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21474:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_37e3c5f829f0710bee63aab7e0e0e4e41123855652abc1459d4423f866aba493",
                          "typeString": "literal_string \"Must be lessee\""
                        },
                        "value": "Must be lessee"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_37e3c5f829f0710bee63aab7e0e0e4e41123855652abc1459d4423f866aba493",
                          "typeString": "literal_string \"Must be lessee\""
                        }
                      ],
                      "id": 1596,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "21460:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1599,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21460:31:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1600,
                  "nodeType": "ExpressionStatement",
                  "src": "21460:31:2"
                },
                {
                  "id": 1601,
                  "nodeType": "PlaceholderStatement",
                  "src": "21501:1:2"
                }
              ]
            },
            "id": 1603,
            "name": "onlyLessee",
            "nameLocation": "21437:10:2",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1595,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "21447:2:2"
            },
            "src": "21428:81:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1611,
              "nodeType": "Block",
              "src": "21537:81:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "66616c7365",
                        "id": 1606,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21577:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "hexValue": "4d757374206265206d656d626572",
                        "id": 1607,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21583:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a04ddf7e4f54e61b704ffb185299c2b9de8d6603e816ee24666c5099bc530a98",
                          "typeString": "literal_string \"Must be member\""
                        },
                        "value": "Must be member"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a04ddf7e4f54e61b704ffb185299c2b9de8d6603e816ee24666c5099bc530a98",
                          "typeString": "literal_string \"Must be member\""
                        }
                      ],
                      "id": 1605,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "21569:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1608,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21569:31:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1609,
                  "nodeType": "ExpressionStatement",
                  "src": "21569:31:2"
                },
                {
                  "id": 1610,
                  "nodeType": "PlaceholderStatement",
                  "src": "21610:1:2"
                }
              ]
            },
            "id": 1612,
            "name": "onlyMember",
            "nameLocation": "21524:10:2",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1604,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "21534:2:2"
            },
            "src": "21515:103:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1620,
              "nodeType": "Block",
              "src": "21668:85:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "74727565",
                        "id": 1615,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21686:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "hexValue": "4d757374206265206f6e2074686520626f617264",
                        "id": 1616,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21691:22:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ff1967d201ff7c8fd38bf0f0ae23f762e566218fb9ca1f12ab82fc2c11572d1c",
                          "typeString": "literal_string \"Must be on the board\""
                        },
                        "value": "Must be on the board"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ff1967d201ff7c8fd38bf0f0ae23f762e566218fb9ca1f12ab82fc2c11572d1c",
                          "typeString": "literal_string \"Must be on the board\""
                        }
                      ],
                      "id": 1614,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "21678:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1617,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21678:36:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1618,
                  "nodeType": "ExpressionStatement",
                  "src": "21678:36:2"
                },
                {
                  "id": 1619,
                  "nodeType": "PlaceholderStatement",
                  "src": "21745:1:2"
                }
              ]
            },
            "id": 1621,
            "name": "onlyBoard",
            "nameLocation": "21656:9:2",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1613,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "21665:2:2"
            },
            "src": "21647:106:2",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 1623,
        "src": "743:21017:2",
        "usedErrors": [
          4003
        ]
      }
    ],
    "src": "0:21760:2"
  },
  "bytecode": "6080604052610258600b5562015180600c553480156200001e57600080fd5b506040516200376f3803806200376f8339810160408190526200004191620000c9565b6001600055620000513362000077565b600280546001600160a01b0319166001600160a01b0392909216919091179055620000fb565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600060208284031215620000dc57600080fd5b81516001600160a01b0381168114620000f457600080fd5b9392505050565b613664806200010b6000396000f3fe6080604052600436106101445760003560e01c80638d977672116100b6578063d374a2171161006f578063d374a21714610409578063f18c51d314610429578063f2fde38b14610449578063f4739bd914610469578063f713b7ed14610499578063ff981099146104b957600080fd5b80638d9776721461031b5780638da5cb5b14610351578063976217cd14610379578063a584a328146103a6578063b2bad544146103bc578063beca3a16146103e957600080fd5b80636215597b116101085780636215597b1461024057806369d0373814610286578063715018a6146102a657806372e185ce146102bb578063826b8ebd146102db5780638a6655d6146102fb57600080fd5b8063013cf08b1461015057806309265ce61461018a57806310190ef1146101ac578063379d94cc146101e057806361f9e9a81461022057600080fd5b3661014b57005b600080fd5b34801561015c57600080fd5b5061017061016b3660046128e8565b6104e6565b604051610181959493929190612959565b60405180910390f35b34801561019657600080fd5b506101aa6101a5366004612a62565b6105b2565b005b3480156101b857600080fd5b506101cc6101c73660046128e8565b6106f8565b604051610181989796959493929190612ac1565b3480156101ec57600080fd5b5060055461020690600f81810b91600160801b9004900b82565b60408051600f93840b81529190920b602082015201610181565b34801561022c57600080fd5b506101aa61023b366004612bad565b610802565b34801561024c57600080fd5b5061027861025b366004612c4a565b600360209081526000928352604080842090915290825290205481565b604051908152602001610181565b34801561029257600080fd5b506101aa6102a1366004612c81565b61082a565b3480156102b257600080fd5b506101aa610876565b3480156102c757600080fd5b506101aa6102d6366004612d14565b6108ac565b3480156102e757600080fd5b506102786102f63660046128e8565b610cb2565b34801561030757600080fd5b506101aa610316366004612d6a565b610ec8565b34801561032757600080fd5b5061033b6103363660046128e8565b610f01565b6040516101819a99989796959493929190612d96565b34801561035d57600080fd5b506001546040516001600160a01b039091168152602001610181565b34801561038557600080fd5b506103996103943660046128e8565b611003565b6040516101819190612e17565b3480156103b257600080fd5b50610278600a5481565b3480156103c857600080fd5b506103dc6103d7366004612ee4565b611145565b6040516101819190612eff565b3480156103f557600080fd5b506101aa610404366004612f61565b611519565b34801561041557600080fd5b506101aa6104243660046128e8565b61162e565b34801561043557600080fd5b506101aa610444366004612fb1565b611976565b34801561045557600080fd5b506101aa610464366004612c81565b61211c565b34801561047557600080fd5b506104896104843660046128e8565b6121b7565b6040519015158152602001610181565b3480156104a557600080fd5b506101aa6104b4366004613000565b612249565b3480156104c557600080fd5b506104d96104d43660046128e8565b6123e6565b604051610181919061303c565b60076020526000908152604090208054819061050190613084565b80601f016020809104026020016040519081016040528092919081815260200182805461052d90613084565b801561057a5780601f1061054f5761010080835404028352916020019161057a565b820191906000526020600020905b81548152906001019060200180831161055d57829003601f168201915b505050506001830154600390930154919261ffff169164ffffffffff8082169250650100000000008204811691600160501b90041685565b6000826000815181106105c7576105c76130be565b60200260200101516040516020016105e191815260200190565b6040516020818303038152906040529050811561066d5760005b835181101561066b57838181518110610616576106166130be565b602002602001015160405160200161063091815260200190565b60405160208183030381529060405280519060200120848281518110610658576106586130be565b60209081029190910101526001016105fb565b505b60008360405160200161068091906130d4565b6040516020818303038152906040528051906020012090507f637ce8d069e382e64ef71cf191623b88c7e307ce252e908e7f2babbad0cb81ea81868314866000815181106106d0576106d06130be565b6020026020010151856040516106e9949392919061310a565b60405180910390a15050505050565b6004818154811061070857600080fd5b906000526020600020906003020160009150905080600101805461072b90613084565b80601f016020809104026020016040519081016040528092919081815260200182805461075790613084565b80156107a45780601f10610779576101008083540402835291602001916107a4565b820191906000526020600020905b81548152906001019060200180831161078757829003601f168201915b5050506002909301549192505060ff8082169164ffffffffff610100820481169266010000000000008304169162ffffff600160381b82041691600160501b8204811691600160781b81049091169061ffff600160a01b9091041688565b610810565b60405180910390fd5b61082187876000888888888861250b565b50505050505050565b6001546001600160a01b031633146108545760405162461bcd60e51b81526004016108079061313b565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b6001546001600160a01b031633146108a05760405162461bcd60e51b81526004016108079061313b565b6108aa600061268a565b565b60005b600454811015610cac57836040516020016108ca9190613170565b60405160208183030381529060405280519060200120600482815481106108f3576108f36130be565b90600052602060002090600302016001016040516020016109149190613183565b6040516020818303038152906040528051906020012003610ca4574260048281548110610943576109436130be565b6000918252602090912060039091020160020154600160501b900464ffffffffff16118015906109a7575060048181548110610981576109816130be565b6000918252602090912060039091020160020154600160781b900464ffffffffff164211155b6109e95760405162461bcd60e51b815260206004820152601360248201527213dd5d1cda5919481d1a5b59481c195c9a5bd9606a1b6044820152606401610807565b60006040518061014001604052808681526020018464ffffffffff1681526020018581526020016000801b815260200160048481548110610a2c57610a2c6130be565b906000526020600020906003020160020160069054906101000a900460ff1660ff16815260200160048481548110610a6657610a666130be565b6000918252602080832060039290920290910160020154600160381b900462ffffff1683528281018290526040808401839052606084018390526080909301829052600a5460058054600160801b90819004600f0b8086526006855286862084905582546fffffffffffffffffffffffffffffffff90811660019092011690910217905582526009905220815191925082918190610b04908261325d565b5060208201516001828101805464ffffffffff191664ffffffffff938416179055604084015160028401556060840151600384015560808401516004909301805460a086015160c087015160e0880151610100808a0151610120909a015160ff90991663ffffffff199095169490941762ffffff909316909302919091176fffffffffffffffffffffffff000000001916600160201b6001600160501b039092169190910261ffff60701b191617600160701b61ffff928316021766ffffffffffffff60801b1916600160801b919096160264ffffffffff60901b191694909417600160901b939092169290920217909155600a8054600090610c08908490613332565b90915550610c1b90504262015180613332565b60048381548110610c2e57610c2e6130be565b6000918252602080832064ffffffffff88168452600390920290910190526040902055600a547fbcc1ea15519f3acfb49e91de851e553b2c024b9ab85cee8ffd8fe4e4e0a7876d908490610c849060019061334a565b8742604051610c969493929190613361565b60405180910390a150610cac565b6001016108af565b50505050565b60006008548210610cf85760405162461bcd60e51b815260206004820152601060248201526f1b9bc81cdd58da081c1c9bdc1bdcd85b60821b6044820152606401610807565b600082815260076020526040902060030154600160501b900464ffffffffff164211610d5c5760405162461bcd60e51b8152602060048201526013602482015272766f74696e67207374696c6c2061637469766560681b6044820152606401610807565b6000806000805b60008681526007602052604090206001015461ffff16811015610e7d57600086815260076020526040902083906002018260088110610da457610da46130be565b601091828204019190066002029054906101000a900461ffff1661ffff161115610e1f5760008681526007602052604090206002018160088110610dea57610dea6130be565b601091828204019190066002029054906101000a900461ffff1661ffff16925080935081600103610e1a57600091505b610e6b565b600086815260076020526040902083906002018260088110610e4357610e436130be565b601091828204019190066002029054906101000a900461ffff1661ffff1603610e6b57600191505b80610e7581613398565b915050610d63565b508015610ebf5760405162461bcd60e51b815260206004820152601060248201526f3a3432b932903bb0b99030903a34b29760811b6044820152606401610807565b50909392505050565b60405162461bcd60e51b815260206004820152600e60248201526d26bab9ba1031329036b2b6b132b960911b6044820152606401610807565b600960205260009081526040902080548190610f1c90613084565b80601f0160208091040260200160405190810160405280929190818152602001828054610f4890613084565b8015610f955780601f10610f6a57610100808354040283529160200191610f95565b820191906000526020600020905b815481529060010190602001808311610f7857829003601f168201915b505050600184015460028501546003860154600490960154949564ffffffffff92831695919450925060ff81169162ffffff610100830416916001600160501b03600160201b8204169161ffff600160701b8304811692600160801b810490911691600160901b909104168a565b61100b61284a565b600082815260096020526040908190208151610140810190925280548290829061103490613084565b80601f016020809104026020016040519081016040528092919081815260200182805461106090613084565b80156110ad5780601f10611082576101008083540402835291602001916110ad565b820191906000526020600020905b81548152906001019060200180831161109057829003601f168201915b5050509183525050600182015464ffffffffff9081166020830152600283015460408301526003830154606083015260049092015460ff8116608083015261010080820462ffffff1660a0840152600160201b82046001600160501b031660c0840152600160701b820461ffff90811660e0850152600160801b83041690830152600160901b90049091166101209091015292915050565b60606000805b6004548110156112d6574260048281548110611169576111696130be565b6000918252602080832064ffffffffff891684526003909202909101905260409020541080156111cd575042600482815481106111a8576111a86130be565b6000918252602090912060039091020160020154600160501b900464ffffffffff1611155b801561120c575042600482815481106111e8576111e86130be565b6000918252602090912060039091020160020154600160781b900464ffffffffff16115b80156112495750600160048281548110611228576112286130be565b6000918252602090912060039091020160020154600160a01b900461ffff16115b15611259578160010191506112ce565b604080516001808252818301909252600091816020015b606081526020019060019003908161127057905050905060405180604001604052806008815260200167273790363ab1b59760c11b815250816000815181106112bb576112bb6130be565b6020908102919091010152949350505050565b60010161114b565b506000816001600160401b038111156112f1576112f161299d565b60405190808252806020026020018201604052801561132457816020015b606081526020019060019003908161130f5790505b5090506000805b60045481101561150f574260048281548110611349576113496130be565b6000918252602080832064ffffffffff8b1684526003909202909101905260409020541080156113ad57504260048281548110611388576113886130be565b6000918252602090912060039091020160020154600160501b900464ffffffffff1611155b80156113ec575042600482815481106113c8576113c86130be565b6000918252602090912060039091020160020154600160781b900464ffffffffff16115b80156114295750600160048281548110611408576114086130be565b6000918252602090912060039091020160020154600160a01b900461ffff16115b156115075760048181548110611441576114416130be565b9060005260206000209060030201600101805461145d90613084565b80601f016020809104026020016040519081016040528092919081815260200182805461148990613084565b80156114d65780601f106114ab576101008083540402835291602001916114d6565b820191906000526020600020905b8154815290600101906020018083116114b957829003601f168201915b50505050508382815181106114ed576114ed6130be565b60200260200101819052508160010191508382101561150f575b60010161132b565b5090949350505050565b60018561ffff1611801561153257506101018561ffff16105b61157e5760405162461bcd60e51b815260206004820152601960248201527f696e76616c6964206e756d626572206f66206f7074696f6e73000000000000006044820152606401610807565b6001600860008282546115919190613332565b909155505060085460009081526007602052604090206003810180546effffffffffffffffffff000000000019166501000000000064ffffffffff8781169190910264ffffffffff60501b191691909117600160501b9186169190910217905560018101805461ffff191661ffff881617905580611610888a836133ce565b50611624888860085460008989898961250b565b5050505050505050565b6000611649600554600f81810b600160801b909204900b0390565b905061165361284a565b6000805b83811015611936574283610120015164ffffffffff16108015611685575084836020015164ffffffffff1614155b801561169a57508483610100015161ffff1614155b15611931576116aa6005826126dc565b600081815260096020526040908190208151610140810190925280549294509091829082906116d890613084565b80601f016020809104026020016040519081016040528092919081815260200182805461170490613084565b80156117515780601f1061172657610100808354040283529160200191611751565b820191906000526020600020905b81548152906001019060200180831161173457829003601f168201915b5050509183525050600182015464ffffffffff9081166020830152600283015460408301526003830154606083015260049092015460ff8116608083015261010080820462ffffff1660a0840152600160201b82046001600160501b031660c0840152600160701b820461ffff90811660e080860191909152600160801b8404821692850192909252600160901b90920490931661012090920191909152871690820152600b549093506118059042613332565b64ffffffffff1661012084015282600960006118226005856126dc565b8152602081019190915260400160002081518190611840908261325d565b50602082015160018201805464ffffffffff191664ffffffffff928316179055604083015160028301556060830151600383015560808301516004909201805460a085015160c086015160e0870151610100808901516101209099015160ff90981663ffffffff199095169490941762ffffff909316909302919091176fffffffffffffffffffffffff000000001916600160201b6001600160501b039092169190910261ffff60701b191617600160701b61ffff928316021766ffffffffffffff60801b1916600160801b919095160264ffffffffff60901b191693909317600160901b92909116919091021790555b611657565b5060408051858152602081018390527f4babe4b493069d658924ac325d49ee1adfaccbb176319a54499a34417eaf73ee910160405180910390a150505050565b6002546040516331a9108f60e11b81526004810185905233916001600160a01b031690636352211e90602401602060405180830381865afa1580156119bf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119e391906133b1565b6001600160a01b0316148015611a145750600082815260096020526040902060040154600160701b900461ffff1683145b611a605760405162461bcd60e51b815260206004820181905260248201527f4d757374206265206f776e6572206f662061737369676e65642077697a6172646044820152606401610807565b6000815111611a6e57600080fd5b60008281526009602052604081206004810154909190600160801b900461ffff1615611b095760005b8351811015611b0757838181518110611ab257611ab26130be565b6020026020010151604051602001611acc91815260200190565b60405160208183030381529060405280519060200120848281518110611af457611af46130be565b6020908102919091010152600101611a97565b505b600083604051602001611b1c91906130d4565b604051602081830303815290604052805190602001209050600081846002015414611b48576000611b4b565b60015b600185810154604080518b815264ffffffffff909216602083015281018990526060810185905260ff92909216908114608083015291507fe3f0e138f100deaf328ba1def71c39dade8cd971ba0074d935ee648e54532fae9060a00160405180910390a180600103611eb1576004840154600090611bdb90600290600160201b90046001600160501b031661348e565b6002546004878101546040516331a9108f60e11b8152600160701b90910461ffff16918101919091526001600160501b039290921692506000916001600160a01b0390911690636352211e90602401602060405180830381865afa158015611c47573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c6b91906133b1565b60025460018801546004808a0154604051638ad4d6a560e01b815264ffffffffff90931691830191909152610100900462ffffff1660248201529192506001600160a01b031690638ad4d6a590604401600060405180830381600087803b158015611cd557600080fd5b505af1158015611ce9573d6000803e3d6000fd5b5050600254600489810154600c54604051638ad4d6a560e01b8152600160701b90920461ffff169282019290925260248101919091526001600160a01b039091169250638ad4d6a591506044015b600060405180830381600087803b158015611d5157600080fd5b505af1158015611d65573d6000803e3d6000fd5b5050506004870180546dffffffffffffffffffff000000001916905550600088815260096020526040812090611d9b828261289e565b5060018101805464ffffffffff1916905560006002820181905560038201819055600490910180546001600160b81b031916905560405181906001600160a01b0384169085908381818185875af1925050503d8060008114611e19576040519150601f19603f3d011682016040523d82523d6000602084013e611e1e565b606091505b509150915081611e405760405162461bcd60e51b8152600401610807906134c2565b60405133908590600081818185875af1925050503d8060008114611e80576040519150601f19603f3d011682016040523d82523d6000602084013e611e85565b606091505b50909250905081611ea85760405162461bcd60e51b8152600401610807906134c2565b50505050610821565b81846003015403612028576004840154600090611ee090600290600160201b90046001600160501b031661348e565b6002546004878101546040516331a9108f60e11b8152600160801b90910461ffff16918101919091526001600160501b039290921692506000916001600160a01b0390911690636352211e90602401602060405180830381865afa158015611f4c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f7091906133b1565b600254600488810154600c54604051638ad4d6a560e01b8152600160801b90920461ffff169282019290925260248101919091529192506001600160a01b031690638ad4d6a590604401600060405180830381600087803b158015611fd457600080fd5b505af1158015611fe8573d6000803e3d6000fd5b5050600254600c54604051638ad4d6a560e01b8152600481018e905260248101919091526001600160a01b039091169250638ad4d6a59150604401611d37565b60048401546000878152600960205260408120600160201b9092046001600160501b03169190612058828261289e565b5060018101805464ffffffffff1916905560006002820181905560038201819055600490910180546001600160b81b03191690558061209f6001546001600160a01b031690565b6001600160a01b03168360405160006040518083038185875af1925050503d80600081146120e9576040519150601f19603f3d011682016040523d82523d6000602084013e6120ee565b606091505b5091509150816121105760405162461bcd60e51b8152600401610807906134c2565b50505050505050505050565b6001546001600160a01b031633146121465760405162461bcd60e51b81526004016108079061313b565b6001600160a01b0381166121ab5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610807565b6121b48161268a565b50565b6000806121d3600554600f81810b600160801b909204900b0390565b90506121dd61284a565b6000805b8381101561223d574283610120015164ffffffffff1611801561220f575085836020015164ffffffffff1614155b801561222457508583610100015161ffff1614155b156122355750600195945050505050565b6001016121e1565b50600095945050505050565b60005b6004548110156123e2578160405160200161226791906134f0565b6040516020818303038152906040528051906020012060048281548110612290576122906130be565b90600052602060002090600302016001016040516020016122b1919061350c565b60405160208183030381529060405280519060200120036123da576000600482815481106122e1576122e16130be565b90600052602060002090600302019050600060046001600480549050612307919061334a565b81548110612317576123176130be565b906000526020600020906003020190508091506004600160048054905061233e919061334a565b8154811061234e5761234e6130be565b9060005260206000209060030201600060018201600061236e919061289e565b5060020180546001600160b01b0319169055600480546123909060019061334a565b815481106123a0576123a06130be565b906000526020600020906003020160006001820160006123c0919061289e565b5060020180546001600160b01b0319169055506123e29050565b60010161224c565b5050565b6060600854821061242c5760405162461bcd60e51b815260206004820152601060248201526f1b9bc81cdd58da081c1c9bdc1bdcd85b60821b6044820152606401610807565b60008281526007602052604081206001015461ffff166001600160401b038111156124595761245961299d565b604051908082528060200260200182016040528015612482578160200160208202803683370190505b50905060005b815181101561250457600084815260076020526040902060020181600881106124b3576124b36130be565b601091828204019190066002029054906101000a900461ffff168282815181106124df576124df6130be565b61ffff90921660209283029190910190910152806124fc81613398565b915050612488565b5092915050565b600480546001810180835560008381529192908390811061252e5761252e6130be565b6000918252602090912060039091020190506001810161254f8a8c836133ce565b5060008160020160006101000a81548160ff021916908315150217905550878160020160016101000a81548164ffffffffff021916908364ffffffffff160217905550868160020160066101000a81548160ff021916908360ff160217905550858160020160076101000a81548162ffffff021916908362ffffff1602179055508481600201600a6101000a81548164ffffffffff021916908364ffffffffff1602179055508381600201600f6101000a81548164ffffffffff021916908364ffffffffff160217905550828160020160146101000a81548161ffff021916908361ffff1602179055507f2810025950962e3cd71fd98c2dc111ffbdb2a129b36771df8d36a7de2fe3e4e08a8a8a8a8a8a8a8a60405161267698979695949392919061357e565b60405180910390a150505050505050505050565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000806126ff6126eb8461274d565b85546126fa9190600f0b6135ed565b6127bb565b8454909150600160801b9004600f90810b9082900b1261273257604051632d0483c560e21b815260040160405180910390fd5b600f0b60009081526001939093016020525050604090205490565b60006001600160ff1b038211156127b75760405162461bcd60e51b815260206004820152602860248201527f53616665436173743a2076616c756520646f65736e27742066697420696e2061604482015267371034b73a191a9b60c11b6064820152608401610807565b5090565b60006f7fffffffffffffffffffffffffffffff1982128015906127ee57506f7fffffffffffffffffffffffffffffff8213155b6127b75760405162461bcd60e51b815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e20316044820152663238206269747360c81b6064820152608401610807565b6040805161014081018252606080825260006020830181905292820183905281018290526080810182905260a0810182905260c0810182905260e08101829052610100810182905261012081019190915290565b5080546128aa90613084565b6000825580601f106128ba575050565b601f0160209004906000526020600020908101906121b491905b808211156127b757600081556001016128d4565b6000602082840312156128fa57600080fd5b5035919050565b60005b8381101561291c578181015183820152602001612904565b83811115610cac5750506000910152565b60008151808452612945816020860160208601612901565b601f01601f19169290920160200192915050565b60a08152600061296c60a083018861292d565b61ffff9690961660208301525064ffffffffff93841660408201529183166060830152909116608090910152919050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b03811182821017156129db576129db61299d565b604052919050565b600082601f8301126129f457600080fd5b813560206001600160401b03821115612a0f57612a0f61299d565b8160051b612a1e8282016129b3565b9283528481018201928281019087851115612a3857600080fd5b83870192505b84831015612a5757823582529183019190830190612a3e565b979650505050505050565b600080600060608486031215612a7757600080fd5b8335925060208401356001600160401b03811115612a9457600080fd5b612aa0868287016129e3565b92505060408401358015158114612ab657600080fd5b809150509250925092565b6000610100808352612ad58184018c61292d565b9915156020840152505064ffffffffff968716604082015260ff95909516606086015262ffffff93909316608085015290841660a084015290921660c082015261ffff90911660e090910152919050565b60008083601f840112612b3857600080fd5b5081356001600160401b03811115612b4f57600080fd5b602083019150836020828501011115612b6757600080fd5b9250929050565b803562ffffff81168114612b8157600080fd5b919050565b803564ffffffffff81168114612b8157600080fd5b803561ffff81168114612b8157600080fd5b600080600080600080600060c0888a031215612bc857600080fd5b87356001600160401b03811115612bde57600080fd5b612bea8a828b01612b26565b909850965050602088013560ff81168114612c0457600080fd5b9450612c1260408901612b6e565b9350612c2060608901612b86565b9250612c2e60808901612b86565b9150612c3c60a08901612b9b565b905092959891949750929550565b60008060408385031215612c5d57600080fd5b50508035926020909101359150565b6001600160a01b03811681146121b457600080fd5b600060208284031215612c9357600080fd5b8135612c9e81612c6c565b9392505050565b600082601f830112612cb657600080fd5b81356001600160401b03811115612ccf57612ccf61299d565b612ce2601f8201601f19166020016129b3565b818152846020838601011115612cf757600080fd5b816020850160208301376000918101602001919091529392505050565b600080600060608486031215612d2957600080fd5b83356001600160401b03811115612d3f57600080fd5b612d4b86828701612ca5565b93505060208401359150612d6160408501612b86565b90509250925092565b600080600060608486031215612d7f57600080fd5b505081359360208301359350604090920135919050565b6000610140808352612daa8184018e61292d565b64ffffffffff9c8d166020850152604084019b909b525050606081019790975260ff95909516608087015262ffffff9390931660a08601526001600160501b039190911660c085015261ffff90811660e08501521661010083015290921661012090920191909152919050565b6020815260008251610140806020850152612e3661016085018361292d565b91506020850151612e50604086018264ffffffffff169052565b5060408501516060850152606085015160808501526080850151612e7960a086018260ff169052565b5060a085015162ffffff811660c08601525060c08501516001600160501b03811660e08601525060e0850151610100612eb78187018361ffff169052565b8601519050610120612ece8682018361ffff169052565b86015164ffffffffff811683870152905061150f565b600060208284031215612ef657600080fd5b612c9e82612b86565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015612f5457603f19888603018452612f4285835161292d565b94509285019290850190600101612f26565b5092979650505050505050565b600080600080600080600060c0888a031215612f7c57600080fd5b87356001600160401b03811115612f9257600080fd5b612f9e8a828b01612b26565b9098509650612c04905060208901612b9b565b600080600060608486031215612fc657600080fd5b833592506020840135915060408401356001600160401b03811115612fea57600080fd5b612ff6868287016129e3565b9150509250925092565b60006020828403121561301257600080fd5b81356001600160401b0381111561302857600080fd5b61303484828501612ca5565b949350505050565b6020808252825182820181905260009190848201906040850190845b8181101561307857835161ffff1683529284019291840191600101613058565b50909695505050505050565b600181811c9082168061309857607f821691505b6020821081036130b857634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b815160009082906020808601845b838110156130fe578151855293820193908201906001016130e2565b50929695505050505050565b8481528315156020820152826040820152608060608201526000613131608083018461292d565b9695505050505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b602081526000612c9e602083018461292d565b600060208083526000845461319781613084565b808487015260406001808416600081146131b857600181146131d257613200565b60ff1985168984015283151560051b890183019550613200565b896000528660002060005b858110156131f85781548b82018601529083019088016131dd565b8a0184019650505b509398975050505050505050565b601f82111561325857600081815260208120601f850160051c810160208610156132355750805b601f850160051c820191505b8181101561325457828155600101613241565b5050505b505050565b81516001600160401b038111156132765761327661299d565b61328a816132848454613084565b8461320e565b602080601f8311600181146132bf57600084156132a75750858301515b600019600386901b1c1916600185901b178555613254565b600085815260208120601f198616915b828110156132ee578886015182559484019460019091019084016132cf565b508582101561330c5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052601160045260246000fd5b600082198211156133455761334561331c565b500190565b60008282101561335c5761335c61331c565b500390565b64ffffffffff85168152836020820152608060408201526000613387608083018561292d565b905082606083015295945050505050565b6000600182016133aa576133aa61331c565b5060010190565b6000602082840312156133c357600080fd5b8151612c9e81612c6c565b6001600160401b038311156133e5576133e561299d565b6133f9836133f38354613084565b8361320e565b6000601f84116001811461342d57600085156134155750838201355b600019600387901b1c1916600186901b178355613487565b600083815260209020601f19861690835b8281101561345e578685013582556020948501946001909201910161343e565b508682101561347b5760001960f88860031b161c19848701351681555b505060018560011b0183555b5050505050565b60006001600160501b03808416806134b657634e487b7160e01b600052601260045260246000fd5b92169190910492915050565b6020808252601490820152732330b4b632b2103a379039b2b7321022ba3432b960611b604082015260600190565b60008251613502818460208701612901565b9190910192915050565b600080835461351a81613084565b600182811680156135325760018114613547576130fe565b60ff19841687528215158302870194506130fe565b8760005260208060002060005b8581101561356d5781548a820152908401908201613554565b505050959091019695505050505050565b60e081528760e08201526000610100898b8285013760008a840182015264ffffffffff988916602084015260ff9790971660408301525062ffffff949094166060850152918516608084015290931660a082015261ffff90921660c0830152601f909201601f19160101919050565b600080821280156001600160ff1b038490038513161561360f5761360f61331c565b600160ff1b83900384128116156136285761362861331c565b5050019056fea264697066735822122054a1f39dbdaae222c93bcc95d6f19fcb4987a73834dae986723cdb26fde96dca64736f6c634300080f0033",
  "bytecodeSha1": "44eff548c4c77cd2515e18ece3abb53708b8862d",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.15+commit.e14f2714"
  },
  "contractName": "Governance",
  "coverageMap": {
    "branches": {
      "0": {
        "SafeCast.toInt128": {
          "139": [
            26367,
            26392,
            false
          ],
          "140": [
            26396,
            26421,
            true
          ]
        },
        "SafeCast.toInt256": {
          "138": [
            35409,
            35443,
            true
          ]
        }
      },
      "1": {
        "DoubleEndedQueue.at": {
          "136": [
            4843,
            4860,
            false
          ]
        }
      },
      "12": {
        "Ownable.transferOwnership": {
          "137": [
            1990,
            2012,
            true
          ]
        }
      },
      "13": {},
      "2": {
        "Governance.areTasksAvailableToConfirm": {
          "131": [
            6340,
            6394,
            false
          ],
          "132": [
            6398,
            6420,
            false
          ],
          "133": [
            6424,
            6449,
            false
          ]
        },
        "Governance.claimRandomTaskForVerification": {
          "119": [
            13088,
            13142,
            false
          ],
          "120": [
            13146,
            13168,
            false
          ],
          "121": [
            13172,
            13197,
            false
          ]
        },
        "Governance.completeTask": {
          "99": [
            15391,
            15471,
            false
          ],
          "100": [
            15558,
            15602,
            false
          ],
          "101": [
            15606,
            15650,
            true
          ]
        },
        "Governance.createProposal": {
          "117": [
            10903,
            10923,
            false
          ],
          "118": [
            10927,
            10949,
            true
          ]
        },
        "Governance.deleteTaskTypeByIPFSHash": {
          "134": [
            8443,
            8535,
            false
          ]
        },
        "Governance.getMyAvailableTaskTypes": {
          "108": [
            6850,
            6912,
            false
          ],
          "109": [
            6928,
            6972,
            false
          ],
          "110": [
            6976,
            7019,
            false
          ],
          "111": [
            7035,
            7066,
            false
          ],
          "112": [
            7486,
            7548,
            false
          ],
          "113": [
            7564,
            7608,
            false
          ],
          "114": [
            7612,
            7655,
            false
          ],
          "115": [
            7671,
            7702,
            false
          ],
          "116": [
            7828,
            7844,
            false
          ]
        },
        "Governance.getVotes": {
          "135": [
            4657,
            4684,
            true
          ]
        },
        "Governance.getWinningVote": {
          "102": [
            5051,
            5078,
            true
          ],
          "103": [
            5118,
            5170,
            true
          ],
          "104": [
            5517,
            5567,
            false
          ],
          "105": [
            5692,
            5698,
            false
          ],
          "106": [
            5746,
            5797,
            false
          ],
          "107": [
            5863,
            5869,
            true
          ]
        },
        "Governance.submitVerification": {
          "122": [
            17711,
            17751,
            false
          ],
          "123": [
            17755,
            17788,
            true
          ],
          "124": [
            17843,
            17861,
            true
          ],
          "125": [
            18466,
            18486,
            false
          ],
          "126": [
            18763,
            18784,
            true
          ],
          "127": [
            18899,
            18914,
            false
          ],
          "128": [
            19559,
            19563,
            true
          ],
          "129": [
            19908,
            19934,
            false
          ],
          "130": [
            21076,
            21080,
            true
          ]
        },
        "Governance.testHashing": {
          "98": [
            16505,
            16513,
            false
          ]
        }
      },
      "22": {},
      "23": {},
      "6": {}
    },
    "statements": {
      "0": {
        "SafeCast.toInt128": {
          "97": [
            26359,
            26465
          ]
        },
        "SafeCast.toInt256": {
          "95": [
            35401,
            35488
          ],
          "96": [
            35498,
            35518
          ]
        }
      },
      "1": {
        "DoubleEndedQueue.at": {
          "93": [
            4839,
            4882
          ],
          "94": [
            4892,
            4915
          ]
        },
        "DoubleEndedQueue.length": {
          "44": [
            5633,
            5690
          ]
        },
        "DoubleEndedQueue.pushBack": {
          "10": [
            2207,
            2237
          ],
          "11": [
            2271,
            2297
          ]
        }
      },
      "12": {
        "Ownable._setOwner": {
          "91": [
            2193,
            2210
          ],
          "92": [
            2221,
            2266
          ]
        },
        "Ownable.owner": {
          "0": [
            1067,
            1080
          ]
        },
        "Ownable.renounceOwnership": {
          "7": [
            1717,
            1738
          ]
        },
        "Ownable.transferOwnership": {
          "67": [
            1982,
            2055
          ],
          "68": [
            2066,
            2085
          ]
        }
      },
      "13": {},
      "2": {
        "Governance._createTaskType": {
          "81": [
            12065,
            12081
          ],
          "82": [
            12162,
            12193
          ],
          "83": [
            12207,
            12233
          ],
          "84": [
            12247,
            12283
          ],
          "85": [
            12297,
            12343
          ],
          "86": [
            12357,
            12391
          ],
          "87": [
            12405,
            12445
          ],
          "88": [
            12459,
            12499
          ],
          "89": [
            12513,
            12557
          ],
          "90": [
            12598,
            12722
          ]
        },
        "Governance.areTasksAvailableToConfirm": {
          "69": [
            6507,
            6518
          ],
          "70": [
            6556,
            6559
          ],
          "71": [
            6580,
            6592
          ]
        },
        "Governance.claimRandomTaskForVerification": {
          "45": [
            13524,
            13580
          ],
          "46": [
            13598,
            13620
          ],
          "47": [
            14254,
            14288
          ],
          "48": [
            14306,
            14387
          ],
          "49": [
            14405,
            14468
          ],
          "50": [
            14534,
            14575
          ]
        },
        "Governance.completeTask": {
          "8": [
            15550,
            15674
          ],
          "9": [
            15864,
            15930
          ],
          "12": [
            15948,
            15978
          ],
          "13": [
            15996,
            16013
          ],
          "14": [
            16068,
            16139
          ],
          "15": [
            16158,
            16230
          ],
          "16": [
            16248,
            16253
          ],
          "17": [
            16291,
            16294
          ]
        },
        "Governance.createProposal": {
          "37": [
            10895,
            10979
          ],
          "38": [
            10989,
            11008
          ],
          "39": [
            11108,
            11147
          ],
          "40": [
            11161,
            11200
          ],
          "41": [
            11214,
            11259
          ],
          "42": [
            11273,
            11304
          ],
          "43": [
            11315,
            11427
          ]
        },
        "Governance.createTaskType": {
          "4": [
            11679,
            11785
          ]
        },
        "Governance.deleteTaskTypeByIPFSHash": {
          "72": [
            8860,
            8890
          ],
          "73": [
            8908,
            8944
          ],
          "74": [
            9414,
            9450
          ],
          "75": [
            9468,
            9473
          ],
          "76": [
            9511,
            9514
          ]
        },
        "Governance.getMyAvailableTaskTypes": {
          "28": [
            7109,
            7116
          ],
          "29": [
            7227,
            7251
          ],
          "30": [
            7269,
            7284
          ],
          "31": [
            7322,
            7325
          ],
          "32": [
            7735,
            7769
          ],
          "33": [
            7797,
            7806
          ],
          "34": [
            7868,
            7873
          ],
          "35": [
            7929,
            7932
          ],
          "36": [
            7953,
            7967
          ]
        },
        "Governance.getTaskById": {
          "27": [
            4527,
            4548
          ]
        },
        "Governance.getVotes": {
          "77": [
            4649,
            4705
          ],
          "78": [
            4862,
            4907
          ],
          "79": [
            4844,
            4847
          ],
          "80": [
            4927,
            4943
          ]
        },
        "Governance.getWinningVote": {
          "18": [
            5043,
            5099
          ],
          "19": [
            5109,
            5194
          ],
          "20": [
            5587,
            5637
          ],
          "21": [
            5655,
            5670
          ],
          "22": [
            5702,
            5709
          ],
          "23": [
            5816,
            5821
          ],
          "24": [
            5460,
            5463
          ],
          "25": [
            5855,
            5890
          ],
          "26": [
            5900,
            5918
          ]
        },
        "Governance.setNFTAddress": {
          "6": [
            8151,
            8178
          ]
        },
        "Governance.submitVerification": {
          "51": [
            17703,
            17825
          ],
          "52": [
            17835,
            17862
          ],
          "53": [
            18559,
            18611
          ],
          "54": [
            18639,
            18642
          ],
          "55": [
            18803,
            18884
          ],
          "56": [
            19186,
            19239
          ],
          "57": [
            19253,
            19320
          ],
          "58": [
            19335,
            19351
          ],
          "59": [
            19394,
            19415
          ],
          "60": [
            19551,
            19588
          ],
          "61": [
            19635,
            19683
          ],
          "62": [
            19697,
            19734
          ],
          "63": [
            20097,
            20163
          ],
          "64": [
            20181,
            20237
          ],
          "65": [
            20898,
            20919
          ],
          "66": [
            21068,
            21105
          ]
        },
        "Governance.testHashing": {
          "1": [
            16586,
            16638
          ],
          "2": [
            16666,
            16669
          ],
          "3": [
            16767,
            16834
          ]
        }
      },
      "22": {},
      "23": {},
      "6": {
        "Context._msgSender": {
          "5": [
            672,
            689
          ]
        }
      }
    }
  },
  "dependencies": [
    "Context",
    "OpenZeppelin/openzeppelin-contracts@4.7.3/DoubleEndedQueue",
    "Ownable",
    "ReentrancyGuard",
    "OpenZeppelin/openzeppelin-contracts@4.7.3/SafeCast",
    "Strings",
    "Wizards"
  ],
  "deployedBytecode": "6080604052600436106101445760003560e01c80638d977672116100b6578063d374a2171161006f578063d374a21714610409578063f18c51d314610429578063f2fde38b14610449578063f4739bd914610469578063f713b7ed14610499578063ff981099146104b957600080fd5b80638d9776721461031b5780638da5cb5b14610351578063976217cd14610379578063a584a328146103a6578063b2bad544146103bc578063beca3a16146103e957600080fd5b80636215597b116101085780636215597b1461024057806369d0373814610286578063715018a6146102a657806372e185ce146102bb578063826b8ebd146102db5780638a6655d6146102fb57600080fd5b8063013cf08b1461015057806309265ce61461018a57806310190ef1146101ac578063379d94cc146101e057806361f9e9a81461022057600080fd5b3661014b57005b600080fd5b34801561015c57600080fd5b5061017061016b3660046128e8565b6104e6565b604051610181959493929190612959565b60405180910390f35b34801561019657600080fd5b506101aa6101a5366004612a62565b6105b2565b005b3480156101b857600080fd5b506101cc6101c73660046128e8565b6106f8565b604051610181989796959493929190612ac1565b3480156101ec57600080fd5b5060055461020690600f81810b91600160801b9004900b82565b60408051600f93840b81529190920b602082015201610181565b34801561022c57600080fd5b506101aa61023b366004612bad565b610802565b34801561024c57600080fd5b5061027861025b366004612c4a565b600360209081526000928352604080842090915290825290205481565b604051908152602001610181565b34801561029257600080fd5b506101aa6102a1366004612c81565b61082a565b3480156102b257600080fd5b506101aa610876565b3480156102c757600080fd5b506101aa6102d6366004612d14565b6108ac565b3480156102e757600080fd5b506102786102f63660046128e8565b610cb2565b34801561030757600080fd5b506101aa610316366004612d6a565b610ec8565b34801561032757600080fd5b5061033b6103363660046128e8565b610f01565b6040516101819a99989796959493929190612d96565b34801561035d57600080fd5b506001546040516001600160a01b039091168152602001610181565b34801561038557600080fd5b506103996103943660046128e8565b611003565b6040516101819190612e17565b3480156103b257600080fd5b50610278600a5481565b3480156103c857600080fd5b506103dc6103d7366004612ee4565b611145565b6040516101819190612eff565b3480156103f557600080fd5b506101aa610404366004612f61565b611519565b34801561041557600080fd5b506101aa6104243660046128e8565b61162e565b34801561043557600080fd5b506101aa610444366004612fb1565b611976565b34801561045557600080fd5b506101aa610464366004612c81565b61211c565b34801561047557600080fd5b506104896104843660046128e8565b6121b7565b6040519015158152602001610181565b3480156104a557600080fd5b506101aa6104b4366004613000565b612249565b3480156104c557600080fd5b506104d96104d43660046128e8565b6123e6565b604051610181919061303c565b60076020526000908152604090208054819061050190613084565b80601f016020809104026020016040519081016040528092919081815260200182805461052d90613084565b801561057a5780601f1061054f5761010080835404028352916020019161057a565b820191906000526020600020905b81548152906001019060200180831161055d57829003601f168201915b505050506001830154600390930154919261ffff169164ffffffffff8082169250650100000000008204811691600160501b90041685565b6000826000815181106105c7576105c76130be565b60200260200101516040516020016105e191815260200190565b6040516020818303038152906040529050811561066d5760005b835181101561066b57838181518110610616576106166130be565b602002602001015160405160200161063091815260200190565b60405160208183030381529060405280519060200120848281518110610658576106586130be565b60209081029190910101526001016105fb565b505b60008360405160200161068091906130d4565b6040516020818303038152906040528051906020012090507f637ce8d069e382e64ef71cf191623b88c7e307ce252e908e7f2babbad0cb81ea81868314866000815181106106d0576106d06130be565b6020026020010151856040516106e9949392919061310a565b60405180910390a15050505050565b6004818154811061070857600080fd5b906000526020600020906003020160009150905080600101805461072b90613084565b80601f016020809104026020016040519081016040528092919081815260200182805461075790613084565b80156107a45780601f10610779576101008083540402835291602001916107a4565b820191906000526020600020905b81548152906001019060200180831161078757829003601f168201915b5050506002909301549192505060ff8082169164ffffffffff610100820481169266010000000000008304169162ffffff600160381b82041691600160501b8204811691600160781b81049091169061ffff600160a01b9091041688565b610810565b60405180910390fd5b61082187876000888888888861250b565b50505050505050565b6001546001600160a01b031633146108545760405162461bcd60e51b81526004016108079061313b565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b6001546001600160a01b031633146108a05760405162461bcd60e51b81526004016108079061313b565b6108aa600061268a565b565b60005b600454811015610cac57836040516020016108ca9190613170565b60405160208183030381529060405280519060200120600482815481106108f3576108f36130be565b90600052602060002090600302016001016040516020016109149190613183565b6040516020818303038152906040528051906020012003610ca4574260048281548110610943576109436130be565b6000918252602090912060039091020160020154600160501b900464ffffffffff16118015906109a7575060048181548110610981576109816130be565b6000918252602090912060039091020160020154600160781b900464ffffffffff164211155b6109e95760405162461bcd60e51b815260206004820152601360248201527213dd5d1cda5919481d1a5b59481c195c9a5bd9606a1b6044820152606401610807565b60006040518061014001604052808681526020018464ffffffffff1681526020018581526020016000801b815260200160048481548110610a2c57610a2c6130be565b906000526020600020906003020160020160069054906101000a900460ff1660ff16815260200160048481548110610a6657610a666130be565b6000918252602080832060039290920290910160020154600160381b900462ffffff1683528281018290526040808401839052606084018390526080909301829052600a5460058054600160801b90819004600f0b8086526006855286862084905582546fffffffffffffffffffffffffffffffff90811660019092011690910217905582526009905220815191925082918190610b04908261325d565b5060208201516001828101805464ffffffffff191664ffffffffff938416179055604084015160028401556060840151600384015560808401516004909301805460a086015160c087015160e0880151610100808a0151610120909a015160ff90991663ffffffff199095169490941762ffffff909316909302919091176fffffffffffffffffffffffff000000001916600160201b6001600160501b039092169190910261ffff60701b191617600160701b61ffff928316021766ffffffffffffff60801b1916600160801b919096160264ffffffffff60901b191694909417600160901b939092169290920217909155600a8054600090610c08908490613332565b90915550610c1b90504262015180613332565b60048381548110610c2e57610c2e6130be565b6000918252602080832064ffffffffff88168452600390920290910190526040902055600a547fbcc1ea15519f3acfb49e91de851e553b2c024b9ab85cee8ffd8fe4e4e0a7876d908490610c849060019061334a565b8742604051610c969493929190613361565b60405180910390a150610cac565b6001016108af565b50505050565b60006008548210610cf85760405162461bcd60e51b815260206004820152601060248201526f1b9bc81cdd58da081c1c9bdc1bdcd85b60821b6044820152606401610807565b600082815260076020526040902060030154600160501b900464ffffffffff164211610d5c5760405162461bcd60e51b8152602060048201526013602482015272766f74696e67207374696c6c2061637469766560681b6044820152606401610807565b6000806000805b60008681526007602052604090206001015461ffff16811015610e7d57600086815260076020526040902083906002018260088110610da457610da46130be565b601091828204019190066002029054906101000a900461ffff1661ffff161115610e1f5760008681526007602052604090206002018160088110610dea57610dea6130be565b601091828204019190066002029054906101000a900461ffff1661ffff16925080935081600103610e1a57600091505b610e6b565b600086815260076020526040902083906002018260088110610e4357610e436130be565b601091828204019190066002029054906101000a900461ffff1661ffff1603610e6b57600191505b80610e7581613398565b915050610d63565b508015610ebf5760405162461bcd60e51b815260206004820152601060248201526f3a3432b932903bb0b99030903a34b29760811b6044820152606401610807565b50909392505050565b60405162461bcd60e51b815260206004820152600e60248201526d26bab9ba1031329036b2b6b132b960911b6044820152606401610807565b600960205260009081526040902080548190610f1c90613084565b80601f0160208091040260200160405190810160405280929190818152602001828054610f4890613084565b8015610f955780601f10610f6a57610100808354040283529160200191610f95565b820191906000526020600020905b815481529060010190602001808311610f7857829003601f168201915b505050600184015460028501546003860154600490960154949564ffffffffff92831695919450925060ff81169162ffffff610100830416916001600160501b03600160201b8204169161ffff600160701b8304811692600160801b810490911691600160901b909104168a565b61100b61284a565b600082815260096020526040908190208151610140810190925280548290829061103490613084565b80601f016020809104026020016040519081016040528092919081815260200182805461106090613084565b80156110ad5780601f10611082576101008083540402835291602001916110ad565b820191906000526020600020905b81548152906001019060200180831161109057829003601f168201915b5050509183525050600182015464ffffffffff9081166020830152600283015460408301526003830154606083015260049092015460ff8116608083015261010080820462ffffff1660a0840152600160201b82046001600160501b031660c0840152600160701b820461ffff90811660e0850152600160801b83041690830152600160901b90049091166101209091015292915050565b60606000805b6004548110156112d6574260048281548110611169576111696130be565b6000918252602080832064ffffffffff891684526003909202909101905260409020541080156111cd575042600482815481106111a8576111a86130be565b6000918252602090912060039091020160020154600160501b900464ffffffffff1611155b801561120c575042600482815481106111e8576111e86130be565b6000918252602090912060039091020160020154600160781b900464ffffffffff16115b80156112495750600160048281548110611228576112286130be565b6000918252602090912060039091020160020154600160a01b900461ffff16115b15611259578160010191506112ce565b604080516001808252818301909252600091816020015b606081526020019060019003908161127057905050905060405180604001604052806008815260200167273790363ab1b59760c11b815250816000815181106112bb576112bb6130be565b6020908102919091010152949350505050565b60010161114b565b506000816001600160401b038111156112f1576112f161299d565b60405190808252806020026020018201604052801561132457816020015b606081526020019060019003908161130f5790505b5090506000805b60045481101561150f574260048281548110611349576113496130be565b6000918252602080832064ffffffffff8b1684526003909202909101905260409020541080156113ad57504260048281548110611388576113886130be565b6000918252602090912060039091020160020154600160501b900464ffffffffff1611155b80156113ec575042600482815481106113c8576113c86130be565b6000918252602090912060039091020160020154600160781b900464ffffffffff16115b80156114295750600160048281548110611408576114086130be565b6000918252602090912060039091020160020154600160a01b900461ffff16115b156115075760048181548110611441576114416130be565b9060005260206000209060030201600101805461145d90613084565b80601f016020809104026020016040519081016040528092919081815260200182805461148990613084565b80156114d65780601f106114ab576101008083540402835291602001916114d6565b820191906000526020600020905b8154815290600101906020018083116114b957829003601f168201915b50505050508382815181106114ed576114ed6130be565b60200260200101819052508160010191508382101561150f575b60010161132b565b5090949350505050565b60018561ffff1611801561153257506101018561ffff16105b61157e5760405162461bcd60e51b815260206004820152601960248201527f696e76616c6964206e756d626572206f66206f7074696f6e73000000000000006044820152606401610807565b6001600860008282546115919190613332565b909155505060085460009081526007602052604090206003810180546effffffffffffffffffff000000000019166501000000000064ffffffffff8781169190910264ffffffffff60501b191691909117600160501b9186169190910217905560018101805461ffff191661ffff881617905580611610888a836133ce565b50611624888860085460008989898961250b565b5050505050505050565b6000611649600554600f81810b600160801b909204900b0390565b905061165361284a565b6000805b83811015611936574283610120015164ffffffffff16108015611685575084836020015164ffffffffff1614155b801561169a57508483610100015161ffff1614155b15611931576116aa6005826126dc565b600081815260096020526040908190208151610140810190925280549294509091829082906116d890613084565b80601f016020809104026020016040519081016040528092919081815260200182805461170490613084565b80156117515780601f1061172657610100808354040283529160200191611751565b820191906000526020600020905b81548152906001019060200180831161173457829003601f168201915b5050509183525050600182015464ffffffffff9081166020830152600283015460408301526003830154606083015260049092015460ff8116608083015261010080820462ffffff1660a0840152600160201b82046001600160501b031660c0840152600160701b820461ffff90811660e080860191909152600160801b8404821692850192909252600160901b90920490931661012090920191909152871690820152600b549093506118059042613332565b64ffffffffff1661012084015282600960006118226005856126dc565b8152602081019190915260400160002081518190611840908261325d565b50602082015160018201805464ffffffffff191664ffffffffff928316179055604083015160028301556060830151600383015560808301516004909201805460a085015160c086015160e0870151610100808901516101209099015160ff90981663ffffffff199095169490941762ffffff909316909302919091176fffffffffffffffffffffffff000000001916600160201b6001600160501b039092169190910261ffff60701b191617600160701b61ffff928316021766ffffffffffffff60801b1916600160801b919095160264ffffffffff60901b191693909317600160901b92909116919091021790555b611657565b5060408051858152602081018390527f4babe4b493069d658924ac325d49ee1adfaccbb176319a54499a34417eaf73ee910160405180910390a150505050565b6002546040516331a9108f60e11b81526004810185905233916001600160a01b031690636352211e90602401602060405180830381865afa1580156119bf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119e391906133b1565b6001600160a01b0316148015611a145750600082815260096020526040902060040154600160701b900461ffff1683145b611a605760405162461bcd60e51b815260206004820181905260248201527f4d757374206265206f776e6572206f662061737369676e65642077697a6172646044820152606401610807565b6000815111611a6e57600080fd5b60008281526009602052604081206004810154909190600160801b900461ffff1615611b095760005b8351811015611b0757838181518110611ab257611ab26130be565b6020026020010151604051602001611acc91815260200190565b60405160208183030381529060405280519060200120848281518110611af457611af46130be565b6020908102919091010152600101611a97565b505b600083604051602001611b1c91906130d4565b604051602081830303815290604052805190602001209050600081846002015414611b48576000611b4b565b60015b600185810154604080518b815264ffffffffff909216602083015281018990526060810185905260ff92909216908114608083015291507fe3f0e138f100deaf328ba1def71c39dade8cd971ba0074d935ee648e54532fae9060a00160405180910390a180600103611eb1576004840154600090611bdb90600290600160201b90046001600160501b031661348e565b6002546004878101546040516331a9108f60e11b8152600160701b90910461ffff16918101919091526001600160501b039290921692506000916001600160a01b0390911690636352211e90602401602060405180830381865afa158015611c47573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c6b91906133b1565b60025460018801546004808a0154604051638ad4d6a560e01b815264ffffffffff90931691830191909152610100900462ffffff1660248201529192506001600160a01b031690638ad4d6a590604401600060405180830381600087803b158015611cd557600080fd5b505af1158015611ce9573d6000803e3d6000fd5b5050600254600489810154600c54604051638ad4d6a560e01b8152600160701b90920461ffff169282019290925260248101919091526001600160a01b039091169250638ad4d6a591506044015b600060405180830381600087803b158015611d5157600080fd5b505af1158015611d65573d6000803e3d6000fd5b5050506004870180546dffffffffffffffffffff000000001916905550600088815260096020526040812090611d9b828261289e565b5060018101805464ffffffffff1916905560006002820181905560038201819055600490910180546001600160b81b031916905560405181906001600160a01b0384169085908381818185875af1925050503d8060008114611e19576040519150601f19603f3d011682016040523d82523d6000602084013e611e1e565b606091505b509150915081611e405760405162461bcd60e51b8152600401610807906134c2565b60405133908590600081818185875af1925050503d8060008114611e80576040519150601f19603f3d011682016040523d82523d6000602084013e611e85565b606091505b50909250905081611ea85760405162461bcd60e51b8152600401610807906134c2565b50505050610821565b81846003015403612028576004840154600090611ee090600290600160201b90046001600160501b031661348e565b6002546004878101546040516331a9108f60e11b8152600160801b90910461ffff16918101919091526001600160501b039290921692506000916001600160a01b0390911690636352211e90602401602060405180830381865afa158015611f4c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f7091906133b1565b600254600488810154600c54604051638ad4d6a560e01b8152600160801b90920461ffff169282019290925260248101919091529192506001600160a01b031690638ad4d6a590604401600060405180830381600087803b158015611fd457600080fd5b505af1158015611fe8573d6000803e3d6000fd5b5050600254600c54604051638ad4d6a560e01b8152600481018e905260248101919091526001600160a01b039091169250638ad4d6a59150604401611d37565b60048401546000878152600960205260408120600160201b9092046001600160501b03169190612058828261289e565b5060018101805464ffffffffff1916905560006002820181905560038201819055600490910180546001600160b81b03191690558061209f6001546001600160a01b031690565b6001600160a01b03168360405160006040518083038185875af1925050503d80600081146120e9576040519150601f19603f3d011682016040523d82523d6000602084013e6120ee565b606091505b5091509150816121105760405162461bcd60e51b8152600401610807906134c2565b50505050505050505050565b6001546001600160a01b031633146121465760405162461bcd60e51b81526004016108079061313b565b6001600160a01b0381166121ab5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610807565b6121b48161268a565b50565b6000806121d3600554600f81810b600160801b909204900b0390565b90506121dd61284a565b6000805b8381101561223d574283610120015164ffffffffff1611801561220f575085836020015164ffffffffff1614155b801561222457508583610100015161ffff1614155b156122355750600195945050505050565b6001016121e1565b50600095945050505050565b60005b6004548110156123e2578160405160200161226791906134f0565b6040516020818303038152906040528051906020012060048281548110612290576122906130be565b90600052602060002090600302016001016040516020016122b1919061350c565b60405160208183030381529060405280519060200120036123da576000600482815481106122e1576122e16130be565b90600052602060002090600302019050600060046001600480549050612307919061334a565b81548110612317576123176130be565b906000526020600020906003020190508091506004600160048054905061233e919061334a565b8154811061234e5761234e6130be565b9060005260206000209060030201600060018201600061236e919061289e565b5060020180546001600160b01b0319169055600480546123909060019061334a565b815481106123a0576123a06130be565b906000526020600020906003020160006001820160006123c0919061289e565b5060020180546001600160b01b0319169055506123e29050565b60010161224c565b5050565b6060600854821061242c5760405162461bcd60e51b815260206004820152601060248201526f1b9bc81cdd58da081c1c9bdc1bdcd85b60821b6044820152606401610807565b60008281526007602052604081206001015461ffff166001600160401b038111156124595761245961299d565b604051908082528060200260200182016040528015612482578160200160208202803683370190505b50905060005b815181101561250457600084815260076020526040902060020181600881106124b3576124b36130be565b601091828204019190066002029054906101000a900461ffff168282815181106124df576124df6130be565b61ffff90921660209283029190910190910152806124fc81613398565b915050612488565b5092915050565b600480546001810180835560008381529192908390811061252e5761252e6130be565b6000918252602090912060039091020190506001810161254f8a8c836133ce565b5060008160020160006101000a81548160ff021916908315150217905550878160020160016101000a81548164ffffffffff021916908364ffffffffff160217905550868160020160066101000a81548160ff021916908360ff160217905550858160020160076101000a81548162ffffff021916908362ffffff1602179055508481600201600a6101000a81548164ffffffffff021916908364ffffffffff1602179055508381600201600f6101000a81548164ffffffffff021916908364ffffffffff160217905550828160020160146101000a81548161ffff021916908361ffff1602179055507f2810025950962e3cd71fd98c2dc111ffbdb2a129b36771df8d36a7de2fe3e4e08a8a8a8a8a8a8a8a60405161267698979695949392919061357e565b60405180910390a150505050505050505050565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000806126ff6126eb8461274d565b85546126fa9190600f0b6135ed565b6127bb565b8454909150600160801b9004600f90810b9082900b1261273257604051632d0483c560e21b815260040160405180910390fd5b600f0b60009081526001939093016020525050604090205490565b60006001600160ff1b038211156127b75760405162461bcd60e51b815260206004820152602860248201527f53616665436173743a2076616c756520646f65736e27742066697420696e2061604482015267371034b73a191a9b60c11b6064820152608401610807565b5090565b60006f7fffffffffffffffffffffffffffffff1982128015906127ee57506f7fffffffffffffffffffffffffffffff8213155b6127b75760405162461bcd60e51b815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e20316044820152663238206269747360c81b6064820152608401610807565b6040805161014081018252606080825260006020830181905292820183905281018290526080810182905260a0810182905260c0810182905260e08101829052610100810182905261012081019190915290565b5080546128aa90613084565b6000825580601f106128ba575050565b601f0160209004906000526020600020908101906121b491905b808211156127b757600081556001016128d4565b6000602082840312156128fa57600080fd5b5035919050565b60005b8381101561291c578181015183820152602001612904565b83811115610cac5750506000910152565b60008151808452612945816020860160208601612901565b601f01601f19169290920160200192915050565b60a08152600061296c60a083018861292d565b61ffff9690961660208301525064ffffffffff93841660408201529183166060830152909116608090910152919050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b03811182821017156129db576129db61299d565b604052919050565b600082601f8301126129f457600080fd5b813560206001600160401b03821115612a0f57612a0f61299d565b8160051b612a1e8282016129b3565b9283528481018201928281019087851115612a3857600080fd5b83870192505b84831015612a5757823582529183019190830190612a3e565b979650505050505050565b600080600060608486031215612a7757600080fd5b8335925060208401356001600160401b03811115612a9457600080fd5b612aa0868287016129e3565b92505060408401358015158114612ab657600080fd5b809150509250925092565b6000610100808352612ad58184018c61292d565b9915156020840152505064ffffffffff968716604082015260ff95909516606086015262ffffff93909316608085015290841660a084015290921660c082015261ffff90911660e090910152919050565b60008083601f840112612b3857600080fd5b5081356001600160401b03811115612b4f57600080fd5b602083019150836020828501011115612b6757600080fd5b9250929050565b803562ffffff81168114612b8157600080fd5b919050565b803564ffffffffff81168114612b8157600080fd5b803561ffff81168114612b8157600080fd5b600080600080600080600060c0888a031215612bc857600080fd5b87356001600160401b03811115612bde57600080fd5b612bea8a828b01612b26565b909850965050602088013560ff81168114612c0457600080fd5b9450612c1260408901612b6e565b9350612c2060608901612b86565b9250612c2e60808901612b86565b9150612c3c60a08901612b9b565b905092959891949750929550565b60008060408385031215612c5d57600080fd5b50508035926020909101359150565b6001600160a01b03811681146121b457600080fd5b600060208284031215612c9357600080fd5b8135612c9e81612c6c565b9392505050565b600082601f830112612cb657600080fd5b81356001600160401b03811115612ccf57612ccf61299d565b612ce2601f8201601f19166020016129b3565b818152846020838601011115612cf757600080fd5b816020850160208301376000918101602001919091529392505050565b600080600060608486031215612d2957600080fd5b83356001600160401b03811115612d3f57600080fd5b612d4b86828701612ca5565b93505060208401359150612d6160408501612b86565b90509250925092565b600080600060608486031215612d7f57600080fd5b505081359360208301359350604090920135919050565b6000610140808352612daa8184018e61292d565b64ffffffffff9c8d166020850152604084019b909b525050606081019790975260ff95909516608087015262ffffff9390931660a08601526001600160501b039190911660c085015261ffff90811660e08501521661010083015290921661012090920191909152919050565b6020815260008251610140806020850152612e3661016085018361292d565b91506020850151612e50604086018264ffffffffff169052565b5060408501516060850152606085015160808501526080850151612e7960a086018260ff169052565b5060a085015162ffffff811660c08601525060c08501516001600160501b03811660e08601525060e0850151610100612eb78187018361ffff169052565b8601519050610120612ece8682018361ffff169052565b86015164ffffffffff811683870152905061150f565b600060208284031215612ef657600080fd5b612c9e82612b86565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015612f5457603f19888603018452612f4285835161292d565b94509285019290850190600101612f26565b5092979650505050505050565b600080600080600080600060c0888a031215612f7c57600080fd5b87356001600160401b03811115612f9257600080fd5b612f9e8a828b01612b26565b9098509650612c04905060208901612b9b565b600080600060608486031215612fc657600080fd5b833592506020840135915060408401356001600160401b03811115612fea57600080fd5b612ff6868287016129e3565b9150509250925092565b60006020828403121561301257600080fd5b81356001600160401b0381111561302857600080fd5b61303484828501612ca5565b949350505050565b6020808252825182820181905260009190848201906040850190845b8181101561307857835161ffff1683529284019291840191600101613058565b50909695505050505050565b600181811c9082168061309857607f821691505b6020821081036130b857634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b815160009082906020808601845b838110156130fe578151855293820193908201906001016130e2565b50929695505050505050565b8481528315156020820152826040820152608060608201526000613131608083018461292d565b9695505050505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b602081526000612c9e602083018461292d565b600060208083526000845461319781613084565b808487015260406001808416600081146131b857600181146131d257613200565b60ff1985168984015283151560051b890183019550613200565b896000528660002060005b858110156131f85781548b82018601529083019088016131dd565b8a0184019650505b509398975050505050505050565b601f82111561325857600081815260208120601f850160051c810160208610156132355750805b601f850160051c820191505b8181101561325457828155600101613241565b5050505b505050565b81516001600160401b038111156132765761327661299d565b61328a816132848454613084565b8461320e565b602080601f8311600181146132bf57600084156132a75750858301515b600019600386901b1c1916600185901b178555613254565b600085815260208120601f198616915b828110156132ee578886015182559484019460019091019084016132cf565b508582101561330c5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052601160045260246000fd5b600082198211156133455761334561331c565b500190565b60008282101561335c5761335c61331c565b500390565b64ffffffffff85168152836020820152608060408201526000613387608083018561292d565b905082606083015295945050505050565b6000600182016133aa576133aa61331c565b5060010190565b6000602082840312156133c357600080fd5b8151612c9e81612c6c565b6001600160401b038311156133e5576133e561299d565b6133f9836133f38354613084565b8361320e565b6000601f84116001811461342d57600085156134155750838201355b600019600387901b1c1916600186901b178355613487565b600083815260209020601f19861690835b8281101561345e578685013582556020948501946001909201910161343e565b508682101561347b5760001960f88860031b161c19848701351681555b505060018560011b0183555b5050505050565b60006001600160501b03808416806134b657634e487b7160e01b600052601260045260246000fd5b92169190910492915050565b6020808252601490820152732330b4b632b2103a379039b2b7321022ba3432b960611b604082015260600190565b60008251613502818460208701612901565b9190910192915050565b600080835461351a81613084565b600182811680156135325760018114613547576130fe565b60ff19841687528215158302870194506130fe565b8760005260208060002060005b8581101561356d5781548a820152908401908201613554565b505050959091019695505050505050565b60e081528760e08201526000610100898b8285013760008a840182015264ffffffffff988916602084015260ff9790971660408301525062ffffff949094166060850152918516608084015290931660a082015261ffff90921660c0830152601f909201601f19160101919050565b600080821280156001600160ff1b038490038513161561360f5761360f61331c565b600160ff1b83900384128116156136285761362861331c565b5050019056fea264697066735822122054a1f39dbdaae222c93bcc95d6f19fcb4987a73834dae986723cdb26fde96dca64736f6c634300080f0033",
  "deployedSourceMap": "743:21017:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2692:46;;;;;;;;;;-1:-1:-1;2692:46:2;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;16338:503;;;;;;;;;;-1:-1:-1;16338:503:2;;;;;:::i;:::-;;:::i;:::-;;2388:27;;;;;;;;;;-1:-1:-1;2388:27:2;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;:::i;2525:51::-;;;;;;;;;;-1:-1:-1;2525:51:2;;;;;;;;;-1:-1:-1;;;2525:51:2;;;;;;;;;;4424:2:24;4413:22;;;4395:41;;4472:22;;;;4467:2;4452:18;;4445:50;4368:18;2525:51:2;4225:276:24;11472:320:2;;;;;;;;;;-1:-1:-1;11472:320:2;;;;;:::i;:::-;;:::i;957:75::-;;;;;;;;;;-1:-1:-1;957:75:2;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;6622:25:24;;;6610:2;6595:18;957:75:2;6476:177:24;8084:101:2;;;;;;;;;;-1:-1:-1;8084:101:2;;;;;:::i;:::-;;:::i;1652:94:12:-;;;;;;;;;;;;;:::i;15155:1177:2:-;;;;;;;;;;-1:-1:-1;15155:1177:2;;;;;:::i;:::-;;:::i;4956:969::-;;;;;;;;;;-1:-1:-1;4956:969:2;;;;;:::i;:::-;;:::i;9993:664::-;;;;;;;;;;-1:-1:-1;9993:664:2;;;;;:::i;:::-;;:::i;2773:38::-;;;;;;;;;;-1:-1:-1;2773:38:2;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;:::i;1001:87:12:-;;;;;;;;;;-1:-1:-1;1074:6:12;;1001:87;;-1:-1:-1;;;;;1074:6:12;;;9650:51:24;;9638:2;9623:18;1001:87:12;9504:203:24;4443:112:2;;;;;;;;;;-1:-1:-1;4443:112:2;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2817:29::-;;;;;;;;;;;;;;;;6674:1300;;;;;;;;;;-1:-1:-1;6674:1300:2;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;10703:762::-;;;;;;;;;;-1:-1:-1;10703:762:2;;;;;:::i;:::-;;:::i;12736:1846::-;;;;;;;;;;-1:-1:-1;12736:1846:2;;;;;:::i;:::-;;:::i;17547:3620::-;;;;;;;;;;-1:-1:-1;17547:3620:2;;;;;:::i;:::-;;:::i;1901:192:12:-;;;;;;;;;;-1:-1:-1;1901:192:12;;;;;:::i;:::-;;:::i;5972:627:2:-;;;;;;;;;;-1:-1:-1;5972:627:2;;;;;:::i;:::-;;:::i;:::-;;;13503:14:24;;13496:22;13478:41;;13466:2;13451:18;5972:627:2;13338:187:24;8311:1221:2;;;;;;;;;;-1:-1:-1;8311:1221:2;;;;;:::i;:::-;;:::i;4561:389::-;;;;;;;;;;-1:-1:-1;4561:389:2;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2692:46::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2692:46:2;;;;;;;;;;;;;;;;;;;-1:-1:-1;2692:46:2;;;;;;-1:-1:-1;;;2692:46:2;;;;:::o;16338:503::-;16439:22;16481:7;16489:1;16481:10;;;;;;;;:::i;:::-;;;;;;;16464:28;;;;;;15151:19:24;;15195:2;15186:12;;15022:182;16464:28:2;;;;;;;;;;;;;16439:53;;16505:8;16502:193;;;16533:9;16529:156;16552:7;:14;16548:1;:18;16529:156;;;16626:7;16634:1;16626:10;;;;;;;;:::i;:::-;;;;;;;16609:28;;;;;;15151:19:24;;15195:2;15186:12;;15022:182;16609:28:2;;;;;;;;;;;;;16599:39;;;;;;16586:7;16594:1;16586:10;;;;;;;;:::i;:::-;;;;;;;;;;:52;16666:3;;16529:156;;;;16502:193;16704:14;16748:7;16731:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;16721:36;;;;;;16704:53;;16772:62;16784:6;16800:10;16792:6;:18;16812:7;16820:1;16812:10;;;;;;;;:::i;:::-;;;;;;;16824:9;16772:62;;;;;;;;;:::i;:::-;;;;;;;;16429:412;;16338:503;;;:::o;2388:27::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2388:27:2;;;;;;;-1:-1:-1;;2388:27:2;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2388:27:2;;;;-1:-1:-1;;;2388:27:2;;;;;-1:-1:-1;;;2388:27:2;;;;;;;-1:-1:-1;;;2388:27:2;;;;;:::o;11472:320::-;21678:36;;;;;;;;;;;11679:106:::1;11695:9;;11706:1;11709:16;11727:10;11739:13;11754;11769:15;11679;:106::i;:::-;11472:320:::0;;;;;;;:::o;8084:101::-;1074:6:12;;-1:-1:-1;;;;;1074:6:12;679:10:6;1221:23:12;1213:68;;;;-1:-1:-1;;;1213:68:12;;;;;;;:::i;:::-;8151:10:2::1;:27:::0;;-1:-1:-1;;;;;;8151:27:2::1;-1:-1:-1::0;;;;;8151:27:2;;;::::1;::::0;;;::::1;::::0;;8084:101::o;1652:94:12:-;1074:6;;-1:-1:-1;;;;;1074:6:12;679:10:6;1221:23:12;1213:68;;;;-1:-1:-1;;;1213:68:12;;;;;;;:::i;:::-;1717:21:::1;1735:1;1717:9;:21::i;:::-;1652:94::o:0;15155:1177:2:-;15339:9;15335:971;15356:9;:16;15354:18;;15335:971;;;15460:9;15449:21;;;;;;;;:::i;:::-;;;;;;;;;;;;;15439:32;;;;;;15412:9;15422:1;15412:12;;;;;;;;:::i;:::-;;;;;;;;;;;:21;;15401:33;;;;;;;;:::i;:::-;;;;;;;;;;;;;15391:44;;;;;;:80;15388:880;;15587:15;15558:9;15568:1;15558:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:25;;;-1:-1:-1;;;15558:25:2;;;;:44;;;;:92;;;15625:9;15635:1;15625:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:25;;;-1:-1:-1;;;15625:25:2;;;;15606:15;:44;;15558:92;15550:124;;;;-1:-1:-1;;;15550:124:2;;18436:2:24;15550:124:2;;;18418:21:24;18475:2;18455:18;;;18448:30;-1:-1:-1;;;18494:18:24;;;18487:49;18553:18;;15550:124:2;18234:343:24;15550:124:2;15727:18;15748:98;;;;;;;;15753:9;15748:98;;;;15763:6;15748:98;;;;;;15771:5;15748:98;;;;15778:1;15748:98;;;;;;15781:9;15791:1;15781:12;;;;;;;;:::i;:::-;;;;;;;;;;;:28;;;;;;;;;;;;15748:98;;;;;;15811:9;15821:1;15811:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:22;;;-1:-1:-1;;;15811:22:2;;;;15748:98;;;;;;;;;;;;;;;;;;;;;;;;;;;;15914:14;;15890;2187:10:1;;-1:-1:-1;;;2187:10:1;;;;;;2207:22;;;:11;:22;;;;;:30;;;2271:26;;;;;;2207:11;2284:13;;;2271:26;;;;;;;15948:21:2;;:5;:21;;;:30;;;;-1:-1:-1;15948:30:2;;:21;;:30;;:21;:30;:::i;:::-;-1:-1:-1;15948:30:2;;;;;;;;;;-1:-1:-1;;15948:30:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;15948:30:2;;;;;;;;;;;;;;;;;;-1:-1:-1;;15948:30:2;-1:-1:-1;;;;;;;;15948:30:2;;;;;;;-1:-1:-1;;;;15948:30:2;;-1:-1:-1;;;15948:30:2;;;;;;-1:-1:-1;;;;15948:30:2;-1:-1:-1;;;15948:30:2;;;;;-1:-1:-1;;;;15948:30:2;;;;;-1:-1:-1;;;15948:30:2;;;;;;;;;;;;15996:14;:17;;-1:-1:-1;;15996:17:2;;15948:30;;15996:17;:::i;:::-;;;;-1:-1:-1;16115:24:2;;-1:-1:-1;16115:15:2;16133:6;16115:24;:::i;:::-;16068:9;16078:1;16068:12;;;;;;;;:::i;:::-;;;;;;;;;:44;;;;;:12;;;;;;;:44;;;;;:71;16184:14;;16163:67;;16105:6;;16184:17;;16200:1;;16184:17;:::i;:::-;16203:9;16214:15;16163:67;;;;;;;;;:::i;:::-;;;;;;;;16248:5;;;15388:880;16291:3;;15335:971;;;;15155:1177;;;:::o;4956:969::-;5023:7;5064:14;;5051:10;:27;5043:56;;;;-1:-1:-1;;;5043:56:2;;21715:2:24;5043:56:2;;;21697:21:24;21754:2;21734:18;;;21727:30;-1:-1:-1;;;21773:18:24;;;21766:46;21829:18;;5043:56:2;21513:340:24;5043:56:2;5136:21;;;;:9;:21;;;;;:34;;;-1:-1:-1;;;5136:34:2;;;;5118:15;:52;5109:85;;;;-1:-1:-1;;;5109:85:2;;22060:2:24;5109:85:2;;;22042:21:24;22099:2;22079:18;;;22072:30;-1:-1:-1;;;22118:18:24;;;22111:49;22177:18;;5109:85:2;21858:343:24;5109:85:2;5314:19;5343:25;5378:11;5405:9;5401:445;5421:21;;;;:9;:21;;;;;:37;;;;;5418:40;;5401:445;;;5517:21;;;;:9;:21;;;;;5550:17;;5517:27;;5545:1;5517:30;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:50;;;5514:322;;;5607:21;;;;:9;:21;;;;;:27;;5635:1;5607:30;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;5587:50;;;;5669:1;5655:15;;5692:3;5697:1;5692:6;5688:23;;5708:1;5702:7;;5688:23;5514:322;;;5746:21;;;;:9;:21;;;;;5780:17;;5746:27;;5774:1;5746:30;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:51;;;5743:93;;5820:1;5816:5;;5743:93;5460:3;;;;:::i;:::-;;;;5401:445;;;-1:-1:-1;5863:6:2;;5855:35;;;;-1:-1:-1;;;5855:35:2;;22548:2:24;5855:35:2;;;22530:21:24;22587:2;22567:18;;;22560:30;-1:-1:-1;;;22606:18:24;;;22599:46;22662:18;;5855:35:2;22346:340:24;5855:35:2;-1:-1:-1;5907:11:2;;4956:969;-1:-1:-1;;;4956:969:2:o;9993:664::-;21569:31;;-1:-1:-1;;;21569:31:2;;22893:2:24;21569:31:2;;;22875:21:24;22932:2;22912:18;;;22905:30;-1:-1:-1;;;22951:18:24;;;22944:44;23005:18;;21569:31:2;22691:338:24;2773:38:2;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2773:38:2;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2773:38:2;-1:-1:-1;2773:38:2;;;;;;;;;;-1:-1:-1;;;;;;;;2773:38:2;;;;;-1:-1:-1;;;2773:38:2;;;;;-1:-1:-1;;;2773:38:2;;;;;;-1:-1:-1;;;2773:38:2;;;;;:::o;4443:112::-;4504:11;;:::i;:::-;4534:14;;;;:5;:14;;;;;;;4527:21;;;;;;;;;;;;4534:14;;4527:21;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;4527:21:2;;;-1:-1:-1;;4527:21:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;4527:21:2;;-1:-1:-1;;;;;4527:21:2;;;;;-1:-1:-1;;;4527:21:2;;;;;;;;;;-1:-1:-1;;;4527:21:2;;;;;;;-1:-1:-1;;;4527:21:2;;;;;;;;;;;;-1:-1:-1;;4443:112:2:o;6674:1300::-;6745:15;6772:13;;6795:542;6815:9;:16;6812:19;;6795:542;;;6897:15;6850:9;6860:1;6850:12;;;;;;;;:::i;:::-;;;;;;;;;:44;;;;;:12;;;;;;;:44;;;;;;:62;:122;;;;;6957:15;6928:9;6938:1;6928:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:25;;;-1:-1:-1;;;6928:25:2;;;;:44;;6850:122;:169;;;;;7004:15;6976:9;6986:1;6976:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:25;;;-1:-1:-1;;;6976:25:2;;;;:43;6850:169;:216;;;;;7065:1;7035:9;7045:1;7035:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:27;;;-1:-1:-1;;;7035:27:2;;;;:31;6850:216;6847:452;;;7109:7;;;;;6847:452;;;7194:15;;;7207:1;7194:15;;;;;;;;;7168:24;;7194:15;;;;;;;;;;;;;;;;;;;;7168:41;;7227:24;;;;;;;;;;;;;-1:-1:-1;;;7227:24:2;;;:8;7236:1;7227:11;;;;;;;;:::i;:::-;;;;;;;;;;:24;7276:8;6674:1300;-1:-1:-1;;;;6674:1300:2:o;6847:452::-;7322:3;;6795:542;;;;7347:23;7386:5;-1:-1:-1;;;;;7373:19:2;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7347:45;;7402:15;7435:9;7431:513;7451:9;:16;7448:19;;7431:513;;;7533:15;7486:9;7496:1;7486:12;;;;;;;;:::i;:::-;;;;;;;;;:44;;;;;:12;;;;;;;:44;;;;;;:62;:122;;;;;7593:15;7564:9;7574:1;7564:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:25;;;-1:-1:-1;;;7564:25:2;;;;:44;;7486:122;:169;;;;;7640:15;7612:9;7622:1;7612:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:25;;;-1:-1:-1;;;7612:25:2;;;;:43;7486:169;:216;;;;;7701:1;7671:9;7681:1;7671:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:27;;;-1:-1:-1;;;7671:27:2;;;;:31;7486:216;7483:423;;;7748:9;7758:1;7748:12;;;;;;;;:::i;:::-;;;;;;;;;;;:21;;7735:34;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:7;7743:1;7735:10;;;;;;;;:::i;:::-;;;;;;:34;;;;7797:9;;;;;7839:5;7828:7;:16;7825:67;7868:5;7825:67;;7929:3;;7431:513;;;-1:-1:-1;7960:7:2;;6674:1300;-1:-1:-1;;;;6674:1300:2:o;10703:762::-;10922:1:::1;10903:16;:20;;;:46;;;;;10946:3;10927:16;:22;;;10903:46;10895:84;;;::::0;-1:-1:-1;;;10895:84:2;;24643:2:24;10895:84:2::1;::::0;::::1;24625:21:24::0;24682:2;24662:18;;;24655:30;24721:27;24701:18;;;24694:55;24766:18;;10895:84:2::1;24441:349:24::0;10895:84:2::1;11007:1;10989:14;;:19;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;11079:14:2::1;::::0;11039:27:::1;11069:25:::0;;;:9:::1;:25;::::0;;;;11108:23:::1;::::0;::::1;:39:::0;;-1:-1:-1;;11161:39:2;11108;::::1;::::0;;::::1;::::0;;;::::1;-1:-1:-1::0;;;;11161:39:2;;;;;-1:-1:-1;;;11161:39:2;;::::1;::::0;;;::::1;;::::0;;-1:-1:-1;11214:26:2;::::1;:45:::0;;-1:-1:-1;;11214:45:2::1;;::::0;::::1;;::::0;;11069:25;11273:31:::1;11295:9:::0;;11069:25;11273:31:::1;:::i;:::-;;11315:112;11331:9;;11349:14;;11366:1;11369:10;11381:13;11396;11411:15;11315;:112::i;:::-;10885:580;10703:762:::0;;;;;;;:::o;12736:1846::-;12811:27;12841:39;12865:14;5676:12:1;;;;;-1:-1:-1;;;5655:10:1;;;;;5648:41;;5344:363;12841:39:2;12811:69;;12890:18;;:::i;:::-;12918:14;;13026:1467;13048:19;13044:1;:23;13026:1467;;;13127:15;13088:6;:36;;;:54;;;:80;;;;;13162:6;13146;:12;;;:22;;;;13088:80;:109;;;;;13191:6;13172;:16;;;:25;;;;13088:109;13084:1399;;;13541:38;13561:14;13577:1;13541:19;:38::i;:::-;13533:47;13607:13;;;:5;:13;;;;;;;13598:22;;;;;;;;;;13533:47;;-1:-1:-1;13598:22:2;;;;13607:13;;13598:22;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;13598:22:2;;;-1:-1:-1;;13598:22:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;13598:22:2;;-1:-1:-1;;;;;13598:22:2;;;;;-1:-1:-1;;;13598:22:2;;;;;;;;;;;;;;-1:-1:-1;;;13598:22:2;;;;;;;;;;;-1:-1:-1;;;13598:22:2;;;;;;;;;;;;;;14254:34;;:17;;;:34;14370:16;;14254:17;;-1:-1:-1;14352:34:2;;:15;:34;:::i;:::-;14306:81;;:36;;;:81;:6;14405:5;:54;14419:38;14439:14;14455:1;14419:19;:38::i;:::-;14405:54;;;;;;;;;;;14411:47;14405:54;:63;;:54;;:63;;:54;:63;:::i;:::-;-1:-1:-1;14405:63:2;;;;;;;;;-1:-1:-1;;14405:63:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;14405:63:2;;;;;;;;;;;;;;;;;;-1:-1:-1;;14405:63:2;-1:-1:-1;;;;;;;;14405:63:2;;;;;;;-1:-1:-1;;;;14405:63:2;;-1:-1:-1;;;14405:63:2;;;;;;-1:-1:-1;;;;14405:63:2;-1:-1:-1;;;14405:63:2;;;;;-1:-1:-1;;;;14405:63:2;;;;;-1:-1:-1;;;14405:63:2;;;;;;;;;;;13084:1399;13026:1467;;;-1:-1:-1;14539:36:2;;;26180:25:24;;;26236:2;26221:18;;26214:34;;;14539:36:2;;26153:18:24;14539:36:2;;;;;;;12801:1781;;;12736:1846;:::o;17547:3620::-;17711:10;;:26;;-1:-1:-1;;;17711:26:2;;;;;6622:25:24;;;17741:10:2;;-1:-1:-1;;;;;17711:10:2;;:18;;6595::24;;17711:26:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;17711:40:2;;:77;;;;-1:-1:-1;17755:14:2;;;;:5;:14;;;;;:25;;;-1:-1:-1;;;17755:25:2;;;;:33;;17711:77;17703:122;;;;-1:-1:-1;;;17703:122:2;;26461:2:24;17703:122:2;;;26443:21:24;;;26480:18;;;26473:30;26539:34;26519:18;;;26512:62;26591:18;;17703:122:2;26259:356:24;17703:122:2;17860:1;17843:7;:14;:18;17835:27;;;;;;17873:19;17895:14;;;:5;:14;;;;;18466:16;;;;17895:14;;17873:19;-1:-1:-1;;;18466:16:2;;;;:20;18463:205;;18506:9;18502:156;18525:7;:14;18521:1;:18;18502:156;;;18599:7;18607:1;18599:10;;;;;;;;:::i;:::-;;;;;;;18582:28;;;;;;15151:19:24;;15195:2;15186:12;;15022:182;18582:28:2;;;;;;;;;;;;;18572:39;;;;;;18559:7;18567:1;18559:10;;;;;;;;:::i;:::-;;;;;;;;;;:52;18639:3;;18502:156;;;;18463:205;18677:14;18721:7;18704:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;18694:36;;;;;;18677:53;;18741:19;18778:6;18763;:11;;;:21;:29;;18791:1;18763:29;;;18787:1;18763:29;18838:12;;;;;18808:76;;;26872:25:24;;;18838:12:2;;;;26928:2:24;26913:18;;26906:53;26975:18;;26968:34;;;27033:2;27018:18;;27011:34;;;18741:51:2;;;;;18869:14;;;27076:3:24;27061:19;;27054:51;18741::2;-1:-1:-1;18808:76:2;;26859:3:24;26844:19;18808:76:2;;;;;;;18899:11;18913:1;18899:15;18895:2266;;19009:14;;;;18993:13;;19009:16;;19024:1;;-1:-1:-1;;;19009:14:2;;-1:-1:-1;;;;;19009:14:2;:16;:::i;:::-;19079:10;;19098:17;;;;;19079:37;;-1:-1:-1;;;19079:37:2;;-1:-1:-1;;;19098:17:2;;;;;19079:37;;;27566:38:24;;;;-1:-1:-1;;;;;18993:32:2;;;;;-1:-1:-1;19039:29:2;;-1:-1:-1;;;;;19079:10:2;;;;:18;;27539::24;;19079:37:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;19186:10;;;19208:12;;;19222:16;;;;;19186:53;;-1:-1:-1;;;19186:53:2;;19208:12;;;;19186:53;;;27787:44:24;;;;19186:10:2;19222:16;;;;27847:18:24;;;27840:49;19039:78:2;;-1:-1:-1;;;;;;19186:10:2;;:21;;27760:18:24;;19186:53:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;19253:10:2;;19275:17;;;;;19294:25;;19253:67;;-1:-1:-1;;;19253:67:2;;-1:-1:-1;;;19275:17:2;;;;;19253:67;;;28073:38:24;;;;28127:18;;;28120:34;;;;-1:-1:-1;;;;;19253:10:2;;;;-1:-1:-1;19253:21:2;;-1:-1:-1;28046:18:24;;19253:67:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;19335:14:2;;;:16;;-1:-1:-1;;19335:16:2;;;-1:-1:-1;19350:1:2;19401:14;;;:5;:14;;;;;;19394:21;19401:14;19350:1;19394:21;:::i;:::-;-1:-1:-1;19394:21:2;;;;;-1:-1:-1;;19394:21:2;;;-1:-1:-1;19394:21:2;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;19394:21:2;;;19501:36;;-1:-1:-1;;;;;;;19501:18:2;;;19527:5;;-1:-1:-1;19501:36:2;-1:-1:-1;19501:36:2;19527:5;19501:18;:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19468:69;;;;19559:4;19551:37;;;;-1:-1:-1;;;19551:37:2;;;;;;;:::i;:::-;19650:33;;:10;;19673:5;;19650:33;;;;19673:5;19650:10;:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;19635:48:2;;-1:-1:-1;19635:48:2;-1:-1:-1;19635:48:2;19697:37;;;;-1:-1:-1;;;19697:37:2;;;;;;;:::i;:::-;18915:831;;;;18895:2266;;;19928:6;19908;:18;;;:26;19905:1246;;19969:14;;;;19953:13;;19969:16;;19984:1;;-1:-1:-1;;;19969:14:2;;-1:-1:-1;;;;;19969:14:2;:16;:::i;:::-;20041:10;;20060:16;;;;;20041:36;;-1:-1:-1;;;20041:36:2;;-1:-1:-1;;;20060:16:2;;;;;20041:36;;;27566:38:24;;;;-1:-1:-1;;;;;19953:32:2;;;;;-1:-1:-1;20003:27:2;;-1:-1:-1;;;;;20041:10:2;;;;:18;;27539::24;;20041:36:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;20097:10;;20119:16;;;;;20137:25;;20097:66;;-1:-1:-1;;;20097:66:2;;-1:-1:-1;;;20119:16:2;;;;;20097:66;;;28073:38:24;;;;28127:18;;;28120:34;;;;20003:75:2;;-1:-1:-1;;;;;;20097:10:2;;:21;;28046:18:24;;20097:66:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;20181:10:2;;20211:25;;20181:56;;-1:-1:-1;;;20181:56:2;;;;;26180:25:24;;;26221:18;;;26214:34;;;;-1:-1:-1;;;;;20181:10:2;;;;-1:-1:-1;20181:21:2;;-1:-1:-1;26153:18:24;;20181:56:2;26006:248:24;19905:1246:2;20866:14;;;;20850:13;20905:14;;;:5;:14;;;;;-1:-1:-1;;;20866:14:2;;;-1:-1:-1;;;;;20866:14:2;;20905;20898:21;20905:14;20850:13;20898:21;:::i;:::-;-1:-1:-1;20898:21:2;;;;;-1:-1:-1;;20898:21:2;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;20898:21:2;;;;20970:7;1074:6:12;;-1:-1:-1;;;;;1074:6:12;;1001:87;20970:7:2;-1:-1:-1;;;;;20970:12:2;20990:5;20970:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20937:63;;;;21076:4;21068:37;;;;-1:-1:-1;;;21068:37:2;;;;;;;:::i;:::-;20744:407;;;17643:3524;;;;17547:3620;;;:::o;1901:192:12:-;1074:6;;-1:-1:-1;;;;;1074:6:12;679:10:6;1221:23:12;1213:68;;;;-1:-1:-1;;;1213:68:12;;;;;;;:::i;:::-;-1:-1:-1;;;;;1990:22:12;::::1;1982:73;;;::::0;-1:-1:-1;;;1982:73:12;;28926:2:24;1982:73:12::1;::::0;::::1;28908:21:24::0;28965:2;28945:18;;;28938:30;29004:34;28984:18;;;28977:62;-1:-1:-1;;;29055:18:24;;;29048:36;29101:19;;1982:73:12::1;28724:402:24::0;1982:73:12::1;2066:19;2076:8;2066:9;:19::i;:::-;1901:192:::0;:::o;5972:627:2:-;6047:4;6063:27;6093:39;6117:14;5676:12:1;;;;;-1:-1:-1;;;5655:10:1;;;;;5648:41;;5344:363;6093:39:2;6063:69;;6142:18;;:::i;:::-;6170:14;;6278:293;6300:19;6296:1;:23;6278:293;;;6379:15;6340:6;:36;;;:54;;;:80;;;;;6414:6;6398;:12;;;:22;;;;6340:80;:109;;;;;6443:6;6424;:16;;;:25;;;;6340:109;6336:197;;;-1:-1:-1;6514:4:2;;5972:627;-1:-1:-1;;;;;5972:627:2:o;6336:197::-;6556:3;;6278:293;;;-1:-1:-1;6587:5:2;;5972:627;-1:-1:-1;;;;;5972:627:2:o;8311:1221::-;8393:9;8389:1137;8408:9;:16;8406:18;;8389:1137;;;8524:9;8507:27;;;;;;;;:::i;:::-;;;;;;;;;;;;;8497:38;;;;;;8470:9;8480:1;8470:12;;;;;;;;:::i;:::-;;;;;;;;;;;:21;;8453:39;;;;;;;;:::i;:::-;;;;;;;;;;;;;8443:50;;;;;;:92;8440:1048;;8618:27;8648:9;8658:1;8648:12;;;;;;;;:::i;:::-;;;;;;;;;;;8618:42;;8678:34;8715:9;8742:1;8725:9;:16;;;;:18;;;;:::i;:::-;8715:29;;;;;;;;:::i;:::-;;;;;;;;;;;8678:66;;8873:17;8860:30;;8915:9;8942:1;8925:9;:16;;;;:18;;;;:::i;:::-;8915:29;;;;;;;;:::i;:::-;;;;;;;;;;;;8908:36;;;;;;;;:::i;:::-;-1:-1:-1;8908:36:2;;;;-1:-1:-1;;;;;;8908:36:2;;;9421:9;9431:16;;:18;;8908:36;;9431:18;:::i;:::-;9421:29;;;;;;;;:::i;:::-;;;;;;;;;;;;9414:36;;;;;;;;:::i;:::-;-1:-1:-1;9414:36:2;;;;-1:-1:-1;;;;;;9414:36:2;;;-1:-1:-1;9468:5:2;;-1:-1:-1;9468:5:2;8440:1048;9511:3;;8389:1137;;;;8311:1221;:::o;4561:389::-;4622:15;4670:14;;4657:10;:27;4649:56;;;;-1:-1:-1;;;4649:56:2;;21715:2:24;4649:56:2;;;21697:21:24;21754:2;21734:18;;;21727:30;-1:-1:-1;;;21773:18:24;;;21766:46;21829:18;;4649:56:2;21513:340:24;4649:56:2;4715:25;4756:21;;;:9;:21;;;;;:37;;;;;-1:-1:-1;;;;;4743:51:2;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4743:51:2;;4715:79;;4808:9;4804:114;4826:9;:16;4823:1;:19;4804:114;;;4877:21;;;;:9;:21;;;;;:27;;4905:1;4877:30;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;4862:9;4872:1;4862:12;;;;;;;;:::i;:::-;:45;;;;:12;;;;;;;;;;;:45;4844:3;;;;:::i;:::-;;;;4804:114;;;-1:-1:-1;4934:9:2;4561:389;-1:-1:-1;;4561:389:2:o;11798:931::-;12039:9;:16;;12065;;;;;;12013:23;12065:16;;;12039;;:9;:16;;12122:26;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;12162:20:2;;;:31;12184:9;;12162:20;:31;:::i;:::-;;12228:5;12207:11;:18;;;:26;;;;;;;;;;;;;;;;;;12272:11;12247;:22;;;:36;;;;;;;;;;;;;;;;;;12327:16;12297:11;:27;;;:46;;;;;;;;;;;;;;;;;;12381:10;12357:11;:21;;;:34;;;;;;;;;;;;;;;;;;12432:13;12405:11;:24;;;:40;;;;;;;;;;;;;;;;;;12486:13;12459:11;:24;;;:40;;;;;;;;;;;;;;;;;;12542:15;12513:11;:26;;;:44;;;;;;;;;;;;;;;;;;12603:119;12622:9;;12633:11;12646:16;12664:10;12676:13;12691;12706:15;12603:119;;;;;;;;;;;;;:::i;:::-;;;;;;;;12003:726;;11798:931;;;;;;;;:::o;2101:173:12:-;2176:6;;;-1:-1:-1;;;;;2193:17:12;;;-1:-1:-1;;;;;;2193:17:12;;;;;;;2226:40;;2176:6;;;2193:17;2176:6;;2226:40;;2157:16;;2226:40;2146:128;2101:173;:::o;4598:324:1:-;4676:13;4750:10;4763:66;4804:24;4822:5;4804:17;:24::i;:::-;4788:12;;4781:47;;;4788:12;;4781:47;:::i;:::-;4763:17;:66::i;:::-;4850:10;;4750:79;;-1:-1:-1;;;;4850:10:1;;;;;;4843:17;;;;;4839:43;;4869:13;;-1:-1:-1;;;4869:13:1;;;;;;;;;;;4839:43;4899:16;;;;;;:11;;;;;:16;;-1:-1:-1;;4899:16:1;;;;;4598:324::o;35228:297:0:-;35284:6;-1:-1:-1;;;;;35409:5:0;:34;;35401:87;;;;-1:-1:-1;;;35401:87:0;;31664:2:24;35401:87:0;;;31646:21:24;31703:2;31683:18;;;31676:30;31742:34;31722:18;;;31715:62;-1:-1:-1;;;31793:18:24;;;31786:38;31841:19;;35401:87:0;31462:404:24;35401:87:0;-1:-1:-1;35512:5:0;35228:297::o;26286:216::-;26341:6;-1:-1:-1;;26367:25:0;;;;;:54;;-1:-1:-1;26405:16:0;26396:25;;;26367:54;26359:106;;;;-1:-1:-1;;;26359:106:0;;32073:2:24;26359:106:0;;;32055:21:24;32112:2;32092:18;;;32085:30;32151:34;32131:18;;;32124:62;-1:-1:-1;;;32202:18:24;;;32195:37;32249:19;;26359:106:0;31871:403:24;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14:180:24;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:24;;14:180;-1:-1:-1;14:180:24:o;199:258::-;271:1;281:113;295:6;292:1;289:13;281:113;;;371:11;;;365:18;352:11;;;345:39;317:2;310:10;281:113;;;412:6;409:1;406:13;403:48;;;-1:-1:-1;;447:1:24;429:16;;422:27;199:258::o;462:::-;504:3;542:5;536:12;569:6;564:3;557:19;585:63;641:6;634:4;629:3;625:14;618:4;611:5;607:16;585:63;:::i;:::-;702:2;681:15;-1:-1:-1;;677:29:24;668:39;;;;709:4;664:50;;462:258;-1:-1:-1;;462:258:24:o;921:570::-;1174:3;1163:9;1156:22;1137:4;1195:46;1236:3;1225:9;1221:19;1213:6;1195:46;:::i;:::-;1289:6;1277:19;;;;1272:2;1257:18;;1250:47;-1:-1:-1;1316:12:24;1364:15;;;1359:2;1344:18;;1337:43;1416:15;;;1411:2;1396:18;;1389:43;1469:15;;;1463:3;1448:19;;;1441:44;1187:54;921:570;-1:-1:-1;921:570:24:o;1496:127::-;1557:10;1552:3;1548:20;1545:1;1538:31;1588:4;1585:1;1578:15;1612:4;1609:1;1602:15;1628:275;1699:2;1693:9;1764:2;1745:13;;-1:-1:-1;;1741:27:24;1729:40;;-1:-1:-1;;;;;1784:34:24;;1820:22;;;1781:62;1778:88;;;1846:18;;:::i;:::-;1882:2;1875:22;1628:275;;-1:-1:-1;1628:275:24:o;1908:712::-;1962:5;2015:3;2008:4;2000:6;1996:17;1992:27;1982:55;;2033:1;2030;2023:12;1982:55;2069:6;2056:20;2095:4;-1:-1:-1;;;;;2114:2:24;2111:26;2108:52;;;2140:18;;:::i;:::-;2186:2;2183:1;2179:10;2209:28;2233:2;2229;2225:11;2209:28;:::i;:::-;2271:15;;;2341;;;2337:24;;;2302:12;;;;2373:15;;;2370:35;;;2401:1;2398;2391:12;2370:35;2437:2;2429:6;2425:15;2414:26;;2449:142;2465:6;2460:3;2457:15;2449:142;;;2531:17;;2519:30;;2482:12;;;;2569;;;;2449:142;;;2609:5;1908:712;-1:-1:-1;;;;;;;1908:712:24:o;2625:577::-;2724:6;2732;2740;2793:2;2781:9;2772:7;2768:23;2764:32;2761:52;;;2809:1;2806;2799:12;2761:52;2845:9;2832:23;2822:33;;2906:2;2895:9;2891:18;2878:32;-1:-1:-1;;;;;2925:6:24;2922:30;2919:50;;;2965:1;2962;2955:12;2919:50;2988:61;3041:7;3032:6;3021:9;3017:22;2988:61;:::i;:::-;2978:71;;;3099:2;3088:9;3084:18;3071:32;3146:5;3139:13;3132:21;3125:5;3122:32;3112:60;;3168:1;3165;3158:12;3112:60;3191:5;3181:15;;;2625:577;;;;;:::o;3384:836::-;3672:4;3701:3;3731:2;3720:9;3713:21;3751:45;3792:2;3781:9;3777:18;3769:6;3751:45;:::i;:::-;3839:14;;3832:22;3827:2;3812:18;;3805:50;-1:-1:-1;;3874:12:24;3922:15;;;3917:2;3902:18;;3895:43;3986:4;3974:17;;;;3969:2;3954:18;;3947:45;4041:8;4029:21;;;;4023:3;4008:19;;4001:50;4088:15;;;4082:3;4067:19;;4060:44;4141:15;;;4135:3;4120:19;;4113:44;4206:6;4194:19;;;4188:3;4173:19;;;4166:48;3839:14;3743:53;-1:-1:-1;3384:836:24:o;4506:348::-;4558:8;4568:6;4622:3;4615:4;4607:6;4603:17;4599:27;4589:55;;4640:1;4637;4630:12;4589:55;-1:-1:-1;4663:20:24;;-1:-1:-1;;;;;4695:30:24;;4692:50;;;4738:1;4735;4728:12;4692:50;4775:4;4767:6;4763:17;4751:29;;4827:3;4820:4;4811:6;4803;4799:19;4795:30;4792:39;4789:59;;;4844:1;4841;4834:12;4789:59;4506:348;;;;;:::o;4859:161::-;4926:20;;4986:8;4975:20;;4965:31;;4955:59;;5010:1;5007;5000:12;4955:59;4859:161;;;:::o;5025:165::-;5092:20;;5152:12;5141:24;;5131:35;;5121:63;;5180:1;5177;5170:12;5195:159;5262:20;;5322:6;5311:18;;5301:29;;5291:57;;5344:1;5341;5334:12;5359:859;5469:6;5477;5485;5493;5501;5509;5517;5570:3;5558:9;5549:7;5545:23;5541:33;5538:53;;;5587:1;5584;5577:12;5538:53;5627:9;5614:23;-1:-1:-1;;;;;5652:6:24;5649:30;5646:50;;;5692:1;5689;5682:12;5646:50;5731:59;5782:7;5773:6;5762:9;5758:22;5731:59;:::i;:::-;5809:8;;-1:-1:-1;5705:85:24;-1:-1:-1;;5894:2:24;5879:18;;5866:32;5938:4;5927:16;;5917:27;;5907:55;;5958:1;5955;5948:12;5907:55;5981:5;-1:-1:-1;6005:37:24;6038:2;6023:18;;6005:37;:::i;:::-;5995:47;;6061:37;6094:2;6083:9;6079:18;6061:37;:::i;:::-;6051:47;;6117:38;6150:3;6139:9;6135:19;6117:38;:::i;:::-;6107:48;;6174:38;6207:3;6196:9;6192:19;6174:38;:::i;:::-;6164:48;;5359:859;;;;;;;;;;:::o;6223:248::-;6291:6;6299;6352:2;6340:9;6331:7;6327:23;6323:32;6320:52;;;6368:1;6365;6358:12;6320:52;-1:-1:-1;;6391:23:24;;;6461:2;6446:18;;;6433:32;;-1:-1:-1;6223:248:24:o;6658:131::-;-1:-1:-1;;;;;6733:31:24;;6723:42;;6713:70;;6779:1;6776;6769:12;6794:247;6853:6;6906:2;6894:9;6885:7;6881:23;6877:32;6874:52;;;6922:1;6919;6912:12;6874:52;6961:9;6948:23;6980:31;7005:5;6980:31;:::i;:::-;7030:5;6794:247;-1:-1:-1;;;6794:247:24:o;7046:531::-;7089:5;7142:3;7135:4;7127:6;7123:17;7119:27;7109:55;;7160:1;7157;7150:12;7109:55;7196:6;7183:20;-1:-1:-1;;;;;7218:2:24;7215:26;7212:52;;;7244:18;;:::i;:::-;7288:55;7331:2;7312:13;;-1:-1:-1;;7308:27:24;7337:4;7304:38;7288:55;:::i;:::-;7368:2;7359:7;7352:19;7414:3;7407:4;7402:2;7394:6;7390:15;7386:26;7383:35;7380:55;;;7431:1;7428;7421:12;7380:55;7496:2;7489:4;7481:6;7477:17;7470:4;7461:7;7457:18;7444:55;7544:1;7519:16;;;7537:4;7515:27;7508:38;;;;7523:7;7046:531;-1:-1:-1;;;7046:531:24:o;7582:462::-;7668:6;7676;7684;7737:2;7725:9;7716:7;7712:23;7708:32;7705:52;;;7753:1;7750;7743:12;7705:52;7793:9;7780:23;-1:-1:-1;;;;;7818:6:24;7815:30;7812:50;;;7858:1;7855;7848:12;7812:50;7881;7923:7;7914:6;7903:9;7899:22;7881:50;:::i;:::-;7871:60;;;7978:2;7967:9;7963:18;7950:32;7940:42;;8001:37;8034:2;8023:9;8019:18;8001:37;:::i;:::-;7991:47;;7582:462;;;;;:::o;8049:316::-;8126:6;8134;8142;8195:2;8183:9;8174:7;8170:23;8166:32;8163:52;;;8211:1;8208;8201:12;8163:52;-1:-1:-1;;8234:23:24;;;8304:2;8289:18;;8276:32;;-1:-1:-1;8355:2:24;8340:18;;;8327:32;;8049:316;-1:-1:-1;8049:316:24:o;8481:1018::-;8829:4;8858:3;8888:2;8877:9;8870:21;8908:45;8949:2;8938:9;8934:18;8926:6;8908:45;:::i;:::-;8972:12;9020:15;;;9015:2;9000:18;;8993:43;9067:2;9052:18;;9045:34;;;;-1:-1:-1;;9110:2:24;9095:18;;9088:34;;;;9171:4;9159:17;;;;9153:3;9138:19;;9131:46;9226:8;9214:21;;;;9208:3;9193:19;;9186:50;-1:-1:-1;;;;;9273:35:24;;;;9267:3;9252:19;;9245:64;9328:6;9371:15;;;9365:3;9350:19;;9343:44;9424:15;9418:3;9403:19;;9396:44;9477:15;;;9471:3;9456:19;;;9449:44;;;;8900:53;8481:1018;-1:-1:-1;8481:1018:24:o;9712:1356::-;9881:2;9870:9;9863:21;9844:4;9919:6;9913:13;9945:6;9987:2;9982;9971:9;9967:18;9960:30;10013:52;10060:3;10049:9;10045:19;10031:12;10013:52;:::i;:::-;9999:66;;10114:2;10106:6;10102:15;10096:22;10127:53;10176:2;10165:9;10161:18;10145:14;896:12;885:24;873:37;;820:96;10127:53;;10234:2;10226:6;10222:15;10216:22;10211:2;10200:9;10196:18;10189:50;10294:2;10286:6;10282:15;10276:22;10270:3;10259:9;10255:19;10248:51;10348:3;10340:6;10336:16;10330:23;10362:53;10410:3;10399:9;10395:19;10379:14;3274:4;3263:16;3251:29;;3207:75;10362:53;-1:-1:-1;10464:3:24;10452:16;;10446:23;3363:8;3352:20;;10527:3;10512:19;;3340:33;-1:-1:-1;10581:3:24;10569:16;;10563:23;-1:-1:-1;;;;;8435:34:24;;10644:3;10629:19;;8423:47;10595:54;10698:3;10690:6;10686:16;10680:23;10722:3;10734:53;10783:2;10772:9;10768:18;10752:14;801:6;790:18;778:31;;725:90;10734:53;10824:15;;10818:22;;-1:-1:-1;10859:3:24;10871:53;10905:18;;;10818:22;801:6;790:18;778:31;;725:90;10871:53;10961:15;;10955:22;896:12;885:24;;11020:18;;;873:37;10955:22;-1:-1:-1;10986:53:24;820:96;11073:184;11131:6;11184:2;11172:9;11163:7;11159:23;11155:32;11152:52;;;11200:1;11197;11190:12;11152:52;11223:28;11241:9;11223:28;:::i;11262:803::-;11424:4;11453:2;11493;11482:9;11478:18;11523:2;11512:9;11505:21;11546:6;11581;11575:13;11612:6;11604;11597:22;11650:2;11639:9;11635:18;11628:25;;11712:2;11702:6;11699:1;11695:14;11684:9;11680:30;11676:39;11662:53;;11750:2;11742:6;11738:15;11771:1;11781:255;11795:6;11792:1;11789:13;11781:255;;;11888:2;11884:7;11872:9;11864:6;11860:22;11856:36;11851:3;11844:49;11916:40;11949:6;11940;11934:13;11916:40;:::i;:::-;11906:50;-1:-1:-1;12014:12:24;;;;11979:15;;;;11817:1;11810:9;11781:255;;;-1:-1:-1;12053:6:24;;11262:803;-1:-1:-1;;;;;;;11262:803:24:o;12070:774::-;12181:6;12189;12197;12205;12213;12221;12229;12282:3;12270:9;12261:7;12257:23;12253:33;12250:53;;;12299:1;12296;12289:12;12250:53;12339:9;12326:23;-1:-1:-1;;;;;12364:6:24;12361:30;12358:50;;;12404:1;12401;12394:12;12358:50;12443:59;12494:7;12485:6;12474:9;12470:22;12443:59;:::i;:::-;12521:8;;-1:-1:-1;12417:85:24;-1:-1:-1;12575:37:24;;-1:-1:-1;12608:2:24;12593:18;;12575:37;:::i;12849:484::-;12951:6;12959;12967;13020:2;13008:9;12999:7;12995:23;12991:32;12988:52;;;13036:1;13033;13026:12;12988:52;13072:9;13059:23;13049:33;;13129:2;13118:9;13114:18;13101:32;13091:42;;13184:2;13173:9;13169:18;13156:32;-1:-1:-1;;;;;13203:6:24;13200:30;13197:50;;;13243:1;13240;13233:12;13197:50;13266:61;13319:7;13310:6;13299:9;13295:22;13266:61;:::i;:::-;13256:71;;;12849:484;;;;;:::o;13530:322::-;13599:6;13652:2;13640:9;13631:7;13627:23;13623:32;13620:52;;;13668:1;13665;13658:12;13620:52;13708:9;13695:23;-1:-1:-1;;;;;13733:6:24;13730:30;13727:50;;;13773:1;13770;13763:12;13727:50;13796;13838:7;13829:6;13818:9;13814:22;13796:50;:::i;:::-;13786:60;13530:322;-1:-1:-1;;;;13530:322:24:o;13857:643::-;14026:2;14078:21;;;14148:13;;14051:18;;;14170:22;;;13997:4;;14026:2;14249:15;;;;14223:2;14208:18;;;13997:4;14292:182;14306:6;14303:1;14300:13;14292:182;;;14371:13;;14386:6;14367:26;14355:39;;14449:15;;;;14414:12;;;;14328:1;14321:9;14292:182;;;-1:-1:-1;14491:3:24;;13857:643;-1:-1:-1;;;;;;13857:643:24:o;14505:380::-;14584:1;14580:12;;;;14627;;;14648:61;;14702:4;14694:6;14690:17;14680:27;;14648:61;14755:2;14747:6;14744:14;14724:18;14721:38;14718:161;;14801:10;14796:3;14792:20;14789:1;14782:31;14836:4;14833:1;14826:15;14864:4;14861:1;14854:15;14718:161;;14505:380;;;:::o;14890:127::-;14951:10;14946:3;14942:20;14939:1;14932:31;14982:4;14979:1;14972:15;15006:4;15003:1;14996:15;15209:543;15427:13;;15370:3;;15401;;15480:4;15507:15;;;15370:3;15550:175;15564:6;15561:1;15558:13;15550:175;;;15627:13;;15613:28;;15663:14;;;;15700:15;;;;15586:1;15579:9;15550:175;;;-1:-1:-1;15741:5:24;;15209:543;-1:-1:-1;;;;;;15209:543:24:o;15757:443::-;15982:6;15971:9;15964:25;16039:6;16032:14;16025:22;16020:2;16009:9;16005:18;15998:50;16084:6;16079:2;16068:9;16064:18;16057:34;16127:3;16122:2;16111:9;16107:18;16100:31;15945:4;16148:46;16189:3;16178:9;16174:19;16166:6;16148:46;:::i;:::-;16140:54;15757:443;-1:-1:-1;;;;;;15757:443:24:o;16554:356::-;16756:2;16738:21;;;16775:18;;;16768:30;16834:34;16829:2;16814:18;;16807:62;16901:2;16886:18;;16554:356::o;16915:220::-;17064:2;17053:9;17046:21;17027:4;17084:45;17125:2;17114:9;17110:18;17102:6;17084:45;:::i;17266:963::-;17375:4;17404:2;17433;17422:9;17415:21;17456:1;17489:6;17483:13;17519:36;17545:9;17519:36;:::i;:::-;17591:6;17586:2;17575:9;17571:18;17564:34;17617:2;17638:1;17670:2;17659:9;17655:18;17687:1;17682:158;;;;17854:1;17849:354;;;;17648:555;;17682:158;-1:-1:-1;;17730:24:24;;17710:18;;;17703:52;17808:14;;17801:22;17798:1;17794:30;17779:46;;17775:55;;;-1:-1:-1;17682:158:24;;17849:354;17880:6;17877:1;17870:17;17928:2;17925:1;17915:16;17953:1;17967:180;17981:6;17978:1;17975:13;17967:180;;;18074:14;;18050:17;;;18046:26;;18039:50;18117:16;;;;17996:10;;17967:180;;;18171:17;;18167:26;;;-1:-1:-1;;17648:555:24;-1:-1:-1;18220:3:24;;17266:963;-1:-1:-1;;;;;;;;17266:963:24:o;18582:545::-;18684:2;18679:3;18676:11;18673:448;;;18720:1;18745:5;18741:2;18734:17;18790:4;18786:2;18776:19;18860:2;18848:10;18844:19;18841:1;18837:27;18831:4;18827:38;18896:4;18884:10;18881:20;18878:47;;;-1:-1:-1;18919:4:24;18878:47;18974:2;18969:3;18965:12;18962:1;18958:20;18952:4;18948:31;18938:41;;19029:82;19047:2;19040:5;19037:13;19029:82;;;19092:17;;;19073:1;19062:13;19029:82;;;19033:3;;;18673:448;18582:545;;;:::o;19303:1352::-;19429:3;19423:10;-1:-1:-1;;;;;19448:6:24;19445:30;19442:56;;;19478:18;;:::i;:::-;19507:97;19597:6;19557:38;19589:4;19583:11;19557:38;:::i;:::-;19551:4;19507:97;:::i;:::-;19659:4;;19723:2;19712:14;;19740:1;19735:663;;;;20442:1;20459:6;20456:89;;;-1:-1:-1;20511:19:24;;;20505:26;20456:89;-1:-1:-1;;19260:1:24;19256:11;;;19252:24;19248:29;19238:40;19284:1;19280:11;;;19235:57;20558:81;;19705:944;;19735:663;17213:1;17206:14;;;17250:4;17237:18;;-1:-1:-1;;19771:20:24;;;19889:236;19903:7;19900:1;19897:14;19889:236;;;19992:19;;;19986:26;19971:42;;20084:27;;;;20052:1;20040:14;;;;19919:19;;19889:236;;;19893:3;20153:6;20144:7;20141:19;20138:201;;;20214:19;;;20208:26;-1:-1:-1;;20297:1:24;20293:14;;;20309:3;20289:24;20285:37;20281:42;20266:58;20251:74;;20138:201;-1:-1:-1;;;;;20385:1:24;20369:14;;;20365:22;20352:36;;-1:-1:-1;19303:1352:24:o;20660:127::-;20721:10;20716:3;20712:20;20709:1;20702:31;20752:4;20749:1;20742:15;20776:4;20773:1;20766:15;20792:128;20832:3;20863:1;20859:6;20856:1;20853:13;20850:39;;;20869:18;;:::i;:::-;-1:-1:-1;20905:9:24;;20792:128::o;20925:125::-;20965:4;20993:1;20990;20987:8;20984:34;;;20998:18;;:::i;:::-;-1:-1:-1;21035:9:24;;20925:125::o;21055:453::-;21299:12;21291:6;21287:25;21276:9;21269:44;21349:6;21344:2;21333:9;21329:18;21322:34;21392:3;21387:2;21376:9;21372:18;21365:31;21250:4;21413:46;21454:3;21443:9;21439:19;21431:6;21413:46;:::i;:::-;21405:54;;21495:6;21490:2;21479:9;21475:18;21468:34;21055:453;;;;;;;:::o;22206:135::-;22245:3;22266:17;;;22263:43;;22286:18;;:::i;:::-;-1:-1:-1;22333:1:24;22322:13;;22206:135::o;23034:251::-;23104:6;23157:2;23145:9;23136:7;23132:23;23128:32;23125:52;;;23173:1;23170;23163:12;23125:52;23205:9;23199:16;23224:31;23249:5;23224:31;:::i;24795:1206::-;-1:-1:-1;;;;;24914:3:24;24911:27;24908:53;;;24941:18;;:::i;:::-;24970:94;25060:3;25020:38;25052:4;25046:11;25020:38;:::i;:::-;25014:4;24970:94;:::i;:::-;25090:1;25115:2;25110:3;25107:11;25132:1;25127:616;;;;25787:1;25804:3;25801:93;;;-1:-1:-1;25860:19:24;;;25847:33;25801:93;-1:-1:-1;;19260:1:24;19256:11;;;19252:24;19248:29;19238:40;19284:1;19280:11;;;19235:57;25907:78;;25100:895;;25127:616;17213:1;17206:14;;;17250:4;17237:18;;-1:-1:-1;;25163:17:24;;;25264:9;25286:229;25300:7;25297:1;25294:14;25286:229;;;25389:19;;;25376:33;25361:49;;25496:4;25481:20;;;;25449:1;25437:14;;;;25316:12;25286:229;;;25290:3;25543;25534:7;25531:16;25528:159;;;25667:1;25663:6;25657:3;25651;25648:1;25644:11;25640:21;25636:34;25632:39;25619:9;25614:3;25610:19;25597:33;25593:79;25585:6;25578:95;25528:159;;;25730:1;25724:3;25721:1;25717:11;25713:19;25707:4;25700:33;25100:895;;;24795:1206;;;:::o;27116:300::-;27155:1;-1:-1:-1;;;;;27230:2:24;27227:1;27223:10;27252:3;27242:134;;27298:10;27293:3;27289:20;27286:1;27279:31;27333:4;27330:1;27323:15;27361:4;27358:1;27351:15;27242:134;27394:10;;27390:20;;;;;27116:300;-1:-1:-1;;27116:300:24:o;28375:344::-;28577:2;28559:21;;;28616:2;28596:18;;;28589:30;-1:-1:-1;;;28650:2:24;28635:18;;28628:50;28710:2;28695:18;;28375:344::o;29131:276::-;29262:3;29300:6;29294:13;29316:53;29362:6;29357:3;29350:4;29342:6;29338:17;29316:53;:::i;:::-;29385:16;;;;;29131:276;-1:-1:-1;;29131:276:24:o;29412:842::-;29540:3;29569:1;29602:6;29596:13;29632:36;29658:9;29632:36;:::i;:::-;29687:1;29704:18;;;29731:133;;;;29878:1;29873:356;;;;29697:532;;29731:133;-1:-1:-1;;29764:24:24;;29752:37;;29837:14;;29830:22;29818:35;;29809:45;;;-1:-1:-1;29731:133:24;;29873:356;29904:6;29901:1;29894:17;29934:4;29979:2;29976:1;29966:16;30004:1;30018:165;30032:6;30029:1;30026:13;30018:165;;;30110:14;;30097:11;;;30090:35;30153:16;;;;30047:10;;30018:165;;;-1:-1:-1;;;30203:16:24;;;;;30245:3;-1:-1:-1;;;;;;29412:842:24:o;30259:928::-;30572:3;30561:9;30554:22;30613:6;30607:3;30596:9;30592:19;30585:35;30535:4;30639:3;30692:6;30684;30679:2;30668:9;30664:18;30651:48;30748:1;30719:22;;;30715:31;;30708:42;30840:12;30890:15;;;30883:4;30868:20;;30861:45;30954:4;30942:17;;;;30937:2;30922:18;;30915:45;-1:-1:-1;31008:8:24;30996:21;;;;30991:2;30976:18;;30969:49;31055:15;;;31049:3;31034:19;;31027:44;31108:15;;;31102:3;31087:19;;31080:44;31173:6;31161:19;;;31155:3;31140:19;;31133:48;30811:2;30790:15;;;-1:-1:-1;;30786:29:24;30771:45;30767:54;;;-1:-1:-1;30259:928:24:o;31192:265::-;31231:3;31259:9;;;31284:10;;-1:-1:-1;;;;;31303:27:24;;;31296:35;;31280:52;31277:78;;;31335:18;;:::i;:::-;-1:-1:-1;;;31382:19:24;;;31375:27;;31367:36;;31364:62;;;31406:18;;:::i;:::-;-1:-1:-1;;31442:9:24;;31192:265::o",
  "language": "Solidity",
  "natspec": {
    "errors": {
      "OutOfBounds()": [
        {
          "details": "An operation (e.g. {at}) couldn't be completed due to an index being out of bounds."
        }
      ]
    },
    "kind": "dev",
    "methods": {
      "constructor": {
        "details": "Constructor for HOADAO",
        "params": {
          "_nft": "-- contract address for NFTs"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "offset": [
    743,
    21760
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x144 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8D977672 GT PUSH2 0xB6 JUMPI DUP1 PUSH4 0xD374A217 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xD374A217 EQ PUSH2 0x409 JUMPI DUP1 PUSH4 0xF18C51D3 EQ PUSH2 0x429 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x449 JUMPI DUP1 PUSH4 0xF4739BD9 EQ PUSH2 0x469 JUMPI DUP1 PUSH4 0xF713B7ED EQ PUSH2 0x499 JUMPI DUP1 PUSH4 0xFF981099 EQ PUSH2 0x4B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8D977672 EQ PUSH2 0x31B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x351 JUMPI DUP1 PUSH4 0x976217CD EQ PUSH2 0x379 JUMPI DUP1 PUSH4 0xA584A328 EQ PUSH2 0x3A6 JUMPI DUP1 PUSH4 0xB2BAD544 EQ PUSH2 0x3BC JUMPI DUP1 PUSH4 0xBECA3A16 EQ PUSH2 0x3E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6215597B GT PUSH2 0x108 JUMPI DUP1 PUSH4 0x6215597B EQ PUSH2 0x240 JUMPI DUP1 PUSH4 0x69D03738 EQ PUSH2 0x286 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2A6 JUMPI DUP1 PUSH4 0x72E185CE EQ PUSH2 0x2BB JUMPI DUP1 PUSH4 0x826B8EBD EQ PUSH2 0x2DB JUMPI DUP1 PUSH4 0x8A6655D6 EQ PUSH2 0x2FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x13CF08B EQ PUSH2 0x150 JUMPI DUP1 PUSH4 0x9265CE6 EQ PUSH2 0x18A JUMPI DUP1 PUSH4 0x10190EF1 EQ PUSH2 0x1AC JUMPI DUP1 PUSH4 0x379D94CC EQ PUSH2 0x1E0 JUMPI DUP1 PUSH4 0x61F9E9A8 EQ PUSH2 0x220 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x14B JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x15C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x170 PUSH2 0x16B CALLDATASIZE PUSH1 0x4 PUSH2 0x28E8 JUMP JUMPDEST PUSH2 0x4E6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x181 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2959 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x196 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1AA PUSH2 0x1A5 CALLDATASIZE PUSH1 0x4 PUSH2 0x2A62 JUMP JUMPDEST PUSH2 0x5B2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1CC PUSH2 0x1C7 CALLDATASIZE PUSH1 0x4 PUSH2 0x28E8 JUMP JUMPDEST PUSH2 0x6F8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x181 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2AC1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x5 SLOAD PUSH2 0x206 SWAP1 PUSH1 0xF DUP2 DUP2 SIGNEXTEND SWAP2 PUSH1 0x1 PUSH1 0x80 SHL SWAP1 DIV SWAP1 SIGNEXTEND DUP3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xF SWAP4 DUP5 SIGNEXTEND DUP2 MSTORE SWAP2 SWAP1 SWAP3 SIGNEXTEND PUSH1 0x20 DUP3 ADD MSTORE ADD PUSH2 0x181 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x22C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1AA PUSH2 0x23B CALLDATASIZE PUSH1 0x4 PUSH2 0x2BAD JUMP JUMPDEST PUSH2 0x802 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x24C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x278 PUSH2 0x25B CALLDATASIZE PUSH1 0x4 PUSH2 0x2C4A JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x181 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x292 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1AA PUSH2 0x2A1 CALLDATASIZE PUSH1 0x4 PUSH2 0x2C81 JUMP JUMPDEST PUSH2 0x82A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1AA PUSH2 0x876 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1AA PUSH2 0x2D6 CALLDATASIZE PUSH1 0x4 PUSH2 0x2D14 JUMP JUMPDEST PUSH2 0x8AC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x278 PUSH2 0x2F6 CALLDATASIZE PUSH1 0x4 PUSH2 0x28E8 JUMP JUMPDEST PUSH2 0xCB2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x307 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1AA PUSH2 0x316 CALLDATASIZE PUSH1 0x4 PUSH2 0x2D6A JUMP JUMPDEST PUSH2 0xEC8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x327 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x33B PUSH2 0x336 CALLDATASIZE PUSH1 0x4 PUSH2 0x28E8 JUMP JUMPDEST PUSH2 0xF01 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x181 SWAP11 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2D96 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x35D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x181 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x385 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x399 PUSH2 0x394 CALLDATASIZE PUSH1 0x4 PUSH2 0x28E8 JUMP JUMPDEST PUSH2 0x1003 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x181 SWAP2 SWAP1 PUSH2 0x2E17 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x278 PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3DC PUSH2 0x3D7 CALLDATASIZE PUSH1 0x4 PUSH2 0x2EE4 JUMP JUMPDEST PUSH2 0x1145 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x181 SWAP2 SWAP1 PUSH2 0x2EFF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1AA PUSH2 0x404 CALLDATASIZE PUSH1 0x4 PUSH2 0x2F61 JUMP JUMPDEST PUSH2 0x1519 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x415 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1AA PUSH2 0x424 CALLDATASIZE PUSH1 0x4 PUSH2 0x28E8 JUMP JUMPDEST PUSH2 0x162E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x435 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1AA PUSH2 0x444 CALLDATASIZE PUSH1 0x4 PUSH2 0x2FB1 JUMP JUMPDEST PUSH2 0x1976 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x455 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1AA PUSH2 0x464 CALLDATASIZE PUSH1 0x4 PUSH2 0x2C81 JUMP JUMPDEST PUSH2 0x211C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x475 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x489 PUSH2 0x484 CALLDATASIZE PUSH1 0x4 PUSH2 0x28E8 JUMP JUMPDEST PUSH2 0x21B7 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x181 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1AA PUSH2 0x4B4 CALLDATASIZE PUSH1 0x4 PUSH2 0x3000 JUMP JUMPDEST PUSH2 0x2249 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4D9 PUSH2 0x4D4 CALLDATASIZE PUSH1 0x4 PUSH2 0x28E8 JUMP JUMPDEST PUSH2 0x23E6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x181 SWAP2 SWAP1 PUSH2 0x303C JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP2 SWAP1 PUSH2 0x501 SWAP1 PUSH2 0x3084 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x52D SWAP1 PUSH2 0x3084 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x57A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x54F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x57A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x55D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP PUSH1 0x1 DUP4 ADD SLOAD PUSH1 0x3 SWAP1 SWAP4 ADD SLOAD SWAP2 SWAP3 PUSH2 0xFFFF AND SWAP2 PUSH5 0xFFFFFFFFFF DUP1 DUP3 AND SWAP3 POP PUSH6 0x10000000000 DUP3 DIV DUP2 AND SWAP2 PUSH1 0x1 PUSH1 0x50 SHL SWAP1 DIV AND DUP6 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x5C7 JUMPI PUSH2 0x5C7 PUSH2 0x30BE JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x5E1 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP DUP2 ISZERO PUSH2 0x66D JUMPI PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x66B JUMPI DUP4 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x616 JUMPI PUSH2 0x616 PUSH2 0x30BE JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x630 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x658 JUMPI PUSH2 0x658 PUSH2 0x30BE JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0x5FB JUMP JUMPDEST POP JUMPDEST PUSH1 0x0 DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x680 SWAP2 SWAP1 PUSH2 0x30D4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH32 0x637CE8D069E382E64EF71CF191623B88C7E307CE252E908E7F2BABBAD0CB81EA DUP2 DUP7 DUP4 EQ DUP7 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x6D0 JUMPI PUSH2 0x6D0 PUSH2 0x30BE JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 PUSH1 0x40 MLOAD PUSH2 0x6E9 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x310A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x4 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x708 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x72B SWAP1 PUSH2 0x3084 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x757 SWAP1 PUSH2 0x3084 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7A4 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x779 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7A4 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x787 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP PUSH1 0x2 SWAP1 SWAP4 ADD SLOAD SWAP2 SWAP3 POP POP PUSH1 0xFF DUP1 DUP3 AND SWAP2 PUSH5 0xFFFFFFFFFF PUSH2 0x100 DUP3 DIV DUP2 AND SWAP3 PUSH7 0x1000000000000 DUP4 DIV AND SWAP2 PUSH3 0xFFFFFF PUSH1 0x1 PUSH1 0x38 SHL DUP3 DIV AND SWAP2 PUSH1 0x1 PUSH1 0x50 SHL DUP3 DIV DUP2 AND SWAP2 PUSH1 0x1 PUSH1 0x78 SHL DUP2 DIV SWAP1 SWAP2 AND SWAP1 PUSH2 0xFFFF PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 SWAP2 DIV AND DUP9 JUMP JUMPDEST PUSH2 0x810 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x821 DUP8 DUP8 PUSH1 0x0 DUP9 DUP9 DUP9 DUP9 DUP9 PUSH2 0x250B JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x854 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x807 SWAP1 PUSH2 0x313B JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x8A0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x807 SWAP1 PUSH2 0x313B JUMP JUMPDEST PUSH2 0x8AA PUSH1 0x0 PUSH2 0x268A JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x4 SLOAD DUP2 LT ISZERO PUSH2 0xCAC JUMPI DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x8CA SWAP2 SWAP1 PUSH2 0x3170 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x8F3 JUMPI PUSH2 0x8F3 PUSH2 0x30BE JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x1 ADD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x914 SWAP2 SWAP1 PUSH2 0x3183 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SUB PUSH2 0xCA4 JUMPI TIMESTAMP PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x943 JUMPI PUSH2 0x943 PUSH2 0x30BE JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD PUSH1 0x2 ADD SLOAD PUSH1 0x1 PUSH1 0x50 SHL SWAP1 DIV PUSH5 0xFFFFFFFFFF AND GT DUP1 ISZERO SWAP1 PUSH2 0x9A7 JUMPI POP PUSH1 0x4 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x981 JUMPI PUSH2 0x981 PUSH2 0x30BE JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD PUSH1 0x2 ADD SLOAD PUSH1 0x1 PUSH1 0x78 SHL SWAP1 DIV PUSH5 0xFFFFFFFFFF AND TIMESTAMP GT ISZERO JUMPDEST PUSH2 0x9E9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x13DD5D1CDA5919481D1A5B59481C195C9A5BD9 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x807 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH2 0x140 ADD PUSH1 0x40 MSTORE DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH5 0xFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP1 SHL DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0xA2C JUMPI PUSH2 0xA2C PUSH2 0x30BE JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x2 ADD PUSH1 0x6 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0xA66 JUMPI PUSH2 0xA66 PUSH2 0x30BE JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x3 SWAP3 SWAP1 SWAP3 MUL SWAP1 SWAP2 ADD PUSH1 0x2 ADD SLOAD PUSH1 0x1 PUSH1 0x38 SHL SWAP1 DIV PUSH3 0xFFFFFF AND DUP4 MSTORE DUP3 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP5 ADD DUP4 SWAP1 MSTORE PUSH1 0x60 DUP5 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 SWAP1 SWAP4 ADD DUP3 SWAP1 MSTORE PUSH1 0xA SLOAD PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x80 SHL SWAP1 DUP2 SWAP1 DIV PUSH1 0xF SIGNEXTEND DUP1 DUP7 MSTORE PUSH1 0x6 DUP6 MSTORE DUP7 DUP7 KECCAK256 DUP5 SWAP1 SSTORE DUP3 SLOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 AND PUSH1 0x1 SWAP1 SWAP3 ADD AND SWAP1 SWAP2 MUL OR SWAP1 SSTORE DUP3 MSTORE PUSH1 0x9 SWAP1 MSTORE KECCAK256 DUP2 MLOAD SWAP2 SWAP3 POP DUP3 SWAP2 DUP2 SWAP1 PUSH2 0xB04 SWAP1 DUP3 PUSH2 0x325D JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x1 DUP3 DUP2 ADD DUP1 SLOAD PUSH5 0xFFFFFFFFFF NOT AND PUSH5 0xFFFFFFFFFF SWAP4 DUP5 AND OR SWAP1 SSTORE PUSH1 0x40 DUP5 ADD MLOAD PUSH1 0x2 DUP5 ADD SSTORE PUSH1 0x60 DUP5 ADD MLOAD PUSH1 0x3 DUP5 ADD SSTORE PUSH1 0x80 DUP5 ADD MLOAD PUSH1 0x4 SWAP1 SWAP4 ADD DUP1 SLOAD PUSH1 0xA0 DUP7 ADD MLOAD PUSH1 0xC0 DUP8 ADD MLOAD PUSH1 0xE0 DUP9 ADD MLOAD PUSH2 0x100 DUP1 DUP11 ADD MLOAD PUSH2 0x120 SWAP1 SWAP11 ADD MLOAD PUSH1 0xFF SWAP1 SWAP10 AND PUSH4 0xFFFFFFFF NOT SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 OR PUSH3 0xFFFFFF SWAP1 SWAP4 AND SWAP1 SWAP4 MUL SWAP2 SWAP1 SWAP2 OR PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFF00000000 NOT AND PUSH1 0x1 PUSH1 0x20 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 MUL PUSH2 0xFFFF PUSH1 0x70 SHL NOT AND OR PUSH1 0x1 PUSH1 0x70 SHL PUSH2 0xFFFF SWAP3 DUP4 AND MUL OR PUSH7 0xFFFFFFFFFFFFFF PUSH1 0x80 SHL NOT AND PUSH1 0x1 PUSH1 0x80 SHL SWAP2 SWAP1 SWAP7 AND MUL PUSH5 0xFFFFFFFFFF PUSH1 0x90 SHL NOT AND SWAP5 SWAP1 SWAP5 OR PUSH1 0x1 PUSH1 0x90 SHL SWAP4 SWAP1 SWAP3 AND SWAP3 SWAP1 SWAP3 MUL OR SWAP1 SWAP2 SSTORE PUSH1 0xA DUP1 SLOAD PUSH1 0x0 SWAP1 PUSH2 0xC08 SWAP1 DUP5 SWAP1 PUSH2 0x3332 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0xC1B SWAP1 POP TIMESTAMP PUSH3 0x15180 PUSH2 0x3332 JUMP JUMPDEST PUSH1 0x4 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0xC2E JUMPI PUSH2 0xC2E PUSH2 0x30BE JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH5 0xFFFFFFFFFF DUP9 AND DUP5 MSTORE PUSH1 0x3 SWAP1 SWAP3 MUL SWAP1 SWAP2 ADD SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0xA SLOAD PUSH32 0xBCC1EA15519F3ACFB49E91DE851E553B2C024B9AB85CEE8FFD8FE4E4E0A7876D SWAP1 DUP5 SWAP1 PUSH2 0xC84 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x334A JUMP JUMPDEST DUP8 TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0xC96 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3361 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP PUSH2 0xCAC JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x8AF JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 SLOAD DUP3 LT PUSH2 0xCF8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x1B9BC81CDD58DA081C1C9BDC1BDCD85B PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x807 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0x1 PUSH1 0x50 SHL SWAP1 DIV PUSH5 0xFFFFFFFFFF AND TIMESTAMP GT PUSH2 0xD5C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x766F74696E67207374696C6C20616374697665 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x807 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0xFFFF AND DUP2 LT ISZERO PUSH2 0xE7D JUMPI PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP4 SWAP1 PUSH1 0x2 ADD DUP3 PUSH1 0x8 DUP2 LT PUSH2 0xDA4 JUMPI PUSH2 0xDA4 PUSH2 0x30BE JUMP JUMPDEST PUSH1 0x10 SWAP2 DUP3 DUP3 DIV ADD SWAP2 SWAP1 MOD PUSH1 0x2 MUL SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND PUSH2 0xFFFF AND GT ISZERO PUSH2 0xE1F JUMPI PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD DUP2 PUSH1 0x8 DUP2 LT PUSH2 0xDEA JUMPI PUSH2 0xDEA PUSH2 0x30BE JUMP JUMPDEST PUSH1 0x10 SWAP2 DUP3 DUP3 DIV ADD SWAP2 SWAP1 MOD PUSH1 0x2 MUL SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND PUSH2 0xFFFF AND SWAP3 POP DUP1 SWAP4 POP DUP2 PUSH1 0x1 SUB PUSH2 0xE1A JUMPI PUSH1 0x0 SWAP2 POP JUMPDEST PUSH2 0xE6B JUMP JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP4 SWAP1 PUSH1 0x2 ADD DUP3 PUSH1 0x8 DUP2 LT PUSH2 0xE43 JUMPI PUSH2 0xE43 PUSH2 0x30BE JUMP JUMPDEST PUSH1 0x10 SWAP2 DUP3 DUP3 DIV ADD SWAP2 SWAP1 MOD PUSH1 0x2 MUL SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND PUSH2 0xFFFF AND SUB PUSH2 0xE6B JUMPI PUSH1 0x1 SWAP2 POP JUMPDEST DUP1 PUSH2 0xE75 DUP2 PUSH2 0x3398 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xD63 JUMP JUMPDEST POP DUP1 ISZERO PUSH2 0xEBF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x3A3432B932903BB0B99030903A34B297 PUSH1 0x81 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x807 JUMP JUMPDEST POP SWAP1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x26BAB9BA1031329036B2B6B132B9 PUSH1 0x91 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x807 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP2 SWAP1 PUSH2 0xF1C SWAP1 PUSH2 0x3084 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xF48 SWAP1 PUSH2 0x3084 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xF95 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xF6A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xF95 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xF78 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP PUSH1 0x1 DUP5 ADD SLOAD PUSH1 0x2 DUP6 ADD SLOAD PUSH1 0x3 DUP7 ADD SLOAD PUSH1 0x4 SWAP1 SWAP7 ADD SLOAD SWAP5 SWAP6 PUSH5 0xFFFFFFFFFF SWAP3 DUP4 AND SWAP6 SWAP2 SWAP5 POP SWAP3 POP PUSH1 0xFF DUP2 AND SWAP2 PUSH3 0xFFFFFF PUSH2 0x100 DUP4 DIV AND SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB PUSH1 0x1 PUSH1 0x20 SHL DUP3 DIV AND SWAP2 PUSH2 0xFFFF PUSH1 0x1 PUSH1 0x70 SHL DUP4 DIV DUP2 AND SWAP3 PUSH1 0x1 PUSH1 0x80 SHL DUP2 DIV SWAP1 SWAP2 AND SWAP2 PUSH1 0x1 PUSH1 0x90 SHL SWAP1 SWAP2 DIV AND DUP11 JUMP JUMPDEST PUSH2 0x100B PUSH2 0x284A JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP2 MLOAD PUSH2 0x140 DUP2 ADD SWAP1 SWAP3 MSTORE DUP1 SLOAD DUP3 SWAP1 DUP3 SWAP1 PUSH2 0x1034 SWAP1 PUSH2 0x3084 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1060 SWAP1 PUSH2 0x3084 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x10AD JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1082 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x10AD JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1090 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x1 DUP3 ADD SLOAD PUSH5 0xFFFFFFFFFF SWAP1 DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x4 SWAP1 SWAP3 ADD SLOAD PUSH1 0xFF DUP2 AND PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x100 DUP1 DUP3 DIV PUSH3 0xFFFFFF AND PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x20 SHL DUP3 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB AND PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x70 SHL DUP3 DIV PUSH2 0xFFFF SWAP1 DUP2 AND PUSH1 0xE0 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0x80 SHL DUP4 DIV AND SWAP1 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x90 SHL SWAP1 DIV SWAP1 SWAP2 AND PUSH2 0x120 SWAP1 SWAP2 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x4 SLOAD DUP2 LT ISZERO PUSH2 0x12D6 JUMPI TIMESTAMP PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1169 JUMPI PUSH2 0x1169 PUSH2 0x30BE JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH5 0xFFFFFFFFFF DUP10 AND DUP5 MSTORE PUSH1 0x3 SWAP1 SWAP3 MUL SWAP1 SWAP2 ADD SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD LT DUP1 ISZERO PUSH2 0x11CD JUMPI POP TIMESTAMP PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x11A8 JUMPI PUSH2 0x11A8 PUSH2 0x30BE JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD PUSH1 0x2 ADD SLOAD PUSH1 0x1 PUSH1 0x50 SHL SWAP1 DIV PUSH5 0xFFFFFFFFFF AND GT ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x120C JUMPI POP TIMESTAMP PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x11E8 JUMPI PUSH2 0x11E8 PUSH2 0x30BE JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD PUSH1 0x2 ADD SLOAD PUSH1 0x1 PUSH1 0x78 SHL SWAP1 DIV PUSH5 0xFFFFFFFFFF AND GT JUMPDEST DUP1 ISZERO PUSH2 0x1249 JUMPI POP PUSH1 0x1 PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1228 JUMPI PUSH2 0x1228 PUSH2 0x30BE JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD PUSH1 0x2 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH2 0xFFFF AND GT JUMPDEST ISZERO PUSH2 0x1259 JUMPI DUP2 PUSH1 0x1 ADD SWAP2 POP PUSH2 0x12CE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x0 SWAP2 DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x1270 JUMPI SWAP1 POP POP SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x8 DUP2 MSTORE PUSH1 0x20 ADD PUSH8 0x273790363AB1B597 PUSH1 0xC1 SHL DUP2 MSTORE POP DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x12BB JUMPI PUSH2 0x12BB PUSH2 0x30BE JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x114B JUMP JUMPDEST POP PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x12F1 JUMPI PUSH2 0x12F1 PUSH2 0x299D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1324 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x130F JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x4 SLOAD DUP2 LT ISZERO PUSH2 0x150F JUMPI TIMESTAMP PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1349 JUMPI PUSH2 0x1349 PUSH2 0x30BE JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH5 0xFFFFFFFFFF DUP12 AND DUP5 MSTORE PUSH1 0x3 SWAP1 SWAP3 MUL SWAP1 SWAP2 ADD SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD LT DUP1 ISZERO PUSH2 0x13AD JUMPI POP TIMESTAMP PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1388 JUMPI PUSH2 0x1388 PUSH2 0x30BE JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD PUSH1 0x2 ADD SLOAD PUSH1 0x1 PUSH1 0x50 SHL SWAP1 DIV PUSH5 0xFFFFFFFFFF AND GT ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x13EC JUMPI POP TIMESTAMP PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x13C8 JUMPI PUSH2 0x13C8 PUSH2 0x30BE JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD PUSH1 0x2 ADD SLOAD PUSH1 0x1 PUSH1 0x78 SHL SWAP1 DIV PUSH5 0xFFFFFFFFFF AND GT JUMPDEST DUP1 ISZERO PUSH2 0x1429 JUMPI POP PUSH1 0x1 PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1408 JUMPI PUSH2 0x1408 PUSH2 0x30BE JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD PUSH1 0x2 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH2 0xFFFF AND GT JUMPDEST ISZERO PUSH2 0x1507 JUMPI PUSH1 0x4 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1441 JUMPI PUSH2 0x1441 PUSH2 0x30BE JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x145D SWAP1 PUSH2 0x3084 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1489 SWAP1 PUSH2 0x3084 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x14D6 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x14AB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x14D6 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x14B9 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x14ED JUMPI PUSH2 0x14ED PUSH2 0x30BE JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP2 PUSH1 0x1 ADD SWAP2 POP DUP4 DUP3 LT ISZERO PUSH2 0x150F JUMPI JUMPDEST PUSH1 0x1 ADD PUSH2 0x132B JUMP JUMPDEST POP SWAP1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP6 PUSH2 0xFFFF AND GT DUP1 ISZERO PUSH2 0x1532 JUMPI POP PUSH2 0x101 DUP6 PUSH2 0xFFFF AND LT JUMPDEST PUSH2 0x157E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x696E76616C6964206E756D626572206F66206F7074696F6E7300000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x807 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x8 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1591 SWAP2 SWAP1 PUSH2 0x3332 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x8 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 DUP2 ADD DUP1 SLOAD PUSH15 0xFFFFFFFFFFFFFFFFFFFF0000000000 NOT AND PUSH6 0x10000000000 PUSH5 0xFFFFFFFFFF DUP8 DUP2 AND SWAP2 SWAP1 SWAP2 MUL PUSH5 0xFFFFFFFFFF PUSH1 0x50 SHL NOT AND SWAP2 SWAP1 SWAP2 OR PUSH1 0x1 PUSH1 0x50 SHL SWAP2 DUP7 AND SWAP2 SWAP1 SWAP2 MUL OR SWAP1 SSTORE PUSH1 0x1 DUP2 ADD DUP1 SLOAD PUSH2 0xFFFF NOT AND PUSH2 0xFFFF DUP9 AND OR SWAP1 SSTORE DUP1 PUSH2 0x1610 DUP9 DUP11 DUP4 PUSH2 0x33CE JUMP JUMPDEST POP PUSH2 0x1624 DUP9 DUP9 PUSH1 0x8 SLOAD PUSH1 0x0 DUP10 DUP10 DUP10 DUP10 PUSH2 0x250B JUMP JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1649 PUSH1 0x5 SLOAD PUSH1 0xF DUP2 DUP2 SIGNEXTEND PUSH1 0x1 PUSH1 0x80 SHL SWAP1 SWAP3 DIV SWAP1 SIGNEXTEND SUB SWAP1 JUMP JUMPDEST SWAP1 POP PUSH2 0x1653 PUSH2 0x284A JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1936 JUMPI TIMESTAMP DUP4 PUSH2 0x120 ADD MLOAD PUSH5 0xFFFFFFFFFF AND LT DUP1 ISZERO PUSH2 0x1685 JUMPI POP DUP5 DUP4 PUSH1 0x20 ADD MLOAD PUSH5 0xFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x169A JUMPI POP DUP5 DUP4 PUSH2 0x100 ADD MLOAD PUSH2 0xFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x1931 JUMPI PUSH2 0x16AA PUSH1 0x5 DUP3 PUSH2 0x26DC JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP2 MLOAD PUSH2 0x140 DUP2 ADD SWAP1 SWAP3 MSTORE DUP1 SLOAD SWAP3 SWAP5 POP SWAP1 SWAP2 DUP3 SWAP1 DUP3 SWAP1 PUSH2 0x16D8 SWAP1 PUSH2 0x3084 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1704 SWAP1 PUSH2 0x3084 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1751 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1726 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1751 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1734 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x1 DUP3 ADD SLOAD PUSH5 0xFFFFFFFFFF SWAP1 DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x4 SWAP1 SWAP3 ADD SLOAD PUSH1 0xFF DUP2 AND PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x100 DUP1 DUP3 DIV PUSH3 0xFFFFFF AND PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x20 SHL DUP3 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB AND PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x70 SHL DUP3 DIV PUSH2 0xFFFF SWAP1 DUP2 AND PUSH1 0xE0 DUP1 DUP7 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x80 SHL DUP5 DIV DUP3 AND SWAP3 DUP6 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x1 PUSH1 0x90 SHL SWAP1 SWAP3 DIV SWAP1 SWAP4 AND PUSH2 0x120 SWAP1 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP8 AND SWAP1 DUP3 ADD MSTORE PUSH1 0xB SLOAD SWAP1 SWAP4 POP PUSH2 0x1805 SWAP1 TIMESTAMP PUSH2 0x3332 JUMP JUMPDEST PUSH5 0xFFFFFFFFFF AND PUSH2 0x120 DUP5 ADD MSTORE DUP3 PUSH1 0x9 PUSH1 0x0 PUSH2 0x1822 PUSH1 0x5 DUP6 PUSH2 0x26DC JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 DUP2 MLOAD DUP2 SWAP1 PUSH2 0x1840 SWAP1 DUP3 PUSH2 0x325D JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH5 0xFFFFFFFFFF NOT AND PUSH5 0xFFFFFFFFFF SWAP3 DUP4 AND OR SWAP1 SSTORE PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x2 DUP4 ADD SSTORE PUSH1 0x60 DUP4 ADD MLOAD PUSH1 0x3 DUP4 ADD SSTORE PUSH1 0x80 DUP4 ADD MLOAD PUSH1 0x4 SWAP1 SWAP3 ADD DUP1 SLOAD PUSH1 0xA0 DUP6 ADD MLOAD PUSH1 0xC0 DUP7 ADD MLOAD PUSH1 0xE0 DUP8 ADD MLOAD PUSH2 0x100 DUP1 DUP10 ADD MLOAD PUSH2 0x120 SWAP1 SWAP10 ADD MLOAD PUSH1 0xFF SWAP1 SWAP9 AND PUSH4 0xFFFFFFFF NOT SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 OR PUSH3 0xFFFFFF SWAP1 SWAP4 AND SWAP1 SWAP4 MUL SWAP2 SWAP1 SWAP2 OR PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFF00000000 NOT AND PUSH1 0x1 PUSH1 0x20 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 MUL PUSH2 0xFFFF PUSH1 0x70 SHL NOT AND OR PUSH1 0x1 PUSH1 0x70 SHL PUSH2 0xFFFF SWAP3 DUP4 AND MUL OR PUSH7 0xFFFFFFFFFFFFFF PUSH1 0x80 SHL NOT AND PUSH1 0x1 PUSH1 0x80 SHL SWAP2 SWAP1 SWAP6 AND MUL PUSH5 0xFFFFFFFFFF PUSH1 0x90 SHL NOT AND SWAP4 SWAP1 SWAP4 OR PUSH1 0x1 PUSH1 0x90 SHL SWAP3 SWAP1 SWAP2 AND SWAP2 SWAP1 SWAP2 MUL OR SWAP1 SSTORE JUMPDEST PUSH2 0x1657 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0x4BABE4B493069D658924AC325D49EE1ADFACCBB176319A54499A34417EAF73EE SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x31A9108F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE CALLER SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x6352211E SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x19BF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x19E3 SWAP2 SWAP1 PUSH2 0x33B1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 ISZERO PUSH2 0x1A14 JUMPI POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH1 0x1 PUSH1 0x70 SHL SWAP1 DIV PUSH2 0xFFFF AND DUP4 EQ JUMPDEST PUSH2 0x1A60 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D757374206265206F776E6572206F662061737369676E65642077697A617264 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x807 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x1A6E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x4 DUP2 ADD SLOAD SWAP1 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x80 SHL SWAP1 DIV PUSH2 0xFFFF AND ISZERO PUSH2 0x1B09 JUMPI PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x1B07 JUMPI DUP4 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x1AB2 JUMPI PUSH2 0x1AB2 PUSH2 0x30BE JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1ACC SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1AF4 JUMPI PUSH2 0x1AF4 PUSH2 0x30BE JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0x1A97 JUMP JUMPDEST POP JUMPDEST PUSH1 0x0 DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1B1C SWAP2 SWAP1 PUSH2 0x30D4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 DUP2 DUP5 PUSH1 0x2 ADD SLOAD EQ PUSH2 0x1B48 JUMPI PUSH1 0x0 PUSH2 0x1B4B JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH1 0x1 DUP6 DUP2 ADD SLOAD PUSH1 0x40 DUP1 MLOAD DUP12 DUP2 MSTORE PUSH5 0xFFFFFFFFFF SWAP1 SWAP3 AND PUSH1 0x20 DUP4 ADD MSTORE DUP2 ADD DUP10 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0xFF SWAP3 SWAP1 SWAP3 AND SWAP1 DUP2 EQ PUSH1 0x80 DUP4 ADD MSTORE SWAP2 POP PUSH32 0xE3F0E138F100DEAF328BA1DEF71C39DADE8CD971BA0074D935EE648E54532FAE SWAP1 PUSH1 0xA0 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 DUP1 PUSH1 0x1 SUB PUSH2 0x1EB1 JUMPI PUSH1 0x4 DUP5 ADD SLOAD PUSH1 0x0 SWAP1 PUSH2 0x1BDB SWAP1 PUSH1 0x2 SWAP1 PUSH1 0x1 PUSH1 0x20 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB AND PUSH2 0x348E JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x4 DUP8 DUP2 ADD SLOAD PUSH1 0x40 MLOAD PUSH4 0x31A9108F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x70 SHL SWAP1 SWAP2 DIV PUSH2 0xFFFF AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP3 POP PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x6352211E SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1C47 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1C6B SWAP2 SWAP1 PUSH2 0x33B1 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 DUP9 ADD SLOAD PUSH1 0x4 DUP1 DUP11 ADD SLOAD PUSH1 0x40 MLOAD PUSH4 0x8AD4D6A5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH5 0xFFFFFFFFFF SWAP1 SWAP4 AND SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH2 0x100 SWAP1 DIV PUSH3 0xFFFFFF AND PUSH1 0x24 DUP3 ADD MSTORE SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x8AD4D6A5 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1CD5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1CE9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x2 SLOAD PUSH1 0x4 DUP10 DUP2 ADD SLOAD PUSH1 0xC SLOAD PUSH1 0x40 MLOAD PUSH4 0x8AD4D6A5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x70 SHL SWAP1 SWAP3 DIV PUSH2 0xFFFF AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP3 POP PUSH4 0x8AD4D6A5 SWAP2 POP PUSH1 0x44 ADD JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1D51 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1D65 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x4 DUP8 ADD DUP1 SLOAD PUSH14 0xFFFFFFFFFFFFFFFFFFFF00000000 NOT AND SWAP1 SSTORE POP PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0x1D9B DUP3 DUP3 PUSH2 0x289E JUMP JUMPDEST POP PUSH1 0x1 DUP2 ADD DUP1 SLOAD PUSH5 0xFFFFFFFFFF NOT AND SWAP1 SSTORE PUSH1 0x0 PUSH1 0x2 DUP3 ADD DUP2 SWAP1 SSTORE PUSH1 0x3 DUP3 ADD DUP2 SWAP1 SSTORE PUSH1 0x4 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xB8 SHL SUB NOT AND SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP6 SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1E19 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1E1E JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x1E40 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x807 SWAP1 PUSH2 0x34C2 JUMP JUMPDEST PUSH1 0x40 MLOAD CALLER SWAP1 DUP6 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1E80 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1E85 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP DUP2 PUSH2 0x1EA8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x807 SWAP1 PUSH2 0x34C2 JUMP JUMPDEST POP POP POP POP PUSH2 0x821 JUMP JUMPDEST DUP2 DUP5 PUSH1 0x3 ADD SLOAD SUB PUSH2 0x2028 JUMPI PUSH1 0x4 DUP5 ADD SLOAD PUSH1 0x0 SWAP1 PUSH2 0x1EE0 SWAP1 PUSH1 0x2 SWAP1 PUSH1 0x1 PUSH1 0x20 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB AND PUSH2 0x348E JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x4 DUP8 DUP2 ADD SLOAD PUSH1 0x40 MLOAD PUSH4 0x31A9108F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x80 SHL SWAP1 SWAP2 DIV PUSH2 0xFFFF AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP3 POP PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x6352211E SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1F4C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1F70 SWAP2 SWAP1 PUSH2 0x33B1 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x4 DUP9 DUP2 ADD SLOAD PUSH1 0xC SLOAD PUSH1 0x40 MLOAD PUSH4 0x8AD4D6A5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x80 SHL SWAP1 SWAP3 DIV PUSH2 0xFFFF AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x8AD4D6A5 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1FD4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1FE8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x2 SLOAD PUSH1 0xC SLOAD PUSH1 0x40 MLOAD PUSH4 0x8AD4D6A5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP15 SWAP1 MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP3 POP PUSH4 0x8AD4D6A5 SWAP2 POP PUSH1 0x44 ADD PUSH2 0x1D37 JUMP JUMPDEST PUSH1 0x4 DUP5 ADD SLOAD PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 PUSH1 0x20 SHL SWAP1 SWAP3 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB AND SWAP2 SWAP1 PUSH2 0x2058 DUP3 DUP3 PUSH2 0x289E JUMP JUMPDEST POP PUSH1 0x1 DUP2 ADD DUP1 SLOAD PUSH5 0xFFFFFFFFFF NOT AND SWAP1 SSTORE PUSH1 0x0 PUSH1 0x2 DUP3 ADD DUP2 SWAP1 SSTORE PUSH1 0x3 DUP3 ADD DUP2 SWAP1 SSTORE PUSH1 0x4 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xB8 SHL SUB NOT AND SWAP1 SSTORE DUP1 PUSH2 0x209F PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x20E9 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x20EE JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x2110 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x807 SWAP1 PUSH2 0x34C2 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2146 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x807 SWAP1 PUSH2 0x313B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x21AB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x807 JUMP JUMPDEST PUSH2 0x21B4 DUP2 PUSH2 0x268A JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x21D3 PUSH1 0x5 SLOAD PUSH1 0xF DUP2 DUP2 SIGNEXTEND PUSH1 0x1 PUSH1 0x80 SHL SWAP1 SWAP3 DIV SWAP1 SIGNEXTEND SUB SWAP1 JUMP JUMPDEST SWAP1 POP PUSH2 0x21DD PUSH2 0x284A JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x223D JUMPI TIMESTAMP DUP4 PUSH2 0x120 ADD MLOAD PUSH5 0xFFFFFFFFFF AND GT DUP1 ISZERO PUSH2 0x220F JUMPI POP DUP6 DUP4 PUSH1 0x20 ADD MLOAD PUSH5 0xFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x2224 JUMPI POP DUP6 DUP4 PUSH2 0x100 ADD MLOAD PUSH2 0xFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x2235 JUMPI POP PUSH1 0x1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x21E1 JUMP JUMPDEST POP PUSH1 0x0 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x4 SLOAD DUP2 LT ISZERO PUSH2 0x23E2 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2267 SWAP2 SWAP1 PUSH2 0x34F0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x2290 JUMPI PUSH2 0x2290 PUSH2 0x30BE JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x1 ADD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x22B1 SWAP2 SWAP1 PUSH2 0x350C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SUB PUSH2 0x23DA JUMPI PUSH1 0x0 PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x22E1 JUMPI PUSH2 0x22E1 PUSH2 0x30BE JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD SWAP1 POP PUSH1 0x0 PUSH1 0x4 PUSH1 0x1 PUSH1 0x4 DUP1 SLOAD SWAP1 POP PUSH2 0x2307 SWAP2 SWAP1 PUSH2 0x334A JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x2317 JUMPI PUSH2 0x2317 PUSH2 0x30BE JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD SWAP1 POP DUP1 SWAP2 POP PUSH1 0x4 PUSH1 0x1 PUSH1 0x4 DUP1 SLOAD SWAP1 POP PUSH2 0x233E SWAP2 SWAP1 PUSH2 0x334A JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x234E JUMPI PUSH2 0x234E PUSH2 0x30BE JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH1 0x0 PUSH2 0x236E SWAP2 SWAP1 PUSH2 0x289E JUMP JUMPDEST POP PUSH1 0x2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xB0 SHL SUB NOT AND SWAP1 SSTORE PUSH1 0x4 DUP1 SLOAD PUSH2 0x2390 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x334A JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x23A0 JUMPI PUSH2 0x23A0 PUSH2 0x30BE JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH1 0x0 PUSH2 0x23C0 SWAP2 SWAP1 PUSH2 0x289E JUMP JUMPDEST POP PUSH1 0x2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xB0 SHL SUB NOT AND SWAP1 SSTORE POP PUSH2 0x23E2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x224C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x8 SLOAD DUP3 LT PUSH2 0x242C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x1B9BC81CDD58DA081C1C9BDC1BDCD85B PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x807 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0xFFFF AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2459 JUMPI PUSH2 0x2459 PUSH2 0x299D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2482 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x2504 JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD DUP2 PUSH1 0x8 DUP2 LT PUSH2 0x24B3 JUMPI PUSH2 0x24B3 PUSH2 0x30BE JUMP JUMPDEST PUSH1 0x10 SWAP2 DUP3 DUP3 DIV ADD SWAP2 SWAP1 MOD PUSH1 0x2 MUL SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x24DF JUMPI PUSH2 0x24DF PUSH2 0x30BE JUMP JUMPDEST PUSH2 0xFFFF SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE DUP1 PUSH2 0x24FC DUP2 PUSH2 0x3398 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2488 JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP1 DUP4 SSTORE PUSH1 0x0 DUP4 DUP2 MSTORE SWAP2 SWAP3 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0x252E JUMPI PUSH2 0x252E PUSH2 0x30BE JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD SWAP1 POP PUSH1 0x1 DUP2 ADD PUSH2 0x254F DUP11 DUP13 DUP4 PUSH2 0x33CE JUMP JUMPDEST POP PUSH1 0x0 DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP8 DUP2 PUSH1 0x2 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH5 0xFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH5 0xFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP7 DUP2 PUSH1 0x2 ADD PUSH1 0x6 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP DUP6 DUP2 PUSH1 0x2 ADD PUSH1 0x7 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH3 0xFFFFFF MUL NOT AND SWAP1 DUP4 PUSH3 0xFFFFFF AND MUL OR SWAP1 SSTORE POP DUP5 DUP2 PUSH1 0x2 ADD PUSH1 0xA PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH5 0xFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH5 0xFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 DUP2 PUSH1 0x2 ADD PUSH1 0xF PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH5 0xFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH5 0xFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 DUP2 PUSH1 0x2 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH2 0xFFFF MUL NOT AND SWAP1 DUP4 PUSH2 0xFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0x2810025950962E3CD71FD98C2DC111FFBDB2A129B36771DF8D36A7DE2FE3E4E0 DUP11 DUP11 DUP11 DUP11 DUP11 DUP11 DUP11 DUP11 PUSH1 0x40 MLOAD PUSH2 0x2676 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x357E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x26FF PUSH2 0x26EB DUP5 PUSH2 0x274D JUMP JUMPDEST DUP6 SLOAD PUSH2 0x26FA SWAP2 SWAP1 PUSH1 0xF SIGNEXTEND PUSH2 0x35ED JUMP JUMPDEST PUSH2 0x27BB JUMP JUMPDEST DUP5 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x80 SHL SWAP1 DIV PUSH1 0xF SWAP1 DUP2 SIGNEXTEND SWAP1 DUP3 SWAP1 SIGNEXTEND SLT PUSH2 0x2732 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2D0483C5 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xF SIGNEXTEND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 SWAP4 SWAP1 SWAP4 ADD PUSH1 0x20 MSTORE POP POP PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xFF SHL SUB DUP3 GT ISZERO PUSH2 0x27B7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53616665436173743A2076616C756520646F65736E27742066697420696E2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x371034B73A191A9B PUSH1 0xC1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x807 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH16 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT DUP3 SLT DUP1 ISZERO SWAP1 PUSH2 0x27EE JUMPI POP PUSH16 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SGT ISZERO JUMPDEST PUSH2 0x27B7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53616665436173743A2076616C756520646F65736E27742066697420696E2031 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x32382062697473 PUSH1 0xC8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x807 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH2 0x140 DUP2 ADD DUP3 MSTORE PUSH1 0x60 DUP1 DUP3 MSTORE PUSH1 0x0 PUSH1 0x20 DUP4 ADD DUP2 SWAP1 MSTORE SWAP3 DUP3 ADD DUP4 SWAP1 MSTORE DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0xA0 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0xC0 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0xE0 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x100 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x120 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 JUMP JUMPDEST POP DUP1 SLOAD PUSH2 0x28AA SWAP1 PUSH2 0x3084 JUMP JUMPDEST PUSH1 0x0 DUP3 SSTORE DUP1 PUSH1 0x1F LT PUSH2 0x28BA JUMPI POP POP JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0x21B4 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x27B7 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x28D4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x28FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x291C JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2904 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0xCAC JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x2945 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x2901 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xA0 DUP2 MSTORE PUSH1 0x0 PUSH2 0x296C PUSH1 0xA0 DUP4 ADD DUP9 PUSH2 0x292D JUMP JUMPDEST PUSH2 0xFFFF SWAP7 SWAP1 SWAP7 AND PUSH1 0x20 DUP4 ADD MSTORE POP PUSH5 0xFFFFFFFFFF SWAP4 DUP5 AND PUSH1 0x40 DUP3 ADD MSTORE SWAP2 DUP4 AND PUSH1 0x60 DUP4 ADD MSTORE SWAP1 SWAP2 AND PUSH1 0x80 SWAP1 SWAP2 ADD MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x29DB JUMPI PUSH2 0x29DB PUSH2 0x299D JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x29F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT ISZERO PUSH2 0x2A0F JUMPI PUSH2 0x2A0F PUSH2 0x299D JUMP JUMPDEST DUP2 PUSH1 0x5 SHL PUSH2 0x2A1E DUP3 DUP3 ADD PUSH2 0x29B3 JUMP JUMPDEST SWAP3 DUP4 MSTORE DUP5 DUP2 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP1 DUP8 DUP6 GT ISZERO PUSH2 0x2A38 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP8 ADD SWAP3 POP JUMPDEST DUP5 DUP4 LT ISZERO PUSH2 0x2A57 JUMPI DUP3 CALLDATALOAD DUP3 MSTORE SWAP2 DUP4 ADD SWAP2 SWAP1 DUP4 ADD SWAP1 PUSH2 0x2A3E JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2A77 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2A94 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2AA0 DUP7 DUP3 DUP8 ADD PUSH2 0x29E3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x2AB6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x100 DUP1 DUP4 MSTORE PUSH2 0x2AD5 DUP2 DUP5 ADD DUP13 PUSH2 0x292D JUMP JUMPDEST SWAP10 ISZERO ISZERO PUSH1 0x20 DUP5 ADD MSTORE POP POP PUSH5 0xFFFFFFFFFF SWAP7 DUP8 AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0xFF SWAP6 SWAP1 SWAP6 AND PUSH1 0x60 DUP7 ADD MSTORE PUSH3 0xFFFFFF SWAP4 SWAP1 SWAP4 AND PUSH1 0x80 DUP6 ADD MSTORE SWAP1 DUP5 AND PUSH1 0xA0 DUP5 ADD MSTORE SWAP1 SWAP3 AND PUSH1 0xC0 DUP3 ADD MSTORE PUSH2 0xFFFF SWAP1 SWAP2 AND PUSH1 0xE0 SWAP1 SWAP2 ADD MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x2B38 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2B4F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x2B67 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH3 0xFFFFFF DUP2 AND DUP2 EQ PUSH2 0x2B81 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH5 0xFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x2B81 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH2 0xFFFF DUP2 AND DUP2 EQ PUSH2 0x2B81 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xC0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x2BC8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2BDE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2BEA DUP11 DUP3 DUP12 ADD PUSH2 0x2B26 JUMP JUMPDEST SWAP1 SWAP9 POP SWAP7 POP POP PUSH1 0x20 DUP9 ADD CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x2C04 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP5 POP PUSH2 0x2C12 PUSH1 0x40 DUP10 ADD PUSH2 0x2B6E JUMP JUMPDEST SWAP4 POP PUSH2 0x2C20 PUSH1 0x60 DUP10 ADD PUSH2 0x2B86 JUMP JUMPDEST SWAP3 POP PUSH2 0x2C2E PUSH1 0x80 DUP10 ADD PUSH2 0x2B86 JUMP JUMPDEST SWAP2 POP PUSH2 0x2C3C PUSH1 0xA0 DUP10 ADD PUSH2 0x2B9B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2C5D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x21B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2C93 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2C9E DUP2 PUSH2 0x2C6C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2CB6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2CCF JUMPI PUSH2 0x2CCF PUSH2 0x299D JUMP JUMPDEST PUSH2 0x2CE2 PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD PUSH2 0x29B3 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x2CF7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2D29 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2D3F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2D4B DUP7 DUP3 DUP8 ADD PUSH2 0x2CA5 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH2 0x2D61 PUSH1 0x40 DUP6 ADD PUSH2 0x2B86 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2D7F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP2 CALLDATALOAD SWAP4 PUSH1 0x20 DUP4 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 SWAP1 SWAP3 ADD CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x140 DUP1 DUP4 MSTORE PUSH2 0x2DAA DUP2 DUP5 ADD DUP15 PUSH2 0x292D JUMP JUMPDEST PUSH5 0xFFFFFFFFFF SWAP13 DUP14 AND PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x40 DUP5 ADD SWAP12 SWAP1 SWAP12 MSTORE POP POP PUSH1 0x60 DUP2 ADD SWAP8 SWAP1 SWAP8 MSTORE PUSH1 0xFF SWAP6 SWAP1 SWAP6 AND PUSH1 0x80 DUP8 ADD MSTORE PUSH3 0xFFFFFF SWAP4 SWAP1 SWAP4 AND PUSH1 0xA0 DUP7 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0xC0 DUP6 ADD MSTORE PUSH2 0xFFFF SWAP1 DUP2 AND PUSH1 0xE0 DUP6 ADD MSTORE AND PUSH2 0x100 DUP4 ADD MSTORE SWAP1 SWAP3 AND PUSH2 0x120 SWAP1 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD PUSH2 0x140 DUP1 PUSH1 0x20 DUP6 ADD MSTORE PUSH2 0x2E36 PUSH2 0x160 DUP6 ADD DUP4 PUSH2 0x292D JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP6 ADD MLOAD PUSH2 0x2E50 PUSH1 0x40 DUP7 ADD DUP3 PUSH5 0xFFFFFFFFFF AND SWAP1 MSTORE JUMP JUMPDEST POP PUSH1 0x40 DUP6 ADD MLOAD PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x60 DUP6 ADD MLOAD PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0x80 DUP6 ADD MLOAD PUSH2 0x2E79 PUSH1 0xA0 DUP7 ADD DUP3 PUSH1 0xFF AND SWAP1 MSTORE JUMP JUMPDEST POP PUSH1 0xA0 DUP6 ADD MLOAD PUSH3 0xFFFFFF DUP2 AND PUSH1 0xC0 DUP7 ADD MSTORE POP PUSH1 0xC0 DUP6 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB DUP2 AND PUSH1 0xE0 DUP7 ADD MSTORE POP PUSH1 0xE0 DUP6 ADD MLOAD PUSH2 0x100 PUSH2 0x2EB7 DUP2 DUP8 ADD DUP4 PUSH2 0xFFFF AND SWAP1 MSTORE JUMP JUMPDEST DUP7 ADD MLOAD SWAP1 POP PUSH2 0x120 PUSH2 0x2ECE DUP7 DUP3 ADD DUP4 PUSH2 0xFFFF AND SWAP1 MSTORE JUMP JUMPDEST DUP7 ADD MLOAD PUSH5 0xFFFFFFFFFF DUP2 AND DUP4 DUP8 ADD MSTORE SWAP1 POP PUSH2 0x150F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2EF6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2C9E DUP3 PUSH2 0x2B86 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 ADD DUP2 DUP5 MSTORE DUP1 DUP6 MLOAD DUP1 DUP4 MSTORE PUSH1 0x40 DUP7 ADD SWAP2 POP PUSH1 0x40 DUP2 PUSH1 0x5 SHL DUP8 ADD ADD SWAP3 POP DUP4 DUP8 ADD PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2F54 JUMPI PUSH1 0x3F NOT DUP9 DUP7 SUB ADD DUP5 MSTORE PUSH2 0x2F42 DUP6 DUP4 MLOAD PUSH2 0x292D JUMP JUMPDEST SWAP5 POP SWAP3 DUP6 ADD SWAP3 SWAP1 DUP6 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x2F26 JUMP JUMPDEST POP SWAP3 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xC0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x2F7C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2F92 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2F9E DUP11 DUP3 DUP12 ADD PUSH2 0x2B26 JUMP JUMPDEST SWAP1 SWAP9 POP SWAP7 POP PUSH2 0x2C04 SWAP1 POP PUSH1 0x20 DUP10 ADD PUSH2 0x2B9B JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2FC6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2FEA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2FF6 DUP7 DUP3 DUP8 ADD PUSH2 0x29E3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3012 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x3028 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3034 DUP5 DUP3 DUP6 ADD PUSH2 0x2CA5 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3078 JUMPI DUP4 MLOAD PUSH2 0xFFFF AND DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x3058 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x3098 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x30B8 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x0 SWAP1 DUP3 SWAP1 PUSH1 0x20 DUP1 DUP7 ADD DUP5 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x30FE JUMPI DUP2 MLOAD DUP6 MSTORE SWAP4 DUP3 ADD SWAP4 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x30E2 JUMP JUMPDEST POP SWAP3 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST DUP5 DUP2 MSTORE DUP4 ISZERO ISZERO PUSH1 0x20 DUP3 ADD MSTORE DUP3 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x3131 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x292D JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x2C9E PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x292D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE PUSH1 0x0 DUP5 SLOAD PUSH2 0x3197 DUP2 PUSH2 0x3084 JUMP JUMPDEST DUP1 DUP5 DUP8 ADD MSTORE PUSH1 0x40 PUSH1 0x1 DUP1 DUP5 AND PUSH1 0x0 DUP2 EQ PUSH2 0x31B8 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x31D2 JUMPI PUSH2 0x3200 JUMP JUMPDEST PUSH1 0xFF NOT DUP6 AND DUP10 DUP5 ADD MSTORE DUP4 ISZERO ISZERO PUSH1 0x5 SHL DUP10 ADD DUP4 ADD SWAP6 POP PUSH2 0x3200 JUMP JUMPDEST DUP10 PUSH1 0x0 MSTORE DUP7 PUSH1 0x0 KECCAK256 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x31F8 JUMPI DUP2 SLOAD DUP12 DUP3 ADD DUP7 ADD MSTORE SWAP1 DUP4 ADD SWAP1 DUP9 ADD PUSH2 0x31DD JUMP JUMPDEST DUP11 ADD DUP5 ADD SWAP7 POP POP JUMPDEST POP SWAP4 SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x3258 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x3235 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3254 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x3241 JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x3276 JUMPI PUSH2 0x3276 PUSH2 0x299D JUMP JUMPDEST PUSH2 0x328A DUP2 PUSH2 0x3284 DUP5 SLOAD PUSH2 0x3084 JUMP JUMPDEST DUP5 PUSH2 0x320E JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x32BF JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x32A7 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x3254 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x32EE JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x32CF JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x330C JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x3345 JUMPI PUSH2 0x3345 PUSH2 0x331C JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x335C JUMPI PUSH2 0x335C PUSH2 0x331C JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH5 0xFFFFFFFFFF DUP6 AND DUP2 MSTORE DUP4 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x80 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x3387 PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x292D JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x60 DUP4 ADD MSTORE SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x33AA JUMPI PUSH2 0x33AA PUSH2 0x331C JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x33C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x2C9E DUP2 PUSH2 0x2C6C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT ISZERO PUSH2 0x33E5 JUMPI PUSH2 0x33E5 PUSH2 0x299D JUMP JUMPDEST PUSH2 0x33F9 DUP4 PUSH2 0x33F3 DUP4 SLOAD PUSH2 0x3084 JUMP JUMPDEST DUP4 PUSH2 0x320E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F DUP5 GT PUSH1 0x1 DUP2 EQ PUSH2 0x342D JUMPI PUSH1 0x0 DUP6 ISZERO PUSH2 0x3415 JUMPI POP DUP4 DUP3 ADD CALLDATALOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP8 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP7 SWAP1 SHL OR DUP4 SSTORE PUSH2 0x3487 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP1 DUP4 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x345E JUMPI DUP7 DUP6 ADD CALLDATALOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x343E JUMP JUMPDEST POP DUP7 DUP3 LT ISZERO PUSH2 0x347B JUMPI PUSH1 0x0 NOT PUSH1 0xF8 DUP9 PUSH1 0x3 SHL AND SHR NOT DUP5 DUP8 ADD CALLDATALOAD AND DUP2 SSTORE JUMPDEST POP POP PUSH1 0x1 DUP6 PUSH1 0x1 SHL ADD DUP4 SSTORE JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB DUP1 DUP5 AND DUP1 PUSH2 0x34B6 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP3 AND SWAP2 SWAP1 SWAP2 DIV SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x14 SWAP1 DUP3 ADD MSTORE PUSH20 0x2330B4B632B2103A379039B2B7321022BA3432B9 PUSH1 0x61 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x3502 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x2901 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 SLOAD PUSH2 0x351A DUP2 PUSH2 0x3084 JUMP JUMPDEST PUSH1 0x1 DUP3 DUP2 AND DUP1 ISZERO PUSH2 0x3532 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x3547 JUMPI PUSH2 0x30FE JUMP JUMPDEST PUSH1 0xFF NOT DUP5 AND DUP8 MSTORE DUP3 ISZERO ISZERO DUP4 MUL DUP8 ADD SWAP5 POP PUSH2 0x30FE JUMP JUMPDEST DUP8 PUSH1 0x0 MSTORE PUSH1 0x20 DUP1 PUSH1 0x0 KECCAK256 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x356D JUMPI DUP2 SLOAD DUP11 DUP3 ADD MSTORE SWAP1 DUP5 ADD SWAP1 DUP3 ADD PUSH2 0x3554 JUMP JUMPDEST POP POP POP SWAP6 SWAP1 SWAP2 ADD SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0xE0 DUP2 MSTORE DUP8 PUSH1 0xE0 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x100 DUP10 DUP12 DUP3 DUP6 ADD CALLDATACOPY PUSH1 0x0 DUP11 DUP5 ADD DUP3 ADD MSTORE PUSH5 0xFFFFFFFFFF SWAP9 DUP10 AND PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0xFF SWAP8 SWAP1 SWAP8 AND PUSH1 0x40 DUP4 ADD MSTORE POP PUSH3 0xFFFFFF SWAP5 SWAP1 SWAP5 AND PUSH1 0x60 DUP6 ADD MSTORE SWAP2 DUP6 AND PUSH1 0x80 DUP5 ADD MSTORE SWAP1 SWAP4 AND PUSH1 0xA0 DUP3 ADD MSTORE PUSH2 0xFFFF SWAP1 SWAP3 AND PUSH1 0xC0 DUP4 ADD MSTORE PUSH1 0x1F SWAP1 SWAP3 ADD PUSH1 0x1F NOT AND ADD ADD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SLT DUP1 ISZERO PUSH1 0x1 PUSH1 0x1 PUSH1 0xFF SHL SUB DUP5 SWAP1 SUB DUP6 SGT AND ISZERO PUSH2 0x360F JUMPI PUSH2 0x360F PUSH2 0x331C JUMP JUMPDEST PUSH1 0x1 PUSH1 0xFF SHL DUP4 SWAP1 SUB DUP5 SLT DUP2 AND ISZERO PUSH2 0x3628 JUMPI PUSH2 0x3628 PUSH2 0x331C JUMP JUMPDEST POP POP ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SLOAD LOG1 RETURN SWAP14 0xBD 0xAA 0xE2 0x22 0xC9 EXTCODESIZE 0xCC SWAP6 0xD6 CALL SWAP16 0xCB 0x49 DUP8 0xA7 CODESIZE CALLVALUE 0xDA 0xE9 DUP7 PUSH19 0x3CDB26FDE96DCA64736F6C634300080F003300 ",
  "pcMap": {
    "0": {
      "offset": [
        743,
        21760
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        743,
        21760
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        743,
        21760
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5": {
      "fn": null,
      "offset": [
        743,
        21760
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        743,
        21760
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "8": {
      "fn": null,
      "offset": [
        743,
        21760
      ],
      "op": "LT",
      "path": "2"
    },
    "9": {
      "fn": null,
      "offset": [
        743,
        21760
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x144"
    },
    "12": {
      "fn": null,
      "offset": [
        743,
        21760
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "13": {
      "fn": null,
      "offset": [
        743,
        21760
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        743,
        21760
      ],
      "op": "CALLDATALOAD",
      "path": "2"
    },
    "16": {
      "fn": null,
      "offset": [
        743,
        21760
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        743,
        21760
      ],
      "op": "SHR",
      "path": "2"
    },
    "19": {
      "fn": null,
      "offset": [
        743,
        21760
      ],
      "op": "DUP1",
      "path": "2"
    },
    "20": {
      "fn": null,
      "offset": [
        743,
        21760
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x8D977672"
    },
    "25": {
      "fn": null,
      "offset": [
        743,
        21760
      ],
      "op": "GT",
      "path": "2"
    },
    "26": {
      "fn": null,
      "offset": [
        743,
        21760
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB6"
    },
    "29": {
      "fn": null,
      "offset": [
        743,
        21760
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "30": {
      "fn": null,
      "offset": [
        743,
        21760
      ],
      "op": "DUP1",
      "path": "2"
    },
    "31": {
      "fn": null,
      "offset": [
        743,
        21760
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xD374A217"
    },
    "36": {
      "fn": null,
      "offset": [
        743,
        21760
      ],
      "op": "GT",
      "path": "2"
    },
    "37": {
      "fn": null,
      "offset": [
        743,
        21760
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6F"
    },
    "40": {
      "fn": null,
      "offset": [
        743,
        21760
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "41": {
      "fn": null,
      "offset": [
        743,
        21760
      ],
      "op": "DUP1",
      "path": "2"
    },
    "42": {
      "fn": null,
      "offset": [
        743,
        21760
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xD374A217"
    },
    "47": {
      "fn": null,
      "offset": [
        743,
        21760
      ],
      "op": "EQ",
      "path": "2"
    },
    "48": {
      "fn": null,
      "offset": [
        743,
        21760
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x409"
    },
    "51": {
      "fn": null,
      "offset": [
        743,
        21760
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "52": {
      "fn": null,
      "offset": [
        743,
        21760
      ],
      "op": "DUP1",
      "path": "2"
    },
    "53": {
      "fn": null,
      "offset": [
        743,
        21760
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xF18C51D3"
    },
    "58": {
      "fn": null,
      "offset": [
        743,
        21760
      ],
      "op": "EQ",
      "path": "2"
    },
    "59": {
      "fn": null,
      "offset": [
        743,
        21760
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x429"
    },
    "62": {
      "fn": null,
      "offset": [
        743,
        21760
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "63": {
      "fn": null,
      "offset": [
        743,
        21760
      ],
      "op": "DUP1",
      "path": "2"
    },
    "64": {
      "fn": null,
      "offset": [
        743,
        21760
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xF2FDE38B"
    },
    "69": {
      "fn": null,
      "offset": [
        743,
        21760
      ],
      "op": "EQ",
      "path": "2"
    },
    "70": {
      "fn": null,
      "offset": [
        743,
        21760
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x449"
    },
    "73": {
      "fn": null,
      "offset": [
        743,
        21760
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "74": {
      "fn": null,
      "offset": [
        743,
        21760
      ],
      "op": "DUP1",
      "path": "2"
    },
    "75": {
      "fn": null,
      "offset": [
        743,
        21760
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xF4739BD9"
    },
    "80": {
      "fn": null,
      "offset": [
        743,
        21760
      ],
      "op": "EQ",
      "path": "2"
    },
    "81": {
      "fn": null,
      "offset": [
        743,
        21760
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x469"
    },
    "84": {
      "fn": null,
      "offset": [
        743,
        21760
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "85": {
      "fn": null,
      "offset": [
        743,
        21760
      ],
      "op": "DUP1",
      "path": "2"
    },
    "86": {
      "fn": null,
      "offset": [
        743,
        21760
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xF713B7ED"
    },
    "91": {
      "fn": null,
      "offset": [
        743,
        21760
      ],
      "op": "EQ",
      "path": "2"
    },
    "92": {
      "fn": null,
      "offset": [
        743,
        21760
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x499"
    },
    "95": {
      "fn": null,
      "offset": [
        743,
        21760
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "96": {
      "fn": null,
      "offset": [
        743,
        21760
      ],
      "op": "DUP1",
      "path": "2"
    },
    "97": {
      "fn": null,
      "offset": [
        743,
        21760
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xFF981099"
    },
    "102": {
      "fn": null,
      "offset": [
        743,
        21760
      ],
      "op": "EQ",
      "path": "2"
    },
    "103": {
      "fn": null,
      "offset": [
        743,
        21760
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4B9"
    },
    "106": {
      "fn": null,
      "offset": [
        743,
        21760
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "107": {
      "fn": null,
      "offset": [
        743,
        21760
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "109": {
      "fn": null,
      "offset": [
        743,
        21760
      ],
      "op": "DUP1",
      "path": "2"
    },
    "110": {
      "fn": null,
      "offset": [
        743,
        21760
      ],
      "op": "REVERT",
      "path": "2"
    },
    "111": {
      "fn": null,
      "offset": [
        743,
        21760
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "112": {
      "fn": null,
      "offset": [
        743,
        21760
      ],
      "op": "DUP1",
      "path": "2"
    },
    "113": {
      "fn": null,
      "offset": [
        743,
        21760
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x8D977672"
    },
    "118": {
      "fn": null,
      "offset": [
        743,
        21760
      ],
      "op": "EQ",
      "path": "2"
    },
    "119": {
      "fn": null,
      "offset": [
        743,
        21760
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x31B"
    },
    "122": {
      "fn": null,
      "offset": [
        743,
        21760
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "123": {
      "fn": null,
      "offset": [
        743,
        21760
      ],
      "op": "DUP1",
      "path": "2"
    },
    "124": {
      "fn": null,
      "offset": [
        743,
        21760
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x8DA5CB5B"
    },
    "129": {
      "fn": null,
      "offset": [
        743,
        21760
      ],
      "op": "EQ",
      "path": "2"
    },
    "130": {
      "fn": null,
      "offset": [
        743,
        21760
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x351"
    },
    "133": {
      "fn": null,
      "offset": [
        743,
        21760
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "134": {
      "fn": null,
      "offset": [
        743,
        21760
      ],
      "op": "DUP1",
      "path": "2"
    },
    "135": {
      "fn": null,
      "offset": [
        743,
        21760
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x976217CD"
    },
    "140": {
      "fn": null,
      "offset": [
        743,
        21760
      ],
      "op": "EQ",
      "path": "2"
    },
    "141": {
      "fn": null,
      "offset": [
        743,
        21760
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x379"
    },
    "144": {
      "fn": null,
      "offset": [
        743,
        21760
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "145": {
      "fn": null,
      "offset": [
        743,
        21760
      ],
      "op": "DUP1",
      "path": "2"
    },
    "146": {
      "fn": null,
      "offset": [
        743,
        21760
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xA584A328"
    },
    "151": {
      "fn": null,
      "offset": [
        743,
        21760
      ],
      "op": "EQ",
      "path": "2"
    },
    "152": {
      "fn": null,
      "offset": [
        743,
        21760
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3A6"
    },
    "155": {
      "fn": null,
      "offset": [
        743,
        21760
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "156": {
      "fn": null,
      "offset": [
        743,
        21760
      ],
      "op": "DUP1",
      "path": "2"
    },
    "157": {
      "fn": null,
      "offset": [
        743,
        21760
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xB2BAD544"
    },
    "162": {
      "fn": null,
      "offset": [
        743,
        21760
      ],
      "op": "EQ",
      "path": "2"
    },
    "163": {
      "fn": null,
      "offset": [
        743,
        21760
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3BC"
    },
    "166": {
      "fn": null,
      "offset": [
        743,
        21760
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "167": {
      "fn": null,
      "offset": [
        743,
        21760
      ],
      "op": "DUP1",
      "path": "2"
    },
    "168": {
      "fn": null,
      "offset": [
        743,
        21760
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xBECA3A16"
    },
    "173": {
      "fn": null,
      "offset": [
        743,
        21760
      ],
      "op": "EQ",
      "path": "2"
    },
    "174": {
      "fn": null,
      "offset": [
        743,
        21760
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3E9"
    },
    "177": {
      "fn": null,
      "offset": [
        743,
        21760
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "178": {
      "fn": null,
      "offset": [
        743,
        21760
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "180": {
      "fn": null,
      "offset": [
        743,
        21760
      ],
      "op": "DUP1",
      "path": "2"
    },
    "181": {
      "fn": null,
      "offset": [
        743,
        21760
      ],
      "op": "REVERT",
      "path": "2"
    },
    "182": {
      "fn": null,
      "offset": [
        743,
        21760
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "183": {
      "fn": null,
      "offset": [
        743,
        21760
      ],
      "op": "DUP1",
      "path": "2"
    },
    "184": {
      "fn": null,
      "offset": [
        743,
        21760
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x6215597B"
    },
    "189": {
      "fn": null,
      "offset": [
        743,
        21760
      ],
      "op": "GT",
      "path": "2"
    },
    "190": {
      "fn": null,
      "offset": [
        743,
        21760
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x108"
    },
    "193": {
      "fn": null,
      "offset": [
        743,
        21760
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "194": {
      "fn": null,
      "offset": [
        743,
        21760
      ],
      "op": "DUP1",
      "path": "2"
    },
    "195": {
      "fn": null,
      "offset": [
        743,
        21760
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x6215597B"
    },
    "200": {
      "fn": null,
      "offset": [
        743,
        21760
      ],
      "op": "EQ",
      "path": "2"
    },
    "201": {
      "fn": null,
      "offset": [
        743,
        21760
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x240"
    },
    "204": {
      "fn": null,
      "offset": [
        743,
        21760
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "205": {
      "fn": null,
      "offset": [
        743,
        21760
      ],
      "op": "DUP1",
      "path": "2"
    },
    "206": {
      "fn": null,
      "offset": [
        743,
        21760
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x69D03738"
    },
    "211": {
      "fn": null,
      "offset": [
        743,
        21760
      ],
      "op": "EQ",
      "path": "2"
    },
    "212": {
      "fn": null,
      "offset": [
        743,
        21760
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x286"
    },
    "215": {
      "fn": null,
      "offset": [
        743,
        21760
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "216": {
      "fn": null,
      "offset": [
        743,
        21760
      ],
      "op": "DUP1",
      "path": "2"
    },
    "217": {
      "fn": null,
      "offset": [
        743,
        21760
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x715018A6"
    },
    "222": {
      "fn": null,
      "offset": [
        743,
        21760
      ],
      "op": "EQ",
      "path": "2"
    },
    "223": {
      "fn": null,
      "offset": [
        743,
        21760
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2A6"
    },
    "226": {
      "fn": null,
      "offset": [
        743,
        21760
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "227": {
      "fn": null,
      "offset": [
        743,
        21760
      ],
      "op": "DUP1",
      "path": "2"
    },
    "228": {
      "fn": null,
      "offset": [
        743,
        21760
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x72E185CE"
    },
    "233": {
      "fn": null,
      "offset": [
        743,
        21760
      ],
      "op": "EQ",
      "path": "2"
    },
    "234": {
      "fn": null,
      "offset": [
        743,
        21760
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2BB"
    },
    "237": {
      "fn": null,
      "offset": [
        743,
        21760
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "238": {
      "fn": null,
      "offset": [
        743,
        21760
      ],
      "op": "DUP1",
      "path": "2"
    },
    "239": {
      "fn": null,
      "offset": [
        743,
        21760
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x826B8EBD"
    },
    "244": {
      "fn": null,
      "offset": [
        743,
        21760
      ],
      "op": "EQ",
      "path": "2"
    },
    "245": {
      "fn": null,
      "offset": [
        743,
        21760
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2DB"
    },
    "248": {
      "fn": null,
      "offset": [
        743,
        21760
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "249": {
      "fn": null,
      "offset": [
        743,
        21760
      ],
      "op": "DUP1",
      "path": "2"
    },
    "250": {
      "fn": null,
      "offset": [
        743,
        21760
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x8A6655D6"
    },
    "255": {
      "fn": null,
      "offset": [
        743,
        21760
      ],
      "op": "EQ",
      "path": "2"
    },
    "256": {
      "fn": null,
      "offset": [
        743,
        21760
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2FB"
    },
    "259": {
      "fn": null,
      "offset": [
        743,
        21760
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "260": {
      "fn": null,
      "offset": [
        743,
        21760
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "262": {
      "fn": null,
      "offset": [
        743,
        21760
      ],
      "op": "DUP1",
      "path": "2"
    },
    "263": {
      "fn": null,
      "offset": [
        743,
        21760
      ],
      "op": "REVERT",
      "path": "2"
    },
    "264": {
      "fn": null,
      "offset": [
        743,
        21760
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "265": {
      "fn": null,
      "offset": [
        743,
        21760
      ],
      "op": "DUP1",
      "path": "2"
    },
    "266": {
      "fn": null,
      "offset": [
        743,
        21760
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x13CF08B"
    },
    "271": {
      "fn": null,
      "offset": [
        743,
        21760
      ],
      "op": "EQ",
      "path": "2"
    },
    "272": {
      "fn": null,
      "offset": [
        743,
        21760
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x150"
    },
    "275": {
      "fn": null,
      "offset": [
        743,
        21760
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "276": {
      "fn": null,
      "offset": [
        743,
        21760
      ],
      "op": "DUP1",
      "path": "2"
    },
    "277": {
      "fn": null,
      "offset": [
        743,
        21760
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x9265CE6"
    },
    "282": {
      "fn": null,
      "offset": [
        743,
        21760
      ],
      "op": "EQ",
      "path": "2"
    },
    "283": {
      "fn": null,
      "offset": [
        743,
        21760
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x18A"
    },
    "286": {
      "fn": null,
      "offset": [
        743,
        21760
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "287": {
      "fn": null,
      "offset": [
        743,
        21760
      ],
      "op": "DUP1",
      "path": "2"
    },
    "288": {
      "fn": null,
      "offset": [
        743,
        21760
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x10190EF1"
    },
    "293": {
      "fn": null,
      "offset": [
        743,
        21760
      ],
      "op": "EQ",
      "path": "2"
    },
    "294": {
      "fn": null,
      "offset": [
        743,
        21760
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1AC"
    },
    "297": {
      "fn": null,
      "offset": [
        743,
        21760
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "298": {
      "fn": null,
      "offset": [
        743,
        21760
      ],
      "op": "DUP1",
      "path": "2"
    },
    "299": {
      "fn": null,
      "offset": [
        743,
        21760
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x379D94CC"
    },
    "304": {
      "fn": null,
      "offset": [
        743,
        21760
      ],
      "op": "EQ",
      "path": "2"
    },
    "305": {
      "fn": null,
      "offset": [
        743,
        21760
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1E0"
    },
    "308": {
      "fn": null,
      "offset": [
        743,
        21760
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "309": {
      "fn": null,
      "offset": [
        743,
        21760
      ],
      "op": "DUP1",
      "path": "2"
    },
    "310": {
      "fn": null,
      "offset": [
        743,
        21760
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x61F9E9A8"
    },
    "315": {
      "fn": null,
      "offset": [
        743,
        21760
      ],
      "op": "EQ",
      "path": "2"
    },
    "316": {
      "fn": null,
      "offset": [
        743,
        21760
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x220"
    },
    "319": {
      "fn": null,
      "offset": [
        743,
        21760
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "320": {
      "fn": null,
      "offset": [
        743,
        21760
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "322": {
      "fn": null,
      "offset": [
        743,
        21760
      ],
      "op": "DUP1",
      "path": "2"
    },
    "323": {
      "fn": null,
      "offset": [
        743,
        21760
      ],
      "op": "REVERT",
      "path": "2"
    },
    "324": {
      "fn": null,
      "offset": [
        743,
        21760
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "325": {
      "fn": null,
      "offset": [
        743,
        21760
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "326": {
      "fn": null,
      "offset": [
        743,
        21760
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x14B"
    },
    "329": {
      "fn": null,
      "offset": [
        743,
        21760
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "330": {
      "fn": null,
      "offset": [
        743,
        21760
      ],
      "op": "STOP",
      "path": "2"
    },
    "331": {
      "fn": null,
      "offset": [
        743,
        21760
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "332": {
      "fn": null,
      "offset": [
        743,
        21760
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "334": {
      "fn": null,
      "offset": [
        743,
        21760
      ],
      "op": "DUP1",
      "path": "2"
    },
    "335": {
      "first_revert": true,
      "fn": null,
      "offset": [
        743,
        21760
      ],
      "op": "REVERT",
      "path": "2"
    },
    "336": {
      "offset": [
        2692,
        2738
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "337": {
      "fn": null,
      "offset": [
        2692,
        2738
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "338": {
      "fn": null,
      "offset": [
        2692,
        2738
      ],
      "op": "DUP1",
      "path": "2"
    },
    "339": {
      "fn": null,
      "offset": [
        2692,
        2738
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "340": {
      "fn": null,
      "offset": [
        2692,
        2738
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x15C"
    },
    "343": {
      "fn": null,
      "offset": [
        2692,
        2738
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "344": {
      "fn": null,
      "offset": [
        2692,
        2738
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "346": {
      "fn": null,
      "offset": [
        2692,
        2738
      ],
      "op": "DUP1",
      "path": "2"
    },
    "347": {
      "fn": null,
      "offset": [
        2692,
        2738
      ],
      "op": "REVERT",
      "path": "2"
    },
    "348": {
      "fn": null,
      "offset": [
        2692,
        2738
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "349": {
      "op": "POP"
    },
    "350": {
      "offset": [
        2692,
        2738
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x170"
    },
    "353": {
      "fn": null,
      "offset": [
        2692,
        2738
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x16B"
    },
    "356": {
      "fn": null,
      "offset": [
        2692,
        2738
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "357": {
      "fn": null,
      "offset": [
        2692,
        2738
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "359": {
      "fn": null,
      "offset": [
        2692,
        2738
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x28E8"
    },
    "362": {
      "fn": null,
      "jump": "i",
      "offset": [
        2692,
        2738
      ],
      "op": "JUMP",
      "path": "2"
    },
    "363": {
      "fn": null,
      "offset": [
        2692,
        2738
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "364": {
      "fn": null,
      "offset": [
        2692,
        2738
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4E6"
    },
    "367": {
      "fn": null,
      "jump": "i",
      "offset": [
        2692,
        2738
      ],
      "op": "JUMP",
      "path": "2"
    },
    "368": {
      "fn": null,
      "offset": [
        2692,
        2738
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "369": {
      "fn": null,
      "offset": [
        2692,
        2738
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "371": {
      "fn": null,
      "offset": [
        2692,
        2738
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "372": {
      "fn": null,
      "offset": [
        2692,
        2738
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x181"
    },
    "375": {
      "fn": null,
      "offset": [
        2692,
        2738
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "376": {
      "fn": null,
      "offset": [
        2692,
        2738
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "377": {
      "fn": null,
      "offset": [
        2692,
        2738
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "378": {
      "fn": null,
      "offset": [
        2692,
        2738
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "379": {
      "fn": null,
      "offset": [
        2692,
        2738
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "380": {
      "fn": null,
      "offset": [
        2692,
        2738
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "381": {
      "fn": null,
      "offset": [
        2692,
        2738
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2959"
    },
    "384": {
      "fn": null,
      "jump": "i",
      "offset": [
        2692,
        2738
      ],
      "op": "JUMP",
      "path": "2"
    },
    "385": {
      "fn": null,
      "offset": [
        2692,
        2738
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "386": {
      "fn": null,
      "offset": [
        2692,
        2738
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "388": {
      "fn": null,
      "offset": [
        2692,
        2738
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "389": {
      "fn": null,
      "offset": [
        2692,
        2738
      ],
      "op": "DUP1",
      "path": "2"
    },
    "390": {
      "fn": null,
      "offset": [
        2692,
        2738
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "391": {
      "fn": null,
      "offset": [
        2692,
        2738
      ],
      "op": "SUB",
      "path": "2"
    },
    "392": {
      "fn": null,
      "offset": [
        2692,
        2738
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "393": {
      "fn": null,
      "offset": [
        2692,
        2738
      ],
      "op": "RETURN",
      "path": "2"
    },
    "394": {
      "fn": "Governance.testHashing",
      "offset": [
        16338,
        16841
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "395": {
      "fn": "Governance.testHashing",
      "offset": [
        16338,
        16841
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "396": {
      "fn": "Governance.testHashing",
      "offset": [
        16338,
        16841
      ],
      "op": "DUP1",
      "path": "2"
    },
    "397": {
      "fn": "Governance.testHashing",
      "offset": [
        16338,
        16841
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "398": {
      "fn": "Governance.testHashing",
      "offset": [
        16338,
        16841
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x196"
    },
    "401": {
      "fn": "Governance.testHashing",
      "offset": [
        16338,
        16841
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "402": {
      "fn": "Governance.testHashing",
      "offset": [
        16338,
        16841
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "404": {
      "fn": "Governance.testHashing",
      "offset": [
        16338,
        16841
      ],
      "op": "DUP1",
      "path": "2"
    },
    "405": {
      "fn": "Governance.testHashing",
      "offset": [
        16338,
        16841
      ],
      "op": "REVERT",
      "path": "2"
    },
    "406": {
      "fn": "Governance.testHashing",
      "offset": [
        16338,
        16841
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "407": {
      "op": "POP"
    },
    "408": {
      "fn": "Governance.testHashing",
      "offset": [
        16338,
        16841
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1AA"
    },
    "411": {
      "fn": "Governance.testHashing",
      "offset": [
        16338,
        16841
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A5"
    },
    "414": {
      "fn": "Governance.testHashing",
      "offset": [
        16338,
        16841
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "415": {
      "fn": "Governance.testHashing",
      "offset": [
        16338,
        16841
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "417": {
      "fn": "Governance.testHashing",
      "offset": [
        16338,
        16841
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2A62"
    },
    "420": {
      "fn": "Governance.testHashing",
      "jump": "i",
      "offset": [
        16338,
        16841
      ],
      "op": "JUMP",
      "path": "2"
    },
    "421": {
      "fn": "Governance.testHashing",
      "offset": [
        16338,
        16841
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "422": {
      "fn": "Governance.testHashing",
      "offset": [
        16338,
        16841
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5B2"
    },
    "425": {
      "fn": "Governance.testHashing",
      "jump": "i",
      "offset": [
        16338,
        16841
      ],
      "op": "JUMP",
      "path": "2"
    },
    "426": {
      "fn": "Governance.testHashing",
      "offset": [
        16338,
        16841
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "427": {
      "fn": "Governance.testHashing",
      "offset": [
        16338,
        16841
      ],
      "op": "STOP",
      "path": "2"
    },
    "428": {
      "offset": [
        2388,
        2415
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "429": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "430": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DUP1",
      "path": "2"
    },
    "431": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "432": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1B8"
    },
    "435": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "436": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "438": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DUP1",
      "path": "2"
    },
    "439": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "REVERT",
      "path": "2"
    },
    "440": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "441": {
      "op": "POP"
    },
    "442": {
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1CC"
    },
    "445": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1C7"
    },
    "448": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "449": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "451": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x28E8"
    },
    "454": {
      "fn": "Governance.testHashing",
      "jump": "i",
      "offset": [
        2388,
        2415
      ],
      "op": "JUMP",
      "path": "2"
    },
    "455": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "456": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6F8"
    },
    "459": {
      "fn": "Governance.testHashing",
      "jump": "i",
      "offset": [
        2388,
        2415
      ],
      "op": "JUMP",
      "path": "2"
    },
    "460": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "461": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "463": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "464": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x181"
    },
    "467": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP9",
      "path": "2"
    },
    "468": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP8",
      "path": "2"
    },
    "469": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP7",
      "path": "2"
    },
    "470": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "471": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "472": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "473": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "474": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "475": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "476": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2AC1"
    },
    "479": {
      "fn": "Governance.testHashing",
      "jump": "i",
      "offset": [
        2388,
        2415
      ],
      "op": "JUMP",
      "path": "2"
    },
    "480": {
      "offset": [
        2525,
        2576
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "481": {
      "fn": "Governance.testHashing",
      "offset": [
        2525,
        2576
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "482": {
      "fn": "Governance.testHashing",
      "offset": [
        2525,
        2576
      ],
      "op": "DUP1",
      "path": "2"
    },
    "483": {
      "fn": "Governance.testHashing",
      "offset": [
        2525,
        2576
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "484": {
      "fn": "Governance.testHashing",
      "offset": [
        2525,
        2576
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1EC"
    },
    "487": {
      "fn": "Governance.testHashing",
      "offset": [
        2525,
        2576
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "488": {
      "fn": "Governance.testHashing",
      "offset": [
        2525,
        2576
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "490": {
      "fn": "Governance.testHashing",
      "offset": [
        2525,
        2576
      ],
      "op": "DUP1",
      "path": "2"
    },
    "491": {
      "fn": "Governance.testHashing",
      "offset": [
        2525,
        2576
      ],
      "op": "REVERT",
      "path": "2"
    },
    "492": {
      "fn": "Governance.testHashing",
      "offset": [
        2525,
        2576
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "493": {
      "op": "POP"
    },
    "494": {
      "offset": [
        2525,
        2576
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "496": {
      "fn": "Governance.testHashing",
      "offset": [
        2525,
        2576
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "497": {
      "fn": "Governance.testHashing",
      "offset": [
        2525,
        2576
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x206"
    },
    "500": {
      "fn": "Governance.testHashing",
      "offset": [
        2525,
        2576
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "501": {
      "fn": "Governance.testHashing",
      "offset": [
        2525,
        2576
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xF"
    },
    "503": {
      "fn": "Governance.testHashing",
      "offset": [
        2525,
        2576
      ],
      "op": "DUP2",
      "path": "2"
    },
    "504": {
      "fn": "Governance.testHashing",
      "offset": [
        2525,
        2576
      ],
      "op": "DUP2",
      "path": "2"
    },
    "505": {
      "fn": "Governance.testHashing",
      "offset": [
        2525,
        2576
      ],
      "op": "SIGNEXTEND",
      "path": "2"
    },
    "506": {
      "fn": "Governance.testHashing",
      "offset": [
        2525,
        2576
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "507": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "509": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "511": {
      "op": "SHL"
    },
    "512": {
      "offset": [
        2525,
        2576
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "513": {
      "fn": "Governance.testHashing",
      "offset": [
        2525,
        2576
      ],
      "op": "DIV",
      "path": "2"
    },
    "514": {
      "fn": "Governance.testHashing",
      "offset": [
        2525,
        2576
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "515": {
      "fn": "Governance.testHashing",
      "offset": [
        2525,
        2576
      ],
      "op": "SIGNEXTEND",
      "path": "2"
    },
    "516": {
      "fn": "Governance.testHashing",
      "offset": [
        2525,
        2576
      ],
      "op": "DUP3",
      "path": "2"
    },
    "517": {
      "fn": "Governance.testHashing",
      "offset": [
        2525,
        2576
      ],
      "op": "JUMP",
      "path": "2"
    },
    "518": {
      "fn": "Governance.testHashing",
      "offset": [
        2525,
        2576
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "519": {
      "fn": "Governance.testHashing",
      "offset": [
        2525,
        2576
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "521": {
      "fn": "Governance.testHashing",
      "offset": [
        2525,
        2576
      ],
      "op": "DUP1",
      "path": "2"
    },
    "522": {
      "fn": "Governance.testHashing",
      "offset": [
        2525,
        2576
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "523": {
      "op": "PUSH1",
      "value": "0xF"
    },
    "525": {
      "op": "SWAP4"
    },
    "526": {
      "op": "DUP5"
    },
    "527": {
      "op": "SIGNEXTEND"
    },
    "528": {
      "op": "DUP2"
    },
    "529": {
      "op": "MSTORE"
    },
    "530": {
      "op": "SWAP2"
    },
    "531": {
      "op": "SWAP1"
    },
    "532": {
      "op": "SWAP3"
    },
    "533": {
      "op": "SIGNEXTEND"
    },
    "534": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "536": {
      "op": "DUP3"
    },
    "537": {
      "op": "ADD"
    },
    "538": {
      "op": "MSTORE"
    },
    "539": {
      "op": "ADD"
    },
    "540": {
      "offset": [
        2525,
        2576
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x181"
    },
    "543": {
      "op": "JUMP"
    },
    "544": {
      "fn": "Governance.createTaskType",
      "offset": [
        11472,
        11792
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "545": {
      "fn": "Governance.createTaskType",
      "offset": [
        11472,
        11792
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "546": {
      "fn": "Governance.createTaskType",
      "offset": [
        11472,
        11792
      ],
      "op": "DUP1",
      "path": "2"
    },
    "547": {
      "fn": "Governance.createTaskType",
      "offset": [
        11472,
        11792
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "548": {
      "fn": "Governance.createTaskType",
      "offset": [
        11472,
        11792
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x22C"
    },
    "551": {
      "fn": "Governance.createTaskType",
      "offset": [
        11472,
        11792
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "552": {
      "fn": "Governance.createTaskType",
      "offset": [
        11472,
        11792
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "554": {
      "fn": "Governance.createTaskType",
      "offset": [
        11472,
        11792
      ],
      "op": "DUP1",
      "path": "2"
    },
    "555": {
      "fn": "Governance.createTaskType",
      "offset": [
        11472,
        11792
      ],
      "op": "REVERT",
      "path": "2"
    },
    "556": {
      "fn": "Governance.createTaskType",
      "offset": [
        11472,
        11792
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "557": {
      "op": "POP"
    },
    "558": {
      "fn": "Governance.createTaskType",
      "offset": [
        11472,
        11792
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1AA"
    },
    "561": {
      "fn": "Governance.createTaskType",
      "offset": [
        11472,
        11792
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x23B"
    },
    "564": {
      "fn": "Governance.createTaskType",
      "offset": [
        11472,
        11792
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "565": {
      "fn": "Governance.createTaskType",
      "offset": [
        11472,
        11792
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "567": {
      "fn": "Governance.createTaskType",
      "offset": [
        11472,
        11792
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2BAD"
    },
    "570": {
      "fn": "Governance.createTaskType",
      "jump": "i",
      "offset": [
        11472,
        11792
      ],
      "op": "JUMP",
      "path": "2"
    },
    "571": {
      "fn": "Governance.createTaskType",
      "offset": [
        11472,
        11792
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "572": {
      "fn": "Governance.createTaskType",
      "offset": [
        11472,
        11792
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x802"
    },
    "575": {
      "fn": "Governance.createTaskType",
      "jump": "i",
      "offset": [
        11472,
        11792
      ],
      "op": "JUMP",
      "path": "2"
    },
    "576": {
      "offset": [
        957,
        1032
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "577": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "578": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "DUP1",
      "path": "2"
    },
    "579": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "580": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x24C"
    },
    "583": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "584": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "586": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "DUP1",
      "path": "2"
    },
    "587": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "REVERT",
      "path": "2"
    },
    "588": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "589": {
      "op": "POP"
    },
    "590": {
      "offset": [
        957,
        1032
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x278"
    },
    "593": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x25B"
    },
    "596": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "597": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "599": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2C4A"
    },
    "602": {
      "fn": "Governance.createTaskType",
      "jump": "i",
      "offset": [
        957,
        1032
      ],
      "op": "JUMP",
      "path": "2"
    },
    "603": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "604": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "606": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "608": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "609": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "DUP2",
      "path": "2"
    },
    "610": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "611": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "613": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "614": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "DUP4",
      "path": "2"
    },
    "615": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "616": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "618": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "DUP1",
      "path": "2"
    },
    "619": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "DUP5",
      "path": "2"
    },
    "620": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "621": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "622": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "623": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "624": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "625": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "DUP3",
      "path": "2"
    },
    "626": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "627": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "628": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "629": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "630": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "DUP2",
      "path": "2"
    },
    "631": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "JUMP",
      "path": "2"
    },
    "632": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "633": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "635": {
      "fn": "Governance.createTaskType",
      "offset": [
        957,
        1032
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "636": {
      "op": "SWAP1"
    },
    "637": {
      "op": "DUP2"
    },
    "638": {
      "op": "MSTORE"
    },
    "639": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "641": {
      "op": "ADD"
    },
    "642": {
      "offset": [
        957,
        1032
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x181"
    },
    "645": {
      "op": "JUMP"
    },
    "646": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        8084,
        8185
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "647": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        8084,
        8185
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "648": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        8084,
        8185
      ],
      "op": "DUP1",
      "path": "2"
    },
    "649": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        8084,
        8185
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "650": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        8084,
        8185
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x292"
    },
    "653": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        8084,
        8185
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "654": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        8084,
        8185
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "656": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        8084,
        8185
      ],
      "op": "DUP1",
      "path": "2"
    },
    "657": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        8084,
        8185
      ],
      "op": "REVERT",
      "path": "2"
    },
    "658": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        8084,
        8185
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "659": {
      "op": "POP"
    },
    "660": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        8084,
        8185
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1AA"
    },
    "663": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        8084,
        8185
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2A1"
    },
    "666": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        8084,
        8185
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "667": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        8084,
        8185
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "669": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        8084,
        8185
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2C81"
    },
    "672": {
      "fn": "Governance.setNFTAddress",
      "jump": "i",
      "offset": [
        8084,
        8185
      ],
      "op": "JUMP",
      "path": "2"
    },
    "673": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        8084,
        8185
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "674": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        8084,
        8185
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x82A"
    },
    "677": {
      "fn": "Governance.setNFTAddress",
      "jump": "i",
      "offset": [
        8084,
        8185
      ],
      "op": "JUMP",
      "path": "2"
    },
    "678": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "679": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "680": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "DUP1",
      "path": "12"
    },
    "681": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "682": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2B2"
    },
    "685": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "686": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "688": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "DUP1",
      "path": "12"
    },
    "689": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "REVERT",
      "path": "12"
    },
    "690": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "691": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "POP",
      "path": "12"
    },
    "692": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1AA"
    },
    "695": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x876"
    },
    "698": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1652,
        1746
      ],
      "op": "JUMP",
      "path": "12"
    },
    "699": {
      "fn": "Governance.completeTask",
      "offset": [
        15155,
        16332
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "700": {
      "fn": "Governance.completeTask",
      "offset": [
        15155,
        16332
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "701": {
      "fn": "Governance.completeTask",
      "offset": [
        15155,
        16332
      ],
      "op": "DUP1",
      "path": "2"
    },
    "702": {
      "fn": "Governance.completeTask",
      "offset": [
        15155,
        16332
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "703": {
      "fn": "Governance.completeTask",
      "offset": [
        15155,
        16332
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2C7"
    },
    "706": {
      "fn": "Governance.completeTask",
      "offset": [
        15155,
        16332
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "707": {
      "fn": "Governance.completeTask",
      "offset": [
        15155,
        16332
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "709": {
      "fn": "Governance.completeTask",
      "offset": [
        15155,
        16332
      ],
      "op": "DUP1",
      "path": "2"
    },
    "710": {
      "fn": "Governance.completeTask",
      "offset": [
        15155,
        16332
      ],
      "op": "REVERT",
      "path": "2"
    },
    "711": {
      "fn": "Governance.completeTask",
      "offset": [
        15155,
        16332
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "712": {
      "op": "POP"
    },
    "713": {
      "fn": "Governance.completeTask",
      "offset": [
        15155,
        16332
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1AA"
    },
    "716": {
      "fn": "Governance.completeTask",
      "offset": [
        15155,
        16332
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2D6"
    },
    "719": {
      "fn": "Governance.completeTask",
      "offset": [
        15155,
        16332
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "720": {
      "fn": "Governance.completeTask",
      "offset": [
        15155,
        16332
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "722": {
      "fn": "Governance.completeTask",
      "offset": [
        15155,
        16332
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2D14"
    },
    "725": {
      "fn": "Governance.completeTask",
      "jump": "i",
      "offset": [
        15155,
        16332
      ],
      "op": "JUMP",
      "path": "2"
    },
    "726": {
      "fn": "Governance.completeTask",
      "offset": [
        15155,
        16332
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "727": {
      "fn": "Governance.completeTask",
      "offset": [
        15155,
        16332
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x8AC"
    },
    "730": {
      "fn": "Governance.completeTask",
      "jump": "i",
      "offset": [
        15155,
        16332
      ],
      "op": "JUMP",
      "path": "2"
    },
    "731": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4956,
        5925
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "732": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4956,
        5925
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "733": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4956,
        5925
      ],
      "op": "DUP1",
      "path": "2"
    },
    "734": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4956,
        5925
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "735": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4956,
        5925
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2E7"
    },
    "738": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4956,
        5925
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "739": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4956,
        5925
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "741": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4956,
        5925
      ],
      "op": "DUP1",
      "path": "2"
    },
    "742": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4956,
        5925
      ],
      "op": "REVERT",
      "path": "2"
    },
    "743": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4956,
        5925
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "744": {
      "op": "POP"
    },
    "745": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4956,
        5925
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x278"
    },
    "748": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4956,
        5925
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2F6"
    },
    "751": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4956,
        5925
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "752": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4956,
        5925
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "754": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4956,
        5925
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x28E8"
    },
    "757": {
      "fn": "Governance.getWinningVote",
      "jump": "i",
      "offset": [
        4956,
        5925
      ],
      "op": "JUMP",
      "path": "2"
    },
    "758": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4956,
        5925
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "759": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4956,
        5925
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xCB2"
    },
    "762": {
      "fn": "Governance.getWinningVote",
      "jump": "i",
      "offset": [
        4956,
        5925
      ],
      "op": "JUMP",
      "path": "2"
    },
    "763": {
      "fn": "Governance.vote",
      "offset": [
        9993,
        10657
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "764": {
      "fn": "Governance.vote",
      "offset": [
        9993,
        10657
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "765": {
      "fn": "Governance.vote",
      "offset": [
        9993,
        10657
      ],
      "op": "DUP1",
      "path": "2"
    },
    "766": {
      "fn": "Governance.vote",
      "offset": [
        9993,
        10657
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "767": {
      "fn": "Governance.vote",
      "offset": [
        9993,
        10657
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x307"
    },
    "770": {
      "fn": "Governance.vote",
      "offset": [
        9993,
        10657
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "771": {
      "fn": "Governance.vote",
      "offset": [
        9993,
        10657
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "773": {
      "fn": "Governance.vote",
      "offset": [
        9993,
        10657
      ],
      "op": "DUP1",
      "path": "2"
    },
    "774": {
      "fn": "Governance.vote",
      "offset": [
        9993,
        10657
      ],
      "op": "REVERT",
      "path": "2"
    },
    "775": {
      "fn": "Governance.vote",
      "offset": [
        9993,
        10657
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "776": {
      "op": "POP"
    },
    "777": {
      "fn": "Governance.vote",
      "offset": [
        9993,
        10657
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1AA"
    },
    "780": {
      "fn": "Governance.vote",
      "offset": [
        9993,
        10657
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x316"
    },
    "783": {
      "fn": "Governance.vote",
      "offset": [
        9993,
        10657
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "784": {
      "fn": "Governance.vote",
      "offset": [
        9993,
        10657
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "786": {
      "fn": "Governance.vote",
      "offset": [
        9993,
        10657
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2D6A"
    },
    "789": {
      "fn": "Governance.vote",
      "jump": "i",
      "offset": [
        9993,
        10657
      ],
      "op": "JUMP",
      "path": "2"
    },
    "790": {
      "fn": "Governance.vote",
      "offset": [
        9993,
        10657
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "791": {
      "fn": "Governance.vote",
      "offset": [
        9993,
        10657
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xEC8"
    },
    "794": {
      "fn": "Governance.vote",
      "jump": "i",
      "offset": [
        9993,
        10657
      ],
      "op": "JUMP",
      "path": "2"
    },
    "795": {
      "offset": [
        2773,
        2811
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "796": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "797": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "DUP1",
      "path": "2"
    },
    "798": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "799": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x327"
    },
    "802": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "803": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "805": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "DUP1",
      "path": "2"
    },
    "806": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "REVERT",
      "path": "2"
    },
    "807": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "808": {
      "op": "POP"
    },
    "809": {
      "offset": [
        2773,
        2811
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x33B"
    },
    "812": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x336"
    },
    "815": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "816": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "818": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x28E8"
    },
    "821": {
      "fn": "Governance.vote",
      "jump": "i",
      "offset": [
        2773,
        2811
      ],
      "op": "JUMP",
      "path": "2"
    },
    "822": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "823": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF01"
    },
    "826": {
      "fn": "Governance.vote",
      "jump": "i",
      "offset": [
        2773,
        2811
      ],
      "op": "JUMP",
      "path": "2"
    },
    "827": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "828": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "830": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "831": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x181"
    },
    "834": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "SWAP11",
      "path": "2"
    },
    "835": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "SWAP10",
      "path": "2"
    },
    "836": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "SWAP9",
      "path": "2"
    },
    "837": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "SWAP8",
      "path": "2"
    },
    "838": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "SWAP7",
      "path": "2"
    },
    "839": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "840": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "841": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "842": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "843": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "844": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "845": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2D96"
    },
    "848": {
      "fn": "Governance.vote",
      "jump": "i",
      "offset": [
        2773,
        2811
      ],
      "op": "JUMP",
      "path": "2"
    },
    "849": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "850": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "851": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "DUP1",
      "path": "12"
    },
    "852": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "853": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x35D"
    },
    "856": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "857": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "859": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "DUP1",
      "path": "12"
    },
    "860": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "REVERT",
      "path": "12"
    },
    "861": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "862": {
      "op": "POP"
    },
    "863": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 0,
      "value": "0x1"
    },
    "865": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "866": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "868": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "869": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "871": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "873": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "875": {
      "op": "SHL"
    },
    "876": {
      "op": "SUB"
    },
    "877": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "878": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "879": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "AND",
      "path": "12"
    },
    "880": {
      "op": "DUP2"
    },
    "881": {
      "op": "MSTORE"
    },
    "882": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "884": {
      "op": "ADD"
    },
    "885": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x181"
    },
    "888": {
      "op": "JUMP"
    },
    "889": {
      "fn": "Governance.getTaskById",
      "offset": [
        4443,
        4555
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "890": {
      "fn": "Governance.getTaskById",
      "offset": [
        4443,
        4555
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "891": {
      "fn": "Governance.getTaskById",
      "offset": [
        4443,
        4555
      ],
      "op": "DUP1",
      "path": "2"
    },
    "892": {
      "fn": "Governance.getTaskById",
      "offset": [
        4443,
        4555
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "893": {
      "fn": "Governance.getTaskById",
      "offset": [
        4443,
        4555
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x385"
    },
    "896": {
      "fn": "Governance.getTaskById",
      "offset": [
        4443,
        4555
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "897": {
      "fn": "Governance.getTaskById",
      "offset": [
        4443,
        4555
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "899": {
      "fn": "Governance.getTaskById",
      "offset": [
        4443,
        4555
      ],
      "op": "DUP1",
      "path": "2"
    },
    "900": {
      "fn": "Governance.getTaskById",
      "offset": [
        4443,
        4555
      ],
      "op": "REVERT",
      "path": "2"
    },
    "901": {
      "fn": "Governance.getTaskById",
      "offset": [
        4443,
        4555
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "902": {
      "op": "POP"
    },
    "903": {
      "fn": "Governance.getTaskById",
      "offset": [
        4443,
        4555
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x399"
    },
    "906": {
      "fn": "Governance.getTaskById",
      "offset": [
        4443,
        4555
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x394"
    },
    "909": {
      "fn": "Governance.getTaskById",
      "offset": [
        4443,
        4555
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "910": {
      "fn": "Governance.getTaskById",
      "offset": [
        4443,
        4555
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "912": {
      "fn": "Governance.getTaskById",
      "offset": [
        4443,
        4555
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x28E8"
    },
    "915": {
      "fn": "Governance.getTaskById",
      "jump": "i",
      "offset": [
        4443,
        4555
      ],
      "op": "JUMP",
      "path": "2"
    },
    "916": {
      "fn": "Governance.getTaskById",
      "offset": [
        4443,
        4555
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "917": {
      "fn": "Governance.getTaskById",
      "offset": [
        4443,
        4555
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1003"
    },
    "920": {
      "fn": "Governance.getTaskById",
      "jump": "i",
      "offset": [
        4443,
        4555
      ],
      "op": "JUMP",
      "path": "2"
    },
    "921": {
      "fn": "Governance.getTaskById",
      "offset": [
        4443,
        4555
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "922": {
      "fn": "Governance.getTaskById",
      "offset": [
        4443,
        4555
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "924": {
      "fn": "Governance.getTaskById",
      "offset": [
        4443,
        4555
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "925": {
      "fn": "Governance.getTaskById",
      "offset": [
        4443,
        4555
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x181"
    },
    "928": {
      "fn": "Governance.getTaskById",
      "offset": [
        4443,
        4555
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "929": {
      "fn": "Governance.getTaskById",
      "offset": [
        4443,
        4555
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "930": {
      "fn": "Governance.getTaskById",
      "offset": [
        4443,
        4555
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2E17"
    },
    "933": {
      "fn": "Governance.getTaskById",
      "jump": "i",
      "offset": [
        4443,
        4555
      ],
      "op": "JUMP",
      "path": "2"
    },
    "934": {
      "offset": [
        2817,
        2846
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "935": {
      "fn": "Governance.getTaskById",
      "offset": [
        2817,
        2846
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "936": {
      "fn": "Governance.getTaskById",
      "offset": [
        2817,
        2846
      ],
      "op": "DUP1",
      "path": "2"
    },
    "937": {
      "fn": "Governance.getTaskById",
      "offset": [
        2817,
        2846
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "938": {
      "fn": "Governance.getTaskById",
      "offset": [
        2817,
        2846
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3B2"
    },
    "941": {
      "fn": "Governance.getTaskById",
      "offset": [
        2817,
        2846
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "942": {
      "fn": "Governance.getTaskById",
      "offset": [
        2817,
        2846
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "944": {
      "fn": "Governance.getTaskById",
      "offset": [
        2817,
        2846
      ],
      "op": "DUP1",
      "path": "2"
    },
    "945": {
      "fn": "Governance.getTaskById",
      "offset": [
        2817,
        2846
      ],
      "op": "REVERT",
      "path": "2"
    },
    "946": {
      "fn": "Governance.getTaskById",
      "offset": [
        2817,
        2846
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "947": {
      "fn": "Governance.getTaskById",
      "offset": [
        2817,
        2846
      ],
      "op": "POP",
      "path": "2"
    },
    "948": {
      "fn": "Governance.getTaskById",
      "offset": [
        2817,
        2846
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x278"
    },
    "951": {
      "fn": "Governance.getTaskById",
      "offset": [
        2817,
        2846
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA"
    },
    "953": {
      "fn": "Governance.getTaskById",
      "offset": [
        2817,
        2846
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "954": {
      "fn": "Governance.getTaskById",
      "offset": [
        2817,
        2846
      ],
      "op": "DUP2",
      "path": "2"
    },
    "955": {
      "fn": "Governance.getTaskById",
      "offset": [
        2817,
        2846
      ],
      "op": "JUMP",
      "path": "2"
    },
    "956": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6674,
        7974
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "957": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6674,
        7974
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "958": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6674,
        7974
      ],
      "op": "DUP1",
      "path": "2"
    },
    "959": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6674,
        7974
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "960": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6674,
        7974
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3C8"
    },
    "963": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6674,
        7974
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "964": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6674,
        7974
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "966": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6674,
        7974
      ],
      "op": "DUP1",
      "path": "2"
    },
    "967": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6674,
        7974
      ],
      "op": "REVERT",
      "path": "2"
    },
    "968": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6674,
        7974
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "969": {
      "op": "POP"
    },
    "970": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6674,
        7974
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3DC"
    },
    "973": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6674,
        7974
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3D7"
    },
    "976": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6674,
        7974
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "977": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6674,
        7974
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "979": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6674,
        7974
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2EE4"
    },
    "982": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        6674,
        7974
      ],
      "op": "JUMP",
      "path": "2"
    },
    "983": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6674,
        7974
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "984": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6674,
        7974
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1145"
    },
    "987": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        6674,
        7974
      ],
      "op": "JUMP",
      "path": "2"
    },
    "988": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6674,
        7974
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "989": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6674,
        7974
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "991": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6674,
        7974
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "992": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6674,
        7974
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x181"
    },
    "995": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6674,
        7974
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "996": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6674,
        7974
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "997": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6674,
        7974
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2EFF"
    },
    "1000": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        6674,
        7974
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1001": {
      "fn": "Governance.createProposal",
      "offset": [
        10703,
        11465
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1002": {
      "fn": "Governance.createProposal",
      "offset": [
        10703,
        11465
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "1003": {
      "fn": "Governance.createProposal",
      "offset": [
        10703,
        11465
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1004": {
      "fn": "Governance.createProposal",
      "offset": [
        10703,
        11465
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1005": {
      "fn": "Governance.createProposal",
      "offset": [
        10703,
        11465
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3F5"
    },
    "1008": {
      "fn": "Governance.createProposal",
      "offset": [
        10703,
        11465
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1009": {
      "fn": "Governance.createProposal",
      "offset": [
        10703,
        11465
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1011": {
      "fn": "Governance.createProposal",
      "offset": [
        10703,
        11465
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1012": {
      "fn": "Governance.createProposal",
      "offset": [
        10703,
        11465
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1013": {
      "fn": "Governance.createProposal",
      "offset": [
        10703,
        11465
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1014": {
      "op": "POP"
    },
    "1015": {
      "fn": "Governance.createProposal",
      "offset": [
        10703,
        11465
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1AA"
    },
    "1018": {
      "fn": "Governance.createProposal",
      "offset": [
        10703,
        11465
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x404"
    },
    "1021": {
      "fn": "Governance.createProposal",
      "offset": [
        10703,
        11465
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1022": {
      "fn": "Governance.createProposal",
      "offset": [
        10703,
        11465
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1024": {
      "fn": "Governance.createProposal",
      "offset": [
        10703,
        11465
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2F61"
    },
    "1027": {
      "fn": "Governance.createProposal",
      "jump": "i",
      "offset": [
        10703,
        11465
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1028": {
      "fn": "Governance.createProposal",
      "offset": [
        10703,
        11465
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1029": {
      "fn": "Governance.createProposal",
      "offset": [
        10703,
        11465
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1519"
    },
    "1032": {
      "fn": "Governance.createProposal",
      "jump": "i",
      "offset": [
        10703,
        11465
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1033": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12736,
        14582
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1034": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12736,
        14582
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "1035": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12736,
        14582
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1036": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12736,
        14582
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1037": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12736,
        14582
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x415"
    },
    "1040": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12736,
        14582
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1041": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12736,
        14582
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1043": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12736,
        14582
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1044": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12736,
        14582
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1045": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12736,
        14582
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1046": {
      "op": "POP"
    },
    "1047": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12736,
        14582
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1AA"
    },
    "1050": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12736,
        14582
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x424"
    },
    "1053": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12736,
        14582
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1054": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12736,
        14582
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1056": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12736,
        14582
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x28E8"
    },
    "1059": {
      "fn": "Governance.claimRandomTaskForVerification",
      "jump": "i",
      "offset": [
        12736,
        14582
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1060": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12736,
        14582
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1061": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12736,
        14582
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x162E"
    },
    "1064": {
      "fn": "Governance.claimRandomTaskForVerification",
      "jump": "i",
      "offset": [
        12736,
        14582
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1065": {
      "fn": "Governance.submitVerification",
      "offset": [
        17547,
        21167
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1066": {
      "fn": "Governance.submitVerification",
      "offset": [
        17547,
        21167
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "1067": {
      "fn": "Governance.submitVerification",
      "offset": [
        17547,
        21167
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1068": {
      "fn": "Governance.submitVerification",
      "offset": [
        17547,
        21167
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1069": {
      "fn": "Governance.submitVerification",
      "offset": [
        17547,
        21167
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x435"
    },
    "1072": {
      "fn": "Governance.submitVerification",
      "offset": [
        17547,
        21167
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1073": {
      "fn": "Governance.submitVerification",
      "offset": [
        17547,
        21167
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1075": {
      "fn": "Governance.submitVerification",
      "offset": [
        17547,
        21167
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1076": {
      "fn": "Governance.submitVerification",
      "offset": [
        17547,
        21167
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1077": {
      "fn": "Governance.submitVerification",
      "offset": [
        17547,
        21167
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1078": {
      "op": "POP"
    },
    "1079": {
      "fn": "Governance.submitVerification",
      "offset": [
        17547,
        21167
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1AA"
    },
    "1082": {
      "fn": "Governance.submitVerification",
      "offset": [
        17547,
        21167
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x444"
    },
    "1085": {
      "fn": "Governance.submitVerification",
      "offset": [
        17547,
        21167
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1086": {
      "fn": "Governance.submitVerification",
      "offset": [
        17547,
        21167
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1088": {
      "fn": "Governance.submitVerification",
      "offset": [
        17547,
        21167
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2FB1"
    },
    "1091": {
      "fn": "Governance.submitVerification",
      "jump": "i",
      "offset": [
        17547,
        21167
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1092": {
      "fn": "Governance.submitVerification",
      "offset": [
        17547,
        21167
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1093": {
      "fn": "Governance.submitVerification",
      "offset": [
        17547,
        21167
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1976"
    },
    "1096": {
      "fn": "Governance.submitVerification",
      "jump": "i",
      "offset": [
        17547,
        21167
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1097": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1098": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "1099": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1100": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "1101": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x455"
    },
    "1104": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "1105": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1107": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1108": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "REVERT",
      "path": "12"
    },
    "1109": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1110": {
      "op": "POP"
    },
    "1111": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1AA"
    },
    "1114": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x464"
    },
    "1117": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "1118": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "1120": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2C81"
    },
    "1123": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1901,
        2093
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1124": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1125": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x211C"
    },
    "1128": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1901,
        2093
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1129": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        5972,
        6599
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1130": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        5972,
        6599
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "1131": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        5972,
        6599
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1132": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        5972,
        6599
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1133": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        5972,
        6599
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x475"
    },
    "1136": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        5972,
        6599
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1137": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        5972,
        6599
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1139": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        5972,
        6599
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1140": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        5972,
        6599
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1141": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        5972,
        6599
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1142": {
      "op": "POP"
    },
    "1143": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        5972,
        6599
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x489"
    },
    "1146": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        5972,
        6599
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x484"
    },
    "1149": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        5972,
        6599
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1150": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        5972,
        6599
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1152": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        5972,
        6599
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x28E8"
    },
    "1155": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "jump": "i",
      "offset": [
        5972,
        6599
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1156": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        5972,
        6599
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1157": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        5972,
        6599
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x21B7"
    },
    "1160": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "jump": "i",
      "offset": [
        5972,
        6599
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1161": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        5972,
        6599
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1162": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        5972,
        6599
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1164": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        5972,
        6599
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1165": {
      "op": "SWAP1"
    },
    "1166": {
      "op": "ISZERO"
    },
    "1167": {
      "op": "ISZERO"
    },
    "1168": {
      "op": "DUP2"
    },
    "1169": {
      "op": "MSTORE"
    },
    "1170": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1172": {
      "op": "ADD"
    },
    "1173": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        5972,
        6599
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x181"
    },
    "1176": {
      "op": "JUMP"
    },
    "1177": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8311,
        9532
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1178": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8311,
        9532
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "1179": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8311,
        9532
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1180": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8311,
        9532
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1181": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8311,
        9532
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4A5"
    },
    "1184": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8311,
        9532
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1185": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8311,
        9532
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1187": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8311,
        9532
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1188": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8311,
        9532
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1189": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8311,
        9532
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1190": {
      "op": "POP"
    },
    "1191": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8311,
        9532
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1AA"
    },
    "1194": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8311,
        9532
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4B4"
    },
    "1197": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8311,
        9532
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1198": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8311,
        9532
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1200": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8311,
        9532
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3000"
    },
    "1203": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "jump": "i",
      "offset": [
        8311,
        9532
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1204": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8311,
        9532
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1205": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8311,
        9532
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2249"
    },
    "1208": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "jump": "i",
      "offset": [
        8311,
        9532
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1209": {
      "fn": "Governance.getVotes",
      "offset": [
        4561,
        4950
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1210": {
      "fn": "Governance.getVotes",
      "offset": [
        4561,
        4950
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "1211": {
      "fn": "Governance.getVotes",
      "offset": [
        4561,
        4950
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1212": {
      "fn": "Governance.getVotes",
      "offset": [
        4561,
        4950
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1213": {
      "fn": "Governance.getVotes",
      "offset": [
        4561,
        4950
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4C5"
    },
    "1216": {
      "fn": "Governance.getVotes",
      "offset": [
        4561,
        4950
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1217": {
      "fn": "Governance.getVotes",
      "offset": [
        4561,
        4950
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1219": {
      "fn": "Governance.getVotes",
      "offset": [
        4561,
        4950
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1220": {
      "fn": "Governance.getVotes",
      "offset": [
        4561,
        4950
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1221": {
      "fn": "Governance.getVotes",
      "offset": [
        4561,
        4950
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1222": {
      "op": "POP"
    },
    "1223": {
      "fn": "Governance.getVotes",
      "offset": [
        4561,
        4950
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4D9"
    },
    "1226": {
      "fn": "Governance.getVotes",
      "offset": [
        4561,
        4950
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4D4"
    },
    "1229": {
      "fn": "Governance.getVotes",
      "offset": [
        4561,
        4950
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1230": {
      "fn": "Governance.getVotes",
      "offset": [
        4561,
        4950
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1232": {
      "fn": "Governance.getVotes",
      "offset": [
        4561,
        4950
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x28E8"
    },
    "1235": {
      "fn": "Governance.getVotes",
      "jump": "i",
      "offset": [
        4561,
        4950
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1236": {
      "fn": "Governance.getVotes",
      "offset": [
        4561,
        4950
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1237": {
      "fn": "Governance.getVotes",
      "offset": [
        4561,
        4950
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x23E6"
    },
    "1240": {
      "fn": "Governance.getVotes",
      "jump": "i",
      "offset": [
        4561,
        4950
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1241": {
      "fn": "Governance.getVotes",
      "offset": [
        4561,
        4950
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1242": {
      "fn": "Governance.getVotes",
      "offset": [
        4561,
        4950
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1244": {
      "fn": "Governance.getVotes",
      "offset": [
        4561,
        4950
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1245": {
      "fn": "Governance.getVotes",
      "offset": [
        4561,
        4950
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x181"
    },
    "1248": {
      "fn": "Governance.getVotes",
      "offset": [
        4561,
        4950
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1249": {
      "fn": "Governance.getVotes",
      "offset": [
        4561,
        4950
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1250": {
      "fn": "Governance.getVotes",
      "offset": [
        4561,
        4950
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x303C"
    },
    "1253": {
      "fn": "Governance.getVotes",
      "jump": "i",
      "offset": [
        4561,
        4950
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1254": {
      "offset": [
        2692,
        2738
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1255": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "1257": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1259": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1260": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1262": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1263": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1264": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1265": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1267": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1268": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1269": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1270": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1271": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1272": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1273": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x501"
    },
    "1276": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1277": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3084"
    },
    "1280": {
      "fn": "Governance.getVotes",
      "jump": "i",
      "offset": [
        2692,
        2738
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1281": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1282": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1283": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "1285": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "ADD",
      "path": "2"
    },
    "1286": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1288": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1289": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1290": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "DIV",
      "path": "2"
    },
    "1291": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "MUL",
      "path": "2"
    },
    "1292": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1294": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "ADD",
      "path": "2"
    },
    "1295": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1297": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1298": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1299": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1300": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "ADD",
      "path": "2"
    },
    "1301": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1303": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1304": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1305": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1306": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1307": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1308": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1309": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1310": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1311": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1313": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "ADD",
      "path": "2"
    },
    "1314": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1315": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1316": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1317": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x52D"
    },
    "1320": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1321": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3084"
    },
    "1324": {
      "fn": "Governance.getVotes",
      "jump": "i",
      "offset": [
        2692,
        2738
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1325": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1326": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1327": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1328": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x57A"
    },
    "1331": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1332": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1333": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "1335": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "LT",
      "path": "2"
    },
    "1336": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x54F"
    },
    "1339": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1340": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "1343": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1344": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1345": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1346": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "DIV",
      "path": "2"
    },
    "1347": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "MUL",
      "path": "2"
    },
    "1348": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1349": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1350": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1351": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1353": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "ADD",
      "path": "2"
    },
    "1354": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1355": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x57A"
    },
    "1358": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1359": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1360": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1361": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "ADD",
      "path": "2"
    },
    "1362": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1363": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1364": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1366": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1367": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1369": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1371": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1372": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1373": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1374": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1375": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1376": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1377": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1378": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1379": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "1381": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "ADD",
      "path": "2"
    },
    "1382": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1383": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1385": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "ADD",
      "path": "2"
    },
    "1386": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1387": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1388": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "GT",
      "path": "2"
    },
    "1389": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x55D"
    },
    "1392": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1393": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1394": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1395": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "SUB",
      "path": "2"
    },
    "1396": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "1398": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "AND",
      "path": "2"
    },
    "1399": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1400": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "ADD",
      "path": "2"
    },
    "1401": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1402": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1403": {
      "op": "POP"
    },
    "1404": {
      "op": "POP"
    },
    "1405": {
      "op": "POP"
    },
    "1406": {
      "op": "POP"
    },
    "1407": {
      "offset": [
        2692,
        2738
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "1409": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1410": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "ADD",
      "path": "2"
    },
    "1411": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1412": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "1414": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1415": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "1416": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "ADD",
      "path": "2"
    },
    "1417": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1418": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1419": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1420": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "1423": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "AND",
      "path": "2"
    },
    "1424": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1425": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "1431": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1432": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1433": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "AND",
      "path": "2"
    },
    "1434": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1435": {
      "op": "POP"
    },
    "1436": {
      "offset": [
        2692,
        2738
      ],
      "op": "PUSH6",
      "path": "2",
      "value": "0x10000000000"
    },
    "1443": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1444": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "DIV",
      "path": "2"
    },
    "1445": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1446": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "AND",
      "path": "2"
    },
    "1447": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1448": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1450": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "1452": {
      "op": "SHL"
    },
    "1453": {
      "offset": [
        2692,
        2738
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1454": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "DIV",
      "path": "2"
    },
    "1455": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "AND",
      "path": "2"
    },
    "1456": {
      "fn": "Governance.getVotes",
      "offset": [
        2692,
        2738
      ],
      "op": "DUP6",
      "path": "2"
    },
    "1457": {
      "fn": "Governance.getVotes",
      "jump": "o",
      "offset": [
        2692,
        2738
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1458": {
      "fn": "Governance.testHashing",
      "offset": [
        16338,
        16841
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1459": {
      "fn": "Governance.testHashing",
      "offset": [
        16439,
        16461
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1461": {
      "fn": "Governance.testHashing",
      "offset": [
        16481,
        16488
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1462": {
      "fn": "Governance.testHashing",
      "offset": [
        16489,
        16490
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1464": {
      "fn": "Governance.testHashing",
      "offset": [
        16481,
        16491
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1465": {
      "fn": "Governance.testHashing",
      "offset": [
        16481,
        16491
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1466": {
      "fn": "Governance.testHashing",
      "offset": [
        16481,
        16491
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1467": {
      "fn": "Governance.testHashing",
      "offset": [
        16481,
        16491
      ],
      "op": "LT",
      "path": "2"
    },
    "1468": {
      "fn": "Governance.testHashing",
      "offset": [
        16481,
        16491
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5C7"
    },
    "1471": {
      "fn": "Governance.testHashing",
      "offset": [
        16481,
        16491
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1472": {
      "fn": "Governance.testHashing",
      "offset": [
        16481,
        16491
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5C7"
    },
    "1475": {
      "fn": "Governance.testHashing",
      "offset": [
        16481,
        16491
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x30BE"
    },
    "1478": {
      "fn": "Governance.testHashing",
      "jump": "i",
      "offset": [
        16481,
        16491
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1479": {
      "fn": "Governance.testHashing",
      "offset": [
        16481,
        16491
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1480": {
      "fn": "Governance.testHashing",
      "offset": [
        16481,
        16491
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1482": {
      "fn": "Governance.testHashing",
      "offset": [
        16481,
        16491
      ],
      "op": "MUL",
      "path": "2"
    },
    "1483": {
      "fn": "Governance.testHashing",
      "offset": [
        16481,
        16491
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1485": {
      "fn": "Governance.testHashing",
      "offset": [
        16481,
        16491
      ],
      "op": "ADD",
      "path": "2"
    },
    "1486": {
      "fn": "Governance.testHashing",
      "offset": [
        16481,
        16491
      ],
      "op": "ADD",
      "path": "2"
    },
    "1487": {
      "fn": "Governance.testHashing",
      "offset": [
        16481,
        16491
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1488": {
      "fn": "Governance.testHashing",
      "offset": [
        16464,
        16492
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1490": {
      "fn": "Governance.testHashing",
      "offset": [
        16464,
        16492
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1491": {
      "fn": "Governance.testHashing",
      "offset": [
        16464,
        16492
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1493": {
      "fn": "Governance.testHashing",
      "offset": [
        16464,
        16492
      ],
      "op": "ADD",
      "path": "2"
    },
    "1494": {
      "fn": "Governance.testHashing",
      "offset": [
        16464,
        16492
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5E1"
    },
    "1497": {
      "fn": "Governance.testHashing",
      "offset": [
        16464,
        16492
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1498": {
      "op": "DUP2"
    },
    "1499": {
      "op": "MSTORE"
    },
    "1500": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1502": {
      "op": "ADD"
    },
    "1503": {
      "op": "SWAP1"
    },
    "1504": {
      "op": "JUMP"
    },
    "1505": {
      "fn": "Governance.testHashing",
      "offset": [
        16464,
        16492
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1506": {
      "fn": "Governance.testHashing",
      "offset": [
        16464,
        16492
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1508": {
      "fn": "Governance.testHashing",
      "offset": [
        16464,
        16492
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1509": {
      "fn": "Governance.testHashing",
      "offset": [
        16464,
        16492
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1511": {
      "fn": "Governance.testHashing",
      "offset": [
        16464,
        16492
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1512": {
      "fn": "Governance.testHashing",
      "offset": [
        16464,
        16492
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1513": {
      "fn": "Governance.testHashing",
      "offset": [
        16464,
        16492
      ],
      "op": "SUB",
      "path": "2"
    },
    "1514": {
      "fn": "Governance.testHashing",
      "offset": [
        16464,
        16492
      ],
      "op": "SUB",
      "path": "2"
    },
    "1515": {
      "fn": "Governance.testHashing",
      "offset": [
        16464,
        16492
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1516": {
      "fn": "Governance.testHashing",
      "offset": [
        16464,
        16492
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1517": {
      "fn": "Governance.testHashing",
      "offset": [
        16464,
        16492
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1518": {
      "fn": "Governance.testHashing",
      "offset": [
        16464,
        16492
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1520": {
      "fn": "Governance.testHashing",
      "offset": [
        16464,
        16492
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1521": {
      "fn": "Governance.testHashing",
      "offset": [
        16439,
        16492
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1522": {
      "fn": "Governance.testHashing",
      "offset": [
        16439,
        16492
      ],
      "op": "POP",
      "path": "2"
    },
    "1523": {
      "branch": 98,
      "fn": "Governance.testHashing",
      "offset": [
        16505,
        16513
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1524": {
      "fn": "Governance.testHashing",
      "offset": [
        16502,
        16695
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1525": {
      "fn": "Governance.testHashing",
      "offset": [
        16502,
        16695
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x66D"
    },
    "1528": {
      "branch": 98,
      "fn": "Governance.testHashing",
      "offset": [
        16502,
        16695
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1529": {
      "fn": "Governance.testHashing",
      "offset": [
        16533,
        16542
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1531": {
      "fn": "Governance.testHashing",
      "offset": [
        16529,
        16685
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1532": {
      "fn": "Governance.testHashing",
      "offset": [
        16552,
        16559
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1533": {
      "fn": "Governance.testHashing",
      "offset": [
        16552,
        16566
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1534": {
      "fn": "Governance.testHashing",
      "offset": [
        16548,
        16549
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1535": {
      "fn": "Governance.testHashing",
      "offset": [
        16548,
        16566
      ],
      "op": "LT",
      "path": "2"
    },
    "1536": {
      "fn": "Governance.testHashing",
      "offset": [
        16529,
        16685
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1537": {
      "fn": "Governance.testHashing",
      "offset": [
        16529,
        16685
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x66B"
    },
    "1540": {
      "fn": "Governance.testHashing",
      "offset": [
        16529,
        16685
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1541": {
      "fn": "Governance.testHashing",
      "offset": [
        16626,
        16633
      ],
      "op": "DUP4",
      "path": "2",
      "statement": 1
    },
    "1542": {
      "fn": "Governance.testHashing",
      "offset": [
        16634,
        16635
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1543": {
      "fn": "Governance.testHashing",
      "offset": [
        16626,
        16636
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1544": {
      "fn": "Governance.testHashing",
      "offset": [
        16626,
        16636
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1545": {
      "fn": "Governance.testHashing",
      "offset": [
        16626,
        16636
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1546": {
      "fn": "Governance.testHashing",
      "offset": [
        16626,
        16636
      ],
      "op": "LT",
      "path": "2"
    },
    "1547": {
      "fn": "Governance.testHashing",
      "offset": [
        16626,
        16636
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x616"
    },
    "1550": {
      "fn": "Governance.testHashing",
      "offset": [
        16626,
        16636
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1551": {
      "fn": "Governance.testHashing",
      "offset": [
        16626,
        16636
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x616"
    },
    "1554": {
      "fn": "Governance.testHashing",
      "offset": [
        16626,
        16636
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x30BE"
    },
    "1557": {
      "fn": "Governance.testHashing",
      "jump": "i",
      "offset": [
        16626,
        16636
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1558": {
      "fn": "Governance.testHashing",
      "offset": [
        16626,
        16636
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1559": {
      "fn": "Governance.testHashing",
      "offset": [
        16626,
        16636
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1561": {
      "fn": "Governance.testHashing",
      "offset": [
        16626,
        16636
      ],
      "op": "MUL",
      "path": "2"
    },
    "1562": {
      "fn": "Governance.testHashing",
      "offset": [
        16626,
        16636
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1564": {
      "fn": "Governance.testHashing",
      "offset": [
        16626,
        16636
      ],
      "op": "ADD",
      "path": "2"
    },
    "1565": {
      "fn": "Governance.testHashing",
      "offset": [
        16626,
        16636
      ],
      "op": "ADD",
      "path": "2"
    },
    "1566": {
      "fn": "Governance.testHashing",
      "offset": [
        16626,
        16636
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1567": {
      "fn": "Governance.testHashing",
      "offset": [
        16609,
        16637
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1569": {
      "fn": "Governance.testHashing",
      "offset": [
        16609,
        16637
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1570": {
      "fn": "Governance.testHashing",
      "offset": [
        16609,
        16637
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1572": {
      "fn": "Governance.testHashing",
      "offset": [
        16609,
        16637
      ],
      "op": "ADD",
      "path": "2"
    },
    "1573": {
      "fn": "Governance.testHashing",
      "offset": [
        16609,
        16637
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x630"
    },
    "1576": {
      "fn": "Governance.testHashing",
      "offset": [
        16609,
        16637
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1577": {
      "op": "DUP2"
    },
    "1578": {
      "op": "MSTORE"
    },
    "1579": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1581": {
      "op": "ADD"
    },
    "1582": {
      "op": "SWAP1"
    },
    "1583": {
      "op": "JUMP"
    },
    "1584": {
      "fn": "Governance.testHashing",
      "offset": [
        16609,
        16637
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1585": {
      "fn": "Governance.testHashing",
      "offset": [
        16609,
        16637
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1587": {
      "fn": "Governance.testHashing",
      "offset": [
        16609,
        16637
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1588": {
      "fn": "Governance.testHashing",
      "offset": [
        16609,
        16637
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1590": {
      "fn": "Governance.testHashing",
      "offset": [
        16609,
        16637
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1591": {
      "fn": "Governance.testHashing",
      "offset": [
        16609,
        16637
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1592": {
      "fn": "Governance.testHashing",
      "offset": [
        16609,
        16637
      ],
      "op": "SUB",
      "path": "2"
    },
    "1593": {
      "fn": "Governance.testHashing",
      "offset": [
        16609,
        16637
      ],
      "op": "SUB",
      "path": "2"
    },
    "1594": {
      "fn": "Governance.testHashing",
      "offset": [
        16609,
        16637
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1595": {
      "fn": "Governance.testHashing",
      "offset": [
        16609,
        16637
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1596": {
      "fn": "Governance.testHashing",
      "offset": [
        16609,
        16637
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1597": {
      "fn": "Governance.testHashing",
      "offset": [
        16609,
        16637
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1599": {
      "fn": "Governance.testHashing",
      "offset": [
        16609,
        16637
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1600": {
      "fn": "Governance.testHashing",
      "offset": [
        16599,
        16638
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1601": {
      "fn": "Governance.testHashing",
      "offset": [
        16599,
        16638
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1602": {
      "fn": "Governance.testHashing",
      "offset": [
        16599,
        16638
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1603": {
      "fn": "Governance.testHashing",
      "offset": [
        16599,
        16638
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1605": {
      "fn": "Governance.testHashing",
      "offset": [
        16599,
        16638
      ],
      "op": "ADD",
      "path": "2"
    },
    "1606": {
      "fn": "Governance.testHashing",
      "offset": [
        16599,
        16638
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1607": {
      "fn": "Governance.testHashing",
      "offset": [
        16586,
        16593
      ],
      "op": "DUP5",
      "path": "2"
    },
    "1608": {
      "fn": "Governance.testHashing",
      "offset": [
        16594,
        16595
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1609": {
      "fn": "Governance.testHashing",
      "offset": [
        16586,
        16596
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1610": {
      "fn": "Governance.testHashing",
      "offset": [
        16586,
        16596
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1611": {
      "fn": "Governance.testHashing",
      "offset": [
        16586,
        16596
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1612": {
      "fn": "Governance.testHashing",
      "offset": [
        16586,
        16596
      ],
      "op": "LT",
      "path": "2"
    },
    "1613": {
      "fn": "Governance.testHashing",
      "offset": [
        16586,
        16596
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x658"
    },
    "1616": {
      "fn": "Governance.testHashing",
      "offset": [
        16586,
        16596
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1617": {
      "fn": "Governance.testHashing",
      "offset": [
        16586,
        16596
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x658"
    },
    "1620": {
      "fn": "Governance.testHashing",
      "offset": [
        16586,
        16596
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x30BE"
    },
    "1623": {
      "fn": "Governance.testHashing",
      "jump": "i",
      "offset": [
        16586,
        16596
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1624": {
      "fn": "Governance.testHashing",
      "offset": [
        16586,
        16596
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1625": {
      "fn": "Governance.testHashing",
      "offset": [
        16586,
        16596
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1627": {
      "fn": "Governance.testHashing",
      "offset": [
        16586,
        16596
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1628": {
      "fn": "Governance.testHashing",
      "offset": [
        16586,
        16596
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1629": {
      "fn": "Governance.testHashing",
      "offset": [
        16586,
        16596
      ],
      "op": "MUL",
      "path": "2"
    },
    "1630": {
      "fn": "Governance.testHashing",
      "offset": [
        16586,
        16596
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1631": {
      "fn": "Governance.testHashing",
      "offset": [
        16586,
        16596
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1632": {
      "fn": "Governance.testHashing",
      "offset": [
        16586,
        16596
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1633": {
      "fn": "Governance.testHashing",
      "offset": [
        16586,
        16596
      ],
      "op": "ADD",
      "path": "2"
    },
    "1634": {
      "fn": "Governance.testHashing",
      "offset": [
        16586,
        16596
      ],
      "op": "ADD",
      "path": "2"
    },
    "1635": {
      "fn": "Governance.testHashing",
      "offset": [
        16586,
        16638
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1636": {
      "fn": "Governance.testHashing",
      "offset": [
        16666,
        16669
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 2,
      "value": "0x1"
    },
    "1638": {
      "fn": "Governance.testHashing",
      "offset": [
        16666,
        16669
      ],
      "op": "ADD",
      "path": "2"
    },
    "1639": {
      "fn": "Governance.testHashing",
      "offset": [
        16529,
        16685
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5FB"
    },
    "1642": {
      "fn": "Governance.testHashing",
      "offset": [
        16529,
        16685
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1643": {
      "fn": "Governance.testHashing",
      "offset": [
        16529,
        16685
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1644": {
      "fn": "Governance.testHashing",
      "offset": [
        16529,
        16685
      ],
      "op": "POP",
      "path": "2"
    },
    "1645": {
      "fn": "Governance.testHashing",
      "offset": [
        16502,
        16695
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1646": {
      "fn": "Governance.testHashing",
      "offset": [
        16704,
        16718
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1648": {
      "fn": "Governance.testHashing",
      "offset": [
        16748,
        16755
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1649": {
      "fn": "Governance.testHashing",
      "offset": [
        16731,
        16756
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1651": {
      "fn": "Governance.testHashing",
      "offset": [
        16731,
        16756
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1652": {
      "fn": "Governance.testHashing",
      "offset": [
        16731,
        16756
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1654": {
      "fn": "Governance.testHashing",
      "offset": [
        16731,
        16756
      ],
      "op": "ADD",
      "path": "2"
    },
    "1655": {
      "fn": "Governance.testHashing",
      "offset": [
        16731,
        16756
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x680"
    },
    "1658": {
      "fn": "Governance.testHashing",
      "offset": [
        16731,
        16756
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1659": {
      "fn": "Governance.testHashing",
      "offset": [
        16731,
        16756
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1660": {
      "fn": "Governance.testHashing",
      "offset": [
        16731,
        16756
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x30D4"
    },
    "1663": {
      "fn": "Governance.testHashing",
      "jump": "i",
      "offset": [
        16731,
        16756
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1664": {
      "fn": "Governance.testHashing",
      "offset": [
        16731,
        16756
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1665": {
      "fn": "Governance.testHashing",
      "offset": [
        16731,
        16756
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1667": {
      "fn": "Governance.testHashing",
      "offset": [
        16731,
        16756
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1668": {
      "fn": "Governance.testHashing",
      "offset": [
        16731,
        16756
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1670": {
      "fn": "Governance.testHashing",
      "offset": [
        16731,
        16756
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1671": {
      "fn": "Governance.testHashing",
      "offset": [
        16731,
        16756
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1672": {
      "fn": "Governance.testHashing",
      "offset": [
        16731,
        16756
      ],
      "op": "SUB",
      "path": "2"
    },
    "1673": {
      "fn": "Governance.testHashing",
      "offset": [
        16731,
        16756
      ],
      "op": "SUB",
      "path": "2"
    },
    "1674": {
      "fn": "Governance.testHashing",
      "offset": [
        16731,
        16756
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1675": {
      "fn": "Governance.testHashing",
      "offset": [
        16731,
        16756
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1676": {
      "fn": "Governance.testHashing",
      "offset": [
        16731,
        16756
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1677": {
      "fn": "Governance.testHashing",
      "offset": [
        16731,
        16756
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1679": {
      "fn": "Governance.testHashing",
      "offset": [
        16731,
        16756
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1680": {
      "fn": "Governance.testHashing",
      "offset": [
        16721,
        16757
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1681": {
      "fn": "Governance.testHashing",
      "offset": [
        16721,
        16757
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1682": {
      "fn": "Governance.testHashing",
      "offset": [
        16721,
        16757
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1683": {
      "fn": "Governance.testHashing",
      "offset": [
        16721,
        16757
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1685": {
      "fn": "Governance.testHashing",
      "offset": [
        16721,
        16757
      ],
      "op": "ADD",
      "path": "2"
    },
    "1686": {
      "fn": "Governance.testHashing",
      "offset": [
        16721,
        16757
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1687": {
      "fn": "Governance.testHashing",
      "offset": [
        16704,
        16757
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1688": {
      "fn": "Governance.testHashing",
      "offset": [
        16704,
        16757
      ],
      "op": "POP",
      "path": "2"
    },
    "1689": {
      "fn": "Governance.testHashing",
      "offset": [
        16772,
        16834
      ],
      "op": "PUSH32",
      "path": "2",
      "statement": 3,
      "value": "0x637CE8D069E382E64EF71CF191623B88C7E307CE252E908E7F2BABBAD0CB81EA"
    },
    "1722": {
      "fn": "Governance.testHashing",
      "offset": [
        16784,
        16790
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1723": {
      "fn": "Governance.testHashing",
      "offset": [
        16800,
        16810
      ],
      "op": "DUP7",
      "path": "2"
    },
    "1724": {
      "fn": "Governance.testHashing",
      "offset": [
        16792,
        16798
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1725": {
      "fn": "Governance.testHashing",
      "offset": [
        16792,
        16810
      ],
      "op": "EQ",
      "path": "2"
    },
    "1726": {
      "fn": "Governance.testHashing",
      "offset": [
        16812,
        16819
      ],
      "op": "DUP7",
      "path": "2"
    },
    "1727": {
      "fn": "Governance.testHashing",
      "offset": [
        16820,
        16821
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1729": {
      "fn": "Governance.testHashing",
      "offset": [
        16812,
        16822
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1730": {
      "fn": "Governance.testHashing",
      "offset": [
        16812,
        16822
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1731": {
      "fn": "Governance.testHashing",
      "offset": [
        16812,
        16822
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1732": {
      "fn": "Governance.testHashing",
      "offset": [
        16812,
        16822
      ],
      "op": "LT",
      "path": "2"
    },
    "1733": {
      "fn": "Governance.testHashing",
      "offset": [
        16812,
        16822
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6D0"
    },
    "1736": {
      "fn": "Governance.testHashing",
      "offset": [
        16812,
        16822
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1737": {
      "fn": "Governance.testHashing",
      "offset": [
        16812,
        16822
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6D0"
    },
    "1740": {
      "fn": "Governance.testHashing",
      "offset": [
        16812,
        16822
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x30BE"
    },
    "1743": {
      "fn": "Governance.testHashing",
      "jump": "i",
      "offset": [
        16812,
        16822
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1744": {
      "fn": "Governance.testHashing",
      "offset": [
        16812,
        16822
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1745": {
      "fn": "Governance.testHashing",
      "offset": [
        16812,
        16822
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1747": {
      "fn": "Governance.testHashing",
      "offset": [
        16812,
        16822
      ],
      "op": "MUL",
      "path": "2"
    },
    "1748": {
      "fn": "Governance.testHashing",
      "offset": [
        16812,
        16822
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1750": {
      "fn": "Governance.testHashing",
      "offset": [
        16812,
        16822
      ],
      "op": "ADD",
      "path": "2"
    },
    "1751": {
      "fn": "Governance.testHashing",
      "offset": [
        16812,
        16822
      ],
      "op": "ADD",
      "path": "2"
    },
    "1752": {
      "fn": "Governance.testHashing",
      "offset": [
        16812,
        16822
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1753": {
      "fn": "Governance.testHashing",
      "offset": [
        16824,
        16833
      ],
      "op": "DUP6",
      "path": "2"
    },
    "1754": {
      "fn": "Governance.testHashing",
      "offset": [
        16772,
        16834
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1756": {
      "fn": "Governance.testHashing",
      "offset": [
        16772,
        16834
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1757": {
      "fn": "Governance.testHashing",
      "offset": [
        16772,
        16834
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6E9"
    },
    "1760": {
      "fn": "Governance.testHashing",
      "offset": [
        16772,
        16834
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "1761": {
      "fn": "Governance.testHashing",
      "offset": [
        16772,
        16834
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "1762": {
      "fn": "Governance.testHashing",
      "offset": [
        16772,
        16834
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1763": {
      "fn": "Governance.testHashing",
      "offset": [
        16772,
        16834
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1764": {
      "fn": "Governance.testHashing",
      "offset": [
        16772,
        16834
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1765": {
      "fn": "Governance.testHashing",
      "offset": [
        16772,
        16834
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x310A"
    },
    "1768": {
      "fn": "Governance.testHashing",
      "jump": "i",
      "offset": [
        16772,
        16834
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1769": {
      "fn": "Governance.testHashing",
      "offset": [
        16772,
        16834
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1770": {
      "fn": "Governance.testHashing",
      "offset": [
        16772,
        16834
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1772": {
      "fn": "Governance.testHashing",
      "offset": [
        16772,
        16834
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1773": {
      "fn": "Governance.testHashing",
      "offset": [
        16772,
        16834
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1774": {
      "fn": "Governance.testHashing",
      "offset": [
        16772,
        16834
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1775": {
      "fn": "Governance.testHashing",
      "offset": [
        16772,
        16834
      ],
      "op": "SUB",
      "path": "2"
    },
    "1776": {
      "fn": "Governance.testHashing",
      "offset": [
        16772,
        16834
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1777": {
      "fn": "Governance.testHashing",
      "offset": [
        16772,
        16834
      ],
      "op": "LOG1",
      "path": "2"
    },
    "1778": {
      "fn": "Governance.testHashing",
      "offset": [
        16429,
        16841
      ],
      "op": "POP",
      "path": "2"
    },
    "1779": {
      "fn": "Governance.testHashing",
      "offset": [
        16429,
        16841
      ],
      "op": "POP",
      "path": "2"
    },
    "1780": {
      "fn": "Governance.testHashing",
      "offset": [
        16338,
        16841
      ],
      "op": "POP",
      "path": "2"
    },
    "1781": {
      "fn": "Governance.testHashing",
      "offset": [
        16338,
        16841
      ],
      "op": "POP",
      "path": "2"
    },
    "1782": {
      "fn": "Governance.testHashing",
      "offset": [
        16338,
        16841
      ],
      "op": "POP",
      "path": "2"
    },
    "1783": {
      "fn": "Governance.testHashing",
      "jump": "o",
      "offset": [
        16338,
        16841
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1784": {
      "offset": [
        2388,
        2415
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1785": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1787": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1788": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1789": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1790": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1791": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "LT",
      "path": "2"
    },
    "1792": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x708"
    },
    "1795": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1796": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1798": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1799": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1800": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1801": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1802": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1804": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1805": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1807": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1809": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1810": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1811": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "1813": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "MUL",
      "path": "2"
    },
    "1814": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "ADD",
      "path": "2"
    },
    "1815": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1817": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1818": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "POP",
      "path": "2"
    },
    "1819": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1820": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "POP",
      "path": "2"
    },
    "1821": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1822": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "1824": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "ADD",
      "path": "2"
    },
    "1825": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1826": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1827": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x72B"
    },
    "1830": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1831": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3084"
    },
    "1834": {
      "fn": "Governance.testHashing",
      "jump": "i",
      "offset": [
        2388,
        2415
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1835": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1836": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1837": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "1839": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "ADD",
      "path": "2"
    },
    "1840": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1842": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1843": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1844": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DIV",
      "path": "2"
    },
    "1845": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "MUL",
      "path": "2"
    },
    "1846": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1848": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "ADD",
      "path": "2"
    },
    "1849": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1851": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1852": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1853": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1854": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "ADD",
      "path": "2"
    },
    "1855": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1857": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1858": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1859": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1860": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1861": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1862": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1863": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1864": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1865": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1867": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "ADD",
      "path": "2"
    },
    "1868": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1869": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1870": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1871": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x757"
    },
    "1874": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1875": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3084"
    },
    "1878": {
      "fn": "Governance.testHashing",
      "jump": "i",
      "offset": [
        2388,
        2415
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1879": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1880": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1881": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1882": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7A4"
    },
    "1885": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1886": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1887": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "1889": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "LT",
      "path": "2"
    },
    "1890": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x779"
    },
    "1893": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1894": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "1897": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1898": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1899": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1900": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DIV",
      "path": "2"
    },
    "1901": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "MUL",
      "path": "2"
    },
    "1902": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1903": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1904": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1905": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1907": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "ADD",
      "path": "2"
    },
    "1908": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1909": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7A4"
    },
    "1912": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1913": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1914": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1915": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "ADD",
      "path": "2"
    },
    "1916": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1917": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1918": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1920": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1921": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1923": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1925": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1926": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1927": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1928": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1929": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1930": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1931": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1932": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1933": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "1935": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "ADD",
      "path": "2"
    },
    "1936": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1937": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1939": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "ADD",
      "path": "2"
    },
    "1940": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1941": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1942": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "GT",
      "path": "2"
    },
    "1943": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x787"
    },
    "1946": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1947": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1948": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1949": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SUB",
      "path": "2"
    },
    "1950": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "1952": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "AND",
      "path": "2"
    },
    "1953": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1954": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "ADD",
      "path": "2"
    },
    "1955": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1956": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1957": {
      "op": "POP"
    },
    "1958": {
      "op": "POP"
    },
    "1959": {
      "op": "POP"
    },
    "1960": {
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "1962": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1963": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "1964": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "ADD",
      "path": "2"
    },
    "1965": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1966": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1967": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1968": {
      "op": "POP"
    },
    "1969": {
      "op": "POP"
    },
    "1970": {
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "1972": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1973": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1974": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "AND",
      "path": "2"
    },
    "1975": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1976": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "1982": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "1985": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1986": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DIV",
      "path": "2"
    },
    "1987": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1988": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "AND",
      "path": "2"
    },
    "1989": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1990": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH7",
      "path": "2",
      "value": "0x1000000000000"
    },
    "1998": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1999": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DIV",
      "path": "2"
    },
    "2000": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "AND",
      "path": "2"
    },
    "2001": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2002": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH3",
      "path": "2",
      "value": "0xFFFFFF"
    },
    "2006": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2008": {
      "op": "PUSH1",
      "value": "0x38"
    },
    "2010": {
      "op": "SHL"
    },
    "2011": {
      "offset": [
        2388,
        2415
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2012": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DIV",
      "path": "2"
    },
    "2013": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "AND",
      "path": "2"
    },
    "2014": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2015": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2017": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "2019": {
      "op": "SHL"
    },
    "2020": {
      "offset": [
        2388,
        2415
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2021": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DIV",
      "path": "2"
    },
    "2022": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2023": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "AND",
      "path": "2"
    },
    "2024": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2025": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2027": {
      "op": "PUSH1",
      "value": "0x78"
    },
    "2029": {
      "op": "SHL"
    },
    "2030": {
      "offset": [
        2388,
        2415
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2031": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DIV",
      "path": "2"
    },
    "2032": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2033": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2034": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "AND",
      "path": "2"
    },
    "2035": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2036": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "2039": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2041": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2043": {
      "op": "SHL"
    },
    "2044": {
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2045": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2046": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DIV",
      "path": "2"
    },
    "2047": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "AND",
      "path": "2"
    },
    "2048": {
      "fn": "Governance.testHashing",
      "offset": [
        2388,
        2415
      ],
      "op": "DUP9",
      "path": "2"
    },
    "2049": {
      "fn": "Governance.testHashing",
      "jump": "o",
      "offset": [
        2388,
        2415
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2050": {
      "fn": "Governance.createTaskType",
      "offset": [
        11472,
        11792
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2051": {
      "offset": [
        21678,
        21714
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x810"
    },
    "2054": {
      "fn": "Governance.createTaskType",
      "offset": [
        21678,
        21714
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2055": {
      "fn": "Governance.createTaskType",
      "offset": [
        21678,
        21714
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2056": {
      "fn": "Governance.createTaskType",
      "offset": [
        21678,
        21714
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2058": {
      "fn": "Governance.createTaskType",
      "offset": [
        21678,
        21714
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2059": {
      "fn": "Governance.createTaskType",
      "offset": [
        21678,
        21714
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2060": {
      "fn": "Governance.createTaskType",
      "offset": [
        21678,
        21714
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2061": {
      "fn": "Governance.createTaskType",
      "offset": [
        21678,
        21714
      ],
      "op": "SUB",
      "path": "2"
    },
    "2062": {
      "fn": "Governance.createTaskType",
      "offset": [
        21678,
        21714
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2063": {
      "fn": "Governance.createTaskType",
      "offset": [
        21678,
        21714
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "2"
    },
    "2064": {
      "fn": "Governance.createTaskType",
      "offset": [
        21678,
        21714
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2065": {
      "fn": "Governance.createTaskType",
      "offset": [
        11679,
        11785
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 4,
      "value": "0x821"
    },
    "2068": {
      "fn": "Governance.createTaskType",
      "offset": [
        11695,
        11704
      ],
      "op": "DUP8",
      "path": "2"
    },
    "2069": {
      "fn": "Governance.createTaskType",
      "offset": [
        11695,
        11704
      ],
      "op": "DUP8",
      "path": "2"
    },
    "2070": {
      "fn": "Governance.createTaskType",
      "offset": [
        11706,
        11707
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2072": {
      "fn": "Governance.createTaskType",
      "offset": [
        11709,
        11725
      ],
      "op": "DUP9",
      "path": "2"
    },
    "2073": {
      "fn": "Governance.createTaskType",
      "offset": [
        11727,
        11737
      ],
      "op": "DUP9",
      "path": "2"
    },
    "2074": {
      "fn": "Governance.createTaskType",
      "offset": [
        11739,
        11752
      ],
      "op": "DUP9",
      "path": "2"
    },
    "2075": {
      "fn": "Governance.createTaskType",
      "offset": [
        11754,
        11767
      ],
      "op": "DUP9",
      "path": "2"
    },
    "2076": {
      "fn": "Governance.createTaskType",
      "offset": [
        11769,
        11784
      ],
      "op": "DUP9",
      "path": "2"
    },
    "2077": {
      "fn": "Governance.createTaskType",
      "offset": [
        11679,
        11694
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x250B"
    },
    "2080": {
      "fn": "Governance.createTaskType",
      "jump": "i",
      "offset": [
        11679,
        11785
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2081": {
      "fn": "Governance.createTaskType",
      "offset": [
        11679,
        11785
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2082": {
      "fn": "Governance.createTaskType",
      "offset": [
        11472,
        11792
      ],
      "op": "POP",
      "path": "2"
    },
    "2083": {
      "fn": "Governance.createTaskType",
      "offset": [
        11472,
        11792
      ],
      "op": "POP",
      "path": "2"
    },
    "2084": {
      "fn": "Governance.createTaskType",
      "offset": [
        11472,
        11792
      ],
      "op": "POP",
      "path": "2"
    },
    "2085": {
      "fn": "Governance.createTaskType",
      "offset": [
        11472,
        11792
      ],
      "op": "POP",
      "path": "2"
    },
    "2086": {
      "fn": "Governance.createTaskType",
      "offset": [
        11472,
        11792
      ],
      "op": "POP",
      "path": "2"
    },
    "2087": {
      "fn": "Governance.createTaskType",
      "offset": [
        11472,
        11792
      ],
      "op": "POP",
      "path": "2"
    },
    "2088": {
      "fn": "Governance.createTaskType",
      "offset": [
        11472,
        11792
      ],
      "op": "POP",
      "path": "2"
    },
    "2089": {
      "fn": "Governance.createTaskType",
      "jump": "o",
      "offset": [
        11472,
        11792
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2090": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        8084,
        8185
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2091": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "2093": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "2094": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2096": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2098": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2100": {
      "op": "SHL"
    },
    "2101": {
      "op": "SUB"
    },
    "2102": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "AND",
      "path": "12"
    },
    "2103": {
      "fn": "Context._msgSender",
      "offset": [
        679,
        689
      ],
      "op": "CALLER",
      "path": "6",
      "statement": 5
    },
    "2104": {
      "offset": [
        1221,
        1244
      ],
      "op": "EQ",
      "path": "12"
    },
    "2105": {
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x854"
    },
    "2108": {
      "offset": [
        1213,
        1281
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "2109": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "2111": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "2112": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2116": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2118": {
      "op": "SHL"
    },
    "2119": {
      "offset": [
        1213,
        1281
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2120": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2121": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "2123": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "ADD",
      "path": "12"
    },
    "2124": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x807"
    },
    "2127": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2128": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x313B"
    },
    "2131": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1213,
        1281
      ],
      "op": "JUMP",
      "path": "12"
    },
    "2132": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2133": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        8151,
        8161
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 6,
      "value": "0x2"
    },
    "2135": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        8151,
        8178
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2136": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        8151,
        8178
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2137": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2139": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2141": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2143": {
      "op": "SHL"
    },
    "2144": {
      "op": "SUB"
    },
    "2145": {
      "op": "NOT"
    },
    "2146": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        8151,
        8178
      ],
      "op": "AND",
      "path": "2"
    },
    "2147": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2149": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2151": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2153": {
      "op": "SHL"
    },
    "2154": {
      "op": "SUB"
    },
    "2155": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        8151,
        8178
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2156": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        8151,
        8178
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2157": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        8151,
        8178
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2158": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        8151,
        8178
      ],
      "op": "AND",
      "path": "2"
    },
    "2159": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        8151,
        8178
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2160": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        8151,
        8178
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2161": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        8151,
        8178
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2162": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        8151,
        8178
      ],
      "op": "OR",
      "path": "2"
    },
    "2163": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        8151,
        8178
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2164": {
      "fn": "Governance.setNFTAddress",
      "offset": [
        8151,
        8178
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "2165": {
      "fn": "Governance.setNFTAddress",
      "jump": "o",
      "offset": [
        8084,
        8185
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2166": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1652,
        1746
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2167": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "2169": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "2170": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2172": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2174": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2176": {
      "op": "SHL"
    },
    "2177": {
      "op": "SUB"
    },
    "2178": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "AND",
      "path": "12"
    },
    "2179": {
      "fn": "Context._msgSender",
      "offset": [
        679,
        689
      ],
      "op": "CALLER",
      "path": "6"
    },
    "2180": {
      "offset": [
        1221,
        1244
      ],
      "op": "EQ",
      "path": "12"
    },
    "2181": {
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x8A0"
    },
    "2184": {
      "offset": [
        1213,
        1281
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "2185": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "2187": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "2188": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2192": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2194": {
      "op": "SHL"
    },
    "2195": {
      "offset": [
        1213,
        1281
      ],
      "op": "DUP2",
      "path": "12"
    },
    "2196": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "2197": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "2199": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "ADD",
      "path": "12"
    },
    "2200": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x807"
    },
    "2203": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "2204": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x313B"
    },
    "2207": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1213,
        1281
      ],
      "op": "JUMP",
      "path": "12"
    },
    "2208": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2209": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1717,
        1738
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 7,
      "value": "0x8AA"
    },
    "2212": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1735,
        1736
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "2214": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1717,
        1726
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x268A"
    },
    "2217": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1717,
        1738
      ],
      "op": "JUMP",
      "path": "12"
    },
    "2218": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1717,
        1738
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "2219": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        1652,
        1746
      ],
      "op": "JUMP",
      "path": "12"
    },
    "2220": {
      "fn": "Governance.completeTask",
      "offset": [
        15155,
        16332
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2221": {
      "fn": "Governance.completeTask",
      "offset": [
        15339,
        15348
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2223": {
      "fn": "Governance.completeTask",
      "offset": [
        15335,
        16306
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2224": {
      "fn": "Governance.completeTask",
      "offset": [
        15356,
        15365
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2226": {
      "fn": "Governance.completeTask",
      "offset": [
        15356,
        15372
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2227": {
      "fn": "Governance.completeTask",
      "offset": [
        15354,
        15372
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2228": {
      "fn": "Governance.completeTask",
      "offset": [
        15354,
        15372
      ],
      "op": "LT",
      "path": "2"
    },
    "2229": {
      "fn": "Governance.completeTask",
      "offset": [
        15335,
        16306
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2230": {
      "fn": "Governance.completeTask",
      "offset": [
        15335,
        16306
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xCAC"
    },
    "2233": {
      "fn": "Governance.completeTask",
      "offset": [
        15335,
        16306
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2234": {
      "fn": "Governance.completeTask",
      "offset": [
        15460,
        15469
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2235": {
      "fn": "Governance.completeTask",
      "offset": [
        15449,
        15470
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2237": {
      "fn": "Governance.completeTask",
      "offset": [
        15449,
        15470
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2238": {
      "fn": "Governance.completeTask",
      "offset": [
        15449,
        15470
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2240": {
      "fn": "Governance.completeTask",
      "offset": [
        15449,
        15470
      ],
      "op": "ADD",
      "path": "2"
    },
    "2241": {
      "fn": "Governance.completeTask",
      "offset": [
        15449,
        15470
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x8CA"
    },
    "2244": {
      "fn": "Governance.completeTask",
      "offset": [
        15449,
        15470
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2245": {
      "fn": "Governance.completeTask",
      "offset": [
        15449,
        15470
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2246": {
      "fn": "Governance.completeTask",
      "offset": [
        15449,
        15470
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3170"
    },
    "2249": {
      "fn": "Governance.completeTask",
      "jump": "i",
      "offset": [
        15449,
        15470
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2250": {
      "fn": "Governance.completeTask",
      "offset": [
        15449,
        15470
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2251": {
      "fn": "Governance.completeTask",
      "offset": [
        15449,
        15470
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2253": {
      "fn": "Governance.completeTask",
      "offset": [
        15449,
        15470
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2254": {
      "fn": "Governance.completeTask",
      "offset": [
        15449,
        15470
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2256": {
      "fn": "Governance.completeTask",
      "offset": [
        15449,
        15470
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2257": {
      "fn": "Governance.completeTask",
      "offset": [
        15449,
        15470
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2258": {
      "fn": "Governance.completeTask",
      "offset": [
        15449,
        15470
      ],
      "op": "SUB",
      "path": "2"
    },
    "2259": {
      "fn": "Governance.completeTask",
      "offset": [
        15449,
        15470
      ],
      "op": "SUB",
      "path": "2"
    },
    "2260": {
      "fn": "Governance.completeTask",
      "offset": [
        15449,
        15470
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2261": {
      "fn": "Governance.completeTask",
      "offset": [
        15449,
        15470
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2262": {
      "fn": "Governance.completeTask",
      "offset": [
        15449,
        15470
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2263": {
      "fn": "Governance.completeTask",
      "offset": [
        15449,
        15470
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2265": {
      "fn": "Governance.completeTask",
      "offset": [
        15449,
        15470
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2266": {
      "fn": "Governance.completeTask",
      "offset": [
        15439,
        15471
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2267": {
      "fn": "Governance.completeTask",
      "offset": [
        15439,
        15471
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2268": {
      "fn": "Governance.completeTask",
      "offset": [
        15439,
        15471
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2269": {
      "fn": "Governance.completeTask",
      "offset": [
        15439,
        15471
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2271": {
      "fn": "Governance.completeTask",
      "offset": [
        15439,
        15471
      ],
      "op": "ADD",
      "path": "2"
    },
    "2272": {
      "fn": "Governance.completeTask",
      "offset": [
        15439,
        15471
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2273": {
      "fn": "Governance.completeTask",
      "offset": [
        15412,
        15421
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2275": {
      "fn": "Governance.completeTask",
      "offset": [
        15422,
        15423
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2276": {
      "fn": "Governance.completeTask",
      "offset": [
        15412,
        15424
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2277": {
      "fn": "Governance.completeTask",
      "offset": [
        15412,
        15424
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2278": {
      "fn": "Governance.completeTask",
      "offset": [
        15412,
        15424
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2279": {
      "fn": "Governance.completeTask",
      "offset": [
        15412,
        15424
      ],
      "op": "LT",
      "path": "2"
    },
    "2280": {
      "fn": "Governance.completeTask",
      "offset": [
        15412,
        15424
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x8F3"
    },
    "2283": {
      "fn": "Governance.completeTask",
      "offset": [
        15412,
        15424
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2284": {
      "fn": "Governance.completeTask",
      "offset": [
        15412,
        15424
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x8F3"
    },
    "2287": {
      "fn": "Governance.completeTask",
      "offset": [
        15412,
        15424
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x30BE"
    },
    "2290": {
      "fn": "Governance.completeTask",
      "jump": "i",
      "offset": [
        15412,
        15424
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2291": {
      "fn": "Governance.completeTask",
      "offset": [
        15412,
        15424
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2292": {
      "fn": "Governance.completeTask",
      "offset": [
        15412,
        15424
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2293": {
      "fn": "Governance.completeTask",
      "offset": [
        15412,
        15424
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2295": {
      "fn": "Governance.completeTask",
      "offset": [
        15412,
        15424
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2296": {
      "fn": "Governance.completeTask",
      "offset": [
        15412,
        15424
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2298": {
      "fn": "Governance.completeTask",
      "offset": [
        15412,
        15424
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2300": {
      "fn": "Governance.completeTask",
      "offset": [
        15412,
        15424
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2301": {
      "fn": "Governance.completeTask",
      "offset": [
        15412,
        15424
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2302": {
      "fn": "Governance.completeTask",
      "offset": [
        15412,
        15424
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "2304": {
      "fn": "Governance.completeTask",
      "offset": [
        15412,
        15424
      ],
      "op": "MUL",
      "path": "2"
    },
    "2305": {
      "fn": "Governance.completeTask",
      "offset": [
        15412,
        15424
      ],
      "op": "ADD",
      "path": "2"
    },
    "2306": {
      "fn": "Governance.completeTask",
      "offset": [
        15412,
        15433
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "2308": {
      "fn": "Governance.completeTask",
      "offset": [
        15412,
        15433
      ],
      "op": "ADD",
      "path": "2"
    },
    "2309": {
      "fn": "Governance.completeTask",
      "offset": [
        15401,
        15434
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2311": {
      "fn": "Governance.completeTask",
      "offset": [
        15401,
        15434
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2312": {
      "fn": "Governance.completeTask",
      "offset": [
        15401,
        15434
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2314": {
      "fn": "Governance.completeTask",
      "offset": [
        15401,
        15434
      ],
      "op": "ADD",
      "path": "2"
    },
    "2315": {
      "fn": "Governance.completeTask",
      "offset": [
        15401,
        15434
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x914"
    },
    "2318": {
      "fn": "Governance.completeTask",
      "offset": [
        15401,
        15434
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2319": {
      "fn": "Governance.completeTask",
      "offset": [
        15401,
        15434
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2320": {
      "fn": "Governance.completeTask",
      "offset": [
        15401,
        15434
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3183"
    },
    "2323": {
      "fn": "Governance.completeTask",
      "jump": "i",
      "offset": [
        15401,
        15434
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2324": {
      "fn": "Governance.completeTask",
      "offset": [
        15401,
        15434
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2325": {
      "fn": "Governance.completeTask",
      "offset": [
        15401,
        15434
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2327": {
      "fn": "Governance.completeTask",
      "offset": [
        15401,
        15434
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2328": {
      "fn": "Governance.completeTask",
      "offset": [
        15401,
        15434
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2330": {
      "fn": "Governance.completeTask",
      "offset": [
        15401,
        15434
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2331": {
      "fn": "Governance.completeTask",
      "offset": [
        15401,
        15434
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2332": {
      "fn": "Governance.completeTask",
      "offset": [
        15401,
        15434
      ],
      "op": "SUB",
      "path": "2"
    },
    "2333": {
      "fn": "Governance.completeTask",
      "offset": [
        15401,
        15434
      ],
      "op": "SUB",
      "path": "2"
    },
    "2334": {
      "fn": "Governance.completeTask",
      "offset": [
        15401,
        15434
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2335": {
      "fn": "Governance.completeTask",
      "offset": [
        15401,
        15434
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2336": {
      "fn": "Governance.completeTask",
      "offset": [
        15401,
        15434
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2337": {
      "fn": "Governance.completeTask",
      "offset": [
        15401,
        15434
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2339": {
      "fn": "Governance.completeTask",
      "offset": [
        15401,
        15434
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2340": {
      "fn": "Governance.completeTask",
      "offset": [
        15391,
        15435
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2341": {
      "fn": "Governance.completeTask",
      "offset": [
        15391,
        15435
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2342": {
      "fn": "Governance.completeTask",
      "offset": [
        15391,
        15435
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2343": {
      "fn": "Governance.completeTask",
      "offset": [
        15391,
        15435
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2345": {
      "fn": "Governance.completeTask",
      "offset": [
        15391,
        15435
      ],
      "op": "ADD",
      "path": "2"
    },
    "2346": {
      "fn": "Governance.completeTask",
      "offset": [
        15391,
        15435
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2347": {
      "branch": 99,
      "fn": "Governance.completeTask",
      "offset": [
        15391,
        15471
      ],
      "op": "SUB",
      "path": "2"
    },
    "2348": {
      "fn": "Governance.completeTask",
      "offset": [
        15388,
        16268
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xCA4"
    },
    "2351": {
      "branch": 99,
      "fn": "Governance.completeTask",
      "offset": [
        15388,
        16268
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2352": {
      "fn": "Governance.completeTask",
      "offset": [
        15587,
        15602
      ],
      "op": "TIMESTAMP",
      "path": "2",
      "statement": 8
    },
    "2353": {
      "fn": "Governance.completeTask",
      "offset": [
        15558,
        15567
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2355": {
      "fn": "Governance.completeTask",
      "offset": [
        15568,
        15569
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2356": {
      "fn": "Governance.completeTask",
      "offset": [
        15558,
        15570
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2357": {
      "fn": "Governance.completeTask",
      "offset": [
        15558,
        15570
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2358": {
      "fn": "Governance.completeTask",
      "offset": [
        15558,
        15570
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2359": {
      "fn": "Governance.completeTask",
      "offset": [
        15558,
        15570
      ],
      "op": "LT",
      "path": "2"
    },
    "2360": {
      "fn": "Governance.completeTask",
      "offset": [
        15558,
        15570
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x943"
    },
    "2363": {
      "fn": "Governance.completeTask",
      "offset": [
        15558,
        15570
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2364": {
      "fn": "Governance.completeTask",
      "offset": [
        15558,
        15570
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x943"
    },
    "2367": {
      "fn": "Governance.completeTask",
      "offset": [
        15558,
        15570
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x30BE"
    },
    "2370": {
      "fn": "Governance.completeTask",
      "jump": "i",
      "offset": [
        15558,
        15570
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2371": {
      "fn": "Governance.completeTask",
      "offset": [
        15558,
        15570
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2372": {
      "fn": "Governance.completeTask",
      "offset": [
        15558,
        15570
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2374": {
      "fn": "Governance.completeTask",
      "offset": [
        15558,
        15570
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2375": {
      "fn": "Governance.completeTask",
      "offset": [
        15558,
        15570
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2376": {
      "fn": "Governance.completeTask",
      "offset": [
        15558,
        15570
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2377": {
      "fn": "Governance.completeTask",
      "offset": [
        15558,
        15570
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2379": {
      "fn": "Governance.completeTask",
      "offset": [
        15558,
        15570
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2380": {
      "fn": "Governance.completeTask",
      "offset": [
        15558,
        15570
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2381": {
      "fn": "Governance.completeTask",
      "offset": [
        15558,
        15570
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2382": {
      "fn": "Governance.completeTask",
      "offset": [
        15558,
        15570
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "2384": {
      "fn": "Governance.completeTask",
      "offset": [
        15558,
        15570
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2385": {
      "fn": "Governance.completeTask",
      "offset": [
        15558,
        15570
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2386": {
      "fn": "Governance.completeTask",
      "offset": [
        15558,
        15570
      ],
      "op": "MUL",
      "path": "2"
    },
    "2387": {
      "fn": "Governance.completeTask",
      "offset": [
        15558,
        15570
      ],
      "op": "ADD",
      "path": "2"
    },
    "2388": {
      "fn": "Governance.completeTask",
      "offset": [
        15558,
        15583
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "2390": {
      "fn": "Governance.completeTask",
      "offset": [
        15558,
        15583
      ],
      "op": "ADD",
      "path": "2"
    },
    "2391": {
      "fn": "Governance.completeTask",
      "offset": [
        15558,
        15583
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2392": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2394": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "2396": {
      "op": "SHL"
    },
    "2397": {
      "fn": "Governance.completeTask",
      "offset": [
        15558,
        15583
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2398": {
      "fn": "Governance.completeTask",
      "offset": [
        15558,
        15583
      ],
      "op": "DIV",
      "path": "2"
    },
    "2399": {
      "fn": "Governance.completeTask",
      "offset": [
        15558,
        15583
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "2405": {
      "fn": "Governance.completeTask",
      "offset": [
        15558,
        15583
      ],
      "op": "AND",
      "path": "2"
    },
    "2406": {
      "fn": "Governance.completeTask",
      "offset": [
        15558,
        15602
      ],
      "op": "GT",
      "path": "2"
    },
    "2407": {
      "fn": "Governance.completeTask",
      "offset": [
        15558,
        15602
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2408": {
      "fn": "Governance.completeTask",
      "offset": [
        15558,
        15602
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2409": {
      "branch": 100,
      "fn": "Governance.completeTask",
      "offset": [
        15558,
        15602
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2410": {
      "fn": "Governance.completeTask",
      "offset": [
        15558,
        15650
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x9A7"
    },
    "2413": {
      "branch": 100,
      "fn": "Governance.completeTask",
      "offset": [
        15558,
        15650
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2414": {
      "fn": "Governance.completeTask",
      "offset": [
        15558,
        15650
      ],
      "op": "POP",
      "path": "2"
    },
    "2415": {
      "fn": "Governance.completeTask",
      "offset": [
        15625,
        15634
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2417": {
      "fn": "Governance.completeTask",
      "offset": [
        15635,
        15636
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2418": {
      "fn": "Governance.completeTask",
      "offset": [
        15625,
        15637
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2419": {
      "fn": "Governance.completeTask",
      "offset": [
        15625,
        15637
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2420": {
      "fn": "Governance.completeTask",
      "offset": [
        15625,
        15637
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2421": {
      "fn": "Governance.completeTask",
      "offset": [
        15625,
        15637
      ],
      "op": "LT",
      "path": "2"
    },
    "2422": {
      "fn": "Governance.completeTask",
      "offset": [
        15625,
        15637
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x981"
    },
    "2425": {
      "fn": "Governance.completeTask",
      "offset": [
        15625,
        15637
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2426": {
      "fn": "Governance.completeTask",
      "offset": [
        15625,
        15637
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x981"
    },
    "2429": {
      "fn": "Governance.completeTask",
      "offset": [
        15625,
        15637
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x30BE"
    },
    "2432": {
      "fn": "Governance.completeTask",
      "jump": "i",
      "offset": [
        15625,
        15637
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2433": {
      "fn": "Governance.completeTask",
      "offset": [
        15625,
        15637
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2434": {
      "fn": "Governance.completeTask",
      "offset": [
        15625,
        15637
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2436": {
      "fn": "Governance.completeTask",
      "offset": [
        15625,
        15637
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2437": {
      "fn": "Governance.completeTask",
      "offset": [
        15625,
        15637
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2438": {
      "fn": "Governance.completeTask",
      "offset": [
        15625,
        15637
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2439": {
      "fn": "Governance.completeTask",
      "offset": [
        15625,
        15637
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2441": {
      "fn": "Governance.completeTask",
      "offset": [
        15625,
        15637
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2442": {
      "fn": "Governance.completeTask",
      "offset": [
        15625,
        15637
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2443": {
      "fn": "Governance.completeTask",
      "offset": [
        15625,
        15637
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2444": {
      "fn": "Governance.completeTask",
      "offset": [
        15625,
        15637
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "2446": {
      "fn": "Governance.completeTask",
      "offset": [
        15625,
        15637
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2447": {
      "fn": "Governance.completeTask",
      "offset": [
        15625,
        15637
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2448": {
      "fn": "Governance.completeTask",
      "offset": [
        15625,
        15637
      ],
      "op": "MUL",
      "path": "2"
    },
    "2449": {
      "fn": "Governance.completeTask",
      "offset": [
        15625,
        15637
      ],
      "op": "ADD",
      "path": "2"
    },
    "2450": {
      "fn": "Governance.completeTask",
      "offset": [
        15625,
        15650
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "2452": {
      "fn": "Governance.completeTask",
      "offset": [
        15625,
        15650
      ],
      "op": "ADD",
      "path": "2"
    },
    "2453": {
      "fn": "Governance.completeTask",
      "offset": [
        15625,
        15650
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2454": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2456": {
      "op": "PUSH1",
      "value": "0x78"
    },
    "2458": {
      "op": "SHL"
    },
    "2459": {
      "fn": "Governance.completeTask",
      "offset": [
        15625,
        15650
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2460": {
      "fn": "Governance.completeTask",
      "offset": [
        15625,
        15650
      ],
      "op": "DIV",
      "path": "2"
    },
    "2461": {
      "fn": "Governance.completeTask",
      "offset": [
        15625,
        15650
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "2467": {
      "fn": "Governance.completeTask",
      "offset": [
        15625,
        15650
      ],
      "op": "AND",
      "path": "2"
    },
    "2468": {
      "fn": "Governance.completeTask",
      "offset": [
        15606,
        15621
      ],
      "op": "TIMESTAMP",
      "path": "2"
    },
    "2469": {
      "fn": "Governance.completeTask",
      "offset": [
        15606,
        15650
      ],
      "op": "GT",
      "path": "2"
    },
    "2470": {
      "branch": 101,
      "fn": "Governance.completeTask",
      "offset": [
        15606,
        15650
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2471": {
      "fn": "Governance.completeTask",
      "offset": [
        15558,
        15650
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2472": {
      "fn": "Governance.completeTask",
      "offset": [
        15550,
        15674
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x9E9"
    },
    "2475": {
      "branch": 101,
      "fn": "Governance.completeTask",
      "offset": [
        15550,
        15674
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2476": {
      "fn": "Governance.completeTask",
      "offset": [
        15550,
        15674
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2478": {
      "fn": "Governance.completeTask",
      "offset": [
        15550,
        15674
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2479": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2483": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2485": {
      "op": "SHL"
    },
    "2486": {
      "fn": "Governance.completeTask",
      "offset": [
        15550,
        15674
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2487": {
      "fn": "Governance.completeTask",
      "offset": [
        15550,
        15674
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2488": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2490": {
      "fn": "Governance.completeTask",
      "offset": [
        15550,
        15674
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2492": {
      "fn": "Governance.completeTask",
      "offset": [
        15550,
        15674
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2493": {
      "fn": "Governance.completeTask",
      "offset": [
        15550,
        15674
      ],
      "op": "ADD",
      "path": "2"
    },
    "2494": {
      "op": "MSTORE"
    },
    "2495": {
      "op": "PUSH1",
      "value": "0x13"
    },
    "2497": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2499": {
      "op": "DUP3"
    },
    "2500": {
      "op": "ADD"
    },
    "2501": {
      "op": "MSTORE"
    },
    "2502": {
      "op": "PUSH19",
      "value": "0x13DD5D1CDA5919481D1A5B59481C195C9A5BD9"
    },
    "2522": {
      "op": "PUSH1",
      "value": "0x6A"
    },
    "2524": {
      "op": "SHL"
    },
    "2525": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2527": {
      "op": "DUP3"
    },
    "2528": {
      "op": "ADD"
    },
    "2529": {
      "op": "MSTORE"
    },
    "2530": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2532": {
      "op": "ADD"
    },
    "2533": {
      "fn": "Governance.completeTask",
      "offset": [
        15550,
        15674
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x807"
    },
    "2536": {
      "op": "JUMP"
    },
    "2537": {
      "fn": "Governance.completeTask",
      "offset": [
        15550,
        15674
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2538": {
      "fn": "Governance.completeTask",
      "offset": [
        15727,
        15745
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2540": {
      "fn": "Governance.completeTask",
      "offset": [
        15748,
        15846
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2542": {
      "fn": "Governance.completeTask",
      "offset": [
        15748,
        15846
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2543": {
      "fn": "Governance.completeTask",
      "offset": [
        15748,
        15846
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2544": {
      "fn": "Governance.completeTask",
      "offset": [
        15748,
        15846
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x140"
    },
    "2547": {
      "fn": "Governance.completeTask",
      "offset": [
        15748,
        15846
      ],
      "op": "ADD",
      "path": "2"
    },
    "2548": {
      "fn": "Governance.completeTask",
      "offset": [
        15748,
        15846
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2550": {
      "fn": "Governance.completeTask",
      "offset": [
        15748,
        15846
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2551": {
      "fn": "Governance.completeTask",
      "offset": [
        15748,
        15846
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2552": {
      "fn": "Governance.completeTask",
      "offset": [
        15753,
        15762
      ],
      "op": "DUP7",
      "path": "2"
    },
    "2553": {
      "fn": "Governance.completeTask",
      "offset": [
        15748,
        15846
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2554": {
      "fn": "Governance.completeTask",
      "offset": [
        15748,
        15846
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2555": {
      "fn": "Governance.completeTask",
      "offset": [
        15748,
        15846
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2557": {
      "fn": "Governance.completeTask",
      "offset": [
        15748,
        15846
      ],
      "op": "ADD",
      "path": "2"
    },
    "2558": {
      "fn": "Governance.completeTask",
      "offset": [
        15763,
        15769
      ],
      "op": "DUP5",
      "path": "2"
    },
    "2559": {
      "fn": "Governance.completeTask",
      "offset": [
        15748,
        15846
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "2565": {
      "fn": "Governance.completeTask",
      "offset": [
        15748,
        15846
      ],
      "op": "AND",
      "path": "2"
    },
    "2566": {
      "fn": "Governance.completeTask",
      "offset": [
        15748,
        15846
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2567": {
      "fn": "Governance.completeTask",
      "offset": [
        15748,
        15846
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2568": {
      "fn": "Governance.completeTask",
      "offset": [
        15748,
        15846
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2570": {
      "fn": "Governance.completeTask",
      "offset": [
        15748,
        15846
      ],
      "op": "ADD",
      "path": "2"
    },
    "2571": {
      "fn": "Governance.completeTask",
      "offset": [
        15771,
        15776
      ],
      "op": "DUP6",
      "path": "2"
    },
    "2572": {
      "fn": "Governance.completeTask",
      "offset": [
        15748,
        15846
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2573": {
      "fn": "Governance.completeTask",
      "offset": [
        15748,
        15846
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2574": {
      "fn": "Governance.completeTask",
      "offset": [
        15748,
        15846
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2576": {
      "fn": "Governance.completeTask",
      "offset": [
        15748,
        15846
      ],
      "op": "ADD",
      "path": "2"
    },
    "2577": {
      "fn": "Governance.completeTask",
      "offset": [
        15778,
        15779
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2579": {
      "fn": "Governance.completeTask",
      "offset": [
        15748,
        15846
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2580": {
      "fn": "Governance.completeTask",
      "offset": [
        15748,
        15846
      ],
      "op": "SHL",
      "path": "2"
    },
    "2581": {
      "fn": "Governance.completeTask",
      "offset": [
        15748,
        15846
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2582": {
      "fn": "Governance.completeTask",
      "offset": [
        15748,
        15846
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2583": {
      "fn": "Governance.completeTask",
      "offset": [
        15748,
        15846
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2585": {
      "fn": "Governance.completeTask",
      "offset": [
        15748,
        15846
      ],
      "op": "ADD",
      "path": "2"
    },
    "2586": {
      "fn": "Governance.completeTask",
      "offset": [
        15781,
        15790
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2588": {
      "fn": "Governance.completeTask",
      "offset": [
        15791,
        15792
      ],
      "op": "DUP5",
      "path": "2"
    },
    "2589": {
      "fn": "Governance.completeTask",
      "offset": [
        15781,
        15793
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2590": {
      "fn": "Governance.completeTask",
      "offset": [
        15781,
        15793
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2591": {
      "fn": "Governance.completeTask",
      "offset": [
        15781,
        15793
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2592": {
      "fn": "Governance.completeTask",
      "offset": [
        15781,
        15793
      ],
      "op": "LT",
      "path": "2"
    },
    "2593": {
      "fn": "Governance.completeTask",
      "offset": [
        15781,
        15793
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA2C"
    },
    "2596": {
      "fn": "Governance.completeTask",
      "offset": [
        15781,
        15793
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2597": {
      "fn": "Governance.completeTask",
      "offset": [
        15781,
        15793
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA2C"
    },
    "2600": {
      "fn": "Governance.completeTask",
      "offset": [
        15781,
        15793
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x30BE"
    },
    "2603": {
      "fn": "Governance.completeTask",
      "jump": "i",
      "offset": [
        15781,
        15793
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2604": {
      "fn": "Governance.completeTask",
      "offset": [
        15781,
        15793
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2605": {
      "fn": "Governance.completeTask",
      "offset": [
        15781,
        15793
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2606": {
      "fn": "Governance.completeTask",
      "offset": [
        15781,
        15793
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2608": {
      "fn": "Governance.completeTask",
      "offset": [
        15781,
        15793
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2609": {
      "fn": "Governance.completeTask",
      "offset": [
        15781,
        15793
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2611": {
      "fn": "Governance.completeTask",
      "offset": [
        15781,
        15793
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2613": {
      "fn": "Governance.completeTask",
      "offset": [
        15781,
        15793
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2614": {
      "fn": "Governance.completeTask",
      "offset": [
        15781,
        15793
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2615": {
      "fn": "Governance.completeTask",
      "offset": [
        15781,
        15793
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "2617": {
      "fn": "Governance.completeTask",
      "offset": [
        15781,
        15793
      ],
      "op": "MUL",
      "path": "2"
    },
    "2618": {
      "fn": "Governance.completeTask",
      "offset": [
        15781,
        15793
      ],
      "op": "ADD",
      "path": "2"
    },
    "2619": {
      "fn": "Governance.completeTask",
      "offset": [
        15781,
        15809
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "2621": {
      "fn": "Governance.completeTask",
      "offset": [
        15781,
        15809
      ],
      "op": "ADD",
      "path": "2"
    },
    "2622": {
      "fn": "Governance.completeTask",
      "offset": [
        15781,
        15809
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x6"
    },
    "2624": {
      "fn": "Governance.completeTask",
      "offset": [
        15781,
        15809
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2625": {
      "fn": "Governance.completeTask",
      "offset": [
        15781,
        15809
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2626": {
      "fn": "Governance.completeTask",
      "offset": [
        15781,
        15809
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2627": {
      "fn": "Governance.completeTask",
      "offset": [
        15781,
        15809
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "2630": {
      "fn": "Governance.completeTask",
      "offset": [
        15781,
        15809
      ],
      "op": "EXP",
      "path": "2"
    },
    "2631": {
      "fn": "Governance.completeTask",
      "offset": [
        15781,
        15809
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2632": {
      "fn": "Governance.completeTask",
      "offset": [
        15781,
        15809
      ],
      "op": "DIV",
      "path": "2"
    },
    "2633": {
      "fn": "Governance.completeTask",
      "offset": [
        15781,
        15809
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "2635": {
      "fn": "Governance.completeTask",
      "offset": [
        15781,
        15809
      ],
      "op": "AND",
      "path": "2"
    },
    "2636": {
      "fn": "Governance.completeTask",
      "offset": [
        15748,
        15846
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "2638": {
      "fn": "Governance.completeTask",
      "offset": [
        15748,
        15846
      ],
      "op": "AND",
      "path": "2"
    },
    "2639": {
      "fn": "Governance.completeTask",
      "offset": [
        15748,
        15846
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2640": {
      "fn": "Governance.completeTask",
      "offset": [
        15748,
        15846
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2641": {
      "fn": "Governance.completeTask",
      "offset": [
        15748,
        15846
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2643": {
      "fn": "Governance.completeTask",
      "offset": [
        15748,
        15846
      ],
      "op": "ADD",
      "path": "2"
    },
    "2644": {
      "fn": "Governance.completeTask",
      "offset": [
        15811,
        15820
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2646": {
      "fn": "Governance.completeTask",
      "offset": [
        15821,
        15822
      ],
      "op": "DUP5",
      "path": "2"
    },
    "2647": {
      "fn": "Governance.completeTask",
      "offset": [
        15811,
        15823
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2648": {
      "fn": "Governance.completeTask",
      "offset": [
        15811,
        15823
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2649": {
      "fn": "Governance.completeTask",
      "offset": [
        15811,
        15823
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2650": {
      "fn": "Governance.completeTask",
      "offset": [
        15811,
        15823
      ],
      "op": "LT",
      "path": "2"
    },
    "2651": {
      "fn": "Governance.completeTask",
      "offset": [
        15811,
        15823
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA66"
    },
    "2654": {
      "fn": "Governance.completeTask",
      "offset": [
        15811,
        15823
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2655": {
      "fn": "Governance.completeTask",
      "offset": [
        15811,
        15823
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA66"
    },
    "2658": {
      "fn": "Governance.completeTask",
      "offset": [
        15811,
        15823
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x30BE"
    },
    "2661": {
      "fn": "Governance.completeTask",
      "jump": "i",
      "offset": [
        15811,
        15823
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2662": {
      "fn": "Governance.completeTask",
      "offset": [
        15811,
        15823
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2663": {
      "fn": "Governance.completeTask",
      "offset": [
        15811,
        15823
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2665": {
      "fn": "Governance.completeTask",
      "offset": [
        15811,
        15823
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2666": {
      "fn": "Governance.completeTask",
      "offset": [
        15811,
        15823
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2667": {
      "fn": "Governance.completeTask",
      "offset": [
        15811,
        15823
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2668": {
      "fn": "Governance.completeTask",
      "offset": [
        15811,
        15823
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2670": {
      "fn": "Governance.completeTask",
      "offset": [
        15811,
        15823
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2671": {
      "fn": "Governance.completeTask",
      "offset": [
        15811,
        15823
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2672": {
      "fn": "Governance.completeTask",
      "offset": [
        15811,
        15823
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2673": {
      "fn": "Governance.completeTask",
      "offset": [
        15811,
        15823
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "2675": {
      "fn": "Governance.completeTask",
      "offset": [
        15811,
        15823
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2676": {
      "fn": "Governance.completeTask",
      "offset": [
        15811,
        15823
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2677": {
      "fn": "Governance.completeTask",
      "offset": [
        15811,
        15823
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2678": {
      "fn": "Governance.completeTask",
      "offset": [
        15811,
        15823
      ],
      "op": "MUL",
      "path": "2"
    },
    "2679": {
      "fn": "Governance.completeTask",
      "offset": [
        15811,
        15823
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2680": {
      "fn": "Governance.completeTask",
      "offset": [
        15811,
        15823
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2681": {
      "fn": "Governance.completeTask",
      "offset": [
        15811,
        15823
      ],
      "op": "ADD",
      "path": "2"
    },
    "2682": {
      "fn": "Governance.completeTask",
      "offset": [
        15811,
        15833
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "2684": {
      "fn": "Governance.completeTask",
      "offset": [
        15811,
        15833
      ],
      "op": "ADD",
      "path": "2"
    },
    "2685": {
      "fn": "Governance.completeTask",
      "offset": [
        15811,
        15833
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2686": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2688": {
      "op": "PUSH1",
      "value": "0x38"
    },
    "2690": {
      "op": "SHL"
    },
    "2691": {
      "fn": "Governance.completeTask",
      "offset": [
        15811,
        15833
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2692": {
      "fn": "Governance.completeTask",
      "offset": [
        15811,
        15833
      ],
      "op": "DIV",
      "path": "2"
    },
    "2693": {
      "fn": "Governance.completeTask",
      "offset": [
        15811,
        15833
      ],
      "op": "PUSH3",
      "path": "2",
      "value": "0xFFFFFF"
    },
    "2697": {
      "fn": "Governance.completeTask",
      "offset": [
        15811,
        15833
      ],
      "op": "AND",
      "path": "2"
    },
    "2698": {
      "fn": "Governance.completeTask",
      "offset": [
        15748,
        15846
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2699": {
      "fn": "Governance.completeTask",
      "offset": [
        15748,
        15846
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2700": {
      "fn": "Governance.completeTask",
      "offset": [
        15748,
        15846
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2701": {
      "fn": "Governance.completeTask",
      "offset": [
        15748,
        15846
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2702": {
      "fn": "Governance.completeTask",
      "offset": [
        15748,
        15846
      ],
      "op": "ADD",
      "path": "2"
    },
    "2703": {
      "fn": "Governance.completeTask",
      "offset": [
        15748,
        15846
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2704": {
      "fn": "Governance.completeTask",
      "offset": [
        15748,
        15846
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2705": {
      "fn": "Governance.completeTask",
      "offset": [
        15748,
        15846
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2706": {
      "fn": "Governance.completeTask",
      "offset": [
        15748,
        15846
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2708": {
      "fn": "Governance.completeTask",
      "offset": [
        15748,
        15846
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2709": {
      "fn": "Governance.completeTask",
      "offset": [
        15748,
        15846
      ],
      "op": "DUP5",
      "path": "2"
    },
    "2710": {
      "fn": "Governance.completeTask",
      "offset": [
        15748,
        15846
      ],
      "op": "ADD",
      "path": "2"
    },
    "2711": {
      "fn": "Governance.completeTask",
      "offset": [
        15748,
        15846
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2712": {
      "fn": "Governance.completeTask",
      "offset": [
        15748,
        15846
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2713": {
      "fn": "Governance.completeTask",
      "offset": [
        15748,
        15846
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2714": {
      "fn": "Governance.completeTask",
      "offset": [
        15748,
        15846
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "2716": {
      "fn": "Governance.completeTask",
      "offset": [
        15748,
        15846
      ],
      "op": "DUP5",
      "path": "2"
    },
    "2717": {
      "fn": "Governance.completeTask",
      "offset": [
        15748,
        15846
      ],
      "op": "ADD",
      "path": "2"
    },
    "2718": {
      "fn": "Governance.completeTask",
      "offset": [
        15748,
        15846
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2719": {
      "fn": "Governance.completeTask",
      "offset": [
        15748,
        15846
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2720": {
      "fn": "Governance.completeTask",
      "offset": [
        15748,
        15846
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2721": {
      "fn": "Governance.completeTask",
      "offset": [
        15748,
        15846
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x80"
    },
    "2723": {
      "fn": "Governance.completeTask",
      "offset": [
        15748,
        15846
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2724": {
      "fn": "Governance.completeTask",
      "offset": [
        15748,
        15846
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "2725": {
      "fn": "Governance.completeTask",
      "offset": [
        15748,
        15846
      ],
      "op": "ADD",
      "path": "2"
    },
    "2726": {
      "fn": "Governance.completeTask",
      "offset": [
        15748,
        15846
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2727": {
      "fn": "Governance.completeTask",
      "offset": [
        15748,
        15846
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2728": {
      "fn": "Governance.completeTask",
      "offset": [
        15748,
        15846
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2729": {
      "fn": "Governance.completeTask",
      "offset": [
        15914,
        15928
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 9,
      "value": "0xA"
    },
    "2731": {
      "fn": "Governance.completeTask",
      "offset": [
        15914,
        15928
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2732": {
      "fn": "Governance.completeTask",
      "offset": [
        15890,
        15904
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "2734": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2187,
        2197
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2735": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2187,
        2197
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2736": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2738": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2740": {
      "op": "SHL"
    },
    "2741": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2187,
        2197
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2742": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2187,
        2197
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2743": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2187,
        2197
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2744": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2187,
        2197
      ],
      "op": "DIV",
      "path": "1"
    },
    "2745": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2187,
        2197
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xF"
    },
    "2747": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2187,
        2197
      ],
      "op": "SIGNEXTEND",
      "path": "1"
    },
    "2748": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2207,
        2229
      ],
      "op": "DUP1",
      "path": "1",
      "statement": 10
    },
    "2749": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2207,
        2229
      ],
      "op": "DUP7",
      "path": "1"
    },
    "2750": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2207,
        2229
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2751": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2207,
        2218
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x6"
    },
    "2753": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2207,
        2229
      ],
      "op": "DUP6",
      "path": "1"
    },
    "2754": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2207,
        2229
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2755": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2207,
        2229
      ],
      "op": "DUP7",
      "path": "1"
    },
    "2756": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2207,
        2229
      ],
      "op": "DUP7",
      "path": "1"
    },
    "2757": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2207,
        2229
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "2758": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2207,
        2237
      ],
      "op": "DUP5",
      "path": "1"
    },
    "2759": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2207,
        2237
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2760": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2207,
        2237
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "2761": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2271,
        2297
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 11
    },
    "2762": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2271,
        2297
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2763": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2271,
        2297
      ],
      "op": "PUSH16",
      "path": "1",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "2780": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2271,
        2297
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2781": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2271,
        2297
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2782": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2271,
        2297
      ],
      "op": "AND",
      "path": "1"
    },
    "2783": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2207,
        2218
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "2785": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2284,
        2297
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2786": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2284,
        2297
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "2787": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2284,
        2297
      ],
      "op": "ADD",
      "path": "1"
    },
    "2788": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2271,
        2297
      ],
      "op": "AND",
      "path": "1"
    },
    "2789": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2271,
        2297
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2790": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2271,
        2297
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2791": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2271,
        2297
      ],
      "op": "MUL",
      "path": "1"
    },
    "2792": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2271,
        2297
      ],
      "op": "OR",
      "path": "1"
    },
    "2793": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2271,
        2297
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2794": {
      "fn": "DoubleEndedQueue.pushBack",
      "offset": [
        2271,
        2297
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "2795": {
      "fn": "Governance.completeTask",
      "offset": [
        15948,
        15969
      ],
      "op": "DUP3",
      "path": "2",
      "statement": 12
    },
    "2796": {
      "fn": "Governance.completeTask",
      "offset": [
        15948,
        15969
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2797": {
      "fn": "Governance.completeTask",
      "offset": [
        15948,
        15953
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x9"
    },
    "2799": {
      "fn": "Governance.completeTask",
      "offset": [
        15948,
        15969
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2800": {
      "fn": "Governance.completeTask",
      "offset": [
        15948,
        15969
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2801": {
      "fn": "Governance.completeTask",
      "offset": [
        15948,
        15969
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2802": {
      "fn": "Governance.completeTask",
      "offset": [
        15948,
        15978
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2803": {
      "fn": "Governance.completeTask",
      "offset": [
        15948,
        15978
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2804": {
      "fn": "Governance.completeTask",
      "offset": [
        15948,
        15978
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2805": {
      "fn": "Governance.completeTask",
      "offset": [
        15948,
        15978
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2806": {
      "op": "POP"
    },
    "2807": {
      "fn": "Governance.completeTask",
      "offset": [
        15948,
        15978
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2808": {
      "fn": "Governance.completeTask",
      "offset": [
        15948,
        15978
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2809": {
      "fn": "Governance.completeTask",
      "offset": [
        15948,
        15969
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2810": {
      "fn": "Governance.completeTask",
      "offset": [
        15948,
        15969
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2811": {
      "fn": "Governance.completeTask",
      "offset": [
        15948,
        15978
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB04"
    },
    "2814": {
      "fn": "Governance.completeTask",
      "offset": [
        15948,
        15978
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2815": {
      "fn": "Governance.completeTask",
      "offset": [
        15948,
        15969
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2816": {
      "fn": "Governance.completeTask",
      "offset": [
        15948,
        15978
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x325D"
    },
    "2819": {
      "fn": "Governance.completeTask",
      "jump": "i",
      "offset": [
        15948,
        15978
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2820": {
      "fn": "Governance.completeTask",
      "offset": [
        15948,
        15978
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2821": {
      "op": "POP"
    },
    "2822": {
      "fn": "Governance.completeTask",
      "offset": [
        15948,
        15978
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2824": {
      "fn": "Governance.completeTask",
      "offset": [
        15948,
        15978
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2825": {
      "fn": "Governance.completeTask",
      "offset": [
        15948,
        15978
      ],
      "op": "ADD",
      "path": "2"
    },
    "2826": {
      "fn": "Governance.completeTask",
      "offset": [
        15948,
        15978
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2827": {
      "fn": "Governance.completeTask",
      "offset": [
        15948,
        15978
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "2829": {
      "fn": "Governance.completeTask",
      "offset": [
        15948,
        15978
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2830": {
      "fn": "Governance.completeTask",
      "offset": [
        15948,
        15978
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2831": {
      "fn": "Governance.completeTask",
      "offset": [
        15948,
        15978
      ],
      "op": "ADD",
      "path": "2"
    },
    "2832": {
      "fn": "Governance.completeTask",
      "offset": [
        15948,
        15978
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2833": {
      "fn": "Governance.completeTask",
      "offset": [
        15948,
        15978
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2834": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "2840": {
      "op": "NOT"
    },
    "2841": {
      "fn": "Governance.completeTask",
      "offset": [
        15948,
        15978
      ],
      "op": "AND",
      "path": "2"
    },
    "2842": {
      "fn": "Governance.completeTask",
      "offset": [
        15948,
        15978
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "2848": {
      "fn": "Governance.completeTask",
      "offset": [
        15948,
        15978
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "2849": {
      "fn": "Governance.completeTask",
      "offset": [
        15948,
        15978
      ],
      "op": "DUP5",
      "path": "2"
    },
    "2850": {
      "fn": "Governance.completeTask",
      "offset": [
        15948,
        15978
      ],
      "op": "AND",
      "path": "2"
    },
    "2851": {
      "fn": "Governance.completeTask",
      "offset": [
        15948,
        15978
      ],
      "op": "OR",
      "path": "2"
    },
    "2852": {
      "fn": "Governance.completeTask",
      "offset": [
        15948,
        15978
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2853": {
      "fn": "Governance.completeTask",
      "offset": [
        15948,
        15978
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "2854": {
      "fn": "Governance.completeTask",
      "offset": [
        15948,
        15978
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2856": {
      "fn": "Governance.completeTask",
      "offset": [
        15948,
        15978
      ],
      "op": "DUP5",
      "path": "2"
    },
    "2857": {
      "fn": "Governance.completeTask",
      "offset": [
        15948,
        15978
      ],
      "op": "ADD",
      "path": "2"
    },
    "2858": {
      "fn": "Governance.completeTask",
      "offset": [
        15948,
        15978
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2859": {
      "fn": "Governance.completeTask",
      "offset": [
        15948,
        15978
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "2861": {
      "fn": "Governance.completeTask",
      "offset": [
        15948,
        15978
      ],
      "op": "DUP5",
      "path": "2"
    },
    "2862": {
      "fn": "Governance.completeTask",
      "offset": [
        15948,
        15978
      ],
      "op": "ADD",
      "path": "2"
    },
    "2863": {
      "fn": "Governance.completeTask",
      "offset": [
        15948,
        15978
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "2864": {
      "fn": "Governance.completeTask",
      "offset": [
        15948,
        15978
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "2866": {
      "fn": "Governance.completeTask",
      "offset": [
        15948,
        15978
      ],
      "op": "DUP5",
      "path": "2"
    },
    "2867": {
      "fn": "Governance.completeTask",
      "offset": [
        15948,
        15978
      ],
      "op": "ADD",
      "path": "2"
    },
    "2868": {
      "fn": "Governance.completeTask",
      "offset": [
        15948,
        15978
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2869": {
      "fn": "Governance.completeTask",
      "offset": [
        15948,
        15978
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "2871": {
      "fn": "Governance.completeTask",
      "offset": [
        15948,
        15978
      ],
      "op": "DUP5",
      "path": "2"
    },
    "2872": {
      "fn": "Governance.completeTask",
      "offset": [
        15948,
        15978
      ],
      "op": "ADD",
      "path": "2"
    },
    "2873": {
      "fn": "Governance.completeTask",
      "offset": [
        15948,
        15978
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "2874": {
      "fn": "Governance.completeTask",
      "offset": [
        15948,
        15978
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x80"
    },
    "2876": {
      "fn": "Governance.completeTask",
      "offset": [
        15948,
        15978
      ],
      "op": "DUP5",
      "path": "2"
    },
    "2877": {
      "fn": "Governance.completeTask",
      "offset": [
        15948,
        15978
      ],
      "op": "ADD",
      "path": "2"
    },
    "2878": {
      "fn": "Governance.completeTask",
      "offset": [
        15948,
        15978
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2879": {
      "fn": "Governance.completeTask",
      "offset": [
        15948,
        15978
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2881": {
      "fn": "Governance.completeTask",
      "offset": [
        15948,
        15978
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2882": {
      "fn": "Governance.completeTask",
      "offset": [
        15948,
        15978
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "2883": {
      "fn": "Governance.completeTask",
      "offset": [
        15948,
        15978
      ],
      "op": "ADD",
      "path": "2"
    },
    "2884": {
      "fn": "Governance.completeTask",
      "offset": [
        15948,
        15978
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2885": {
      "fn": "Governance.completeTask",
      "offset": [
        15948,
        15978
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2886": {
      "fn": "Governance.completeTask",
      "offset": [
        15948,
        15978
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA0"
    },
    "2888": {
      "fn": "Governance.completeTask",
      "offset": [
        15948,
        15978
      ],
      "op": "DUP7",
      "path": "2"
    },
    "2889": {
      "fn": "Governance.completeTask",
      "offset": [
        15948,
        15978
      ],
      "op": "ADD",
      "path": "2"
    },
    "2890": {
      "fn": "Governance.completeTask",
      "offset": [
        15948,
        15978
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2891": {
      "fn": "Governance.completeTask",
      "offset": [
        15948,
        15978
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xC0"
    },
    "2893": {
      "fn": "Governance.completeTask",
      "offset": [
        15948,
        15978
      ],
      "op": "DUP8",
      "path": "2"
    },
    "2894": {
      "fn": "Governance.completeTask",
      "offset": [
        15948,
        15978
      ],
      "op": "ADD",
      "path": "2"
    },
    "2895": {
      "fn": "Governance.completeTask",
      "offset": [
        15948,
        15978
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2896": {
      "fn": "Governance.completeTask",
      "offset": [
        15948,
        15978
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE0"
    },
    "2898": {
      "fn": "Governance.completeTask",
      "offset": [
        15948,
        15978
      ],
      "op": "DUP9",
      "path": "2"
    },
    "2899": {
      "fn": "Governance.completeTask",
      "offset": [
        15948,
        15978
      ],
      "op": "ADD",
      "path": "2"
    },
    "2900": {
      "fn": "Governance.completeTask",
      "offset": [
        15948,
        15978
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2901": {
      "fn": "Governance.completeTask",
      "offset": [
        15948,
        15978
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "2904": {
      "fn": "Governance.completeTask",
      "offset": [
        15948,
        15978
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2905": {
      "fn": "Governance.completeTask",
      "offset": [
        15948,
        15978
      ],
      "op": "DUP11",
      "path": "2"
    },
    "2906": {
      "fn": "Governance.completeTask",
      "offset": [
        15948,
        15978
      ],
      "op": "ADD",
      "path": "2"
    },
    "2907": {
      "fn": "Governance.completeTask",
      "offset": [
        15948,
        15978
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2908": {
      "fn": "Governance.completeTask",
      "offset": [
        15948,
        15978
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x120"
    },
    "2911": {
      "fn": "Governance.completeTask",
      "offset": [
        15948,
        15978
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2912": {
      "fn": "Governance.completeTask",
      "offset": [
        15948,
        15978
      ],
      "op": "SWAP11",
      "path": "2"
    },
    "2913": {
      "fn": "Governance.completeTask",
      "offset": [
        15948,
        15978
      ],
      "op": "ADD",
      "path": "2"
    },
    "2914": {
      "fn": "Governance.completeTask",
      "offset": [
        15948,
        15978
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2915": {
      "fn": "Governance.completeTask",
      "offset": [
        15948,
        15978
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "2917": {
      "fn": "Governance.completeTask",
      "offset": [
        15948,
        15978
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2918": {
      "fn": "Governance.completeTask",
      "offset": [
        15948,
        15978
      ],
      "op": "SWAP10",
      "path": "2"
    },
    "2919": {
      "fn": "Governance.completeTask",
      "offset": [
        15948,
        15978
      ],
      "op": "AND",
      "path": "2"
    },
    "2920": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "2925": {
      "op": "NOT"
    },
    "2926": {
      "fn": "Governance.completeTask",
      "offset": [
        15948,
        15978
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2927": {
      "fn": "Governance.completeTask",
      "offset": [
        15948,
        15978
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "2928": {
      "fn": "Governance.completeTask",
      "offset": [
        15948,
        15978
      ],
      "op": "AND",
      "path": "2"
    },
    "2929": {
      "fn": "Governance.completeTask",
      "offset": [
        15948,
        15978
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "2930": {
      "fn": "Governance.completeTask",
      "offset": [
        15948,
        15978
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2931": {
      "fn": "Governance.completeTask",
      "offset": [
        15948,
        15978
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "2932": {
      "fn": "Governance.completeTask",
      "offset": [
        15948,
        15978
      ],
      "op": "OR",
      "path": "2"
    },
    "2933": {
      "fn": "Governance.completeTask",
      "offset": [
        15948,
        15978
      ],
      "op": "PUSH3",
      "path": "2",
      "value": "0xFFFFFF"
    },
    "2937": {
      "fn": "Governance.completeTask",
      "offset": [
        15948,
        15978
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2938": {
      "fn": "Governance.completeTask",
      "offset": [
        15948,
        15978
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "2939": {
      "fn": "Governance.completeTask",
      "offset": [
        15948,
        15978
      ],
      "op": "AND",
      "path": "2"
    },
    "2940": {
      "fn": "Governance.completeTask",
      "offset": [
        15948,
        15978
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2941": {
      "fn": "Governance.completeTask",
      "offset": [
        15948,
        15978
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "2942": {
      "fn": "Governance.completeTask",
      "offset": [
        15948,
        15978
      ],
      "op": "MUL",
      "path": "2"
    },
    "2943": {
      "fn": "Governance.completeTask",
      "offset": [
        15948,
        15978
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2944": {
      "fn": "Governance.completeTask",
      "offset": [
        15948,
        15978
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2945": {
      "fn": "Governance.completeTask",
      "offset": [
        15948,
        15978
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2946": {
      "fn": "Governance.completeTask",
      "offset": [
        15948,
        15978
      ],
      "op": "OR",
      "path": "2"
    },
    "2947": {
      "op": "PUSH16",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFF00000000"
    },
    "2964": {
      "op": "NOT"
    },
    "2965": {
      "fn": "Governance.completeTask",
      "offset": [
        15948,
        15978
      ],
      "op": "AND",
      "path": "2"
    },
    "2966": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2968": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2970": {
      "op": "SHL"
    },
    "2971": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2973": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2975": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "2977": {
      "op": "SHL"
    },
    "2978": {
      "op": "SUB"
    },
    "2979": {
      "fn": "Governance.completeTask",
      "offset": [
        15948,
        15978
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2980": {
      "fn": "Governance.completeTask",
      "offset": [
        15948,
        15978
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2981": {
      "fn": "Governance.completeTask",
      "offset": [
        15948,
        15978
      ],
      "op": "AND",
      "path": "2"
    },
    "2982": {
      "fn": "Governance.completeTask",
      "offset": [
        15948,
        15978
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2983": {
      "fn": "Governance.completeTask",
      "offset": [
        15948,
        15978
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2984": {
      "fn": "Governance.completeTask",
      "offset": [
        15948,
        15978
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2985": {
      "fn": "Governance.completeTask",
      "offset": [
        15948,
        15978
      ],
      "op": "MUL",
      "path": "2"
    },
    "2986": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "2989": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "2991": {
      "op": "SHL"
    },
    "2992": {
      "op": "NOT"
    },
    "2993": {
      "fn": "Governance.completeTask",
      "offset": [
        15948,
        15978
      ],
      "op": "AND",
      "path": "2"
    },
    "2994": {
      "fn": "Governance.completeTask",
      "offset": [
        15948,
        15978
      ],
      "op": "OR",
      "path": "2"
    },
    "2995": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2997": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "2999": {
      "op": "SHL"
    },
    "3000": {
      "fn": "Governance.completeTask",
      "offset": [
        15948,
        15978
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "3003": {
      "fn": "Governance.completeTask",
      "offset": [
        15948,
        15978
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3004": {
      "fn": "Governance.completeTask",
      "offset": [
        15948,
        15978
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3005": {
      "fn": "Governance.completeTask",
      "offset": [
        15948,
        15978
      ],
      "op": "AND",
      "path": "2"
    },
    "3006": {
      "fn": "Governance.completeTask",
      "offset": [
        15948,
        15978
      ],
      "op": "MUL",
      "path": "2"
    },
    "3007": {
      "fn": "Governance.completeTask",
      "offset": [
        15948,
        15978
      ],
      "op": "OR",
      "path": "2"
    },
    "3008": {
      "op": "PUSH7",
      "value": "0xFFFFFFFFFFFFFF"
    },
    "3016": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3018": {
      "op": "SHL"
    },
    "3019": {
      "op": "NOT"
    },
    "3020": {
      "fn": "Governance.completeTask",
      "offset": [
        15948,
        15978
      ],
      "op": "AND",
      "path": "2"
    },
    "3021": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3023": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3025": {
      "op": "SHL"
    },
    "3026": {
      "fn": "Governance.completeTask",
      "offset": [
        15948,
        15978
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3027": {
      "fn": "Governance.completeTask",
      "offset": [
        15948,
        15978
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3028": {
      "fn": "Governance.completeTask",
      "offset": [
        15948,
        15978
      ],
      "op": "SWAP7",
      "path": "2"
    },
    "3029": {
      "fn": "Governance.completeTask",
      "offset": [
        15948,
        15978
      ],
      "op": "AND",
      "path": "2"
    },
    "3030": {
      "fn": "Governance.completeTask",
      "offset": [
        15948,
        15978
      ],
      "op": "MUL",
      "path": "2"
    },
    "3031": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "3037": {
      "op": "PUSH1",
      "value": "0x90"
    },
    "3039": {
      "op": "SHL"
    },
    "3040": {
      "op": "NOT"
    },
    "3041": {
      "fn": "Governance.completeTask",
      "offset": [
        15948,
        15978
      ],
      "op": "AND",
      "path": "2"
    },
    "3042": {
      "fn": "Governance.completeTask",
      "offset": [
        15948,
        15978
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "3043": {
      "fn": "Governance.completeTask",
      "offset": [
        15948,
        15978
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3044": {
      "fn": "Governance.completeTask",
      "offset": [
        15948,
        15978
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "3045": {
      "fn": "Governance.completeTask",
      "offset": [
        15948,
        15978
      ],
      "op": "OR",
      "path": "2"
    },
    "3046": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3048": {
      "op": "PUSH1",
      "value": "0x90"
    },
    "3050": {
      "op": "SHL"
    },
    "3051": {
      "fn": "Governance.completeTask",
      "offset": [
        15948,
        15978
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "3052": {
      "fn": "Governance.completeTask",
      "offset": [
        15948,
        15978
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3053": {
      "fn": "Governance.completeTask",
      "offset": [
        15948,
        15978
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3054": {
      "fn": "Governance.completeTask",
      "offset": [
        15948,
        15978
      ],
      "op": "AND",
      "path": "2"
    },
    "3055": {
      "fn": "Governance.completeTask",
      "offset": [
        15948,
        15978
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3056": {
      "fn": "Governance.completeTask",
      "offset": [
        15948,
        15978
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3057": {
      "fn": "Governance.completeTask",
      "offset": [
        15948,
        15978
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3058": {
      "fn": "Governance.completeTask",
      "offset": [
        15948,
        15978
      ],
      "op": "MUL",
      "path": "2"
    },
    "3059": {
      "fn": "Governance.completeTask",
      "offset": [
        15948,
        15978
      ],
      "op": "OR",
      "path": "2"
    },
    "3060": {
      "fn": "Governance.completeTask",
      "offset": [
        15948,
        15978
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3061": {
      "fn": "Governance.completeTask",
      "offset": [
        15948,
        15978
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3062": {
      "fn": "Governance.completeTask",
      "offset": [
        15948,
        15978
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "3063": {
      "fn": "Governance.completeTask",
      "offset": [
        15996,
        16010
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 13,
      "value": "0xA"
    },
    "3065": {
      "fn": "Governance.completeTask",
      "offset": [
        15996,
        16013
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3066": {
      "fn": "Governance.completeTask",
      "offset": [
        15996,
        16013
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3067": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3069": {
      "op": "SWAP1"
    },
    "3070": {
      "fn": "Governance.completeTask",
      "offset": [
        15996,
        16013
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC08"
    },
    "3073": {
      "fn": "Governance.completeTask",
      "offset": [
        15996,
        16013
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3074": {
      "fn": "Governance.completeTask",
      "offset": [
        15948,
        15978
      ],
      "op": "DUP5",
      "path": "2"
    },
    "3075": {
      "fn": "Governance.completeTask",
      "offset": [
        15948,
        15978
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3076": {
      "fn": "Governance.completeTask",
      "offset": [
        15996,
        16013
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3332"
    },
    "3079": {
      "fn": "Governance.completeTask",
      "jump": "i",
      "offset": [
        15996,
        16013
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3080": {
      "fn": "Governance.completeTask",
      "offset": [
        15996,
        16013
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3081": {
      "fn": "Governance.completeTask",
      "offset": [
        15996,
        16013
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3082": {
      "fn": "Governance.completeTask",
      "offset": [
        15996,
        16013
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3083": {
      "fn": "Governance.completeTask",
      "offset": [
        15996,
        16013
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "3084": {
      "op": "POP"
    },
    "3085": {
      "fn": "Governance.completeTask",
      "offset": [
        16115,
        16139
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 14,
      "value": "0xC1B"
    },
    "3088": {
      "fn": "Governance.completeTask",
      "offset": [
        16115,
        16139
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3089": {
      "op": "POP"
    },
    "3090": {
      "fn": "Governance.completeTask",
      "offset": [
        16115,
        16130
      ],
      "op": "TIMESTAMP",
      "path": "2"
    },
    "3091": {
      "fn": "Governance.completeTask",
      "offset": [
        16133,
        16139
      ],
      "op": "PUSH3",
      "path": "2",
      "value": "0x15180"
    },
    "3095": {
      "fn": "Governance.completeTask",
      "offset": [
        16115,
        16139
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3332"
    },
    "3098": {
      "fn": "Governance.completeTask",
      "jump": "i",
      "offset": [
        16115,
        16139
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3099": {
      "fn": "Governance.completeTask",
      "offset": [
        16115,
        16139
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3100": {
      "fn": "Governance.completeTask",
      "offset": [
        16068,
        16077
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3102": {
      "fn": "Governance.completeTask",
      "offset": [
        16078,
        16079
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3103": {
      "fn": "Governance.completeTask",
      "offset": [
        16068,
        16080
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3104": {
      "fn": "Governance.completeTask",
      "offset": [
        16068,
        16080
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3105": {
      "fn": "Governance.completeTask",
      "offset": [
        16068,
        16080
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3106": {
      "fn": "Governance.completeTask",
      "offset": [
        16068,
        16080
      ],
      "op": "LT",
      "path": "2"
    },
    "3107": {
      "fn": "Governance.completeTask",
      "offset": [
        16068,
        16080
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC2E"
    },
    "3110": {
      "fn": "Governance.completeTask",
      "offset": [
        16068,
        16080
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3111": {
      "fn": "Governance.completeTask",
      "offset": [
        16068,
        16080
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC2E"
    },
    "3114": {
      "fn": "Governance.completeTask",
      "offset": [
        16068,
        16080
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x30BE"
    },
    "3117": {
      "fn": "Governance.completeTask",
      "jump": "i",
      "offset": [
        16068,
        16080
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3118": {
      "fn": "Governance.completeTask",
      "offset": [
        16068,
        16080
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3119": {
      "fn": "Governance.completeTask",
      "offset": [
        16068,
        16080
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3121": {
      "fn": "Governance.completeTask",
      "offset": [
        16068,
        16080
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3122": {
      "fn": "Governance.completeTask",
      "offset": [
        16068,
        16080
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3123": {
      "fn": "Governance.completeTask",
      "offset": [
        16068,
        16080
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3124": {
      "fn": "Governance.completeTask",
      "offset": [
        16068,
        16080
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3126": {
      "fn": "Governance.completeTask",
      "offset": [
        16068,
        16080
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3127": {
      "fn": "Governance.completeTask",
      "offset": [
        16068,
        16080
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3128": {
      "fn": "Governance.completeTask",
      "offset": [
        16068,
        16080
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "3129": {
      "fn": "Governance.completeTask",
      "offset": [
        16068,
        16112
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "3135": {
      "fn": "Governance.completeTask",
      "offset": [
        16068,
        16112
      ],
      "op": "DUP9",
      "path": "2"
    },
    "3136": {
      "fn": "Governance.completeTask",
      "offset": [
        16068,
        16112
      ],
      "op": "AND",
      "path": "2"
    },
    "3137": {
      "fn": "Governance.completeTask",
      "offset": [
        16068,
        16112
      ],
      "op": "DUP5",
      "path": "2"
    },
    "3138": {
      "fn": "Governance.completeTask",
      "offset": [
        16068,
        16112
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3139": {
      "fn": "Governance.completeTask",
      "offset": [
        16068,
        16080
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "3141": {
      "fn": "Governance.completeTask",
      "offset": [
        16068,
        16080
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3142": {
      "fn": "Governance.completeTask",
      "offset": [
        16068,
        16080
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3143": {
      "fn": "Governance.completeTask",
      "offset": [
        16068,
        16080
      ],
      "op": "MUL",
      "path": "2"
    },
    "3144": {
      "fn": "Governance.completeTask",
      "offset": [
        16068,
        16080
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3145": {
      "fn": "Governance.completeTask",
      "offset": [
        16068,
        16080
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3146": {
      "fn": "Governance.completeTask",
      "offset": [
        16068,
        16080
      ],
      "op": "ADD",
      "path": "2"
    },
    "3147": {
      "fn": "Governance.completeTask",
      "offset": [
        16068,
        16112
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3148": {
      "fn": "Governance.completeTask",
      "offset": [
        16068,
        16112
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3149": {
      "fn": "Governance.completeTask",
      "offset": [
        16068,
        16112
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3151": {
      "fn": "Governance.completeTask",
      "offset": [
        16068,
        16112
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3152": {
      "fn": "Governance.completeTask",
      "offset": [
        16068,
        16112
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "3153": {
      "fn": "Governance.completeTask",
      "offset": [
        16068,
        16139
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "3154": {
      "fn": "Governance.completeTask",
      "offset": [
        16184,
        16198
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 15,
      "value": "0xA"
    },
    "3156": {
      "fn": "Governance.completeTask",
      "offset": [
        16184,
        16198
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3157": {
      "fn": "Governance.completeTask",
      "offset": [
        16163,
        16230
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0xBCC1EA15519F3ACFB49E91DE851E553B2C024B9AB85CEE8FFD8FE4E4E0A7876D"
    },
    "3190": {
      "fn": "Governance.completeTask",
      "offset": [
        16163,
        16230
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3191": {
      "fn": "Governance.completeTask",
      "offset": [
        16105,
        16111
      ],
      "op": "DUP5",
      "path": "2"
    },
    "3192": {
      "fn": "Governance.completeTask",
      "offset": [
        16105,
        16111
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3193": {
      "fn": "Governance.completeTask",
      "offset": [
        16184,
        16201
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC84"
    },
    "3196": {
      "fn": "Governance.completeTask",
      "offset": [
        16184,
        16201
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3197": {
      "fn": "Governance.completeTask",
      "offset": [
        16200,
        16201
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "3199": {
      "fn": "Governance.completeTask",
      "offset": [
        16200,
        16201
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3200": {
      "fn": "Governance.completeTask",
      "offset": [
        16184,
        16201
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x334A"
    },
    "3203": {
      "fn": "Governance.completeTask",
      "jump": "i",
      "offset": [
        16184,
        16201
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3204": {
      "fn": "Governance.completeTask",
      "offset": [
        16184,
        16201
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3205": {
      "fn": "Governance.completeTask",
      "offset": [
        16203,
        16212
      ],
      "op": "DUP8",
      "path": "2"
    },
    "3206": {
      "fn": "Governance.completeTask",
      "offset": [
        16214,
        16229
      ],
      "op": "TIMESTAMP",
      "path": "2"
    },
    "3207": {
      "fn": "Governance.completeTask",
      "offset": [
        16163,
        16230
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3209": {
      "fn": "Governance.completeTask",
      "offset": [
        16163,
        16230
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3210": {
      "fn": "Governance.completeTask",
      "offset": [
        16163,
        16230
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC96"
    },
    "3213": {
      "fn": "Governance.completeTask",
      "offset": [
        16163,
        16230
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "3214": {
      "fn": "Governance.completeTask",
      "offset": [
        16163,
        16230
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "3215": {
      "fn": "Governance.completeTask",
      "offset": [
        16163,
        16230
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3216": {
      "fn": "Governance.completeTask",
      "offset": [
        16163,
        16230
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3217": {
      "fn": "Governance.completeTask",
      "offset": [
        16163,
        16230
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3218": {
      "fn": "Governance.completeTask",
      "offset": [
        16163,
        16230
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3361"
    },
    "3221": {
      "fn": "Governance.completeTask",
      "jump": "i",
      "offset": [
        16163,
        16230
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3222": {
      "fn": "Governance.completeTask",
      "offset": [
        16163,
        16230
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3223": {
      "fn": "Governance.completeTask",
      "offset": [
        16163,
        16230
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3225": {
      "fn": "Governance.completeTask",
      "offset": [
        16163,
        16230
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3226": {
      "fn": "Governance.completeTask",
      "offset": [
        16163,
        16230
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3227": {
      "fn": "Governance.completeTask",
      "offset": [
        16163,
        16230
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3228": {
      "fn": "Governance.completeTask",
      "offset": [
        16163,
        16230
      ],
      "op": "SUB",
      "path": "2"
    },
    "3229": {
      "fn": "Governance.completeTask",
      "offset": [
        16163,
        16230
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3230": {
      "fn": "Governance.completeTask",
      "offset": [
        16163,
        16230
      ],
      "op": "LOG1",
      "path": "2"
    },
    "3231": {
      "fn": "Governance.completeTask",
      "offset": [
        16248,
        16253
      ],
      "op": "POP",
      "path": "2",
      "statement": 16
    },
    "3232": {
      "fn": "Governance.completeTask",
      "offset": [
        16248,
        16253
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xCAC"
    },
    "3235": {
      "fn": "Governance.completeTask",
      "offset": [
        16248,
        16253
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3236": {
      "fn": "Governance.completeTask",
      "offset": [
        15388,
        16268
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3237": {
      "fn": "Governance.completeTask",
      "offset": [
        16291,
        16294
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 17,
      "value": "0x1"
    },
    "3239": {
      "fn": "Governance.completeTask",
      "offset": [
        16291,
        16294
      ],
      "op": "ADD",
      "path": "2"
    },
    "3240": {
      "fn": "Governance.completeTask",
      "offset": [
        15335,
        16306
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x8AF"
    },
    "3243": {
      "fn": "Governance.completeTask",
      "offset": [
        15335,
        16306
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3244": {
      "fn": "Governance.completeTask",
      "offset": [
        15335,
        16306
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3245": {
      "fn": "Governance.completeTask",
      "offset": [
        15335,
        16306
      ],
      "op": "POP",
      "path": "2"
    },
    "3246": {
      "fn": "Governance.completeTask",
      "offset": [
        15155,
        16332
      ],
      "op": "POP",
      "path": "2"
    },
    "3247": {
      "fn": "Governance.completeTask",
      "offset": [
        15155,
        16332
      ],
      "op": "POP",
      "path": "2"
    },
    "3248": {
      "fn": "Governance.completeTask",
      "offset": [
        15155,
        16332
      ],
      "op": "POP",
      "path": "2"
    },
    "3249": {
      "fn": "Governance.completeTask",
      "jump": "o",
      "offset": [
        15155,
        16332
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3250": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4956,
        5925
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3251": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5023,
        5030
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3253": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5064,
        5078
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 18,
      "value": "0x8"
    },
    "3255": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5064,
        5078
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3256": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5051,
        5061
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3257": {
      "branch": 102,
      "fn": "Governance.getWinningVote",
      "offset": [
        5051,
        5078
      ],
      "op": "LT",
      "path": "2"
    },
    "3258": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5043,
        5099
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xCF8"
    },
    "3261": {
      "branch": 102,
      "fn": "Governance.getWinningVote",
      "offset": [
        5043,
        5099
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3262": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5043,
        5099
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3264": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5043,
        5099
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3265": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3269": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3271": {
      "op": "SHL"
    },
    "3272": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5043,
        5099
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3273": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5043,
        5099
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3274": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3276": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5043,
        5099
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3278": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5043,
        5099
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3279": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5043,
        5099
      ],
      "op": "ADD",
      "path": "2"
    },
    "3280": {
      "op": "MSTORE"
    },
    "3281": {
      "op": "PUSH1",
      "value": "0x10"
    },
    "3283": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3285": {
      "op": "DUP3"
    },
    "3286": {
      "op": "ADD"
    },
    "3287": {
      "op": "MSTORE"
    },
    "3288": {
      "op": "PUSH16",
      "value": "0x1B9BC81CDD58DA081C1C9BDC1BDCD85B"
    },
    "3305": {
      "op": "PUSH1",
      "value": "0x82"
    },
    "3307": {
      "op": "SHL"
    },
    "3308": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3310": {
      "op": "DUP3"
    },
    "3311": {
      "op": "ADD"
    },
    "3312": {
      "op": "MSTORE"
    },
    "3313": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3315": {
      "op": "ADD"
    },
    "3316": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5043,
        5099
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x807"
    },
    "3319": {
      "op": "JUMP"
    },
    "3320": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5043,
        5099
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3321": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5136,
        5157
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 19,
      "value": "0x0"
    },
    "3323": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5136,
        5157
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3324": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5136,
        5157
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3325": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5136,
        5157
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3326": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5136,
        5145
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "3328": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5136,
        5157
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3330": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5136,
        5157
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3331": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5136,
        5157
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3333": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5136,
        5157
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3334": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5136,
        5157
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "3335": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5136,
        5170
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "3337": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5136,
        5170
      ],
      "op": "ADD",
      "path": "2"
    },
    "3338": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5136,
        5170
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3339": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3341": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "3343": {
      "op": "SHL"
    },
    "3344": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5136,
        5170
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3345": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5136,
        5170
      ],
      "op": "DIV",
      "path": "2"
    },
    "3346": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5136,
        5170
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "3352": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5136,
        5170
      ],
      "op": "AND",
      "path": "2"
    },
    "3353": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5118,
        5133
      ],
      "op": "TIMESTAMP",
      "path": "2"
    },
    "3354": {
      "branch": 103,
      "fn": "Governance.getWinningVote",
      "offset": [
        5118,
        5170
      ],
      "op": "GT",
      "path": "2"
    },
    "3355": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5109,
        5194
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xD5C"
    },
    "3358": {
      "branch": 103,
      "fn": "Governance.getWinningVote",
      "offset": [
        5109,
        5194
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3359": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5109,
        5194
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3361": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5109,
        5194
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3362": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3366": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3368": {
      "op": "SHL"
    },
    "3369": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5109,
        5194
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3370": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5109,
        5194
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3371": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3373": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5109,
        5194
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3375": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5109,
        5194
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3376": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5109,
        5194
      ],
      "op": "ADD",
      "path": "2"
    },
    "3377": {
      "op": "MSTORE"
    },
    "3378": {
      "op": "PUSH1",
      "value": "0x13"
    },
    "3380": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3382": {
      "op": "DUP3"
    },
    "3383": {
      "op": "ADD"
    },
    "3384": {
      "op": "MSTORE"
    },
    "3385": {
      "op": "PUSH19",
      "value": "0x766F74696E67207374696C6C20616374697665"
    },
    "3405": {
      "op": "PUSH1",
      "value": "0x68"
    },
    "3407": {
      "op": "SHL"
    },
    "3408": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3410": {
      "op": "DUP3"
    },
    "3411": {
      "op": "ADD"
    },
    "3412": {
      "op": "MSTORE"
    },
    "3413": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3415": {
      "op": "ADD"
    },
    "3416": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5109,
        5194
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x807"
    },
    "3419": {
      "op": "JUMP"
    },
    "3420": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5109,
        5194
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3421": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5314,
        5333
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3423": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5343,
        5368
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3424": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5378,
        5389
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3426": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5405,
        5414
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3427": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5401,
        5846
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3428": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5421,
        5442
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3430": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5421,
        5442
      ],
      "op": "DUP7",
      "path": "2"
    },
    "3431": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5421,
        5442
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3432": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5421,
        5442
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3433": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5421,
        5430
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "3435": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5421,
        5442
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3437": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5421,
        5442
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3438": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5421,
        5442
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3440": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5421,
        5442
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3441": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5421,
        5442
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "3442": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5421,
        5458
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "3444": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5421,
        5458
      ],
      "op": "ADD",
      "path": "2"
    },
    "3445": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5421,
        5458
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3446": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5421,
        5458
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "3449": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5421,
        5458
      ],
      "op": "AND",
      "path": "2"
    },
    "3450": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5418,
        5458
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3451": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5418,
        5458
      ],
      "op": "LT",
      "path": "2"
    },
    "3452": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5401,
        5846
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3453": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5401,
        5846
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE7D"
    },
    "3456": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5401,
        5846
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3457": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5517,
        5538
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3459": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5517,
        5538
      ],
      "op": "DUP7",
      "path": "2"
    },
    "3460": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5517,
        5538
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3461": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5517,
        5538
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3462": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5517,
        5526
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "3464": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5517,
        5538
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3466": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5517,
        5538
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3467": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5517,
        5538
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3469": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5517,
        5538
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3470": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5517,
        5538
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "3471": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5550,
        5567
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3472": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5550,
        5567
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3473": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5517,
        5544
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "3475": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5517,
        5544
      ],
      "op": "ADD",
      "path": "2"
    },
    "3476": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5545,
        5546
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3477": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5517,
        5547
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x8"
    },
    "3479": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5517,
        5547
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3480": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5517,
        5547
      ],
      "op": "LT",
      "path": "2"
    },
    "3481": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5517,
        5547
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xDA4"
    },
    "3484": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5517,
        5547
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3485": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5517,
        5547
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xDA4"
    },
    "3488": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5517,
        5547
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x30BE"
    },
    "3491": {
      "fn": "Governance.getWinningVote",
      "jump": "i",
      "offset": [
        5517,
        5547
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3492": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5517,
        5547
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3493": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5517,
        5547
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x10"
    },
    "3495": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5517,
        5547
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3496": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5517,
        5547
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3497": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5517,
        5547
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3498": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5517,
        5547
      ],
      "op": "DIV",
      "path": "2"
    },
    "3499": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5517,
        5547
      ],
      "op": "ADD",
      "path": "2"
    },
    "3500": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5517,
        5547
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3501": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5517,
        5547
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3502": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5517,
        5547
      ],
      "op": "MOD",
      "path": "2"
    },
    "3503": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5517,
        5547
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "3505": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5517,
        5547
      ],
      "op": "MUL",
      "path": "2"
    },
    "3506": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5517,
        5547
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3507": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5517,
        5547
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3508": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5517,
        5547
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3509": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5517,
        5547
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "3512": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5517,
        5547
      ],
      "op": "EXP",
      "path": "2"
    },
    "3513": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5517,
        5547
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3514": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5517,
        5547
      ],
      "op": "DIV",
      "path": "2"
    },
    "3515": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5517,
        5547
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "3518": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5517,
        5547
      ],
      "op": "AND",
      "path": "2"
    },
    "3519": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5517,
        5567
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "3522": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5517,
        5567
      ],
      "op": "AND",
      "path": "2"
    },
    "3523": {
      "branch": 104,
      "fn": "Governance.getWinningVote",
      "offset": [
        5517,
        5567
      ],
      "op": "GT",
      "path": "2"
    },
    "3524": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5514,
        5836
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3525": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5514,
        5836
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE1F"
    },
    "3528": {
      "branch": 104,
      "fn": "Governance.getWinningVote",
      "offset": [
        5514,
        5836
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3529": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5607,
        5628
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 20,
      "value": "0x0"
    },
    "3531": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5607,
        5628
      ],
      "op": "DUP7",
      "path": "2"
    },
    "3532": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5607,
        5628
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3533": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5607,
        5628
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3534": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5607,
        5616
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "3536": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5607,
        5628
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3538": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5607,
        5628
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3539": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5607,
        5628
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3541": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5607,
        5628
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3542": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5607,
        5628
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "3543": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5607,
        5634
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "3545": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5607,
        5634
      ],
      "op": "ADD",
      "path": "2"
    },
    "3546": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5635,
        5636
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3547": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5607,
        5637
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x8"
    },
    "3549": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5607,
        5637
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3550": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5607,
        5637
      ],
      "op": "LT",
      "path": "2"
    },
    "3551": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5607,
        5637
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xDEA"
    },
    "3554": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5607,
        5637
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3555": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5607,
        5637
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xDEA"
    },
    "3558": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5607,
        5637
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x30BE"
    },
    "3561": {
      "fn": "Governance.getWinningVote",
      "jump": "i",
      "offset": [
        5607,
        5637
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3562": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5607,
        5637
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3563": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5607,
        5637
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x10"
    },
    "3565": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5607,
        5637
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3566": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5607,
        5637
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3567": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5607,
        5637
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3568": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5607,
        5637
      ],
      "op": "DIV",
      "path": "2"
    },
    "3569": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5607,
        5637
      ],
      "op": "ADD",
      "path": "2"
    },
    "3570": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5607,
        5637
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3571": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5607,
        5637
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3572": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5607,
        5637
      ],
      "op": "MOD",
      "path": "2"
    },
    "3573": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5607,
        5637
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "3575": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5607,
        5637
      ],
      "op": "MUL",
      "path": "2"
    },
    "3576": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5607,
        5637
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3577": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5607,
        5637
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3578": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5607,
        5637
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3579": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5607,
        5637
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "3582": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5607,
        5637
      ],
      "op": "EXP",
      "path": "2"
    },
    "3583": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5607,
        5637
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3584": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5607,
        5637
      ],
      "op": "DIV",
      "path": "2"
    },
    "3585": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5607,
        5637
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "3588": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5607,
        5637
      ],
      "op": "AND",
      "path": "2"
    },
    "3589": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5587,
        5637
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "3592": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5587,
        5637
      ],
      "op": "AND",
      "path": "2"
    },
    "3593": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5587,
        5637
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3594": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5587,
        5637
      ],
      "op": "POP",
      "path": "2"
    },
    "3595": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5669,
        5670
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 21
    },
    "3596": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5655,
        5670
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "3597": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5655,
        5670
      ],
      "op": "POP",
      "path": "2"
    },
    "3598": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5692,
        5695
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3599": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5697,
        5698
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "3601": {
      "branch": 105,
      "fn": "Governance.getWinningVote",
      "offset": [
        5692,
        5698
      ],
      "op": "SUB",
      "path": "2"
    },
    "3602": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5688,
        5711
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE1A"
    },
    "3605": {
      "branch": 105,
      "fn": "Governance.getWinningVote",
      "offset": [
        5688,
        5711
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3606": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5708,
        5709
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 22,
      "value": "0x0"
    },
    "3608": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5702,
        5709
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3609": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5702,
        5709
      ],
      "op": "POP",
      "path": "2"
    },
    "3610": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5688,
        5711
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3611": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5514,
        5836
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE6B"
    },
    "3614": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5514,
        5836
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3615": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5514,
        5836
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3616": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5746,
        5767
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3618": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5746,
        5767
      ],
      "op": "DUP7",
      "path": "2"
    },
    "3619": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5746,
        5767
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3620": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5746,
        5767
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3621": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5746,
        5755
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "3623": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5746,
        5767
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3625": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5746,
        5767
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3626": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5746,
        5767
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3628": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5746,
        5767
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3629": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5746,
        5767
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "3630": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5780,
        5797
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3631": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5780,
        5797
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3632": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5746,
        5773
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "3634": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5746,
        5773
      ],
      "op": "ADD",
      "path": "2"
    },
    "3635": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5774,
        5775
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3636": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5746,
        5776
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x8"
    },
    "3638": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5746,
        5776
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3639": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5746,
        5776
      ],
      "op": "LT",
      "path": "2"
    },
    "3640": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5746,
        5776
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE43"
    },
    "3643": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5746,
        5776
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3644": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5746,
        5776
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE43"
    },
    "3647": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5746,
        5776
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x30BE"
    },
    "3650": {
      "fn": "Governance.getWinningVote",
      "jump": "i",
      "offset": [
        5746,
        5776
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3651": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5746,
        5776
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3652": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5746,
        5776
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x10"
    },
    "3654": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5746,
        5776
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3655": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5746,
        5776
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3656": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5746,
        5776
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3657": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5746,
        5776
      ],
      "op": "DIV",
      "path": "2"
    },
    "3658": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5746,
        5776
      ],
      "op": "ADD",
      "path": "2"
    },
    "3659": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5746,
        5776
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3660": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5746,
        5776
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3661": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5746,
        5776
      ],
      "op": "MOD",
      "path": "2"
    },
    "3662": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5746,
        5776
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "3664": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5746,
        5776
      ],
      "op": "MUL",
      "path": "2"
    },
    "3665": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5746,
        5776
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3666": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5746,
        5776
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3667": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5746,
        5776
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3668": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5746,
        5776
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "3671": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5746,
        5776
      ],
      "op": "EXP",
      "path": "2"
    },
    "3672": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5746,
        5776
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3673": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5746,
        5776
      ],
      "op": "DIV",
      "path": "2"
    },
    "3674": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5746,
        5776
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "3677": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5746,
        5776
      ],
      "op": "AND",
      "path": "2"
    },
    "3678": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5746,
        5797
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "3681": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5746,
        5797
      ],
      "op": "AND",
      "path": "2"
    },
    "3682": {
      "branch": 106,
      "fn": "Governance.getWinningVote",
      "offset": [
        5746,
        5797
      ],
      "op": "SUB",
      "path": "2"
    },
    "3683": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5743,
        5836
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE6B"
    },
    "3686": {
      "branch": 106,
      "fn": "Governance.getWinningVote",
      "offset": [
        5743,
        5836
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3687": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5820,
        5821
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 23,
      "value": "0x1"
    },
    "3689": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5816,
        5821
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3690": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5816,
        5821
      ],
      "op": "POP",
      "path": "2"
    },
    "3691": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5743,
        5836
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3692": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5460,
        5463
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 24
    },
    "3693": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5460,
        5463
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE75"
    },
    "3696": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5460,
        5463
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3697": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5460,
        5463
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3398"
    },
    "3700": {
      "fn": "Governance.getWinningVote",
      "jump": "i",
      "offset": [
        5460,
        5463
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3701": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5460,
        5463
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3702": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5460,
        5463
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3703": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5460,
        5463
      ],
      "op": "POP",
      "path": "2"
    },
    "3704": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5460,
        5463
      ],
      "op": "POP",
      "path": "2"
    },
    "3705": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5401,
        5846
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xD63"
    },
    "3708": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5401,
        5846
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3709": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5401,
        5846
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3710": {
      "op": "POP"
    },
    "3711": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5863,
        5869
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 25
    },
    "3712": {
      "branch": 107,
      "fn": "Governance.getWinningVote",
      "offset": [
        5863,
        5869
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3713": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5855,
        5890
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xEBF"
    },
    "3716": {
      "branch": 107,
      "fn": "Governance.getWinningVote",
      "offset": [
        5855,
        5890
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3717": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5855,
        5890
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3719": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5855,
        5890
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3720": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3724": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3726": {
      "op": "SHL"
    },
    "3727": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5855,
        5890
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3728": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5855,
        5890
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3729": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3731": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5855,
        5890
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3733": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5855,
        5890
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3734": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5855,
        5890
      ],
      "op": "ADD",
      "path": "2"
    },
    "3735": {
      "op": "MSTORE"
    },
    "3736": {
      "op": "PUSH1",
      "value": "0x10"
    },
    "3738": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3740": {
      "op": "DUP3"
    },
    "3741": {
      "op": "ADD"
    },
    "3742": {
      "op": "MSTORE"
    },
    "3743": {
      "op": "PUSH16",
      "value": "0x3A3432B932903BB0B99030903A34B297"
    },
    "3760": {
      "op": "PUSH1",
      "value": "0x81"
    },
    "3762": {
      "op": "SHL"
    },
    "3763": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3765": {
      "op": "DUP3"
    },
    "3766": {
      "op": "ADD"
    },
    "3767": {
      "op": "MSTORE"
    },
    "3768": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3770": {
      "op": "ADD"
    },
    "3771": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5855,
        5890
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x807"
    },
    "3774": {
      "op": "JUMP"
    },
    "3775": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5855,
        5890
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3776": {
      "op": "POP"
    },
    "3777": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5907,
        5918
      ],
      "op": "SWAP1",
      "path": "2",
      "statement": 26
    },
    "3778": {
      "fn": "Governance.getWinningVote",
      "offset": [
        5907,
        5918
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "3779": {
      "fn": "Governance.getWinningVote",
      "offset": [
        4956,
        5925
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3780": {
      "op": "POP"
    },
    "3781": {
      "op": "POP"
    },
    "3782": {
      "op": "POP"
    },
    "3783": {
      "fn": "Governance.getWinningVote",
      "jump": "o",
      "offset": [
        4956,
        5925
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3784": {
      "fn": "Governance.vote",
      "offset": [
        9993,
        10657
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3785": {
      "offset": [
        21569,
        21600
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3787": {
      "fn": "Governance.vote",
      "offset": [
        21569,
        21600
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3788": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3792": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3794": {
      "op": "SHL"
    },
    "3795": {
      "offset": [
        21569,
        21600
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3796": {
      "fn": "Governance.vote",
      "offset": [
        21569,
        21600
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3797": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3799": {
      "offset": [
        21569,
        21600
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3801": {
      "fn": "Governance.vote",
      "offset": [
        21569,
        21600
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3802": {
      "fn": "Governance.vote",
      "offset": [
        21569,
        21600
      ],
      "op": "ADD",
      "path": "2"
    },
    "3803": {
      "op": "MSTORE"
    },
    "3804": {
      "op": "PUSH1",
      "value": "0xE"
    },
    "3806": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3808": {
      "op": "DUP3"
    },
    "3809": {
      "op": "ADD"
    },
    "3810": {
      "op": "MSTORE"
    },
    "3811": {
      "op": "PUSH14",
      "value": "0x26BAB9BA1031329036B2B6B132B9"
    },
    "3826": {
      "op": "PUSH1",
      "value": "0x91"
    },
    "3828": {
      "op": "SHL"
    },
    "3829": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3831": {
      "op": "DUP3"
    },
    "3832": {
      "op": "ADD"
    },
    "3833": {
      "op": "MSTORE"
    },
    "3834": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3836": {
      "op": "ADD"
    },
    "3837": {
      "offset": [
        21569,
        21600
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x807"
    },
    "3840": {
      "op": "JUMP"
    },
    "3841": {
      "offset": [
        2773,
        2811
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3842": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x9"
    },
    "3844": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3846": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3847": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3849": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3850": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3851": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3852": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3854": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3855": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "3856": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3857": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3858": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3859": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3860": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF1C"
    },
    "3863": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3864": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3084"
    },
    "3867": {
      "fn": "Governance.vote",
      "jump": "i",
      "offset": [
        2773,
        2811
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3868": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3869": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3870": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "3872": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "ADD",
      "path": "2"
    },
    "3873": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3875": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3876": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3877": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "DIV",
      "path": "2"
    },
    "3878": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "MUL",
      "path": "2"
    },
    "3879": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3881": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "ADD",
      "path": "2"
    },
    "3882": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3884": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3885": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3886": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3887": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "ADD",
      "path": "2"
    },
    "3888": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3890": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3891": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3892": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3893": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3894": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3895": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3896": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3897": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3898": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3900": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "ADD",
      "path": "2"
    },
    "3901": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3902": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3903": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3904": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF48"
    },
    "3907": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3908": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3084"
    },
    "3911": {
      "fn": "Governance.vote",
      "jump": "i",
      "offset": [
        2773,
        2811
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3912": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3913": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3914": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3915": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF95"
    },
    "3918": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3919": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3920": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "3922": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "LT",
      "path": "2"
    },
    "3923": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF6A"
    },
    "3926": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3927": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "3930": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3931": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3932": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3933": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "DIV",
      "path": "2"
    },
    "3934": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "MUL",
      "path": "2"
    },
    "3935": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3936": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3937": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3938": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3940": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "ADD",
      "path": "2"
    },
    "3941": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3942": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF95"
    },
    "3945": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3946": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3947": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3948": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "ADD",
      "path": "2"
    },
    "3949": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3950": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3951": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3953": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3954": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3956": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3958": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "3959": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3960": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3961": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3962": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3963": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3964": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3965": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3966": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "3968": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "ADD",
      "path": "2"
    },
    "3969": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3970": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3972": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "ADD",
      "path": "2"
    },
    "3973": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3974": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3975": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "GT",
      "path": "2"
    },
    "3976": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF78"
    },
    "3979": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3980": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3981": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3982": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "SUB",
      "path": "2"
    },
    "3983": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "3985": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "AND",
      "path": "2"
    },
    "3986": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3987": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "ADD",
      "path": "2"
    },
    "3988": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3989": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3990": {
      "op": "POP"
    },
    "3991": {
      "op": "POP"
    },
    "3992": {
      "op": "POP"
    },
    "3993": {
      "offset": [
        2773,
        2811
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "3995": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "DUP5",
      "path": "2"
    },
    "3996": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "ADD",
      "path": "2"
    },
    "3997": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3998": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "4000": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "DUP6",
      "path": "2"
    },
    "4001": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "ADD",
      "path": "2"
    },
    "4002": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4003": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "4005": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "DUP7",
      "path": "2"
    },
    "4006": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "ADD",
      "path": "2"
    },
    "4007": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4008": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "4010": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4011": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "SWAP7",
      "path": "2"
    },
    "4012": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "ADD",
      "path": "2"
    },
    "4013": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4014": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "4015": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "4016": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "4022": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "4023": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4024": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "AND",
      "path": "2"
    },
    "4025": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "4026": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4027": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "4028": {
      "op": "POP"
    },
    "4029": {
      "offset": [
        2773,
        2811
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "4030": {
      "op": "POP"
    },
    "4031": {
      "offset": [
        2773,
        2811
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "4033": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4034": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "AND",
      "path": "2"
    },
    "4035": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4036": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "PUSH3",
      "path": "2",
      "value": "0xFFFFFF"
    },
    "4040": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "4043": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4044": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "DIV",
      "path": "2"
    },
    "4045": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "AND",
      "path": "2"
    },
    "4046": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4047": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4049": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4051": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "4053": {
      "op": "SHL"
    },
    "4054": {
      "op": "SUB"
    },
    "4055": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4057": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4059": {
      "op": "SHL"
    },
    "4060": {
      "offset": [
        2773,
        2811
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4061": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "DIV",
      "path": "2"
    },
    "4062": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "AND",
      "path": "2"
    },
    "4063": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4064": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "4067": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4069": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "4071": {
      "op": "SHL"
    },
    "4072": {
      "offset": [
        2773,
        2811
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4073": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "DIV",
      "path": "2"
    },
    "4074": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4075": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "AND",
      "path": "2"
    },
    "4076": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "4077": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4079": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4081": {
      "op": "SHL"
    },
    "4082": {
      "offset": [
        2773,
        2811
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4083": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "DIV",
      "path": "2"
    },
    "4084": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4085": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4086": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "AND",
      "path": "2"
    },
    "4087": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4088": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4090": {
      "op": "PUSH1",
      "value": "0x90"
    },
    "4092": {
      "op": "SHL"
    },
    "4093": {
      "offset": [
        2773,
        2811
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4094": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4095": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "DIV",
      "path": "2"
    },
    "4096": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "AND",
      "path": "2"
    },
    "4097": {
      "fn": "Governance.vote",
      "offset": [
        2773,
        2811
      ],
      "op": "DUP11",
      "path": "2"
    },
    "4098": {
      "fn": "Governance.vote",
      "jump": "o",
      "offset": [
        2773,
        2811
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4099": {
      "fn": "Governance.getTaskById",
      "offset": [
        4443,
        4555
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4100": {
      "fn": "Governance.getTaskById",
      "offset": [
        4504,
        4515
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100B"
    },
    "4103": {
      "fn": "Governance.getTaskById",
      "offset": [
        4504,
        4515
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x284A"
    },
    "4106": {
      "fn": "Governance.getTaskById",
      "jump": "i",
      "offset": [
        4504,
        4515
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4107": {
      "fn": "Governance.getTaskById",
      "offset": [
        4504,
        4515
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4108": {
      "fn": "Governance.getTaskById",
      "offset": [
        4534,
        4548
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 27,
      "value": "0x0"
    },
    "4110": {
      "fn": "Governance.getTaskById",
      "offset": [
        4534,
        4548
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4111": {
      "fn": "Governance.getTaskById",
      "offset": [
        4534,
        4548
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4112": {
      "fn": "Governance.getTaskById",
      "offset": [
        4534,
        4548
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4113": {
      "fn": "Governance.getTaskById",
      "offset": [
        4534,
        4539
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x9"
    },
    "4115": {
      "fn": "Governance.getTaskById",
      "offset": [
        4534,
        4548
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4117": {
      "fn": "Governance.getTaskById",
      "offset": [
        4534,
        4548
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4118": {
      "fn": "Governance.getTaskById",
      "offset": [
        4534,
        4548
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4120": {
      "fn": "Governance.getTaskById",
      "offset": [
        4534,
        4548
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4121": {
      "fn": "Governance.getTaskById",
      "offset": [
        4534,
        4548
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4122": {
      "fn": "Governance.getTaskById",
      "offset": [
        4534,
        4548
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4123": {
      "fn": "Governance.getTaskById",
      "offset": [
        4534,
        4548
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "4124": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4125": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4126": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x140"
    },
    "4129": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4130": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "ADD",
      "path": "2"
    },
    "4131": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4132": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "4133": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4134": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4135": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4136": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4137": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4138": {
      "fn": "Governance.getTaskById",
      "offset": [
        4534,
        4548
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4139": {
      "fn": "Governance.getTaskById",
      "offset": [
        4534,
        4548
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4140": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1034"
    },
    "4143": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4144": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3084"
    },
    "4147": {
      "fn": "Governance.getTaskById",
      "jump": "i",
      "offset": [
        4527,
        4548
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4148": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4149": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4150": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "4152": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "ADD",
      "path": "2"
    },
    "4153": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4155": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4156": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4157": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "DIV",
      "path": "2"
    },
    "4158": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "MUL",
      "path": "2"
    },
    "4159": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4161": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "ADD",
      "path": "2"
    },
    "4162": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4164": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4165": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4166": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4167": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "ADD",
      "path": "2"
    },
    "4168": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4170": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4171": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4172": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "4173": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4174": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4175": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4176": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4177": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4178": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4180": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "ADD",
      "path": "2"
    },
    "4181": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4182": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4183": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4184": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1060"
    },
    "4187": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4188": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3084"
    },
    "4191": {
      "fn": "Governance.getTaskById",
      "jump": "i",
      "offset": [
        4527,
        4548
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4192": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4193": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4194": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "4195": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x10AD"
    },
    "4198": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4199": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4200": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "4202": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "LT",
      "path": "2"
    },
    "4203": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1082"
    },
    "4206": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4207": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "4210": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4211": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4212": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4213": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "DIV",
      "path": "2"
    },
    "4214": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "MUL",
      "path": "2"
    },
    "4215": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4216": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4217": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4218": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4220": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "ADD",
      "path": "2"
    },
    "4221": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4222": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x10AD"
    },
    "4225": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4226": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4227": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4228": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "ADD",
      "path": "2"
    },
    "4229": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4230": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4231": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4233": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4234": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4236": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4238": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "4239": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4240": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4241": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4242": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4243": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4244": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4245": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4246": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "4248": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "ADD",
      "path": "2"
    },
    "4249": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4250": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4252": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "ADD",
      "path": "2"
    },
    "4253": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4254": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4255": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "GT",
      "path": "2"
    },
    "4256": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1090"
    },
    "4259": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4260": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4261": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4262": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "SUB",
      "path": "2"
    },
    "4263": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "4265": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "AND",
      "path": "2"
    },
    "4266": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4267": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "ADD",
      "path": "2"
    },
    "4268": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4269": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4270": {
      "op": "POP"
    },
    "4271": {
      "op": "POP"
    },
    "4272": {
      "op": "POP"
    },
    "4273": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4274": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4275": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4276": {
      "op": "POP"
    },
    "4277": {
      "op": "POP"
    },
    "4278": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "4280": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4281": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "ADD",
      "path": "2"
    },
    "4282": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4283": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "4289": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4290": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4291": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "AND",
      "path": "2"
    },
    "4292": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4294": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4295": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "ADD",
      "path": "2"
    },
    "4296": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4297": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "4299": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4300": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "ADD",
      "path": "2"
    },
    "4301": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4302": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4304": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4305": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "ADD",
      "path": "2"
    },
    "4306": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4307": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "4309": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4310": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "ADD",
      "path": "2"
    },
    "4311": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4312": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "4314": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4315": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "ADD",
      "path": "2"
    },
    "4316": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4317": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "4319": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4320": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "4321": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "ADD",
      "path": "2"
    },
    "4322": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4323": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "4325": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4326": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "AND",
      "path": "2"
    },
    "4327": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x80"
    },
    "4329": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4330": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "ADD",
      "path": "2"
    },
    "4331": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4332": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "4335": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4336": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4337": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "DIV",
      "path": "2"
    },
    "4338": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "PUSH3",
      "path": "2",
      "value": "0xFFFFFF"
    },
    "4342": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "AND",
      "path": "2"
    },
    "4343": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA0"
    },
    "4345": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "DUP5",
      "path": "2"
    },
    "4346": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "ADD",
      "path": "2"
    },
    "4347": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4348": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4350": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4352": {
      "op": "SHL"
    },
    "4353": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4354": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "DIV",
      "path": "2"
    },
    "4355": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4357": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4359": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "4361": {
      "op": "SHL"
    },
    "4362": {
      "op": "SUB"
    },
    "4363": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "AND",
      "path": "2"
    },
    "4364": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xC0"
    },
    "4366": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "DUP5",
      "path": "2"
    },
    "4367": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "ADD",
      "path": "2"
    },
    "4368": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4369": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4371": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "4373": {
      "op": "SHL"
    },
    "4374": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4375": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "DIV",
      "path": "2"
    },
    "4376": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "4379": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4380": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4381": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "AND",
      "path": "2"
    },
    "4382": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE0"
    },
    "4384": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "DUP6",
      "path": "2"
    },
    "4385": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "ADD",
      "path": "2"
    },
    "4386": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4387": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4389": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4391": {
      "op": "SHL"
    },
    "4392": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4393": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "DIV",
      "path": "2"
    },
    "4394": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "AND",
      "path": "2"
    },
    "4395": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4396": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4397": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "ADD",
      "path": "2"
    },
    "4398": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4399": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4401": {
      "op": "PUSH1",
      "value": "0x90"
    },
    "4403": {
      "op": "SHL"
    },
    "4404": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4405": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "DIV",
      "path": "2"
    },
    "4406": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4407": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4408": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "AND",
      "path": "2"
    },
    "4409": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x120"
    },
    "4412": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4413": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4414": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "ADD",
      "path": "2"
    },
    "4415": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4416": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "4417": {
      "fn": "Governance.getTaskById",
      "offset": [
        4527,
        4548
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4418": {
      "op": "POP"
    },
    "4419": {
      "op": "POP"
    },
    "4420": {
      "fn": "Governance.getTaskById",
      "jump": "o",
      "offset": [
        4443,
        4555
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4421": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6674,
        7974
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4422": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6745,
        6760
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "4424": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6772,
        6785
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4426": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6772,
        6785
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4427": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6795,
        7337
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4428": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6815,
        6824
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "4430": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6815,
        6831
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4431": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6812,
        6831
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4432": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6812,
        6831
      ],
      "op": "LT",
      "path": "2"
    },
    "4433": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6795,
        7337
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "4434": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6795,
        7337
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x12D6"
    },
    "4437": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6795,
        7337
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4438": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6897,
        6912
      ],
      "op": "TIMESTAMP",
      "path": "2"
    },
    "4439": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6850,
        6859
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "4441": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6860,
        6861
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4442": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6850,
        6862
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4443": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6850,
        6862
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4444": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6850,
        6862
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4445": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6850,
        6862
      ],
      "op": "LT",
      "path": "2"
    },
    "4446": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6850,
        6862
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1169"
    },
    "4449": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6850,
        6862
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4450": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6850,
        6862
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1169"
    },
    "4453": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6850,
        6862
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x30BE"
    },
    "4456": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        6850,
        6862
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4457": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6850,
        6862
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4458": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6850,
        6862
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4460": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6850,
        6862
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4461": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6850,
        6862
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4462": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6850,
        6862
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4463": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6850,
        6862
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4465": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6850,
        6862
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4466": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6850,
        6862
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4467": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6850,
        6862
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "4468": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6850,
        6894
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "4474": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6850,
        6894
      ],
      "op": "DUP10",
      "path": "2"
    },
    "4475": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6850,
        6894
      ],
      "op": "AND",
      "path": "2"
    },
    "4476": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6850,
        6894
      ],
      "op": "DUP5",
      "path": "2"
    },
    "4477": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6850,
        6894
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4478": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6850,
        6862
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "4480": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6850,
        6862
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4481": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6850,
        6862
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "4482": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6850,
        6862
      ],
      "op": "MUL",
      "path": "2"
    },
    "4483": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6850,
        6862
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4484": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6850,
        6862
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4485": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6850,
        6862
      ],
      "op": "ADD",
      "path": "2"
    },
    "4486": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6850,
        6894
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4487": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6850,
        6894
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4488": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6850,
        6894
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4490": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6850,
        6894
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4491": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6850,
        6894
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "4492": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6850,
        6894
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4493": {
      "branch": 108,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6850,
        6912
      ],
      "op": "LT",
      "path": "2"
    },
    "4494": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6850,
        6972
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4495": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6850,
        6972
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "4496": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6850,
        6972
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x11CD"
    },
    "4499": {
      "branch": 108,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6850,
        6972
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4500": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6850,
        6972
      ],
      "op": "POP",
      "path": "2"
    },
    "4501": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6957,
        6972
      ],
      "op": "TIMESTAMP",
      "path": "2"
    },
    "4502": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6928,
        6937
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "4504": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6938,
        6939
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4505": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6928,
        6940
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4506": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6928,
        6940
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4507": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6928,
        6940
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4508": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6928,
        6940
      ],
      "op": "LT",
      "path": "2"
    },
    "4509": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6928,
        6940
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x11A8"
    },
    "4512": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6928,
        6940
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4513": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6928,
        6940
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x11A8"
    },
    "4516": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6928,
        6940
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x30BE"
    },
    "4519": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        6928,
        6940
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4520": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6928,
        6940
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4521": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6928,
        6940
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4523": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6928,
        6940
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4524": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6928,
        6940
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4525": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6928,
        6940
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4526": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6928,
        6940
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4528": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6928,
        6940
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4529": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6928,
        6940
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4530": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6928,
        6940
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "4531": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6928,
        6940
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "4533": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6928,
        6940
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4534": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6928,
        6940
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4535": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6928,
        6940
      ],
      "op": "MUL",
      "path": "2"
    },
    "4536": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6928,
        6940
      ],
      "op": "ADD",
      "path": "2"
    },
    "4537": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6928,
        6953
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "4539": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6928,
        6953
      ],
      "op": "ADD",
      "path": "2"
    },
    "4540": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6928,
        6953
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4541": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4543": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "4545": {
      "op": "SHL"
    },
    "4546": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6928,
        6953
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4547": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6928,
        6953
      ],
      "op": "DIV",
      "path": "2"
    },
    "4548": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6928,
        6953
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "4554": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6928,
        6953
      ],
      "op": "AND",
      "path": "2"
    },
    "4555": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6928,
        6972
      ],
      "op": "GT",
      "path": "2"
    },
    "4556": {
      "branch": 109,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6928,
        6972
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "4557": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6850,
        6972
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4558": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6850,
        7019
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4559": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6850,
        7019
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "4560": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6850,
        7019
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x120C"
    },
    "4563": {
      "branch": 109,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6850,
        7019
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4564": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6850,
        7019
      ],
      "op": "POP",
      "path": "2"
    },
    "4565": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7004,
        7019
      ],
      "op": "TIMESTAMP",
      "path": "2"
    },
    "4566": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6976,
        6985
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "4568": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6986,
        6987
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4569": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6976,
        6988
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4570": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6976,
        6988
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4571": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6976,
        6988
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4572": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6976,
        6988
      ],
      "op": "LT",
      "path": "2"
    },
    "4573": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6976,
        6988
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x11E8"
    },
    "4576": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6976,
        6988
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4577": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6976,
        6988
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x11E8"
    },
    "4580": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6976,
        6988
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x30BE"
    },
    "4583": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        6976,
        6988
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4584": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6976,
        6988
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4585": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6976,
        6988
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4587": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6976,
        6988
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4588": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6976,
        6988
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4589": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6976,
        6988
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4590": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6976,
        6988
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4592": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6976,
        6988
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4593": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6976,
        6988
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4594": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6976,
        6988
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "4595": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6976,
        6988
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "4597": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6976,
        6988
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4598": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6976,
        6988
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4599": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6976,
        6988
      ],
      "op": "MUL",
      "path": "2"
    },
    "4600": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6976,
        6988
      ],
      "op": "ADD",
      "path": "2"
    },
    "4601": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6976,
        7001
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "4603": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6976,
        7001
      ],
      "op": "ADD",
      "path": "2"
    },
    "4604": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6976,
        7001
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4605": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4607": {
      "op": "PUSH1",
      "value": "0x78"
    },
    "4609": {
      "op": "SHL"
    },
    "4610": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6976,
        7001
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4611": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6976,
        7001
      ],
      "op": "DIV",
      "path": "2"
    },
    "4612": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6976,
        7001
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "4618": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6976,
        7001
      ],
      "op": "AND",
      "path": "2"
    },
    "4619": {
      "branch": 110,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6976,
        7019
      ],
      "op": "GT",
      "path": "2"
    },
    "4620": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6850,
        7019
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4621": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6850,
        7066
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4622": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6850,
        7066
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "4623": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6850,
        7066
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1249"
    },
    "4626": {
      "branch": 110,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6850,
        7066
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4627": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6850,
        7066
      ],
      "op": "POP",
      "path": "2"
    },
    "4628": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7065,
        7066
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "4630": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7035,
        7044
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "4632": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7045,
        7046
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4633": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7035,
        7047
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4634": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7035,
        7047
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4635": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7035,
        7047
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4636": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7035,
        7047
      ],
      "op": "LT",
      "path": "2"
    },
    "4637": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7035,
        7047
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1228"
    },
    "4640": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7035,
        7047
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4641": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7035,
        7047
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1228"
    },
    "4644": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7035,
        7047
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x30BE"
    },
    "4647": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        7035,
        7047
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4648": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7035,
        7047
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4649": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7035,
        7047
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4651": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7035,
        7047
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4652": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7035,
        7047
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4653": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7035,
        7047
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4654": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7035,
        7047
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4656": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7035,
        7047
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4657": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7035,
        7047
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4658": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7035,
        7047
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "4659": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7035,
        7047
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "4661": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7035,
        7047
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4662": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7035,
        7047
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4663": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7035,
        7047
      ],
      "op": "MUL",
      "path": "2"
    },
    "4664": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7035,
        7047
      ],
      "op": "ADD",
      "path": "2"
    },
    "4665": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7035,
        7062
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "4667": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7035,
        7062
      ],
      "op": "ADD",
      "path": "2"
    },
    "4668": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7035,
        7062
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4669": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4671": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4673": {
      "op": "SHL"
    },
    "4674": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7035,
        7062
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4675": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7035,
        7062
      ],
      "op": "DIV",
      "path": "2"
    },
    "4676": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7035,
        7062
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "4679": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7035,
        7062
      ],
      "op": "AND",
      "path": "2"
    },
    "4680": {
      "branch": 111,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7035,
        7066
      ],
      "op": "GT",
      "path": "2"
    },
    "4681": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6850,
        7066
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4682": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6847,
        7299
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "4683": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6847,
        7299
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1259"
    },
    "4686": {
      "branch": 111,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6847,
        7299
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4687": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7109,
        7116
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 28
    },
    "4688": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7109,
        7116
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "4690": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7109,
        7116
      ],
      "op": "ADD",
      "path": "2"
    },
    "4691": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7109,
        7116
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4692": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7109,
        7116
      ],
      "op": "POP",
      "path": "2"
    },
    "4693": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6847,
        7299
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x12CE"
    },
    "4696": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6847,
        7299
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4697": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6847,
        7299
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4698": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7194,
        7209
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4700": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7194,
        7209
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4701": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7194,
        7209
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4702": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7207,
        7208
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "4704": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7194,
        7209
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4705": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7194,
        7209
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4706": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7194,
        7209
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4707": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7194,
        7209
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4708": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7194,
        7209
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4709": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7194,
        7209
      ],
      "op": "ADD",
      "path": "2"
    },
    "4710": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7194,
        7209
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4711": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7194,
        7209
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "4712": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7194,
        7209
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4713": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7168,
        7192
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4715": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7168,
        7192
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4716": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7194,
        7209
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4717": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7194,
        7209
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4719": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7194,
        7209
      ],
      "op": "ADD",
      "path": "2"
    },
    "4720": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7194,
        7209
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4721": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7194,
        7209
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "4723": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7194,
        7209
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4724": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7194,
        7209
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4725": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7194,
        7209
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4727": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7194,
        7209
      ],
      "op": "ADD",
      "path": "2"
    },
    "4728": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7194,
        7209
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4729": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7194,
        7209
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "4731": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7194,
        7209
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4732": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7194,
        7209
      ],
      "op": "SUB",
      "path": "2"
    },
    "4733": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7194,
        7209
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4734": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7194,
        7209
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4735": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7194,
        7209
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1270"
    },
    "4738": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7194,
        7209
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4739": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7194,
        7209
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4740": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7194,
        7209
      ],
      "op": "POP",
      "path": "2"
    },
    "4741": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7194,
        7209
      ],
      "op": "POP",
      "path": "2"
    },
    "4742": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7168,
        7209
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4743": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7168,
        7209
      ],
      "op": "POP",
      "path": "2"
    },
    "4744": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7227,
        7251
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 29,
      "value": "0x40"
    },
    "4746": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7227,
        7251
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4747": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7227,
        7251
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4748": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7227,
        7251
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4750": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7227,
        7251
      ],
      "op": "ADD",
      "path": "2"
    },
    "4751": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7227,
        7251
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4753": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7227,
        7251
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4754": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7227,
        7251
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4755": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7227,
        7251
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x8"
    },
    "4757": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7227,
        7251
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4758": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7227,
        7251
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4759": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7227,
        7251
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4761": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7227,
        7251
      ],
      "op": "ADD",
      "path": "2"
    },
    "4762": {
      "op": "PUSH8",
      "value": "0x273790363AB1B597"
    },
    "4771": {
      "op": "PUSH1",
      "value": "0xC1"
    },
    "4773": {
      "op": "SHL"
    },
    "4774": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7227,
        7251
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4775": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7227,
        7251
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4776": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7227,
        7251
      ],
      "op": "POP",
      "path": "2"
    },
    "4777": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7227,
        7235
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4778": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7236,
        7237
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4780": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7227,
        7238
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4781": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7227,
        7238
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4782": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7227,
        7238
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4783": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7227,
        7238
      ],
      "op": "LT",
      "path": "2"
    },
    "4784": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7227,
        7238
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x12BB"
    },
    "4787": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7227,
        7238
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4788": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7227,
        7238
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x12BB"
    },
    "4791": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7227,
        7238
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x30BE"
    },
    "4794": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        7227,
        7238
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4795": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7227,
        7238
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4796": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7227,
        7238
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4798": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7227,
        7238
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4799": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7227,
        7238
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4800": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7227,
        7238
      ],
      "op": "MUL",
      "path": "2"
    },
    "4801": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7227,
        7238
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4802": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7227,
        7238
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4803": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7227,
        7238
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4804": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7227,
        7238
      ],
      "op": "ADD",
      "path": "2"
    },
    "4805": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7227,
        7238
      ],
      "op": "ADD",
      "path": "2"
    },
    "4806": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7227,
        7251
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4807": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7276,
        7284
      ],
      "op": "SWAP5",
      "path": "2",
      "statement": 30
    },
    "4808": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6674,
        7974
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "4809": {
      "op": "POP"
    },
    "4810": {
      "op": "POP"
    },
    "4811": {
      "op": "POP"
    },
    "4812": {
      "op": "POP"
    },
    "4813": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "o",
      "offset": [
        6674,
        7974
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4814": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6847,
        7299
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4815": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7322,
        7325
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 31,
      "value": "0x1"
    },
    "4817": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7322,
        7325
      ],
      "op": "ADD",
      "path": "2"
    },
    "4818": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6795,
        7337
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x114B"
    },
    "4821": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6795,
        7337
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4822": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6795,
        7337
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4823": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6795,
        7337
      ],
      "op": "POP",
      "path": "2"
    },
    "4824": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7347,
        7370
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4826": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7386,
        7391
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4827": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4829": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4831": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4833": {
      "op": "SHL"
    },
    "4834": {
      "op": "SUB"
    },
    "4835": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7373,
        7392
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4836": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7373,
        7392
      ],
      "op": "GT",
      "path": "2"
    },
    "4837": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7373,
        7392
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "4838": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7373,
        7392
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x12F1"
    },
    "4841": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7373,
        7392
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4842": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7373,
        7392
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x12F1"
    },
    "4845": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7373,
        7392
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x299D"
    },
    "4848": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        7373,
        7392
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4849": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7373,
        7392
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4850": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7373,
        7392
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4852": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7373,
        7392
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4853": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7373,
        7392
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4854": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7373,
        7392
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4855": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7373,
        7392
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4856": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7373,
        7392
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4857": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7373,
        7392
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4858": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7373,
        7392
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4860": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7373,
        7392
      ],
      "op": "MUL",
      "path": "2"
    },
    "4861": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7373,
        7392
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4863": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7373,
        7392
      ],
      "op": "ADD",
      "path": "2"
    },
    "4864": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7373,
        7392
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4865": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7373,
        7392
      ],
      "op": "ADD",
      "path": "2"
    },
    "4866": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7373,
        7392
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4868": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7373,
        7392
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4869": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7373,
        7392
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4870": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7373,
        7392
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "4871": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7373,
        7392
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1324"
    },
    "4874": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7373,
        7392
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4875": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7373,
        7392
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4876": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7373,
        7392
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4878": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7373,
        7392
      ],
      "op": "ADD",
      "path": "2"
    },
    "4879": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7373,
        7392
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4880": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7373,
        7392
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "4882": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7373,
        7392
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4883": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7373,
        7392
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4884": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7373,
        7392
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4886": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7373,
        7392
      ],
      "op": "ADD",
      "path": "2"
    },
    "4887": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7373,
        7392
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4888": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7373,
        7392
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "4890": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7373,
        7392
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4891": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7373,
        7392
      ],
      "op": "SUB",
      "path": "2"
    },
    "4892": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7373,
        7392
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4893": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7373,
        7392
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4894": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7373,
        7392
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x130F"
    },
    "4897": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7373,
        7392
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4898": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7373,
        7392
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4899": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7373,
        7392
      ],
      "op": "POP",
      "path": "2"
    },
    "4900": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7373,
        7392
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4901": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7373,
        7392
      ],
      "op": "POP",
      "path": "2"
    },
    "4902": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7347,
        7392
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4903": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7347,
        7392
      ],
      "op": "POP",
      "path": "2"
    },
    "4904": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7402,
        7417
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4906": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7435,
        7444
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4907": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7431,
        7944
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4908": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7451,
        7460
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "4910": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7451,
        7467
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4911": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7448,
        7467
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4912": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7448,
        7467
      ],
      "op": "LT",
      "path": "2"
    },
    "4913": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7431,
        7944
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "4914": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7431,
        7944
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x150F"
    },
    "4917": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7431,
        7944
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4918": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7533,
        7548
      ],
      "op": "TIMESTAMP",
      "path": "2"
    },
    "4919": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7486,
        7495
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "4921": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7496,
        7497
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4922": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7486,
        7498
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4923": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7486,
        7498
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4924": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7486,
        7498
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4925": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7486,
        7498
      ],
      "op": "LT",
      "path": "2"
    },
    "4926": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7486,
        7498
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1349"
    },
    "4929": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7486,
        7498
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4930": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7486,
        7498
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1349"
    },
    "4933": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7486,
        7498
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x30BE"
    },
    "4936": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        7486,
        7498
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4937": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7486,
        7498
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4938": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7486,
        7498
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4940": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7486,
        7498
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4941": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7486,
        7498
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4942": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7486,
        7498
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4943": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7486,
        7498
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4945": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7486,
        7498
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4946": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7486,
        7498
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4947": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7486,
        7498
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "4948": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7486,
        7530
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "4954": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7486,
        7530
      ],
      "op": "DUP12",
      "path": "2"
    },
    "4955": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7486,
        7530
      ],
      "op": "AND",
      "path": "2"
    },
    "4956": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7486,
        7530
      ],
      "op": "DUP5",
      "path": "2"
    },
    "4957": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7486,
        7530
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4958": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7486,
        7498
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "4960": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7486,
        7498
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4961": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7486,
        7498
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "4962": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7486,
        7498
      ],
      "op": "MUL",
      "path": "2"
    },
    "4963": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7486,
        7498
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4964": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7486,
        7498
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4965": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7486,
        7498
      ],
      "op": "ADD",
      "path": "2"
    },
    "4966": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7486,
        7530
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4967": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7486,
        7530
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4968": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7486,
        7530
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4970": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7486,
        7530
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4971": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7486,
        7530
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "4972": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7486,
        7530
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4973": {
      "branch": 112,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7486,
        7548
      ],
      "op": "LT",
      "path": "2"
    },
    "4974": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7486,
        7608
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4975": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7486,
        7608
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "4976": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7486,
        7608
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x13AD"
    },
    "4979": {
      "branch": 112,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7486,
        7608
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4980": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7486,
        7608
      ],
      "op": "POP",
      "path": "2"
    },
    "4981": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7593,
        7608
      ],
      "op": "TIMESTAMP",
      "path": "2"
    },
    "4982": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7564,
        7573
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "4984": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7574,
        7575
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4985": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7564,
        7576
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4986": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7564,
        7576
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4987": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7564,
        7576
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4988": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7564,
        7576
      ],
      "op": "LT",
      "path": "2"
    },
    "4989": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7564,
        7576
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1388"
    },
    "4992": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7564,
        7576
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4993": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7564,
        7576
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1388"
    },
    "4996": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7564,
        7576
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x30BE"
    },
    "4999": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        7564,
        7576
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5000": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7564,
        7576
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5001": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7564,
        7576
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5003": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7564,
        7576
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5004": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7564,
        7576
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5005": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7564,
        7576
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5006": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7564,
        7576
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5008": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7564,
        7576
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5009": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7564,
        7576
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5010": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7564,
        7576
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "5011": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7564,
        7576
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "5013": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7564,
        7576
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5014": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7564,
        7576
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5015": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7564,
        7576
      ],
      "op": "MUL",
      "path": "2"
    },
    "5016": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7564,
        7576
      ],
      "op": "ADD",
      "path": "2"
    },
    "5017": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7564,
        7589
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "5019": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7564,
        7589
      ],
      "op": "ADD",
      "path": "2"
    },
    "5020": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7564,
        7589
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5021": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5023": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "5025": {
      "op": "SHL"
    },
    "5026": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7564,
        7589
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5027": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7564,
        7589
      ],
      "op": "DIV",
      "path": "2"
    },
    "5028": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7564,
        7589
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "5034": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7564,
        7589
      ],
      "op": "AND",
      "path": "2"
    },
    "5035": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7564,
        7608
      ],
      "op": "GT",
      "path": "2"
    },
    "5036": {
      "branch": 113,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7564,
        7608
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "5037": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7486,
        7608
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5038": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7486,
        7655
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5039": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7486,
        7655
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "5040": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7486,
        7655
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x13EC"
    },
    "5043": {
      "branch": 113,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7486,
        7655
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5044": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7486,
        7655
      ],
      "op": "POP",
      "path": "2"
    },
    "5045": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7640,
        7655
      ],
      "op": "TIMESTAMP",
      "path": "2"
    },
    "5046": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7612,
        7621
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "5048": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7622,
        7623
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5049": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7612,
        7624
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5050": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7612,
        7624
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5051": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7612,
        7624
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5052": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7612,
        7624
      ],
      "op": "LT",
      "path": "2"
    },
    "5053": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7612,
        7624
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x13C8"
    },
    "5056": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7612,
        7624
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5057": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7612,
        7624
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x13C8"
    },
    "5060": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7612,
        7624
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x30BE"
    },
    "5063": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        7612,
        7624
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5064": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7612,
        7624
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5065": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7612,
        7624
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5067": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7612,
        7624
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5068": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7612,
        7624
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5069": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7612,
        7624
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5070": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7612,
        7624
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5072": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7612,
        7624
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5073": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7612,
        7624
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5074": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7612,
        7624
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "5075": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7612,
        7624
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "5077": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7612,
        7624
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5078": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7612,
        7624
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5079": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7612,
        7624
      ],
      "op": "MUL",
      "path": "2"
    },
    "5080": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7612,
        7624
      ],
      "op": "ADD",
      "path": "2"
    },
    "5081": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7612,
        7637
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "5083": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7612,
        7637
      ],
      "op": "ADD",
      "path": "2"
    },
    "5084": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7612,
        7637
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5085": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5087": {
      "op": "PUSH1",
      "value": "0x78"
    },
    "5089": {
      "op": "SHL"
    },
    "5090": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7612,
        7637
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5091": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7612,
        7637
      ],
      "op": "DIV",
      "path": "2"
    },
    "5092": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7612,
        7637
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "5098": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7612,
        7637
      ],
      "op": "AND",
      "path": "2"
    },
    "5099": {
      "branch": 114,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7612,
        7655
      ],
      "op": "GT",
      "path": "2"
    },
    "5100": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7486,
        7655
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5101": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7486,
        7702
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5102": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7486,
        7702
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "5103": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7486,
        7702
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1429"
    },
    "5106": {
      "branch": 114,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7486,
        7702
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5107": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7486,
        7702
      ],
      "op": "POP",
      "path": "2"
    },
    "5108": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7701,
        7702
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "5110": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7671,
        7680
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "5112": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7681,
        7682
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5113": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7671,
        7683
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5114": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7671,
        7683
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5115": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7671,
        7683
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5116": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7671,
        7683
      ],
      "op": "LT",
      "path": "2"
    },
    "5117": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7671,
        7683
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1408"
    },
    "5120": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7671,
        7683
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5121": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7671,
        7683
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1408"
    },
    "5124": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7671,
        7683
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x30BE"
    },
    "5127": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        7671,
        7683
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5128": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7671,
        7683
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5129": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7671,
        7683
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5131": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7671,
        7683
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5132": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7671,
        7683
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5133": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7671,
        7683
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5134": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7671,
        7683
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5136": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7671,
        7683
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5137": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7671,
        7683
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5138": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7671,
        7683
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "5139": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7671,
        7683
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "5141": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7671,
        7683
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5142": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7671,
        7683
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5143": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7671,
        7683
      ],
      "op": "MUL",
      "path": "2"
    },
    "5144": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7671,
        7683
      ],
      "op": "ADD",
      "path": "2"
    },
    "5145": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7671,
        7698
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "5147": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7671,
        7698
      ],
      "op": "ADD",
      "path": "2"
    },
    "5148": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7671,
        7698
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5149": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5151": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5153": {
      "op": "SHL"
    },
    "5154": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7671,
        7698
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5155": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7671,
        7698
      ],
      "op": "DIV",
      "path": "2"
    },
    "5156": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7671,
        7698
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "5159": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7671,
        7698
      ],
      "op": "AND",
      "path": "2"
    },
    "5160": {
      "branch": 115,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7671,
        7702
      ],
      "op": "GT",
      "path": "2"
    },
    "5161": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7486,
        7702
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5162": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7483,
        7906
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "5163": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7483,
        7906
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1507"
    },
    "5166": {
      "branch": 115,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7483,
        7906
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5167": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7748,
        7757
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 32,
      "value": "0x4"
    },
    "5169": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7758,
        7759
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5170": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7748,
        7760
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5171": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7748,
        7760
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5172": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7748,
        7760
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5173": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7748,
        7760
      ],
      "op": "LT",
      "path": "2"
    },
    "5174": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7748,
        7760
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1441"
    },
    "5177": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7748,
        7760
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5178": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7748,
        7760
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1441"
    },
    "5181": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7748,
        7760
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x30BE"
    },
    "5184": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        7748,
        7760
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5185": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7748,
        7760
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5186": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7748,
        7760
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5187": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7748,
        7760
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5189": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7748,
        7760
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5190": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7748,
        7760
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5192": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7748,
        7760
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5194": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7748,
        7760
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "5195": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7748,
        7760
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5196": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7748,
        7760
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "5198": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7748,
        7760
      ],
      "op": "MUL",
      "path": "2"
    },
    "5199": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7748,
        7760
      ],
      "op": "ADD",
      "path": "2"
    },
    "5200": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7748,
        7769
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "5202": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7748,
        7769
      ],
      "op": "ADD",
      "path": "2"
    },
    "5203": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7735,
        7769
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5204": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7735,
        7769
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5205": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7735,
        7769
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x145D"
    },
    "5208": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7735,
        7769
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5209": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7735,
        7769
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3084"
    },
    "5212": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        7735,
        7769
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5213": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7735,
        7769
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5214": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7735,
        7769
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5215": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7735,
        7769
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "5217": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7735,
        7769
      ],
      "op": "ADD",
      "path": "2"
    },
    "5218": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7735,
        7769
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5220": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7735,
        7769
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5221": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7735,
        7769
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5222": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7735,
        7769
      ],
      "op": "DIV",
      "path": "2"
    },
    "5223": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7735,
        7769
      ],
      "op": "MUL",
      "path": "2"
    },
    "5224": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7735,
        7769
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5226": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7735,
        7769
      ],
      "op": "ADD",
      "path": "2"
    },
    "5227": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7735,
        7769
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5229": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7735,
        7769
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5230": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7735,
        7769
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5231": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7735,
        7769
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5232": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7735,
        7769
      ],
      "op": "ADD",
      "path": "2"
    },
    "5233": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7735,
        7769
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5235": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7735,
        7769
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5236": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7735,
        7769
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5237": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7735,
        7769
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "5238": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7735,
        7769
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5239": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7735,
        7769
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5240": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7735,
        7769
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5241": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7735,
        7769
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5242": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7735,
        7769
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5243": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7735,
        7769
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5245": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7735,
        7769
      ],
      "op": "ADD",
      "path": "2"
    },
    "5246": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7735,
        7769
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5247": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7735,
        7769
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5248": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7735,
        7769
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5249": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7735,
        7769
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1489"
    },
    "5252": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7735,
        7769
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5253": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7735,
        7769
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3084"
    },
    "5256": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        7735,
        7769
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5257": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7735,
        7769
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5258": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7735,
        7769
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5259": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7735,
        7769
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "5260": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7735,
        7769
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x14D6"
    },
    "5263": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7735,
        7769
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5264": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7735,
        7769
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5265": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7735,
        7769
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "5267": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7735,
        7769
      ],
      "op": "LT",
      "path": "2"
    },
    "5268": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7735,
        7769
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x14AB"
    },
    "5271": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7735,
        7769
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5272": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7735,
        7769
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "5275": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7735,
        7769
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5276": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7735,
        7769
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5277": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7735,
        7769
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5278": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7735,
        7769
      ],
      "op": "DIV",
      "path": "2"
    },
    "5279": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7735,
        7769
      ],
      "op": "MUL",
      "path": "2"
    },
    "5280": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7735,
        7769
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5281": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7735,
        7769
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5282": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7735,
        7769
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5283": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7735,
        7769
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5285": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7735,
        7769
      ],
      "op": "ADD",
      "path": "2"
    },
    "5286": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7735,
        7769
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5287": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7735,
        7769
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x14D6"
    },
    "5290": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7735,
        7769
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5291": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7735,
        7769
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5292": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7735,
        7769
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5293": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7735,
        7769
      ],
      "op": "ADD",
      "path": "2"
    },
    "5294": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7735,
        7769
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5295": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7735,
        7769
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5296": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7735,
        7769
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5298": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7735,
        7769
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5299": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7735,
        7769
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5301": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7735,
        7769
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5303": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7735,
        7769
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "5304": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7735,
        7769
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5305": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7735,
        7769
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5306": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7735,
        7769
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5307": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7735,
        7769
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5308": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7735,
        7769
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5309": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7735,
        7769
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5310": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7735,
        7769
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5311": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7735,
        7769
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "5313": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7735,
        7769
      ],
      "op": "ADD",
      "path": "2"
    },
    "5314": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7735,
        7769
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5315": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7735,
        7769
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5317": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7735,
        7769
      ],
      "op": "ADD",
      "path": "2"
    },
    "5318": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7735,
        7769
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5319": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7735,
        7769
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5320": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7735,
        7769
      ],
      "op": "GT",
      "path": "2"
    },
    "5321": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7735,
        7769
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x14B9"
    },
    "5324": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7735,
        7769
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5325": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7735,
        7769
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5326": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7735,
        7769
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5327": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7735,
        7769
      ],
      "op": "SUB",
      "path": "2"
    },
    "5328": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7735,
        7769
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "5330": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7735,
        7769
      ],
      "op": "AND",
      "path": "2"
    },
    "5331": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7735,
        7769
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5332": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7735,
        7769
      ],
      "op": "ADD",
      "path": "2"
    },
    "5333": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7735,
        7769
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5334": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7735,
        7769
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5335": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7735,
        7769
      ],
      "op": "POP",
      "path": "2"
    },
    "5336": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7735,
        7769
      ],
      "op": "POP",
      "path": "2"
    },
    "5337": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7735,
        7769
      ],
      "op": "POP",
      "path": "2"
    },
    "5338": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7735,
        7769
      ],
      "op": "POP",
      "path": "2"
    },
    "5339": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7735,
        7769
      ],
      "op": "POP",
      "path": "2"
    },
    "5340": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7735,
        7742
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5341": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7743,
        7744
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5342": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7735,
        7745
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5343": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7735,
        7745
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5344": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7735,
        7745
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5345": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7735,
        7745
      ],
      "op": "LT",
      "path": "2"
    },
    "5346": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7735,
        7745
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x14ED"
    },
    "5349": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7735,
        7745
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5350": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7735,
        7745
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x14ED"
    },
    "5353": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7735,
        7745
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x30BE"
    },
    "5356": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "i",
      "offset": [
        7735,
        7745
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5357": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7735,
        7745
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5358": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7735,
        7745
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5360": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7735,
        7745
      ],
      "op": "MUL",
      "path": "2"
    },
    "5361": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7735,
        7745
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5363": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7735,
        7745
      ],
      "op": "ADD",
      "path": "2"
    },
    "5364": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7735,
        7745
      ],
      "op": "ADD",
      "path": "2"
    },
    "5365": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7735,
        7769
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5366": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7735,
        7769
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5367": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7735,
        7769
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5368": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7735,
        7769
      ],
      "op": "POP",
      "path": "2"
    },
    "5369": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7797,
        7806
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 33
    },
    "5370": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7797,
        7806
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "5372": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7797,
        7806
      ],
      "op": "ADD",
      "path": "2"
    },
    "5373": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7797,
        7806
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5374": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7797,
        7806
      ],
      "op": "POP",
      "path": "2"
    },
    "5375": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7839,
        7844
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5376": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7828,
        7835
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5377": {
      "branch": 116,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7828,
        7844
      ],
      "op": "LT",
      "path": "2"
    },
    "5378": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7825,
        7892
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "5379": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7868,
        7873
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 34,
      "value": "0x150F"
    },
    "5382": {
      "branch": 116,
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7825,
        7892
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5383": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7825,
        7892
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5384": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7929,
        7932
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 35,
      "value": "0x1"
    },
    "5386": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7929,
        7932
      ],
      "op": "ADD",
      "path": "2"
    },
    "5387": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7431,
        7944
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x132B"
    },
    "5390": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7431,
        7944
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5391": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7431,
        7944
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5392": {
      "op": "POP"
    },
    "5393": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7960,
        7967
      ],
      "op": "SWAP1",
      "path": "2",
      "statement": 36
    },
    "5394": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        7960,
        7967
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "5395": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "offset": [
        6674,
        7974
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "5396": {
      "op": "POP"
    },
    "5397": {
      "op": "POP"
    },
    "5398": {
      "op": "POP"
    },
    "5399": {
      "op": "POP"
    },
    "5400": {
      "fn": "Governance.getMyAvailableTaskTypes",
      "jump": "o",
      "offset": [
        6674,
        7974
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5401": {
      "fn": "Governance.createProposal",
      "offset": [
        10703,
        11465
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5402": {
      "fn": "Governance.createProposal",
      "offset": [
        10922,
        10923
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 37,
      "value": "0x1"
    },
    "5404": {
      "fn": "Governance.createProposal",
      "offset": [
        10903,
        10919
      ],
      "op": "DUP6",
      "path": "2"
    },
    "5405": {
      "fn": "Governance.createProposal",
      "offset": [
        10903,
        10923
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "5408": {
      "fn": "Governance.createProposal",
      "offset": [
        10903,
        10923
      ],
      "op": "AND",
      "path": "2"
    },
    "5409": {
      "branch": 117,
      "fn": "Governance.createProposal",
      "offset": [
        10903,
        10923
      ],
      "op": "GT",
      "path": "2"
    },
    "5410": {
      "fn": "Governance.createProposal",
      "offset": [
        10903,
        10949
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5411": {
      "fn": "Governance.createProposal",
      "offset": [
        10903,
        10949
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "5412": {
      "fn": "Governance.createProposal",
      "offset": [
        10903,
        10949
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1532"
    },
    "5415": {
      "branch": 117,
      "fn": "Governance.createProposal",
      "offset": [
        10903,
        10949
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5416": {
      "fn": "Governance.createProposal",
      "offset": [
        10903,
        10949
      ],
      "op": "POP",
      "path": "2"
    },
    "5417": {
      "fn": "Governance.createProposal",
      "offset": [
        10946,
        10949
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x101"
    },
    "5420": {
      "fn": "Governance.createProposal",
      "offset": [
        10927,
        10943
      ],
      "op": "DUP6",
      "path": "2"
    },
    "5421": {
      "fn": "Governance.createProposal",
      "offset": [
        10927,
        10949
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "5424": {
      "fn": "Governance.createProposal",
      "offset": [
        10927,
        10949
      ],
      "op": "AND",
      "path": "2"
    },
    "5425": {
      "branch": 118,
      "fn": "Governance.createProposal",
      "offset": [
        10927,
        10949
      ],
      "op": "LT",
      "path": "2"
    },
    "5426": {
      "fn": "Governance.createProposal",
      "offset": [
        10903,
        10949
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5427": {
      "fn": "Governance.createProposal",
      "offset": [
        10895,
        10979
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x157E"
    },
    "5430": {
      "branch": 118,
      "fn": "Governance.createProposal",
      "offset": [
        10895,
        10979
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5431": {
      "fn": "Governance.createProposal",
      "offset": [
        10895,
        10979
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5433": {
      "fn": "Governance.createProposal",
      "offset": [
        10895,
        10979
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5434": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5438": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5440": {
      "op": "SHL"
    },
    "5441": {
      "fn": "Governance.createProposal",
      "offset": [
        10895,
        10979
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5442": {
      "fn": "Governance.createProposal",
      "offset": [
        10895,
        10979
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5443": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5445": {
      "fn": "Governance.createProposal",
      "offset": [
        10895,
        10979
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "5447": {
      "fn": "Governance.createProposal",
      "offset": [
        10895,
        10979
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5448": {
      "fn": "Governance.createProposal",
      "offset": [
        10895,
        10979
      ],
      "op": "ADD",
      "path": "2"
    },
    "5449": {
      "op": "MSTORE"
    },
    "5450": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "5452": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5454": {
      "op": "DUP3"
    },
    "5455": {
      "op": "ADD"
    },
    "5456": {
      "op": "MSTORE"
    },
    "5457": {
      "op": "PUSH32",
      "value": "0x696E76616C6964206E756D626572206F66206F7074696F6E7300000000000000"
    },
    "5490": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5492": {
      "op": "DUP3"
    },
    "5493": {
      "op": "ADD"
    },
    "5494": {
      "op": "MSTORE"
    },
    "5495": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5497": {
      "op": "ADD"
    },
    "5498": {
      "fn": "Governance.createProposal",
      "offset": [
        10895,
        10979
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x807"
    },
    "5501": {
      "op": "JUMP"
    },
    "5502": {
      "fn": "Governance.createProposal",
      "offset": [
        10895,
        10979
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5503": {
      "fn": "Governance.createProposal",
      "offset": [
        11007,
        11008
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 38,
      "value": "0x1"
    },
    "5505": {
      "fn": "Governance.createProposal",
      "offset": [
        10989,
        11003
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x8"
    },
    "5507": {
      "fn": "Governance.createProposal",
      "offset": [
        10989,
        11003
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5509": {
      "fn": "Governance.createProposal",
      "offset": [
        10989,
        11008
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5510": {
      "fn": "Governance.createProposal",
      "offset": [
        10989,
        11008
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5511": {
      "fn": "Governance.createProposal",
      "offset": [
        10989,
        11008
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5512": {
      "fn": "Governance.createProposal",
      "offset": [
        10989,
        11008
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1591"
    },
    "5515": {
      "fn": "Governance.createProposal",
      "offset": [
        10989,
        11008
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5516": {
      "fn": "Governance.createProposal",
      "offset": [
        10989,
        11008
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5517": {
      "fn": "Governance.createProposal",
      "offset": [
        10989,
        11008
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3332"
    },
    "5520": {
      "fn": "Governance.createProposal",
      "jump": "i",
      "offset": [
        10989,
        11008
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5521": {
      "fn": "Governance.createProposal",
      "offset": [
        10989,
        11008
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5522": {
      "fn": "Governance.createProposal",
      "offset": [
        10989,
        11008
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5523": {
      "fn": "Governance.createProposal",
      "offset": [
        10989,
        11008
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5524": {
      "fn": "Governance.createProposal",
      "offset": [
        10989,
        11008
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "5525": {
      "op": "POP"
    },
    "5526": {
      "op": "POP"
    },
    "5527": {
      "fn": "Governance.createProposal",
      "offset": [
        11079,
        11093
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x8"
    },
    "5529": {
      "fn": "Governance.createProposal",
      "offset": [
        11079,
        11093
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5530": {
      "fn": "Governance.createProposal",
      "offset": [
        11039,
        11066
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5532": {
      "fn": "Governance.createProposal",
      "offset": [
        11069,
        11094
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5533": {
      "fn": "Governance.createProposal",
      "offset": [
        11069,
        11094
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5534": {
      "fn": "Governance.createProposal",
      "offset": [
        11069,
        11094
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5535": {
      "fn": "Governance.createProposal",
      "offset": [
        11069,
        11078
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "5537": {
      "fn": "Governance.createProposal",
      "offset": [
        11069,
        11094
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5539": {
      "fn": "Governance.createProposal",
      "offset": [
        11069,
        11094
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5540": {
      "fn": "Governance.createProposal",
      "offset": [
        11069,
        11094
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5542": {
      "fn": "Governance.createProposal",
      "offset": [
        11069,
        11094
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5543": {
      "fn": "Governance.createProposal",
      "offset": [
        11069,
        11094
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "5544": {
      "fn": "Governance.createProposal",
      "offset": [
        11108,
        11131
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 39,
      "value": "0x3"
    },
    "5546": {
      "fn": "Governance.createProposal",
      "offset": [
        11108,
        11131
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5547": {
      "fn": "Governance.createProposal",
      "offset": [
        11108,
        11131
      ],
      "op": "ADD",
      "path": "2"
    },
    "5548": {
      "fn": "Governance.createProposal",
      "offset": [
        11108,
        11147
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5549": {
      "fn": "Governance.createProposal",
      "offset": [
        11108,
        11147
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5550": {
      "op": "PUSH15",
      "value": "0xFFFFFFFFFFFFFFFFFFFF0000000000"
    },
    "5566": {
      "op": "NOT"
    },
    "5567": {
      "fn": "Governance.createProposal",
      "offset": [
        11161,
        11200
      ],
      "op": "AND",
      "path": "2",
      "statement": 40
    },
    "5568": {
      "fn": "Governance.createProposal",
      "offset": [
        11108,
        11147
      ],
      "op": "PUSH6",
      "path": "2",
      "value": "0x10000000000"
    },
    "5575": {
      "fn": "Governance.createProposal",
      "offset": [
        11108,
        11147
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "5581": {
      "fn": "Governance.createProposal",
      "offset": [
        11108,
        11147
      ],
      "op": "DUP8",
      "path": "2"
    },
    "5582": {
      "fn": "Governance.createProposal",
      "offset": [
        11108,
        11147
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5583": {
      "fn": "Governance.createProposal",
      "offset": [
        11108,
        11147
      ],
      "op": "AND",
      "path": "2"
    },
    "5584": {
      "fn": "Governance.createProposal",
      "offset": [
        11108,
        11147
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5585": {
      "fn": "Governance.createProposal",
      "offset": [
        11108,
        11147
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5586": {
      "fn": "Governance.createProposal",
      "offset": [
        11108,
        11147
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5587": {
      "fn": "Governance.createProposal",
      "offset": [
        11108,
        11147
      ],
      "op": "MUL",
      "path": "2"
    },
    "5588": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "5594": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "5596": {
      "op": "SHL"
    },
    "5597": {
      "op": "NOT"
    },
    "5598": {
      "fn": "Governance.createProposal",
      "offset": [
        11161,
        11200
      ],
      "op": "AND",
      "path": "2"
    },
    "5599": {
      "fn": "Governance.createProposal",
      "offset": [
        11161,
        11200
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5600": {
      "fn": "Governance.createProposal",
      "offset": [
        11161,
        11200
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5601": {
      "fn": "Governance.createProposal",
      "offset": [
        11161,
        11200
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5602": {
      "fn": "Governance.createProposal",
      "offset": [
        11161,
        11200
      ],
      "op": "OR",
      "path": "2"
    },
    "5603": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5605": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "5607": {
      "op": "SHL"
    },
    "5608": {
      "fn": "Governance.createProposal",
      "offset": [
        11161,
        11200
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5609": {
      "fn": "Governance.createProposal",
      "offset": [
        11161,
        11200
      ],
      "op": "DUP7",
      "path": "2"
    },
    "5610": {
      "fn": "Governance.createProposal",
      "offset": [
        11161,
        11200
      ],
      "op": "AND",
      "path": "2"
    },
    "5611": {
      "fn": "Governance.createProposal",
      "offset": [
        11161,
        11200
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5612": {
      "fn": "Governance.createProposal",
      "offset": [
        11161,
        11200
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5613": {
      "fn": "Governance.createProposal",
      "offset": [
        11161,
        11200
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5614": {
      "fn": "Governance.createProposal",
      "offset": [
        11161,
        11200
      ],
      "op": "MUL",
      "path": "2"
    },
    "5615": {
      "fn": "Governance.createProposal",
      "offset": [
        11161,
        11200
      ],
      "op": "OR",
      "path": "2"
    },
    "5616": {
      "fn": "Governance.createProposal",
      "offset": [
        11161,
        11200
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5617": {
      "fn": "Governance.createProposal",
      "offset": [
        11161,
        11200
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "5618": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5620": {
      "fn": "Governance.createProposal",
      "offset": [
        11214,
        11240
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 41
    },
    "5621": {
      "fn": "Governance.createProposal",
      "offset": [
        11214,
        11240
      ],
      "op": "ADD",
      "path": "2"
    },
    "5622": {
      "fn": "Governance.createProposal",
      "offset": [
        11214,
        11259
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5623": {
      "fn": "Governance.createProposal",
      "offset": [
        11214,
        11259
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5624": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "5627": {
      "op": "NOT"
    },
    "5628": {
      "fn": "Governance.createProposal",
      "offset": [
        11214,
        11259
      ],
      "op": "AND",
      "path": "2"
    },
    "5629": {
      "fn": "Governance.createProposal",
      "offset": [
        11214,
        11259
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "5632": {
      "fn": "Governance.createProposal",
      "offset": [
        11214,
        11259
      ],
      "op": "DUP9",
      "path": "2"
    },
    "5633": {
      "fn": "Governance.createProposal",
      "offset": [
        11214,
        11259
      ],
      "op": "AND",
      "path": "2"
    },
    "5634": {
      "fn": "Governance.createProposal",
      "offset": [
        11214,
        11259
      ],
      "op": "OR",
      "path": "2"
    },
    "5635": {
      "fn": "Governance.createProposal",
      "offset": [
        11214,
        11259
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5636": {
      "fn": "Governance.createProposal",
      "offset": [
        11214,
        11259
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "5637": {
      "fn": "Governance.createProposal",
      "offset": [
        11069,
        11094
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5638": {
      "fn": "Governance.createProposal",
      "offset": [
        11273,
        11304
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 42,
      "value": "0x1610"
    },
    "5641": {
      "fn": "Governance.createProposal",
      "offset": [
        11295,
        11304
      ],
      "op": "DUP9",
      "path": "2"
    },
    "5642": {
      "fn": "Governance.createProposal",
      "offset": [
        11295,
        11304
      ],
      "op": "DUP11",
      "path": "2"
    },
    "5643": {
      "fn": "Governance.createProposal",
      "offset": [
        11069,
        11094
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5644": {
      "fn": "Governance.createProposal",
      "offset": [
        11273,
        11304
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x33CE"
    },
    "5647": {
      "fn": "Governance.createProposal",
      "jump": "i",
      "offset": [
        11273,
        11304
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5648": {
      "fn": "Governance.createProposal",
      "offset": [
        11273,
        11304
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5649": {
      "fn": "Governance.createProposal",
      "offset": [
        11273,
        11304
      ],
      "op": "POP",
      "path": "2"
    },
    "5650": {
      "fn": "Governance.createProposal",
      "offset": [
        11315,
        11427
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 43,
      "value": "0x1624"
    },
    "5653": {
      "fn": "Governance.createProposal",
      "offset": [
        11331,
        11340
      ],
      "op": "DUP9",
      "path": "2"
    },
    "5654": {
      "fn": "Governance.createProposal",
      "offset": [
        11331,
        11340
      ],
      "op": "DUP9",
      "path": "2"
    },
    "5655": {
      "fn": "Governance.createProposal",
      "offset": [
        11349,
        11363
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x8"
    },
    "5657": {
      "fn": "Governance.createProposal",
      "offset": [
        11349,
        11363
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5658": {
      "fn": "Governance.createProposal",
      "offset": [
        11366,
        11367
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5660": {
      "fn": "Governance.createProposal",
      "offset": [
        11369,
        11379
      ],
      "op": "DUP10",
      "path": "2"
    },
    "5661": {
      "fn": "Governance.createProposal",
      "offset": [
        11381,
        11394
      ],
      "op": "DUP10",
      "path": "2"
    },
    "5662": {
      "fn": "Governance.createProposal",
      "offset": [
        11396,
        11409
      ],
      "op": "DUP10",
      "path": "2"
    },
    "5663": {
      "fn": "Governance.createProposal",
      "offset": [
        11411,
        11426
      ],
      "op": "DUP10",
      "path": "2"
    },
    "5664": {
      "fn": "Governance.createProposal",
      "offset": [
        11315,
        11330
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x250B"
    },
    "5667": {
      "fn": "Governance.createProposal",
      "jump": "i",
      "offset": [
        11315,
        11427
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5668": {
      "fn": "Governance.createProposal",
      "offset": [
        11315,
        11427
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5669": {
      "fn": "Governance.createProposal",
      "offset": [
        10885,
        11465
      ],
      "op": "POP",
      "path": "2"
    },
    "5670": {
      "fn": "Governance.createProposal",
      "offset": [
        10703,
        11465
      ],
      "op": "POP",
      "path": "2"
    },
    "5671": {
      "fn": "Governance.createProposal",
      "offset": [
        10703,
        11465
      ],
      "op": "POP",
      "path": "2"
    },
    "5672": {
      "fn": "Governance.createProposal",
      "offset": [
        10703,
        11465
      ],
      "op": "POP",
      "path": "2"
    },
    "5673": {
      "fn": "Governance.createProposal",
      "offset": [
        10703,
        11465
      ],
      "op": "POP",
      "path": "2"
    },
    "5674": {
      "fn": "Governance.createProposal",
      "offset": [
        10703,
        11465
      ],
      "op": "POP",
      "path": "2"
    },
    "5675": {
      "fn": "Governance.createProposal",
      "offset": [
        10703,
        11465
      ],
      "op": "POP",
      "path": "2"
    },
    "5676": {
      "fn": "Governance.createProposal",
      "offset": [
        10703,
        11465
      ],
      "op": "POP",
      "path": "2"
    },
    "5677": {
      "fn": "Governance.createProposal",
      "jump": "o",
      "offset": [
        10703,
        11465
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5678": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12736,
        14582
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5679": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12811,
        12838
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5681": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12841,
        12880
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1649"
    },
    "5684": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12865,
        12879
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "5686": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5676,
        5688
      ],
      "op": "SLOAD",
      "path": "1",
      "statement": 44
    },
    "5687": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5676,
        5688
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xF"
    },
    "5689": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5676,
        5688
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5690": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5676,
        5688
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5691": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5676,
        5688
      ],
      "op": "SIGNEXTEND",
      "path": "1"
    },
    "5692": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5694": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5696": {
      "op": "SHL"
    },
    "5697": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5655,
        5665
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5698": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5655,
        5665
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "5699": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5655,
        5665
      ],
      "op": "DIV",
      "path": "1"
    },
    "5700": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5655,
        5665
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5701": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5655,
        5665
      ],
      "op": "SIGNEXTEND",
      "path": "1"
    },
    "5702": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5648,
        5689
      ],
      "op": "SUB",
      "path": "1"
    },
    "5703": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5648,
        5689
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5704": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5344,
        5707
      ],
      "op": "JUMP",
      "path": "1"
    },
    "5705": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12841,
        12880
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5706": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12811,
        12880
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5707": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12811,
        12880
      ],
      "op": "POP",
      "path": "2"
    },
    "5708": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12890,
        12908
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1653"
    },
    "5711": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12890,
        12908
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x284A"
    },
    "5714": {
      "fn": "Governance.claimRandomTaskForVerification",
      "jump": "i",
      "offset": [
        12890,
        12908
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5715": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12890,
        12908
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5716": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12918,
        12932
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5718": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12918,
        12932
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5719": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13026,
        14493
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5720": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13048,
        13067
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5721": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13044,
        13045
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5722": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13044,
        13067
      ],
      "op": "LT",
      "path": "2"
    },
    "5723": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13026,
        14493
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "5724": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13026,
        14493
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1936"
    },
    "5727": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13026,
        14493
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5728": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13127,
        13142
      ],
      "op": "TIMESTAMP",
      "path": "2"
    },
    "5729": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13088,
        13094
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5730": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13088,
        13124
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x120"
    },
    "5733": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13088,
        13124
      ],
      "op": "ADD",
      "path": "2"
    },
    "5734": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13088,
        13124
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5735": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13088,
        13142
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "5741": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13088,
        13142
      ],
      "op": "AND",
      "path": "2"
    },
    "5742": {
      "branch": 119,
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13088,
        13142
      ],
      "op": "LT",
      "path": "2"
    },
    "5743": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13088,
        13168
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5744": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13088,
        13168
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "5745": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13088,
        13168
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1685"
    },
    "5748": {
      "branch": 119,
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13088,
        13168
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5749": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13088,
        13168
      ],
      "op": "POP",
      "path": "2"
    },
    "5750": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13162,
        13168
      ],
      "op": "DUP5",
      "path": "2"
    },
    "5751": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13146,
        13152
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5752": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13146,
        13158
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5754": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13146,
        13158
      ],
      "op": "ADD",
      "path": "2"
    },
    "5755": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13146,
        13158
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5756": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13146,
        13168
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "5762": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13146,
        13168
      ],
      "op": "AND",
      "path": "2"
    },
    "5763": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13146,
        13168
      ],
      "op": "EQ",
      "path": "2"
    },
    "5764": {
      "branch": 120,
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13146,
        13168
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "5765": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13088,
        13168
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5766": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13088,
        13197
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5767": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13088,
        13197
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "5768": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13088,
        13197
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x169A"
    },
    "5771": {
      "branch": 120,
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13088,
        13197
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5772": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13088,
        13197
      ],
      "op": "POP",
      "path": "2"
    },
    "5773": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13191,
        13197
      ],
      "op": "DUP5",
      "path": "2"
    },
    "5774": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13172,
        13178
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5775": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13172,
        13188
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "5778": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13172,
        13188
      ],
      "op": "ADD",
      "path": "2"
    },
    "5779": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13172,
        13188
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5780": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13172,
        13197
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "5783": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13172,
        13197
      ],
      "op": "AND",
      "path": "2"
    },
    "5784": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13172,
        13197
      ],
      "op": "EQ",
      "path": "2"
    },
    "5785": {
      "branch": 121,
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13172,
        13197
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "5786": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13088,
        13197
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5787": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13084,
        14483
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "5788": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13084,
        14483
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1931"
    },
    "5791": {
      "branch": 121,
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13084,
        14483
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5792": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13541,
        13579
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 45,
      "value": "0x16AA"
    },
    "5795": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13561,
        13575
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "5797": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13577,
        13578
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5798": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13541,
        13560
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x26DC"
    },
    "5801": {
      "fn": "Governance.claimRandomTaskForVerification",
      "jump": "i",
      "offset": [
        13541,
        13579
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5802": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13541,
        13579
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5803": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13533,
        13580
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5805": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13607,
        13620
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 46
    },
    "5806": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13607,
        13620
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5807": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13607,
        13620
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5808": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13607,
        13612
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x9"
    },
    "5810": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13607,
        13620
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5812": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13607,
        13620
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5813": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13607,
        13620
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5815": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13607,
        13620
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5816": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13607,
        13620
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5817": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13607,
        13620
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5818": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13607,
        13620
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "5819": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5820": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5821": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x140"
    },
    "5824": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5825": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "ADD",
      "path": "2"
    },
    "5826": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5827": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "5828": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5829": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5830": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5831": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13533,
        13580
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "5832": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13533,
        13580
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "5833": {
      "op": "POP"
    },
    "5834": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5835": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5836": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5837": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5838": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13607,
        13620
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5839": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13607,
        13620
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5840": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x16D8"
    },
    "5843": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5844": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3084"
    },
    "5847": {
      "fn": "Governance.claimRandomTaskForVerification",
      "jump": "i",
      "offset": [
        13598,
        13620
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5848": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5849": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5850": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "5852": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "ADD",
      "path": "2"
    },
    "5853": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5855": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5856": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5857": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "DIV",
      "path": "2"
    },
    "5858": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "MUL",
      "path": "2"
    },
    "5859": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5861": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "ADD",
      "path": "2"
    },
    "5862": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5864": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5865": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5866": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5867": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "ADD",
      "path": "2"
    },
    "5868": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5870": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5871": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5872": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "5873": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5874": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5875": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5876": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5877": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5878": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5880": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "ADD",
      "path": "2"
    },
    "5881": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5882": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5883": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5884": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1704"
    },
    "5887": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5888": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3084"
    },
    "5891": {
      "fn": "Governance.claimRandomTaskForVerification",
      "jump": "i",
      "offset": [
        13598,
        13620
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5892": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5893": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5894": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "5895": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1751"
    },
    "5898": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5899": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5900": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "5902": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "LT",
      "path": "2"
    },
    "5903": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1726"
    },
    "5906": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5907": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "5910": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5911": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5912": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5913": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "DIV",
      "path": "2"
    },
    "5914": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "MUL",
      "path": "2"
    },
    "5915": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5916": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5917": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5918": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5920": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "ADD",
      "path": "2"
    },
    "5921": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5922": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1751"
    },
    "5925": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5926": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5927": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5928": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "ADD",
      "path": "2"
    },
    "5929": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5930": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5931": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5933": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5934": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5936": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5938": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "5939": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5940": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5941": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5942": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5943": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5944": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5945": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5946": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "5948": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "ADD",
      "path": "2"
    },
    "5949": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5950": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5952": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "ADD",
      "path": "2"
    },
    "5953": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5954": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5955": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "GT",
      "path": "2"
    },
    "5956": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1734"
    },
    "5959": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5960": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5961": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5962": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "SUB",
      "path": "2"
    },
    "5963": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "5965": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "AND",
      "path": "2"
    },
    "5966": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5967": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "ADD",
      "path": "2"
    },
    "5968": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5969": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5970": {
      "op": "POP"
    },
    "5971": {
      "op": "POP"
    },
    "5972": {
      "op": "POP"
    },
    "5973": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5974": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5975": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5976": {
      "op": "POP"
    },
    "5977": {
      "op": "POP"
    },
    "5978": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "5980": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5981": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "ADD",
      "path": "2"
    },
    "5982": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5983": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "5989": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5990": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5991": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "AND",
      "path": "2"
    },
    "5992": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5994": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5995": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "ADD",
      "path": "2"
    },
    "5996": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5997": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "5999": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6000": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "ADD",
      "path": "2"
    },
    "6001": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6002": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6004": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6005": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "ADD",
      "path": "2"
    },
    "6006": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6007": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "6009": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6010": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "ADD",
      "path": "2"
    },
    "6011": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6012": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "6014": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6015": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "ADD",
      "path": "2"
    },
    "6016": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6017": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "6019": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6020": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "6021": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "ADD",
      "path": "2"
    },
    "6022": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6023": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "6025": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6026": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "AND",
      "path": "2"
    },
    "6027": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x80"
    },
    "6029": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6030": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "ADD",
      "path": "2"
    },
    "6031": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6032": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "6035": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6036": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6037": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "DIV",
      "path": "2"
    },
    "6038": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "PUSH3",
      "path": "2",
      "value": "0xFFFFFF"
    },
    "6042": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "AND",
      "path": "2"
    },
    "6043": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA0"
    },
    "6045": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "DUP5",
      "path": "2"
    },
    "6046": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "ADD",
      "path": "2"
    },
    "6047": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6048": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6050": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6052": {
      "op": "SHL"
    },
    "6053": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6054": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "DIV",
      "path": "2"
    },
    "6055": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6057": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6059": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "6061": {
      "op": "SHL"
    },
    "6062": {
      "op": "SUB"
    },
    "6063": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "AND",
      "path": "2"
    },
    "6064": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xC0"
    },
    "6066": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "DUP5",
      "path": "2"
    },
    "6067": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "ADD",
      "path": "2"
    },
    "6068": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6069": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6071": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "6073": {
      "op": "SHL"
    },
    "6074": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6075": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "DIV",
      "path": "2"
    },
    "6076": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "6079": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6080": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6081": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "AND",
      "path": "2"
    },
    "6082": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE0"
    },
    "6084": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6085": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "DUP7",
      "path": "2"
    },
    "6086": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "ADD",
      "path": "2"
    },
    "6087": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6088": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6089": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6090": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6091": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6093": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6095": {
      "op": "SHL"
    },
    "6096": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "DUP5",
      "path": "2"
    },
    "6097": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "DIV",
      "path": "2"
    },
    "6098": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6099": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "AND",
      "path": "2"
    },
    "6100": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "6101": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "DUP6",
      "path": "2"
    },
    "6102": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "ADD",
      "path": "2"
    },
    "6103": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "6104": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6105": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "6106": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6107": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6109": {
      "op": "PUSH1",
      "value": "0x90"
    },
    "6111": {
      "op": "SHL"
    },
    "6112": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6113": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "6114": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "DIV",
      "path": "2"
    },
    "6115": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6116": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "6117": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "AND",
      "path": "2"
    },
    "6118": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x120"
    },
    "6121": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6122": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "6123": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "ADD",
      "path": "2"
    },
    "6124": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6125": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6126": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6127": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13598,
        13620
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6128": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14254,
        14288
      ],
      "op": "DUP8",
      "path": "2",
      "statement": 47
    },
    "6129": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14254,
        14288
      ],
      "op": "AND",
      "path": "2"
    },
    "6130": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14254,
        14271
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6131": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14254,
        14271
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6132": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14254,
        14271
      ],
      "op": "ADD",
      "path": "2"
    },
    "6133": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14254,
        14288
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6134": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14370,
        14386
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 48,
      "value": "0xB"
    },
    "6136": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14370,
        14386
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6137": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14254,
        14271
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6138": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14254,
        14271
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "6139": {
      "op": "POP"
    },
    "6140": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14352,
        14386
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1805"
    },
    "6143": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14352,
        14386
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6144": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14352,
        14367
      ],
      "op": "TIMESTAMP",
      "path": "2"
    },
    "6145": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14352,
        14386
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3332"
    },
    "6148": {
      "fn": "Governance.claimRandomTaskForVerification",
      "jump": "i",
      "offset": [
        14352,
        14386
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6149": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14352,
        14386
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6150": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14306,
        14387
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "6156": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14306,
        14387
      ],
      "op": "AND",
      "path": "2"
    },
    "6157": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14306,
        14342
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x120"
    },
    "6160": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14306,
        14342
      ],
      "op": "DUP5",
      "path": "2"
    },
    "6161": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14306,
        14342
      ],
      "op": "ADD",
      "path": "2"
    },
    "6162": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14306,
        14387
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6163": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14306,
        14312
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6164": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14405,
        14410
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 49,
      "value": "0x9"
    },
    "6166": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14405,
        14459
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6168": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14419,
        14457
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1822"
    },
    "6171": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14439,
        14453
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "6173": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14455,
        14456
      ],
      "op": "DUP6",
      "path": "2"
    },
    "6174": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14419,
        14438
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x26DC"
    },
    "6177": {
      "fn": "Governance.claimRandomTaskForVerification",
      "jump": "i",
      "offset": [
        14419,
        14457
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6178": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14419,
        14457
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6179": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14405,
        14459
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6180": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14405,
        14459
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6181": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14405,
        14459
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6183": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14405,
        14459
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6184": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14405,
        14459
      ],
      "op": "ADD",
      "path": "2"
    },
    "6185": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14405,
        14459
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6186": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14405,
        14459
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6187": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14405,
        14459
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6188": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14405,
        14459
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6189": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14405,
        14459
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6191": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14405,
        14459
      ],
      "op": "ADD",
      "path": "2"
    },
    "6192": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14411,
        14458
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6194": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14405,
        14459
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "6195": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14405,
        14468
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6196": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14405,
        14468
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6197": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14405,
        14459
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6198": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14405,
        14459
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6199": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14405,
        14468
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1840"
    },
    "6202": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14405,
        14468
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6203": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14405,
        14459
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6204": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14405,
        14468
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x325D"
    },
    "6207": {
      "fn": "Governance.claimRandomTaskForVerification",
      "jump": "i",
      "offset": [
        14405,
        14468
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6208": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14405,
        14468
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6209": {
      "op": "POP"
    },
    "6210": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14405,
        14468
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6212": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14405,
        14468
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6213": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14405,
        14468
      ],
      "op": "ADD",
      "path": "2"
    },
    "6214": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14405,
        14468
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6215": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14405,
        14468
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "6217": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14405,
        14468
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6218": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14405,
        14468
      ],
      "op": "ADD",
      "path": "2"
    },
    "6219": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14405,
        14468
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6220": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14405,
        14468
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6221": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "6227": {
      "op": "NOT"
    },
    "6228": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14405,
        14468
      ],
      "op": "AND",
      "path": "2"
    },
    "6229": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14405,
        14468
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "6235": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14405,
        14468
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "6236": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14405,
        14468
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6237": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14405,
        14468
      ],
      "op": "AND",
      "path": "2"
    },
    "6238": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14405,
        14468
      ],
      "op": "OR",
      "path": "2"
    },
    "6239": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14405,
        14468
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6240": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14405,
        14468
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "6241": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14405,
        14468
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6243": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14405,
        14468
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6244": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14405,
        14468
      ],
      "op": "ADD",
      "path": "2"
    },
    "6245": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14405,
        14468
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6246": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14405,
        14468
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "6248": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14405,
        14468
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6249": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14405,
        14468
      ],
      "op": "ADD",
      "path": "2"
    },
    "6250": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14405,
        14468
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "6251": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14405,
        14468
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "6253": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14405,
        14468
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6254": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14405,
        14468
      ],
      "op": "ADD",
      "path": "2"
    },
    "6255": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14405,
        14468
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6256": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14405,
        14468
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "6258": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14405,
        14468
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6259": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14405,
        14468
      ],
      "op": "ADD",
      "path": "2"
    },
    "6260": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14405,
        14468
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "6261": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14405,
        14468
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x80"
    },
    "6263": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14405,
        14468
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6264": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14405,
        14468
      ],
      "op": "ADD",
      "path": "2"
    },
    "6265": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14405,
        14468
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6266": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14405,
        14468
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "6268": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14405,
        14468
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6269": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14405,
        14468
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "6270": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14405,
        14468
      ],
      "op": "ADD",
      "path": "2"
    },
    "6271": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14405,
        14468
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6272": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14405,
        14468
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6273": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14405,
        14468
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA0"
    },
    "6275": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14405,
        14468
      ],
      "op": "DUP6",
      "path": "2"
    },
    "6276": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14405,
        14468
      ],
      "op": "ADD",
      "path": "2"
    },
    "6277": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14405,
        14468
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6278": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14405,
        14468
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xC0"
    },
    "6280": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14405,
        14468
      ],
      "op": "DUP7",
      "path": "2"
    },
    "6281": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14405,
        14468
      ],
      "op": "ADD",
      "path": "2"
    },
    "6282": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14405,
        14468
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6283": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14405,
        14468
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE0"
    },
    "6285": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14405,
        14468
      ],
      "op": "DUP8",
      "path": "2"
    },
    "6286": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14405,
        14468
      ],
      "op": "ADD",
      "path": "2"
    },
    "6287": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14405,
        14468
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6288": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14405,
        14468
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "6291": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14405,
        14468
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6292": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14405,
        14468
      ],
      "op": "DUP10",
      "path": "2"
    },
    "6293": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14405,
        14468
      ],
      "op": "ADD",
      "path": "2"
    },
    "6294": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14405,
        14468
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6295": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14405,
        14468
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x120"
    },
    "6298": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14405,
        14468
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6299": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14405,
        14468
      ],
      "op": "SWAP10",
      "path": "2"
    },
    "6300": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14405,
        14468
      ],
      "op": "ADD",
      "path": "2"
    },
    "6301": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14405,
        14468
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6302": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14405,
        14468
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "6304": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14405,
        14468
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6305": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14405,
        14468
      ],
      "op": "SWAP9",
      "path": "2"
    },
    "6306": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14405,
        14468
      ],
      "op": "AND",
      "path": "2"
    },
    "6307": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "6312": {
      "op": "NOT"
    },
    "6313": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14405,
        14468
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6314": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14405,
        14468
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "6315": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14405,
        14468
      ],
      "op": "AND",
      "path": "2"
    },
    "6316": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14405,
        14468
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "6317": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14405,
        14468
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6318": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14405,
        14468
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "6319": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14405,
        14468
      ],
      "op": "OR",
      "path": "2"
    },
    "6320": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14405,
        14468
      ],
      "op": "PUSH3",
      "path": "2",
      "value": "0xFFFFFF"
    },
    "6324": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14405,
        14468
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6325": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14405,
        14468
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "6326": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14405,
        14468
      ],
      "op": "AND",
      "path": "2"
    },
    "6327": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14405,
        14468
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6328": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14405,
        14468
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "6329": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14405,
        14468
      ],
      "op": "MUL",
      "path": "2"
    },
    "6330": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14405,
        14468
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6331": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14405,
        14468
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6332": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14405,
        14468
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6333": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14405,
        14468
      ],
      "op": "OR",
      "path": "2"
    },
    "6334": {
      "op": "PUSH16",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFF00000000"
    },
    "6351": {
      "op": "NOT"
    },
    "6352": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14405,
        14468
      ],
      "op": "AND",
      "path": "2"
    },
    "6353": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6355": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6357": {
      "op": "SHL"
    },
    "6358": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6360": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6362": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "6364": {
      "op": "SHL"
    },
    "6365": {
      "op": "SUB"
    },
    "6366": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14405,
        14468
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6367": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14405,
        14468
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "6368": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14405,
        14468
      ],
      "op": "AND",
      "path": "2"
    },
    "6369": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14405,
        14468
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6370": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14405,
        14468
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6371": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14405,
        14468
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6372": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14405,
        14468
      ],
      "op": "MUL",
      "path": "2"
    },
    "6373": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "6376": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "6378": {
      "op": "SHL"
    },
    "6379": {
      "op": "NOT"
    },
    "6380": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14405,
        14468
      ],
      "op": "AND",
      "path": "2"
    },
    "6381": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14405,
        14468
      ],
      "op": "OR",
      "path": "2"
    },
    "6382": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6384": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "6386": {
      "op": "SHL"
    },
    "6387": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14405,
        14468
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "6390": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14405,
        14468
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "6391": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14405,
        14468
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6392": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14405,
        14468
      ],
      "op": "AND",
      "path": "2"
    },
    "6393": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14405,
        14468
      ],
      "op": "MUL",
      "path": "2"
    },
    "6394": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14405,
        14468
      ],
      "op": "OR",
      "path": "2"
    },
    "6395": {
      "op": "PUSH7",
      "value": "0xFFFFFFFFFFFFFF"
    },
    "6403": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6405": {
      "op": "SHL"
    },
    "6406": {
      "op": "NOT"
    },
    "6407": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14405,
        14468
      ],
      "op": "AND",
      "path": "2"
    },
    "6408": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6410": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6412": {
      "op": "SHL"
    },
    "6413": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14405,
        14468
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6414": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14405,
        14468
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6415": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14405,
        14468
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "6416": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14405,
        14468
      ],
      "op": "AND",
      "path": "2"
    },
    "6417": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14405,
        14468
      ],
      "op": "MUL",
      "path": "2"
    },
    "6418": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "6424": {
      "op": "PUSH1",
      "value": "0x90"
    },
    "6426": {
      "op": "SHL"
    },
    "6427": {
      "op": "NOT"
    },
    "6428": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14405,
        14468
      ],
      "op": "AND",
      "path": "2"
    },
    "6429": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14405,
        14468
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "6430": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14405,
        14468
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6431": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14405,
        14468
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "6432": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14405,
        14468
      ],
      "op": "OR",
      "path": "2"
    },
    "6433": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6435": {
      "op": "PUSH1",
      "value": "0x90"
    },
    "6437": {
      "op": "SHL"
    },
    "6438": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14405,
        14468
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "6439": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14405,
        14468
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6440": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14405,
        14468
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6441": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14405,
        14468
      ],
      "op": "AND",
      "path": "2"
    },
    "6442": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14405,
        14468
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6443": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14405,
        14468
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6444": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14405,
        14468
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6445": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14405,
        14468
      ],
      "op": "MUL",
      "path": "2"
    },
    "6446": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14405,
        14468
      ],
      "op": "OR",
      "path": "2"
    },
    "6447": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14405,
        14468
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6448": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14405,
        14468
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "6449": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13084,
        14483
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6450": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13026,
        14493
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1657"
    },
    "6453": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13026,
        14493
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6454": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        13026,
        14493
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6455": {
      "op": "POP"
    },
    "6456": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14539,
        14575
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 50,
      "value": "0x40"
    },
    "6458": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14539,
        14575
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6459": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14539,
        14575
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6460": {
      "op": "DUP6"
    },
    "6461": {
      "op": "DUP2"
    },
    "6462": {
      "op": "MSTORE"
    },
    "6463": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6465": {
      "op": "DUP2"
    },
    "6466": {
      "op": "ADD"
    },
    "6467": {
      "op": "DUP4"
    },
    "6468": {
      "op": "SWAP1"
    },
    "6469": {
      "op": "MSTORE"
    },
    "6470": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14539,
        14575
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0x4BABE4B493069D658924AC325D49EE1ADFACCBB176319A54499A34417EAF73EE"
    },
    "6503": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14539,
        14575
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6504": {
      "op": "ADD"
    },
    "6505": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14539,
        14575
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6507": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14539,
        14575
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6508": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14539,
        14575
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6509": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14539,
        14575
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6510": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14539,
        14575
      ],
      "op": "SUB",
      "path": "2"
    },
    "6511": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14539,
        14575
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6512": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        14539,
        14575
      ],
      "op": "LOG1",
      "path": "2"
    },
    "6513": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12801,
        14582
      ],
      "op": "POP",
      "path": "2"
    },
    "6514": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12801,
        14582
      ],
      "op": "POP",
      "path": "2"
    },
    "6515": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12801,
        14582
      ],
      "op": "POP",
      "path": "2"
    },
    "6516": {
      "fn": "Governance.claimRandomTaskForVerification",
      "offset": [
        12736,
        14582
      ],
      "op": "POP",
      "path": "2"
    },
    "6517": {
      "fn": "Governance.claimRandomTaskForVerification",
      "jump": "o",
      "offset": [
        12736,
        14582
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6518": {
      "fn": "Governance.submitVerification",
      "offset": [
        17547,
        21167
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6519": {
      "fn": "Governance.submitVerification",
      "offset": [
        17711,
        17721
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 51,
      "value": "0x2"
    },
    "6521": {
      "fn": "Governance.submitVerification",
      "offset": [
        17711,
        17721
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6522": {
      "fn": "Governance.submitVerification",
      "offset": [
        17711,
        17737
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6524": {
      "fn": "Governance.submitVerification",
      "offset": [
        17711,
        17737
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6525": {
      "op": "PUSH4",
      "value": "0x31A9108F"
    },
    "6530": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "6532": {
      "op": "SHL"
    },
    "6533": {
      "fn": "Governance.submitVerification",
      "offset": [
        17711,
        17737
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6534": {
      "fn": "Governance.submitVerification",
      "offset": [
        17711,
        17737
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6535": {
      "fn": "Governance.submitVerification",
      "offset": [
        17711,
        17737
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "6537": {
      "fn": "Governance.submitVerification",
      "offset": [
        17711,
        17737
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6538": {
      "fn": "Governance.submitVerification",
      "offset": [
        17711,
        17737
      ],
      "op": "ADD",
      "path": "2"
    },
    "6539": {
      "op": "DUP6"
    },
    "6540": {
      "op": "SWAP1"
    },
    "6541": {
      "op": "MSTORE"
    },
    "6542": {
      "fn": "Governance.submitVerification",
      "offset": [
        17741,
        17751
      ],
      "op": "CALLER",
      "path": "2"
    },
    "6543": {
      "fn": "Governance.submitVerification",
      "offset": [
        17741,
        17751
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6544": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6546": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6548": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6550": {
      "op": "SHL"
    },
    "6551": {
      "op": "SUB"
    },
    "6552": {
      "fn": "Governance.submitVerification",
      "offset": [
        17711,
        17721
      ],
      "op": "AND",
      "path": "2"
    },
    "6553": {
      "fn": "Governance.submitVerification",
      "offset": [
        17711,
        17721
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6554": {
      "fn": "Governance.submitVerification",
      "offset": [
        17711,
        17729
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x6352211E"
    },
    "6559": {
      "fn": "Governance.submitVerification",
      "offset": [
        17711,
        17729
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6560": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6562": {
      "op": "ADD"
    },
    "6563": {
      "fn": "Governance.submitVerification",
      "offset": [
        17711,
        17737
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6565": {
      "fn": "Governance.submitVerification",
      "offset": [
        17711,
        17737
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6567": {
      "fn": "Governance.submitVerification",
      "offset": [
        17711,
        17737
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6568": {
      "fn": "Governance.submitVerification",
      "offset": [
        17711,
        17737
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6569": {
      "fn": "Governance.submitVerification",
      "offset": [
        17711,
        17737
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6570": {
      "fn": "Governance.submitVerification",
      "offset": [
        17711,
        17737
      ],
      "op": "SUB",
      "path": "2"
    },
    "6571": {
      "fn": "Governance.submitVerification",
      "offset": [
        17711,
        17737
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6572": {
      "fn": "Governance.submitVerification",
      "offset": [
        17711,
        17737
      ],
      "op": "DUP7",
      "path": "2"
    },
    "6573": {
      "fn": "Governance.submitVerification",
      "offset": [
        17711,
        17737
      ],
      "op": "GAS",
      "path": "2"
    },
    "6574": {
      "fn": "Governance.submitVerification",
      "offset": [
        17711,
        17737
      ],
      "op": "STATICCALL",
      "path": "2"
    },
    "6575": {
      "fn": "Governance.submitVerification",
      "offset": [
        17711,
        17737
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "6576": {
      "fn": "Governance.submitVerification",
      "offset": [
        17711,
        17737
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6577": {
      "fn": "Governance.submitVerification",
      "offset": [
        17711,
        17737
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "6578": {
      "fn": "Governance.submitVerification",
      "offset": [
        17711,
        17737
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x19BF"
    },
    "6581": {
      "fn": "Governance.submitVerification",
      "offset": [
        17711,
        17737
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6582": {
      "fn": "Governance.submitVerification",
      "offset": [
        17711,
        17737
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "6583": {
      "fn": "Governance.submitVerification",
      "offset": [
        17711,
        17737
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6585": {
      "fn": "Governance.submitVerification",
      "offset": [
        17711,
        17737
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6586": {
      "fn": "Governance.submitVerification",
      "offset": [
        17711,
        17737
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "6587": {
      "fn": "Governance.submitVerification",
      "offset": [
        17711,
        17737
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "6588": {
      "fn": "Governance.submitVerification",
      "offset": [
        17711,
        17737
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6590": {
      "fn": "Governance.submitVerification",
      "offset": [
        17711,
        17737
      ],
      "op": "REVERT",
      "path": "2"
    },
    "6591": {
      "fn": "Governance.submitVerification",
      "offset": [
        17711,
        17737
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6592": {
      "fn": "Governance.submitVerification",
      "offset": [
        17711,
        17737
      ],
      "op": "POP",
      "path": "2"
    },
    "6593": {
      "fn": "Governance.submitVerification",
      "offset": [
        17711,
        17737
      ],
      "op": "POP",
      "path": "2"
    },
    "6594": {
      "fn": "Governance.submitVerification",
      "offset": [
        17711,
        17737
      ],
      "op": "POP",
      "path": "2"
    },
    "6595": {
      "fn": "Governance.submitVerification",
      "offset": [
        17711,
        17737
      ],
      "op": "POP",
      "path": "2"
    },
    "6596": {
      "fn": "Governance.submitVerification",
      "offset": [
        17711,
        17737
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6598": {
      "fn": "Governance.submitVerification",
      "offset": [
        17711,
        17737
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6599": {
      "fn": "Governance.submitVerification",
      "offset": [
        17711,
        17737
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "6600": {
      "fn": "Governance.submitVerification",
      "offset": [
        17711,
        17737
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "6602": {
      "fn": "Governance.submitVerification",
      "offset": [
        17711,
        17737
      ],
      "op": "NOT",
      "path": "2"
    },
    "6603": {
      "fn": "Governance.submitVerification",
      "offset": [
        17711,
        17737
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "6605": {
      "fn": "Governance.submitVerification",
      "offset": [
        17711,
        17737
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6606": {
      "fn": "Governance.submitVerification",
      "offset": [
        17711,
        17737
      ],
      "op": "ADD",
      "path": "2"
    },
    "6607": {
      "fn": "Governance.submitVerification",
      "offset": [
        17711,
        17737
      ],
      "op": "AND",
      "path": "2"
    },
    "6608": {
      "fn": "Governance.submitVerification",
      "offset": [
        17711,
        17737
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6609": {
      "fn": "Governance.submitVerification",
      "offset": [
        17711,
        17737
      ],
      "op": "ADD",
      "path": "2"
    },
    "6610": {
      "fn": "Governance.submitVerification",
      "offset": [
        17711,
        17737
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6611": {
      "fn": "Governance.submitVerification",
      "offset": [
        17711,
        17737
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6613": {
      "fn": "Governance.submitVerification",
      "offset": [
        17711,
        17737
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6614": {
      "fn": "Governance.submitVerification",
      "offset": [
        17711,
        17737
      ],
      "op": "POP",
      "path": "2"
    },
    "6615": {
      "fn": "Governance.submitVerification",
      "offset": [
        17711,
        17737
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6616": {
      "fn": "Governance.submitVerification",
      "offset": [
        17711,
        17737
      ],
      "op": "ADD",
      "path": "2"
    },
    "6617": {
      "fn": "Governance.submitVerification",
      "offset": [
        17711,
        17737
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6618": {
      "fn": "Governance.submitVerification",
      "offset": [
        17711,
        17737
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x19E3"
    },
    "6621": {
      "fn": "Governance.submitVerification",
      "offset": [
        17711,
        17737
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6622": {
      "fn": "Governance.submitVerification",
      "offset": [
        17711,
        17737
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6623": {
      "fn": "Governance.submitVerification",
      "offset": [
        17711,
        17737
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x33B1"
    },
    "6626": {
      "fn": "Governance.submitVerification",
      "jump": "i",
      "offset": [
        17711,
        17737
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6627": {
      "fn": "Governance.submitVerification",
      "offset": [
        17711,
        17737
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6628": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6630": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6632": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6634": {
      "op": "SHL"
    },
    "6635": {
      "op": "SUB"
    },
    "6636": {
      "fn": "Governance.submitVerification",
      "offset": [
        17711,
        17751
      ],
      "op": "AND",
      "path": "2"
    },
    "6637": {
      "branch": 122,
      "fn": "Governance.submitVerification",
      "offset": [
        17711,
        17751
      ],
      "op": "EQ",
      "path": "2"
    },
    "6638": {
      "fn": "Governance.submitVerification",
      "offset": [
        17711,
        17788
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6639": {
      "fn": "Governance.submitVerification",
      "offset": [
        17711,
        17788
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "6640": {
      "fn": "Governance.submitVerification",
      "offset": [
        17711,
        17788
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A14"
    },
    "6643": {
      "branch": 122,
      "fn": "Governance.submitVerification",
      "offset": [
        17711,
        17788
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6644": {
      "op": "POP"
    },
    "6645": {
      "fn": "Governance.submitVerification",
      "offset": [
        17755,
        17769
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6647": {
      "fn": "Governance.submitVerification",
      "offset": [
        17755,
        17769
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6648": {
      "fn": "Governance.submitVerification",
      "offset": [
        17755,
        17769
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6649": {
      "fn": "Governance.submitVerification",
      "offset": [
        17755,
        17769
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6650": {
      "fn": "Governance.submitVerification",
      "offset": [
        17755,
        17760
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x9"
    },
    "6652": {
      "fn": "Governance.submitVerification",
      "offset": [
        17755,
        17769
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6654": {
      "fn": "Governance.submitVerification",
      "offset": [
        17755,
        17769
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6655": {
      "fn": "Governance.submitVerification",
      "offset": [
        17755,
        17769
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6657": {
      "fn": "Governance.submitVerification",
      "offset": [
        17755,
        17769
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6658": {
      "fn": "Governance.submitVerification",
      "offset": [
        17755,
        17769
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "6659": {
      "fn": "Governance.submitVerification",
      "offset": [
        17755,
        17780
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "6661": {
      "fn": "Governance.submitVerification",
      "offset": [
        17755,
        17780
      ],
      "op": "ADD",
      "path": "2"
    },
    "6662": {
      "fn": "Governance.submitVerification",
      "offset": [
        17755,
        17780
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6663": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6665": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "6667": {
      "op": "SHL"
    },
    "6668": {
      "fn": "Governance.submitVerification",
      "offset": [
        17755,
        17780
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6669": {
      "fn": "Governance.submitVerification",
      "offset": [
        17755,
        17780
      ],
      "op": "DIV",
      "path": "2"
    },
    "6670": {
      "fn": "Governance.submitVerification",
      "offset": [
        17755,
        17780
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "6673": {
      "fn": "Governance.submitVerification",
      "offset": [
        17755,
        17780
      ],
      "op": "AND",
      "path": "2"
    },
    "6674": {
      "fn": "Governance.submitVerification",
      "offset": [
        17755,
        17788
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6675": {
      "branch": 123,
      "fn": "Governance.submitVerification",
      "offset": [
        17755,
        17788
      ],
      "op": "EQ",
      "path": "2"
    },
    "6676": {
      "fn": "Governance.submitVerification",
      "offset": [
        17711,
        17788
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6677": {
      "fn": "Governance.submitVerification",
      "offset": [
        17703,
        17825
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A60"
    },
    "6680": {
      "branch": 123,
      "fn": "Governance.submitVerification",
      "offset": [
        17703,
        17825
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6681": {
      "fn": "Governance.submitVerification",
      "offset": [
        17703,
        17825
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6683": {
      "fn": "Governance.submitVerification",
      "offset": [
        17703,
        17825
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6684": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6688": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6690": {
      "op": "SHL"
    },
    "6691": {
      "fn": "Governance.submitVerification",
      "offset": [
        17703,
        17825
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6692": {
      "fn": "Governance.submitVerification",
      "offset": [
        17703,
        17825
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6693": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6695": {
      "fn": "Governance.submitVerification",
      "offset": [
        17703,
        17825
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "6697": {
      "fn": "Governance.submitVerification",
      "offset": [
        17703,
        17825
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6698": {
      "fn": "Governance.submitVerification",
      "offset": [
        17703,
        17825
      ],
      "op": "ADD",
      "path": "2"
    },
    "6699": {
      "op": "DUP2"
    },
    "6700": {
      "op": "SWAP1"
    },
    "6701": {
      "op": "MSTORE"
    },
    "6702": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6704": {
      "op": "DUP3"
    },
    "6705": {
      "op": "ADD"
    },
    "6706": {
      "op": "MSTORE"
    },
    "6707": {
      "op": "PUSH32",
      "value": "0x4D757374206265206F776E6572206F662061737369676E65642077697A617264"
    },
    "6740": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6742": {
      "op": "DUP3"
    },
    "6743": {
      "op": "ADD"
    },
    "6744": {
      "op": "MSTORE"
    },
    "6745": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6747": {
      "op": "ADD"
    },
    "6748": {
      "fn": "Governance.submitVerification",
      "offset": [
        17703,
        17825
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x807"
    },
    "6751": {
      "op": "JUMP"
    },
    "6752": {
      "fn": "Governance.submitVerification",
      "offset": [
        17703,
        17825
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6753": {
      "fn": "Governance.submitVerification",
      "offset": [
        17860,
        17861
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 52,
      "value": "0x0"
    },
    "6755": {
      "fn": "Governance.submitVerification",
      "offset": [
        17843,
        17850
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6756": {
      "fn": "Governance.submitVerification",
      "offset": [
        17843,
        17857
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6757": {
      "branch": 124,
      "fn": "Governance.submitVerification",
      "offset": [
        17843,
        17861
      ],
      "op": "GT",
      "path": "2"
    },
    "6758": {
      "fn": "Governance.submitVerification",
      "offset": [
        17835,
        17862
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A6E"
    },
    "6761": {
      "branch": 124,
      "fn": "Governance.submitVerification",
      "offset": [
        17835,
        17862
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6762": {
      "fn": "Governance.submitVerification",
      "offset": [
        17835,
        17862
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6764": {
      "fn": "Governance.submitVerification",
      "offset": [
        17835,
        17862
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6765": {
      "fn": "Governance.submitVerification",
      "offset": [
        17835,
        17862
      ],
      "op": "REVERT",
      "path": "2"
    },
    "6766": {
      "fn": "Governance.submitVerification",
      "offset": [
        17835,
        17862
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6767": {
      "fn": "Governance.submitVerification",
      "offset": [
        17873,
        17892
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6769": {
      "fn": "Governance.submitVerification",
      "offset": [
        17895,
        17909
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6770": {
      "fn": "Governance.submitVerification",
      "offset": [
        17895,
        17909
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6771": {
      "fn": "Governance.submitVerification",
      "offset": [
        17895,
        17909
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6772": {
      "fn": "Governance.submitVerification",
      "offset": [
        17895,
        17900
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x9"
    },
    "6774": {
      "fn": "Governance.submitVerification",
      "offset": [
        17895,
        17909
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6776": {
      "fn": "Governance.submitVerification",
      "offset": [
        17895,
        17909
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6777": {
      "fn": "Governance.submitVerification",
      "offset": [
        17895,
        17909
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6779": {
      "fn": "Governance.submitVerification",
      "offset": [
        17895,
        17909
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6780": {
      "fn": "Governance.submitVerification",
      "offset": [
        17895,
        17909
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "6781": {
      "fn": "Governance.submitVerification",
      "offset": [
        18466,
        18482
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "6783": {
      "fn": "Governance.submitVerification",
      "offset": [
        18466,
        18482
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6784": {
      "fn": "Governance.submitVerification",
      "offset": [
        18466,
        18482
      ],
      "op": "ADD",
      "path": "2"
    },
    "6785": {
      "fn": "Governance.submitVerification",
      "offset": [
        18466,
        18482
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6786": {
      "fn": "Governance.submitVerification",
      "offset": [
        17895,
        17909
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6787": {
      "fn": "Governance.submitVerification",
      "offset": [
        17895,
        17909
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6788": {
      "fn": "Governance.submitVerification",
      "offset": [
        17873,
        17892
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6789": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6791": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6793": {
      "op": "SHL"
    },
    "6794": {
      "fn": "Governance.submitVerification",
      "offset": [
        18466,
        18482
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6795": {
      "fn": "Governance.submitVerification",
      "offset": [
        18466,
        18482
      ],
      "op": "DIV",
      "path": "2"
    },
    "6796": {
      "fn": "Governance.submitVerification",
      "offset": [
        18466,
        18482
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "6799": {
      "fn": "Governance.submitVerification",
      "offset": [
        18466,
        18482
      ],
      "op": "AND",
      "path": "2"
    },
    "6800": {
      "branch": 125,
      "fn": "Governance.submitVerification",
      "offset": [
        18466,
        18486
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "6801": {
      "fn": "Governance.submitVerification",
      "offset": [
        18463,
        18668
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1B09"
    },
    "6804": {
      "branch": 125,
      "fn": "Governance.submitVerification",
      "offset": [
        18463,
        18668
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6805": {
      "fn": "Governance.submitVerification",
      "offset": [
        18506,
        18515
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6807": {
      "fn": "Governance.submitVerification",
      "offset": [
        18502,
        18658
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6808": {
      "fn": "Governance.submitVerification",
      "offset": [
        18525,
        18532
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6809": {
      "fn": "Governance.submitVerification",
      "offset": [
        18525,
        18539
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6810": {
      "fn": "Governance.submitVerification",
      "offset": [
        18521,
        18522
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6811": {
      "fn": "Governance.submitVerification",
      "offset": [
        18521,
        18539
      ],
      "op": "LT",
      "path": "2"
    },
    "6812": {
      "fn": "Governance.submitVerification",
      "offset": [
        18502,
        18658
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "6813": {
      "fn": "Governance.submitVerification",
      "offset": [
        18502,
        18658
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1B07"
    },
    "6816": {
      "fn": "Governance.submitVerification",
      "offset": [
        18502,
        18658
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6817": {
      "fn": "Governance.submitVerification",
      "offset": [
        18599,
        18606
      ],
      "op": "DUP4",
      "path": "2",
      "statement": 53
    },
    "6818": {
      "fn": "Governance.submitVerification",
      "offset": [
        18607,
        18608
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6819": {
      "fn": "Governance.submitVerification",
      "offset": [
        18599,
        18609
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6820": {
      "fn": "Governance.submitVerification",
      "offset": [
        18599,
        18609
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6821": {
      "fn": "Governance.submitVerification",
      "offset": [
        18599,
        18609
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6822": {
      "fn": "Governance.submitVerification",
      "offset": [
        18599,
        18609
      ],
      "op": "LT",
      "path": "2"
    },
    "6823": {
      "fn": "Governance.submitVerification",
      "offset": [
        18599,
        18609
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1AB2"
    },
    "6826": {
      "fn": "Governance.submitVerification",
      "offset": [
        18599,
        18609
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6827": {
      "fn": "Governance.submitVerification",
      "offset": [
        18599,
        18609
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1AB2"
    },
    "6830": {
      "fn": "Governance.submitVerification",
      "offset": [
        18599,
        18609
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x30BE"
    },
    "6833": {
      "fn": "Governance.submitVerification",
      "jump": "i",
      "offset": [
        18599,
        18609
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6834": {
      "fn": "Governance.submitVerification",
      "offset": [
        18599,
        18609
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6835": {
      "fn": "Governance.submitVerification",
      "offset": [
        18599,
        18609
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6837": {
      "fn": "Governance.submitVerification",
      "offset": [
        18599,
        18609
      ],
      "op": "MUL",
      "path": "2"
    },
    "6838": {
      "fn": "Governance.submitVerification",
      "offset": [
        18599,
        18609
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6840": {
      "fn": "Governance.submitVerification",
      "offset": [
        18599,
        18609
      ],
      "op": "ADD",
      "path": "2"
    },
    "6841": {
      "fn": "Governance.submitVerification",
      "offset": [
        18599,
        18609
      ],
      "op": "ADD",
      "path": "2"
    },
    "6842": {
      "fn": "Governance.submitVerification",
      "offset": [
        18599,
        18609
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6843": {
      "fn": "Governance.submitVerification",
      "offset": [
        18582,
        18610
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6845": {
      "fn": "Governance.submitVerification",
      "offset": [
        18582,
        18610
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6846": {
      "fn": "Governance.submitVerification",
      "offset": [
        18582,
        18610
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6848": {
      "fn": "Governance.submitVerification",
      "offset": [
        18582,
        18610
      ],
      "op": "ADD",
      "path": "2"
    },
    "6849": {
      "fn": "Governance.submitVerification",
      "offset": [
        18582,
        18610
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1ACC"
    },
    "6852": {
      "fn": "Governance.submitVerification",
      "offset": [
        18582,
        18610
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6853": {
      "op": "DUP2"
    },
    "6854": {
      "op": "MSTORE"
    },
    "6855": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6857": {
      "op": "ADD"
    },
    "6858": {
      "op": "SWAP1"
    },
    "6859": {
      "op": "JUMP"
    },
    "6860": {
      "fn": "Governance.submitVerification",
      "offset": [
        18582,
        18610
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6861": {
      "fn": "Governance.submitVerification",
      "offset": [
        18582,
        18610
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6863": {
      "fn": "Governance.submitVerification",
      "offset": [
        18582,
        18610
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6864": {
      "fn": "Governance.submitVerification",
      "offset": [
        18582,
        18610
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6866": {
      "fn": "Governance.submitVerification",
      "offset": [
        18582,
        18610
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6867": {
      "fn": "Governance.submitVerification",
      "offset": [
        18582,
        18610
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6868": {
      "fn": "Governance.submitVerification",
      "offset": [
        18582,
        18610
      ],
      "op": "SUB",
      "path": "2"
    },
    "6869": {
      "fn": "Governance.submitVerification",
      "offset": [
        18582,
        18610
      ],
      "op": "SUB",
      "path": "2"
    },
    "6870": {
      "fn": "Governance.submitVerification",
      "offset": [
        18582,
        18610
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6871": {
      "fn": "Governance.submitVerification",
      "offset": [
        18582,
        18610
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6872": {
      "fn": "Governance.submitVerification",
      "offset": [
        18582,
        18610
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6873": {
      "fn": "Governance.submitVerification",
      "offset": [
        18582,
        18610
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6875": {
      "fn": "Governance.submitVerification",
      "offset": [
        18582,
        18610
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6876": {
      "fn": "Governance.submitVerification",
      "offset": [
        18572,
        18611
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6877": {
      "fn": "Governance.submitVerification",
      "offset": [
        18572,
        18611
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6878": {
      "fn": "Governance.submitVerification",
      "offset": [
        18572,
        18611
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6879": {
      "fn": "Governance.submitVerification",
      "offset": [
        18572,
        18611
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6881": {
      "fn": "Governance.submitVerification",
      "offset": [
        18572,
        18611
      ],
      "op": "ADD",
      "path": "2"
    },
    "6882": {
      "fn": "Governance.submitVerification",
      "offset": [
        18572,
        18611
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "6883": {
      "fn": "Governance.submitVerification",
      "offset": [
        18559,
        18566
      ],
      "op": "DUP5",
      "path": "2"
    },
    "6884": {
      "fn": "Governance.submitVerification",
      "offset": [
        18567,
        18568
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6885": {
      "fn": "Governance.submitVerification",
      "offset": [
        18559,
        18569
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6886": {
      "fn": "Governance.submitVerification",
      "offset": [
        18559,
        18569
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6887": {
      "fn": "Governance.submitVerification",
      "offset": [
        18559,
        18569
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6888": {
      "fn": "Governance.submitVerification",
      "offset": [
        18559,
        18569
      ],
      "op": "LT",
      "path": "2"
    },
    "6889": {
      "fn": "Governance.submitVerification",
      "offset": [
        18559,
        18569
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1AF4"
    },
    "6892": {
      "fn": "Governance.submitVerification",
      "offset": [
        18559,
        18569
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6893": {
      "fn": "Governance.submitVerification",
      "offset": [
        18559,
        18569
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1AF4"
    },
    "6896": {
      "fn": "Governance.submitVerification",
      "offset": [
        18559,
        18569
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x30BE"
    },
    "6899": {
      "fn": "Governance.submitVerification",
      "jump": "i",
      "offset": [
        18559,
        18569
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6900": {
      "fn": "Governance.submitVerification",
      "offset": [
        18559,
        18569
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6901": {
      "fn": "Governance.submitVerification",
      "offset": [
        18559,
        18569
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6903": {
      "fn": "Governance.submitVerification",
      "offset": [
        18559,
        18569
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6904": {
      "fn": "Governance.submitVerification",
      "offset": [
        18559,
        18569
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6905": {
      "fn": "Governance.submitVerification",
      "offset": [
        18559,
        18569
      ],
      "op": "MUL",
      "path": "2"
    },
    "6906": {
      "fn": "Governance.submitVerification",
      "offset": [
        18559,
        18569
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6907": {
      "fn": "Governance.submitVerification",
      "offset": [
        18559,
        18569
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6908": {
      "fn": "Governance.submitVerification",
      "offset": [
        18559,
        18569
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6909": {
      "fn": "Governance.submitVerification",
      "offset": [
        18559,
        18569
      ],
      "op": "ADD",
      "path": "2"
    },
    "6910": {
      "fn": "Governance.submitVerification",
      "offset": [
        18559,
        18569
      ],
      "op": "ADD",
      "path": "2"
    },
    "6911": {
      "fn": "Governance.submitVerification",
      "offset": [
        18559,
        18611
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6912": {
      "fn": "Governance.submitVerification",
      "offset": [
        18639,
        18642
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 54,
      "value": "0x1"
    },
    "6914": {
      "fn": "Governance.submitVerification",
      "offset": [
        18639,
        18642
      ],
      "op": "ADD",
      "path": "2"
    },
    "6915": {
      "fn": "Governance.submitVerification",
      "offset": [
        18502,
        18658
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A97"
    },
    "6918": {
      "fn": "Governance.submitVerification",
      "offset": [
        18502,
        18658
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6919": {
      "fn": "Governance.submitVerification",
      "offset": [
        18502,
        18658
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6920": {
      "fn": "Governance.submitVerification",
      "offset": [
        18502,
        18658
      ],
      "op": "POP",
      "path": "2"
    },
    "6921": {
      "fn": "Governance.submitVerification",
      "offset": [
        18463,
        18668
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6922": {
      "fn": "Governance.submitVerification",
      "offset": [
        18677,
        18691
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6924": {
      "fn": "Governance.submitVerification",
      "offset": [
        18721,
        18728
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6925": {
      "fn": "Governance.submitVerification",
      "offset": [
        18704,
        18729
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6927": {
      "fn": "Governance.submitVerification",
      "offset": [
        18704,
        18729
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6928": {
      "fn": "Governance.submitVerification",
      "offset": [
        18704,
        18729
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6930": {
      "fn": "Governance.submitVerification",
      "offset": [
        18704,
        18729
      ],
      "op": "ADD",
      "path": "2"
    },
    "6931": {
      "fn": "Governance.submitVerification",
      "offset": [
        18704,
        18729
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1B1C"
    },
    "6934": {
      "fn": "Governance.submitVerification",
      "offset": [
        18704,
        18729
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6935": {
      "fn": "Governance.submitVerification",
      "offset": [
        18704,
        18729
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6936": {
      "fn": "Governance.submitVerification",
      "offset": [
        18704,
        18729
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x30D4"
    },
    "6939": {
      "fn": "Governance.submitVerification",
      "jump": "i",
      "offset": [
        18704,
        18729
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6940": {
      "fn": "Governance.submitVerification",
      "offset": [
        18704,
        18729
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6941": {
      "fn": "Governance.submitVerification",
      "offset": [
        18704,
        18729
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6943": {
      "fn": "Governance.submitVerification",
      "offset": [
        18704,
        18729
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6944": {
      "fn": "Governance.submitVerification",
      "offset": [
        18704,
        18729
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6946": {
      "fn": "Governance.submitVerification",
      "offset": [
        18704,
        18729
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6947": {
      "fn": "Governance.submitVerification",
      "offset": [
        18704,
        18729
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6948": {
      "fn": "Governance.submitVerification",
      "offset": [
        18704,
        18729
      ],
      "op": "SUB",
      "path": "2"
    },
    "6949": {
      "fn": "Governance.submitVerification",
      "offset": [
        18704,
        18729
      ],
      "op": "SUB",
      "path": "2"
    },
    "6950": {
      "fn": "Governance.submitVerification",
      "offset": [
        18704,
        18729
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6951": {
      "fn": "Governance.submitVerification",
      "offset": [
        18704,
        18729
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6952": {
      "fn": "Governance.submitVerification",
      "offset": [
        18704,
        18729
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6953": {
      "fn": "Governance.submitVerification",
      "offset": [
        18704,
        18729
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6955": {
      "fn": "Governance.submitVerification",
      "offset": [
        18704,
        18729
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6956": {
      "fn": "Governance.submitVerification",
      "offset": [
        18694,
        18730
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6957": {
      "fn": "Governance.submitVerification",
      "offset": [
        18694,
        18730
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6958": {
      "fn": "Governance.submitVerification",
      "offset": [
        18694,
        18730
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6959": {
      "fn": "Governance.submitVerification",
      "offset": [
        18694,
        18730
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6961": {
      "fn": "Governance.submitVerification",
      "offset": [
        18694,
        18730
      ],
      "op": "ADD",
      "path": "2"
    },
    "6962": {
      "fn": "Governance.submitVerification",
      "offset": [
        18694,
        18730
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "6963": {
      "fn": "Governance.submitVerification",
      "offset": [
        18677,
        18730
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6964": {
      "fn": "Governance.submitVerification",
      "offset": [
        18677,
        18730
      ],
      "op": "POP",
      "path": "2"
    },
    "6965": {
      "fn": "Governance.submitVerification",
      "offset": [
        18741,
        18760
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6967": {
      "fn": "Governance.submitVerification",
      "offset": [
        18778,
        18784
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6968": {
      "fn": "Governance.submitVerification",
      "offset": [
        18763,
        18769
      ],
      "op": "DUP5",
      "path": "2"
    },
    "6969": {
      "fn": "Governance.submitVerification",
      "offset": [
        18763,
        18774
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "6971": {
      "fn": "Governance.submitVerification",
      "offset": [
        18763,
        18774
      ],
      "op": "ADD",
      "path": "2"
    },
    "6972": {
      "fn": "Governance.submitVerification",
      "offset": [
        18763,
        18774
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6973": {
      "branch": 126,
      "fn": "Governance.submitVerification",
      "offset": [
        18763,
        18784
      ],
      "op": "EQ",
      "path": "2"
    },
    "6974": {
      "fn": "Governance.submitVerification",
      "offset": [
        18763,
        18792
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1B48"
    },
    "6977": {
      "branch": 126,
      "fn": "Governance.submitVerification",
      "offset": [
        18763,
        18792
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6978": {
      "fn": "Governance.submitVerification",
      "offset": [
        18791,
        18792
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6980": {
      "fn": "Governance.submitVerification",
      "offset": [
        18763,
        18792
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1B4B"
    },
    "6983": {
      "fn": "Governance.submitVerification",
      "offset": [
        18763,
        18792
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6984": {
      "fn": "Governance.submitVerification",
      "offset": [
        18763,
        18792
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6985": {
      "fn": "Governance.submitVerification",
      "offset": [
        18787,
        18788
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "6987": {
      "fn": "Governance.submitVerification",
      "offset": [
        18763,
        18792
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6988": {
      "fn": "Governance.submitVerification",
      "offset": [
        18838,
        18850
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 55,
      "value": "0x1"
    },
    "6990": {
      "fn": "Governance.submitVerification",
      "offset": [
        18838,
        18850
      ],
      "op": "DUP6",
      "path": "2"
    },
    "6991": {
      "fn": "Governance.submitVerification",
      "offset": [
        18838,
        18850
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6992": {
      "fn": "Governance.submitVerification",
      "offset": [
        18838,
        18850
      ],
      "op": "ADD",
      "path": "2"
    },
    "6993": {
      "fn": "Governance.submitVerification",
      "offset": [
        18838,
        18850
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6994": {
      "fn": "Governance.submitVerification",
      "offset": [
        18808,
        18884
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6996": {
      "fn": "Governance.submitVerification",
      "offset": [
        18808,
        18884
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6997": {
      "fn": "Governance.submitVerification",
      "offset": [
        18808,
        18884
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6998": {
      "op": "DUP12"
    },
    "6999": {
      "op": "DUP2"
    },
    "7000": {
      "op": "MSTORE"
    },
    "7001": {
      "fn": "Governance.submitVerification",
      "offset": [
        18838,
        18850
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "7007": {
      "fn": "Governance.submitVerification",
      "offset": [
        18838,
        18850
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7008": {
      "fn": "Governance.submitVerification",
      "offset": [
        18838,
        18850
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "7009": {
      "fn": "Governance.submitVerification",
      "offset": [
        18838,
        18850
      ],
      "op": "AND",
      "path": "2"
    },
    "7010": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7012": {
      "op": "DUP4"
    },
    "7013": {
      "op": "ADD"
    },
    "7014": {
      "op": "MSTORE"
    },
    "7015": {
      "op": "DUP2"
    },
    "7016": {
      "op": "ADD"
    },
    "7017": {
      "op": "DUP10"
    },
    "7018": {
      "op": "SWAP1"
    },
    "7019": {
      "op": "MSTORE"
    },
    "7020": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7022": {
      "op": "DUP2"
    },
    "7023": {
      "op": "ADD"
    },
    "7024": {
      "op": "DUP6"
    },
    "7025": {
      "op": "SWAP1"
    },
    "7026": {
      "op": "MSTORE"
    },
    "7027": {
      "fn": "Governance.submitVerification",
      "offset": [
        18741,
        18792
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "7029": {
      "fn": "Governance.submitVerification",
      "offset": [
        18741,
        18792
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "7030": {
      "fn": "Governance.submitVerification",
      "offset": [
        18741,
        18792
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7031": {
      "fn": "Governance.submitVerification",
      "offset": [
        18741,
        18792
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "7032": {
      "fn": "Governance.submitVerification",
      "offset": [
        18741,
        18792
      ],
      "op": "AND",
      "path": "2"
    },
    "7033": {
      "fn": "Governance.submitVerification",
      "offset": [
        18869,
        18883
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7034": {
      "fn": "Governance.submitVerification",
      "offset": [
        18869,
        18883
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7035": {
      "fn": "Governance.submitVerification",
      "offset": [
        18869,
        18883
      ],
      "op": "EQ",
      "path": "2"
    },
    "7036": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7038": {
      "op": "DUP4"
    },
    "7039": {
      "op": "ADD"
    },
    "7040": {
      "op": "MSTORE"
    },
    "7041": {
      "fn": "Governance.submitVerification",
      "offset": [
        18741,
        18792
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7042": {
      "op": "POP"
    },
    "7043": {
      "fn": "Governance.submitVerification",
      "offset": [
        18808,
        18884
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0xE3F0E138F100DEAF328BA1DEF71C39DADE8CD971BA0074D935EE648E54532FAE"
    },
    "7076": {
      "fn": "Governance.submitVerification",
      "offset": [
        18808,
        18884
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7077": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7079": {
      "op": "ADD"
    },
    "7080": {
      "fn": "Governance.submitVerification",
      "offset": [
        18808,
        18884
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7082": {
      "fn": "Governance.submitVerification",
      "offset": [
        18808,
        18884
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7083": {
      "fn": "Governance.submitVerification",
      "offset": [
        18808,
        18884
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7084": {
      "fn": "Governance.submitVerification",
      "offset": [
        18808,
        18884
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7085": {
      "fn": "Governance.submitVerification",
      "offset": [
        18808,
        18884
      ],
      "op": "SUB",
      "path": "2"
    },
    "7086": {
      "fn": "Governance.submitVerification",
      "offset": [
        18808,
        18884
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7087": {
      "fn": "Governance.submitVerification",
      "offset": [
        18808,
        18884
      ],
      "op": "LOG1",
      "path": "2"
    },
    "7088": {
      "fn": "Governance.submitVerification",
      "offset": [
        18899,
        18910
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7089": {
      "fn": "Governance.submitVerification",
      "offset": [
        18913,
        18914
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "7091": {
      "branch": 127,
      "fn": "Governance.submitVerification",
      "offset": [
        18899,
        18914
      ],
      "op": "SUB",
      "path": "2"
    },
    "7092": {
      "fn": "Governance.submitVerification",
      "offset": [
        18895,
        21161
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1EB1"
    },
    "7095": {
      "branch": 127,
      "fn": "Governance.submitVerification",
      "offset": [
        18895,
        21161
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7096": {
      "fn": "Governance.submitVerification",
      "offset": [
        19009,
        19023
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "7098": {
      "fn": "Governance.submitVerification",
      "offset": [
        19009,
        19023
      ],
      "op": "DUP5",
      "path": "2"
    },
    "7099": {
      "fn": "Governance.submitVerification",
      "offset": [
        19009,
        19023
      ],
      "op": "ADD",
      "path": "2"
    },
    "7100": {
      "fn": "Governance.submitVerification",
      "offset": [
        19009,
        19023
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7101": {
      "fn": "Governance.submitVerification",
      "offset": [
        18993,
        19006
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7103": {
      "fn": "Governance.submitVerification",
      "offset": [
        18993,
        19006
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7104": {
      "fn": "Governance.submitVerification",
      "offset": [
        19009,
        19025
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1BDB"
    },
    "7107": {
      "fn": "Governance.submitVerification",
      "offset": [
        19009,
        19025
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7108": {
      "fn": "Governance.submitVerification",
      "offset": [
        19024,
        19025
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "7110": {
      "fn": "Governance.submitVerification",
      "offset": [
        19024,
        19025
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7111": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7113": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7115": {
      "op": "SHL"
    },
    "7116": {
      "fn": "Governance.submitVerification",
      "offset": [
        19009,
        19023
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7117": {
      "fn": "Governance.submitVerification",
      "offset": [
        19009,
        19023
      ],
      "op": "DIV",
      "path": "2"
    },
    "7118": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7120": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7122": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "7124": {
      "op": "SHL"
    },
    "7125": {
      "op": "SUB"
    },
    "7126": {
      "fn": "Governance.submitVerification",
      "offset": [
        19009,
        19023
      ],
      "op": "AND",
      "path": "2"
    },
    "7127": {
      "fn": "Governance.submitVerification",
      "offset": [
        19009,
        19025
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x348E"
    },
    "7130": {
      "fn": "Governance.submitVerification",
      "jump": "i",
      "offset": [
        19009,
        19025
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7131": {
      "fn": "Governance.submitVerification",
      "offset": [
        19009,
        19025
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7132": {
      "fn": "Governance.submitVerification",
      "offset": [
        19079,
        19089
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "7134": {
      "fn": "Governance.submitVerification",
      "offset": [
        19079,
        19089
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7135": {
      "fn": "Governance.submitVerification",
      "offset": [
        19098,
        19115
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "7137": {
      "fn": "Governance.submitVerification",
      "offset": [
        19098,
        19115
      ],
      "op": "DUP8",
      "path": "2"
    },
    "7138": {
      "fn": "Governance.submitVerification",
      "offset": [
        19098,
        19115
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7139": {
      "fn": "Governance.submitVerification",
      "offset": [
        19098,
        19115
      ],
      "op": "ADD",
      "path": "2"
    },
    "7140": {
      "fn": "Governance.submitVerification",
      "offset": [
        19098,
        19115
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7141": {
      "fn": "Governance.submitVerification",
      "offset": [
        19079,
        19116
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7143": {
      "fn": "Governance.submitVerification",
      "offset": [
        19079,
        19116
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7144": {
      "op": "PUSH4",
      "value": "0x31A9108F"
    },
    "7149": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "7151": {
      "op": "SHL"
    },
    "7152": {
      "fn": "Governance.submitVerification",
      "offset": [
        19079,
        19116
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7153": {
      "fn": "Governance.submitVerification",
      "offset": [
        19079,
        19116
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7154": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7156": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "7158": {
      "op": "SHL"
    },
    "7159": {
      "fn": "Governance.submitVerification",
      "offset": [
        19098,
        19115
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7160": {
      "fn": "Governance.submitVerification",
      "offset": [
        19098,
        19115
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7161": {
      "fn": "Governance.submitVerification",
      "offset": [
        19098,
        19115
      ],
      "op": "DIV",
      "path": "2"
    },
    "7162": {
      "fn": "Governance.submitVerification",
      "offset": [
        19098,
        19115
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "7165": {
      "fn": "Governance.submitVerification",
      "offset": [
        19098,
        19115
      ],
      "op": "AND",
      "path": "2"
    },
    "7166": {
      "fn": "Governance.submitVerification",
      "offset": [
        19079,
        19116
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7167": {
      "fn": "Governance.submitVerification",
      "offset": [
        19079,
        19116
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7168": {
      "fn": "Governance.submitVerification",
      "offset": [
        19079,
        19116
      ],
      "op": "ADD",
      "path": "2"
    },
    "7169": {
      "op": "SWAP2"
    },
    "7170": {
      "op": "SWAP1"
    },
    "7171": {
      "op": "SWAP2"
    },
    "7172": {
      "op": "MSTORE"
    },
    "7173": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7175": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7177": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "7179": {
      "op": "SHL"
    },
    "7180": {
      "op": "SUB"
    },
    "7181": {
      "fn": "Governance.submitVerification",
      "offset": [
        18993,
        19025
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "7182": {
      "fn": "Governance.submitVerification",
      "offset": [
        18993,
        19025
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7183": {
      "fn": "Governance.submitVerification",
      "offset": [
        18993,
        19025
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "7184": {
      "fn": "Governance.submitVerification",
      "offset": [
        18993,
        19025
      ],
      "op": "AND",
      "path": "2"
    },
    "7185": {
      "fn": "Governance.submitVerification",
      "offset": [
        18993,
        19025
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "7186": {
      "op": "POP"
    },
    "7187": {
      "fn": "Governance.submitVerification",
      "offset": [
        19039,
        19068
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7189": {
      "fn": "Governance.submitVerification",
      "offset": [
        19039,
        19068
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7190": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7192": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7194": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7196": {
      "op": "SHL"
    },
    "7197": {
      "op": "SUB"
    },
    "7198": {
      "fn": "Governance.submitVerification",
      "offset": [
        19079,
        19089
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7199": {
      "fn": "Governance.submitVerification",
      "offset": [
        19079,
        19089
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7200": {
      "fn": "Governance.submitVerification",
      "offset": [
        19079,
        19089
      ],
      "op": "AND",
      "path": "2"
    },
    "7201": {
      "fn": "Governance.submitVerification",
      "offset": [
        19079,
        19089
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7202": {
      "fn": "Governance.submitVerification",
      "offset": [
        19079,
        19097
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x6352211E"
    },
    "7207": {
      "fn": "Governance.submitVerification",
      "offset": [
        19079,
        19097
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7208": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7210": {
      "op": "ADD"
    },
    "7211": {
      "fn": "Governance.submitVerification",
      "offset": [
        19079,
        19116
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7213": {
      "fn": "Governance.submitVerification",
      "offset": [
        19079,
        19116
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7215": {
      "fn": "Governance.submitVerification",
      "offset": [
        19079,
        19116
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7216": {
      "fn": "Governance.submitVerification",
      "offset": [
        19079,
        19116
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7217": {
      "fn": "Governance.submitVerification",
      "offset": [
        19079,
        19116
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7218": {
      "fn": "Governance.submitVerification",
      "offset": [
        19079,
        19116
      ],
      "op": "SUB",
      "path": "2"
    },
    "7219": {
      "fn": "Governance.submitVerification",
      "offset": [
        19079,
        19116
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7220": {
      "fn": "Governance.submitVerification",
      "offset": [
        19079,
        19116
      ],
      "op": "DUP7",
      "path": "2"
    },
    "7221": {
      "fn": "Governance.submitVerification",
      "offset": [
        19079,
        19116
      ],
      "op": "GAS",
      "path": "2"
    },
    "7222": {
      "fn": "Governance.submitVerification",
      "offset": [
        19079,
        19116
      ],
      "op": "STATICCALL",
      "path": "2"
    },
    "7223": {
      "fn": "Governance.submitVerification",
      "offset": [
        19079,
        19116
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "7224": {
      "fn": "Governance.submitVerification",
      "offset": [
        19079,
        19116
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7225": {
      "fn": "Governance.submitVerification",
      "offset": [
        19079,
        19116
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "7226": {
      "fn": "Governance.submitVerification",
      "offset": [
        19079,
        19116
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1C47"
    },
    "7229": {
      "fn": "Governance.submitVerification",
      "offset": [
        19079,
        19116
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7230": {
      "fn": "Governance.submitVerification",
      "offset": [
        19079,
        19116
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "7231": {
      "fn": "Governance.submitVerification",
      "offset": [
        19079,
        19116
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7233": {
      "fn": "Governance.submitVerification",
      "offset": [
        19079,
        19116
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7234": {
      "fn": "Governance.submitVerification",
      "offset": [
        19079,
        19116
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "7235": {
      "fn": "Governance.submitVerification",
      "offset": [
        19079,
        19116
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "7236": {
      "fn": "Governance.submitVerification",
      "offset": [
        19079,
        19116
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7238": {
      "fn": "Governance.submitVerification",
      "offset": [
        19079,
        19116
      ],
      "op": "REVERT",
      "path": "2"
    },
    "7239": {
      "fn": "Governance.submitVerification",
      "offset": [
        19079,
        19116
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7240": {
      "fn": "Governance.submitVerification",
      "offset": [
        19079,
        19116
      ],
      "op": "POP",
      "path": "2"
    },
    "7241": {
      "fn": "Governance.submitVerification",
      "offset": [
        19079,
        19116
      ],
      "op": "POP",
      "path": "2"
    },
    "7242": {
      "fn": "Governance.submitVerification",
      "offset": [
        19079,
        19116
      ],
      "op": "POP",
      "path": "2"
    },
    "7243": {
      "fn": "Governance.submitVerification",
      "offset": [
        19079,
        19116
      ],
      "op": "POP",
      "path": "2"
    },
    "7244": {
      "fn": "Governance.submitVerification",
      "offset": [
        19079,
        19116
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7246": {
      "fn": "Governance.submitVerification",
      "offset": [
        19079,
        19116
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7247": {
      "fn": "Governance.submitVerification",
      "offset": [
        19079,
        19116
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "7248": {
      "fn": "Governance.submitVerification",
      "offset": [
        19079,
        19116
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "7250": {
      "fn": "Governance.submitVerification",
      "offset": [
        19079,
        19116
      ],
      "op": "NOT",
      "path": "2"
    },
    "7251": {
      "fn": "Governance.submitVerification",
      "offset": [
        19079,
        19116
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "7253": {
      "fn": "Governance.submitVerification",
      "offset": [
        19079,
        19116
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7254": {
      "fn": "Governance.submitVerification",
      "offset": [
        19079,
        19116
      ],
      "op": "ADD",
      "path": "2"
    },
    "7255": {
      "fn": "Governance.submitVerification",
      "offset": [
        19079,
        19116
      ],
      "op": "AND",
      "path": "2"
    },
    "7256": {
      "fn": "Governance.submitVerification",
      "offset": [
        19079,
        19116
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7257": {
      "fn": "Governance.submitVerification",
      "offset": [
        19079,
        19116
      ],
      "op": "ADD",
      "path": "2"
    },
    "7258": {
      "fn": "Governance.submitVerification",
      "offset": [
        19079,
        19116
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7259": {
      "fn": "Governance.submitVerification",
      "offset": [
        19079,
        19116
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7261": {
      "fn": "Governance.submitVerification",
      "offset": [
        19079,
        19116
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7262": {
      "fn": "Governance.submitVerification",
      "offset": [
        19079,
        19116
      ],
      "op": "POP",
      "path": "2"
    },
    "7263": {
      "fn": "Governance.submitVerification",
      "offset": [
        19079,
        19116
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7264": {
      "fn": "Governance.submitVerification",
      "offset": [
        19079,
        19116
      ],
      "op": "ADD",
      "path": "2"
    },
    "7265": {
      "fn": "Governance.submitVerification",
      "offset": [
        19079,
        19116
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7266": {
      "fn": "Governance.submitVerification",
      "offset": [
        19079,
        19116
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1C6B"
    },
    "7269": {
      "fn": "Governance.submitVerification",
      "offset": [
        19079,
        19116
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7270": {
      "fn": "Governance.submitVerification",
      "offset": [
        19079,
        19116
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7271": {
      "fn": "Governance.submitVerification",
      "offset": [
        19079,
        19116
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x33B1"
    },
    "7274": {
      "fn": "Governance.submitVerification",
      "jump": "i",
      "offset": [
        19079,
        19116
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7275": {
      "fn": "Governance.submitVerification",
      "offset": [
        19079,
        19116
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7276": {
      "fn": "Governance.submitVerification",
      "offset": [
        19186,
        19196
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 56,
      "value": "0x2"
    },
    "7278": {
      "fn": "Governance.submitVerification",
      "offset": [
        19186,
        19196
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7279": {
      "fn": "Governance.submitVerification",
      "offset": [
        19186,
        19196
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "7281": {
      "fn": "Governance.submitVerification",
      "offset": [
        19208,
        19220
      ],
      "op": "DUP9",
      "path": "2"
    },
    "7282": {
      "fn": "Governance.submitVerification",
      "offset": [
        19208,
        19220
      ],
      "op": "ADD",
      "path": "2"
    },
    "7283": {
      "fn": "Governance.submitVerification",
      "offset": [
        19208,
        19220
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7284": {
      "fn": "Governance.submitVerification",
      "offset": [
        19222,
        19238
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "7286": {
      "fn": "Governance.submitVerification",
      "offset": [
        19222,
        19238
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7287": {
      "fn": "Governance.submitVerification",
      "offset": [
        19222,
        19238
      ],
      "op": "DUP11",
      "path": "2"
    },
    "7288": {
      "fn": "Governance.submitVerification",
      "offset": [
        19222,
        19238
      ],
      "op": "ADD",
      "path": "2"
    },
    "7289": {
      "fn": "Governance.submitVerification",
      "offset": [
        19222,
        19238
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7290": {
      "fn": "Governance.submitVerification",
      "offset": [
        19186,
        19239
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7292": {
      "fn": "Governance.submitVerification",
      "offset": [
        19186,
        19239
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7293": {
      "op": "PUSH4",
      "value": "0x8AD4D6A5"
    },
    "7298": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7300": {
      "op": "SHL"
    },
    "7301": {
      "fn": "Governance.submitVerification",
      "offset": [
        19186,
        19239
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7302": {
      "fn": "Governance.submitVerification",
      "offset": [
        19186,
        19239
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7303": {
      "fn": "Governance.submitVerification",
      "offset": [
        19208,
        19220
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "7309": {
      "fn": "Governance.submitVerification",
      "offset": [
        19208,
        19220
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7310": {
      "fn": "Governance.submitVerification",
      "offset": [
        19208,
        19220
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "7311": {
      "fn": "Governance.submitVerification",
      "offset": [
        19208,
        19220
      ],
      "op": "AND",
      "path": "2"
    },
    "7312": {
      "fn": "Governance.submitVerification",
      "offset": [
        19186,
        19239
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7313": {
      "fn": "Governance.submitVerification",
      "offset": [
        19186,
        19239
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7314": {
      "fn": "Governance.submitVerification",
      "offset": [
        19186,
        19239
      ],
      "op": "ADD",
      "path": "2"
    },
    "7315": {
      "op": "SWAP2"
    },
    "7316": {
      "op": "SWAP1"
    },
    "7317": {
      "op": "SWAP2"
    },
    "7318": {
      "op": "MSTORE"
    },
    "7319": {
      "fn": "Governance.submitVerification",
      "offset": [
        19186,
        19196
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "7322": {
      "fn": "Governance.submitVerification",
      "offset": [
        19222,
        19238
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7323": {
      "fn": "Governance.submitVerification",
      "offset": [
        19222,
        19238
      ],
      "op": "DIV",
      "path": "2"
    },
    "7324": {
      "fn": "Governance.submitVerification",
      "offset": [
        19222,
        19238
      ],
      "op": "PUSH3",
      "path": "2",
      "value": "0xFFFFFF"
    },
    "7328": {
      "fn": "Governance.submitVerification",
      "offset": [
        19222,
        19238
      ],
      "op": "AND",
      "path": "2"
    },
    "7329": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7331": {
      "op": "DUP3"
    },
    "7332": {
      "op": "ADD"
    },
    "7333": {
      "op": "MSTORE"
    },
    "7334": {
      "fn": "Governance.submitVerification",
      "offset": [
        19039,
        19117
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7335": {
      "fn": "Governance.submitVerification",
      "offset": [
        19039,
        19117
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "7336": {
      "op": "POP"
    },
    "7337": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7339": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7341": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7343": {
      "op": "SHL"
    },
    "7344": {
      "op": "SUB"
    },
    "7345": {
      "fn": "Governance.submitVerification",
      "offset": [
        19186,
        19196
      ],
      "op": "AND",
      "path": "2"
    },
    "7346": {
      "fn": "Governance.submitVerification",
      "offset": [
        19186,
        19196
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7347": {
      "fn": "Governance.submitVerification",
      "offset": [
        19186,
        19207
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x8AD4D6A5"
    },
    "7352": {
      "fn": "Governance.submitVerification",
      "offset": [
        19186,
        19207
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7353": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7355": {
      "op": "ADD"
    },
    "7356": {
      "fn": "Governance.submitVerification",
      "offset": [
        19186,
        19239
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7358": {
      "fn": "Governance.submitVerification",
      "offset": [
        19186,
        19239
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7360": {
      "fn": "Governance.submitVerification",
      "offset": [
        19186,
        19239
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7361": {
      "fn": "Governance.submitVerification",
      "offset": [
        19186,
        19239
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7362": {
      "fn": "Governance.submitVerification",
      "offset": [
        19186,
        19239
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7363": {
      "fn": "Governance.submitVerification",
      "offset": [
        19186,
        19239
      ],
      "op": "SUB",
      "path": "2"
    },
    "7364": {
      "fn": "Governance.submitVerification",
      "offset": [
        19186,
        19239
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7365": {
      "fn": "Governance.submitVerification",
      "offset": [
        19186,
        19239
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7367": {
      "fn": "Governance.submitVerification",
      "offset": [
        19186,
        19239
      ],
      "op": "DUP8",
      "path": "2"
    },
    "7368": {
      "fn": "Governance.submitVerification",
      "offset": [
        19186,
        19239
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7369": {
      "fn": "Governance.submitVerification",
      "offset": [
        19186,
        19239
      ],
      "op": "EXTCODESIZE",
      "path": "2"
    },
    "7370": {
      "fn": "Governance.submitVerification",
      "offset": [
        19186,
        19239
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "7371": {
      "fn": "Governance.submitVerification",
      "offset": [
        19186,
        19239
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7372": {
      "fn": "Governance.submitVerification",
      "offset": [
        19186,
        19239
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "7373": {
      "fn": "Governance.submitVerification",
      "offset": [
        19186,
        19239
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1CD5"
    },
    "7376": {
      "fn": "Governance.submitVerification",
      "offset": [
        19186,
        19239
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7377": {
      "fn": "Governance.submitVerification",
      "offset": [
        19186,
        19239
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7379": {
      "fn": "Governance.submitVerification",
      "offset": [
        19186,
        19239
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7380": {
      "fn": "Governance.submitVerification",
      "offset": [
        19186,
        19239
      ],
      "op": "REVERT",
      "path": "2"
    },
    "7381": {
      "fn": "Governance.submitVerification",
      "offset": [
        19186,
        19239
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7382": {
      "fn": "Governance.submitVerification",
      "offset": [
        19186,
        19239
      ],
      "op": "POP",
      "path": "2"
    },
    "7383": {
      "fn": "Governance.submitVerification",
      "offset": [
        19186,
        19239
      ],
      "op": "GAS",
      "path": "2"
    },
    "7384": {
      "fn": "Governance.submitVerification",
      "offset": [
        19186,
        19239
      ],
      "op": "CALL",
      "path": "2"
    },
    "7385": {
      "fn": "Governance.submitVerification",
      "offset": [
        19186,
        19239
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "7386": {
      "fn": "Governance.submitVerification",
      "offset": [
        19186,
        19239
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7387": {
      "fn": "Governance.submitVerification",
      "offset": [
        19186,
        19239
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "7388": {
      "fn": "Governance.submitVerification",
      "offset": [
        19186,
        19239
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1CE9"
    },
    "7391": {
      "fn": "Governance.submitVerification",
      "offset": [
        19186,
        19239
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7392": {
      "fn": "Governance.submitVerification",
      "offset": [
        19186,
        19239
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "7393": {
      "fn": "Governance.submitVerification",
      "offset": [
        19186,
        19239
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7395": {
      "fn": "Governance.submitVerification",
      "offset": [
        19186,
        19239
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7396": {
      "fn": "Governance.submitVerification",
      "offset": [
        19186,
        19239
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "7397": {
      "fn": "Governance.submitVerification",
      "offset": [
        19186,
        19239
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "7398": {
      "fn": "Governance.submitVerification",
      "offset": [
        19186,
        19239
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7400": {
      "fn": "Governance.submitVerification",
      "offset": [
        19186,
        19239
      ],
      "op": "REVERT",
      "path": "2"
    },
    "7401": {
      "fn": "Governance.submitVerification",
      "offset": [
        19186,
        19239
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7402": {
      "op": "POP"
    },
    "7403": {
      "op": "POP"
    },
    "7404": {
      "fn": "Governance.submitVerification",
      "offset": [
        19253,
        19263
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 57,
      "value": "0x2"
    },
    "7406": {
      "fn": "Governance.submitVerification",
      "offset": [
        19253,
        19263
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7407": {
      "fn": "Governance.submitVerification",
      "offset": [
        19275,
        19292
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "7409": {
      "fn": "Governance.submitVerification",
      "offset": [
        19275,
        19292
      ],
      "op": "DUP10",
      "path": "2"
    },
    "7410": {
      "fn": "Governance.submitVerification",
      "offset": [
        19275,
        19292
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7411": {
      "fn": "Governance.submitVerification",
      "offset": [
        19275,
        19292
      ],
      "op": "ADD",
      "path": "2"
    },
    "7412": {
      "fn": "Governance.submitVerification",
      "offset": [
        19275,
        19292
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7413": {
      "fn": "Governance.submitVerification",
      "offset": [
        19294,
        19319
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xC"
    },
    "7415": {
      "fn": "Governance.submitVerification",
      "offset": [
        19294,
        19319
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7416": {
      "fn": "Governance.submitVerification",
      "offset": [
        19253,
        19320
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7418": {
      "fn": "Governance.submitVerification",
      "offset": [
        19253,
        19320
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7419": {
      "op": "PUSH4",
      "value": "0x8AD4D6A5"
    },
    "7424": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7426": {
      "op": "SHL"
    },
    "7427": {
      "fn": "Governance.submitVerification",
      "offset": [
        19253,
        19320
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7428": {
      "fn": "Governance.submitVerification",
      "offset": [
        19253,
        19320
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7429": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7431": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "7433": {
      "op": "SHL"
    },
    "7434": {
      "fn": "Governance.submitVerification",
      "offset": [
        19275,
        19292
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7435": {
      "fn": "Governance.submitVerification",
      "offset": [
        19275,
        19292
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "7436": {
      "fn": "Governance.submitVerification",
      "offset": [
        19275,
        19292
      ],
      "op": "DIV",
      "path": "2"
    },
    "7437": {
      "fn": "Governance.submitVerification",
      "offset": [
        19275,
        19292
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "7440": {
      "fn": "Governance.submitVerification",
      "offset": [
        19275,
        19292
      ],
      "op": "AND",
      "path": "2"
    },
    "7441": {
      "fn": "Governance.submitVerification",
      "offset": [
        19253,
        19320
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "7442": {
      "fn": "Governance.submitVerification",
      "offset": [
        19253,
        19320
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7443": {
      "fn": "Governance.submitVerification",
      "offset": [
        19253,
        19320
      ],
      "op": "ADD",
      "path": "2"
    },
    "7444": {
      "op": "SWAP3"
    },
    "7445": {
      "op": "SWAP1"
    },
    "7446": {
      "op": "SWAP3"
    },
    "7447": {
      "op": "MSTORE"
    },
    "7448": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7450": {
      "op": "DUP2"
    },
    "7451": {
      "op": "ADD"
    },
    "7452": {
      "op": "SWAP2"
    },
    "7453": {
      "op": "SWAP1"
    },
    "7454": {
      "op": "SWAP2"
    },
    "7455": {
      "op": "MSTORE"
    },
    "7456": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7458": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7460": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7462": {
      "op": "SHL"
    },
    "7463": {
      "op": "SUB"
    },
    "7464": {
      "fn": "Governance.submitVerification",
      "offset": [
        19253,
        19263
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7465": {
      "fn": "Governance.submitVerification",
      "offset": [
        19253,
        19263
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7466": {
      "fn": "Governance.submitVerification",
      "offset": [
        19253,
        19263
      ],
      "op": "AND",
      "path": "2"
    },
    "7467": {
      "fn": "Governance.submitVerification",
      "offset": [
        19253,
        19263
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "7468": {
      "op": "POP"
    },
    "7469": {
      "fn": "Governance.submitVerification",
      "offset": [
        19253,
        19274
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x8AD4D6A5"
    },
    "7474": {
      "fn": "Governance.submitVerification",
      "offset": [
        19253,
        19274
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7475": {
      "op": "POP"
    },
    "7476": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7478": {
      "op": "ADD"
    },
    "7479": {
      "fn": "Governance.submitVerification",
      "offset": [
        19253,
        19320
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7480": {
      "fn": "Governance.submitVerification",
      "offset": [
        19253,
        19320
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7482": {
      "fn": "Governance.submitVerification",
      "offset": [
        19253,
        19320
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7484": {
      "fn": "Governance.submitVerification",
      "offset": [
        19253,
        19320
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7485": {
      "fn": "Governance.submitVerification",
      "offset": [
        19253,
        19320
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7486": {
      "fn": "Governance.submitVerification",
      "offset": [
        19253,
        19320
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7487": {
      "fn": "Governance.submitVerification",
      "offset": [
        19253,
        19320
      ],
      "op": "SUB",
      "path": "2"
    },
    "7488": {
      "fn": "Governance.submitVerification",
      "offset": [
        19253,
        19320
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7489": {
      "fn": "Governance.submitVerification",
      "offset": [
        19253,
        19320
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7491": {
      "fn": "Governance.submitVerification",
      "offset": [
        19253,
        19320
      ],
      "op": "DUP8",
      "path": "2"
    },
    "7492": {
      "fn": "Governance.submitVerification",
      "offset": [
        19253,
        19320
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7493": {
      "fn": "Governance.submitVerification",
      "offset": [
        19253,
        19320
      ],
      "op": "EXTCODESIZE",
      "path": "2"
    },
    "7494": {
      "fn": "Governance.submitVerification",
      "offset": [
        19253,
        19320
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "7495": {
      "fn": "Governance.submitVerification",
      "offset": [
        19253,
        19320
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7496": {
      "fn": "Governance.submitVerification",
      "offset": [
        19253,
        19320
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "7497": {
      "fn": "Governance.submitVerification",
      "offset": [
        19253,
        19320
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1D51"
    },
    "7500": {
      "fn": "Governance.submitVerification",
      "offset": [
        19253,
        19320
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7501": {
      "fn": "Governance.submitVerification",
      "offset": [
        19253,
        19320
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7503": {
      "fn": "Governance.submitVerification",
      "offset": [
        19253,
        19320
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7504": {
      "fn": "Governance.submitVerification",
      "offset": [
        19253,
        19320
      ],
      "op": "REVERT",
      "path": "2"
    },
    "7505": {
      "fn": "Governance.submitVerification",
      "offset": [
        19253,
        19320
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7506": {
      "fn": "Governance.submitVerification",
      "offset": [
        19253,
        19320
      ],
      "op": "POP",
      "path": "2"
    },
    "7507": {
      "fn": "Governance.submitVerification",
      "offset": [
        19253,
        19320
      ],
      "op": "GAS",
      "path": "2"
    },
    "7508": {
      "fn": "Governance.submitVerification",
      "offset": [
        19253,
        19320
      ],
      "op": "CALL",
      "path": "2"
    },
    "7509": {
      "fn": "Governance.submitVerification",
      "offset": [
        19253,
        19320
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "7510": {
      "fn": "Governance.submitVerification",
      "offset": [
        19253,
        19320
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7511": {
      "fn": "Governance.submitVerification",
      "offset": [
        19253,
        19320
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "7512": {
      "fn": "Governance.submitVerification",
      "offset": [
        19253,
        19320
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1D65"
    },
    "7515": {
      "fn": "Governance.submitVerification",
      "offset": [
        19253,
        19320
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7516": {
      "fn": "Governance.submitVerification",
      "offset": [
        19253,
        19320
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "7517": {
      "fn": "Governance.submitVerification",
      "offset": [
        19253,
        19320
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7519": {
      "fn": "Governance.submitVerification",
      "offset": [
        19253,
        19320
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7520": {
      "fn": "Governance.submitVerification",
      "offset": [
        19253,
        19320
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "7521": {
      "fn": "Governance.submitVerification",
      "offset": [
        19253,
        19320
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "7522": {
      "fn": "Governance.submitVerification",
      "offset": [
        19253,
        19320
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7524": {
      "fn": "Governance.submitVerification",
      "offset": [
        19253,
        19320
      ],
      "op": "REVERT",
      "path": "2"
    },
    "7525": {
      "fn": "Governance.submitVerification",
      "offset": [
        19253,
        19320
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7526": {
      "op": "POP"
    },
    "7527": {
      "op": "POP"
    },
    "7528": {
      "op": "POP"
    },
    "7529": {
      "fn": "Governance.submitVerification",
      "offset": [
        19335,
        19349
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 58,
      "value": "0x4"
    },
    "7531": {
      "fn": "Governance.submitVerification",
      "offset": [
        19335,
        19349
      ],
      "op": "DUP8",
      "path": "2"
    },
    "7532": {
      "fn": "Governance.submitVerification",
      "offset": [
        19335,
        19349
      ],
      "op": "ADD",
      "path": "2"
    },
    "7533": {
      "fn": "Governance.submitVerification",
      "offset": [
        19335,
        19351
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7534": {
      "fn": "Governance.submitVerification",
      "offset": [
        19335,
        19351
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7535": {
      "op": "PUSH14",
      "value": "0xFFFFFFFFFFFFFFFFFFFF00000000"
    },
    "7550": {
      "op": "NOT"
    },
    "7551": {
      "fn": "Governance.submitVerification",
      "offset": [
        19335,
        19351
      ],
      "op": "AND",
      "path": "2"
    },
    "7552": {
      "fn": "Governance.submitVerification",
      "offset": [
        19335,
        19351
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7553": {
      "fn": "Governance.submitVerification",
      "offset": [
        19335,
        19351
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "7554": {
      "op": "POP"
    },
    "7555": {
      "fn": "Governance.submitVerification",
      "offset": [
        19350,
        19351
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7557": {
      "fn": "Governance.submitVerification",
      "offset": [
        19401,
        19415
      ],
      "op": "DUP9",
      "path": "2",
      "statement": 59
    },
    "7558": {
      "fn": "Governance.submitVerification",
      "offset": [
        19401,
        19415
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7559": {
      "fn": "Governance.submitVerification",
      "offset": [
        19401,
        19415
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7560": {
      "fn": "Governance.submitVerification",
      "offset": [
        19401,
        19406
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x9"
    },
    "7562": {
      "fn": "Governance.submitVerification",
      "offset": [
        19401,
        19415
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7564": {
      "fn": "Governance.submitVerification",
      "offset": [
        19401,
        19415
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7565": {
      "fn": "Governance.submitVerification",
      "offset": [
        19401,
        19415
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7567": {
      "fn": "Governance.submitVerification",
      "offset": [
        19401,
        19415
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7568": {
      "fn": "Governance.submitVerification",
      "offset": [
        19401,
        19415
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "7569": {
      "fn": "Governance.submitVerification",
      "offset": [
        19401,
        19415
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7570": {
      "fn": "Governance.submitVerification",
      "offset": [
        19394,
        19415
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1D9B"
    },
    "7573": {
      "fn": "Governance.submitVerification",
      "offset": [
        19401,
        19415
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7574": {
      "fn": "Governance.submitVerification",
      "offset": [
        19350,
        19351
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7575": {
      "fn": "Governance.submitVerification",
      "offset": [
        19394,
        19415
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x289E"
    },
    "7578": {
      "fn": "Governance.submitVerification",
      "jump": "i",
      "offset": [
        19394,
        19415
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7579": {
      "fn": "Governance.submitVerification",
      "offset": [
        19394,
        19415
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7580": {
      "op": "POP"
    },
    "7581": {
      "fn": "Governance.submitVerification",
      "offset": [
        19394,
        19415
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "7583": {
      "fn": "Governance.submitVerification",
      "offset": [
        19394,
        19415
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7584": {
      "fn": "Governance.submitVerification",
      "offset": [
        19394,
        19415
      ],
      "op": "ADD",
      "path": "2"
    },
    "7585": {
      "fn": "Governance.submitVerification",
      "offset": [
        19394,
        19415
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7586": {
      "fn": "Governance.submitVerification",
      "offset": [
        19394,
        19415
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7587": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "7593": {
      "op": "NOT"
    },
    "7594": {
      "fn": "Governance.submitVerification",
      "offset": [
        19394,
        19415
      ],
      "op": "AND",
      "path": "2"
    },
    "7595": {
      "fn": "Governance.submitVerification",
      "offset": [
        19394,
        19415
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7596": {
      "fn": "Governance.submitVerification",
      "offset": [
        19394,
        19415
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "7597": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7599": {
      "fn": "Governance.submitVerification",
      "offset": [
        19394,
        19415
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "7601": {
      "fn": "Governance.submitVerification",
      "offset": [
        19394,
        19415
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7602": {
      "fn": "Governance.submitVerification",
      "offset": [
        19394,
        19415
      ],
      "op": "ADD",
      "path": "2"
    },
    "7603": {
      "fn": "Governance.submitVerification",
      "offset": [
        19394,
        19415
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7604": {
      "fn": "Governance.submitVerification",
      "offset": [
        19394,
        19415
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7605": {
      "fn": "Governance.submitVerification",
      "offset": [
        19394,
        19415
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "7606": {
      "fn": "Governance.submitVerification",
      "offset": [
        19394,
        19415
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "7608": {
      "fn": "Governance.submitVerification",
      "offset": [
        19394,
        19415
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7609": {
      "fn": "Governance.submitVerification",
      "offset": [
        19394,
        19415
      ],
      "op": "ADD",
      "path": "2"
    },
    "7610": {
      "fn": "Governance.submitVerification",
      "offset": [
        19394,
        19415
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7611": {
      "fn": "Governance.submitVerification",
      "offset": [
        19394,
        19415
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7612": {
      "fn": "Governance.submitVerification",
      "offset": [
        19394,
        19415
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "7613": {
      "fn": "Governance.submitVerification",
      "offset": [
        19394,
        19415
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "7615": {
      "fn": "Governance.submitVerification",
      "offset": [
        19394,
        19415
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7616": {
      "fn": "Governance.submitVerification",
      "offset": [
        19394,
        19415
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7617": {
      "fn": "Governance.submitVerification",
      "offset": [
        19394,
        19415
      ],
      "op": "ADD",
      "path": "2"
    },
    "7618": {
      "fn": "Governance.submitVerification",
      "offset": [
        19394,
        19415
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7619": {
      "fn": "Governance.submitVerification",
      "offset": [
        19394,
        19415
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7620": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7622": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7624": {
      "op": "PUSH1",
      "value": "0xB8"
    },
    "7626": {
      "op": "SHL"
    },
    "7627": {
      "op": "SUB"
    },
    "7628": {
      "op": "NOT"
    },
    "7629": {
      "fn": "Governance.submitVerification",
      "offset": [
        19394,
        19415
      ],
      "op": "AND",
      "path": "2"
    },
    "7630": {
      "fn": "Governance.submitVerification",
      "offset": [
        19394,
        19415
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7631": {
      "fn": "Governance.submitVerification",
      "offset": [
        19394,
        19415
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "7632": {
      "fn": "Governance.submitVerification",
      "offset": [
        19501,
        19537
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7634": {
      "fn": "Governance.submitVerification",
      "offset": [
        19501,
        19537
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7635": {
      "op": "DUP2"
    },
    "7636": {
      "op": "SWAP1"
    },
    "7637": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7639": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7641": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7643": {
      "op": "SHL"
    },
    "7644": {
      "op": "SUB"
    },
    "7645": {
      "fn": "Governance.submitVerification",
      "offset": [
        19501,
        19519
      ],
      "op": "DUP5",
      "path": "2"
    },
    "7646": {
      "fn": "Governance.submitVerification",
      "offset": [
        19501,
        19519
      ],
      "op": "AND",
      "path": "2"
    },
    "7647": {
      "fn": "Governance.submitVerification",
      "offset": [
        19501,
        19519
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7648": {
      "fn": "Governance.submitVerification",
      "offset": [
        19527,
        19532
      ],
      "op": "DUP6",
      "path": "2"
    },
    "7649": {
      "fn": "Governance.submitVerification",
      "offset": [
        19527,
        19532
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7650": {
      "op": "DUP4"
    },
    "7651": {
      "fn": "Governance.submitVerification",
      "offset": [
        19501,
        19537
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7652": {
      "op": "DUP2"
    },
    "7653": {
      "fn": "Governance.submitVerification",
      "offset": [
        19501,
        19537
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7654": {
      "fn": "Governance.submitVerification",
      "offset": [
        19527,
        19532
      ],
      "op": "DUP6",
      "path": "2"
    },
    "7655": {
      "fn": "Governance.submitVerification",
      "offset": [
        19501,
        19519
      ],
      "op": "DUP8",
      "path": "2"
    },
    "7656": {
      "fn": "Governance.submitVerification",
      "offset": [
        19501,
        19537
      ],
      "op": "GAS",
      "path": "2"
    },
    "7657": {
      "fn": "Governance.submitVerification",
      "offset": [
        19501,
        19537
      ],
      "op": "CALL",
      "path": "2"
    },
    "7658": {
      "fn": "Governance.submitVerification",
      "offset": [
        19501,
        19537
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "7659": {
      "fn": "Governance.submitVerification",
      "offset": [
        19501,
        19537
      ],
      "op": "POP",
      "path": "2"
    },
    "7660": {
      "fn": "Governance.submitVerification",
      "offset": [
        19501,
        19537
      ],
      "op": "POP",
      "path": "2"
    },
    "7661": {
      "fn": "Governance.submitVerification",
      "offset": [
        19501,
        19537
      ],
      "op": "POP",
      "path": "2"
    },
    "7662": {
      "fn": "Governance.submitVerification",
      "offset": [
        19501,
        19537
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "7663": {
      "fn": "Governance.submitVerification",
      "offset": [
        19501,
        19537
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7664": {
      "fn": "Governance.submitVerification",
      "offset": [
        19501,
        19537
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7666": {
      "fn": "Governance.submitVerification",
      "offset": [
        19501,
        19537
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7667": {
      "fn": "Governance.submitVerification",
      "offset": [
        19501,
        19537
      ],
      "op": "EQ",
      "path": "2"
    },
    "7668": {
      "fn": "Governance.submitVerification",
      "offset": [
        19501,
        19537
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1E19"
    },
    "7671": {
      "fn": "Governance.submitVerification",
      "offset": [
        19501,
        19537
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7672": {
      "fn": "Governance.submitVerification",
      "offset": [
        19501,
        19537
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7674": {
      "fn": "Governance.submitVerification",
      "offset": [
        19501,
        19537
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7675": {
      "fn": "Governance.submitVerification",
      "offset": [
        19501,
        19537
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7676": {
      "fn": "Governance.submitVerification",
      "offset": [
        19501,
        19537
      ],
      "op": "POP",
      "path": "2"
    },
    "7677": {
      "fn": "Governance.submitVerification",
      "offset": [
        19501,
        19537
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "7679": {
      "fn": "Governance.submitVerification",
      "offset": [
        19501,
        19537
      ],
      "op": "NOT",
      "path": "2"
    },
    "7680": {
      "fn": "Governance.submitVerification",
      "offset": [
        19501,
        19537
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3F"
    },
    "7682": {
      "fn": "Governance.submitVerification",
      "offset": [
        19501,
        19537
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "7683": {
      "fn": "Governance.submitVerification",
      "offset": [
        19501,
        19537
      ],
      "op": "ADD",
      "path": "2"
    },
    "7684": {
      "fn": "Governance.submitVerification",
      "offset": [
        19501,
        19537
      ],
      "op": "AND",
      "path": "2"
    },
    "7685": {
      "fn": "Governance.submitVerification",
      "offset": [
        19501,
        19537
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7686": {
      "fn": "Governance.submitVerification",
      "offset": [
        19501,
        19537
      ],
      "op": "ADD",
      "path": "2"
    },
    "7687": {
      "fn": "Governance.submitVerification",
      "offset": [
        19501,
        19537
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7689": {
      "fn": "Governance.submitVerification",
      "offset": [
        19501,
        19537
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7690": {
      "fn": "Governance.submitVerification",
      "offset": [
        19501,
        19537
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "7691": {
      "fn": "Governance.submitVerification",
      "offset": [
        19501,
        19537
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7692": {
      "fn": "Governance.submitVerification",
      "offset": [
        19501,
        19537
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7693": {
      "fn": "Governance.submitVerification",
      "offset": [
        19501,
        19537
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "7694": {
      "fn": "Governance.submitVerification",
      "offset": [
        19501,
        19537
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7696": {
      "fn": "Governance.submitVerification",
      "offset": [
        19501,
        19537
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7698": {
      "fn": "Governance.submitVerification",
      "offset": [
        19501,
        19537
      ],
      "op": "DUP5",
      "path": "2"
    },
    "7699": {
      "fn": "Governance.submitVerification",
      "offset": [
        19501,
        19537
      ],
      "op": "ADD",
      "path": "2"
    },
    "7700": {
      "fn": "Governance.submitVerification",
      "offset": [
        19501,
        19537
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "7701": {
      "fn": "Governance.submitVerification",
      "offset": [
        19501,
        19537
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1E1E"
    },
    "7704": {
      "fn": "Governance.submitVerification",
      "offset": [
        19501,
        19537
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7705": {
      "fn": "Governance.submitVerification",
      "offset": [
        19501,
        19537
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7706": {
      "fn": "Governance.submitVerification",
      "offset": [
        19501,
        19537
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "7708": {
      "fn": "Governance.submitVerification",
      "offset": [
        19501,
        19537
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7709": {
      "fn": "Governance.submitVerification",
      "offset": [
        19501,
        19537
      ],
      "op": "POP",
      "path": "2"
    },
    "7710": {
      "fn": "Governance.submitVerification",
      "offset": [
        19501,
        19537
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7711": {
      "fn": "Governance.submitVerification",
      "offset": [
        19501,
        19537
      ],
      "op": "POP",
      "path": "2"
    },
    "7712": {
      "fn": "Governance.submitVerification",
      "offset": [
        19468,
        19537
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7713": {
      "fn": "Governance.submitVerification",
      "offset": [
        19468,
        19537
      ],
      "op": "POP",
      "path": "2"
    },
    "7714": {
      "fn": "Governance.submitVerification",
      "offset": [
        19468,
        19537
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7715": {
      "fn": "Governance.submitVerification",
      "offset": [
        19468,
        19537
      ],
      "op": "POP",
      "path": "2"
    },
    "7716": {
      "branch": 128,
      "fn": "Governance.submitVerification",
      "offset": [
        19559,
        19563
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 60
    },
    "7717": {
      "fn": "Governance.submitVerification",
      "offset": [
        19551,
        19588
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1E40"
    },
    "7720": {
      "branch": 128,
      "fn": "Governance.submitVerification",
      "offset": [
        19551,
        19588
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7721": {
      "fn": "Governance.submitVerification",
      "offset": [
        19551,
        19588
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7723": {
      "fn": "Governance.submitVerification",
      "offset": [
        19551,
        19588
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7724": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7728": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7730": {
      "op": "SHL"
    },
    "7731": {
      "fn": "Governance.submitVerification",
      "offset": [
        19551,
        19588
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7732": {
      "fn": "Governance.submitVerification",
      "offset": [
        19551,
        19588
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7733": {
      "fn": "Governance.submitVerification",
      "offset": [
        19551,
        19588
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "7735": {
      "fn": "Governance.submitVerification",
      "offset": [
        19551,
        19588
      ],
      "op": "ADD",
      "path": "2"
    },
    "7736": {
      "fn": "Governance.submitVerification",
      "offset": [
        19551,
        19588
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x807"
    },
    "7739": {
      "fn": "Governance.submitVerification",
      "offset": [
        19551,
        19588
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7740": {
      "fn": "Governance.submitVerification",
      "offset": [
        19551,
        19588
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x34C2"
    },
    "7743": {
      "fn": "Governance.submitVerification",
      "jump": "i",
      "offset": [
        19551,
        19588
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7744": {
      "fn": "Governance.submitVerification",
      "offset": [
        19551,
        19588
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7745": {
      "fn": "Governance.submitVerification",
      "offset": [
        19650,
        19683
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 61,
      "value": "0x40"
    },
    "7747": {
      "fn": "Governance.submitVerification",
      "offset": [
        19650,
        19683
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7748": {
      "fn": "Governance.submitVerification",
      "offset": [
        19650,
        19660
      ],
      "op": "CALLER",
      "path": "2"
    },
    "7749": {
      "fn": "Governance.submitVerification",
      "offset": [
        19650,
        19660
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7750": {
      "fn": "Governance.submitVerification",
      "offset": [
        19673,
        19678
      ],
      "op": "DUP6",
      "path": "2"
    },
    "7751": {
      "fn": "Governance.submitVerification",
      "offset": [
        19673,
        19678
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7752": {
      "fn": "Governance.submitVerification",
      "offset": [
        19650,
        19683
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7754": {
      "fn": "Governance.submitVerification",
      "offset": [
        19650,
        19683
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7755": {
      "fn": "Governance.submitVerification",
      "offset": [
        19650,
        19683
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7756": {
      "fn": "Governance.submitVerification",
      "offset": [
        19650,
        19683
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7757": {
      "fn": "Governance.submitVerification",
      "offset": [
        19673,
        19678
      ],
      "op": "DUP6",
      "path": "2"
    },
    "7758": {
      "fn": "Governance.submitVerification",
      "offset": [
        19650,
        19660
      ],
      "op": "DUP8",
      "path": "2"
    },
    "7759": {
      "fn": "Governance.submitVerification",
      "offset": [
        19650,
        19683
      ],
      "op": "GAS",
      "path": "2"
    },
    "7760": {
      "fn": "Governance.submitVerification",
      "offset": [
        19650,
        19683
      ],
      "op": "CALL",
      "path": "2"
    },
    "7761": {
      "fn": "Governance.submitVerification",
      "offset": [
        19650,
        19683
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "7762": {
      "fn": "Governance.submitVerification",
      "offset": [
        19650,
        19683
      ],
      "op": "POP",
      "path": "2"
    },
    "7763": {
      "fn": "Governance.submitVerification",
      "offset": [
        19650,
        19683
      ],
      "op": "POP",
      "path": "2"
    },
    "7764": {
      "fn": "Governance.submitVerification",
      "offset": [
        19650,
        19683
      ],
      "op": "POP",
      "path": "2"
    },
    "7765": {
      "fn": "Governance.submitVerification",
      "offset": [
        19650,
        19683
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "7766": {
      "fn": "Governance.submitVerification",
      "offset": [
        19650,
        19683
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7767": {
      "fn": "Governance.submitVerification",
      "offset": [
        19650,
        19683
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7769": {
      "fn": "Governance.submitVerification",
      "offset": [
        19650,
        19683
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7770": {
      "fn": "Governance.submitVerification",
      "offset": [
        19650,
        19683
      ],
      "op": "EQ",
      "path": "2"
    },
    "7771": {
      "fn": "Governance.submitVerification",
      "offset": [
        19650,
        19683
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1E80"
    },
    "7774": {
      "fn": "Governance.submitVerification",
      "offset": [
        19650,
        19683
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7775": {
      "fn": "Governance.submitVerification",
      "offset": [
        19650,
        19683
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7777": {
      "fn": "Governance.submitVerification",
      "offset": [
        19650,
        19683
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7778": {
      "fn": "Governance.submitVerification",
      "offset": [
        19650,
        19683
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7779": {
      "fn": "Governance.submitVerification",
      "offset": [
        19650,
        19683
      ],
      "op": "POP",
      "path": "2"
    },
    "7780": {
      "fn": "Governance.submitVerification",
      "offset": [
        19650,
        19683
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "7782": {
      "fn": "Governance.submitVerification",
      "offset": [
        19650,
        19683
      ],
      "op": "NOT",
      "path": "2"
    },
    "7783": {
      "fn": "Governance.submitVerification",
      "offset": [
        19650,
        19683
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3F"
    },
    "7785": {
      "fn": "Governance.submitVerification",
      "offset": [
        19650,
        19683
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "7786": {
      "fn": "Governance.submitVerification",
      "offset": [
        19650,
        19683
      ],
      "op": "ADD",
      "path": "2"
    },
    "7787": {
      "fn": "Governance.submitVerification",
      "offset": [
        19650,
        19683
      ],
      "op": "AND",
      "path": "2"
    },
    "7788": {
      "fn": "Governance.submitVerification",
      "offset": [
        19650,
        19683
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7789": {
      "fn": "Governance.submitVerification",
      "offset": [
        19650,
        19683
      ],
      "op": "ADD",
      "path": "2"
    },
    "7790": {
      "fn": "Governance.submitVerification",
      "offset": [
        19650,
        19683
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7792": {
      "fn": "Governance.submitVerification",
      "offset": [
        19650,
        19683
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7793": {
      "fn": "Governance.submitVerification",
      "offset": [
        19650,
        19683
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "7794": {
      "fn": "Governance.submitVerification",
      "offset": [
        19650,
        19683
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7795": {
      "fn": "Governance.submitVerification",
      "offset": [
        19650,
        19683
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7796": {
      "fn": "Governance.submitVerification",
      "offset": [
        19650,
        19683
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "7797": {
      "fn": "Governance.submitVerification",
      "offset": [
        19650,
        19683
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7799": {
      "fn": "Governance.submitVerification",
      "offset": [
        19650,
        19683
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7801": {
      "fn": "Governance.submitVerification",
      "offset": [
        19650,
        19683
      ],
      "op": "DUP5",
      "path": "2"
    },
    "7802": {
      "fn": "Governance.submitVerification",
      "offset": [
        19650,
        19683
      ],
      "op": "ADD",
      "path": "2"
    },
    "7803": {
      "fn": "Governance.submitVerification",
      "offset": [
        19650,
        19683
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "7804": {
      "fn": "Governance.submitVerification",
      "offset": [
        19650,
        19683
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1E85"
    },
    "7807": {
      "fn": "Governance.submitVerification",
      "offset": [
        19650,
        19683
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7808": {
      "fn": "Governance.submitVerification",
      "offset": [
        19650,
        19683
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7809": {
      "fn": "Governance.submitVerification",
      "offset": [
        19650,
        19683
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "7811": {
      "fn": "Governance.submitVerification",
      "offset": [
        19650,
        19683
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7812": {
      "fn": "Governance.submitVerification",
      "offset": [
        19650,
        19683
      ],
      "op": "POP",
      "path": "2"
    },
    "7813": {
      "fn": "Governance.submitVerification",
      "offset": [
        19650,
        19683
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7814": {
      "op": "POP"
    },
    "7815": {
      "fn": "Governance.submitVerification",
      "offset": [
        19635,
        19683
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7816": {
      "fn": "Governance.submitVerification",
      "offset": [
        19635,
        19683
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "7817": {
      "op": "POP"
    },
    "7818": {
      "fn": "Governance.submitVerification",
      "offset": [
        19635,
        19683
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7819": {
      "op": "POP"
    },
    "7820": {
      "fn": "Governance.submitVerification",
      "offset": [
        19635,
        19683
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7821": {
      "fn": "Governance.submitVerification",
      "offset": [
        19697,
        19734
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 62,
      "value": "0x1EA8"
    },
    "7824": {
      "fn": "Governance.submitVerification",
      "offset": [
        19697,
        19734
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7825": {
      "fn": "Governance.submitVerification",
      "offset": [
        19697,
        19734
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7827": {
      "fn": "Governance.submitVerification",
      "offset": [
        19697,
        19734
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7828": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7832": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7834": {
      "op": "SHL"
    },
    "7835": {
      "fn": "Governance.submitVerification",
      "offset": [
        19697,
        19734
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7836": {
      "fn": "Governance.submitVerification",
      "offset": [
        19697,
        19734
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7837": {
      "fn": "Governance.submitVerification",
      "offset": [
        19697,
        19734
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "7839": {
      "fn": "Governance.submitVerification",
      "offset": [
        19697,
        19734
      ],
      "op": "ADD",
      "path": "2"
    },
    "7840": {
      "fn": "Governance.submitVerification",
      "offset": [
        19697,
        19734
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x807"
    },
    "7843": {
      "fn": "Governance.submitVerification",
      "offset": [
        19697,
        19734
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7844": {
      "fn": "Governance.submitVerification",
      "offset": [
        19697,
        19734
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x34C2"
    },
    "7847": {
      "fn": "Governance.submitVerification",
      "jump": "i",
      "offset": [
        19697,
        19734
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7848": {
      "fn": "Governance.submitVerification",
      "offset": [
        19697,
        19734
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7849": {
      "fn": "Governance.submitVerification",
      "offset": [
        18915,
        19746
      ],
      "op": "POP",
      "path": "2"
    },
    "7850": {
      "fn": "Governance.submitVerification",
      "offset": [
        18915,
        19746
      ],
      "op": "POP",
      "path": "2"
    },
    "7851": {
      "fn": "Governance.submitVerification",
      "offset": [
        18915,
        19746
      ],
      "op": "POP",
      "path": "2"
    },
    "7852": {
      "fn": "Governance.submitVerification",
      "offset": [
        18915,
        19746
      ],
      "op": "POP",
      "path": "2"
    },
    "7853": {
      "fn": "Governance.submitVerification",
      "offset": [
        18895,
        21161
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x821"
    },
    "7856": {
      "fn": "Governance.submitVerification",
      "offset": [
        18895,
        21161
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7857": {
      "fn": "Governance.submitVerification",
      "offset": [
        18895,
        21161
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7858": {
      "fn": "Governance.submitVerification",
      "offset": [
        19928,
        19934
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7859": {
      "fn": "Governance.submitVerification",
      "offset": [
        19908,
        19914
      ],
      "op": "DUP5",
      "path": "2"
    },
    "7860": {
      "fn": "Governance.submitVerification",
      "offset": [
        19908,
        19926
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "7862": {
      "fn": "Governance.submitVerification",
      "offset": [
        19908,
        19926
      ],
      "op": "ADD",
      "path": "2"
    },
    "7863": {
      "fn": "Governance.submitVerification",
      "offset": [
        19908,
        19926
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7864": {
      "branch": 129,
      "fn": "Governance.submitVerification",
      "offset": [
        19908,
        19934
      ],
      "op": "SUB",
      "path": "2"
    },
    "7865": {
      "fn": "Governance.submitVerification",
      "offset": [
        19905,
        21151
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2028"
    },
    "7868": {
      "branch": 129,
      "fn": "Governance.submitVerification",
      "offset": [
        19905,
        21151
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7869": {
      "fn": "Governance.submitVerification",
      "offset": [
        19969,
        19983
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "7871": {
      "fn": "Governance.submitVerification",
      "offset": [
        19969,
        19983
      ],
      "op": "DUP5",
      "path": "2"
    },
    "7872": {
      "fn": "Governance.submitVerification",
      "offset": [
        19969,
        19983
      ],
      "op": "ADD",
      "path": "2"
    },
    "7873": {
      "fn": "Governance.submitVerification",
      "offset": [
        19969,
        19983
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7874": {
      "fn": "Governance.submitVerification",
      "offset": [
        19953,
        19966
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7876": {
      "fn": "Governance.submitVerification",
      "offset": [
        19953,
        19966
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7877": {
      "fn": "Governance.submitVerification",
      "offset": [
        19969,
        19985
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1EE0"
    },
    "7880": {
      "fn": "Governance.submitVerification",
      "offset": [
        19969,
        19985
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7881": {
      "fn": "Governance.submitVerification",
      "offset": [
        19984,
        19985
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "7883": {
      "fn": "Governance.submitVerification",
      "offset": [
        19984,
        19985
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7884": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7886": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7888": {
      "op": "SHL"
    },
    "7889": {
      "fn": "Governance.submitVerification",
      "offset": [
        19969,
        19983
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7890": {
      "fn": "Governance.submitVerification",
      "offset": [
        19969,
        19983
      ],
      "op": "DIV",
      "path": "2"
    },
    "7891": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7893": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7895": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "7897": {
      "op": "SHL"
    },
    "7898": {
      "op": "SUB"
    },
    "7899": {
      "fn": "Governance.submitVerification",
      "offset": [
        19969,
        19983
      ],
      "op": "AND",
      "path": "2"
    },
    "7900": {
      "fn": "Governance.submitVerification",
      "offset": [
        19969,
        19985
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x348E"
    },
    "7903": {
      "fn": "Governance.submitVerification",
      "jump": "i",
      "offset": [
        19969,
        19985
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7904": {
      "fn": "Governance.submitVerification",
      "offset": [
        19969,
        19985
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7905": {
      "fn": "Governance.submitVerification",
      "offset": [
        20041,
        20051
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "7907": {
      "fn": "Governance.submitVerification",
      "offset": [
        20041,
        20051
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7908": {
      "fn": "Governance.submitVerification",
      "offset": [
        20060,
        20076
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "7910": {
      "fn": "Governance.submitVerification",
      "offset": [
        20060,
        20076
      ],
      "op": "DUP8",
      "path": "2"
    },
    "7911": {
      "fn": "Governance.submitVerification",
      "offset": [
        20060,
        20076
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7912": {
      "fn": "Governance.submitVerification",
      "offset": [
        20060,
        20076
      ],
      "op": "ADD",
      "path": "2"
    },
    "7913": {
      "fn": "Governance.submitVerification",
      "offset": [
        20060,
        20076
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7914": {
      "fn": "Governance.submitVerification",
      "offset": [
        20041,
        20077
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7916": {
      "fn": "Governance.submitVerification",
      "offset": [
        20041,
        20077
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7917": {
      "op": "PUSH4",
      "value": "0x31A9108F"
    },
    "7922": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "7924": {
      "op": "SHL"
    },
    "7925": {
      "fn": "Governance.submitVerification",
      "offset": [
        20041,
        20077
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7926": {
      "fn": "Governance.submitVerification",
      "offset": [
        20041,
        20077
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7927": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7929": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7931": {
      "op": "SHL"
    },
    "7932": {
      "fn": "Governance.submitVerification",
      "offset": [
        20060,
        20076
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7933": {
      "fn": "Governance.submitVerification",
      "offset": [
        20060,
        20076
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7934": {
      "fn": "Governance.submitVerification",
      "offset": [
        20060,
        20076
      ],
      "op": "DIV",
      "path": "2"
    },
    "7935": {
      "fn": "Governance.submitVerification",
      "offset": [
        20060,
        20076
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "7938": {
      "fn": "Governance.submitVerification",
      "offset": [
        20060,
        20076
      ],
      "op": "AND",
      "path": "2"
    },
    "7939": {
      "fn": "Governance.submitVerification",
      "offset": [
        20041,
        20077
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7940": {
      "fn": "Governance.submitVerification",
      "offset": [
        20041,
        20077
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7941": {
      "fn": "Governance.submitVerification",
      "offset": [
        20041,
        20077
      ],
      "op": "ADD",
      "path": "2"
    },
    "7942": {
      "op": "SWAP2"
    },
    "7943": {
      "op": "SWAP1"
    },
    "7944": {
      "op": "SWAP2"
    },
    "7945": {
      "op": "MSTORE"
    },
    "7946": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7948": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7950": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "7952": {
      "op": "SHL"
    },
    "7953": {
      "op": "SUB"
    },
    "7954": {
      "fn": "Governance.submitVerification",
      "offset": [
        19953,
        19985
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "7955": {
      "fn": "Governance.submitVerification",
      "offset": [
        19953,
        19985
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7956": {
      "fn": "Governance.submitVerification",
      "offset": [
        19953,
        19985
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "7957": {
      "fn": "Governance.submitVerification",
      "offset": [
        19953,
        19985
      ],
      "op": "AND",
      "path": "2"
    },
    "7958": {
      "fn": "Governance.submitVerification",
      "offset": [
        19953,
        19985
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "7959": {
      "op": "POP"
    },
    "7960": {
      "fn": "Governance.submitVerification",
      "offset": [
        20003,
        20030
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7962": {
      "fn": "Governance.submitVerification",
      "offset": [
        20003,
        20030
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7963": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7965": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7967": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7969": {
      "op": "SHL"
    },
    "7970": {
      "op": "SUB"
    },
    "7971": {
      "fn": "Governance.submitVerification",
      "offset": [
        20041,
        20051
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7972": {
      "fn": "Governance.submitVerification",
      "offset": [
        20041,
        20051
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7973": {
      "fn": "Governance.submitVerification",
      "offset": [
        20041,
        20051
      ],
      "op": "AND",
      "path": "2"
    },
    "7974": {
      "fn": "Governance.submitVerification",
      "offset": [
        20041,
        20051
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7975": {
      "fn": "Governance.submitVerification",
      "offset": [
        20041,
        20059
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x6352211E"
    },
    "7980": {
      "fn": "Governance.submitVerification",
      "offset": [
        20041,
        20059
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7981": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7983": {
      "op": "ADD"
    },
    "7984": {
      "fn": "Governance.submitVerification",
      "offset": [
        20041,
        20077
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7986": {
      "fn": "Governance.submitVerification",
      "offset": [
        20041,
        20077
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7988": {
      "fn": "Governance.submitVerification",
      "offset": [
        20041,
        20077
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7989": {
      "fn": "Governance.submitVerification",
      "offset": [
        20041,
        20077
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7990": {
      "fn": "Governance.submitVerification",
      "offset": [
        20041,
        20077
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7991": {
      "fn": "Governance.submitVerification",
      "offset": [
        20041,
        20077
      ],
      "op": "SUB",
      "path": "2"
    },
    "7992": {
      "fn": "Governance.submitVerification",
      "offset": [
        20041,
        20077
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7993": {
      "fn": "Governance.submitVerification",
      "offset": [
        20041,
        20077
      ],
      "op": "DUP7",
      "path": "2"
    },
    "7994": {
      "fn": "Governance.submitVerification",
      "offset": [
        20041,
        20077
      ],
      "op": "GAS",
      "path": "2"
    },
    "7995": {
      "fn": "Governance.submitVerification",
      "offset": [
        20041,
        20077
      ],
      "op": "STATICCALL",
      "path": "2"
    },
    "7996": {
      "fn": "Governance.submitVerification",
      "offset": [
        20041,
        20077
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "7997": {
      "fn": "Governance.submitVerification",
      "offset": [
        20041,
        20077
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7998": {
      "fn": "Governance.submitVerification",
      "offset": [
        20041,
        20077
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "7999": {
      "fn": "Governance.submitVerification",
      "offset": [
        20041,
        20077
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1F4C"
    },
    "8002": {
      "fn": "Governance.submitVerification",
      "offset": [
        20041,
        20077
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "8003": {
      "fn": "Governance.submitVerification",
      "offset": [
        20041,
        20077
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "8004": {
      "fn": "Governance.submitVerification",
      "offset": [
        20041,
        20077
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8006": {
      "fn": "Governance.submitVerification",
      "offset": [
        20041,
        20077
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8007": {
      "fn": "Governance.submitVerification",
      "offset": [
        20041,
        20077
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "8008": {
      "fn": "Governance.submitVerification",
      "offset": [
        20041,
        20077
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "8009": {
      "fn": "Governance.submitVerification",
      "offset": [
        20041,
        20077
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8011": {
      "fn": "Governance.submitVerification",
      "offset": [
        20041,
        20077
      ],
      "op": "REVERT",
      "path": "2"
    },
    "8012": {
      "fn": "Governance.submitVerification",
      "offset": [
        20041,
        20077
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8013": {
      "fn": "Governance.submitVerification",
      "offset": [
        20041,
        20077
      ],
      "op": "POP",
      "path": "2"
    },
    "8014": {
      "fn": "Governance.submitVerification",
      "offset": [
        20041,
        20077
      ],
      "op": "POP",
      "path": "2"
    },
    "8015": {
      "fn": "Governance.submitVerification",
      "offset": [
        20041,
        20077
      ],
      "op": "POP",
      "path": "2"
    },
    "8016": {
      "fn": "Governance.submitVerification",
      "offset": [
        20041,
        20077
      ],
      "op": "POP",
      "path": "2"
    },
    "8017": {
      "fn": "Governance.submitVerification",
      "offset": [
        20041,
        20077
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8019": {
      "fn": "Governance.submitVerification",
      "offset": [
        20041,
        20077
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8020": {
      "fn": "Governance.submitVerification",
      "offset": [
        20041,
        20077
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "8021": {
      "fn": "Governance.submitVerification",
      "offset": [
        20041,
        20077
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "8023": {
      "fn": "Governance.submitVerification",
      "offset": [
        20041,
        20077
      ],
      "op": "NOT",
      "path": "2"
    },
    "8024": {
      "fn": "Governance.submitVerification",
      "offset": [
        20041,
        20077
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "8026": {
      "fn": "Governance.submitVerification",
      "offset": [
        20041,
        20077
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8027": {
      "fn": "Governance.submitVerification",
      "offset": [
        20041,
        20077
      ],
      "op": "ADD",
      "path": "2"
    },
    "8028": {
      "fn": "Governance.submitVerification",
      "offset": [
        20041,
        20077
      ],
      "op": "AND",
      "path": "2"
    },
    "8029": {
      "fn": "Governance.submitVerification",
      "offset": [
        20041,
        20077
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8030": {
      "fn": "Governance.submitVerification",
      "offset": [
        20041,
        20077
      ],
      "op": "ADD",
      "path": "2"
    },
    "8031": {
      "fn": "Governance.submitVerification",
      "offset": [
        20041,
        20077
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8032": {
      "fn": "Governance.submitVerification",
      "offset": [
        20041,
        20077
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8034": {
      "fn": "Governance.submitVerification",
      "offset": [
        20041,
        20077
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8035": {
      "fn": "Governance.submitVerification",
      "offset": [
        20041,
        20077
      ],
      "op": "POP",
      "path": "2"
    },
    "8036": {
      "fn": "Governance.submitVerification",
      "offset": [
        20041,
        20077
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8037": {
      "fn": "Governance.submitVerification",
      "offset": [
        20041,
        20077
      ],
      "op": "ADD",
      "path": "2"
    },
    "8038": {
      "fn": "Governance.submitVerification",
      "offset": [
        20041,
        20077
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8039": {
      "fn": "Governance.submitVerification",
      "offset": [
        20041,
        20077
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1F70"
    },
    "8042": {
      "fn": "Governance.submitVerification",
      "offset": [
        20041,
        20077
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8043": {
      "fn": "Governance.submitVerification",
      "offset": [
        20041,
        20077
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8044": {
      "fn": "Governance.submitVerification",
      "offset": [
        20041,
        20077
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x33B1"
    },
    "8047": {
      "fn": "Governance.submitVerification",
      "jump": "i",
      "offset": [
        20041,
        20077
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8048": {
      "fn": "Governance.submitVerification",
      "offset": [
        20041,
        20077
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8049": {
      "fn": "Governance.submitVerification",
      "offset": [
        20097,
        20107
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 63,
      "value": "0x2"
    },
    "8051": {
      "fn": "Governance.submitVerification",
      "offset": [
        20097,
        20107
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8052": {
      "fn": "Governance.submitVerification",
      "offset": [
        20119,
        20135
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "8054": {
      "fn": "Governance.submitVerification",
      "offset": [
        20119,
        20135
      ],
      "op": "DUP9",
      "path": "2"
    },
    "8055": {
      "fn": "Governance.submitVerification",
      "offset": [
        20119,
        20135
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8056": {
      "fn": "Governance.submitVerification",
      "offset": [
        20119,
        20135
      ],
      "op": "ADD",
      "path": "2"
    },
    "8057": {
      "fn": "Governance.submitVerification",
      "offset": [
        20119,
        20135
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8058": {
      "fn": "Governance.submitVerification",
      "offset": [
        20137,
        20162
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xC"
    },
    "8060": {
      "fn": "Governance.submitVerification",
      "offset": [
        20137,
        20162
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8061": {
      "fn": "Governance.submitVerification",
      "offset": [
        20097,
        20163
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8063": {
      "fn": "Governance.submitVerification",
      "offset": [
        20097,
        20163
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8064": {
      "op": "PUSH4",
      "value": "0x8AD4D6A5"
    },
    "8069": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8071": {
      "op": "SHL"
    },
    "8072": {
      "fn": "Governance.submitVerification",
      "offset": [
        20097,
        20163
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8073": {
      "fn": "Governance.submitVerification",
      "offset": [
        20097,
        20163
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8074": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8076": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "8078": {
      "op": "SHL"
    },
    "8079": {
      "fn": "Governance.submitVerification",
      "offset": [
        20119,
        20135
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8080": {
      "fn": "Governance.submitVerification",
      "offset": [
        20119,
        20135
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "8081": {
      "fn": "Governance.submitVerification",
      "offset": [
        20119,
        20135
      ],
      "op": "DIV",
      "path": "2"
    },
    "8082": {
      "fn": "Governance.submitVerification",
      "offset": [
        20119,
        20135
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "8085": {
      "fn": "Governance.submitVerification",
      "offset": [
        20119,
        20135
      ],
      "op": "AND",
      "path": "2"
    },
    "8086": {
      "fn": "Governance.submitVerification",
      "offset": [
        20097,
        20163
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "8087": {
      "fn": "Governance.submitVerification",
      "offset": [
        20097,
        20163
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8088": {
      "fn": "Governance.submitVerification",
      "offset": [
        20097,
        20163
      ],
      "op": "ADD",
      "path": "2"
    },
    "8089": {
      "op": "SWAP3"
    },
    "8090": {
      "op": "SWAP1"
    },
    "8091": {
      "op": "SWAP3"
    },
    "8092": {
      "op": "MSTORE"
    },
    "8093": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8095": {
      "op": "DUP2"
    },
    "8096": {
      "op": "ADD"
    },
    "8097": {
      "op": "SWAP2"
    },
    "8098": {
      "op": "SWAP1"
    },
    "8099": {
      "op": "SWAP2"
    },
    "8100": {
      "op": "MSTORE"
    },
    "8101": {
      "fn": "Governance.submitVerification",
      "offset": [
        20003,
        20078
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8102": {
      "fn": "Governance.submitVerification",
      "offset": [
        20003,
        20078
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "8103": {
      "op": "POP"
    },
    "8104": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8106": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8108": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8110": {
      "op": "SHL"
    },
    "8111": {
      "op": "SUB"
    },
    "8112": {
      "fn": "Governance.submitVerification",
      "offset": [
        20097,
        20107
      ],
      "op": "AND",
      "path": "2"
    },
    "8113": {
      "fn": "Governance.submitVerification",
      "offset": [
        20097,
        20107
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8114": {
      "fn": "Governance.submitVerification",
      "offset": [
        20097,
        20118
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x8AD4D6A5"
    },
    "8119": {
      "fn": "Governance.submitVerification",
      "offset": [
        20097,
        20118
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8120": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8122": {
      "op": "ADD"
    },
    "8123": {
      "fn": "Governance.submitVerification",
      "offset": [
        20097,
        20163
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8125": {
      "fn": "Governance.submitVerification",
      "offset": [
        20097,
        20163
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8127": {
      "fn": "Governance.submitVerification",
      "offset": [
        20097,
        20163
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8128": {
      "fn": "Governance.submitVerification",
      "offset": [
        20097,
        20163
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8129": {
      "fn": "Governance.submitVerification",
      "offset": [
        20097,
        20163
      ],
      "op": "DUP4",
      "path": "2"
    },
    "8130": {
      "fn": "Governance.submitVerification",
      "offset": [
        20097,
        20163
      ],
      "op": "SUB",
      "path": "2"
    },
    "8131": {
      "fn": "Governance.submitVerification",
      "offset": [
        20097,
        20163
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8132": {
      "fn": "Governance.submitVerification",
      "offset": [
        20097,
        20163
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8134": {
      "fn": "Governance.submitVerification",
      "offset": [
        20097,
        20163
      ],
      "op": "DUP8",
      "path": "2"
    },
    "8135": {
      "fn": "Governance.submitVerification",
      "offset": [
        20097,
        20163
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8136": {
      "fn": "Governance.submitVerification",
      "offset": [
        20097,
        20163
      ],
      "op": "EXTCODESIZE",
      "path": "2"
    },
    "8137": {
      "fn": "Governance.submitVerification",
      "offset": [
        20097,
        20163
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "8138": {
      "fn": "Governance.submitVerification",
      "offset": [
        20097,
        20163
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8139": {
      "fn": "Governance.submitVerification",
      "offset": [
        20097,
        20163
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "8140": {
      "fn": "Governance.submitVerification",
      "offset": [
        20097,
        20163
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1FD4"
    },
    "8143": {
      "fn": "Governance.submitVerification",
      "offset": [
        20097,
        20163
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "8144": {
      "fn": "Governance.submitVerification",
      "offset": [
        20097,
        20163
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8146": {
      "fn": "Governance.submitVerification",
      "offset": [
        20097,
        20163
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8147": {
      "fn": "Governance.submitVerification",
      "offset": [
        20097,
        20163
      ],
      "op": "REVERT",
      "path": "2"
    },
    "8148": {
      "fn": "Governance.submitVerification",
      "offset": [
        20097,
        20163
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8149": {
      "fn": "Governance.submitVerification",
      "offset": [
        20097,
        20163
      ],
      "op": "POP",
      "path": "2"
    },
    "8150": {
      "fn": "Governance.submitVerification",
      "offset": [
        20097,
        20163
      ],
      "op": "GAS",
      "path": "2"
    },
    "8151": {
      "fn": "Governance.submitVerification",
      "offset": [
        20097,
        20163
      ],
      "op": "CALL",
      "path": "2"
    },
    "8152": {
      "fn": "Governance.submitVerification",
      "offset": [
        20097,
        20163
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "8153": {
      "fn": "Governance.submitVerification",
      "offset": [
        20097,
        20163
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8154": {
      "fn": "Governance.submitVerification",
      "offset": [
        20097,
        20163
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "8155": {
      "fn": "Governance.submitVerification",
      "offset": [
        20097,
        20163
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1FE8"
    },
    "8158": {
      "fn": "Governance.submitVerification",
      "offset": [
        20097,
        20163
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "8159": {
      "fn": "Governance.submitVerification",
      "offset": [
        20097,
        20163
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "8160": {
      "fn": "Governance.submitVerification",
      "offset": [
        20097,
        20163
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8162": {
      "fn": "Governance.submitVerification",
      "offset": [
        20097,
        20163
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8163": {
      "fn": "Governance.submitVerification",
      "offset": [
        20097,
        20163
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "8164": {
      "fn": "Governance.submitVerification",
      "offset": [
        20097,
        20163
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "8165": {
      "fn": "Governance.submitVerification",
      "offset": [
        20097,
        20163
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8167": {
      "fn": "Governance.submitVerification",
      "offset": [
        20097,
        20163
      ],
      "op": "REVERT",
      "path": "2"
    },
    "8168": {
      "fn": "Governance.submitVerification",
      "offset": [
        20097,
        20163
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8169": {
      "op": "POP"
    },
    "8170": {
      "op": "POP"
    },
    "8171": {
      "fn": "Governance.submitVerification",
      "offset": [
        20181,
        20191
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 64,
      "value": "0x2"
    },
    "8173": {
      "fn": "Governance.submitVerification",
      "offset": [
        20181,
        20191
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8174": {
      "fn": "Governance.submitVerification",
      "offset": [
        20211,
        20236
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xC"
    },
    "8176": {
      "fn": "Governance.submitVerification",
      "offset": [
        20211,
        20236
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8177": {
      "fn": "Governance.submitVerification",
      "offset": [
        20181,
        20237
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8179": {
      "fn": "Governance.submitVerification",
      "offset": [
        20181,
        20237
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8180": {
      "op": "PUSH4",
      "value": "0x8AD4D6A5"
    },
    "8185": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8187": {
      "op": "SHL"
    },
    "8188": {
      "fn": "Governance.submitVerification",
      "offset": [
        20181,
        20237
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8189": {
      "fn": "Governance.submitVerification",
      "offset": [
        20181,
        20237
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8190": {
      "fn": "Governance.submitVerification",
      "offset": [
        20181,
        20237
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "8192": {
      "fn": "Governance.submitVerification",
      "offset": [
        20181,
        20237
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8193": {
      "fn": "Governance.submitVerification",
      "offset": [
        20181,
        20237
      ],
      "op": "ADD",
      "path": "2"
    },
    "8194": {
      "op": "DUP15"
    },
    "8195": {
      "op": "SWAP1"
    },
    "8196": {
      "op": "MSTORE"
    },
    "8197": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8199": {
      "op": "DUP2"
    },
    "8200": {
      "op": "ADD"
    },
    "8201": {
      "op": "SWAP2"
    },
    "8202": {
      "op": "SWAP1"
    },
    "8203": {
      "op": "SWAP2"
    },
    "8204": {
      "op": "MSTORE"
    },
    "8205": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8207": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8209": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8211": {
      "op": "SHL"
    },
    "8212": {
      "op": "SUB"
    },
    "8213": {
      "fn": "Governance.submitVerification",
      "offset": [
        20181,
        20191
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8214": {
      "fn": "Governance.submitVerification",
      "offset": [
        20181,
        20191
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8215": {
      "fn": "Governance.submitVerification",
      "offset": [
        20181,
        20191
      ],
      "op": "AND",
      "path": "2"
    },
    "8216": {
      "fn": "Governance.submitVerification",
      "offset": [
        20181,
        20191
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "8217": {
      "op": "POP"
    },
    "8218": {
      "fn": "Governance.submitVerification",
      "offset": [
        20181,
        20202
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x8AD4D6A5"
    },
    "8223": {
      "fn": "Governance.submitVerification",
      "offset": [
        20181,
        20202
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8224": {
      "op": "POP"
    },
    "8225": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8227": {
      "op": "ADD"
    },
    "8228": {
      "fn": "Governance.submitVerification",
      "offset": [
        20181,
        20237
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1D37"
    },
    "8231": {
      "op": "JUMP"
    },
    "8232": {
      "fn": "Governance.submitVerification",
      "offset": [
        19905,
        21151
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8233": {
      "fn": "Governance.submitVerification",
      "offset": [
        20866,
        20880
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "8235": {
      "fn": "Governance.submitVerification",
      "offset": [
        20866,
        20880
      ],
      "op": "DUP5",
      "path": "2"
    },
    "8236": {
      "fn": "Governance.submitVerification",
      "offset": [
        20866,
        20880
      ],
      "op": "ADD",
      "path": "2"
    },
    "8237": {
      "fn": "Governance.submitVerification",
      "offset": [
        20866,
        20880
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8238": {
      "fn": "Governance.submitVerification",
      "offset": [
        20850,
        20863
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8240": {
      "fn": "Governance.submitVerification",
      "offset": [
        20905,
        20919
      ],
      "op": "DUP8",
      "path": "2",
      "statement": 65
    },
    "8241": {
      "fn": "Governance.submitVerification",
      "offset": [
        20905,
        20919
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8242": {
      "fn": "Governance.submitVerification",
      "offset": [
        20905,
        20919
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8243": {
      "fn": "Governance.submitVerification",
      "offset": [
        20905,
        20910
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x9"
    },
    "8245": {
      "fn": "Governance.submitVerification",
      "offset": [
        20905,
        20919
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8247": {
      "fn": "Governance.submitVerification",
      "offset": [
        20905,
        20919
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8248": {
      "fn": "Governance.submitVerification",
      "offset": [
        20905,
        20919
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8250": {
      "fn": "Governance.submitVerification",
      "offset": [
        20905,
        20919
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8251": {
      "fn": "Governance.submitVerification",
      "offset": [
        20905,
        20919
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "8252": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8254": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8256": {
      "op": "SHL"
    },
    "8257": {
      "fn": "Governance.submitVerification",
      "offset": [
        20866,
        20880
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8258": {
      "fn": "Governance.submitVerification",
      "offset": [
        20866,
        20880
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "8259": {
      "fn": "Governance.submitVerification",
      "offset": [
        20866,
        20880
      ],
      "op": "DIV",
      "path": "2"
    },
    "8260": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8262": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8264": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "8266": {
      "op": "SHL"
    },
    "8267": {
      "op": "SUB"
    },
    "8268": {
      "fn": "Governance.submitVerification",
      "offset": [
        20866,
        20880
      ],
      "op": "AND",
      "path": "2"
    },
    "8269": {
      "fn": "Governance.submitVerification",
      "offset": [
        20866,
        20880
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8270": {
      "fn": "Governance.submitVerification",
      "offset": [
        20905,
        20919
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8271": {
      "fn": "Governance.submitVerification",
      "offset": [
        20898,
        20919
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2058"
    },
    "8274": {
      "fn": "Governance.submitVerification",
      "offset": [
        20905,
        20919
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8275": {
      "fn": "Governance.submitVerification",
      "offset": [
        20850,
        20863
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8276": {
      "fn": "Governance.submitVerification",
      "offset": [
        20898,
        20919
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x289E"
    },
    "8279": {
      "fn": "Governance.submitVerification",
      "jump": "i",
      "offset": [
        20898,
        20919
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8280": {
      "fn": "Governance.submitVerification",
      "offset": [
        20898,
        20919
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8281": {
      "op": "POP"
    },
    "8282": {
      "fn": "Governance.submitVerification",
      "offset": [
        20898,
        20919
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "8284": {
      "fn": "Governance.submitVerification",
      "offset": [
        20898,
        20919
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8285": {
      "fn": "Governance.submitVerification",
      "offset": [
        20898,
        20919
      ],
      "op": "ADD",
      "path": "2"
    },
    "8286": {
      "fn": "Governance.submitVerification",
      "offset": [
        20898,
        20919
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8287": {
      "fn": "Governance.submitVerification",
      "offset": [
        20898,
        20919
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8288": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "8294": {
      "op": "NOT"
    },
    "8295": {
      "fn": "Governance.submitVerification",
      "offset": [
        20898,
        20919
      ],
      "op": "AND",
      "path": "2"
    },
    "8296": {
      "fn": "Governance.submitVerification",
      "offset": [
        20898,
        20919
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8297": {
      "fn": "Governance.submitVerification",
      "offset": [
        20898,
        20919
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "8298": {
      "fn": "Governance.submitVerification",
      "offset": [
        20898,
        20919
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8300": {
      "fn": "Governance.submitVerification",
      "offset": [
        20898,
        20919
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "8302": {
      "fn": "Governance.submitVerification",
      "offset": [
        20898,
        20919
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8303": {
      "fn": "Governance.submitVerification",
      "offset": [
        20898,
        20919
      ],
      "op": "ADD",
      "path": "2"
    },
    "8304": {
      "fn": "Governance.submitVerification",
      "offset": [
        20898,
        20919
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8305": {
      "fn": "Governance.submitVerification",
      "offset": [
        20898,
        20919
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8306": {
      "fn": "Governance.submitVerification",
      "offset": [
        20898,
        20919
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "8307": {
      "fn": "Governance.submitVerification",
      "offset": [
        20898,
        20919
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "8309": {
      "fn": "Governance.submitVerification",
      "offset": [
        20898,
        20919
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8310": {
      "fn": "Governance.submitVerification",
      "offset": [
        20898,
        20919
      ],
      "op": "ADD",
      "path": "2"
    },
    "8311": {
      "fn": "Governance.submitVerification",
      "offset": [
        20898,
        20919
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8312": {
      "fn": "Governance.submitVerification",
      "offset": [
        20898,
        20919
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8313": {
      "fn": "Governance.submitVerification",
      "offset": [
        20898,
        20919
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "8314": {
      "fn": "Governance.submitVerification",
      "offset": [
        20898,
        20919
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "8316": {
      "fn": "Governance.submitVerification",
      "offset": [
        20898,
        20919
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8317": {
      "fn": "Governance.submitVerification",
      "offset": [
        20898,
        20919
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8318": {
      "fn": "Governance.submitVerification",
      "offset": [
        20898,
        20919
      ],
      "op": "ADD",
      "path": "2"
    },
    "8319": {
      "fn": "Governance.submitVerification",
      "offset": [
        20898,
        20919
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8320": {
      "fn": "Governance.submitVerification",
      "offset": [
        20898,
        20919
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8321": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8323": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8325": {
      "op": "PUSH1",
      "value": "0xB8"
    },
    "8327": {
      "op": "SHL"
    },
    "8328": {
      "op": "SUB"
    },
    "8329": {
      "op": "NOT"
    },
    "8330": {
      "fn": "Governance.submitVerification",
      "offset": [
        20898,
        20919
      ],
      "op": "AND",
      "path": "2"
    },
    "8331": {
      "fn": "Governance.submitVerification",
      "offset": [
        20898,
        20919
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8332": {
      "fn": "Governance.submitVerification",
      "offset": [
        20898,
        20919
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "8333": {
      "fn": "Governance.submitVerification",
      "offset": [
        20898,
        20919
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8334": {
      "fn": "Governance.submitVerification",
      "offset": [
        20970,
        20977
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x209F"
    },
    "8337": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "8339": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "8340": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8342": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8344": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8346": {
      "op": "SHL"
    },
    "8347": {
      "op": "SUB"
    },
    "8348": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "AND",
      "path": "12"
    },
    "8349": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "8350": {
      "fn": "Ownable.owner",
      "offset": [
        1001,
        1088
      ],
      "op": "JUMP",
      "path": "12"
    },
    "8351": {
      "fn": "Governance.submitVerification",
      "offset": [
        20970,
        20977
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8352": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8354": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8356": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8358": {
      "op": "SHL"
    },
    "8359": {
      "op": "SUB"
    },
    "8360": {
      "fn": "Governance.submitVerification",
      "offset": [
        20970,
        20982
      ],
      "op": "AND",
      "path": "2"
    },
    "8361": {
      "fn": "Governance.submitVerification",
      "offset": [
        20990,
        20995
      ],
      "op": "DUP4",
      "path": "2"
    },
    "8362": {
      "fn": "Governance.submitVerification",
      "offset": [
        20970,
        21000
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8364": {
      "fn": "Governance.submitVerification",
      "offset": [
        20970,
        21000
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8365": {
      "fn": "Governance.submitVerification",
      "offset": [
        20970,
        21000
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8367": {
      "fn": "Governance.submitVerification",
      "offset": [
        20970,
        21000
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8369": {
      "fn": "Governance.submitVerification",
      "offset": [
        20970,
        21000
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8370": {
      "fn": "Governance.submitVerification",
      "offset": [
        20970,
        21000
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8371": {
      "fn": "Governance.submitVerification",
      "offset": [
        20970,
        21000
      ],
      "op": "DUP4",
      "path": "2"
    },
    "8372": {
      "fn": "Governance.submitVerification",
      "offset": [
        20970,
        21000
      ],
      "op": "SUB",
      "path": "2"
    },
    "8373": {
      "fn": "Governance.submitVerification",
      "offset": [
        20970,
        21000
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8374": {
      "fn": "Governance.submitVerification",
      "offset": [
        20970,
        21000
      ],
      "op": "DUP6",
      "path": "2"
    },
    "8375": {
      "fn": "Governance.submitVerification",
      "offset": [
        20970,
        21000
      ],
      "op": "DUP8",
      "path": "2"
    },
    "8376": {
      "fn": "Governance.submitVerification",
      "offset": [
        20970,
        21000
      ],
      "op": "GAS",
      "path": "2"
    },
    "8377": {
      "fn": "Governance.submitVerification",
      "offset": [
        20970,
        21000
      ],
      "op": "CALL",
      "path": "2"
    },
    "8378": {
      "fn": "Governance.submitVerification",
      "offset": [
        20970,
        21000
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "8379": {
      "fn": "Governance.submitVerification",
      "offset": [
        20970,
        21000
      ],
      "op": "POP",
      "path": "2"
    },
    "8380": {
      "fn": "Governance.submitVerification",
      "offset": [
        20970,
        21000
      ],
      "op": "POP",
      "path": "2"
    },
    "8381": {
      "fn": "Governance.submitVerification",
      "offset": [
        20970,
        21000
      ],
      "op": "POP",
      "path": "2"
    },
    "8382": {
      "fn": "Governance.submitVerification",
      "offset": [
        20970,
        21000
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "8383": {
      "fn": "Governance.submitVerification",
      "offset": [
        20970,
        21000
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8384": {
      "fn": "Governance.submitVerification",
      "offset": [
        20970,
        21000
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8386": {
      "fn": "Governance.submitVerification",
      "offset": [
        20970,
        21000
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8387": {
      "fn": "Governance.submitVerification",
      "offset": [
        20970,
        21000
      ],
      "op": "EQ",
      "path": "2"
    },
    "8388": {
      "fn": "Governance.submitVerification",
      "offset": [
        20970,
        21000
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x20E9"
    },
    "8391": {
      "fn": "Governance.submitVerification",
      "offset": [
        20970,
        21000
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "8392": {
      "fn": "Governance.submitVerification",
      "offset": [
        20970,
        21000
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8394": {
      "fn": "Governance.submitVerification",
      "offset": [
        20970,
        21000
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8395": {
      "fn": "Governance.submitVerification",
      "offset": [
        20970,
        21000
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8396": {
      "fn": "Governance.submitVerification",
      "offset": [
        20970,
        21000
      ],
      "op": "POP",
      "path": "2"
    },
    "8397": {
      "fn": "Governance.submitVerification",
      "offset": [
        20970,
        21000
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "8399": {
      "fn": "Governance.submitVerification",
      "offset": [
        20970,
        21000
      ],
      "op": "NOT",
      "path": "2"
    },
    "8400": {
      "fn": "Governance.submitVerification",
      "offset": [
        20970,
        21000
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3F"
    },
    "8402": {
      "fn": "Governance.submitVerification",
      "offset": [
        20970,
        21000
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "8403": {
      "fn": "Governance.submitVerification",
      "offset": [
        20970,
        21000
      ],
      "op": "ADD",
      "path": "2"
    },
    "8404": {
      "fn": "Governance.submitVerification",
      "offset": [
        20970,
        21000
      ],
      "op": "AND",
      "path": "2"
    },
    "8405": {
      "fn": "Governance.submitVerification",
      "offset": [
        20970,
        21000
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8406": {
      "fn": "Governance.submitVerification",
      "offset": [
        20970,
        21000
      ],
      "op": "ADD",
      "path": "2"
    },
    "8407": {
      "fn": "Governance.submitVerification",
      "offset": [
        20970,
        21000
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8409": {
      "fn": "Governance.submitVerification",
      "offset": [
        20970,
        21000
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8410": {
      "fn": "Governance.submitVerification",
      "offset": [
        20970,
        21000
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "8411": {
      "fn": "Governance.submitVerification",
      "offset": [
        20970,
        21000
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8412": {
      "fn": "Governance.submitVerification",
      "offset": [
        20970,
        21000
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8413": {
      "fn": "Governance.submitVerification",
      "offset": [
        20970,
        21000
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "8414": {
      "fn": "Governance.submitVerification",
      "offset": [
        20970,
        21000
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8416": {
      "fn": "Governance.submitVerification",
      "offset": [
        20970,
        21000
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8418": {
      "fn": "Governance.submitVerification",
      "offset": [
        20970,
        21000
      ],
      "op": "DUP5",
      "path": "2"
    },
    "8419": {
      "fn": "Governance.submitVerification",
      "offset": [
        20970,
        21000
      ],
      "op": "ADD",
      "path": "2"
    },
    "8420": {
      "fn": "Governance.submitVerification",
      "offset": [
        20970,
        21000
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "8421": {
      "fn": "Governance.submitVerification",
      "offset": [
        20970,
        21000
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x20EE"
    },
    "8424": {
      "fn": "Governance.submitVerification",
      "offset": [
        20970,
        21000
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8425": {
      "fn": "Governance.submitVerification",
      "offset": [
        20970,
        21000
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8426": {
      "fn": "Governance.submitVerification",
      "offset": [
        20970,
        21000
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "8428": {
      "fn": "Governance.submitVerification",
      "offset": [
        20970,
        21000
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8429": {
      "fn": "Governance.submitVerification",
      "offset": [
        20970,
        21000
      ],
      "op": "POP",
      "path": "2"
    },
    "8430": {
      "fn": "Governance.submitVerification",
      "offset": [
        20970,
        21000
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8431": {
      "fn": "Governance.submitVerification",
      "offset": [
        20970,
        21000
      ],
      "op": "POP",
      "path": "2"
    },
    "8432": {
      "fn": "Governance.submitVerification",
      "offset": [
        20937,
        21000
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8433": {
      "fn": "Governance.submitVerification",
      "offset": [
        20937,
        21000
      ],
      "op": "POP",
      "path": "2"
    },
    "8434": {
      "fn": "Governance.submitVerification",
      "offset": [
        20937,
        21000
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8435": {
      "fn": "Governance.submitVerification",
      "offset": [
        20937,
        21000
      ],
      "op": "POP",
      "path": "2"
    },
    "8436": {
      "branch": 130,
      "fn": "Governance.submitVerification",
      "offset": [
        21076,
        21080
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 66
    },
    "8437": {
      "fn": "Governance.submitVerification",
      "offset": [
        21068,
        21105
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2110"
    },
    "8440": {
      "branch": 130,
      "fn": "Governance.submitVerification",
      "offset": [
        21068,
        21105
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "8441": {
      "fn": "Governance.submitVerification",
      "offset": [
        21068,
        21105
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8443": {
      "fn": "Governance.submitVerification",
      "offset": [
        21068,
        21105
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8444": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8448": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8450": {
      "op": "SHL"
    },
    "8451": {
      "fn": "Governance.submitVerification",
      "offset": [
        21068,
        21105
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8452": {
      "fn": "Governance.submitVerification",
      "offset": [
        21068,
        21105
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8453": {
      "fn": "Governance.submitVerification",
      "offset": [
        21068,
        21105
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "8455": {
      "fn": "Governance.submitVerification",
      "offset": [
        21068,
        21105
      ],
      "op": "ADD",
      "path": "2"
    },
    "8456": {
      "fn": "Governance.submitVerification",
      "offset": [
        21068,
        21105
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x807"
    },
    "8459": {
      "fn": "Governance.submitVerification",
      "offset": [
        21068,
        21105
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8460": {
      "fn": "Governance.submitVerification",
      "offset": [
        21068,
        21105
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x34C2"
    },
    "8463": {
      "fn": "Governance.submitVerification",
      "jump": "i",
      "offset": [
        21068,
        21105
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8464": {
      "fn": "Governance.submitVerification",
      "offset": [
        21068,
        21105
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8465": {
      "fn": "Governance.submitVerification",
      "offset": [
        20744,
        21151
      ],
      "op": "POP",
      "path": "2"
    },
    "8466": {
      "fn": "Governance.submitVerification",
      "offset": [
        20744,
        21151
      ],
      "op": "POP",
      "path": "2"
    },
    "8467": {
      "fn": "Governance.submitVerification",
      "offset": [
        20744,
        21151
      ],
      "op": "POP",
      "path": "2"
    },
    "8468": {
      "fn": "Governance.submitVerification",
      "offset": [
        17643,
        21167
      ],
      "op": "POP",
      "path": "2"
    },
    "8469": {
      "fn": "Governance.submitVerification",
      "offset": [
        17643,
        21167
      ],
      "op": "POP",
      "path": "2"
    },
    "8470": {
      "fn": "Governance.submitVerification",
      "offset": [
        17643,
        21167
      ],
      "op": "POP",
      "path": "2"
    },
    "8471": {
      "fn": "Governance.submitVerification",
      "offset": [
        17643,
        21167
      ],
      "op": "POP",
      "path": "2"
    },
    "8472": {
      "fn": "Governance.submitVerification",
      "offset": [
        17547,
        21167
      ],
      "op": "POP",
      "path": "2"
    },
    "8473": {
      "fn": "Governance.submitVerification",
      "offset": [
        17547,
        21167
      ],
      "op": "POP",
      "path": "2"
    },
    "8474": {
      "fn": "Governance.submitVerification",
      "offset": [
        17547,
        21167
      ],
      "op": "POP",
      "path": "2"
    },
    "8475": {
      "fn": "Governance.submitVerification",
      "jump": "o",
      "offset": [
        17547,
        21167
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8476": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "8477": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "8479": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "8480": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8482": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8484": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8486": {
      "op": "SHL"
    },
    "8487": {
      "op": "SUB"
    },
    "8488": {
      "fn": "Ownable.owner",
      "offset": [
        1074,
        1080
      ],
      "op": "AND",
      "path": "12"
    },
    "8489": {
      "fn": "Context._msgSender",
      "offset": [
        679,
        689
      ],
      "op": "CALLER",
      "path": "6"
    },
    "8490": {
      "offset": [
        1221,
        1244
      ],
      "op": "EQ",
      "path": "12"
    },
    "8491": {
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2146"
    },
    "8494": {
      "offset": [
        1213,
        1281
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "8495": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "8497": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "8498": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8502": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8504": {
      "op": "SHL"
    },
    "8505": {
      "offset": [
        1213,
        1281
      ],
      "op": "DUP2",
      "path": "12"
    },
    "8506": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "8507": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "8509": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "ADD",
      "path": "12"
    },
    "8510": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x807"
    },
    "8513": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "8514": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x313B"
    },
    "8517": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1213,
        1281
      ],
      "op": "JUMP",
      "path": "12"
    },
    "8518": {
      "fn": "Context._msgSender",
      "offset": [
        1213,
        1281
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "8519": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8521": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8523": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8525": {
      "op": "SHL"
    },
    "8526": {
      "op": "SUB"
    },
    "8527": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1990,
        2012
      ],
      "op": "DUP2",
      "path": "12",
      "statement": 67
    },
    "8528": {
      "branch": 137,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1990,
        2012
      ],
      "op": "AND",
      "path": "12"
    },
    "8529": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x21AB"
    },
    "8532": {
      "branch": 137,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "8533": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "8535": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "8536": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8540": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8542": {
      "op": "SHL"
    },
    "8543": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "DUP2",
      "path": "12"
    },
    "8544": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "8545": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8547": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "8549": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "DUP3",
      "path": "12"
    },
    "8550": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "ADD",
      "path": "12"
    },
    "8551": {
      "op": "MSTORE"
    },
    "8552": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "8554": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8556": {
      "op": "DUP3"
    },
    "8557": {
      "op": "ADD"
    },
    "8558": {
      "op": "MSTORE"
    },
    "8559": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
    },
    "8592": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8594": {
      "op": "DUP3"
    },
    "8595": {
      "op": "ADD"
    },
    "8596": {
      "op": "MSTORE"
    },
    "8597": {
      "op": "PUSH6",
      "value": "0x646472657373"
    },
    "8604": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "8606": {
      "op": "SHL"
    },
    "8607": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8609": {
      "op": "DUP3"
    },
    "8610": {
      "op": "ADD"
    },
    "8611": {
      "op": "MSTORE"
    },
    "8612": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "8614": {
      "op": "ADD"
    },
    "8615": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x807"
    },
    "8618": {
      "op": "JUMP"
    },
    "8619": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1982,
        2055
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "8620": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2066,
        2085
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 68,
      "value": "0x21B4"
    },
    "8623": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2076,
        2084
      ],
      "op": "DUP2",
      "path": "12"
    },
    "8624": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2066,
        2075
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x268A"
    },
    "8627": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2066,
        2085
      ],
      "op": "JUMP",
      "path": "12"
    },
    "8628": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2066,
        2085
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "8629": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1901,
        2093
      ],
      "op": "POP",
      "path": "12"
    },
    "8630": {
      "fn": "Ownable.transferOwnership",
      "jump": "o",
      "offset": [
        1901,
        2093
      ],
      "op": "JUMP",
      "path": "12"
    },
    "8631": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        5972,
        6599
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8632": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6047,
        6051
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8634": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6063,
        6090
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8635": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6093,
        6132
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x21D3"
    },
    "8638": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6117,
        6131
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "8640": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5676,
        5688
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "8641": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5676,
        5688
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xF"
    },
    "8643": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5676,
        5688
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8644": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5676,
        5688
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8645": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5676,
        5688
      ],
      "op": "SIGNEXTEND",
      "path": "1"
    },
    "8646": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8648": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "8650": {
      "op": "SHL"
    },
    "8651": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5655,
        5665
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8652": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5655,
        5665
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "8653": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5655,
        5665
      ],
      "op": "DIV",
      "path": "1"
    },
    "8654": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5655,
        5665
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8655": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5655,
        5665
      ],
      "op": "SIGNEXTEND",
      "path": "1"
    },
    "8656": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5648,
        5689
      ],
      "op": "SUB",
      "path": "1"
    },
    "8657": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5648,
        5689
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8658": {
      "fn": "DoubleEndedQueue.length",
      "offset": [
        5344,
        5707
      ],
      "op": "JUMP",
      "path": "1"
    },
    "8659": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6093,
        6132
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8660": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6063,
        6132
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8661": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6063,
        6132
      ],
      "op": "POP",
      "path": "2"
    },
    "8662": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6142,
        6160
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x21DD"
    },
    "8665": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6142,
        6160
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x284A"
    },
    "8668": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "jump": "i",
      "offset": [
        6142,
        6160
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8669": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6142,
        6160
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8670": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6170,
        6184
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8672": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6170,
        6184
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8673": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6278,
        6571
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8674": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6300,
        6319
      ],
      "op": "DUP4",
      "path": "2"
    },
    "8675": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6296,
        6297
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8676": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6296,
        6319
      ],
      "op": "LT",
      "path": "2"
    },
    "8677": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6278,
        6571
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "8678": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6278,
        6571
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x223D"
    },
    "8681": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6278,
        6571
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "8682": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6379,
        6394
      ],
      "op": "TIMESTAMP",
      "path": "2"
    },
    "8683": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6340,
        6346
      ],
      "op": "DUP4",
      "path": "2"
    },
    "8684": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6340,
        6376
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x120"
    },
    "8687": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6340,
        6376
      ],
      "op": "ADD",
      "path": "2"
    },
    "8688": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6340,
        6376
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8689": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6340,
        6394
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "8695": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6340,
        6394
      ],
      "op": "AND",
      "path": "2"
    },
    "8696": {
      "branch": 131,
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6340,
        6394
      ],
      "op": "GT",
      "path": "2"
    },
    "8697": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6340,
        6420
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8698": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6340,
        6420
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "8699": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6340,
        6420
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x220F"
    },
    "8702": {
      "branch": 131,
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6340,
        6420
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "8703": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6340,
        6420
      ],
      "op": "POP",
      "path": "2"
    },
    "8704": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6414,
        6420
      ],
      "op": "DUP6",
      "path": "2"
    },
    "8705": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6398,
        6404
      ],
      "op": "DUP4",
      "path": "2"
    },
    "8706": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6398,
        6410
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8708": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6398,
        6410
      ],
      "op": "ADD",
      "path": "2"
    },
    "8709": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6398,
        6410
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8710": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6398,
        6420
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "8716": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6398,
        6420
      ],
      "op": "AND",
      "path": "2"
    },
    "8717": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6398,
        6420
      ],
      "op": "EQ",
      "path": "2"
    },
    "8718": {
      "branch": 132,
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6398,
        6420
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "8719": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6340,
        6420
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8720": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6340,
        6449
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8721": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6340,
        6449
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "8722": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6340,
        6449
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2224"
    },
    "8725": {
      "branch": 132,
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6340,
        6449
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "8726": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6340,
        6449
      ],
      "op": "POP",
      "path": "2"
    },
    "8727": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6443,
        6449
      ],
      "op": "DUP6",
      "path": "2"
    },
    "8728": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6424,
        6430
      ],
      "op": "DUP4",
      "path": "2"
    },
    "8729": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6424,
        6440
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "8732": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6424,
        6440
      ],
      "op": "ADD",
      "path": "2"
    },
    "8733": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6424,
        6440
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8734": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6424,
        6449
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "8737": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6424,
        6449
      ],
      "op": "AND",
      "path": "2"
    },
    "8738": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6424,
        6449
      ],
      "op": "EQ",
      "path": "2"
    },
    "8739": {
      "branch": 133,
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6424,
        6449
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "8740": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6340,
        6449
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8741": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6336,
        6533
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "8742": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6336,
        6533
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2235"
    },
    "8745": {
      "branch": 133,
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6336,
        6533
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "8746": {
      "op": "POP"
    },
    "8747": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6514,
        6518
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 69,
      "value": "0x1"
    },
    "8749": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6514,
        6518
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "8750": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        5972,
        6599
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "8751": {
      "op": "POP"
    },
    "8752": {
      "op": "POP"
    },
    "8753": {
      "op": "POP"
    },
    "8754": {
      "op": "POP"
    },
    "8755": {
      "op": "POP"
    },
    "8756": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "jump": "o",
      "offset": [
        5972,
        6599
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8757": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6336,
        6533
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8758": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6556,
        6559
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 70,
      "value": "0x1"
    },
    "8760": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6556,
        6559
      ],
      "op": "ADD",
      "path": "2"
    },
    "8761": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6278,
        6571
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x21E1"
    },
    "8764": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6278,
        6571
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8765": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6278,
        6571
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8766": {
      "op": "POP"
    },
    "8767": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6587,
        6592
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 71,
      "value": "0x0"
    },
    "8769": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        6587,
        6592
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "8770": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "offset": [
        5972,
        6599
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "8771": {
      "op": "POP"
    },
    "8772": {
      "op": "POP"
    },
    "8773": {
      "op": "POP"
    },
    "8774": {
      "op": "POP"
    },
    "8775": {
      "op": "POP"
    },
    "8776": {
      "fn": "Governance.areTasksAvailableToConfirm",
      "jump": "o",
      "offset": [
        5972,
        6599
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8777": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8311,
        9532
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8778": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8393,
        8402
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8780": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8389,
        9526
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8781": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8408,
        8417
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "8783": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8408,
        8424
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8784": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8406,
        8424
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8785": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8406,
        8424
      ],
      "op": "LT",
      "path": "2"
    },
    "8786": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8389,
        9526
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "8787": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8389,
        9526
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x23E2"
    },
    "8790": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8389,
        9526
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "8791": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8524,
        8533
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8792": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8507,
        8534
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8794": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8507,
        8534
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8795": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8507,
        8534
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8797": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8507,
        8534
      ],
      "op": "ADD",
      "path": "2"
    },
    "8798": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8507,
        8534
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2267"
    },
    "8801": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8507,
        8534
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8802": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8507,
        8534
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8803": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8507,
        8534
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x34F0"
    },
    "8806": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "jump": "i",
      "offset": [
        8507,
        8534
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8807": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8507,
        8534
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8808": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8507,
        8534
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8810": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8507,
        8534
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8811": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8507,
        8534
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8813": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8507,
        8534
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8814": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8507,
        8534
      ],
      "op": "DUP4",
      "path": "2"
    },
    "8815": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8507,
        8534
      ],
      "op": "SUB",
      "path": "2"
    },
    "8816": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8507,
        8534
      ],
      "op": "SUB",
      "path": "2"
    },
    "8817": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8507,
        8534
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8818": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8507,
        8534
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8819": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8507,
        8534
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8820": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8507,
        8534
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8822": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8507,
        8534
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8823": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8497,
        8535
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8824": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8497,
        8535
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8825": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8497,
        8535
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8826": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8497,
        8535
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8828": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8497,
        8535
      ],
      "op": "ADD",
      "path": "2"
    },
    "8829": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8497,
        8535
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "8830": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8470,
        8479
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "8832": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8480,
        8481
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8833": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8470,
        8482
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8834": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8470,
        8482
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8835": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8470,
        8482
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8836": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8470,
        8482
      ],
      "op": "LT",
      "path": "2"
    },
    "8837": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8470,
        8482
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2290"
    },
    "8840": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8470,
        8482
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "8841": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8470,
        8482
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2290"
    },
    "8844": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8470,
        8482
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x30BE"
    },
    "8847": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "jump": "i",
      "offset": [
        8470,
        8482
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8848": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8470,
        8482
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8849": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8470,
        8482
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8850": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8470,
        8482
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8852": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8470,
        8482
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8853": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8470,
        8482
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8855": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8470,
        8482
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8857": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8470,
        8482
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "8858": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8470,
        8482
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8859": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8470,
        8482
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "8861": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8470,
        8482
      ],
      "op": "MUL",
      "path": "2"
    },
    "8862": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8470,
        8482
      ],
      "op": "ADD",
      "path": "2"
    },
    "8863": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8470,
        8491
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "8865": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8470,
        8491
      ],
      "op": "ADD",
      "path": "2"
    },
    "8866": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8453,
        8492
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8868": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8453,
        8492
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8869": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8453,
        8492
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8871": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8453,
        8492
      ],
      "op": "ADD",
      "path": "2"
    },
    "8872": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8453,
        8492
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x22B1"
    },
    "8875": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8453,
        8492
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8876": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8453,
        8492
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8877": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8453,
        8492
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x350C"
    },
    "8880": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "jump": "i",
      "offset": [
        8453,
        8492
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8881": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8453,
        8492
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8882": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8453,
        8492
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8884": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8453,
        8492
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8885": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8453,
        8492
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8887": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8453,
        8492
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8888": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8453,
        8492
      ],
      "op": "DUP4",
      "path": "2"
    },
    "8889": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8453,
        8492
      ],
      "op": "SUB",
      "path": "2"
    },
    "8890": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8453,
        8492
      ],
      "op": "SUB",
      "path": "2"
    },
    "8891": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8453,
        8492
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8892": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8453,
        8492
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8893": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8453,
        8492
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8894": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8453,
        8492
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8896": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8453,
        8492
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8897": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8443,
        8493
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8898": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8443,
        8493
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8899": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8443,
        8493
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8900": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8443,
        8493
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8902": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8443,
        8493
      ],
      "op": "ADD",
      "path": "2"
    },
    "8903": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8443,
        8493
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "8904": {
      "branch": 134,
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8443,
        8535
      ],
      "op": "SUB",
      "path": "2"
    },
    "8905": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8440,
        9488
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x23DA"
    },
    "8908": {
      "branch": 134,
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8440,
        9488
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "8909": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8618,
        8645
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8911": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8648,
        8657
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "8913": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8658,
        8659
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8914": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8648,
        8660
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8915": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8648,
        8660
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8916": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8648,
        8660
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8917": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8648,
        8660
      ],
      "op": "LT",
      "path": "2"
    },
    "8918": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8648,
        8660
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x22E1"
    },
    "8921": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8648,
        8660
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "8922": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8648,
        8660
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x22E1"
    },
    "8925": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8648,
        8660
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x30BE"
    },
    "8928": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "jump": "i",
      "offset": [
        8648,
        8660
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8929": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8648,
        8660
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8930": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8648,
        8660
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8931": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8648,
        8660
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8933": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8648,
        8660
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8934": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8648,
        8660
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8936": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8648,
        8660
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8938": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8648,
        8660
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "8939": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8648,
        8660
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8940": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8648,
        8660
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "8942": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8648,
        8660
      ],
      "op": "MUL",
      "path": "2"
    },
    "8943": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8648,
        8660
      ],
      "op": "ADD",
      "path": "2"
    },
    "8944": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8618,
        8660
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8945": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8618,
        8660
      ],
      "op": "POP",
      "path": "2"
    },
    "8946": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8678,
        8712
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8948": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8715,
        8724
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "8950": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8742,
        8743
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "8952": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8725,
        8734
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "8954": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8725,
        8741
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8955": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8725,
        8741
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8956": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8725,
        8741
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8957": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8725,
        8741
      ],
      "op": "POP",
      "path": "2"
    },
    "8958": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8725,
        8743
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2307"
    },
    "8961": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8725,
        8743
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8962": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8725,
        8743
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8963": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8725,
        8743
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x334A"
    },
    "8966": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "jump": "i",
      "offset": [
        8725,
        8743
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8967": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8725,
        8743
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8968": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8715,
        8744
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8969": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8715,
        8744
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8970": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8715,
        8744
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8971": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8715,
        8744
      ],
      "op": "LT",
      "path": "2"
    },
    "8972": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8715,
        8744
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2317"
    },
    "8975": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8715,
        8744
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "8976": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8715,
        8744
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2317"
    },
    "8979": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8715,
        8744
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x30BE"
    },
    "8982": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "jump": "i",
      "offset": [
        8715,
        8744
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8983": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8715,
        8744
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8984": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8715,
        8744
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8985": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8715,
        8744
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8987": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8715,
        8744
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8988": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8715,
        8744
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8990": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8715,
        8744
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8992": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8715,
        8744
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "8993": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8715,
        8744
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8994": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8715,
        8744
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "8996": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8715,
        8744
      ],
      "op": "MUL",
      "path": "2"
    },
    "8997": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8715,
        8744
      ],
      "op": "ADD",
      "path": "2"
    },
    "8998": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8678,
        8744
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8999": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8678,
        8744
      ],
      "op": "POP",
      "path": "2"
    },
    "9000": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8873,
        8890
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 72
    },
    "9001": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8860,
        8890
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9002": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8860,
        8890
      ],
      "op": "POP",
      "path": "2"
    },
    "9003": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8915,
        8924
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 73,
      "value": "0x4"
    },
    "9005": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8942,
        8943
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "9007": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8925,
        8934
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "9009": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8925,
        8941
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9010": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8925,
        8941
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "9011": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8925,
        8941
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9012": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8925,
        8941
      ],
      "op": "POP",
      "path": "2"
    },
    "9013": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8925,
        8943
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x233E"
    },
    "9016": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8925,
        8943
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9017": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8925,
        8943
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9018": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8925,
        8943
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x334A"
    },
    "9021": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "jump": "i",
      "offset": [
        8925,
        8943
      ],
      "op": "JUMP",
      "path": "2"
    },
    "9022": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8925,
        8943
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9023": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8915,
        8944
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9024": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8915,
        8944
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "9025": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8915,
        8944
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9026": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8915,
        8944
      ],
      "op": "LT",
      "path": "2"
    },
    "9027": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8915,
        8944
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x234E"
    },
    "9030": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8915,
        8944
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "9031": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8915,
        8944
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x234E"
    },
    "9034": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8915,
        8944
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x30BE"
    },
    "9037": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "jump": "i",
      "offset": [
        8915,
        8944
      ],
      "op": "JUMP",
      "path": "2"
    },
    "9038": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8915,
        8944
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9039": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8915,
        8944
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9040": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8915,
        8944
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9042": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8915,
        8944
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9043": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8915,
        8944
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "9045": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8915,
        8944
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9047": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8915,
        8944
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "9048": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8915,
        8944
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9049": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8915,
        8944
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "9051": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8915,
        8944
      ],
      "op": "MUL",
      "path": "2"
    },
    "9052": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8915,
        8944
      ],
      "op": "ADD",
      "path": "2"
    },
    "9053": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8915,
        8944
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9055": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8908,
        8944
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "9057": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8908,
        8944
      ],
      "op": "DUP3",
      "path": "2"
    },
    "9058": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8908,
        8944
      ],
      "op": "ADD",
      "path": "2"
    },
    "9059": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8908,
        8944
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9061": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8908,
        8944
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x236E"
    },
    "9064": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8908,
        8944
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9065": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8908,
        8944
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9066": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8908,
        8944
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x289E"
    },
    "9069": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "jump": "i",
      "offset": [
        8908,
        8944
      ],
      "op": "JUMP",
      "path": "2"
    },
    "9070": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8908,
        8944
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9071": {
      "op": "POP"
    },
    "9072": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8908,
        8944
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "9074": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8908,
        8944
      ],
      "op": "ADD",
      "path": "2"
    },
    "9075": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8908,
        8944
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9076": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8908,
        8944
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "9077": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9079": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9081": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "9083": {
      "op": "SHL"
    },
    "9084": {
      "op": "SUB"
    },
    "9085": {
      "op": "NOT"
    },
    "9086": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8908,
        8944
      ],
      "op": "AND",
      "path": "2"
    },
    "9087": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8908,
        8944
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9088": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8908,
        8944
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "9089": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        9421,
        9430
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 74,
      "value": "0x4"
    },
    "9091": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        9431,
        9447
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9092": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        9431,
        9447
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "9093": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        9431,
        9449
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2390"
    },
    "9096": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        9431,
        9449
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9097": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8908,
        8944
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "9099": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8908,
        8944
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9100": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        9431,
        9449
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x334A"
    },
    "9103": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "jump": "i",
      "offset": [
        9431,
        9449
      ],
      "op": "JUMP",
      "path": "2"
    },
    "9104": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        9431,
        9449
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9105": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        9421,
        9450
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9106": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        9421,
        9450
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "9107": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        9421,
        9450
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9108": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        9421,
        9450
      ],
      "op": "LT",
      "path": "2"
    },
    "9109": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        9421,
        9450
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x23A0"
    },
    "9112": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        9421,
        9450
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "9113": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        9421,
        9450
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x23A0"
    },
    "9116": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        9421,
        9450
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x30BE"
    },
    "9119": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "jump": "i",
      "offset": [
        9421,
        9450
      ],
      "op": "JUMP",
      "path": "2"
    },
    "9120": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        9421,
        9450
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9121": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        9421,
        9450
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9122": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        9421,
        9450
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9124": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        9421,
        9450
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9125": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        9421,
        9450
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "9127": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        9421,
        9450
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9129": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        9421,
        9450
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "9130": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        9421,
        9450
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9131": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        9421,
        9450
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "9133": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        9421,
        9450
      ],
      "op": "MUL",
      "path": "2"
    },
    "9134": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        9421,
        9450
      ],
      "op": "ADD",
      "path": "2"
    },
    "9135": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        9421,
        9450
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9137": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        9414,
        9450
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "9139": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        9414,
        9450
      ],
      "op": "DUP3",
      "path": "2"
    },
    "9140": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        9414,
        9450
      ],
      "op": "ADD",
      "path": "2"
    },
    "9141": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        9414,
        9450
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9143": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        9414,
        9450
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x23C0"
    },
    "9146": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        9414,
        9450
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9147": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        9414,
        9450
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9148": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        9414,
        9450
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x289E"
    },
    "9151": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "jump": "i",
      "offset": [
        9414,
        9450
      ],
      "op": "JUMP",
      "path": "2"
    },
    "9152": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        9414,
        9450
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9153": {
      "op": "POP"
    },
    "9154": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        9414,
        9450
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "9156": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        9414,
        9450
      ],
      "op": "ADD",
      "path": "2"
    },
    "9157": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        9414,
        9450
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9158": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        9414,
        9450
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "9159": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9161": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9163": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "9165": {
      "op": "SHL"
    },
    "9166": {
      "op": "SUB"
    },
    "9167": {
      "op": "NOT"
    },
    "9168": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        9414,
        9450
      ],
      "op": "AND",
      "path": "2"
    },
    "9169": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        9414,
        9450
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9170": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        9414,
        9450
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "9171": {
      "op": "POP"
    },
    "9172": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        9468,
        9473
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 75,
      "value": "0x23E2"
    },
    "9175": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        9468,
        9473
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9176": {
      "op": "POP"
    },
    "9177": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        9468,
        9473
      ],
      "op": "JUMP",
      "path": "2"
    },
    "9178": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8440,
        9488
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9179": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        9511,
        9514
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 76,
      "value": "0x1"
    },
    "9181": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        9511,
        9514
      ],
      "op": "ADD",
      "path": "2"
    },
    "9182": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8389,
        9526
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x224C"
    },
    "9185": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8389,
        9526
      ],
      "op": "JUMP",
      "path": "2"
    },
    "9186": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8389,
        9526
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9187": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8389,
        9526
      ],
      "op": "POP",
      "path": "2"
    },
    "9188": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "offset": [
        8311,
        9532
      ],
      "op": "POP",
      "path": "2"
    },
    "9189": {
      "fn": "Governance.deleteTaskTypeByIPFSHash",
      "jump": "o",
      "offset": [
        8311,
        9532
      ],
      "op": "JUMP",
      "path": "2"
    },
    "9190": {
      "fn": "Governance.getVotes",
      "offset": [
        4561,
        4950
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9191": {
      "fn": "Governance.getVotes",
      "offset": [
        4622,
        4637
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "9193": {
      "fn": "Governance.getVotes",
      "offset": [
        4670,
        4684
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 77,
      "value": "0x8"
    },
    "9195": {
      "fn": "Governance.getVotes",
      "offset": [
        4670,
        4684
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "9196": {
      "fn": "Governance.getVotes",
      "offset": [
        4657,
        4667
      ],
      "op": "DUP3",
      "path": "2"
    },
    "9197": {
      "branch": 135,
      "fn": "Governance.getVotes",
      "offset": [
        4657,
        4684
      ],
      "op": "LT",
      "path": "2"
    },
    "9198": {
      "fn": "Governance.getVotes",
      "offset": [
        4649,
        4705
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x242C"
    },
    "9201": {
      "branch": 135,
      "fn": "Governance.getVotes",
      "offset": [
        4649,
        4705
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "9202": {
      "fn": "Governance.getVotes",
      "offset": [
        4649,
        4705
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9204": {
      "fn": "Governance.getVotes",
      "offset": [
        4649,
        4705
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9205": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9209": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9211": {
      "op": "SHL"
    },
    "9212": {
      "fn": "Governance.getVotes",
      "offset": [
        4649,
        4705
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9213": {
      "fn": "Governance.getVotes",
      "offset": [
        4649,
        4705
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9214": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9216": {
      "fn": "Governance.getVotes",
      "offset": [
        4649,
        4705
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "9218": {
      "fn": "Governance.getVotes",
      "offset": [
        4649,
        4705
      ],
      "op": "DUP3",
      "path": "2"
    },
    "9219": {
      "fn": "Governance.getVotes",
      "offset": [
        4649,
        4705
      ],
      "op": "ADD",
      "path": "2"
    },
    "9220": {
      "op": "MSTORE"
    },
    "9221": {
      "op": "PUSH1",
      "value": "0x10"
    },
    "9223": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9225": {
      "op": "DUP3"
    },
    "9226": {
      "op": "ADD"
    },
    "9227": {
      "op": "MSTORE"
    },
    "9228": {
      "op": "PUSH16",
      "value": "0x1B9BC81CDD58DA081C1C9BDC1BDCD85B"
    },
    "9245": {
      "op": "PUSH1",
      "value": "0x82"
    },
    "9247": {
      "op": "SHL"
    },
    "9248": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9250": {
      "op": "DUP3"
    },
    "9251": {
      "op": "ADD"
    },
    "9252": {
      "op": "MSTORE"
    },
    "9253": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9255": {
      "op": "ADD"
    },
    "9256": {
      "fn": "Governance.getVotes",
      "offset": [
        4649,
        4705
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x807"
    },
    "9259": {
      "op": "JUMP"
    },
    "9260": {
      "fn": "Governance.getVotes",
      "offset": [
        4649,
        4705
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9261": {
      "fn": "Governance.getVotes",
      "offset": [
        4715,
        4740
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9263": {
      "fn": "Governance.getVotes",
      "offset": [
        4756,
        4777
      ],
      "op": "DUP3",
      "path": "2"
    },
    "9264": {
      "fn": "Governance.getVotes",
      "offset": [
        4756,
        4777
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9265": {
      "fn": "Governance.getVotes",
      "offset": [
        4756,
        4777
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9266": {
      "fn": "Governance.getVotes",
      "offset": [
        4756,
        4765
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "9268": {
      "fn": "Governance.getVotes",
      "offset": [
        4756,
        4777
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "9270": {
      "fn": "Governance.getVotes",
      "offset": [
        4756,
        4777
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9271": {
      "fn": "Governance.getVotes",
      "offset": [
        4756,
        4777
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9273": {
      "fn": "Governance.getVotes",
      "offset": [
        4756,
        4777
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9274": {
      "fn": "Governance.getVotes",
      "offset": [
        4756,
        4777
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "9275": {
      "fn": "Governance.getVotes",
      "offset": [
        4756,
        4793
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "9277": {
      "fn": "Governance.getVotes",
      "offset": [
        4756,
        4793
      ],
      "op": "ADD",
      "path": "2"
    },
    "9278": {
      "fn": "Governance.getVotes",
      "offset": [
        4756,
        4793
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "9279": {
      "fn": "Governance.getVotes",
      "offset": [
        4756,
        4793
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "9282": {
      "fn": "Governance.getVotes",
      "offset": [
        4756,
        4793
      ],
      "op": "AND",
      "path": "2"
    },
    "9283": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9285": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9287": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9289": {
      "op": "SHL"
    },
    "9290": {
      "op": "SUB"
    },
    "9291": {
      "fn": "Governance.getVotes",
      "offset": [
        4743,
        4794
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9292": {
      "fn": "Governance.getVotes",
      "offset": [
        4743,
        4794
      ],
      "op": "GT",
      "path": "2"
    },
    "9293": {
      "fn": "Governance.getVotes",
      "offset": [
        4743,
        4794
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "9294": {
      "fn": "Governance.getVotes",
      "offset": [
        4743,
        4794
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2459"
    },
    "9297": {
      "fn": "Governance.getVotes",
      "offset": [
        4743,
        4794
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "9298": {
      "fn": "Governance.getVotes",
      "offset": [
        4743,
        4794
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2459"
    },
    "9301": {
      "fn": "Governance.getVotes",
      "offset": [
        4743,
        4794
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x299D"
    },
    "9304": {
      "fn": "Governance.getVotes",
      "jump": "i",
      "offset": [
        4743,
        4794
      ],
      "op": "JUMP",
      "path": "2"
    },
    "9305": {
      "fn": "Governance.getVotes",
      "offset": [
        4743,
        4794
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9306": {
      "fn": "Governance.getVotes",
      "offset": [
        4743,
        4794
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9308": {
      "fn": "Governance.getVotes",
      "offset": [
        4743,
        4794
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9309": {
      "fn": "Governance.getVotes",
      "offset": [
        4743,
        4794
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9310": {
      "fn": "Governance.getVotes",
      "offset": [
        4743,
        4794
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9311": {
      "fn": "Governance.getVotes",
      "offset": [
        4743,
        4794
      ],
      "op": "DUP3",
      "path": "2"
    },
    "9312": {
      "fn": "Governance.getVotes",
      "offset": [
        4743,
        4794
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9313": {
      "fn": "Governance.getVotes",
      "offset": [
        4743,
        4794
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9314": {
      "fn": "Governance.getVotes",
      "offset": [
        4743,
        4794
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "9316": {
      "fn": "Governance.getVotes",
      "offset": [
        4743,
        4794
      ],
      "op": "MUL",
      "path": "2"
    },
    "9317": {
      "fn": "Governance.getVotes",
      "offset": [
        4743,
        4794
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "9319": {
      "fn": "Governance.getVotes",
      "offset": [
        4743,
        4794
      ],
      "op": "ADD",
      "path": "2"
    },
    "9320": {
      "fn": "Governance.getVotes",
      "offset": [
        4743,
        4794
      ],
      "op": "DUP3",
      "path": "2"
    },
    "9321": {
      "fn": "Governance.getVotes",
      "offset": [
        4743,
        4794
      ],
      "op": "ADD",
      "path": "2"
    },
    "9322": {
      "fn": "Governance.getVotes",
      "offset": [
        4743,
        4794
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9324": {
      "fn": "Governance.getVotes",
      "offset": [
        4743,
        4794
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9325": {
      "fn": "Governance.getVotes",
      "offset": [
        4743,
        4794
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9326": {
      "fn": "Governance.getVotes",
      "offset": [
        4743,
        4794
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "9327": {
      "fn": "Governance.getVotes",
      "offset": [
        4743,
        4794
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2482"
    },
    "9330": {
      "fn": "Governance.getVotes",
      "offset": [
        4743,
        4794
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "9331": {
      "fn": "Governance.getVotes",
      "offset": [
        4743,
        4794
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9332": {
      "fn": "Governance.getVotes",
      "offset": [
        4743,
        4794
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "9334": {
      "fn": "Governance.getVotes",
      "offset": [
        4743,
        4794
      ],
      "op": "ADD",
      "path": "2"
    },
    "9335": {
      "fn": "Governance.getVotes",
      "offset": [
        4743,
        4794
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "9337": {
      "fn": "Governance.getVotes",
      "offset": [
        4743,
        4794
      ],
      "op": "DUP3",
      "path": "2"
    },
    "9338": {
      "fn": "Governance.getVotes",
      "offset": [
        4743,
        4794
      ],
      "op": "MUL",
      "path": "2"
    },
    "9339": {
      "fn": "Governance.getVotes",
      "offset": [
        4743,
        4794
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9340": {
      "fn": "Governance.getVotes",
      "offset": [
        4743,
        4794
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "9341": {
      "fn": "Governance.getVotes",
      "offset": [
        4743,
        4794
      ],
      "op": "DUP4",
      "path": "2"
    },
    "9342": {
      "fn": "Governance.getVotes",
      "offset": [
        4743,
        4794
      ],
      "op": "CALLDATACOPY",
      "path": "2"
    },
    "9343": {
      "fn": "Governance.getVotes",
      "offset": [
        4743,
        4794
      ],
      "op": "ADD",
      "path": "2"
    },
    "9344": {
      "fn": "Governance.getVotes",
      "offset": [
        4743,
        4794
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9345": {
      "op": "POP"
    },
    "9346": {
      "fn": "Governance.getVotes",
      "offset": [
        4743,
        4794
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9347": {
      "fn": "Governance.getVotes",
      "offset": [
        4743,
        4794
      ],
      "op": "POP",
      "path": "2"
    },
    "9348": {
      "fn": "Governance.getVotes",
      "offset": [
        4715,
        4794
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9349": {
      "fn": "Governance.getVotes",
      "offset": [
        4715,
        4794
      ],
      "op": "POP",
      "path": "2"
    },
    "9350": {
      "fn": "Governance.getVotes",
      "offset": [
        4808,
        4817
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9352": {
      "fn": "Governance.getVotes",
      "offset": [
        4804,
        4918
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9353": {
      "fn": "Governance.getVotes",
      "offset": [
        4826,
        4835
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9354": {
      "fn": "Governance.getVotes",
      "offset": [
        4826,
        4842
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9355": {
      "fn": "Governance.getVotes",
      "offset": [
        4823,
        4824
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9356": {
      "fn": "Governance.getVotes",
      "offset": [
        4823,
        4842
      ],
      "op": "LT",
      "path": "2"
    },
    "9357": {
      "fn": "Governance.getVotes",
      "offset": [
        4804,
        4918
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "9358": {
      "fn": "Governance.getVotes",
      "offset": [
        4804,
        4918
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2504"
    },
    "9361": {
      "fn": "Governance.getVotes",
      "offset": [
        4804,
        4918
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "9362": {
      "fn": "Governance.getVotes",
      "offset": [
        4877,
        4898
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 78,
      "value": "0x0"
    },
    "9364": {
      "fn": "Governance.getVotes",
      "offset": [
        4877,
        4898
      ],
      "op": "DUP5",
      "path": "2"
    },
    "9365": {
      "fn": "Governance.getVotes",
      "offset": [
        4877,
        4898
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9366": {
      "fn": "Governance.getVotes",
      "offset": [
        4877,
        4898
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9367": {
      "fn": "Governance.getVotes",
      "offset": [
        4877,
        4886
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "9369": {
      "fn": "Governance.getVotes",
      "offset": [
        4877,
        4898
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "9371": {
      "fn": "Governance.getVotes",
      "offset": [
        4877,
        4898
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9372": {
      "fn": "Governance.getVotes",
      "offset": [
        4877,
        4898
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9374": {
      "fn": "Governance.getVotes",
      "offset": [
        4877,
        4898
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9375": {
      "fn": "Governance.getVotes",
      "offset": [
        4877,
        4898
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "9376": {
      "fn": "Governance.getVotes",
      "offset": [
        4877,
        4904
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "9378": {
      "fn": "Governance.getVotes",
      "offset": [
        4877,
        4904
      ],
      "op": "ADD",
      "path": "2"
    },
    "9379": {
      "fn": "Governance.getVotes",
      "offset": [
        4905,
        4906
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9380": {
      "fn": "Governance.getVotes",
      "offset": [
        4877,
        4907
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x8"
    },
    "9382": {
      "fn": "Governance.getVotes",
      "offset": [
        4877,
        4907
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9383": {
      "fn": "Governance.getVotes",
      "offset": [
        4877,
        4907
      ],
      "op": "LT",
      "path": "2"
    },
    "9384": {
      "fn": "Governance.getVotes",
      "offset": [
        4877,
        4907
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x24B3"
    },
    "9387": {
      "fn": "Governance.getVotes",
      "offset": [
        4877,
        4907
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "9388": {
      "fn": "Governance.getVotes",
      "offset": [
        4877,
        4907
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x24B3"
    },
    "9391": {
      "fn": "Governance.getVotes",
      "offset": [
        4877,
        4907
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x30BE"
    },
    "9394": {
      "fn": "Governance.getVotes",
      "jump": "i",
      "offset": [
        4877,
        4907
      ],
      "op": "JUMP",
      "path": "2"
    },
    "9395": {
      "fn": "Governance.getVotes",
      "offset": [
        4877,
        4907
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9396": {
      "fn": "Governance.getVotes",
      "offset": [
        4877,
        4907
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x10"
    },
    "9398": {
      "fn": "Governance.getVotes",
      "offset": [
        4877,
        4907
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9399": {
      "fn": "Governance.getVotes",
      "offset": [
        4877,
        4907
      ],
      "op": "DUP3",
      "path": "2"
    },
    "9400": {
      "fn": "Governance.getVotes",
      "offset": [
        4877,
        4907
      ],
      "op": "DUP3",
      "path": "2"
    },
    "9401": {
      "fn": "Governance.getVotes",
      "offset": [
        4877,
        4907
      ],
      "op": "DIV",
      "path": "2"
    },
    "9402": {
      "fn": "Governance.getVotes",
      "offset": [
        4877,
        4907
      ],
      "op": "ADD",
      "path": "2"
    },
    "9403": {
      "fn": "Governance.getVotes",
      "offset": [
        4877,
        4907
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9404": {
      "fn": "Governance.getVotes",
      "offset": [
        4877,
        4907
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9405": {
      "fn": "Governance.getVotes",
      "offset": [
        4877,
        4907
      ],
      "op": "MOD",
      "path": "2"
    },
    "9406": {
      "fn": "Governance.getVotes",
      "offset": [
        4877,
        4907
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "9408": {
      "fn": "Governance.getVotes",
      "offset": [
        4877,
        4907
      ],
      "op": "MUL",
      "path": "2"
    },
    "9409": {
      "fn": "Governance.getVotes",
      "offset": [
        4877,
        4907
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9410": {
      "fn": "Governance.getVotes",
      "offset": [
        4877,
        4907
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "9411": {
      "fn": "Governance.getVotes",
      "offset": [
        4877,
        4907
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9412": {
      "fn": "Governance.getVotes",
      "offset": [
        4877,
        4907
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "9415": {
      "fn": "Governance.getVotes",
      "offset": [
        4877,
        4907
      ],
      "op": "EXP",
      "path": "2"
    },
    "9416": {
      "fn": "Governance.getVotes",
      "offset": [
        4877,
        4907
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9417": {
      "fn": "Governance.getVotes",
      "offset": [
        4877,
        4907
      ],
      "op": "DIV",
      "path": "2"
    },
    "9418": {
      "fn": "Governance.getVotes",
      "offset": [
        4877,
        4907
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "9421": {
      "fn": "Governance.getVotes",
      "offset": [
        4877,
        4907
      ],
      "op": "AND",
      "path": "2"
    },
    "9422": {
      "fn": "Governance.getVotes",
      "offset": [
        4862,
        4871
      ],
      "op": "DUP3",
      "path": "2"
    },
    "9423": {
      "fn": "Governance.getVotes",
      "offset": [
        4872,
        4873
      ],
      "op": "DUP3",
      "path": "2"
    },
    "9424": {
      "fn": "Governance.getVotes",
      "offset": [
        4862,
        4874
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9425": {
      "fn": "Governance.getVotes",
      "offset": [
        4862,
        4874
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9426": {
      "fn": "Governance.getVotes",
      "offset": [
        4862,
        4874
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9427": {
      "fn": "Governance.getVotes",
      "offset": [
        4862,
        4874
      ],
      "op": "LT",
      "path": "2"
    },
    "9428": {
      "fn": "Governance.getVotes",
      "offset": [
        4862,
        4874
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x24DF"
    },
    "9431": {
      "fn": "Governance.getVotes",
      "offset": [
        4862,
        4874
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "9432": {
      "fn": "Governance.getVotes",
      "offset": [
        4862,
        4874
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x24DF"
    },
    "9435": {
      "fn": "Governance.getVotes",
      "offset": [
        4862,
        4874
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x30BE"
    },
    "9438": {
      "fn": "Governance.getVotes",
      "jump": "i",
      "offset": [
        4862,
        4874
      ],
      "op": "JUMP",
      "path": "2"
    },
    "9439": {
      "fn": "Governance.getVotes",
      "offset": [
        4862,
        4874
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9440": {
      "fn": "Governance.getVotes",
      "offset": [
        4862,
        4907
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "9443": {
      "fn": "Governance.getVotes",
      "offset": [
        4862,
        4907
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9444": {
      "fn": "Governance.getVotes",
      "offset": [
        4862,
        4907
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "9445": {
      "fn": "Governance.getVotes",
      "offset": [
        4862,
        4907
      ],
      "op": "AND",
      "path": "2"
    },
    "9446": {
      "fn": "Governance.getVotes",
      "offset": [
        4862,
        4874
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "9448": {
      "fn": "Governance.getVotes",
      "offset": [
        4862,
        4874
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "9449": {
      "fn": "Governance.getVotes",
      "offset": [
        4862,
        4874
      ],
      "op": "DUP4",
      "path": "2"
    },
    "9450": {
      "fn": "Governance.getVotes",
      "offset": [
        4862,
        4874
      ],
      "op": "MUL",
      "path": "2"
    },
    "9451": {
      "fn": "Governance.getVotes",
      "offset": [
        4862,
        4874
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9452": {
      "fn": "Governance.getVotes",
      "offset": [
        4862,
        4874
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9453": {
      "fn": "Governance.getVotes",
      "offset": [
        4862,
        4874
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9454": {
      "fn": "Governance.getVotes",
      "offset": [
        4862,
        4874
      ],
      "op": "ADD",
      "path": "2"
    },
    "9455": {
      "fn": "Governance.getVotes",
      "offset": [
        4862,
        4874
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9456": {
      "fn": "Governance.getVotes",
      "offset": [
        4862,
        4874
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9457": {
      "fn": "Governance.getVotes",
      "offset": [
        4862,
        4874
      ],
      "op": "ADD",
      "path": "2"
    },
    "9458": {
      "fn": "Governance.getVotes",
      "offset": [
        4862,
        4907
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9459": {
      "fn": "Governance.getVotes",
      "offset": [
        4844,
        4847
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 79
    },
    "9460": {
      "fn": "Governance.getVotes",
      "offset": [
        4844,
        4847
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x24FC"
    },
    "9463": {
      "fn": "Governance.getVotes",
      "offset": [
        4844,
        4847
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9464": {
      "fn": "Governance.getVotes",
      "offset": [
        4844,
        4847
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3398"
    },
    "9467": {
      "fn": "Governance.getVotes",
      "jump": "i",
      "offset": [
        4844,
        4847
      ],
      "op": "JUMP",
      "path": "2"
    },
    "9468": {
      "fn": "Governance.getVotes",
      "offset": [
        4844,
        4847
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9469": {
      "fn": "Governance.getVotes",
      "offset": [
        4844,
        4847
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9470": {
      "fn": "Governance.getVotes",
      "offset": [
        4844,
        4847
      ],
      "op": "POP",
      "path": "2"
    },
    "9471": {
      "fn": "Governance.getVotes",
      "offset": [
        4844,
        4847
      ],
      "op": "POP",
      "path": "2"
    },
    "9472": {
      "fn": "Governance.getVotes",
      "offset": [
        4804,
        4918
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2488"
    },
    "9475": {
      "fn": "Governance.getVotes",
      "offset": [
        4804,
        4918
      ],
      "op": "JUMP",
      "path": "2"
    },
    "9476": {
      "fn": "Governance.getVotes",
      "offset": [
        4804,
        4918
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9477": {
      "op": "POP"
    },
    "9478": {
      "fn": "Governance.getVotes",
      "offset": [
        4934,
        4943
      ],
      "op": "SWAP3",
      "path": "2",
      "statement": 80
    },
    "9479": {
      "fn": "Governance.getVotes",
      "offset": [
        4561,
        4950
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9480": {
      "op": "POP"
    },
    "9481": {
      "op": "POP"
    },
    "9482": {
      "fn": "Governance.getVotes",
      "jump": "o",
      "offset": [
        4561,
        4950
      ],
      "op": "JUMP",
      "path": "2"
    },
    "9483": {
      "fn": "Governance._createTaskType",
      "offset": [
        11798,
        12729
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9484": {
      "fn": "Governance._createTaskType",
      "offset": [
        12039,
        12048
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "9486": {
      "fn": "Governance._createTaskType",
      "offset": [
        12039,
        12055
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9487": {
      "fn": "Governance._createTaskType",
      "offset": [
        12039,
        12055
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "9488": {
      "fn": "Governance._createTaskType",
      "offset": [
        12065,
        12081
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 81,
      "value": "0x1"
    },
    "9490": {
      "fn": "Governance._createTaskType",
      "offset": [
        12065,
        12081
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9491": {
      "fn": "Governance._createTaskType",
      "offset": [
        12065,
        12081
      ],
      "op": "ADD",
      "path": "2"
    },
    "9492": {
      "fn": "Governance._createTaskType",
      "offset": [
        12065,
        12081
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9493": {
      "fn": "Governance._createTaskType",
      "offset": [
        12065,
        12081
      ],
      "op": "DUP4",
      "path": "2"
    },
    "9494": {
      "fn": "Governance._createTaskType",
      "offset": [
        12065,
        12081
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "9495": {
      "fn": "Governance._createTaskType",
      "offset": [
        12013,
        12036
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9497": {
      "fn": "Governance._createTaskType",
      "offset": [
        12065,
        12081
      ],
      "op": "DUP4",
      "path": "2"
    },
    "9498": {
      "fn": "Governance._createTaskType",
      "offset": [
        12065,
        12081
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9499": {
      "fn": "Governance._createTaskType",
      "offset": [
        12065,
        12081
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9500": {
      "fn": "Governance._createTaskType",
      "offset": [
        12039,
        12055
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9501": {
      "fn": "Governance._createTaskType",
      "offset": [
        12039,
        12055
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "9502": {
      "fn": "Governance._createTaskType",
      "offset": [
        12039,
        12048
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9503": {
      "fn": "Governance._createTaskType",
      "offset": [
        12039,
        12055
      ],
      "op": "DUP4",
      "path": "2"
    },
    "9504": {
      "fn": "Governance._createTaskType",
      "offset": [
        12039,
        12055
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9505": {
      "fn": "Governance._createTaskType",
      "offset": [
        12122,
        12148
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9506": {
      "fn": "Governance._createTaskType",
      "offset": [
        12122,
        12148
      ],
      "op": "LT",
      "path": "2"
    },
    "9507": {
      "fn": "Governance._createTaskType",
      "offset": [
        12122,
        12148
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x252E"
    },
    "9510": {
      "fn": "Governance._createTaskType",
      "offset": [
        12122,
        12148
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "9511": {
      "fn": "Governance._createTaskType",
      "offset": [
        12122,
        12148
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x252E"
    },
    "9514": {
      "fn": "Governance._createTaskType",
      "offset": [
        12122,
        12148
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x30BE"
    },
    "9517": {
      "fn": "Governance._createTaskType",
      "jump": "i",
      "offset": [
        12122,
        12148
      ],
      "op": "JUMP",
      "path": "2"
    },
    "9518": {
      "fn": "Governance._createTaskType",
      "offset": [
        12122,
        12148
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9519": {
      "fn": "Governance._createTaskType",
      "offset": [
        12122,
        12148
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9521": {
      "fn": "Governance._createTaskType",
      "offset": [
        12122,
        12148
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9522": {
      "fn": "Governance._createTaskType",
      "offset": [
        12122,
        12148
      ],
      "op": "DUP3",
      "path": "2"
    },
    "9523": {
      "fn": "Governance._createTaskType",
      "offset": [
        12122,
        12148
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9524": {
      "fn": "Governance._createTaskType",
      "offset": [
        12122,
        12148
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "9526": {
      "fn": "Governance._createTaskType",
      "offset": [
        12122,
        12148
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9527": {
      "fn": "Governance._createTaskType",
      "offset": [
        12122,
        12148
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9528": {
      "fn": "Governance._createTaskType",
      "offset": [
        12122,
        12148
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "9529": {
      "fn": "Governance._createTaskType",
      "offset": [
        12122,
        12148
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "9531": {
      "fn": "Governance._createTaskType",
      "offset": [
        12122,
        12148
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9532": {
      "fn": "Governance._createTaskType",
      "offset": [
        12122,
        12148
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9533": {
      "fn": "Governance._createTaskType",
      "offset": [
        12122,
        12148
      ],
      "op": "MUL",
      "path": "2"
    },
    "9534": {
      "fn": "Governance._createTaskType",
      "offset": [
        12122,
        12148
      ],
      "op": "ADD",
      "path": "2"
    },
    "9535": {
      "fn": "Governance._createTaskType",
      "offset": [
        12122,
        12148
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9536": {
      "op": "POP"
    },
    "9537": {
      "fn": "Governance._createTaskType",
      "offset": [
        12162,
        12182
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 82,
      "value": "0x1"
    },
    "9539": {
      "fn": "Governance._createTaskType",
      "offset": [
        12162,
        12182
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9540": {
      "fn": "Governance._createTaskType",
      "offset": [
        12162,
        12182
      ],
      "op": "ADD",
      "path": "2"
    },
    "9541": {
      "fn": "Governance._createTaskType",
      "offset": [
        12162,
        12193
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x254F"
    },
    "9544": {
      "fn": "Governance._createTaskType",
      "offset": [
        12184,
        12193
      ],
      "op": "DUP11",
      "path": "2"
    },
    "9545": {
      "fn": "Governance._createTaskType",
      "offset": [
        12184,
        12193
      ],
      "op": "DUP13",
      "path": "2"
    },
    "9546": {
      "fn": "Governance._createTaskType",
      "offset": [
        12162,
        12182
      ],
      "op": "DUP4",
      "path": "2"
    },
    "9547": {
      "fn": "Governance._createTaskType",
      "offset": [
        12162,
        12193
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x33CE"
    },
    "9550": {
      "fn": "Governance._createTaskType",
      "jump": "i",
      "offset": [
        12162,
        12193
      ],
      "op": "JUMP",
      "path": "2"
    },
    "9551": {
      "fn": "Governance._createTaskType",
      "offset": [
        12162,
        12193
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9552": {
      "fn": "Governance._createTaskType",
      "offset": [
        12162,
        12193
      ],
      "op": "POP",
      "path": "2"
    },
    "9553": {
      "fn": "Governance._createTaskType",
      "offset": [
        12228,
        12233
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 83,
      "value": "0x0"
    },
    "9555": {
      "fn": "Governance._createTaskType",
      "offset": [
        12207,
        12218
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9556": {
      "fn": "Governance._createTaskType",
      "offset": [
        12207,
        12225
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "9558": {
      "fn": "Governance._createTaskType",
      "offset": [
        12207,
        12225
      ],
      "op": "ADD",
      "path": "2"
    },
    "9559": {
      "fn": "Governance._createTaskType",
      "offset": [
        12207,
        12225
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9561": {
      "fn": "Governance._createTaskType",
      "offset": [
        12207,
        12233
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "9564": {
      "fn": "Governance._createTaskType",
      "offset": [
        12207,
        12233
      ],
      "op": "EXP",
      "path": "2"
    },
    "9565": {
      "fn": "Governance._createTaskType",
      "offset": [
        12207,
        12233
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9566": {
      "fn": "Governance._createTaskType",
      "offset": [
        12207,
        12233
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "9567": {
      "fn": "Governance._createTaskType",
      "offset": [
        12207,
        12233
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9568": {
      "fn": "Governance._createTaskType",
      "offset": [
        12207,
        12233
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "9570": {
      "fn": "Governance._createTaskType",
      "offset": [
        12207,
        12233
      ],
      "op": "MUL",
      "path": "2"
    },
    "9571": {
      "fn": "Governance._createTaskType",
      "offset": [
        12207,
        12233
      ],
      "op": "NOT",
      "path": "2"
    },
    "9572": {
      "fn": "Governance._createTaskType",
      "offset": [
        12207,
        12233
      ],
      "op": "AND",
      "path": "2"
    },
    "9573": {
      "fn": "Governance._createTaskType",
      "offset": [
        12207,
        12233
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9574": {
      "fn": "Governance._createTaskType",
      "offset": [
        12207,
        12233
      ],
      "op": "DUP4",
      "path": "2"
    },
    "9575": {
      "fn": "Governance._createTaskType",
      "offset": [
        12207,
        12233
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "9576": {
      "fn": "Governance._createTaskType",
      "offset": [
        12207,
        12233
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "9577": {
      "fn": "Governance._createTaskType",
      "offset": [
        12207,
        12233
      ],
      "op": "MUL",
      "path": "2"
    },
    "9578": {
      "fn": "Governance._createTaskType",
      "offset": [
        12207,
        12233
      ],
      "op": "OR",
      "path": "2"
    },
    "9579": {
      "fn": "Governance._createTaskType",
      "offset": [
        12207,
        12233
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9580": {
      "fn": "Governance._createTaskType",
      "offset": [
        12207,
        12233
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "9581": {
      "fn": "Governance._createTaskType",
      "offset": [
        12207,
        12233
      ],
      "op": "POP",
      "path": "2"
    },
    "9582": {
      "fn": "Governance._createTaskType",
      "offset": [
        12272,
        12283
      ],
      "op": "DUP8",
      "path": "2",
      "statement": 84
    },
    "9583": {
      "fn": "Governance._createTaskType",
      "offset": [
        12247,
        12258
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9584": {
      "fn": "Governance._createTaskType",
      "offset": [
        12247,
        12269
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "9586": {
      "fn": "Governance._createTaskType",
      "offset": [
        12247,
        12269
      ],
      "op": "ADD",
      "path": "2"
    },
    "9587": {
      "fn": "Governance._createTaskType",
      "offset": [
        12247,
        12269
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "9589": {
      "fn": "Governance._createTaskType",
      "offset": [
        12247,
        12283
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "9592": {
      "fn": "Governance._createTaskType",
      "offset": [
        12247,
        12283
      ],
      "op": "EXP",
      "path": "2"
    },
    "9593": {
      "fn": "Governance._createTaskType",
      "offset": [
        12247,
        12283
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9594": {
      "fn": "Governance._createTaskType",
      "offset": [
        12247,
        12283
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "9595": {
      "fn": "Governance._createTaskType",
      "offset": [
        12247,
        12283
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9596": {
      "fn": "Governance._createTaskType",
      "offset": [
        12247,
        12283
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "9602": {
      "fn": "Governance._createTaskType",
      "offset": [
        12247,
        12283
      ],
      "op": "MUL",
      "path": "2"
    },
    "9603": {
      "fn": "Governance._createTaskType",
      "offset": [
        12247,
        12283
      ],
      "op": "NOT",
      "path": "2"
    },
    "9604": {
      "fn": "Governance._createTaskType",
      "offset": [
        12247,
        12283
      ],
      "op": "AND",
      "path": "2"
    },
    "9605": {
      "fn": "Governance._createTaskType",
      "offset": [
        12247,
        12283
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9606": {
      "fn": "Governance._createTaskType",
      "offset": [
        12247,
        12283
      ],
      "op": "DUP4",
      "path": "2"
    },
    "9607": {
      "fn": "Governance._createTaskType",
      "offset": [
        12247,
        12283
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "9613": {
      "fn": "Governance._createTaskType",
      "offset": [
        12247,
        12283
      ],
      "op": "AND",
      "path": "2"
    },
    "9614": {
      "fn": "Governance._createTaskType",
      "offset": [
        12247,
        12283
      ],
      "op": "MUL",
      "path": "2"
    },
    "9615": {
      "fn": "Governance._createTaskType",
      "offset": [
        12247,
        12283
      ],
      "op": "OR",
      "path": "2"
    },
    "9616": {
      "fn": "Governance._createTaskType",
      "offset": [
        12247,
        12283
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9617": {
      "fn": "Governance._createTaskType",
      "offset": [
        12247,
        12283
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "9618": {
      "fn": "Governance._createTaskType",
      "offset": [
        12247,
        12283
      ],
      "op": "POP",
      "path": "2"
    },
    "9619": {
      "fn": "Governance._createTaskType",
      "offset": [
        12327,
        12343
      ],
      "op": "DUP7",
      "path": "2",
      "statement": 85
    },
    "9620": {
      "fn": "Governance._createTaskType",
      "offset": [
        12297,
        12308
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9621": {
      "fn": "Governance._createTaskType",
      "offset": [
        12297,
        12324
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "9623": {
      "fn": "Governance._createTaskType",
      "offset": [
        12297,
        12324
      ],
      "op": "ADD",
      "path": "2"
    },
    "9624": {
      "fn": "Governance._createTaskType",
      "offset": [
        12297,
        12324
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x6"
    },
    "9626": {
      "fn": "Governance._createTaskType",
      "offset": [
        12297,
        12343
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "9629": {
      "fn": "Governance._createTaskType",
      "offset": [
        12297,
        12343
      ],
      "op": "EXP",
      "path": "2"
    },
    "9630": {
      "fn": "Governance._createTaskType",
      "offset": [
        12297,
        12343
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9631": {
      "fn": "Governance._createTaskType",
      "offset": [
        12297,
        12343
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "9632": {
      "fn": "Governance._createTaskType",
      "offset": [
        12297,
        12343
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9633": {
      "fn": "Governance._createTaskType",
      "offset": [
        12297,
        12343
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "9635": {
      "fn": "Governance._createTaskType",
      "offset": [
        12297,
        12343
      ],
      "op": "MUL",
      "path": "2"
    },
    "9636": {
      "fn": "Governance._createTaskType",
      "offset": [
        12297,
        12343
      ],
      "op": "NOT",
      "path": "2"
    },
    "9637": {
      "fn": "Governance._createTaskType",
      "offset": [
        12297,
        12343
      ],
      "op": "AND",
      "path": "2"
    },
    "9638": {
      "fn": "Governance._createTaskType",
      "offset": [
        12297,
        12343
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9639": {
      "fn": "Governance._createTaskType",
      "offset": [
        12297,
        12343
      ],
      "op": "DUP4",
      "path": "2"
    },
    "9640": {
      "fn": "Governance._createTaskType",
      "offset": [
        12297,
        12343
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "9642": {
      "fn": "Governance._createTaskType",
      "offset": [
        12297,
        12343
      ],
      "op": "AND",
      "path": "2"
    },
    "9643": {
      "fn": "Governance._createTaskType",
      "offset": [
        12297,
        12343
      ],
      "op": "MUL",
      "path": "2"
    },
    "9644": {
      "fn": "Governance._createTaskType",
      "offset": [
        12297,
        12343
      ],
      "op": "OR",
      "path": "2"
    },
    "9645": {
      "fn": "Governance._createTaskType",
      "offset": [
        12297,
        12343
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9646": {
      "fn": "Governance._createTaskType",
      "offset": [
        12297,
        12343
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "9647": {
      "fn": "Governance._createTaskType",
      "offset": [
        12297,
        12343
      ],
      "op": "POP",
      "path": "2"
    },
    "9648": {
      "fn": "Governance._createTaskType",
      "offset": [
        12381,
        12391
      ],
      "op": "DUP6",
      "path": "2",
      "statement": 86
    },
    "9649": {
      "fn": "Governance._createTaskType",
      "offset": [
        12357,
        12368
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9650": {
      "fn": "Governance._createTaskType",
      "offset": [
        12357,
        12378
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "9652": {
      "fn": "Governance._createTaskType",
      "offset": [
        12357,
        12378
      ],
      "op": "ADD",
      "path": "2"
    },
    "9653": {
      "fn": "Governance._createTaskType",
      "offset": [
        12357,
        12378
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "9655": {
      "fn": "Governance._createTaskType",
      "offset": [
        12357,
        12391
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "9658": {
      "fn": "Governance._createTaskType",
      "offset": [
        12357,
        12391
      ],
      "op": "EXP",
      "path": "2"
    },
    "9659": {
      "fn": "Governance._createTaskType",
      "offset": [
        12357,
        12391
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9660": {
      "fn": "Governance._createTaskType",
      "offset": [
        12357,
        12391
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "9661": {
      "fn": "Governance._createTaskType",
      "offset": [
        12357,
        12391
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9662": {
      "fn": "Governance._createTaskType",
      "offset": [
        12357,
        12391
      ],
      "op": "PUSH3",
      "path": "2",
      "value": "0xFFFFFF"
    },
    "9666": {
      "fn": "Governance._createTaskType",
      "offset": [
        12357,
        12391
      ],
      "op": "MUL",
      "path": "2"
    },
    "9667": {
      "fn": "Governance._createTaskType",
      "offset": [
        12357,
        12391
      ],
      "op": "NOT",
      "path": "2"
    },
    "9668": {
      "fn": "Governance._createTaskType",
      "offset": [
        12357,
        12391
      ],
      "op": "AND",
      "path": "2"
    },
    "9669": {
      "fn": "Governance._createTaskType",
      "offset": [
        12357,
        12391
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9670": {
      "fn": "Governance._createTaskType",
      "offset": [
        12357,
        12391
      ],
      "op": "DUP4",
      "path": "2"
    },
    "9671": {
      "fn": "Governance._createTaskType",
      "offset": [
        12357,
        12391
      ],
      "op": "PUSH3",
      "path": "2",
      "value": "0xFFFFFF"
    },
    "9675": {
      "fn": "Governance._createTaskType",
      "offset": [
        12357,
        12391
      ],
      "op": "AND",
      "path": "2"
    },
    "9676": {
      "fn": "Governance._createTaskType",
      "offset": [
        12357,
        12391
      ],
      "op": "MUL",
      "path": "2"
    },
    "9677": {
      "fn": "Governance._createTaskType",
      "offset": [
        12357,
        12391
      ],
      "op": "OR",
      "path": "2"
    },
    "9678": {
      "fn": "Governance._createTaskType",
      "offset": [
        12357,
        12391
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9679": {
      "fn": "Governance._createTaskType",
      "offset": [
        12357,
        12391
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "9680": {
      "fn": "Governance._createTaskType",
      "offset": [
        12357,
        12391
      ],
      "op": "POP",
      "path": "2"
    },
    "9681": {
      "fn": "Governance._createTaskType",
      "offset": [
        12432,
        12445
      ],
      "op": "DUP5",
      "path": "2",
      "statement": 87
    },
    "9682": {
      "fn": "Governance._createTaskType",
      "offset": [
        12405,
        12416
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9683": {
      "fn": "Governance._createTaskType",
      "offset": [
        12405,
        12429
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "9685": {
      "fn": "Governance._createTaskType",
      "offset": [
        12405,
        12429
      ],
      "op": "ADD",
      "path": "2"
    },
    "9686": {
      "fn": "Governance._createTaskType",
      "offset": [
        12405,
        12429
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA"
    },
    "9688": {
      "fn": "Governance._createTaskType",
      "offset": [
        12405,
        12445
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "9691": {
      "fn": "Governance._createTaskType",
      "offset": [
        12405,
        12445
      ],
      "op": "EXP",
      "path": "2"
    },
    "9692": {
      "fn": "Governance._createTaskType",
      "offset": [
        12405,
        12445
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9693": {
      "fn": "Governance._createTaskType",
      "offset": [
        12405,
        12445
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "9694": {
      "fn": "Governance._createTaskType",
      "offset": [
        12405,
        12445
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9695": {
      "fn": "Governance._createTaskType",
      "offset": [
        12405,
        12445
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "9701": {
      "fn": "Governance._createTaskType",
      "offset": [
        12405,
        12445
      ],
      "op": "MUL",
      "path": "2"
    },
    "9702": {
      "fn": "Governance._createTaskType",
      "offset": [
        12405,
        12445
      ],
      "op": "NOT",
      "path": "2"
    },
    "9703": {
      "fn": "Governance._createTaskType",
      "offset": [
        12405,
        12445
      ],
      "op": "AND",
      "path": "2"
    },
    "9704": {
      "fn": "Governance._createTaskType",
      "offset": [
        12405,
        12445
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9705": {
      "fn": "Governance._createTaskType",
      "offset": [
        12405,
        12445
      ],
      "op": "DUP4",
      "path": "2"
    },
    "9706": {
      "fn": "Governance._createTaskType",
      "offset": [
        12405,
        12445
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "9712": {
      "fn": "Governance._createTaskType",
      "offset": [
        12405,
        12445
      ],
      "op": "AND",
      "path": "2"
    },
    "9713": {
      "fn": "Governance._createTaskType",
      "offset": [
        12405,
        12445
      ],
      "op": "MUL",
      "path": "2"
    },
    "9714": {
      "fn": "Governance._createTaskType",
      "offset": [
        12405,
        12445
      ],
      "op": "OR",
      "path": "2"
    },
    "9715": {
      "fn": "Governance._createTaskType",
      "offset": [
        12405,
        12445
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9716": {
      "fn": "Governance._createTaskType",
      "offset": [
        12405,
        12445
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "9717": {
      "fn": "Governance._createTaskType",
      "offset": [
        12405,
        12445
      ],
      "op": "POP",
      "path": "2"
    },
    "9718": {
      "fn": "Governance._createTaskType",
      "offset": [
        12486,
        12499
      ],
      "op": "DUP4",
      "path": "2",
      "statement": 88
    },
    "9719": {
      "fn": "Governance._createTaskType",
      "offset": [
        12459,
        12470
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9720": {
      "fn": "Governance._createTaskType",
      "offset": [
        12459,
        12483
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "9722": {
      "fn": "Governance._createTaskType",
      "offset": [
        12459,
        12483
      ],
      "op": "ADD",
      "path": "2"
    },
    "9723": {
      "fn": "Governance._createTaskType",
      "offset": [
        12459,
        12483
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xF"
    },
    "9725": {
      "fn": "Governance._createTaskType",
      "offset": [
        12459,
        12499
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "9728": {
      "fn": "Governance._createTaskType",
      "offset": [
        12459,
        12499
      ],
      "op": "EXP",
      "path": "2"
    },
    "9729": {
      "fn": "Governance._createTaskType",
      "offset": [
        12459,
        12499
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9730": {
      "fn": "Governance._createTaskType",
      "offset": [
        12459,
        12499
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "9731": {
      "fn": "Governance._createTaskType",
      "offset": [
        12459,
        12499
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9732": {
      "fn": "Governance._createTaskType",
      "offset": [
        12459,
        12499
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "9738": {
      "fn": "Governance._createTaskType",
      "offset": [
        12459,
        12499
      ],
      "op": "MUL",
      "path": "2"
    },
    "9739": {
      "fn": "Governance._createTaskType",
      "offset": [
        12459,
        12499
      ],
      "op": "NOT",
      "path": "2"
    },
    "9740": {
      "fn": "Governance._createTaskType",
      "offset": [
        12459,
        12499
      ],
      "op": "AND",
      "path": "2"
    },
    "9741": {
      "fn": "Governance._createTaskType",
      "offset": [
        12459,
        12499
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9742": {
      "fn": "Governance._createTaskType",
      "offset": [
        12459,
        12499
      ],
      "op": "DUP4",
      "path": "2"
    },
    "9743": {
      "fn": "Governance._createTaskType",
      "offset": [
        12459,
        12499
      ],
      "op": "PUSH5",
      "path": "2",
      "value": "0xFFFFFFFFFF"
    },
    "9749": {
      "fn": "Governance._createTaskType",
      "offset": [
        12459,
        12499
      ],
      "op": "AND",
      "path": "2"
    },
    "9750": {
      "fn": "Governance._createTaskType",
      "offset": [
        12459,
        12499
      ],
      "op": "MUL",
      "path": "2"
    },
    "9751": {
      "fn": "Governance._createTaskType",
      "offset": [
        12459,
        12499
      ],
      "op": "OR",
      "path": "2"
    },
    "9752": {
      "fn": "Governance._createTaskType",
      "offset": [
        12459,
        12499
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9753": {
      "fn": "Governance._createTaskType",
      "offset": [
        12459,
        12499
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "9754": {
      "fn": "Governance._createTaskType",
      "offset": [
        12459,
        12499
      ],
      "op": "POP",
      "path": "2"
    },
    "9755": {
      "fn": "Governance._createTaskType",
      "offset": [
        12542,
        12557
      ],
      "op": "DUP3",
      "path": "2",
      "statement": 89
    },
    "9756": {
      "fn": "Governance._createTaskType",
      "offset": [
        12513,
        12524
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9757": {
      "fn": "Governance._createTaskType",
      "offset": [
        12513,
        12539
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "9759": {
      "fn": "Governance._createTaskType",
      "offset": [
        12513,
        12539
      ],
      "op": "ADD",
      "path": "2"
    },
    "9760": {
      "fn": "Governance._createTaskType",
      "offset": [
        12513,
        12539
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x14"
    },
    "9762": {
      "fn": "Governance._createTaskType",
      "offset": [
        12513,
        12557
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "9765": {
      "fn": "Governance._createTaskType",
      "offset": [
        12513,
        12557
      ],
      "op": "EXP",
      "path": "2"
    },
    "9766": {
      "fn": "Governance._createTaskType",
      "offset": [
        12513,
        12557
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9767": {
      "fn": "Governance._createTaskType",
      "offset": [
        12513,
        12557
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "9768": {
      "fn": "Governance._createTaskType",
      "offset": [
        12513,
        12557
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9769": {
      "fn": "Governance._createTaskType",
      "offset": [
        12513,
        12557
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "9772": {
      "fn": "Governance._createTaskType",
      "offset": [
        12513,
        12557
      ],
      "op": "MUL",
      "path": "2"
    },
    "9773": {
      "fn": "Governance._createTaskType",
      "offset": [
        12513,
        12557
      ],
      "op": "NOT",
      "path": "2"
    },
    "9774": {
      "fn": "Governance._createTaskType",
      "offset": [
        12513,
        12557
      ],
      "op": "AND",
      "path": "2"
    },
    "9775": {
      "fn": "Governance._createTaskType",
      "offset": [
        12513,
        12557
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9776": {
      "fn": "Governance._createTaskType",
      "offset": [
        12513,
        12557
      ],
      "op": "DUP4",
      "path": "2"
    },
    "9777": {
      "fn": "Governance._createTaskType",
      "offset": [
        12513,
        12557
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "9780": {
      "fn": "Governance._createTaskType",
      "offset": [
        12513,
        12557
      ],
      "op": "AND",
      "path": "2"
    },
    "9781": {
      "fn": "Governance._createTaskType",
      "offset": [
        12513,
        12557
      ],
      "op": "MUL",
      "path": "2"
    },
    "9782": {
      "fn": "Governance._createTaskType",
      "offset": [
        12513,
        12557
      ],
      "op": "OR",
      "path": "2"
    },
    "9783": {
      "fn": "Governance._createTaskType",
      "offset": [
        12513,
        12557
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9784": {
      "fn": "Governance._createTaskType",
      "offset": [
        12513,
        12557
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "9785": {
      "fn": "Governance._createTaskType",
      "offset": [
        12513,
        12557
      ],
      "op": "POP",
      "path": "2"
    },
    "9786": {
      "fn": "Governance._createTaskType",
      "offset": [
        12603,
        12722
      ],
      "op": "PUSH32",
      "path": "2",
      "statement": 90,
      "value": "0x2810025950962E3CD71FD98C2DC111FFBDB2A129B36771DF8D36A7DE2FE3E4E0"
    },
    "9819": {
      "fn": "Governance._createTaskType",
      "offset": [
        12622,
        12631
      ],
      "op": "DUP11",
      "path": "2"
    },
    "9820": {
      "fn": "Governance._createTaskType",
      "offset": [
        12622,
        12631
      ],
      "op": "DUP11",
      "path": "2"
    },
    "9821": {
      "fn": "Governance._createTaskType",
      "offset": [
        12633,
        12644
      ],
      "op": "DUP11",
      "path": "2"
    },
    "9822": {
      "fn": "Governance._createTaskType",
      "offset": [
        12646,
        12662
      ],
      "op": "DUP11",
      "path": "2"
    },
    "9823": {
      "fn": "Governance._createTaskType",
      "offset": [
        12664,
        12674
      ],
      "op": "DUP11",
      "path": "2"
    },
    "9824": {
      "fn": "Governance._createTaskType",
      "offset": [
        12676,
        12689
      ],
      "op": "DUP11",
      "path": "2"
    },
    "9825": {
      "fn": "Governance._createTaskType",
      "offset": [
        12691,
        12704
      ],
      "op": "DUP11",
      "path": "2"
    },
    "9826": {
      "fn": "Governance._createTaskType",
      "offset": [
        12706,
        12721
      ],
      "op": "DUP11",
      "path": "2"
    },
    "9827": {
      "fn": "Governance._createTaskType",
      "offset": [
        12603,
        12722
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9829": {
      "fn": "Governance._createTaskType",
      "offset": [
        12603,
        12722
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9830": {
      "fn": "Governance._createTaskType",
      "offset": [
        12603,
        12722
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2676"
    },
    "9833": {
      "fn": "Governance._createTaskType",
      "offset": [
        12603,
        12722
      ],
      "op": "SWAP9",
      "path": "2"
    },
    "9834": {
      "fn": "Governance._createTaskType",
      "offset": [
        12603,
        12722
      ],
      "op": "SWAP8",
      "path": "2"
    },
    "9835": {
      "fn": "Governance._createTaskType",
      "offset": [
        12603,
        12722
      ],
      "op": "SWAP7",
      "path": "2"
    },
    "9836": {
      "fn": "Governance._createTaskType",
      "offset": [
        12603,
        12722
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "9837": {
      "fn": "Governance._createTaskType",
      "offset": [
        12603,
        12722
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "9838": {
      "fn": "Governance._createTaskType",
      "offset": [
        12603,
        12722
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "9839": {
      "fn": "Governance._createTaskType",
      "offset": [
        12603,
        12722
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "9840": {
      "fn": "Governance._createTaskType",
      "offset": [
        12603,
        12722
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9841": {
      "fn": "Governance._createTaskType",
      "offset": [
        12603,
        12722
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9842": {
      "fn": "Governance._createTaskType",
      "offset": [
        12603,
        12722
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x357E"
    },
    "9845": {
      "fn": "Governance._createTaskType",
      "jump": "i",
      "offset": [
        12603,
        12722
      ],
      "op": "JUMP",
      "path": "2"
    },
    "9846": {
      "fn": "Governance._createTaskType",
      "offset": [
        12603,
        12722
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9847": {
      "fn": "Governance._createTaskType",
      "offset": [
        12603,
        12722
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9849": {
      "fn": "Governance._createTaskType",
      "offset": [
        12603,
        12722
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9850": {
      "fn": "Governance._createTaskType",
      "offset": [
        12603,
        12722
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9851": {
      "fn": "Governance._createTaskType",
      "offset": [
        12603,
        12722
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9852": {
      "fn": "Governance._createTaskType",
      "offset": [
        12603,
        12722
      ],
      "op": "SUB",
      "path": "2"
    },
    "9853": {
      "fn": "Governance._createTaskType",
      "offset": [
        12603,
        12722
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9854": {
      "fn": "Governance._createTaskType",
      "offset": [
        12603,
        12722
      ],
      "op": "LOG1",
      "path": "2"
    },
    "9855": {
      "fn": "Governance._createTaskType",
      "offset": [
        12003,
        12729
      ],
      "op": "POP",
      "path": "2"
    },
    "9856": {
      "fn": "Governance._createTaskType",
      "offset": [
        12003,
        12729
      ],
      "op": "POP",
      "path": "2"
    },
    "9857": {
      "fn": "Governance._createTaskType",
      "offset": [
        11798,
        12729
      ],
      "op": "POP",
      "path": "2"
    },
    "9858": {
      "fn": "Governance._createTaskType",
      "offset": [
        11798,
        12729
      ],
      "op": "POP",
      "path": "2"
    },
    "9859": {
      "fn": "Governance._createTaskType",
      "offset": [
        11798,
        12729
      ],
      "op": "POP",
      "path": "2"
    },
    "9860": {
      "fn": "Governance._createTaskType",
      "offset": [
        11798,
        12729
      ],
      "op": "POP",
      "path": "2"
    },
    "9861": {
      "fn": "Governance._createTaskType",
      "offset": [
        11798,
        12729
      ],
      "op": "POP",
      "path": "2"
    },
    "9862": {
      "fn": "Governance._createTaskType",
      "offset": [
        11798,
        12729
      ],
      "op": "POP",
      "path": "2"
    },
    "9863": {
      "fn": "Governance._createTaskType",
      "offset": [
        11798,
        12729
      ],
      "op": "POP",
      "path": "2"
    },
    "9864": {
      "fn": "Governance._createTaskType",
      "offset": [
        11798,
        12729
      ],
      "op": "POP",
      "path": "2"
    },
    "9865": {
      "fn": "Governance._createTaskType",
      "jump": "o",
      "offset": [
        11798,
        12729
      ],
      "op": "JUMP",
      "path": "2"
    },
    "9866": {
      "fn": "Ownable._setOwner",
      "offset": [
        2101,
        2274
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "9867": {
      "fn": "Ownable._setOwner",
      "offset": [
        2176,
        2182
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "9869": {
      "fn": "Ownable._setOwner",
      "offset": [
        2176,
        2182
      ],
      "op": "DUP1",
      "path": "12"
    },
    "9870": {
      "fn": "Ownable._setOwner",
      "offset": [
        2176,
        2182
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "9871": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9873": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9875": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9877": {
      "op": "SHL"
    },
    "9878": {
      "op": "SUB"
    },
    "9879": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "DUP4",
      "path": "12",
      "statement": 91
    },
    "9880": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "DUP2",
      "path": "12"
    },
    "9881": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "AND",
      "path": "12"
    },
    "9882": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9884": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9886": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9888": {
      "op": "SHL"
    },
    "9889": {
      "op": "SUB"
    },
    "9890": {
      "op": "NOT"
    },
    "9891": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "DUP4",
      "path": "12"
    },
    "9892": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "AND",
      "path": "12"
    },
    "9893": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "DUP2",
      "path": "12"
    },
    "9894": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "OR",
      "path": "12"
    },
    "9895": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "9896": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "9897": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "9898": {
      "fn": "Ownable._setOwner",
      "offset": [
        2226,
        2266
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 92,
      "value": "0x40"
    },
    "9900": {
      "fn": "Ownable._setOwner",
      "offset": [
        2226,
        2266
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "9901": {
      "fn": "Ownable._setOwner",
      "offset": [
        2176,
        2182
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "9902": {
      "fn": "Ownable._setOwner",
      "offset": [
        2176,
        2182
      ],
      "op": "AND",
      "path": "12"
    },
    "9903": {
      "fn": "Ownable._setOwner",
      "offset": [
        2176,
        2182
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "9904": {
      "fn": "Ownable._setOwner",
      "offset": [
        2193,
        2210
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "9905": {
      "fn": "Ownable._setOwner",
      "offset": [
        2176,
        2182
      ],
      "op": "DUP3",
      "path": "12"
    },
    "9906": {
      "fn": "Ownable._setOwner",
      "offset": [
        2176,
        2182
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "9907": {
      "fn": "Ownable._setOwner",
      "offset": [
        2226,
        2266
      ],
      "op": "PUSH32",
      "path": "12",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "9940": {
      "fn": "Ownable._setOwner",
      "offset": [
        2226,
        2266
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "9941": {
      "fn": "Ownable._setOwner",
      "offset": [
        2157,
        2173
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "9943": {
      "fn": "Ownable._setOwner",
      "offset": [
        2157,
        2173
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "9944": {
      "fn": "Ownable._setOwner",
      "offset": [
        2226,
        2266
      ],
      "op": "LOG3",
      "path": "12"
    },
    "9945": {
      "fn": "Ownable._setOwner",
      "offset": [
        2146,
        2274
      ],
      "op": "POP",
      "path": "12"
    },
    "9946": {
      "fn": "Ownable._setOwner",
      "offset": [
        2101,
        2274
      ],
      "op": "POP",
      "path": "12"
    },
    "9947": {
      "fn": "Ownable._setOwner",
      "jump": "o",
      "offset": [
        2101,
        2274
      ],
      "op": "JUMP",
      "path": "12"
    },
    "9948": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4598,
        4922
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "9949": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4676,
        4689
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "9951": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4750,
        4760
      ],
      "op": "DUP1",
      "path": "1"
    },
    "9952": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4763,
        4829
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x26FF"
    },
    "9955": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4804,
        4828
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x26EB"
    },
    "9958": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4822,
        4827
      ],
      "op": "DUP5",
      "path": "1"
    },
    "9959": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4804,
        4821
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x274D"
    },
    "9962": {
      "fn": "DoubleEndedQueue.at",
      "jump": "i",
      "offset": [
        4804,
        4828
      ],
      "op": "JUMP",
      "path": "1"
    },
    "9963": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4804,
        4828
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "9964": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4788,
        4800
      ],
      "op": "DUP6",
      "path": "1"
    },
    "9965": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4788,
        4800
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "9966": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4781,
        4828
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x26FA"
    },
    "9969": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4781,
        4828
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "9970": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4781,
        4828
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9971": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4788,
        4800
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xF"
    },
    "9973": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4788,
        4800
      ],
      "op": "SIGNEXTEND",
      "path": "1"
    },
    "9974": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4781,
        4828
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x35ED"
    },
    "9977": {
      "fn": "DoubleEndedQueue.at",
      "jump": "i",
      "offset": [
        4781,
        4828
      ],
      "op": "JUMP",
      "path": "1"
    },
    "9978": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4781,
        4828
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "9979": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4763,
        4780
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x27BB"
    },
    "9982": {
      "fn": "DoubleEndedQueue.at",
      "jump": "i",
      "offset": [
        4763,
        4829
      ],
      "op": "JUMP",
      "path": "1"
    },
    "9983": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4763,
        4829
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "9984": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4850,
        4860
      ],
      "op": "DUP5",
      "path": "1",
      "statement": 93
    },
    "9985": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4850,
        4860
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "9986": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4750,
        4829
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9987": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4750,
        4829
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "9988": {
      "op": "POP"
    },
    "9989": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9991": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "9993": {
      "op": "SHL"
    },
    "9994": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4850,
        4860
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9995": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4850,
        4860
      ],
      "op": "DIV",
      "path": "1"
    },
    "9996": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4850,
        4860
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xF"
    },
    "9998": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4850,
        4860
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9999": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4850,
        4860
      ],
      "op": "DUP2",
      "path": "1"
    },
    "10000": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4850,
        4860
      ],
      "op": "SIGNEXTEND",
      "path": "1"
    },
    "10001": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4843,
        4860
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "10002": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4843,
        4860
      ],
      "op": "DUP3",
      "path": "1"
    },
    "10003": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4843,
        4860
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "10004": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4843,
        4860
      ],
      "op": "SIGNEXTEND",
      "path": "1"
    },
    "10005": {
      "branch": 136,
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4843,
        4860
      ],
      "op": "SLT",
      "path": "1"
    },
    "10006": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4839,
        4882
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2732"
    },
    "10009": {
      "branch": 136,
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4839,
        4882
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "10010": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4869,
        4882
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "10012": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4869,
        4882
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "10013": {
      "op": "PUSH4",
      "value": "0x2D0483C5"
    },
    "10018": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "10020": {
      "op": "SHL"
    },
    "10021": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4869,
        4882
      ],
      "op": "DUP2",
      "path": "1"
    },
    "10022": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4869,
        4882
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "10023": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4869,
        4882
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "10025": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4869,
        4882
      ],
      "op": "ADD",
      "path": "1"
    },
    "10026": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4869,
        4882
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "10028": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4869,
        4882
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "10029": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4869,
        4882
      ],
      "op": "DUP1",
      "path": "1"
    },
    "10030": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4869,
        4882
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "10031": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4869,
        4882
      ],
      "op": "SUB",
      "path": "1"
    },
    "10032": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4869,
        4882
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "10033": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4869,
        4882
      ],
      "op": "REVERT",
      "path": "1"
    },
    "10034": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4839,
        4882
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "10035": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4915
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 94,
      "value": "0xF"
    },
    "10037": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4915
      ],
      "op": "SIGNEXTEND",
      "path": "1"
    },
    "10038": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4915
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "10040": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4915
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "10041": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4915
      ],
      "op": "DUP2",
      "path": "1"
    },
    "10042": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4915
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "10043": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4910
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "10045": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4910
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "10046": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4910
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "10047": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4910
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "10048": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4910
      ],
      "op": "ADD",
      "path": "1"
    },
    "10049": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4915
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "10051": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4915
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "10052": {
      "op": "POP"
    },
    "10053": {
      "op": "POP"
    },
    "10054": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4915
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "10056": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4915
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "10057": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4915
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "10058": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4915
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "10059": {
      "fn": "DoubleEndedQueue.at",
      "offset": [
        4899,
        4915
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "10060": {
      "fn": "DoubleEndedQueue.at",
      "jump": "o",
      "offset": [
        4598,
        4922
      ],
      "op": "JUMP",
      "path": "1"
    },
    "10061": {
      "fn": "SafeCast.toInt256",
      "offset": [
        35228,
        35525
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10062": {
      "fn": "SafeCast.toInt256",
      "offset": [
        35284,
        35290
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "10064": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10066": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10068": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "10070": {
      "op": "SHL"
    },
    "10071": {
      "op": "SUB"
    },
    "10072": {
      "fn": "SafeCast.toInt256",
      "offset": [
        35409,
        35414
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 95
    },
    "10073": {
      "fn": "SafeCast.toInt256",
      "offset": [
        35409,
        35443
      ],
      "op": "GT",
      "path": "0"
    },
    "10074": {
      "branch": 138,
      "fn": "SafeCast.toInt256",
      "offset": [
        35409,
        35443
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "10075": {
      "fn": "SafeCast.toInt256",
      "offset": [
        35401,
        35488
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x27B7"
    },
    "10078": {
      "branch": 138,
      "fn": "SafeCast.toInt256",
      "offset": [
        35401,
        35488
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "10079": {
      "fn": "SafeCast.toInt256",
      "offset": [
        35401,
        35488
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "10081": {
      "fn": "SafeCast.toInt256",
      "offset": [
        35401,
        35488
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "10082": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10086": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10088": {
      "op": "SHL"
    },
    "10089": {
      "fn": "SafeCast.toInt256",
      "offset": [
        35401,
        35488
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10090": {
      "fn": "SafeCast.toInt256",
      "offset": [
        35401,
        35488
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "10091": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10093": {
      "fn": "SafeCast.toInt256",
      "offset": [
        35401,
        35488
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "10095": {
      "fn": "SafeCast.toInt256",
      "offset": [
        35401,
        35488
      ],
      "op": "DUP3",
      "path": "0"
    },
    "10096": {
      "fn": "SafeCast.toInt256",
      "offset": [
        35401,
        35488
      ],
      "op": "ADD",
      "path": "0"
    },
    "10097": {
      "op": "MSTORE"
    },
    "10098": {
      "op": "PUSH1",
      "value": "0x28"
    },
    "10100": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10102": {
      "op": "DUP3"
    },
    "10103": {
      "op": "ADD"
    },
    "10104": {
      "op": "MSTORE"
    },
    "10105": {
      "op": "PUSH32",
      "value": "0x53616665436173743A2076616C756520646F65736E27742066697420696E2061"
    },
    "10138": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "10140": {
      "op": "DUP3"
    },
    "10141": {
      "op": "ADD"
    },
    "10142": {
      "op": "MSTORE"
    },
    "10143": {
      "op": "PUSH8",
      "value": "0x371034B73A191A9B"
    },
    "10152": {
      "op": "PUSH1",
      "value": "0xC1"
    },
    "10154": {
      "op": "SHL"
    },
    "10155": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "10157": {
      "op": "DUP3"
    },
    "10158": {
      "op": "ADD"
    },
    "10159": {
      "op": "MSTORE"
    },
    "10160": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "10162": {
      "op": "ADD"
    },
    "10163": {
      "fn": "SafeCast.toInt256",
      "offset": [
        35401,
        35488
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x807"
    },
    "10166": {
      "op": "JUMP"
    },
    "10167": {
      "fn": "SafeCast.toInt256",
      "offset": [
        35401,
        35488
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10168": {
      "op": "POP"
    },
    "10169": {
      "fn": "SafeCast.toInt256",
      "offset": [
        35512,
        35517
      ],
      "op": "SWAP1",
      "path": "0",
      "statement": 96
    },
    "10170": {
      "fn": "SafeCast.toInt256",
      "jump": "o",
      "offset": [
        35228,
        35525
      ],
      "op": "JUMP",
      "path": "0"
    },
    "10171": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26286,
        26502
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10172": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26341,
        26347
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "10174": {
      "op": "PUSH16",
      "value": "0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "10191": {
      "op": "NOT"
    },
    "10192": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26367,
        26392
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 97
    },
    "10193": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26367,
        26392
      ],
      "op": "SLT",
      "path": "0"
    },
    "10194": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26367,
        26392
      ],
      "op": "DUP1",
      "path": "0"
    },
    "10195": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26367,
        26392
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "10196": {
      "branch": 139,
      "fn": "SafeCast.toInt128",
      "offset": [
        26367,
        26392
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10197": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26367,
        26421
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x27EE"
    },
    "10200": {
      "branch": 139,
      "fn": "SafeCast.toInt128",
      "offset": [
        26367,
        26421
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "10201": {
      "op": "POP"
    },
    "10202": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26405,
        26421
      ],
      "op": "PUSH16",
      "path": "0",
      "value": "0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "10219": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26396,
        26421
      ],
      "op": "DUP3",
      "path": "0"
    },
    "10220": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26396,
        26421
      ],
      "op": "SGT",
      "path": "0"
    },
    "10221": {
      "branch": 140,
      "fn": "SafeCast.toInt128",
      "offset": [
        26396,
        26421
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "10222": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26367,
        26421
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10223": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26359,
        26465
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x27B7"
    },
    "10226": {
      "branch": 140,
      "fn": "SafeCast.toInt128",
      "offset": [
        26359,
        26465
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "10227": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26359,
        26465
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "10229": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26359,
        26465
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "10230": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10234": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10236": {
      "op": "SHL"
    },
    "10237": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26359,
        26465
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10238": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26359,
        26465
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "10239": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10241": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26359,
        26465
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "10243": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26359,
        26465
      ],
      "op": "DUP3",
      "path": "0"
    },
    "10244": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26359,
        26465
      ],
      "op": "ADD",
      "path": "0"
    },
    "10245": {
      "op": "MSTORE"
    },
    "10246": {
      "op": "PUSH1",
      "value": "0x27"
    },
    "10248": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10250": {
      "op": "DUP3"
    },
    "10251": {
      "op": "ADD"
    },
    "10252": {
      "op": "MSTORE"
    },
    "10253": {
      "op": "PUSH32",
      "value": "0x53616665436173743A2076616C756520646F65736E27742066697420696E2031"
    },
    "10286": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "10288": {
      "op": "DUP3"
    },
    "10289": {
      "op": "ADD"
    },
    "10290": {
      "op": "MSTORE"
    },
    "10291": {
      "op": "PUSH7",
      "value": "0x32382062697473"
    },
    "10299": {
      "op": "PUSH1",
      "value": "0xC8"
    },
    "10301": {
      "op": "SHL"
    },
    "10302": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "10304": {
      "op": "DUP3"
    },
    "10305": {
      "op": "ADD"
    },
    "10306": {
      "op": "MSTORE"
    },
    "10307": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "10309": {
      "op": "ADD"
    },
    "10310": {
      "fn": "SafeCast.toInt128",
      "offset": [
        26359,
        26465
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x807"
    },
    "10313": {
      "op": "JUMP"
    },
    "10314": {
      "op": "JUMPDEST"
    },
    "10315": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10317": {
      "op": "DUP1"
    },
    "10318": {
      "op": "MLOAD"
    },
    "10319": {
      "op": "PUSH2",
      "value": "0x140"
    },
    "10322": {
      "op": "DUP2"
    },
    "10323": {
      "op": "ADD"
    },
    "10324": {
      "op": "DUP3"
    },
    "10325": {
      "op": "MSTORE"
    },
    "10326": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10328": {
      "op": "DUP1"
    },
    "10329": {
      "op": "DUP3"
    },
    "10330": {
      "op": "MSTORE"
    },
    "10331": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10333": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10335": {
      "op": "DUP4"
    },
    "10336": {
      "op": "ADD"
    },
    "10337": {
      "op": "DUP2"
    },
    "10338": {
      "op": "SWAP1"
    },
    "10339": {
      "op": "MSTORE"
    },
    "10340": {
      "op": "SWAP3"
    },
    "10341": {
      "op": "DUP3"
    },
    "10342": {
      "op": "ADD"
    },
    "10343": {
      "op": "DUP4"
    },
    "10344": {
      "op": "SWAP1"
    },
    "10345": {
      "op": "MSTORE"
    },
    "10346": {
      "op": "DUP2"
    },
    "10347": {
      "op": "ADD"
    },
    "10348": {
      "op": "DUP3"
    },
    "10349": {
      "op": "SWAP1"
    },
    "10350": {
      "op": "MSTORE"
    },
    "10351": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "10353": {
      "op": "DUP2"
    },
    "10354": {
      "op": "ADD"
    },
    "10355": {
      "op": "DUP3"
    },
    "10356": {
      "op": "SWAP1"
    },
    "10357": {
      "op": "MSTORE"
    },
    "10358": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10360": {
      "op": "DUP2"
    },
    "10361": {
      "op": "ADD"
    },
    "10362": {
      "op": "DUP3"
    },
    "10363": {
      "op": "SWAP1"
    },
    "10364": {
      "op": "MSTORE"
    },
    "10365": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "10367": {
      "op": "DUP2"
    },
    "10368": {
      "op": "ADD"
    },
    "10369": {
      "op": "DUP3"
    },
    "10370": {
      "op": "SWAP1"
    },
    "10371": {
      "op": "MSTORE"
    },
    "10372": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10374": {
      "op": "DUP2"
    },
    "10375": {
      "op": "ADD"
    },
    "10376": {
      "op": "DUP3"
    },
    "10377": {
      "op": "SWAP1"
    },
    "10378": {
      "op": "MSTORE"
    },
    "10379": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "10382": {
      "op": "DUP2"
    },
    "10383": {
      "op": "ADD"
    },
    "10384": {
      "op": "DUP3"
    },
    "10385": {
      "op": "SWAP1"
    },
    "10386": {
      "op": "MSTORE"
    },
    "10387": {
      "op": "PUSH2",
      "value": "0x120"
    },
    "10390": {
      "op": "DUP2"
    },
    "10391": {
      "op": "ADD"
    },
    "10392": {
      "op": "SWAP2"
    },
    "10393": {
      "op": "SWAP1"
    },
    "10394": {
      "op": "SWAP2"
    },
    "10395": {
      "op": "MSTORE"
    },
    "10396": {
      "op": "SWAP1"
    },
    "10397": {
      "jump": "o",
      "op": "JUMP"
    },
    "10398": {
      "op": "JUMPDEST"
    },
    "10399": {
      "op": "POP"
    },
    "10400": {
      "op": "DUP1"
    },
    "10401": {
      "op": "SLOAD"
    },
    "10402": {
      "op": "PUSH2",
      "value": "0x28AA"
    },
    "10405": {
      "op": "SWAP1"
    },
    "10406": {
      "op": "PUSH2",
      "value": "0x3084"
    },
    "10409": {
      "jump": "i",
      "op": "JUMP"
    },
    "10410": {
      "op": "JUMPDEST"
    },
    "10411": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10413": {
      "op": "DUP3"
    },
    "10414": {
      "op": "SSTORE"
    },
    "10415": {
      "op": "DUP1"
    },
    "10416": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "10418": {
      "op": "LT"
    },
    "10419": {
      "op": "PUSH2",
      "value": "0x28BA"
    },
    "10422": {
      "op": "JUMPI"
    },
    "10423": {
      "op": "POP"
    },
    "10424": {
      "op": "POP"
    },
    "10425": {
      "jump": "o",
      "op": "JUMP"
    },
    "10426": {
      "op": "JUMPDEST"
    },
    "10427": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "10429": {
      "op": "ADD"
    },
    "10430": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10432": {
      "op": "SWAP1"
    },
    "10433": {
      "op": "DIV"
    },
    "10434": {
      "op": "SWAP1"
    },
    "10435": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10437": {
      "op": "MSTORE"
    },
    "10438": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10440": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10442": {
      "op": "KECCAK256"
    },
    "10443": {
      "op": "SWAP1"
    },
    "10444": {
      "op": "DUP2"
    },
    "10445": {
      "op": "ADD"
    },
    "10446": {
      "op": "SWAP1"
    },
    "10447": {
      "op": "PUSH2",
      "value": "0x21B4"
    },
    "10450": {
      "op": "SWAP2"
    },
    "10451": {
      "op": "SWAP1"
    },
    "10452": {
      "op": "JUMPDEST"
    },
    "10453": {
      "op": "DUP1"
    },
    "10454": {
      "op": "DUP3"
    },
    "10455": {
      "op": "GT"
    },
    "10456": {
      "op": "ISZERO"
    },
    "10457": {
      "op": "PUSH2",
      "value": "0x27B7"
    },
    "10460": {
      "op": "JUMPI"
    },
    "10461": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10463": {
      "op": "DUP2"
    },
    "10464": {
      "op": "SSTORE"
    },
    "10465": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10467": {
      "op": "ADD"
    },
    "10468": {
      "op": "PUSH2",
      "value": "0x28D4"
    },
    "10471": {
      "op": "JUMP"
    },
    "10472": {
      "op": "JUMPDEST"
    },
    "10473": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10475": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10477": {
      "op": "DUP3"
    },
    "10478": {
      "op": "DUP5"
    },
    "10479": {
      "op": "SUB"
    },
    "10480": {
      "op": "SLT"
    },
    "10481": {
      "op": "ISZERO"
    },
    "10482": {
      "op": "PUSH2",
      "value": "0x28FA"
    },
    "10485": {
      "op": "JUMPI"
    },
    "10486": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10488": {
      "op": "DUP1"
    },
    "10489": {
      "op": "REVERT"
    },
    "10490": {
      "op": "JUMPDEST"
    },
    "10491": {
      "op": "POP"
    },
    "10492": {
      "op": "CALLDATALOAD"
    },
    "10493": {
      "op": "SWAP2"
    },
    "10494": {
      "op": "SWAP1"
    },
    "10495": {
      "op": "POP"
    },
    "10496": {
      "jump": "o",
      "op": "JUMP"
    },
    "10497": {
      "op": "JUMPDEST"
    },
    "10498": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10500": {
      "op": "JUMPDEST"
    },
    "10501": {
      "op": "DUP4"
    },
    "10502": {
      "op": "DUP2"
    },
    "10503": {
      "op": "LT"
    },
    "10504": {
      "op": "ISZERO"
    },
    "10505": {
      "op": "PUSH2",
      "value": "0x291C"
    },
    "10508": {
      "op": "JUMPI"
    },
    "10509": {
      "op": "DUP2"
    },
    "10510": {
      "op": "DUP2"
    },
    "10511": {
      "op": "ADD"
    },
    "10512": {
      "op": "MLOAD"
    },
    "10513": {
      "op": "DUP4"
    },
    "10514": {
      "op": "DUP3"
    },
    "10515": {
      "op": "ADD"
    },
    "10516": {
      "op": "MSTORE"
    },
    "10517": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10519": {
      "op": "ADD"
    },
    "10520": {
      "op": "PUSH2",
      "value": "0x2904"
    },
    "10523": {
      "op": "JUMP"
    },
    "10524": {
      "op": "JUMPDEST"
    },
    "10525": {
      "op": "DUP4"
    },
    "10526": {
      "op": "DUP2"
    },
    "10527": {
      "op": "GT"
    },
    "10528": {
      "op": "ISZERO"
    },
    "10529": {
      "op": "PUSH2",
      "value": "0xCAC"
    },
    "10532": {
      "op": "JUMPI"
    },
    "10533": {
      "op": "POP"
    },
    "10534": {
      "op": "POP"
    },
    "10535": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10537": {
      "op": "SWAP2"
    },
    "10538": {
      "op": "ADD"
    },
    "10539": {
      "op": "MSTORE"
    },
    "10540": {
      "jump": "o",
      "op": "JUMP"
    },
    "10541": {
      "op": "JUMPDEST"
    },
    "10542": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10544": {
      "op": "DUP2"
    },
    "10545": {
      "op": "MLOAD"
    },
    "10546": {
      "op": "DUP1"
    },
    "10547": {
      "op": "DUP5"
    },
    "10548": {
      "op": "MSTORE"
    },
    "10549": {
      "op": "PUSH2",
      "value": "0x2945"
    },
    "10552": {
      "op": "DUP2"
    },
    "10553": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10555": {
      "op": "DUP7"
    },
    "10556": {
      "op": "ADD"
    },
    "10557": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10559": {
      "op": "DUP7"
    },
    "10560": {
      "op": "ADD"
    },
    "10561": {
      "op": "PUSH2",
      "value": "0x2901"
    },
    "10564": {
      "jump": "i",
      "op": "JUMP"
    },
    "10565": {
      "op": "JUMPDEST"
    },
    "10566": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "10568": {
      "op": "ADD"
    },
    "10569": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "10571": {
      "op": "NOT"
    },
    "10572": {
      "op": "AND"
    },
    "10573": {
      "op": "SWAP3"
    },
    "10574": {
      "op": "SWAP1"
    },
    "10575": {
      "op": "SWAP3"
    },
    "10576": {
      "op": "ADD"
    },
    "10577": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10579": {
      "op": "ADD"
    },
    "10580": {
      "op": "SWAP3"
    },
    "10581": {
      "op": "SWAP2"
    },
    "10582": {
      "op": "POP"
    },
    "10583": {
      "op": "POP"
    },
    "10584": {
      "jump": "o",
      "op": "JUMP"
    },
    "10585": {
      "op": "JUMPDEST"
    },
    "10586": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10588": {
      "op": "DUP2"
    },
    "10589": {
      "op": "MSTORE"
    },
    "10590": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10592": {
      "op": "PUSH2",
      "value": "0x296C"
    },
    "10595": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10597": {
      "op": "DUP4"
    },
    "10598": {
      "op": "ADD"
    },
    "10599": {
      "op": "DUP9"
    },
    "10600": {
      "op": "PUSH2",
      "value": "0x292D"
    },
    "10603": {
      "jump": "i",
      "op": "JUMP"
    },
    "10604": {
      "op": "JUMPDEST"
    },
    "10605": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "10608": {
      "op": "SWAP7"
    },
    "10609": {
      "op": "SWAP1"
    },
    "10610": {
      "op": "SWAP7"
    },
    "10611": {
      "op": "AND"
    },
    "10612": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10614": {
      "op": "DUP4"
    },
    "10615": {
      "op": "ADD"
    },
    "10616": {
      "op": "MSTORE"
    },
    "10617": {
      "op": "POP"
    },
    "10618": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "10624": {
      "op": "SWAP4"
    },
    "10625": {
      "op": "DUP5"
    },
    "10626": {
      "op": "AND"
    },
    "10627": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10629": {
      "op": "DUP3"
    },
    "10630": {
      "op": "ADD"
    },
    "10631": {
      "op": "MSTORE"
    },
    "10632": {
      "op": "SWAP2"
    },
    "10633": {
      "op": "DUP4"
    },
    "10634": {
      "op": "AND"
    },
    "10635": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10637": {
      "op": "DUP4"
    },
    "10638": {
      "op": "ADD"
    },
    "10639": {
      "op": "MSTORE"
    },
    "10640": {
      "op": "SWAP1"
    },
    "10641": {
      "op": "SWAP2"
    },
    "10642": {
      "op": "AND"
    },
    "10643": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "10645": {
      "op": "SWAP1"
    },
    "10646": {
      "op": "SWAP2"
    },
    "10647": {
      "op": "ADD"
    },
    "10648": {
      "op": "MSTORE"
    },
    "10649": {
      "op": "SWAP2"
    },
    "10650": {
      "op": "SWAP1"
    },
    "10651": {
      "op": "POP"
    },
    "10652": {
      "jump": "o",
      "op": "JUMP"
    },
    "10653": {
      "op": "JUMPDEST"
    },
    "10654": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "10659": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10661": {
      "op": "SHL"
    },
    "10662": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10664": {
      "op": "MSTORE"
    },
    "10665": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "10667": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "10669": {
      "op": "MSTORE"
    },
    "10670": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10672": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10674": {
      "op": "REVERT"
    },
    "10675": {
      "op": "JUMPDEST"
    },
    "10676": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10678": {
      "op": "MLOAD"
    },
    "10679": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "10681": {
      "op": "DUP3"
    },
    "10682": {
      "op": "ADD"
    },
    "10683": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "10685": {
      "op": "NOT"
    },
    "10686": {
      "op": "AND"
    },
    "10687": {
      "op": "DUP2"
    },
    "10688": {
      "op": "ADD"
    },
    "10689": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10691": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10693": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10695": {
      "op": "SHL"
    },
    "10696": {
      "op": "SUB"
    },
    "10697": {
      "op": "DUP2"
    },
    "10698": {
      "op": "GT"
    },
    "10699": {
      "op": "DUP3"
    },
    "10700": {
      "op": "DUP3"
    },
    "10701": {
      "op": "LT"
    },
    "10702": {
      "op": "OR"
    },
    "10703": {
      "op": "ISZERO"
    },
    "10704": {
      "op": "PUSH2",
      "value": "0x29DB"
    },
    "10707": {
      "op": "JUMPI"
    },
    "10708": {
      "op": "PUSH2",
      "value": "0x29DB"
    },
    "10711": {
      "op": "PUSH2",
      "value": "0x299D"
    },
    "10714": {
      "jump": "i",
      "op": "JUMP"
    },
    "10715": {
      "op": "JUMPDEST"
    },
    "10716": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10718": {
      "op": "MSTORE"
    },
    "10719": {
      "op": "SWAP2"
    },
    "10720": {
      "op": "SWAP1"
    },
    "10721": {
      "op": "POP"
    },
    "10722": {
      "jump": "o",
      "op": "JUMP"
    },
    "10723": {
      "op": "JUMPDEST"
    },
    "10724": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10726": {
      "op": "DUP3"
    },
    "10727": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "10729": {
      "op": "DUP4"
    },
    "10730": {
      "op": "ADD"
    },
    "10731": {
      "op": "SLT"
    },
    "10732": {
      "op": "PUSH2",
      "value": "0x29F4"
    },
    "10735": {
      "op": "JUMPI"
    },
    "10736": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10738": {
      "op": "DUP1"
    },
    "10739": {
      "op": "REVERT"
    },
    "10740": {
      "op": "JUMPDEST"
    },
    "10741": {
      "op": "DUP2"
    },
    "10742": {
      "op": "CALLDATALOAD"
    },
    "10743": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10745": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10747": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10749": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10751": {
      "op": "SHL"
    },
    "10752": {
      "op": "SUB"
    },
    "10753": {
      "op": "DUP3"
    },
    "10754": {
      "op": "GT"
    },
    "10755": {
      "op": "ISZERO"
    },
    "10756": {
      "op": "PUSH2",
      "value": "0x2A0F"
    },
    "10759": {
      "op": "JUMPI"
    },
    "10760": {
      "op": "PUSH2",
      "value": "0x2A0F"
    },
    "10763": {
      "op": "PUSH2",
      "value": "0x299D"
    },
    "10766": {
      "jump": "i",
      "op": "JUMP"
    },
    "10767": {
      "op": "JUMPDEST"
    },
    "10768": {
      "op": "DUP2"
    },
    "10769": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "10771": {
      "op": "SHL"
    },
    "10772": {
      "op": "PUSH2",
      "value": "0x2A1E"
    },
    "10775": {
      "op": "DUP3"
    },
    "10776": {
      "op": "DUP3"
    },
    "10777": {
      "op": "ADD"
    },
    "10778": {
      "op": "PUSH2",
      "value": "0x29B3"
    },
    "10781": {
      "jump": "i",
      "op": "JUMP"
    },
    "10782": {
      "op": "JUMPDEST"
    },
    "10783": {
      "op": "SWAP3"
    },
    "10784": {
      "op": "DUP4"
    },
    "10785": {
      "op": "MSTORE"
    },
    "10786": {
      "op": "DUP5"
    },
    "10787": {
      "op": "DUP2"
    },
    "10788": {
      "op": "ADD"
    },
    "10789": {
      "op": "DUP3"
    },
    "10790": {
      "op": "ADD"
    },
    "10791": {
      "op": "SWAP3"
    },
    "10792": {
      "op": "DUP3"
    },
    "10793": {
      "op": "DUP2"
    },
    "10794": {
      "op": "ADD"
    },
    "10795": {
      "op": "SWAP1"
    },
    "10796": {
      "op": "DUP8"
    },
    "10797": {
      "op": "DUP6"
    },
    "10798": {
      "op": "GT"
    },
    "10799": {
      "op": "ISZERO"
    },
    "10800": {
      "op": "PUSH2",
      "value": "0x2A38"
    },
    "10803": {
      "op": "JUMPI"
    },
    "10804": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10806": {
      "op": "DUP1"
    },
    "10807": {
      "op": "REVERT"
    },
    "10808": {
      "op": "JUMPDEST"
    },
    "10809": {
      "op": "DUP4"
    },
    "10810": {
      "op": "DUP8"
    },
    "10811": {
      "op": "ADD"
    },
    "10812": {
      "op": "SWAP3"
    },
    "10813": {
      "op": "POP"
    },
    "10814": {
      "op": "JUMPDEST"
    },
    "10815": {
      "op": "DUP5"
    },
    "10816": {
      "op": "DUP4"
    },
    "10817": {
      "op": "LT"
    },
    "10818": {
      "op": "ISZERO"
    },
    "10819": {
      "op": "PUSH2",
      "value": "0x2A57"
    },
    "10822": {
      "op": "JUMPI"
    },
    "10823": {
      "op": "DUP3"
    },
    "10824": {
      "op": "CALLDATALOAD"
    },
    "10825": {
      "op": "DUP3"
    },
    "10826": {
      "op": "MSTORE"
    },
    "10827": {
      "op": "SWAP2"
    },
    "10828": {
      "op": "DUP4"
    },
    "10829": {
      "op": "ADD"
    },
    "10830": {
      "op": "SWAP2"
    },
    "10831": {
      "op": "SWAP1"
    },
    "10832": {
      "op": "DUP4"
    },
    "10833": {
      "op": "ADD"
    },
    "10834": {
      "op": "SWAP1"
    },
    "10835": {
      "op": "PUSH2",
      "value": "0x2A3E"
    },
    "10838": {
      "op": "JUMP"
    },
    "10839": {
      "op": "JUMPDEST"
    },
    "10840": {
      "op": "SWAP8"
    },
    "10841": {
      "op": "SWAP7"
    },
    "10842": {
      "op": "POP"
    },
    "10843": {
      "op": "POP"
    },
    "10844": {
      "op": "POP"
    },
    "10845": {
      "op": "POP"
    },
    "10846": {
      "op": "POP"
    },
    "10847": {
      "op": "POP"
    },
    "10848": {
      "op": "POP"
    },
    "10849": {
      "jump": "o",
      "op": "JUMP"
    },
    "10850": {
      "op": "JUMPDEST"
    },
    "10851": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10853": {
      "op": "DUP1"
    },
    "10854": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10856": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10858": {
      "op": "DUP5"
    },
    "10859": {
      "op": "DUP7"
    },
    "10860": {
      "op": "SUB"
    },
    "10861": {
      "op": "SLT"
    },
    "10862": {
      "op": "ISZERO"
    },
    "10863": {
      "op": "PUSH2",
      "value": "0x2A77"
    },
    "10866": {
      "op": "JUMPI"
    },
    "10867": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10869": {
      "op": "DUP1"
    },
    "10870": {
      "op": "REVERT"
    },
    "10871": {
      "op": "JUMPDEST"
    },
    "10872": {
      "op": "DUP4"
    },
    "10873": {
      "op": "CALLDATALOAD"
    },
    "10874": {
      "op": "SWAP3"
    },
    "10875": {
      "op": "POP"
    },
    "10876": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10878": {
      "op": "DUP5"
    },
    "10879": {
      "op": "ADD"
    },
    "10880": {
      "op": "CALLDATALOAD"
    },
    "10881": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10883": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10885": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10887": {
      "op": "SHL"
    },
    "10888": {
      "op": "SUB"
    },
    "10889": {
      "op": "DUP2"
    },
    "10890": {
      "op": "GT"
    },
    "10891": {
      "op": "ISZERO"
    },
    "10892": {
      "op": "PUSH2",
      "value": "0x2A94"
    },
    "10895": {
      "op": "JUMPI"
    },
    "10896": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10898": {
      "op": "DUP1"
    },
    "10899": {
      "op": "REVERT"
    },
    "10900": {
      "op": "JUMPDEST"
    },
    "10901": {
      "op": "PUSH2",
      "value": "0x2AA0"
    },
    "10904": {
      "op": "DUP7"
    },
    "10905": {
      "op": "DUP3"
    },
    "10906": {
      "op": "DUP8"
    },
    "10907": {
      "op": "ADD"
    },
    "10908": {
      "op": "PUSH2",
      "value": "0x29E3"
    },
    "10911": {
      "jump": "i",
      "op": "JUMP"
    },
    "10912": {
      "op": "JUMPDEST"
    },
    "10913": {
      "op": "SWAP3"
    },
    "10914": {
      "op": "POP"
    },
    "10915": {
      "op": "POP"
    },
    "10916": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10918": {
      "op": "DUP5"
    },
    "10919": {
      "op": "ADD"
    },
    "10920": {
      "op": "CALLDATALOAD"
    },
    "10921": {
      "op": "DUP1"
    },
    "10922": {
      "op": "ISZERO"
    },
    "10923": {
      "op": "ISZERO"
    },
    "10924": {
      "op": "DUP2"
    },
    "10925": {
      "op": "EQ"
    },
    "10926": {
      "op": "PUSH2",
      "value": "0x2AB6"
    },
    "10929": {
      "op": "JUMPI"
    },
    "10930": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10932": {
      "op": "DUP1"
    },
    "10933": {
      "op": "REVERT"
    },
    "10934": {
      "op": "JUMPDEST"
    },
    "10935": {
      "op": "DUP1"
    },
    "10936": {
      "op": "SWAP2"
    },
    "10937": {
      "op": "POP"
    },
    "10938": {
      "op": "POP"
    },
    "10939": {
      "op": "SWAP3"
    },
    "10940": {
      "op": "POP"
    },
    "10941": {
      "op": "SWAP3"
    },
    "10942": {
      "op": "POP"
    },
    "10943": {
      "op": "SWAP3"
    },
    "10944": {
      "jump": "o",
      "op": "JUMP"
    },
    "10945": {
      "op": "JUMPDEST"
    },
    "10946": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10948": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "10951": {
      "op": "DUP1"
    },
    "10952": {
      "op": "DUP4"
    },
    "10953": {
      "op": "MSTORE"
    },
    "10954": {
      "op": "PUSH2",
      "value": "0x2AD5"
    },
    "10957": {
      "op": "DUP2"
    },
    "10958": {
      "op": "DUP5"
    },
    "10959": {
      "op": "ADD"
    },
    "10960": {
      "op": "DUP13"
    },
    "10961": {
      "op": "PUSH2",
      "value": "0x292D"
    },
    "10964": {
      "jump": "i",
      "op": "JUMP"
    },
    "10965": {
      "op": "JUMPDEST"
    },
    "10966": {
      "op": "SWAP10"
    },
    "10967": {
      "op": "ISZERO"
    },
    "10968": {
      "op": "ISZERO"
    },
    "10969": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10971": {
      "op": "DUP5"
    },
    "10972": {
      "op": "ADD"
    },
    "10973": {
      "op": "MSTORE"
    },
    "10974": {
      "op": "POP"
    },
    "10975": {
      "op": "POP"
    },
    "10976": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "10982": {
      "op": "SWAP7"
    },
    "10983": {
      "op": "DUP8"
    },
    "10984": {
      "op": "AND"
    },
    "10985": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10987": {
      "op": "DUP3"
    },
    "10988": {
      "op": "ADD"
    },
    "10989": {
      "op": "MSTORE"
    },
    "10990": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "10992": {
      "op": "SWAP6"
    },
    "10993": {
      "op": "SWAP1"
    },
    "10994": {
      "op": "SWAP6"
    },
    "10995": {
      "op": "AND"
    },
    "10996": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10998": {
      "op": "DUP7"
    },
    "10999": {
      "op": "ADD"
    },
    "11000": {
      "op": "MSTORE"
    },
    "11001": {
      "op": "PUSH3",
      "value": "0xFFFFFF"
    },
    "11005": {
      "op": "SWAP4"
    },
    "11006": {
      "op": "SWAP1"
    },
    "11007": {
      "op": "SWAP4"
    },
    "11008": {
      "op": "AND"
    },
    "11009": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "11011": {
      "op": "DUP6"
    },
    "11012": {
      "op": "ADD"
    },
    "11013": {
      "op": "MSTORE"
    },
    "11014": {
      "op": "SWAP1"
    },
    "11015": {
      "op": "DUP5"
    },
    "11016": {
      "op": "AND"
    },
    "11017": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11019": {
      "op": "DUP5"
    },
    "11020": {
      "op": "ADD"
    },
    "11021": {
      "op": "MSTORE"
    },
    "11022": {
      "op": "SWAP1"
    },
    "11023": {
      "op": "SWAP3"
    },
    "11024": {
      "op": "AND"
    },
    "11025": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "11027": {
      "op": "DUP3"
    },
    "11028": {
      "op": "ADD"
    },
    "11029": {
      "op": "MSTORE"
    },
    "11030": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "11033": {
      "op": "SWAP1"
    },
    "11034": {
      "op": "SWAP2"
    },
    "11035": {
      "op": "AND"
    },
    "11036": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "11038": {
      "op": "SWAP1"
    },
    "11039": {
      "op": "SWAP2"
    },
    "11040": {
      "op": "ADD"
    },
    "11041": {
      "op": "MSTORE"
    },
    "11042": {
      "op": "SWAP2"
    },
    "11043": {
      "op": "SWAP1"
    },
    "11044": {
      "op": "POP"
    },
    "11045": {
      "jump": "o",
      "op": "JUMP"
    },
    "11046": {
      "op": "JUMPDEST"
    },
    "11047": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11049": {
      "op": "DUP1"
    },
    "11050": {
      "op": "DUP4"
    },
    "11051": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "11053": {
      "op": "DUP5"
    },
    "11054": {
      "op": "ADD"
    },
    "11055": {
      "op": "SLT"
    },
    "11056": {
      "op": "PUSH2",
      "value": "0x2B38"
    },
    "11059": {
      "op": "JUMPI"
    },
    "11060": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11062": {
      "op": "DUP1"
    },
    "11063": {
      "op": "REVERT"
    },
    "11064": {
      "op": "JUMPDEST"
    },
    "11065": {
      "op": "POP"
    },
    "11066": {
      "op": "DUP2"
    },
    "11067": {
      "op": "CALLDATALOAD"
    },
    "11068": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11070": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11072": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11074": {
      "op": "SHL"
    },
    "11075": {
      "op": "SUB"
    },
    "11076": {
      "op": "DUP2"
    },
    "11077": {
      "op": "GT"
    },
    "11078": {
      "op": "ISZERO"
    },
    "11079": {
      "op": "PUSH2",
      "value": "0x2B4F"
    },
    "11082": {
      "op": "JUMPI"
    },
    "11083": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11085": {
      "op": "DUP1"
    },
    "11086": {
      "op": "REVERT"
    },
    "11087": {
      "op": "JUMPDEST"
    },
    "11088": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11090": {
      "op": "DUP4"
    },
    "11091": {
      "op": "ADD"
    },
    "11092": {
      "op": "SWAP2"
    },
    "11093": {
      "op": "POP"
    },
    "11094": {
      "op": "DUP4"
    },
    "11095": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11097": {
      "op": "DUP3"
    },
    "11098": {
      "op": "DUP6"
    },
    "11099": {
      "op": "ADD"
    },
    "11100": {
      "op": "ADD"
    },
    "11101": {
      "op": "GT"
    },
    "11102": {
      "op": "ISZERO"
    },
    "11103": {
      "op": "PUSH2",
      "value": "0x2B67"
    },
    "11106": {
      "op": "JUMPI"
    },
    "11107": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11109": {
      "op": "DUP1"
    },
    "11110": {
      "op": "REVERT"
    },
    "11111": {
      "op": "JUMPDEST"
    },
    "11112": {
      "op": "SWAP3"
    },
    "11113": {
      "op": "POP"
    },
    "11114": {
      "op": "SWAP3"
    },
    "11115": {
      "op": "SWAP1"
    },
    "11116": {
      "op": "POP"
    },
    "11117": {
      "jump": "o",
      "op": "JUMP"
    },
    "11118": {
      "op": "JUMPDEST"
    },
    "11119": {
      "op": "DUP1"
    },
    "11120": {
      "op": "CALLDATALOAD"
    },
    "11121": {
      "op": "PUSH3",
      "value": "0xFFFFFF"
    },
    "11125": {
      "op": "DUP2"
    },
    "11126": {
      "op": "AND"
    },
    "11127": {
      "op": "DUP2"
    },
    "11128": {
      "op": "EQ"
    },
    "11129": {
      "op": "PUSH2",
      "value": "0x2B81"
    },
    "11132": {
      "op": "JUMPI"
    },
    "11133": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11135": {
      "op": "DUP1"
    },
    "11136": {
      "op": "REVERT"
    },
    "11137": {
      "op": "JUMPDEST"
    },
    "11138": {
      "op": "SWAP2"
    },
    "11139": {
      "op": "SWAP1"
    },
    "11140": {
      "op": "POP"
    },
    "11141": {
      "jump": "o",
      "op": "JUMP"
    },
    "11142": {
      "op": "JUMPDEST"
    },
    "11143": {
      "op": "DUP1"
    },
    "11144": {
      "op": "CALLDATALOAD"
    },
    "11145": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "11151": {
      "op": "DUP2"
    },
    "11152": {
      "op": "AND"
    },
    "11153": {
      "op": "DUP2"
    },
    "11154": {
      "op": "EQ"
    },
    "11155": {
      "op": "PUSH2",
      "value": "0x2B81"
    },
    "11158": {
      "op": "JUMPI"
    },
    "11159": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11161": {
      "op": "DUP1"
    },
    "11162": {
      "op": "REVERT"
    },
    "11163": {
      "op": "JUMPDEST"
    },
    "11164": {
      "op": "DUP1"
    },
    "11165": {
      "op": "CALLDATALOAD"
    },
    "11166": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "11169": {
      "op": "DUP2"
    },
    "11170": {
      "op": "AND"
    },
    "11171": {
      "op": "DUP2"
    },
    "11172": {
      "op": "EQ"
    },
    "11173": {
      "op": "PUSH2",
      "value": "0x2B81"
    },
    "11176": {
      "op": "JUMPI"
    },
    "11177": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11179": {
      "op": "DUP1"
    },
    "11180": {
      "op": "REVERT"
    },
    "11181": {
      "op": "JUMPDEST"
    },
    "11182": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11184": {
      "op": "DUP1"
    },
    "11185": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11187": {
      "op": "DUP1"
    },
    "11188": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11190": {
      "op": "DUP1"
    },
    "11191": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11193": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "11195": {
      "op": "DUP9"
    },
    "11196": {
      "op": "DUP11"
    },
    "11197": {
      "op": "SUB"
    },
    "11198": {
      "op": "SLT"
    },
    "11199": {
      "op": "ISZERO"
    },
    "11200": {
      "op": "PUSH2",
      "value": "0x2BC8"
    },
    "11203": {
      "op": "JUMPI"
    },
    "11204": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11206": {
      "op": "DUP1"
    },
    "11207": {
      "op": "REVERT"
    },
    "11208": {
      "op": "JUMPDEST"
    },
    "11209": {
      "op": "DUP8"
    },
    "11210": {
      "op": "CALLDATALOAD"
    },
    "11211": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11213": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11215": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11217": {
      "op": "SHL"
    },
    "11218": {
      "op": "SUB"
    },
    "11219": {
      "op": "DUP2"
    },
    "11220": {
      "op": "GT"
    },
    "11221": {
      "op": "ISZERO"
    },
    "11222": {
      "op": "PUSH2",
      "value": "0x2BDE"
    },
    "11225": {
      "op": "JUMPI"
    },
    "11226": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11228": {
      "op": "DUP1"
    },
    "11229": {
      "op": "REVERT"
    },
    "11230": {
      "op": "JUMPDEST"
    },
    "11231": {
      "op": "PUSH2",
      "value": "0x2BEA"
    },
    "11234": {
      "op": "DUP11"
    },
    "11235": {
      "op": "DUP3"
    },
    "11236": {
      "op": "DUP12"
    },
    "11237": {
      "op": "ADD"
    },
    "11238": {
      "op": "PUSH2",
      "value": "0x2B26"
    },
    "11241": {
      "jump": "i",
      "op": "JUMP"
    },
    "11242": {
      "op": "JUMPDEST"
    },
    "11243": {
      "op": "SWAP1"
    },
    "11244": {
      "op": "SWAP9"
    },
    "11245": {
      "op": "POP"
    },
    "11246": {
      "op": "SWAP7"
    },
    "11247": {
      "op": "POP"
    },
    "11248": {
      "op": "POP"
    },
    "11249": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11251": {
      "op": "DUP9"
    },
    "11252": {
      "op": "ADD"
    },
    "11253": {
      "op": "CALLDATALOAD"
    },
    "11254": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "11256": {
      "op": "DUP2"
    },
    "11257": {
      "op": "AND"
    },
    "11258": {
      "op": "DUP2"
    },
    "11259": {
      "op": "EQ"
    },
    "11260": {
      "op": "PUSH2",
      "value": "0x2C04"
    },
    "11263": {
      "op": "JUMPI"
    },
    "11264": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11266": {
      "op": "DUP1"
    },
    "11267": {
      "op": "REVERT"
    },
    "11268": {
      "op": "JUMPDEST"
    },
    "11269": {
      "op": "SWAP5"
    },
    "11270": {
      "op": "POP"
    },
    "11271": {
      "op": "PUSH2",
      "value": "0x2C12"
    },
    "11274": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11276": {
      "op": "DUP10"
    },
    "11277": {
      "op": "ADD"
    },
    "11278": {
      "op": "PUSH2",
      "value": "0x2B6E"
    },
    "11281": {
      "jump": "i",
      "op": "JUMP"
    },
    "11282": {
      "op": "JUMPDEST"
    },
    "11283": {
      "op": "SWAP4"
    },
    "11284": {
      "op": "POP"
    },
    "11285": {
      "op": "PUSH2",
      "value": "0x2C20"
    },
    "11288": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "11290": {
      "op": "DUP10"
    },
    "11291": {
      "op": "ADD"
    },
    "11292": {
      "op": "PUSH2",
      "value": "0x2B86"
    },
    "11295": {
      "jump": "i",
      "op": "JUMP"
    },
    "11296": {
      "op": "JUMPDEST"
    },
    "11297": {
      "op": "SWAP3"
    },
    "11298": {
      "op": "POP"
    },
    "11299": {
      "op": "PUSH2",
      "value": "0x2C2E"
    },
    "11302": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "11304": {
      "op": "DUP10"
    },
    "11305": {
      "op": "ADD"
    },
    "11306": {
      "op": "PUSH2",
      "value": "0x2B86"
    },
    "11309": {
      "jump": "i",
      "op": "JUMP"
    },
    "11310": {
      "op": "JUMPDEST"
    },
    "11311": {
      "op": "SWAP2"
    },
    "11312": {
      "op": "POP"
    },
    "11313": {
      "op": "PUSH2",
      "value": "0x2C3C"
    },
    "11316": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11318": {
      "op": "DUP10"
    },
    "11319": {
      "op": "ADD"
    },
    "11320": {
      "op": "PUSH2",
      "value": "0x2B9B"
    },
    "11323": {
      "jump": "i",
      "op": "JUMP"
    },
    "11324": {
      "op": "JUMPDEST"
    },
    "11325": {
      "op": "SWAP1"
    },
    "11326": {
      "op": "POP"
    },
    "11327": {
      "op": "SWAP3"
    },
    "11328": {
      "op": "SWAP6"
    },
    "11329": {
      "op": "SWAP9"
    },
    "11330": {
      "op": "SWAP2"
    },
    "11331": {
      "op": "SWAP5"
    },
    "11332": {
      "op": "SWAP8"
    },
    "11333": {
      "op": "POP"
    },
    "11334": {
      "op": "SWAP3"
    },
    "11335": {
      "op": "SWAP6"
    },
    "11336": {
      "op": "POP"
    },
    "11337": {
      "jump": "o",
      "op": "JUMP"
    },
    "11338": {
      "op": "JUMPDEST"
    },
    "11339": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11341": {
      "op": "DUP1"
    },
    "11342": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11344": {
      "op": "DUP4"
    },
    "11345": {
      "op": "DUP6"
    },
    "11346": {
      "op": "SUB"
    },
    "11347": {
      "op": "SLT"
    },
    "11348": {
      "op": "ISZERO"
    },
    "11349": {
      "op": "PUSH2",
      "value": "0x2C5D"
    },
    "11352": {
      "op": "JUMPI"
    },
    "11353": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11355": {
      "op": "DUP1"
    },
    "11356": {
      "op": "REVERT"
    },
    "11357": {
      "op": "JUMPDEST"
    },
    "11358": {
      "op": "POP"
    },
    "11359": {
      "op": "POP"
    },
    "11360": {
      "op": "DUP1"
    },
    "11361": {
      "op": "CALLDATALOAD"
    },
    "11362": {
      "op": "SWAP3"
    },
    "11363": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11365": {
      "op": "SWAP1"
    },
    "11366": {
      "op": "SWAP2"
    },
    "11367": {
      "op": "ADD"
    },
    "11368": {
      "op": "CALLDATALOAD"
    },
    "11369": {
      "op": "SWAP2"
    },
    "11370": {
      "op": "POP"
    },
    "11371": {
      "jump": "o",
      "op": "JUMP"
    },
    "11372": {
      "op": "JUMPDEST"
    },
    "11373": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11375": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11377": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11379": {
      "op": "SHL"
    },
    "11380": {
      "op": "SUB"
    },
    "11381": {
      "op": "DUP2"
    },
    "11382": {
      "op": "AND"
    },
    "11383": {
      "op": "DUP2"
    },
    "11384": {
      "op": "EQ"
    },
    "11385": {
      "op": "PUSH2",
      "value": "0x21B4"
    },
    "11388": {
      "op": "JUMPI"
    },
    "11389": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11391": {
      "op": "DUP1"
    },
    "11392": {
      "op": "REVERT"
    },
    "11393": {
      "op": "JUMPDEST"
    },
    "11394": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11396": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11398": {
      "op": "DUP3"
    },
    "11399": {
      "op": "DUP5"
    },
    "11400": {
      "op": "SUB"
    },
    "11401": {
      "op": "SLT"
    },
    "11402": {
      "op": "ISZERO"
    },
    "11403": {
      "op": "PUSH2",
      "value": "0x2C93"
    },
    "11406": {
      "op": "JUMPI"
    },
    "11407": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11409": {
      "op": "DUP1"
    },
    "11410": {
      "op": "REVERT"
    },
    "11411": {
      "op": "JUMPDEST"
    },
    "11412": {
      "op": "DUP2"
    },
    "11413": {
      "op": "CALLDATALOAD"
    },
    "11414": {
      "op": "PUSH2",
      "value": "0x2C9E"
    },
    "11417": {
      "op": "DUP2"
    },
    "11418": {
      "op": "PUSH2",
      "value": "0x2C6C"
    },
    "11421": {
      "jump": "i",
      "op": "JUMP"
    },
    "11422": {
      "op": "JUMPDEST"
    },
    "11423": {
      "op": "SWAP4"
    },
    "11424": {
      "op": "SWAP3"
    },
    "11425": {
      "op": "POP"
    },
    "11426": {
      "op": "POP"
    },
    "11427": {
      "op": "POP"
    },
    "11428": {
      "jump": "o",
      "op": "JUMP"
    },
    "11429": {
      "op": "JUMPDEST"
    },
    "11430": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11432": {
      "op": "DUP3"
    },
    "11433": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "11435": {
      "op": "DUP4"
    },
    "11436": {
      "op": "ADD"
    },
    "11437": {
      "op": "SLT"
    },
    "11438": {
      "op": "PUSH2",
      "value": "0x2CB6"
    },
    "11441": {
      "op": "JUMPI"
    },
    "11442": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11444": {
      "op": "DUP1"
    },
    "11445": {
      "op": "REVERT"
    },
    "11446": {
      "op": "JUMPDEST"
    },
    "11447": {
      "op": "DUP2"
    },
    "11448": {
      "op": "CALLDATALOAD"
    },
    "11449": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11451": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11453": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11455": {
      "op": "SHL"
    },
    "11456": {
      "op": "SUB"
    },
    "11457": {
      "op": "DUP2"
    },
    "11458": {
      "op": "GT"
    },
    "11459": {
      "op": "ISZERO"
    },
    "11460": {
      "op": "PUSH2",
      "value": "0x2CCF"
    },
    "11463": {
      "op": "JUMPI"
    },
    "11464": {
      "op": "PUSH2",
      "value": "0x2CCF"
    },
    "11467": {
      "op": "PUSH2",
      "value": "0x299D"
    },
    "11470": {
      "jump": "i",
      "op": "JUMP"
    },
    "11471": {
      "op": "JUMPDEST"
    },
    "11472": {
      "op": "PUSH2",
      "value": "0x2CE2"
    },
    "11475": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "11477": {
      "op": "DUP3"
    },
    "11478": {
      "op": "ADD"
    },
    "11479": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "11481": {
      "op": "NOT"
    },
    "11482": {
      "op": "AND"
    },
    "11483": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11485": {
      "op": "ADD"
    },
    "11486": {
      "op": "PUSH2",
      "value": "0x29B3"
    },
    "11489": {
      "jump": "i",
      "op": "JUMP"
    },
    "11490": {
      "op": "JUMPDEST"
    },
    "11491": {
      "op": "DUP2"
    },
    "11492": {
      "op": "DUP2"
    },
    "11493": {
      "op": "MSTORE"
    },
    "11494": {
      "op": "DUP5"
    },
    "11495": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11497": {
      "op": "DUP4"
    },
    "11498": {
      "op": "DUP7"
    },
    "11499": {
      "op": "ADD"
    },
    "11500": {
      "op": "ADD"
    },
    "11501": {
      "op": "GT"
    },
    "11502": {
      "op": "ISZERO"
    },
    "11503": {
      "op": "PUSH2",
      "value": "0x2CF7"
    },
    "11506": {
      "op": "JUMPI"
    },
    "11507": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11509": {
      "op": "DUP1"
    },
    "11510": {
      "op": "REVERT"
    },
    "11511": {
      "op": "JUMPDEST"
    },
    "11512": {
      "op": "DUP2"
    },
    "11513": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11515": {
      "op": "DUP6"
    },
    "11516": {
      "op": "ADD"
    },
    "11517": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11519": {
      "op": "DUP4"
    },
    "11520": {
      "op": "ADD"
    },
    "11521": {
      "op": "CALLDATACOPY"
    },
    "11522": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11524": {
      "op": "SWAP2"
    },
    "11525": {
      "op": "DUP2"
    },
    "11526": {
      "op": "ADD"
    },
    "11527": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11529": {
      "op": "ADD"
    },
    "11530": {
      "op": "SWAP2"
    },
    "11531": {
      "op": "SWAP1"
    },
    "11532": {
      "op": "SWAP2"
    },
    "11533": {
      "op": "MSTORE"
    },
    "11534": {
      "op": "SWAP4"
    },
    "11535": {
      "op": "SWAP3"
    },
    "11536": {
      "op": "POP"
    },
    "11537": {
      "op": "POP"
    },
    "11538": {
      "op": "POP"
    },
    "11539": {
      "jump": "o",
      "op": "JUMP"
    },
    "11540": {
      "op": "JUMPDEST"
    },
    "11541": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11543": {
      "op": "DUP1"
    },
    "11544": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11546": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "11548": {
      "op": "DUP5"
    },
    "11549": {
      "op": "DUP7"
    },
    "11550": {
      "op": "SUB"
    },
    "11551": {
      "op": "SLT"
    },
    "11552": {
      "op": "ISZERO"
    },
    "11553": {
      "op": "PUSH2",
      "value": "0x2D29"
    },
    "11556": {
      "op": "JUMPI"
    },
    "11557": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11559": {
      "op": "DUP1"
    },
    "11560": {
      "op": "REVERT"
    },
    "11561": {
      "op": "JUMPDEST"
    },
    "11562": {
      "op": "DUP4"
    },
    "11563": {
      "op": "CALLDATALOAD"
    },
    "11564": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11566": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11568": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11570": {
      "op": "SHL"
    },
    "11571": {
      "op": "SUB"
    },
    "11572": {
      "op": "DUP2"
    },
    "11573": {
      "op": "GT"
    },
    "11574": {
      "op": "ISZERO"
    },
    "11575": {
      "op": "PUSH2",
      "value": "0x2D3F"
    },
    "11578": {
      "op": "JUMPI"
    },
    "11579": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11581": {
      "op": "DUP1"
    },
    "11582": {
      "op": "REVERT"
    },
    "11583": {
      "op": "JUMPDEST"
    },
    "11584": {
      "op": "PUSH2",
      "value": "0x2D4B"
    },
    "11587": {
      "op": "DUP7"
    },
    "11588": {
      "op": "DUP3"
    },
    "11589": {
      "op": "DUP8"
    },
    "11590": {
      "op": "ADD"
    },
    "11591": {
      "op": "PUSH2",
      "value": "0x2CA5"
    },
    "11594": {
      "jump": "i",
      "op": "JUMP"
    },
    "11595": {
      "op": "JUMPDEST"
    },
    "11596": {
      "op": "SWAP4"
    },
    "11597": {
      "op": "POP"
    },
    "11598": {
      "op": "POP"
    },
    "11599": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11601": {
      "op": "DUP5"
    },
    "11602": {
      "op": "ADD"
    },
    "11603": {
      "op": "CALLDATALOAD"
    },
    "11604": {
      "op": "SWAP2"
    },
    "11605": {
      "op": "POP"
    },
    "11606": {
      "op": "PUSH2",
      "value": "0x2D61"
    },
    "11609": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11611": {
      "op": "DUP6"
    },
    "11612": {
      "op": "ADD"
    },
    "11613": {
      "op": "PUSH2",
      "value": "0x2B86"
    },
    "11616": {
      "jump": "i",
      "op": "JUMP"
    },
    "11617": {
      "op": "JUMPDEST"
    },
    "11618": {
      "op": "SWAP1"
    },
    "11619": {
      "op": "POP"
    },
    "11620": {
      "op": "SWAP3"
    },
    "11621": {
      "op": "POP"
    },
    "11622": {
      "op": "SWAP3"
    },
    "11623": {
      "op": "POP"
    },
    "11624": {
      "op": "SWAP3"
    },
    "11625": {
      "jump": "o",
      "op": "JUMP"
    },
    "11626": {
      "op": "JUMPDEST"
    },
    "11627": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11629": {
      "op": "DUP1"
    },
    "11630": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11632": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "11634": {
      "op": "DUP5"
    },
    "11635": {
      "op": "DUP7"
    },
    "11636": {
      "op": "SUB"
    },
    "11637": {
      "op": "SLT"
    },
    "11638": {
      "op": "ISZERO"
    },
    "11639": {
      "op": "PUSH2",
      "value": "0x2D7F"
    },
    "11642": {
      "op": "JUMPI"
    },
    "11643": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11645": {
      "op": "DUP1"
    },
    "11646": {
      "op": "REVERT"
    },
    "11647": {
      "op": "JUMPDEST"
    },
    "11648": {
      "op": "POP"
    },
    "11649": {
      "op": "POP"
    },
    "11650": {
      "op": "DUP2"
    },
    "11651": {
      "op": "CALLDATALOAD"
    },
    "11652": {
      "op": "SWAP4"
    },
    "11653": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11655": {
      "op": "DUP4"
    },
    "11656": {
      "op": "ADD"
    },
    "11657": {
      "op": "CALLDATALOAD"
    },
    "11658": {
      "op": "SWAP4"
    },
    "11659": {
      "op": "POP"
    },
    "11660": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11662": {
      "op": "SWAP1"
    },
    "11663": {
      "op": "SWAP3"
    },
    "11664": {
      "op": "ADD"
    },
    "11665": {
      "op": "CALLDATALOAD"
    },
    "11666": {
      "op": "SWAP2"
    },
    "11667": {
      "op": "SWAP1"
    },
    "11668": {
      "op": "POP"
    },
    "11669": {
      "jump": "o",
      "op": "JUMP"
    },
    "11670": {
      "op": "JUMPDEST"
    },
    "11671": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11673": {
      "op": "PUSH2",
      "value": "0x140"
    },
    "11676": {
      "op": "DUP1"
    },
    "11677": {
      "op": "DUP4"
    },
    "11678": {
      "op": "MSTORE"
    },
    "11679": {
      "op": "PUSH2",
      "value": "0x2DAA"
    },
    "11682": {
      "op": "DUP2"
    },
    "11683": {
      "op": "DUP5"
    },
    "11684": {
      "op": "ADD"
    },
    "11685": {
      "op": "DUP15"
    },
    "11686": {
      "op": "PUSH2",
      "value": "0x292D"
    },
    "11689": {
      "jump": "i",
      "op": "JUMP"
    },
    "11690": {
      "op": "JUMPDEST"
    },
    "11691": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "11697": {
      "op": "SWAP13"
    },
    "11698": {
      "op": "DUP14"
    },
    "11699": {
      "op": "AND"
    },
    "11700": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11702": {
      "op": "DUP6"
    },
    "11703": {
      "op": "ADD"
    },
    "11704": {
      "op": "MSTORE"
    },
    "11705": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11707": {
      "op": "DUP5"
    },
    "11708": {
      "op": "ADD"
    },
    "11709": {
      "op": "SWAP12"
    },
    "11710": {
      "op": "SWAP1"
    },
    "11711": {
      "op": "SWAP12"
    },
    "11712": {
      "op": "MSTORE"
    },
    "11713": {
      "op": "POP"
    },
    "11714": {
      "op": "POP"
    },
    "11715": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "11717": {
      "op": "DUP2"
    },
    "11718": {
      "op": "ADD"
    },
    "11719": {
      "op": "SWAP8"
    },
    "11720": {
      "op": "SWAP1"
    },
    "11721": {
      "op": "SWAP8"
    },
    "11722": {
      "op": "MSTORE"
    },
    "11723": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "11725": {
      "op": "SWAP6"
    },
    "11726": {
      "op": "SWAP1"
    },
    "11727": {
      "op": "SWAP6"
    },
    "11728": {
      "op": "AND"
    },
    "11729": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "11731": {
      "op": "DUP8"
    },
    "11732": {
      "op": "ADD"
    },
    "11733": {
      "op": "MSTORE"
    },
    "11734": {
      "op": "PUSH3",
      "value": "0xFFFFFF"
    },
    "11738": {
      "op": "SWAP4"
    },
    "11739": {
      "op": "SWAP1"
    },
    "11740": {
      "op": "SWAP4"
    },
    "11741": {
      "op": "AND"
    },
    "11742": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11744": {
      "op": "DUP7"
    },
    "11745": {
      "op": "ADD"
    },
    "11746": {
      "op": "MSTORE"
    },
    "11747": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11749": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11751": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "11753": {
      "op": "SHL"
    },
    "11754": {
      "op": "SUB"
    },
    "11755": {
      "op": "SWAP2"
    },
    "11756": {
      "op": "SWAP1"
    },
    "11757": {
      "op": "SWAP2"
    },
    "11758": {
      "op": "AND"
    },
    "11759": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "11761": {
      "op": "DUP6"
    },
    "11762": {
      "op": "ADD"
    },
    "11763": {
      "op": "MSTORE"
    },
    "11764": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "11767": {
      "op": "SWAP1"
    },
    "11768": {
      "op": "DUP2"
    },
    "11769": {
      "op": "AND"
    },
    "11770": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "11772": {
      "op": "DUP6"
    },
    "11773": {
      "op": "ADD"
    },
    "11774": {
      "op": "MSTORE"
    },
    "11775": {
      "op": "AND"
    },
    "11776": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "11779": {
      "op": "DUP4"
    },
    "11780": {
      "op": "ADD"
    },
    "11781": {
      "op": "MSTORE"
    },
    "11782": {
      "op": "SWAP1"
    },
    "11783": {
      "op": "SWAP3"
    },
    "11784": {
      "op": "AND"
    },
    "11785": {
      "op": "PUSH2",
      "value": "0x120"
    },
    "11788": {
      "op": "SWAP1"
    },
    "11789": {
      "op": "SWAP3"
    },
    "11790": {
      "op": "ADD"
    },
    "11791": {
      "op": "SWAP2"
    },
    "11792": {
      "op": "SWAP1"
    },
    "11793": {
      "op": "SWAP2"
    },
    "11794": {
      "op": "MSTORE"
    },
    "11795": {
      "op": "SWAP2"
    },
    "11796": {
      "op": "SWAP1"
    },
    "11797": {
      "op": "POP"
    },
    "11798": {
      "jump": "o",
      "op": "JUMP"
    },
    "11799": {
      "op": "JUMPDEST"
    },
    "11800": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11802": {
      "op": "DUP2"
    },
    "11803": {
      "op": "MSTORE"
    },
    "11804": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11806": {
      "op": "DUP3"
    },
    "11807": {
      "op": "MLOAD"
    },
    "11808": {
      "op": "PUSH2",
      "value": "0x140"
    },
    "11811": {
      "op": "DUP1"
    },
    "11812": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11814": {
      "op": "DUP6"
    },
    "11815": {
      "op": "ADD"
    },
    "11816": {
      "op": "MSTORE"
    },
    "11817": {
      "op": "PUSH2",
      "value": "0x2E36"
    },
    "11820": {
      "op": "PUSH2",
      "value": "0x160"
    },
    "11823": {
      "op": "DUP6"
    },
    "11824": {
      "op": "ADD"
    },
    "11825": {
      "op": "DUP4"
    },
    "11826": {
      "op": "PUSH2",
      "value": "0x292D"
    },
    "11829": {
      "jump": "i",
      "op": "JUMP"
    },
    "11830": {
      "op": "JUMPDEST"
    },
    "11831": {
      "op": "SWAP2"
    },
    "11832": {
      "op": "POP"
    },
    "11833": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11835": {
      "op": "DUP6"
    },
    "11836": {
      "op": "ADD"
    },
    "11837": {
      "op": "MLOAD"
    },
    "11838": {
      "op": "PUSH2",
      "value": "0x2E50"
    },
    "11841": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11843": {
      "op": "DUP7"
    },
    "11844": {
      "op": "ADD"
    },
    "11845": {
      "op": "DUP3"
    },
    "11846": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "11852": {
      "op": "AND"
    },
    "11853": {
      "op": "SWAP1"
    },
    "11854": {
      "op": "MSTORE"
    },
    "11855": {
      "op": "JUMP"
    },
    "11856": {
      "op": "JUMPDEST"
    },
    "11857": {
      "op": "POP"
    },
    "11858": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11860": {
      "op": "DUP6"
    },
    "11861": {
      "op": "ADD"
    },
    "11862": {
      "op": "MLOAD"
    },
    "11863": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "11865": {
      "op": "DUP6"
    },
    "11866": {
      "op": "ADD"
    },
    "11867": {
      "op": "MSTORE"
    },
    "11868": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "11870": {
      "op": "DUP6"
    },
    "11871": {
      "op": "ADD"
    },
    "11872": {
      "op": "MLOAD"
    },
    "11873": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "11875": {
      "op": "DUP6"
    },
    "11876": {
      "op": "ADD"
    },
    "11877": {
      "op": "MSTORE"
    },
    "11878": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "11880": {
      "op": "DUP6"
    },
    "11881": {
      "op": "ADD"
    },
    "11882": {
      "op": "MLOAD"
    },
    "11883": {
      "op": "PUSH2",
      "value": "0x2E79"
    },
    "11886": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11888": {
      "op": "DUP7"
    },
    "11889": {
      "op": "ADD"
    },
    "11890": {
      "op": "DUP3"
    },
    "11891": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "11893": {
      "op": "AND"
    },
    "11894": {
      "op": "SWAP1"
    },
    "11895": {
      "op": "MSTORE"
    },
    "11896": {
      "op": "JUMP"
    },
    "11897": {
      "op": "JUMPDEST"
    },
    "11898": {
      "op": "POP"
    },
    "11899": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11901": {
      "op": "DUP6"
    },
    "11902": {
      "op": "ADD"
    },
    "11903": {
      "op": "MLOAD"
    },
    "11904": {
      "op": "PUSH3",
      "value": "0xFFFFFF"
    },
    "11908": {
      "op": "DUP2"
    },
    "11909": {
      "op": "AND"
    },
    "11910": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "11912": {
      "op": "DUP7"
    },
    "11913": {
      "op": "ADD"
    },
    "11914": {
      "op": "MSTORE"
    },
    "11915": {
      "op": "POP"
    },
    "11916": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "11918": {
      "op": "DUP6"
    },
    "11919": {
      "op": "ADD"
    },
    "11920": {
      "op": "MLOAD"
    },
    "11921": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11923": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11925": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "11927": {
      "op": "SHL"
    },
    "11928": {
      "op": "SUB"
    },
    "11929": {
      "op": "DUP2"
    },
    "11930": {
      "op": "AND"
    },
    "11931": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "11933": {
      "op": "DUP7"
    },
    "11934": {
      "op": "ADD"
    },
    "11935": {
      "op": "MSTORE"
    },
    "11936": {
      "op": "POP"
    },
    "11937": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "11939": {
      "op": "DUP6"
    },
    "11940": {
      "op": "ADD"
    },
    "11941": {
      "op": "MLOAD"
    },
    "11942": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "11945": {
      "op": "PUSH2",
      "value": "0x2EB7"
    },
    "11948": {
      "op": "DUP2"
    },
    "11949": {
      "op": "DUP8"
    },
    "11950": {
      "op": "ADD"
    },
    "11951": {
      "op": "DUP4"
    },
    "11952": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "11955": {
      "op": "AND"
    },
    "11956": {
      "op": "SWAP1"
    },
    "11957": {
      "op": "MSTORE"
    },
    "11958": {
      "op": "JUMP"
    },
    "11959": {
      "op": "JUMPDEST"
    },
    "11960": {
      "op": "DUP7"
    },
    "11961": {
      "op": "ADD"
    },
    "11962": {
      "op": "MLOAD"
    },
    "11963": {
      "op": "SWAP1"
    },
    "11964": {
      "op": "POP"
    },
    "11965": {
      "op": "PUSH2",
      "value": "0x120"
    },
    "11968": {
      "op": "PUSH2",
      "value": "0x2ECE"
    },
    "11971": {
      "op": "DUP7"
    },
    "11972": {
      "op": "DUP3"
    },
    "11973": {
      "op": "ADD"
    },
    "11974": {
      "op": "DUP4"
    },
    "11975": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "11978": {
      "op": "AND"
    },
    "11979": {
      "op": "SWAP1"
    },
    "11980": {
      "op": "MSTORE"
    },
    "11981": {
      "op": "JUMP"
    },
    "11982": {
      "op": "JUMPDEST"
    },
    "11983": {
      "op": "DUP7"
    },
    "11984": {
      "op": "ADD"
    },
    "11985": {
      "op": "MLOAD"
    },
    "11986": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "11992": {
      "op": "DUP2"
    },
    "11993": {
      "op": "AND"
    },
    "11994": {
      "op": "DUP4"
    },
    "11995": {
      "op": "DUP8"
    },
    "11996": {
      "op": "ADD"
    },
    "11997": {
      "op": "MSTORE"
    },
    "11998": {
      "op": "SWAP1"
    },
    "11999": {
      "op": "POP"
    },
    "12000": {
      "op": "PUSH2",
      "value": "0x150F"
    },
    "12003": {
      "op": "JUMP"
    },
    "12004": {
      "op": "JUMPDEST"
    },
    "12005": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12007": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12009": {
      "op": "DUP3"
    },
    "12010": {
      "op": "DUP5"
    },
    "12011": {
      "op": "SUB"
    },
    "12012": {
      "op": "SLT"
    },
    "12013": {
      "op": "ISZERO"
    },
    "12014": {
      "op": "PUSH2",
      "value": "0x2EF6"
    },
    "12017": {
      "op": "JUMPI"
    },
    "12018": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12020": {
      "op": "DUP1"
    },
    "12021": {
      "op": "REVERT"
    },
    "12022": {
      "op": "JUMPDEST"
    },
    "12023": {
      "op": "PUSH2",
      "value": "0x2C9E"
    },
    "12026": {
      "op": "DUP3"
    },
    "12027": {
      "op": "PUSH2",
      "value": "0x2B86"
    },
    "12030": {
      "jump": "i",
      "op": "JUMP"
    },
    "12031": {
      "op": "JUMPDEST"
    },
    "12032": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12034": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12036": {
      "op": "DUP1"
    },
    "12037": {
      "op": "DUP4"
    },
    "12038": {
      "op": "ADD"
    },
    "12039": {
      "op": "DUP2"
    },
    "12040": {
      "op": "DUP5"
    },
    "12041": {
      "op": "MSTORE"
    },
    "12042": {
      "op": "DUP1"
    },
    "12043": {
      "op": "DUP6"
    },
    "12044": {
      "op": "MLOAD"
    },
    "12045": {
      "op": "DUP1"
    },
    "12046": {
      "op": "DUP4"
    },
    "12047": {
      "op": "MSTORE"
    },
    "12048": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12050": {
      "op": "DUP7"
    },
    "12051": {
      "op": "ADD"
    },
    "12052": {
      "op": "SWAP2"
    },
    "12053": {
      "op": "POP"
    },
    "12054": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12056": {
      "op": "DUP2"
    },
    "12057": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "12059": {
      "op": "SHL"
    },
    "12060": {
      "op": "DUP8"
    },
    "12061": {
      "op": "ADD"
    },
    "12062": {
      "op": "ADD"
    },
    "12063": {
      "op": "SWAP3"
    },
    "12064": {
      "op": "POP"
    },
    "12065": {
      "op": "DUP4"
    },
    "12066": {
      "op": "DUP8"
    },
    "12067": {
      "op": "ADD"
    },
    "12068": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12070": {
      "op": "JUMPDEST"
    },
    "12071": {
      "op": "DUP3"
    },
    "12072": {
      "op": "DUP2"
    },
    "12073": {
      "op": "LT"
    },
    "12074": {
      "op": "ISZERO"
    },
    "12075": {
      "op": "PUSH2",
      "value": "0x2F54"
    },
    "12078": {
      "op": "JUMPI"
    },
    "12079": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "12081": {
      "op": "NOT"
    },
    "12082": {
      "op": "DUP9"
    },
    "12083": {
      "op": "DUP7"
    },
    "12084": {
      "op": "SUB"
    },
    "12085": {
      "op": "ADD"
    },
    "12086": {
      "op": "DUP5"
    },
    "12087": {
      "op": "MSTORE"
    },
    "12088": {
      "op": "PUSH2",
      "value": "0x2F42"
    },
    "12091": {
      "op": "DUP6"
    },
    "12092": {
      "op": "DUP4"
    },
    "12093": {
      "op": "MLOAD"
    },
    "12094": {
      "op": "PUSH2",
      "value": "0x292D"
    },
    "12097": {
      "jump": "i",
      "op": "JUMP"
    },
    "12098": {
      "op": "JUMPDEST"
    },
    "12099": {
      "op": "SWAP5"
    },
    "12100": {
      "op": "POP"
    },
    "12101": {
      "op": "SWAP3"
    },
    "12102": {
      "op": "DUP6"
    },
    "12103": {
      "op": "ADD"
    },
    "12104": {
      "op": "SWAP3"
    },
    "12105": {
      "op": "SWAP1"
    },
    "12106": {
      "op": "DUP6"
    },
    "12107": {
      "op": "ADD"
    },
    "12108": {
      "op": "SWAP1"
    },
    "12109": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12111": {
      "op": "ADD"
    },
    "12112": {
      "op": "PUSH2",
      "value": "0x2F26"
    },
    "12115": {
      "op": "JUMP"
    },
    "12116": {
      "op": "JUMPDEST"
    },
    "12117": {
      "op": "POP"
    },
    "12118": {
      "op": "SWAP3"
    },
    "12119": {
      "op": "SWAP8"
    },
    "12120": {
      "op": "SWAP7"
    },
    "12121": {
      "op": "POP"
    },
    "12122": {
      "op": "POP"
    },
    "12123": {
      "op": "POP"
    },
    "12124": {
      "op": "POP"
    },
    "12125": {
      "op": "POP"
    },
    "12126": {
      "op": "POP"
    },
    "12127": {
      "op": "POP"
    },
    "12128": {
      "jump": "o",
      "op": "JUMP"
    },
    "12129": {
      "op": "JUMPDEST"
    },
    "12130": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12132": {
      "op": "DUP1"
    },
    "12133": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12135": {
      "op": "DUP1"
    },
    "12136": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12138": {
      "op": "DUP1"
    },
    "12139": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12141": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "12143": {
      "op": "DUP9"
    },
    "12144": {
      "op": "DUP11"
    },
    "12145": {
      "op": "SUB"
    },
    "12146": {
      "op": "SLT"
    },
    "12147": {
      "op": "ISZERO"
    },
    "12148": {
      "op": "PUSH2",
      "value": "0x2F7C"
    },
    "12151": {
      "op": "JUMPI"
    },
    "12152": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12154": {
      "op": "DUP1"
    },
    "12155": {
      "op": "REVERT"
    },
    "12156": {
      "op": "JUMPDEST"
    },
    "12157": {
      "op": "DUP8"
    },
    "12158": {
      "op": "CALLDATALOAD"
    },
    "12159": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12161": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12163": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12165": {
      "op": "SHL"
    },
    "12166": {
      "op": "SUB"
    },
    "12167": {
      "op": "DUP2"
    },
    "12168": {
      "op": "GT"
    },
    "12169": {
      "op": "ISZERO"
    },
    "12170": {
      "op": "PUSH2",
      "value": "0x2F92"
    },
    "12173": {
      "op": "JUMPI"
    },
    "12174": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12176": {
      "op": "DUP1"
    },
    "12177": {
      "op": "REVERT"
    },
    "12178": {
      "op": "JUMPDEST"
    },
    "12179": {
      "op": "PUSH2",
      "value": "0x2F9E"
    },
    "12182": {
      "op": "DUP11"
    },
    "12183": {
      "op": "DUP3"
    },
    "12184": {
      "op": "DUP12"
    },
    "12185": {
      "op": "ADD"
    },
    "12186": {
      "op": "PUSH2",
      "value": "0x2B26"
    },
    "12189": {
      "jump": "i",
      "op": "JUMP"
    },
    "12190": {
      "op": "JUMPDEST"
    },
    "12191": {
      "op": "SWAP1"
    },
    "12192": {
      "op": "SWAP9"
    },
    "12193": {
      "op": "POP"
    },
    "12194": {
      "op": "SWAP7"
    },
    "12195": {
      "op": "POP"
    },
    "12196": {
      "op": "PUSH2",
      "value": "0x2C04"
    },
    "12199": {
      "op": "SWAP1"
    },
    "12200": {
      "op": "POP"
    },
    "12201": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12203": {
      "op": "DUP10"
    },
    "12204": {
      "op": "ADD"
    },
    "12205": {
      "op": "PUSH2",
      "value": "0x2B9B"
    },
    "12208": {
      "jump": "i",
      "op": "JUMP"
    },
    "12209": {
      "op": "JUMPDEST"
    },
    "12210": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12212": {
      "op": "DUP1"
    },
    "12213": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12215": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "12217": {
      "op": "DUP5"
    },
    "12218": {
      "op": "DUP7"
    },
    "12219": {
      "op": "SUB"
    },
    "12220": {
      "op": "SLT"
    },
    "12221": {
      "op": "ISZERO"
    },
    "12222": {
      "op": "PUSH2",
      "value": "0x2FC6"
    },
    "12225": {
      "op": "JUMPI"
    },
    "12226": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12228": {
      "op": "DUP1"
    },
    "12229": {
      "op": "REVERT"
    },
    "12230": {
      "op": "JUMPDEST"
    },
    "12231": {
      "op": "DUP4"
    },
    "12232": {
      "op": "CALLDATALOAD"
    },
    "12233": {
      "op": "SWAP3"
    },
    "12234": {
      "op": "POP"
    },
    "12235": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12237": {
      "op": "DUP5"
    },
    "12238": {
      "op": "ADD"
    },
    "12239": {
      "op": "CALLDATALOAD"
    },
    "12240": {
      "op": "SWAP2"
    },
    "12241": {
      "op": "POP"
    },
    "12242": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12244": {
      "op": "DUP5"
    },
    "12245": {
      "op": "ADD"
    },
    "12246": {
      "op": "CALLDATALOAD"
    },
    "12247": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12249": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12251": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12253": {
      "op": "SHL"
    },
    "12254": {
      "op": "SUB"
    },
    "12255": {
      "op": "DUP2"
    },
    "12256": {
      "op": "GT"
    },
    "12257": {
      "op": "ISZERO"
    },
    "12258": {
      "op": "PUSH2",
      "value": "0x2FEA"
    },
    "12261": {
      "op": "JUMPI"
    },
    "12262": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12264": {
      "op": "DUP1"
    },
    "12265": {
      "op": "REVERT"
    },
    "12266": {
      "op": "JUMPDEST"
    },
    "12267": {
      "op": "PUSH2",
      "value": "0x2FF6"
    },
    "12270": {
      "op": "DUP7"
    },
    "12271": {
      "op": "DUP3"
    },
    "12272": {
      "op": "DUP8"
    },
    "12273": {
      "op": "ADD"
    },
    "12274": {
      "op": "PUSH2",
      "value": "0x29E3"
    },
    "12277": {
      "jump": "i",
      "op": "JUMP"
    },
    "12278": {
      "op": "JUMPDEST"
    },
    "12279": {
      "op": "SWAP2"
    },
    "12280": {
      "op": "POP"
    },
    "12281": {
      "op": "POP"
    },
    "12282": {
      "op": "SWAP3"
    },
    "12283": {
      "op": "POP"
    },
    "12284": {
      "op": "SWAP3"
    },
    "12285": {
      "op": "POP"
    },
    "12286": {
      "op": "SWAP3"
    },
    "12287": {
      "jump": "o",
      "op": "JUMP"
    },
    "12288": {
      "op": "JUMPDEST"
    },
    "12289": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12291": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12293": {
      "op": "DUP3"
    },
    "12294": {
      "op": "DUP5"
    },
    "12295": {
      "op": "SUB"
    },
    "12296": {
      "op": "SLT"
    },
    "12297": {
      "op": "ISZERO"
    },
    "12298": {
      "op": "PUSH2",
      "value": "0x3012"
    },
    "12301": {
      "op": "JUMPI"
    },
    "12302": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12304": {
      "op": "DUP1"
    },
    "12305": {
      "op": "REVERT"
    },
    "12306": {
      "op": "JUMPDEST"
    },
    "12307": {
      "op": "DUP2"
    },
    "12308": {
      "op": "CALLDATALOAD"
    },
    "12309": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12311": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12313": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12315": {
      "op": "SHL"
    },
    "12316": {
      "op": "SUB"
    },
    "12317": {
      "op": "DUP2"
    },
    "12318": {
      "op": "GT"
    },
    "12319": {
      "op": "ISZERO"
    },
    "12320": {
      "op": "PUSH2",
      "value": "0x3028"
    },
    "12323": {
      "op": "JUMPI"
    },
    "12324": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12326": {
      "op": "DUP1"
    },
    "12327": {
      "op": "REVERT"
    },
    "12328": {
      "op": "JUMPDEST"
    },
    "12329": {
      "op": "PUSH2",
      "value": "0x3034"
    },
    "12332": {
      "op": "DUP5"
    },
    "12333": {
      "op": "DUP3"
    },
    "12334": {
      "op": "DUP6"
    },
    "12335": {
      "op": "ADD"
    },
    "12336": {
      "op": "PUSH2",
      "value": "0x2CA5"
    },
    "12339": {
      "jump": "i",
      "op": "JUMP"
    },
    "12340": {
      "op": "JUMPDEST"
    },
    "12341": {
      "op": "SWAP5"
    },
    "12342": {
      "op": "SWAP4"
    },
    "12343": {
      "op": "POP"
    },
    "12344": {
      "op": "POP"
    },
    "12345": {
      "op": "POP"
    },
    "12346": {
      "op": "POP"
    },
    "12347": {
      "jump": "o",
      "op": "JUMP"
    },
    "12348": {
      "op": "JUMPDEST"
    },
    "12349": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12351": {
      "op": "DUP1"
    },
    "12352": {
      "op": "DUP3"
    },
    "12353": {
      "op": "MSTORE"
    },
    "12354": {
      "op": "DUP3"
    },
    "12355": {
      "op": "MLOAD"
    },
    "12356": {
      "op": "DUP3"
    },
    "12357": {
      "op": "DUP3"
    },
    "12358": {
      "op": "ADD"
    },
    "12359": {
      "op": "DUP2"
    },
    "12360": {
      "op": "SWAP1"
    },
    "12361": {
      "op": "MSTORE"
    },
    "12362": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12364": {
      "op": "SWAP2"
    },
    "12365": {
      "op": "SWAP1"
    },
    "12366": {
      "op": "DUP5"
    },
    "12367": {
      "op": "DUP3"
    },
    "12368": {
      "op": "ADD"
    },
    "12369": {
      "op": "SWAP1"
    },
    "12370": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12372": {
      "op": "DUP6"
    },
    "12373": {
      "op": "ADD"
    },
    "12374": {
      "op": "SWAP1"
    },
    "12375": {
      "op": "DUP5"
    },
    "12376": {
      "op": "JUMPDEST"
    },
    "12377": {
      "op": "DUP2"
    },
    "12378": {
      "op": "DUP2"
    },
    "12379": {
      "op": "LT"
    },
    "12380": {
      "op": "ISZERO"
    },
    "12381": {
      "op": "PUSH2",
      "value": "0x3078"
    },
    "12384": {
      "op": "JUMPI"
    },
    "12385": {
      "op": "DUP4"
    },
    "12386": {
      "op": "MLOAD"
    },
    "12387": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "12390": {
      "op": "AND"
    },
    "12391": {
      "op": "DUP4"
    },
    "12392": {
      "op": "MSTORE"
    },
    "12393": {
      "op": "SWAP3"
    },
    "12394": {
      "op": "DUP5"
    },
    "12395": {
      "op": "ADD"
    },
    "12396": {
      "op": "SWAP3"
    },
    "12397": {
      "op": "SWAP2"
    },
    "12398": {
      "op": "DUP5"
    },
    "12399": {
      "op": "ADD"
    },
    "12400": {
      "op": "SWAP2"
    },
    "12401": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12403": {
      "op": "ADD"
    },
    "12404": {
      "op": "PUSH2",
      "value": "0x3058"
    },
    "12407": {
      "op": "JUMP"
    },
    "12408": {
      "op": "JUMPDEST"
    },
    "12409": {
      "op": "POP"
    },
    "12410": {
      "op": "SWAP1"
    },
    "12411": {
      "op": "SWAP7"
    },
    "12412": {
      "op": "SWAP6"
    },
    "12413": {
      "op": "POP"
    },
    "12414": {
      "op": "POP"
    },
    "12415": {
      "op": "POP"
    },
    "12416": {
      "op": "POP"
    },
    "12417": {
      "op": "POP"
    },
    "12418": {
      "op": "POP"
    },
    "12419": {
      "jump": "o",
      "op": "JUMP"
    },
    "12420": {
      "op": "JUMPDEST"
    },
    "12421": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12423": {
      "op": "DUP2"
    },
    "12424": {
      "op": "DUP2"
    },
    "12425": {
      "op": "SHR"
    },
    "12426": {
      "op": "SWAP1"
    },
    "12427": {
      "op": "DUP3"
    },
    "12428": {
      "op": "AND"
    },
    "12429": {
      "op": "DUP1"
    },
    "12430": {
      "op": "PUSH2",
      "value": "0x3098"
    },
    "12433": {
      "op": "JUMPI"
    },
    "12434": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "12436": {
      "op": "DUP3"
    },
    "12437": {
      "op": "AND"
    },
    "12438": {
      "op": "SWAP2"
    },
    "12439": {
      "op": "POP"
    },
    "12440": {
      "op": "JUMPDEST"
    },
    "12441": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12443": {
      "op": "DUP3"
    },
    "12444": {
      "op": "LT"
    },
    "12445": {
      "op": "DUP2"
    },
    "12446": {
      "op": "SUB"
    },
    "12447": {
      "op": "PUSH2",
      "value": "0x30B8"
    },
    "12450": {
      "op": "JUMPI"
    },
    "12451": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "12456": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "12458": {
      "op": "SHL"
    },
    "12459": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12461": {
      "op": "MSTORE"
    },
    "12462": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "12464": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "12466": {
      "op": "MSTORE"
    },
    "12467": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "12469": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12471": {
      "op": "REVERT"
    },
    "12472": {
      "op": "JUMPDEST"
    },
    "12473": {
      "op": "POP"
    },
    "12474": {
      "op": "SWAP2"
    },
    "12475": {
      "op": "SWAP1"
    },
    "12476": {
      "op": "POP"
    },
    "12477": {
      "jump": "o",
      "op": "JUMP"
    },
    "12478": {
      "op": "JUMPDEST"
    },
    "12479": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "12484": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "12486": {
      "op": "SHL"
    },
    "12487": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12489": {
      "op": "MSTORE"
    },
    "12490": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "12492": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "12494": {
      "op": "MSTORE"
    },
    "12495": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "12497": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12499": {
      "op": "REVERT"
    },
    "12500": {
      "op": "JUMPDEST"
    },
    "12501": {
      "op": "DUP2"
    },
    "12502": {
      "op": "MLOAD"
    },
    "12503": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12505": {
      "op": "SWAP1"
    },
    "12506": {
      "op": "DUP3"
    },
    "12507": {
      "op": "SWAP1"
    },
    "12508": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12510": {
      "op": "DUP1"
    },
    "12511": {
      "op": "DUP7"
    },
    "12512": {
      "op": "ADD"
    },
    "12513": {
      "op": "DUP5"
    },
    "12514": {
      "op": "JUMPDEST"
    },
    "12515": {
      "op": "DUP4"
    },
    "12516": {
      "op": "DUP2"
    },
    "12517": {
      "op": "LT"
    },
    "12518": {
      "op": "ISZERO"
    },
    "12519": {
      "op": "PUSH2",
      "value": "0x30FE"
    },
    "12522": {
      "op": "JUMPI"
    },
    "12523": {
      "op": "DUP2"
    },
    "12524": {
      "op": "MLOAD"
    },
    "12525": {
      "op": "DUP6"
    },
    "12526": {
      "op": "MSTORE"
    },
    "12527": {
      "op": "SWAP4"
    },
    "12528": {
      "op": "DUP3"
    },
    "12529": {
      "op": "ADD"
    },
    "12530": {
      "op": "SWAP4"
    },
    "12531": {
      "op": "SWAP1"
    },
    "12532": {
      "op": "DUP3"
    },
    "12533": {
      "op": "ADD"
    },
    "12534": {
      "op": "SWAP1"
    },
    "12535": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12537": {
      "op": "ADD"
    },
    "12538": {
      "op": "PUSH2",
      "value": "0x30E2"
    },
    "12541": {
      "op": "JUMP"
    },
    "12542": {
      "op": "JUMPDEST"
    },
    "12543": {
      "op": "POP"
    },
    "12544": {
      "op": "SWAP3"
    },
    "12545": {
      "op": "SWAP7"
    },
    "12546": {
      "op": "SWAP6"
    },
    "12547": {
      "op": "POP"
    },
    "12548": {
      "op": "POP"
    },
    "12549": {
      "op": "POP"
    },
    "12550": {
      "op": "POP"
    },
    "12551": {
      "op": "POP"
    },
    "12552": {
      "op": "POP"
    },
    "12553": {
      "jump": "o",
      "op": "JUMP"
    },
    "12554": {
      "op": "JUMPDEST"
    },
    "12555": {
      "op": "DUP5"
    },
    "12556": {
      "op": "DUP2"
    },
    "12557": {
      "op": "MSTORE"
    },
    "12558": {
      "op": "DUP4"
    },
    "12559": {
      "op": "ISZERO"
    },
    "12560": {
      "op": "ISZERO"
    },
    "12561": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12563": {
      "op": "DUP3"
    },
    "12564": {
      "op": "ADD"
    },
    "12565": {
      "op": "MSTORE"
    },
    "12566": {
      "op": "DUP3"
    },
    "12567": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12569": {
      "op": "DUP3"
    },
    "12570": {
      "op": "ADD"
    },
    "12571": {
      "op": "MSTORE"
    },
    "12572": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "12574": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "12576": {
      "op": "DUP3"
    },
    "12577": {
      "op": "ADD"
    },
    "12578": {
      "op": "MSTORE"
    },
    "12579": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12581": {
      "op": "PUSH2",
      "value": "0x3131"
    },
    "12584": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "12586": {
      "op": "DUP4"
    },
    "12587": {
      "op": "ADD"
    },
    "12588": {
      "op": "DUP5"
    },
    "12589": {
      "op": "PUSH2",
      "value": "0x292D"
    },
    "12592": {
      "jump": "i",
      "op": "JUMP"
    },
    "12593": {
      "op": "JUMPDEST"
    },
    "12594": {
      "op": "SWAP7"
    },
    "12595": {
      "op": "SWAP6"
    },
    "12596": {
      "op": "POP"
    },
    "12597": {
      "op": "POP"
    },
    "12598": {
      "op": "POP"
    },
    "12599": {
      "op": "POP"
    },
    "12600": {
      "op": "POP"
    },
    "12601": {
      "op": "POP"
    },
    "12602": {
      "jump": "o",
      "op": "JUMP"
    },
    "12603": {
      "op": "JUMPDEST"
    },
    "12604": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12606": {
      "op": "DUP1"
    },
    "12607": {
      "op": "DUP3"
    },
    "12608": {
      "op": "MSTORE"
    },
    "12609": {
      "op": "DUP2"
    },
    "12610": {
      "op": "DUP2"
    },
    "12611": {
      "op": "ADD"
    },
    "12612": {
      "op": "MSTORE"
    },
    "12613": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "12646": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12648": {
      "op": "DUP3"
    },
    "12649": {
      "op": "ADD"
    },
    "12650": {
      "op": "MSTORE"
    },
    "12651": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "12653": {
      "op": "ADD"
    },
    "12654": {
      "op": "SWAP1"
    },
    "12655": {
      "jump": "o",
      "op": "JUMP"
    },
    "12656": {
      "op": "JUMPDEST"
    },
    "12657": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12659": {
      "op": "DUP2"
    },
    "12660": {
      "op": "MSTORE"
    },
    "12661": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12663": {
      "op": "PUSH2",
      "value": "0x2C9E"
    },
    "12666": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12668": {
      "op": "DUP4"
    },
    "12669": {
      "op": "ADD"
    },
    "12670": {
      "op": "DUP5"
    },
    "12671": {
      "op": "PUSH2",
      "value": "0x292D"
    },
    "12674": {
      "jump": "i",
      "op": "JUMP"
    },
    "12675": {
      "op": "JUMPDEST"
    },
    "12676": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12678": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12680": {
      "op": "DUP1"
    },
    "12681": {
      "op": "DUP4"
    },
    "12682": {
      "op": "MSTORE"
    },
    "12683": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12685": {
      "op": "DUP5"
    },
    "12686": {
      "op": "SLOAD"
    },
    "12687": {
      "op": "PUSH2",
      "value": "0x3197"
    },
    "12690": {
      "op": "DUP2"
    },
    "12691": {
      "op": "PUSH2",
      "value": "0x3084"
    },
    "12694": {
      "jump": "i",
      "op": "JUMP"
    },
    "12695": {
      "op": "JUMPDEST"
    },
    "12696": {
      "op": "DUP1"
    },
    "12697": {
      "op": "DUP5"
    },
    "12698": {
      "op": "DUP8"
    },
    "12699": {
      "op": "ADD"
    },
    "12700": {
      "op": "MSTORE"
    },
    "12701": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12703": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12705": {
      "op": "DUP1"
    },
    "12706": {
      "op": "DUP5"
    },
    "12707": {
      "op": "AND"
    },
    "12708": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12710": {
      "op": "DUP2"
    },
    "12711": {
      "op": "EQ"
    },
    "12712": {
      "op": "PUSH2",
      "value": "0x31B8"
    },
    "12715": {
      "op": "JUMPI"
    },
    "12716": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12718": {
      "op": "DUP2"
    },
    "12719": {
      "op": "EQ"
    },
    "12720": {
      "op": "PUSH2",
      "value": "0x31D2"
    },
    "12723": {
      "op": "JUMPI"
    },
    "12724": {
      "op": "PUSH2",
      "value": "0x3200"
    },
    "12727": {
      "op": "JUMP"
    },
    "12728": {
      "op": "JUMPDEST"
    },
    "12729": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "12731": {
      "op": "NOT"
    },
    "12732": {
      "op": "DUP6"
    },
    "12733": {
      "op": "AND"
    },
    "12734": {
      "op": "DUP10"
    },
    "12735": {
      "op": "DUP5"
    },
    "12736": {
      "op": "ADD"
    },
    "12737": {
      "op": "MSTORE"
    },
    "12738": {
      "op": "DUP4"
    },
    "12739": {
      "op": "ISZERO"
    },
    "12740": {
      "op": "ISZERO"
    },
    "12741": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "12743": {
      "op": "SHL"
    },
    "12744": {
      "op": "DUP10"
    },
    "12745": {
      "op": "ADD"
    },
    "12746": {
      "op": "DUP4"
    },
    "12747": {
      "op": "ADD"
    },
    "12748": {
      "op": "SWAP6"
    },
    "12749": {
      "op": "POP"
    },
    "12750": {
      "op": "PUSH2",
      "value": "0x3200"
    },
    "12753": {
      "op": "JUMP"
    },
    "12754": {
      "op": "JUMPDEST"
    },
    "12755": {
      "op": "DUP10"
    },
    "12756": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12758": {
      "op": "MSTORE"
    },
    "12759": {
      "op": "DUP7"
    },
    "12760": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12762": {
      "op": "KECCAK256"
    },
    "12763": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12765": {
      "op": "JUMPDEST"
    },
    "12766": {
      "op": "DUP6"
    },
    "12767": {
      "op": "DUP2"
    },
    "12768": {
      "op": "LT"
    },
    "12769": {
      "op": "ISZERO"
    },
    "12770": {
      "op": "PUSH2",
      "value": "0x31F8"
    },
    "12773": {
      "op": "JUMPI"
    },
    "12774": {
      "op": "DUP2"
    },
    "12775": {
      "op": "SLOAD"
    },
    "12776": {
      "op": "DUP12"
    },
    "12777": {
      "op": "DUP3"
    },
    "12778": {
      "op": "ADD"
    },
    "12779": {
      "op": "DUP7"
    },
    "12780": {
      "op": "ADD"
    },
    "12781": {
      "op": "MSTORE"
    },
    "12782": {
      "op": "SWAP1"
    },
    "12783": {
      "op": "DUP4"
    },
    "12784": {
      "op": "ADD"
    },
    "12785": {
      "op": "SWAP1"
    },
    "12786": {
      "op": "DUP9"
    },
    "12787": {
      "op": "ADD"
    },
    "12788": {
      "op": "PUSH2",
      "value": "0x31DD"
    },
    "12791": {
      "op": "JUMP"
    },
    "12792": {
      "op": "JUMPDEST"
    },
    "12793": {
      "op": "DUP11"
    },
    "12794": {
      "op": "ADD"
    },
    "12795": {
      "op": "DUP5"
    },
    "12796": {
      "op": "ADD"
    },
    "12797": {
      "op": "SWAP7"
    },
    "12798": {
      "op": "POP"
    },
    "12799": {
      "op": "POP"
    },
    "12800": {
      "op": "JUMPDEST"
    },
    "12801": {
      "op": "POP"
    },
    "12802": {
      "op": "SWAP4"
    },
    "12803": {
      "op": "SWAP9"
    },
    "12804": {
      "op": "SWAP8"
    },
    "12805": {
      "op": "POP"
    },
    "12806": {
      "op": "POP"
    },
    "12807": {
      "op": "POP"
    },
    "12808": {
      "op": "POP"
    },
    "12809": {
      "op": "POP"
    },
    "12810": {
      "op": "POP"
    },
    "12811": {
      "op": "POP"
    },
    "12812": {
      "op": "POP"
    },
    "12813": {
      "jump": "o",
      "op": "JUMP"
    },
    "12814": {
      "op": "JUMPDEST"
    },
    "12815": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "12817": {
      "op": "DUP3"
    },
    "12818": {
      "op": "GT"
    },
    "12819": {
      "op": "ISZERO"
    },
    "12820": {
      "op": "PUSH2",
      "value": "0x3258"
    },
    "12823": {
      "op": "JUMPI"
    },
    "12824": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12826": {
      "op": "DUP2"
    },
    "12827": {
      "op": "DUP2"
    },
    "12828": {
      "op": "MSTORE"
    },
    "12829": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12831": {
      "op": "DUP2"
    },
    "12832": {
      "op": "KECCAK256"
    },
    "12833": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "12835": {
      "op": "DUP6"
    },
    "12836": {
      "op": "ADD"
    },
    "12837": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "12839": {
      "op": "SHR"
    },
    "12840": {
      "op": "DUP2"
    },
    "12841": {
      "op": "ADD"
    },
    "12842": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12844": {
      "op": "DUP7"
    },
    "12845": {
      "op": "LT"
    },
    "12846": {
      "op": "ISZERO"
    },
    "12847": {
      "op": "PUSH2",
      "value": "0x3235"
    },
    "12850": {
      "op": "JUMPI"
    },
    "12851": {
      "op": "POP"
    },
    "12852": {
      "op": "DUP1"
    },
    "12853": {
      "op": "JUMPDEST"
    },
    "12854": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "12856": {
      "op": "DUP6"
    },
    "12857": {
      "op": "ADD"
    },
    "12858": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "12860": {
      "op": "SHR"
    },
    "12861": {
      "op": "DUP3"
    },
    "12862": {
      "op": "ADD"
    },
    "12863": {
      "op": "SWAP2"
    },
    "12864": {
      "op": "POP"
    },
    "12865": {
      "op": "JUMPDEST"
    },
    "12866": {
      "op": "DUP2"
    },
    "12867": {
      "op": "DUP2"
    },
    "12868": {
      "op": "LT"
    },
    "12869": {
      "op": "ISZERO"
    },
    "12870": {
      "op": "PUSH2",
      "value": "0x3254"
    },
    "12873": {
      "op": "JUMPI"
    },
    "12874": {
      "op": "DUP3"
    },
    "12875": {
      "op": "DUP2"
    },
    "12876": {
      "op": "SSTORE"
    },
    "12877": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12879": {
      "op": "ADD"
    },
    "12880": {
      "op": "PUSH2",
      "value": "0x3241"
    },
    "12883": {
      "op": "JUMP"
    },
    "12884": {
      "op": "JUMPDEST"
    },
    "12885": {
      "op": "POP"
    },
    "12886": {
      "op": "POP"
    },
    "12887": {
      "op": "POP"
    },
    "12888": {
      "op": "JUMPDEST"
    },
    "12889": {
      "op": "POP"
    },
    "12890": {
      "op": "POP"
    },
    "12891": {
      "op": "POP"
    },
    "12892": {
      "jump": "o",
      "op": "JUMP"
    },
    "12893": {
      "op": "JUMPDEST"
    },
    "12894": {
      "op": "DUP2"
    },
    "12895": {
      "op": "MLOAD"
    },
    "12896": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12898": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12900": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12902": {
      "op": "SHL"
    },
    "12903": {
      "op": "SUB"
    },
    "12904": {
      "op": "DUP2"
    },
    "12905": {
      "op": "GT"
    },
    "12906": {
      "op": "ISZERO"
    },
    "12907": {
      "op": "PUSH2",
      "value": "0x3276"
    },
    "12910": {
      "op": "JUMPI"
    },
    "12911": {
      "op": "PUSH2",
      "value": "0x3276"
    },
    "12914": {
      "op": "PUSH2",
      "value": "0x299D"
    },
    "12917": {
      "jump": "i",
      "op": "JUMP"
    },
    "12918": {
      "op": "JUMPDEST"
    },
    "12919": {
      "op": "PUSH2",
      "value": "0x328A"
    },
    "12922": {
      "op": "DUP2"
    },
    "12923": {
      "op": "PUSH2",
      "value": "0x3284"
    },
    "12926": {
      "op": "DUP5"
    },
    "12927": {
      "op": "SLOAD"
    },
    "12928": {
      "op": "PUSH2",
      "value": "0x3084"
    },
    "12931": {
      "jump": "i",
      "op": "JUMP"
    },
    "12932": {
      "op": "JUMPDEST"
    },
    "12933": {
      "op": "DUP5"
    },
    "12934": {
      "op": "PUSH2",
      "value": "0x320E"
    },
    "12937": {
      "jump": "i",
      "op": "JUMP"
    },
    "12938": {
      "op": "JUMPDEST"
    },
    "12939": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12941": {
      "op": "DUP1"
    },
    "12942": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "12944": {
      "op": "DUP4"
    },
    "12945": {
      "op": "GT"
    },
    "12946": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12948": {
      "op": "DUP2"
    },
    "12949": {
      "op": "EQ"
    },
    "12950": {
      "op": "PUSH2",
      "value": "0x32BF"
    },
    "12953": {
      "op": "JUMPI"
    },
    "12954": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12956": {
      "op": "DUP5"
    },
    "12957": {
      "op": "ISZERO"
    },
    "12958": {
      "op": "PUSH2",
      "value": "0x32A7"
    },
    "12961": {
      "op": "JUMPI"
    },
    "12962": {
      "op": "POP"
    },
    "12963": {
      "op": "DUP6"
    },
    "12964": {
      "op": "DUP4"
    },
    "12965": {
      "op": "ADD"
    },
    "12966": {
      "op": "MLOAD"
    },
    "12967": {
      "op": "JUMPDEST"
    },
    "12968": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12970": {
      "op": "NOT"
    },
    "12971": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "12973": {
      "op": "DUP7"
    },
    "12974": {
      "op": "SWAP1"
    },
    "12975": {
      "op": "SHL"
    },
    "12976": {
      "op": "SHR"
    },
    "12977": {
      "op": "NOT"
    },
    "12978": {
      "op": "AND"
    },
    "12979": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12981": {
      "op": "DUP6"
    },
    "12982": {
      "op": "SWAP1"
    },
    "12983": {
      "op": "SHL"
    },
    "12984": {
      "op": "OR"
    },
    "12985": {
      "op": "DUP6"
    },
    "12986": {
      "op": "SSTORE"
    },
    "12987": {
      "op": "PUSH2",
      "value": "0x3254"
    },
    "12990": {
      "op": "JUMP"
    },
    "12991": {
      "op": "JUMPDEST"
    },
    "12992": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12994": {
      "op": "DUP6"
    },
    "12995": {
      "op": "DUP2"
    },
    "12996": {
      "op": "MSTORE"
    },
    "12997": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12999": {
      "op": "DUP2"
    },
    "13000": {
      "op": "KECCAK256"
    },
    "13001": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "13003": {
      "op": "NOT"
    },
    "13004": {
      "op": "DUP7"
    },
    "13005": {
      "op": "AND"
    },
    "13006": {
      "op": "SWAP2"
    },
    "13007": {
      "op": "JUMPDEST"
    },
    "13008": {
      "op": "DUP3"
    },
    "13009": {
      "op": "DUP2"
    },
    "13010": {
      "op": "LT"
    },
    "13011": {
      "op": "ISZERO"
    },
    "13012": {
      "op": "PUSH2",
      "value": "0x32EE"
    },
    "13015": {
      "op": "JUMPI"
    },
    "13016": {
      "op": "DUP9"
    },
    "13017": {
      "op": "DUP7"
    },
    "13018": {
      "op": "ADD"
    },
    "13019": {
      "op": "MLOAD"
    },
    "13020": {
      "op": "DUP3"
    },
    "13021": {
      "op": "SSTORE"
    },
    "13022": {
      "op": "SWAP5"
    },
    "13023": {
      "op": "DUP5"
    },
    "13024": {
      "op": "ADD"
    },
    "13025": {
      "op": "SWAP5"
    },
    "13026": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13028": {
      "op": "SWAP1"
    },
    "13029": {
      "op": "SWAP2"
    },
    "13030": {
      "op": "ADD"
    },
    "13031": {
      "op": "SWAP1"
    },
    "13032": {
      "op": "DUP5"
    },
    "13033": {
      "op": "ADD"
    },
    "13034": {
      "op": "PUSH2",
      "value": "0x32CF"
    },
    "13037": {
      "op": "JUMP"
    },
    "13038": {
      "op": "JUMPDEST"
    },
    "13039": {
      "op": "POP"
    },
    "13040": {
      "op": "DUP6"
    },
    "13041": {
      "op": "DUP3"
    },
    "13042": {
      "op": "LT"
    },
    "13043": {
      "op": "ISZERO"
    },
    "13044": {
      "op": "PUSH2",
      "value": "0x330C"
    },
    "13047": {
      "op": "JUMPI"
    },
    "13048": {
      "op": "DUP8"
    },
    "13049": {
      "op": "DUP6"
    },
    "13050": {
      "op": "ADD"
    },
    "13051": {
      "op": "MLOAD"
    },
    "13052": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13054": {
      "op": "NOT"
    },
    "13055": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "13057": {
      "op": "DUP9"
    },
    "13058": {
      "op": "SWAP1"
    },
    "13059": {
      "op": "SHL"
    },
    "13060": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "13062": {
      "op": "AND"
    },
    "13063": {
      "op": "SHR"
    },
    "13064": {
      "op": "NOT"
    },
    "13065": {
      "op": "AND"
    },
    "13066": {
      "op": "DUP2"
    },
    "13067": {
      "op": "SSTORE"
    },
    "13068": {
      "op": "JUMPDEST"
    },
    "13069": {
      "op": "POP"
    },
    "13070": {
      "op": "POP"
    },
    "13071": {
      "op": "POP"
    },
    "13072": {
      "op": "POP"
    },
    "13073": {
      "op": "POP"
    },
    "13074": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13076": {
      "op": "SWAP1"
    },
    "13077": {
      "op": "DUP2"
    },
    "13078": {
      "op": "SHL"
    },
    "13079": {
      "op": "ADD"
    },
    "13080": {
      "op": "SWAP1"
    },
    "13081": {
      "op": "SSTORE"
    },
    "13082": {
      "op": "POP"
    },
    "13083": {
      "jump": "o",
      "op": "JUMP"
    },
    "13084": {
      "op": "JUMPDEST"
    },
    "13085": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "13090": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "13092": {
      "op": "SHL"
    },
    "13093": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13095": {
      "op": "MSTORE"
    },
    "13096": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "13098": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "13100": {
      "op": "MSTORE"
    },
    "13101": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "13103": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13105": {
      "op": "REVERT"
    },
    "13106": {
      "op": "JUMPDEST"
    },
    "13107": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13109": {
      "op": "DUP3"
    },
    "13110": {
      "op": "NOT"
    },
    "13111": {
      "op": "DUP3"
    },
    "13112": {
      "op": "GT"
    },
    "13113": {
      "op": "ISZERO"
    },
    "13114": {
      "op": "PUSH2",
      "value": "0x3345"
    },
    "13117": {
      "op": "JUMPI"
    },
    "13118": {
      "op": "PUSH2",
      "value": "0x3345"
    },
    "13121": {
      "op": "PUSH2",
      "value": "0x331C"
    },
    "13124": {
      "jump": "i",
      "op": "JUMP"
    },
    "13125": {
      "op": "JUMPDEST"
    },
    "13126": {
      "op": "POP"
    },
    "13127": {
      "op": "ADD"
    },
    "13128": {
      "op": "SWAP1"
    },
    "13129": {
      "jump": "o",
      "op": "JUMP"
    },
    "13130": {
      "op": "JUMPDEST"
    },
    "13131": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13133": {
      "op": "DUP3"
    },
    "13134": {
      "op": "DUP3"
    },
    "13135": {
      "op": "LT"
    },
    "13136": {
      "op": "ISZERO"
    },
    "13137": {
      "op": "PUSH2",
      "value": "0x335C"
    },
    "13140": {
      "op": "JUMPI"
    },
    "13141": {
      "op": "PUSH2",
      "value": "0x335C"
    },
    "13144": {
      "op": "PUSH2",
      "value": "0x331C"
    },
    "13147": {
      "jump": "i",
      "op": "JUMP"
    },
    "13148": {
      "op": "JUMPDEST"
    },
    "13149": {
      "op": "POP"
    },
    "13150": {
      "op": "SUB"
    },
    "13151": {
      "op": "SWAP1"
    },
    "13152": {
      "jump": "o",
      "op": "JUMP"
    },
    "13153": {
      "op": "JUMPDEST"
    },
    "13154": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "13160": {
      "op": "DUP6"
    },
    "13161": {
      "op": "AND"
    },
    "13162": {
      "op": "DUP2"
    },
    "13163": {
      "op": "MSTORE"
    },
    "13164": {
      "op": "DUP4"
    },
    "13165": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13167": {
      "op": "DUP3"
    },
    "13168": {
      "op": "ADD"
    },
    "13169": {
      "op": "MSTORE"
    },
    "13170": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "13172": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13174": {
      "op": "DUP3"
    },
    "13175": {
      "op": "ADD"
    },
    "13176": {
      "op": "MSTORE"
    },
    "13177": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13179": {
      "op": "PUSH2",
      "value": "0x3387"
    },
    "13182": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "13184": {
      "op": "DUP4"
    },
    "13185": {
      "op": "ADD"
    },
    "13186": {
      "op": "DUP6"
    },
    "13187": {
      "op": "PUSH2",
      "value": "0x292D"
    },
    "13190": {
      "jump": "i",
      "op": "JUMP"
    },
    "13191": {
      "op": "JUMPDEST"
    },
    "13192": {
      "op": "SWAP1"
    },
    "13193": {
      "op": "POP"
    },
    "13194": {
      "op": "DUP3"
    },
    "13195": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "13197": {
      "op": "DUP4"
    },
    "13198": {
      "op": "ADD"
    },
    "13199": {
      "op": "MSTORE"
    },
    "13200": {
      "op": "SWAP6"
    },
    "13201": {
      "op": "SWAP5"
    },
    "13202": {
      "op": "POP"
    },
    "13203": {
      "op": "POP"
    },
    "13204": {
      "op": "POP"
    },
    "13205": {
      "op": "POP"
    },
    "13206": {
      "op": "POP"
    },
    "13207": {
      "jump": "o",
      "op": "JUMP"
    },
    "13208": {
      "op": "JUMPDEST"
    },
    "13209": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13211": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13213": {
      "op": "DUP3"
    },
    "13214": {
      "op": "ADD"
    },
    "13215": {
      "op": "PUSH2",
      "value": "0x33AA"
    },
    "13218": {
      "op": "JUMPI"
    },
    "13219": {
      "op": "PUSH2",
      "value": "0x33AA"
    },
    "13222": {
      "op": "PUSH2",
      "value": "0x331C"
    },
    "13225": {
      "jump": "i",
      "op": "JUMP"
    },
    "13226": {
      "op": "JUMPDEST"
    },
    "13227": {
      "op": "POP"
    },
    "13228": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13230": {
      "op": "ADD"
    },
    "13231": {
      "op": "SWAP1"
    },
    "13232": {
      "jump": "o",
      "op": "JUMP"
    },
    "13233": {
      "op": "JUMPDEST"
    },
    "13234": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13236": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13238": {
      "op": "DUP3"
    },
    "13239": {
      "op": "DUP5"
    },
    "13240": {
      "op": "SUB"
    },
    "13241": {
      "op": "SLT"
    },
    "13242": {
      "op": "ISZERO"
    },
    "13243": {
      "op": "PUSH2",
      "value": "0x33C3"
    },
    "13246": {
      "op": "JUMPI"
    },
    "13247": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13249": {
      "op": "DUP1"
    },
    "13250": {
      "op": "REVERT"
    },
    "13251": {
      "op": "JUMPDEST"
    },
    "13252": {
      "op": "DUP2"
    },
    "13253": {
      "op": "MLOAD"
    },
    "13254": {
      "op": "PUSH2",
      "value": "0x2C9E"
    },
    "13257": {
      "op": "DUP2"
    },
    "13258": {
      "op": "PUSH2",
      "value": "0x2C6C"
    },
    "13261": {
      "jump": "i",
      "op": "JUMP"
    },
    "13262": {
      "op": "JUMPDEST"
    },
    "13263": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13265": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13267": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13269": {
      "op": "SHL"
    },
    "13270": {
      "op": "SUB"
    },
    "13271": {
      "op": "DUP4"
    },
    "13272": {
      "op": "GT"
    },
    "13273": {
      "op": "ISZERO"
    },
    "13274": {
      "op": "PUSH2",
      "value": "0x33E5"
    },
    "13277": {
      "op": "JUMPI"
    },
    "13278": {
      "op": "PUSH2",
      "value": "0x33E5"
    },
    "13281": {
      "op": "PUSH2",
      "value": "0x299D"
    },
    "13284": {
      "jump": "i",
      "op": "JUMP"
    },
    "13285": {
      "op": "JUMPDEST"
    },
    "13286": {
      "op": "PUSH2",
      "value": "0x33F9"
    },
    "13289": {
      "op": "DUP4"
    },
    "13290": {
      "op": "PUSH2",
      "value": "0x33F3"
    },
    "13293": {
      "op": "DUP4"
    },
    "13294": {
      "op": "SLOAD"
    },
    "13295": {
      "op": "PUSH2",
      "value": "0x3084"
    },
    "13298": {
      "jump": "i",
      "op": "JUMP"
    },
    "13299": {
      "op": "JUMPDEST"
    },
    "13300": {
      "op": "DUP4"
    },
    "13301": {
      "op": "PUSH2",
      "value": "0x320E"
    },
    "13304": {
      "jump": "i",
      "op": "JUMP"
    },
    "13305": {
      "op": "JUMPDEST"
    },
    "13306": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13308": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "13310": {
      "op": "DUP5"
    },
    "13311": {
      "op": "GT"
    },
    "13312": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13314": {
      "op": "DUP2"
    },
    "13315": {
      "op": "EQ"
    },
    "13316": {
      "op": "PUSH2",
      "value": "0x342D"
    },
    "13319": {
      "op": "JUMPI"
    },
    "13320": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13322": {
      "op": "DUP6"
    },
    "13323": {
      "op": "ISZERO"
    },
    "13324": {
      "op": "PUSH2",
      "value": "0x3415"
    },
    "13327": {
      "op": "JUMPI"
    },
    "13328": {
      "op": "POP"
    },
    "13329": {
      "op": "DUP4"
    },
    "13330": {
      "op": "DUP3"
    },
    "13331": {
      "op": "ADD"
    },
    "13332": {
      "op": "CALLDATALOAD"
    },
    "13333": {
      "op": "JUMPDEST"
    },
    "13334": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13336": {
      "op": "NOT"
    },
    "13337": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "13339": {
      "op": "DUP8"
    },
    "13340": {
      "op": "SWAP1"
    },
    "13341": {
      "op": "SHL"
    },
    "13342": {
      "op": "SHR"
    },
    "13343": {
      "op": "NOT"
    },
    "13344": {
      "op": "AND"
    },
    "13345": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13347": {
      "op": "DUP7"
    },
    "13348": {
      "op": "SWAP1"
    },
    "13349": {
      "op": "SHL"
    },
    "13350": {
      "op": "OR"
    },
    "13351": {
      "op": "DUP4"
    },
    "13352": {
      "op": "SSTORE"
    },
    "13353": {
      "op": "PUSH2",
      "value": "0x3487"
    },
    "13356": {
      "op": "JUMP"
    },
    "13357": {
      "op": "JUMPDEST"
    },
    "13358": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13360": {
      "op": "DUP4"
    },
    "13361": {
      "op": "DUP2"
    },
    "13362": {
      "op": "MSTORE"
    },
    "13363": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13365": {
      "op": "SWAP1"
    },
    "13366": {
      "op": "KECCAK256"
    },
    "13367": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "13369": {
      "op": "NOT"
    },
    "13370": {
      "op": "DUP7"
    },
    "13371": {
      "op": "AND"
    },
    "13372": {
      "op": "SWAP1"
    },
    "13373": {
      "op": "DUP4"
    },
    "13374": {
      "op": "JUMPDEST"
    },
    "13375": {
      "op": "DUP3"
    },
    "13376": {
      "op": "DUP2"
    },
    "13377": {
      "op": "LT"
    },
    "13378": {
      "op": "ISZERO"
    },
    "13379": {
      "op": "PUSH2",
      "value": "0x345E"
    },
    "13382": {
      "op": "JUMPI"
    },
    "13383": {
      "op": "DUP7"
    },
    "13384": {
      "op": "DUP6"
    },
    "13385": {
      "op": "ADD"
    },
    "13386": {
      "op": "CALLDATALOAD"
    },
    "13387": {
      "op": "DUP3"
    },
    "13388": {
      "op": "SSTORE"
    },
    "13389": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13391": {
      "op": "SWAP5"
    },
    "13392": {
      "op": "DUP6"
    },
    "13393": {
      "op": "ADD"
    },
    "13394": {
      "op": "SWAP5"
    },
    "13395": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13397": {
      "op": "SWAP1"
    },
    "13398": {
      "op": "SWAP3"
    },
    "13399": {
      "op": "ADD"
    },
    "13400": {
      "op": "SWAP2"
    },
    "13401": {
      "op": "ADD"
    },
    "13402": {
      "op": "PUSH2",
      "value": "0x343E"
    },
    "13405": {
      "op": "JUMP"
    },
    "13406": {
      "op": "JUMPDEST"
    },
    "13407": {
      "op": "POP"
    },
    "13408": {
      "op": "DUP7"
    },
    "13409": {
      "op": "DUP3"
    },
    "13410": {
      "op": "LT"
    },
    "13411": {
      "op": "ISZERO"
    },
    "13412": {
      "op": "PUSH2",
      "value": "0x347B"
    },
    "13415": {
      "op": "JUMPI"
    },
    "13416": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13418": {
      "op": "NOT"
    },
    "13419": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "13421": {
      "op": "DUP9"
    },
    "13422": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "13424": {
      "op": "SHL"
    },
    "13425": {
      "op": "AND"
    },
    "13426": {
      "op": "SHR"
    },
    "13427": {
      "op": "NOT"
    },
    "13428": {
      "op": "DUP5"
    },
    "13429": {
      "op": "DUP8"
    },
    "13430": {
      "op": "ADD"
    },
    "13431": {
      "op": "CALLDATALOAD"
    },
    "13432": {
      "op": "AND"
    },
    "13433": {
      "op": "DUP2"
    },
    "13434": {
      "op": "SSTORE"
    },
    "13435": {
      "op": "JUMPDEST"
    },
    "13436": {
      "op": "POP"
    },
    "13437": {
      "op": "POP"
    },
    "13438": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13440": {
      "op": "DUP6"
    },
    "13441": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13443": {
      "op": "SHL"
    },
    "13444": {
      "op": "ADD"
    },
    "13445": {
      "op": "DUP4"
    },
    "13446": {
      "op": "SSTORE"
    },
    "13447": {
      "op": "JUMPDEST"
    },
    "13448": {
      "op": "POP"
    },
    "13449": {
      "op": "POP"
    },
    "13450": {
      "op": "POP"
    },
    "13451": {
      "op": "POP"
    },
    "13452": {
      "op": "POP"
    },
    "13453": {
      "jump": "o",
      "op": "JUMP"
    },
    "13454": {
      "op": "JUMPDEST"
    },
    "13455": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13457": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13459": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13461": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "13463": {
      "op": "SHL"
    },
    "13464": {
      "op": "SUB"
    },
    "13465": {
      "op": "DUP1"
    },
    "13466": {
      "op": "DUP5"
    },
    "13467": {
      "op": "AND"
    },
    "13468": {
      "op": "DUP1"
    },
    "13469": {
      "op": "PUSH2",
      "value": "0x34B6"
    },
    "13472": {
      "op": "JUMPI"
    },
    "13473": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "13478": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "13480": {
      "op": "SHL"
    },
    "13481": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13483": {
      "op": "MSTORE"
    },
    "13484": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "13486": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "13488": {
      "op": "MSTORE"
    },
    "13489": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "13491": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13493": {
      "op": "REVERT"
    },
    "13494": {
      "op": "JUMPDEST"
    },
    "13495": {
      "op": "SWAP3"
    },
    "13496": {
      "op": "AND"
    },
    "13497": {
      "op": "SWAP2"
    },
    "13498": {
      "op": "SWAP1"
    },
    "13499": {
      "op": "SWAP2"
    },
    "13500": {
      "op": "DIV"
    },
    "13501": {
      "op": "SWAP3"
    },
    "13502": {
      "op": "SWAP2"
    },
    "13503": {
      "op": "POP"
    },
    "13504": {
      "op": "POP"
    },
    "13505": {
      "jump": "o",
      "op": "JUMP"
    },
    "13506": {
      "op": "JUMPDEST"
    },
    "13507": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13509": {
      "op": "DUP1"
    },
    "13510": {
      "op": "DUP3"
    },
    "13511": {
      "op": "MSTORE"
    },
    "13512": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "13514": {
      "op": "SWAP1"
    },
    "13515": {
      "op": "DUP3"
    },
    "13516": {
      "op": "ADD"
    },
    "13517": {
      "op": "MSTORE"
    },
    "13518": {
      "op": "PUSH20",
      "value": "0x2330B4B632B2103A379039B2B7321022BA3432B9"
    },
    "13539": {
      "op": "PUSH1",
      "value": "0x61"
    },
    "13541": {
      "op": "SHL"
    },
    "13542": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13544": {
      "op": "DUP3"
    },
    "13545": {
      "op": "ADD"
    },
    "13546": {
      "op": "MSTORE"
    },
    "13547": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "13549": {
      "op": "ADD"
    },
    "13550": {
      "op": "SWAP1"
    },
    "13551": {
      "jump": "o",
      "op": "JUMP"
    },
    "13552": {
      "op": "JUMPDEST"
    },
    "13553": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13555": {
      "op": "DUP3"
    },
    "13556": {
      "op": "MLOAD"
    },
    "13557": {
      "op": "PUSH2",
      "value": "0x3502"
    },
    "13560": {
      "op": "DUP2"
    },
    "13561": {
      "op": "DUP5"
    },
    "13562": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13564": {
      "op": "DUP8"
    },
    "13565": {
      "op": "ADD"
    },
    "13566": {
      "op": "PUSH2",
      "value": "0x2901"
    },
    "13569": {
      "jump": "i",
      "op": "JUMP"
    },
    "13570": {
      "op": "JUMPDEST"
    },
    "13571": {
      "op": "SWAP2"
    },
    "13572": {
      "op": "SWAP1"
    },
    "13573": {
      "op": "SWAP2"
    },
    "13574": {
      "op": "ADD"
    },
    "13575": {
      "op": "SWAP3"
    },
    "13576": {
      "op": "SWAP2"
    },
    "13577": {
      "op": "POP"
    },
    "13578": {
      "op": "POP"
    },
    "13579": {
      "jump": "o",
      "op": "JUMP"
    },
    "13580": {
      "op": "JUMPDEST"
    },
    "13581": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13583": {
      "op": "DUP1"
    },
    "13584": {
      "op": "DUP4"
    },
    "13585": {
      "op": "SLOAD"
    },
    "13586": {
      "op": "PUSH2",
      "value": "0x351A"
    },
    "13589": {
      "op": "DUP2"
    },
    "13590": {
      "op": "PUSH2",
      "value": "0x3084"
    },
    "13593": {
      "jump": "i",
      "op": "JUMP"
    },
    "13594": {
      "op": "JUMPDEST"
    },
    "13595": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13597": {
      "op": "DUP3"
    },
    "13598": {
      "op": "DUP2"
    },
    "13599": {
      "op": "AND"
    },
    "13600": {
      "op": "DUP1"
    },
    "13601": {
      "op": "ISZERO"
    },
    "13602": {
      "op": "PUSH2",
      "value": "0x3532"
    },
    "13605": {
      "op": "JUMPI"
    },
    "13606": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13608": {
      "op": "DUP2"
    },
    "13609": {
      "op": "EQ"
    },
    "13610": {
      "op": "PUSH2",
      "value": "0x3547"
    },
    "13613": {
      "op": "JUMPI"
    },
    "13614": {
      "op": "PUSH2",
      "value": "0x30FE"
    },
    "13617": {
      "op": "JUMP"
    },
    "13618": {
      "op": "JUMPDEST"
    },
    "13619": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "13621": {
      "op": "NOT"
    },
    "13622": {
      "op": "DUP5"
    },
    "13623": {
      "op": "AND"
    },
    "13624": {
      "op": "DUP8"
    },
    "13625": {
      "op": "MSTORE"
    },
    "13626": {
      "op": "DUP3"
    },
    "13627": {
      "op": "ISZERO"
    },
    "13628": {
      "op": "ISZERO"
    },
    "13629": {
      "op": "DUP4"
    },
    "13630": {
      "op": "MUL"
    },
    "13631": {
      "op": "DUP8"
    },
    "13632": {
      "op": "ADD"
    },
    "13633": {
      "op": "SWAP5"
    },
    "13634": {
      "op": "POP"
    },
    "13635": {
      "op": "PUSH2",
      "value": "0x30FE"
    },
    "13638": {
      "op": "JUMP"
    },
    "13639": {
      "op": "JUMPDEST"
    },
    "13640": {
      "op": "DUP8"
    },
    "13641": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13643": {
      "op": "MSTORE"
    },
    "13644": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13646": {
      "op": "DUP1"
    },
    "13647": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13649": {
      "op": "KECCAK256"
    },
    "13650": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13652": {
      "op": "JUMPDEST"
    },
    "13653": {
      "op": "DUP6"
    },
    "13654": {
      "op": "DUP2"
    },
    "13655": {
      "op": "LT"
    },
    "13656": {
      "op": "ISZERO"
    },
    "13657": {
      "op": "PUSH2",
      "value": "0x356D"
    },
    "13660": {
      "op": "JUMPI"
    },
    "13661": {
      "op": "DUP2"
    },
    "13662": {
      "op": "SLOAD"
    },
    "13663": {
      "op": "DUP11"
    },
    "13664": {
      "op": "DUP3"
    },
    "13665": {
      "op": "ADD"
    },
    "13666": {
      "op": "MSTORE"
    },
    "13667": {
      "op": "SWAP1"
    },
    "13668": {
      "op": "DUP5"
    },
    "13669": {
      "op": "ADD"
    },
    "13670": {
      "op": "SWAP1"
    },
    "13671": {
      "op": "DUP3"
    },
    "13672": {
      "op": "ADD"
    },
    "13673": {
      "op": "PUSH2",
      "value": "0x3554"
    },
    "13676": {
      "op": "JUMP"
    },
    "13677": {
      "op": "JUMPDEST"
    },
    "13678": {
      "op": "POP"
    },
    "13679": {
      "op": "POP"
    },
    "13680": {
      "op": "POP"
    },
    "13681": {
      "op": "SWAP6"
    },
    "13682": {
      "op": "SWAP1"
    },
    "13683": {
      "op": "SWAP2"
    },
    "13684": {
      "op": "ADD"
    },
    "13685": {
      "op": "SWAP7"
    },
    "13686": {
      "op": "SWAP6"
    },
    "13687": {
      "op": "POP"
    },
    "13688": {
      "op": "POP"
    },
    "13689": {
      "op": "POP"
    },
    "13690": {
      "op": "POP"
    },
    "13691": {
      "op": "POP"
    },
    "13692": {
      "op": "POP"
    },
    "13693": {
      "jump": "o",
      "op": "JUMP"
    },
    "13694": {
      "op": "JUMPDEST"
    },
    "13695": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "13697": {
      "op": "DUP2"
    },
    "13698": {
      "op": "MSTORE"
    },
    "13699": {
      "op": "DUP8"
    },
    "13700": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "13702": {
      "op": "DUP3"
    },
    "13703": {
      "op": "ADD"
    },
    "13704": {
      "op": "MSTORE"
    },
    "13705": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13707": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "13710": {
      "op": "DUP10"
    },
    "13711": {
      "op": "DUP12"
    },
    "13712": {
      "op": "DUP3"
    },
    "13713": {
      "op": "DUP6"
    },
    "13714": {
      "op": "ADD"
    },
    "13715": {
      "op": "CALLDATACOPY"
    },
    "13716": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13718": {
      "op": "DUP11"
    },
    "13719": {
      "op": "DUP5"
    },
    "13720": {
      "op": "ADD"
    },
    "13721": {
      "op": "DUP3"
    },
    "13722": {
      "op": "ADD"
    },
    "13723": {
      "op": "MSTORE"
    },
    "13724": {
      "op": "PUSH5",
      "value": "0xFFFFFFFFFF"
    },
    "13730": {
      "op": "SWAP9"
    },
    "13731": {
      "op": "DUP10"
    },
    "13732": {
      "op": "AND"
    },
    "13733": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13735": {
      "op": "DUP5"
    },
    "13736": {
      "op": "ADD"
    },
    "13737": {
      "op": "MSTORE"
    },
    "13738": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "13740": {
      "op": "SWAP8"
    },
    "13741": {
      "op": "SWAP1"
    },
    "13742": {
      "op": "SWAP8"
    },
    "13743": {
      "op": "AND"
    },
    "13744": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13746": {
      "op": "DUP4"
    },
    "13747": {
      "op": "ADD"
    },
    "13748": {
      "op": "MSTORE"
    },
    "13749": {
      "op": "POP"
    },
    "13750": {
      "op": "PUSH3",
      "value": "0xFFFFFF"
    },
    "13754": {
      "op": "SWAP5"
    },
    "13755": {
      "op": "SWAP1"
    },
    "13756": {
      "op": "SWAP5"
    },
    "13757": {
      "op": "AND"
    },
    "13758": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "13760": {
      "op": "DUP6"
    },
    "13761": {
      "op": "ADD"
    },
    "13762": {
      "op": "MSTORE"
    },
    "13763": {
      "op": "SWAP2"
    },
    "13764": {
      "op": "DUP6"
    },
    "13765": {
      "op": "AND"
    },
    "13766": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "13768": {
      "op": "DUP5"
    },
    "13769": {
      "op": "ADD"
    },
    "13770": {
      "op": "MSTORE"
    },
    "13771": {
      "op": "SWAP1"
    },
    "13772": {
      "op": "SWAP4"
    },
    "13773": {
      "op": "AND"
    },
    "13774": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13776": {
      "op": "DUP3"
    },
    "13777": {
      "op": "ADD"
    },
    "13778": {
      "op": "MSTORE"
    },
    "13779": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "13782": {
      "op": "SWAP1"
    },
    "13783": {
      "op": "SWAP3"
    },
    "13784": {
      "op": "AND"
    },
    "13785": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "13787": {
      "op": "DUP4"
    },
    "13788": {
      "op": "ADD"
    },
    "13789": {
      "op": "MSTORE"
    },
    "13790": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "13792": {
      "op": "SWAP1"
    },
    "13793": {
      "op": "SWAP3"
    },
    "13794": {
      "op": "ADD"
    },
    "13795": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "13797": {
      "op": "NOT"
    },
    "13798": {
      "op": "AND"
    },
    "13799": {
      "op": "ADD"
    },
    "13800": {
      "op": "ADD"
    },
    "13801": {
      "op": "SWAP2"
    },
    "13802": {
      "op": "SWAP1"
    },
    "13803": {
      "op": "POP"
    },
    "13804": {
      "jump": "o",
      "op": "JUMP"
    },
    "13805": {
      "op": "JUMPDEST"
    },
    "13806": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13808": {
      "op": "DUP1"
    },
    "13809": {
      "op": "DUP3"
    },
    "13810": {
      "op": "SLT"
    },
    "13811": {
      "op": "DUP1"
    },
    "13812": {
      "op": "ISZERO"
    },
    "13813": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13815": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13817": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "13819": {
      "op": "SHL"
    },
    "13820": {
      "op": "SUB"
    },
    "13821": {
      "op": "DUP5"
    },
    "13822": {
      "op": "SWAP1"
    },
    "13823": {
      "op": "SUB"
    },
    "13824": {
      "op": "DUP6"
    },
    "13825": {
      "op": "SGT"
    },
    "13826": {
      "op": "AND"
    },
    "13827": {
      "op": "ISZERO"
    },
    "13828": {
      "op": "PUSH2",
      "value": "0x360F"
    },
    "13831": {
      "op": "JUMPI"
    },
    "13832": {
      "op": "PUSH2",
      "value": "0x360F"
    },
    "13835": {
      "op": "PUSH2",
      "value": "0x331C"
    },
    "13838": {
      "jump": "i",
      "op": "JUMP"
    },
    "13839": {
      "op": "JUMPDEST"
    },
    "13840": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13842": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "13844": {
      "op": "SHL"
    },
    "13845": {
      "op": "DUP4"
    },
    "13846": {
      "op": "SWAP1"
    },
    "13847": {
      "op": "SUB"
    },
    "13848": {
      "op": "DUP5"
    },
    "13849": {
      "op": "SLT"
    },
    "13850": {
      "op": "DUP2"
    },
    "13851": {
      "op": "AND"
    },
    "13852": {
      "op": "ISZERO"
    },
    "13853": {
      "op": "PUSH2",
      "value": "0x3628"
    },
    "13856": {
      "op": "JUMPI"
    },
    "13857": {
      "op": "PUSH2",
      "value": "0x3628"
    },
    "13860": {
      "op": "PUSH2",
      "value": "0x331C"
    },
    "13863": {
      "jump": "i",
      "op": "JUMP"
    },
    "13864": {
      "op": "JUMPDEST"
    },
    "13865": {
      "op": "POP"
    },
    "13866": {
      "op": "POP"
    },
    "13867": {
      "op": "ADD"
    },
    "13868": {
      "op": "SWAP1"
    },
    "13869": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "a7487d11c8b6e3d69194981f8268b3b2e0a379c4",
  "source": "pragma solidity 0.8.15;\n// SPDX-License-Identifier: Unlicensed\n\nimport \"./wizards.sol\";\nimport \"./interfaces/IERC20.sol\";\nimport \"./interfaces/IERC165.sol\";\nimport \"./interfaces/IERC721.sol\";\nimport \"./interfaces/IERC721Enumerable.sol\";\n//import \"./helpers/base64.sol\";\nimport './helpers/ERC721A.sol';\nimport './helpers/ERC721.sol';\nimport './helpers/ERC165.sol';\nimport './helpers/Ownable.sol';\nimport './helpers/Context.sol';\nimport './helpers/ReentrancyGuard.sol';\nimport './helpers/ERC2981Collection.sol';\nimport './libraries/Strings.sol';\nimport './libraries/Address.sol';\nimport {DoubleEndedQueue} from \"@openzeppelin/contracts/utils/structs/DoubleEndedQueue.sol\";\n\n//contract BMMultipass is ERC721Enumerable, ReentrancyGuard, Ownable {\ncontract Governance is ReentrancyGuard, Ownable {\n\n//    IERC20  ecosystemTokens;\n    Wizards wizardsNFT;\n\n    // the value stored here is shifted over by one because 0 means no vote, 1 means voting for slot 0\n    mapping (uint256 => mapping (uint256 => uint256)) public proposalToNFTVotes;\n\n    // used to find active tasks\n    struct TaskType {\n        mapping (uint40 => uint256) nextActiveTimeThreshold; // for recurring tasks -- todo -- add waitTime or ...\n        string IPFSHash; // holds description\n        bool paused;\n        uint40 proposalID; // proposal ID or 0 if task\n        uint8 numFieldsToHash;\n        uint24 timeBonus;\n        uint40 begTimestamp;\n        uint40 endTimestamp;\n        uint16 availableSlots;\n    }\n\n    // include parent???\n    struct Task {\n        string IPFSHash; // holds description\n        uint40 NFTID; // wizard ID of who is assigned task\n        bytes32 hash; // hashed input to be validated\n        bytes32 refuterHash; // correct hash according to refuter\n        uint8 numFieldsToHash; // input fields\n        uint24 timeBonus; // increases Wizard's activation time, in seconds\n//        uint8 strikes; // number of times confirmation has failed, use existence of refuterID\n        uint80 payment; //\n        uint16 verifierID; // wizardId of Verifier\n        uint16 refuterID; // wizardId of Verifier\n        uint40 verificationReservedTimestamp; // time when verification period ends\n    }\n\n    struct Proposal {\n        string IPFSHash;\n        uint16 numberOfOptions;\n        uint16[8] votes;\n        uint40 totalVotes;\n        uint40 begTimestamp;\n        uint40 endTimestamp;\n    }\n\n\n\n    TaskType[] public taskTypes; // we must keep task types low in quantity to avoid gas issues\n\n    // todo -- these should be dequeues\n    DoubleEndedQueue.Bytes32Deque public tasksSubmitted;\n//    uint256[] public tasksVerifying; // reduce size?\n\n//    DoubleEndedQueue.Bytes32Deque  public myQueue;\n\n    mapping (uint256 => Proposal) public proposals;\n    uint256 totalProposals;\n\n    mapping (uint256 => Task) public tasks;\n    uint256 public tasksAttempted;\n\n    // todo -- Adjustable\n    uint256 verificationTime = 10*60; // 10 minutes\n    uint256 taskVerificationTimeBonus = 1 days; // 1 day\n\n\n    event VerificationAssigned(uint256 wizardId, uint256 taskId);\n    event VerificationFailed(uint256 VerifierIdFirst, uint256 VerifierIdSecond, uint256 taskId);\n    event VerificationSucceeded(uint256 taskDoer, uint256 Verifier, uint256 taskId, bytes32 hash, bool isHashCorrect);\n    event HashTesting(bytes32 hash, bool isHashCorrect, bytes32 firstEncoded, bytes firstUnencoded);\n    event NewTaskTypeCreated(string _IPFSHash,uint40 _proposalID, uint8 _numFieldsToHash, uint24 _timeBonus,\n          uint40 _begTimestamp, uint40 _endTimestamp, uint16 _availableSlots);\n    event TaskCompleted(uint256 wizardId, uint256 taskId, string IPFSHash, uint256 data);\n\n    /////////////////////////////\n    //////  TEMP Functions ///////\n    /////////////////////////////\n\n    /*\n    function getFront() view external returns ( uint256) {\n        require(DoubleEndedQueue.length(myQueue)!=0, \"Empty Dequeue\");\n        return uint256(DoubleEndedQueue.front(myQueue));\n    }\n\n    function pushFront(bytes32 _data) external {\n    //  Task memory myTask = Task(\"0 - MYIPFSHASH\", 1, keccak256(4), 3, 4, 5, 6, 7);\n        DoubleEndedQueue.pushFront(myQueue,bytes32(_data));\n    }\n    */\n\n    /////////////////////////////\n    //////  Get Functions ///////\n    /////////////////////////////\n\n/*\n// todo -- delete this helper function\n    function getTaskTypeFields(uint256 _id) external view returns (uint8 ) {\n        return taskTypes[_id].numFieldsToHash;\n    }\n*/\n    function getTaskById(uint256 _taskId) external view returns (Task memory) {\n        return tasks[_taskId];\n    }\n\n    function getVotes(uint256 proposalID) external view returns (uint16[] memory) {\n        require(proposalID < totalProposals, \"no such proposal\");\n        uint16[] memory voteArray = new uint16[](proposals[proposalID].numberOfOptions);\n        for(uint256 i = 0; i< voteArray.length; i++){\n            voteArray[i] = proposals[proposalID].votes[i];\n        }\n        return voteArray;\n    }\n\n    function getWinningVote(uint256 proposalID) external view returns (uint256 ) {\n        require(proposalID < totalProposals, \"no such proposal\");\n        require( block.timestamp > proposals[proposalID].endTimestamp, \"voting still active\"); // todo -- end voting only on time? Or, what?\n        // todo -- is there a need to win by a certain percent?\n        uint256 winningVote;\n        uint256 winningVoteAmount;\n        uint256 tie=0;\n        for(uint256 i=0; i< proposals[proposalID].numberOfOptions; i++){ // start at 1 as 0 means no vote???\n            if(proposals[proposalID].votes[i] > winningVoteAmount) {\n                winningVoteAmount = proposals[proposalID].votes[i];\n                winningVote = i;\n                if (tie==1) { tie = 0;}\n            }\n            else if(proposals[proposalID].votes[i] == winningVoteAmount){\n                tie=1;\n            }\n        }\n        require(tie==0, \"there was a tie.\");\n        return winningVote;\n    }\n\n    // todo -- delete tasktype function\n\n    function areTasksAvailableToConfirm(uint256 _wizID) external view returns (bool) {\n        uint256 totalTasksSubmitted = DoubleEndedQueue.length(tasksSubmitted);\n        Task memory myTask;\n        uint256 taskId;\n        // todo --implement randomness\n//        uint256[25] memory potentialTasks;\n        for(uint256 i =0; i < totalTasksSubmitted; ){\n            if( myTask.verificationReservedTimestamp > block.timestamp && myTask.NFTID != _wizID && myTask.refuterID!= _wizID){ // todo -- make sure to start IDs at 1\n                return true;\n            }\n            unchecked{++i;}\n        }\n        return false;\n    }\n\n    // todo -- see if we need to include IDs here -- may not need to\n    function getMyAvailableTaskTypes(uint40 _wizId) external view returns (string[] memory) {\n        uint256 count;\n        for(uint256 i=0; i< taskTypes.length;){\n            if(taskTypes[i].nextActiveTimeThreshold[_wizId] < block.timestamp\n            && taskTypes[i].begTimestamp <= block.timestamp && taskTypes[i].endTimestamp > block.timestamp\n            && taskTypes[i].availableSlots > 1\n            ) {\n                unchecked{++count;}\n            }\n            else {\n                string[] memory myReturn= new string[](1);\n                myReturn[0] = \"No luck.\";\n                return myReturn;\n            }\n            unchecked{++i;}\n        }\n\n        string[] memory myTasks = new string[](count);\n        uint256 counter = 0;\n        for(uint256 i=0; i< taskTypes.length;){\n            if(taskTypes[i].nextActiveTimeThreshold[_wizId] < block.timestamp\n            && taskTypes[i].begTimestamp <= block.timestamp && taskTypes[i].endTimestamp > block.timestamp\n            && taskTypes[i].availableSlots > 1\n            ) {\n                myTasks[i] = taskTypes[i].IPFSHash;\n                unchecked{++counter;}\n                if(counter >= count) {\n                    break;\n                }\n            }\n            unchecked{++i;}\n        }\n        return myTasks;\n    }\n\n\n    /////////////////////////////\n    //////  Set Functions ///////\n    /////////////////////////////\n\n    function setNFTAddress(address _addy) external onlyOwner {\n        wizardsNFT = Wizards(_addy);\n    }\n\n\n//    function setERC20Address(address _addy) external onlyOwner {\n//        ecosystemTokens = IERC20(_addy);\n//    }\n\n    function deleteTaskTypeByIPFSHash(string memory _IPFSHash) external {\n        for(uint256 i=0; i<taskTypes.length;){\n            if(keccak256(abi.encodePacked(taskTypes[i].IPFSHash)) == keccak256(abi.encodePacked(_IPFSHash))){\n//                taskTypes[i] = taskTypes[taskTypes.length-1];\n                TaskType storage myTaskType = taskTypes[i];\n                TaskType storage displacedTaskType = taskTypes[taskTypes.length-1];\n//                myTaskType.nextActiveTimeThreshold = displacedTaskType.nextActiveTimeThreshold;\n                myTaskType = displacedTaskType;\n                delete taskTypes[taskTypes.length-1];\n                // todo see if this works at all\n//        mapping (uint40 => uint256) nextActiveTimeThreshold; // for recurring tasks -- todo -- add waitTime or ...\n//        string IPFSHash; // holds description\n//        bool paused;\n//        uint40 proposalID; // proposal ID or 0 if task\n//        uint8 numFieldsToHash;\n//        uint24 timeBonus;\n//        uint40 begTimestamp;\n//        uint40 endTimestamp;\n//        uint16 availableSlots;\n\n\n                delete taskTypes[taskTypes.length-1];\n                break;\n            }\n            unchecked{++i;}\n        }\n    }\n\n\n\n    //////////////////////////////\n    //////  Main Functions ///////\n    //////////////////////////////\n\n    /** @dev Constructor for HOADAO\n        @param _nft -- contract address for NFTs\n      */\n    constructor(address _nft){\n//        ecosystemTokens = IERC20(_erc20);\n        wizardsNFT = Wizards(_nft);\n\n//        contractSettings = ContractSettings({\n//        });\n\n    }\n\n    // Required to receive ETH\n    receive() external payable {\n    }\n\n    function vote(uint256 proposalID, uint256 NFTID, uint256 _vote) external onlyMember {\n        require(proposalID < totalProposals, \"no such proposal\");\n        require(wizardsNFT.ownerOf(NFTID)==msg.sender, \"not owner of NFT\");\n        require(proposalToNFTVotes[proposalID][NFTID]==0, \"already voted\");\n        require(_vote!=0 && _vote <= proposals[proposalID].numberOfOptions);\n        require(block.timestamp < proposals[proposalID].endTimestamp);\n        proposalToNFTVotes[proposalID][NFTID] = _vote + 1; // vote reference shifted by one\n        proposals[proposalID].votes[_vote] += 1; // increment votes\n        proposals[proposalID].totalVotes += 1;\n    }\n\n    // votes won't need to be confirmed\n    function createProposal(string calldata _IPFSHash, uint16 _numberOfOptions, uint24 _timeBonus, uint40 _begTimestamp, uint40 _endTimestamp, uint16 _availableSlots) external onlyBoard {\n        require(_numberOfOptions > 1 && _numberOfOptions < 257, \"invalid number of options\");\n        totalProposals += 1; // keep nothing at 0\n        Proposal storage myProposal = proposals[totalProposals];\n            myProposal.begTimestamp = _begTimestamp;\n            myProposal.endTimestamp = _endTimestamp;\n            myProposal.numberOfOptions = _numberOfOptions;\n            myProposal.IPFSHash = _IPFSHash;\n\n        _createTaskType(_IPFSHash, uint40(totalProposals), 0, _timeBonus, _begTimestamp, _endTimestamp, _availableSlots);\n        // todo --  emit event\n    }\n\n\n    function createTaskType(string calldata _IPFSHash, uint8 _numFieldsToHash, uint24 _timeBonus, uint40 _begTimestamp,\n                uint40 _endTimestamp, uint16 _availableSlots) external onlyBoard {\n        _createTaskType(_IPFSHash, 0, _numFieldsToHash, _timeBonus, _begTimestamp, _endTimestamp, _availableSlots);\n    }\n\n    function _createTaskType(string calldata _IPFSHash, uint40 _proposalID, uint8 _numFieldsToHash, uint24 _timeBonus,\n             uint40 _begTimestamp, uint40 _endTimestamp, uint16 _availableSlots) internal {\n        uint256 taskTypesLength = taskTypes.length;\n        taskTypes.push();\n        TaskType storage newTaskType = taskTypes[taskTypesLength];\n            newTaskType.IPFSHash =_IPFSHash;\n            newTaskType.paused = false;\n            newTaskType.proposalID = _proposalID;\n            newTaskType.numFieldsToHash = _numFieldsToHash;\n            newTaskType.timeBonus = _timeBonus;\n            newTaskType.begTimestamp = _begTimestamp;\n            newTaskType.endTimestamp = _endTimestamp;\n            newTaskType.availableSlots = _availableSlots;\n        // todo --  emit event\n        emit NewTaskTypeCreated(_IPFSHash, _proposalID, _numFieldsToHash, _timeBonus, _begTimestamp, _endTimestamp, _availableSlots);\n    }\n\n\n    function claimRandomTaskForVerification(uint256 _wizID) external {\n        uint256 totalTasksSubmitted = DoubleEndedQueue.length(tasksSubmitted);\n        Task memory myTask;\n        uint256 taskId;\n        // todo --implement randomness\n//        uint256[25] memory potentialTasks;\n        for(uint256 i =0; i < totalTasksSubmitted; ){\n            if( myTask.verificationReservedTimestamp < block.timestamp && myTask.NFTID != _wizID && myTask.refuterID!= _wizID){ // todo -- make sure to start IDs at 1\n            // todo -- use above  version (removed restriction for checking)\n//            if( myTask.verificationReservedTimestamp < block.timestamp && myTask.refuterID!= _wizID){\n//                potentialTasks.push(uint256(DoubleEndedQueue.at(tasksSubmitted, i)));\n                taskId = uint256(DoubleEndedQueue.at(tasksSubmitted, i));\n                myTask = tasks[taskId];\n\n                /*\n                // adjust dequeue\n                tasksSubmitted[0], tasksSubmitted[uint128(i)] = bytes32(0), tasksSubmitted[uint128(i)];\n                tasksVerifying.push(uint256(tasksSubmitted[uint128(i)]));\n                // shift head of dequeue to maintain structure (slight penalty for head)\n                if (i != 0) {\n                    tasksSubmitted._data[uint128(i)] = tasksSubmitted._data[tasksSubmitted.begin];\n                }\n                DoubleEndedQueue.pop(tasksSubmitted);\n                */\n\n                // update task\n                // assign task to home boy\n                myTask.verifierID = uint16(_wizID);\n                myTask.verificationReservedTimestamp = uint40(block.timestamp + verificationTime);\n                tasks[uint256(DoubleEndedQueue.at(tasksSubmitted, i))] = myTask;\n            }\n        }\n        // emit event with task\n        emit VerificationAssigned(_wizID, taskId);\n    }\n\n/*\n        string IPFSHash; // holds description\n        uint40 NFTID; // wizard ID of who is assigned task\n        bytes32 hash; // hashed input to be validated\n        bytes32 refuterHash; // correct hash according to refuter\n        uint8 numFieldsToHash; // input fields\n        uint24 timeBonus; // increases Wizard's activation time, in seconds\n        uint80 payment; //\n        uint16 verifierID; // wizardId of Verifier\n        uint16 refuterID; // wizardId of Verifier\n        uint40 verificationReservedTimestamp; // time when verification period ends\n\n*/\n    function completeTask(string memory _IPFSHash, bytes32 _hash, uint40 _wizID) external {\n        // IPFS, hash, wizardID\n\n        // find the task type -- can't be too many\n        for(uint256 i = 0; i<taskTypes.length;){\n            if(keccak256(abi.encode(taskTypes[i].IPFSHash)) == keccak256(abi.encode(_IPFSHash))){ // hashed to compare\n                // verify it is viable\n                require(taskTypes[i].begTimestamp <= block.timestamp && block.timestamp <= taskTypes[i].endTimestamp, \"Outside time period\");\n                // create new task\n                Task memory myTask = Task(_IPFSHash,_wizID, _hash, 0, taskTypes[i].numFieldsToHash, taskTypes[i].timeBonus, 0, 0, 0, 0);\n                DoubleEndedQueue.pushBack(tasksSubmitted, bytes32(tasksAttempted));\n                tasks[tasksAttempted] = myTask;\n                tasksAttempted+=1;\n\n                // update TaskTypes\n                taskTypes[i].nextActiveTimeThreshold[_wizID] = block.timestamp + 1 days;\n\n                emit TaskCompleted(_wizID,tasksAttempted -1, _IPFSHash, block.timestamp);\n                break;\n            }\n            unchecked{++i;}\n        }\n        // failed\n\n\n    }\n\n    function testHashing(bytes32 _givenHash, bytes32[] memory _fields, bool _refuted) external {\n        bytes memory unencoded = abi.encodePacked(_fields[0]);\n        if(_refuted) {\n            for(uint256 i = 0; i < _fields.length;){\n                _fields[i] = keccak256(abi.encodePacked(_fields[i]));\n                unchecked{++i;}\n            }\n        }\n        bytes32 myHash = keccak256(abi.encodePacked(_fields));\n        emit HashTesting(myHash, myHash==_givenHash, _fields[0], unencoded);\n    }\n\n// working for regular but not refuted.\n//    function testHashing(bytes32 _givenHash, bytes32[] memory _fields, bool _refuted) external {\n//        bytes memory unencoded = abi.encodePacked(_fields[0]);\n//        if(_refuted) {\n//            for(uint256 i = 0; i < _fields.length;){\n//                _fields[i] = keccak256(abi.encodePacked(_fields[i]));\n//                unchecked{++i;}\n//            }\n//        }\n//        bytes32 myHash = keccak256(abi.encodePacked(_fields));\n//        emit HashTesting(myHash, myHash==_givenHash, _fields[0], unencoded);\n//    }\n\n\n\n    // @dev -- hash structure: leaves of merkle tree are hashed. Unrefuted tasks must send in hashed leafs. Refuted, unhashed.\n    function submitVerification(uint256 _wizId, uint256 _taskID, bytes32[] memory _fields) external {\n    //todo -- uncomment out requirement (testing)\n        require(wizardsNFT.ownerOf(_wizId) == msg.sender && tasks[_taskID].verifierID==_wizId, \"Must be owner of assigned wizard\");\n        require(_fields.length > 0);\n\n        Task storage myTask = tasks[_taskID];\n        uint256 count = 0;\n\n        // hash leaf if refuter exists\n        // todo -- redo our hashes as we are hashing not same throughout\n\n//        bytes32 myHash = myTask.refuterID > 0 ? keccak256(abi.encodePacked(_fields[0])) : _fields[0] ; // note -- not hashed\n//        for(uint256 i = 0; i < _fields.length;){\n//            myHash = keccak256(abi.encodePacked(myHash, myTask.refuterID > 0 ? keccak256(abi.encodePacked(_fields[i])) : _fields[i]));\n//            unchecked{++i;}\n//        }\n\n        // hash leaves if there is a refuter\n        if(myTask.refuterID > 0) {\n            for(uint256 i = 0; i < _fields.length;){\n                _fields[i] = keccak256(abi.encodePacked(_fields[i]));\n                unchecked{++i;}\n            }\n        }\n        bytes32 myHash = keccak256(abi.encodePacked(_fields));\n\n        uint256 correctHash = myTask.hash == myHash ? 1 : 0;\n\n        emit VerificationSucceeded(_wizId, myTask.NFTID, _taskID, myHash, correctHash==1);\n\n        if (correctHash ==1){\n            // if refuterId exists, then refuter gets no refund\n            uint256 split = myTask.payment/2;\n            address payable taskSubmitter = payable(wizardsNFT.ownerOf(myTask.verifierID));\n//            address payable verifier = msg.sender;\n\n\n            wizardsNFT.verifyDuty(myTask.NFTID, myTask.timeBonus);\n            wizardsNFT.verifyDuty(myTask.verifierID, taskVerificationTimeBonus);\n\n            myTask.payment=0; // thwart reentrancy attacks\n            delete tasks[_taskID];\n\n            // send to task submitter\n            (bool sent, bytes memory data) = taskSubmitter.call{value: split}(\"\");\n            require(sent, \"Failed to send Ether\");\n\n            // send to verifier\n            (sent, data) = msg.sender.call{value: split}(\"\");\n            require(sent, \"Failed to send Ether\");\n\n        }\n        else { // if incorrect Hash\n            // case 2 -- if no match, send to DAO\n\n            // case 1 -- if matches hash of refuter, split\n            if(myTask.refuterHash==myHash){\n                uint256 split = myTask.payment/2;\n                address payable taskRefuter = payable(wizardsNFT.ownerOf(myTask.refuterID));\n\n                wizardsNFT.verifyDuty(myTask.refuterID, taskVerificationTimeBonus);\n                wizardsNFT.verifyDuty(_wizId, taskVerificationTimeBonus);\n\n                myTask.payment=0; // thwart reentrancy attacks\n                delete tasks[_taskID];\n\n                // send to task submitter\n                (bool sent, bytes memory data) = taskRefuter.call{value: split}(\"\");\n                require(sent, \"Failed to send Ether\");\n\n                // send to verifier\n                (sent, data) = msg.sender.call{value: split}(\"\");\n                require(sent, \"Failed to send Ether\");\n\n                // emit event\n            }\n            else{\n                // no agreement in the 3 submissions\n                // send ETH to DAO\n                uint256 split = myTask.payment;\n                delete tasks[_taskID];\n                (bool sent, bytes memory data) = owner().call{value: split}(\"\"); // todo -- decide on how to structure DAO address\n                require(sent, \"Failed to send Ether\");\n\n                // emit event\n            }\n        }\n    }\n\n    //////////////////////\n    ////// Modifiers /////\n    //////////////////////\n\n    modifier onlyAdmin() {\n        require(false,'Must be admin');\n        _;\n    }\n\n    modifier onlyNFTOwner() {\n        require(false,'Must be admin');\n        _;\n    }\n\n    modifier onlyLessee() {\n        require(false,'Must be lessee');\n        _;\n    }\n\n    modifier onlyMember() { // todo -- onlyMember\n        require(false,'Must be member');\n        _;\n    }\n\n    // top x in tower?\n    modifier onlyBoard() {\n        require(true,'Must be on the board'); // todo -- onlyBoard\n        _;\n    }\n\n\n\n\n\n}",
  "sourceMap": "743:21017:2:-:0;;;2906:5;2879:32;;2967:6;2931:42;;9740:176;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1667:1:13;1778:7;:22;889:23:12;679:10:6;889:9:12;:23::i;:::-;9819:10:2;:26;;-1:-1:-1;;;;;;9819:26:2;-1:-1:-1;;;;;9819:26:2;;;;;;;;;;743:21017;;2101:173:12;2176:6;;;-1:-1:-1;;;;;2193:17:12;;;-1:-1:-1;;;;;;2193:17:12;;;;;;;2226:40;;2176:6;;;2193:17;2176:6;;2226:40;;2157:16;;2226:40;2146:128;2101:173;:::o;14:290:24:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:24;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:24:o;:::-;743:21017:2;;;;;;",
  "sourcePath": "contracts/Governance.sol",
  "type": "contract"
}